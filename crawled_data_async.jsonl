{"repo_url": "https://github.com/public-apis/public-apis", "path": ".github/ISSUE_TEMPLATE.md", "size": 163, "license": "MIT", "content_sha": "58b6570f6adf2ae628e36ddf5287518880f92f25", "findings": [], "content": "Thanks for looking to open an issue for this project.\n\nIf you are opening an issue to suggest adding a new entry, please consider opening a pull request instead!\n\n"}
{"repo_url": "https://github.com/public-apis/public-apis", "path": ".github/PULL_REQUEST_TEMPLATE.md", "size": 889, "license": "MIT", "content_sha": "e0b687238dba93091334f8b12ad123c43606841e", "findings": [], "content": "<!-- Thank you for taking the time to work on a Pull Request for this project! -->\n<!-- To ensure your PR is dealt with swiftly please check the following: -->\n- [ ] My submission is formatted according to the guidelines in the [contributing guide](/CONTRIBUTING.md)\n- [ ] My addition is ordered alphabetically\n- [ ] My submission has a useful description\n- [ ] The description does not have more than 100 characters\n- [ ] The description does not end with punctuation\n- [ ] Each table column is padded with one space on either side\n- [ ] I have searched the repository for any relevant issues or pull requests\n- [ ] Any category I am creating has the minimum requirement of 3 items\n- [ ] All changes have been [squashed][squash-link] into a single commit\n\n[squash-link]: <https://github.com/todotxt/todo.txt-android/wiki/Squash-All-Commits-Related-to-a-Single-Issue-into-a-Single-Commit>\n"}
{"repo_url": "https://github.com/public-apis/public-apis", "path": "CONTRIBUTING.md", "size": 6363, "license": "MIT", "content_sha": "760516eda5426da502415edf671037ea168cf748", "findings": [], "content": "# Contributing to public-apis\n\n> While the masses of pull requests and community involvement are appreciated, some pull requests have been specifically\nopened to market company APIs that offer paid solutions. This API list is not a marketing tool, but a tool to help the\ncommunity build applications and use free, public APIs quickly and easily. Pull requests that are identified as marketing attempts will not be accepted.\n>\n> Please make sure the API you want to add has full, free access or at least a free tier and does not depend on the purchase of a device/service before submitting.  An example that would be rejected is an API that is used to control a smart outlet - the API is free, but you must purchase the smart device.\n>\n> Thanks for understanding! :)\n\n## Formatting\n\nCurrent API entry format:\n\n| API | Description | Auth | HTTPS | CORS | Call this API |\n| --- | --- | --- | --- | --- | --- |\n| API Title(Link to API documentation) | Description of API | Does this API require authentication? * | Does the API support HTTPS? | Does the API support [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS)? * | [Does this API have a public Postman Collection?](https://learning.postman.com/docs/publishing-your-api/run-in-postman/creating-run-button/) | \n\nExample entry:\n\n```\n| [NASA](https://api.nasa.gov) | NASA data, including imagery | No | Yes | Yes | [Run in Postman Button]\n```\n\n\\* Currently, the only accepted inputs for the `Auth` field are as follows:\n\n* `OAuth` - _the API supports OAuth_\n* `apiKey` - _the API uses a private key string/token for authentication - try and use the correct parameter_\n* `X-Mashape-Key` - _the name of the header which may need to be sent_\n* `No` - _the API requires no authentication to run_\n* `User-Agent` - _the name of the header to be sent with requests to the API_\n\n\\* Currently, the only accepted inputs for the `CORS` field are as follows:\n\n* `Yes` - _the API supports CORS_\n* `No` - _the API does not support CORS_\n* `Unknown` - _it is unknown if the API supports CORS_\n\n\\* For the Call this API column, add a link to a Postman collection. You may need to [create a collection](https://learning.postman.com/docs/getting-started/first-steps/creating-the-first-collection/) to create a Run in Postman Button. \n\n\n_Without proper [CORS configuration](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) an API will only be usable server side._\n\nAfter you've created a branch on your fork with your changes, it's time to [make a pull request][pr-link]. \n\n\n*Please follow the guidelines given below while making a Pull Request to the Public APIs*\n\n## Pull Request Guidelines\n\n* Never put an update/new version of an API that is already listed, the old version of the API gets deprecated.\n* Continue to follow the alphabetical ordering that is in place per section.\n* Each table column should be padded with one space on either side.\n* The Description should not exceed 100 characters.\n* If an API seems to fall into multiple categories, please place the listing within the section most in line with the services offered through the API. For example, the Instagram API is listed under `Social` since it is mainly a social network, even though it could also apply to `Photography`.\n* Add one link per Pull Request.\n* Make sure the PR title is in the format of `Add Api-name API` *for e.g.*: `Add Blockchain API`\n* Use a short descriptive commit message. *for e.g.*: \u274c`Update Readme.md`  \u2714 `Add Blockchain API to Cryptocurrency`\n* Search previous Pull Requests or Issues before making a new one, as yours may be a duplicate.\n* Don't mention the TLD(Top Level Domain) in the name of the API. *for e.g.*: \u274cGmail.com \u2714Gmail\n* Please make sure the API name does not end with `API`. *for e.g.*: \u274cGmail API \u2714Gmail \n* Please make sure the API has proper documentation.\n* Please make sure you squash all commits together before opening a pull request. If your pull request requires changes upon review, please be sure to squash all additional commits as well. [This wiki page][squash-link] outlines the squash process.\n* Target your Pull Request to the `master` branch of the `public-apis`\n\nOnce you\u2019ve submitted a pull request, the collaborators can review your proposed changes and decide whether or not to incorporate (pull in) your changes.\n\n### Pull Request Pro Tips\n\n* [Fork][fork-link] the repository and [clone][clone-link] it locally.\nConnect your local repository to the original `upstream` repository by adding it as a [remote][remote-link].\nPull in changes from `upstream` often so that you stay up to date and so when you submit your pull request,\nmerge conflicts will be less likely. See more detailed instructions [here][syncing-link].\n* Create a [branch][branch-link] for your edits.\n* Contribute in the style of the project as outlined above. This makes it easier for the collaborators to merge\nand for others to understand and maintain in the future.\n\n### Open Pull Requests\n\nOnce you\u2019ve opened a pull request, a discussion will start around your proposed changes.\n\nOther contributors and users may chime in, but ultimately the decision is made by the collaborators.\n\nDuring the discussion, you may be asked to make some changes to your pull request.\n\nIf so, add more commits to your branch and push them \u2013 they will automatically go into the existing pull request. But don't forget to squash them.\n\nOpening a pull request will trigger a build to check the validity of all links in the project. After the build completes, **please ensure that the build has passed**. If the build did not pass, please view the build logs and correct any errors that were found in your contribution. \n\n*Thanks for being a part of this project, and we look forward to hearing from you soon!*\n\n[branch-link]: <http://guides.github.com/introduction/flow/>\n[clone-link]: <https://help.github.com/articles/cloning-a-repository/>\n[fork-link]: <http://guides.github.com/activities/forking/>\n[oauth-link]: <https://en.wikipedia.org/wiki/OAuth>\n[pr-link]: <https://help.github.com/articles/creating-a-pull-request/>\n[remote-link]: <https://help.github.com/articles/configuring-a-remote-for-a-fork/>\n[syncing-link]: <https://help.github.com/articles/syncing-a-fork>\n[squash-link]: <https://github.com/todotxt/todo.txt-android/wiki/Squash-All-Commits-Related-to-a-Single-Issue-into-a-Single-Commit>\n\n"}
{"repo_url": "https://github.com/public-apis/public-apis", "path": "README.md", "size": 192180, "license": "MIT", "content_sha": "316a2ee3dee0939870a777ea1410eb401a524ce3", "findings": [], "content": "# Try Public APIs for free\nThe Public APIs repository is manually curated by community members like you and folks working at [APILayer](https://apilayer.com/?utm_source=Github&utm_medium=Referral&utm_campaign=Public-apis-repo). It includes an extensive list of public APIs from many domains that you can use for your own products. Consider it a treasure trove of APIs well-managed by the community over the years.\n\n<br >\n\n<p>\n    <a href=\"https://apilayer.com\">\n        <div>\n            <img src=\".github/cs1586-APILayerLogoUpdate2022-LJ_v2-HighRes.png\" width=\"100%\" alt=\"APILayer Logo\" />\n        </div>\n    </a>\n  </p>\n\n[APILayer](https://apilayer.com/?utm_source=Github&utm_medium=Referral&utm_campaign=Public-apis-repo) is the fastest way to integrate APIs into any product. There are a lot of APIs available at [APILayer Marketplace](https://apilayer.com/#bestSellers&utm_source=Github&utm_medium=Referral&utm_campaign=Public-apis-repo).\n\n<br >\n\n## APILayer APIs\n| API | Description | Call this API |\n|:---|:---|:---|\n| [IP Stack](https://ipstack.com/?utm_source=Github&utm_medium=Referral&utm_campaign=Public-apis-repo-Best-sellers) | Locate and Identify Website Visitors by IP Address | [<img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\">](https://god.gw.postman.com/run-collection/10131015-55145132-244c-448c-8e6f-8780866e4862?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D10131015-55145132-244c-448c-8e6f-8780866e4862%26entityType%3Dcollection%26workspaceId%3D2b7498b6-6d91-4fa8-817f-608441fe42a8)|\n| [Marketstack](https://marketstack.com/?utm_source=Github&utm_medium=Referral&utm_campaign=Public-apis-repo-Best-sellers) | Free, easy-to-use REST API interface delivering worldwide stock market data in JSON format | [<img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\">](https://god.gw.postman.com/run-collection/10131015-9cbac391-3611-4f50-9bfd-d24ae41c97c1?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D10131015-9cbac391-3611-4f50-9bfd-d24ae41c97c1%26entityType%3Dcollection%26workspaceId%3D2b7498b6-6d91-4fa8-817f-608441fe42a8)|\n| [Weatherstack](https://weatherstack.com/?utm_source=Github&utm_medium=Referral&utm_campaign=Public-apis-repo-Best-sellers) | Retrieve instant, accurate weather information for any location in the world in lightweight JSON format | [<img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\">](https://god.gw.postman.com/run-collection/10131015-276c4312-f682-425d-b6b1-0f82c0a7f2b3?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D10131015-276c4312-f682-425d-b6b1-0f82c0a7f2b3%26entityType%3Dcollection%26workspaceId%3D2b7498b6-6d91-4fa8-817f-608441fe42a8)|\n| [Numverify](https://numverify.com/?utm_source=Github&utm_medium=Referral&utm_campaign=Public-apis-repo-Best-sellers ) | Global Phone Number Validation & Lookup JSON API |[<img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\">](https://god.gw.postman.com/run-collection/10131015-0760d25e-b802-412e-b0e4-26e5ca3b9ffa?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D10131015-0760d25e-b802-412e-b0e4-26e5ca3b9ffa%26entityType%3Dcollection%26workspaceId%3D2b7498b6-6d91-4fa8-817f-608441fe42a8)|\n| [Fixer](https://fixer.io/?utm_source=Github&utm_medium=Referral&utm_campaign=Public-apis-repo-Best-sellers) | Fixer is a simple and lightweight API for current and historical foreign exchange (forex) rates. |[<img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\">](https://god.gw.postman.com/run-collection/10131015-0d9c66b3-5f1a-42ed-a5ca-379217bd629d?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D10131015-0d9c66b3-5f1a-42ed-a5ca-379217bd629d%26entityType%3Dcollection%26workspaceId%3D2b7498b6-6d91-4fa8-817f-608441fe42a8)|\n\n<br >\n\n## Learn more about Public APIs\n\n<strong>Get Involved</strong>\n\n* [Contributing Guide](CONTRIBUTING.md)\n* [API for this project](https://github.com/davemachado/public-api)\n* [Issues](https://github.com/public-apis/public-apis/issues)\n* [Pull Requests](https://github.com/public-apis/public-apis/pulls)\n* [LICENSE](LICENSE) \n\n<br />\n\n## Index\n\n* [Animals](#animals)\n* [Anime](#anime)\n* [Anti-Malware](#anti-malware)\n* [Art & Design](#art--design)\n* [Authentication & Authorization](#authentication--authorization)\n* [Blockchain](#blockchain)\n* [Books](#books)\n* [Business](#business)\n* [Calendar](#calendar)\n* [Cloud Storage & File Sharing](#cloud-storage--file-sharing)\n* [Continuous Integration](#continuous-integration)\n* [Cryptocurrency](#cryptocurrency)\n* [Currency Exchange](#currency-exchange)\n* [Data Validation](#data-validation)\n* [Development](#development)\n* [Dictionaries](#dictionaries)\n* [Documents & Productivity](#documents--productivity)\n* [Email](#email)\n* [Entertainment](#entertainment)\n* [Environment](#environment)\n* [Events](#events)\n* [Finance](#finance)\n* [Food & Drink](#food--drink)\n* [Games & Comics](#games--comics)\n* [Geocoding](#geocoding)\n* [Government](#government)\n* [Health](#health)\n* [Jobs](#jobs)\n* [Machine Learning](#machine-learning)\n* [Music](#music)\n* [News](#news)\n* [Open Data](#open-data)\n* [Open Source Projects](#open-source-projects)\n* [Patent](#patent)\n* [Personality](#personality)\n* [Phone](#phone)\n* [Photography](#photography)\n* [Programming](#programming)\n* [Science & Math](#science--math)\n* [Security](#security)\n* [Shopping](#shopping)\n* [Social](#social)\n* [Sports & Fitness](#sports--fitness)\n* [Test Data](#test-data)\n* [Text Analysis](#text-analysis)\n* [Tracking](#tracking)\n* [Transportation](#transportation)\n* [URL Shorteners](#url-shorteners)\n* [Vehicle](#vehicle)\n* [Video](#video)\n* [Weather](#weather)\n<br >\n\n### Animals\nAPI | Description | Auth | HTTPS | CORS \n|:---|:---|:---|:---|:---|\n| [AdoptAPet](https://www.adoptapet.com/public/apis/pet_list.html) | Resource to help get pets adopted | `apiKey` | Yes | Yes |\n| [Axolotl](https://theaxolotlapi.netlify.app/) | Collection of axolotl pictures and facts | No | Yes | No |\n| [Cat Facts](https://alexwohlbruck.github.io/cat-facts/) | Daily cat facts | No | Yes | No | |\n| [Cataas](https://cataas.com/) | Cat as a service (cats pictures and gifs) | No | Yes | No |\n| [Cats](https://docs.thecatapi.com/) | Pictures of cats from Tumblr | `apiKey` | Yes | No |\n| [Dog Facts](https://dukengn.github.io/Dog-facts-API/) | Random dog facts | No | Yes | Yes |\n| [Dog Facts](https://kinduff.github.io/dog-api/) | Random facts of Dogs | No | Yes | Yes |\n| [Dogs](https://dog.ceo/dog-api/) | Based on the Stanford Dogs Dataset | No | Yes | Yes |\n| [eBird](https://documenter.getpostman.com/view/664302/S1ENwy59) | Retrieve recent or notable birding observations within a region | `apiKey` | Yes | No |\n| [FishWatch](https://www.fishwatch.gov/developers) | Information and pictures about individual fish species | No | Yes | Yes |\n| [HTTP Cat](https://http.cat/) | Cat for every HTTP Status | No | Yes | Yes |\n| [HTTP Dog](https://http.dog/) | Dogs for every HTTP response status code | No | Yes | Yes |\n| [IUCN](http://apiv3.iucnredlist.org/api/v3/docs) | IUCN Red List of Threatened Species | `apiKey` | No | No |\n| [MeowFacts](https://github.com/wh-iterabb-it/meowfacts) | Get random cat facts | No | Yes | No |\n| [Movebank](https://github.com/movebank/movebank-api-doc) | Movement and Migration data of animals | No | Yes | Yes |\n| [Petfinder](https://www.petfinder.com/developers/) | Petfinder is dedicated to helping pets find homes, another resource to get pets adopted | `apiKey` | Yes | Yes |\n| [PlaceBear](https://placebear.com/) | Placeholder bear pictures | No | Yes | Yes |\n| [PlaceDog](https://place.dog) | Placeholder Dog pictures | No | Yes | Yes |\n| [PlaceKitten](https://placekitten.com/) | Placeholder Kitten pictures | No | Yes | Yes |\n| [RandomDog](https://random.dog/woof.json) | Random pictures of dogs | No | Yes | Yes |\n| [RandomDuck](https://random-d.uk/api) | Random pictures of ducks | No | Yes | No |\n| [RandomFox](https://randomfox.ca/floof/) | Random pictures of foxes | No | Yes | No |\n| [RescueGroups](https://userguide.rescuegroups.org/display/APIDG/API+Developers+Guide+Home) | Adoption | No | Yes | Unknown |\n| [Shibe.Online](http://shibe.online/) | Random pictures of Shiba Inu, cats or birds | No | Yes | Yes |\n| [The Dog](https://thedogapi.com/) | A public service all about Dogs, free to use when making your fancy new App, Website or Service | `apiKey` | Yes | No |\n| [xeno-canto](https://xeno-canto.org/explore/api) | Bird recordings | No | Yes | Unknown |\n| [Zoo Animals](https://zoo-animal-api.herokuapp.com/) | Facts and pictures of zoo animals | No | Yes | Yes |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n\n### Anime\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [AniAPI](https://aniapi.com/docs/) | Anime discovery, streaming & syncing with trackers | `OAuth` | Yes | Yes |\n| [AniDB](https://wiki.anidb.net/HTTP_API_Definition) | Anime Database | `apiKey` | No | Unknown |\n| [AniList](https://github.com/AniList/ApiV2-GraphQL-Docs) | Anime discovery & tracking | `OAuth` | Yes | Unknown |\n| [AnimeChan](https://github.com/RocktimSaikia/anime-chan) | Anime quotes (over 10k+) | No | Yes | No |\n| [AnimeFacts](https://chandan-02.github.io/anime-facts-rest-api/) | Anime Facts (over 100+) | No | Yes | Yes |\n| [AnimeNewsNetwork](https://www.animenewsnetwork.com/encyclopedia/api.php) | Anime industry news | No | Yes | Yes |\n| [Catboy](https://catboys.com/api) | Neko images, funny GIFs & more | No | Yes | Yes |\n| [Danbooru Anime](https://danbooru.donmai.us/wiki_pages/help:api) | Thousands of anime artist database to find good anime art | `apiKey` | Yes | Yes |\n| [Jikan](https://jikan.moe) | Unofficial MyAnimeList API | No | Yes | Yes |\n| [Kitsu](https://kitsu.docs.apiary.io/) | Anime discovery platform | `OAuth` | Yes | Yes |\n| [MangaDex](https://api.mangadex.org/docs.html) | Manga Database and Community | `apiKey` | Yes | Unknown |\n| [Mangapi](https://rapidapi.com/pierre.carcellermeunier/api/mangapi3/) | Translate manga pages from one language to another | `apiKey` | Yes | Unknown |\n| [MyAnimeList](https://myanimelist.net/clubs.php?cid=13727) | Anime and Manga Database and Community | `OAuth` | Yes | Unknown |\n| [NekosBest](https://docs.nekos.best) | Neko Images & Anime roleplaying GIFs | No | Yes | Yes |\n| [Shikimori](https://shikimori.one/api/doc) | Anime discovery, tracking, forum, rates | `OAuth` | Yes | Unknown |\n| [Studio Ghibli](https://ghibliapi.herokuapp.com) | Resources from Studio Ghibli films | No | Yes | Yes |\n| [Trace Moe](https://soruly.github.io/trace.moe-api/#/) | A useful tool to get the exact scene of an anime from a screenshot | No | Yes | No |\n| [Waifu.im](https://waifu.im/docs) | Get waifu pictures from an archive of over 4000 images and multiple tags | No | Yes | Yes |\n| [Waifu.pics](https://waifu.pics/docs) | Image sharing platform for anime images | No | Yes | No |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n\n### Anti-Malware\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [AbuseIPDB](https://docs.abuseipdb.com/) | IP/domain/URL reputation | `apiKey` | Yes | Unknown |\n| [AlienVault Open Threat Exchange (OTX)](https://otx.alienvault.com/api) | IP/domain/URL reputation | `apiKey` | Yes | Unknown |\n| [CAPEsandbox](https://capev2.readthedocs.io/en/latest/usage/api.html) | Malware execution and analysis | `apiKey` | Yes | Unknown |\n| [Google Safe Browsing](https://developers.google.com/safe-browsing/) | Google Link/Domain Flagging | `apiKey` | Yes | Unknown |\n| [MalDatabase](https://maldatabase.com/api-doc.html) | Provide malware datasets and threat intelligence feeds | `apiKey` | Yes | Unknown |\n| [MalShare](https://malshare.com/doc.php) | Malware Archive / file sourcing | `apiKey` | Yes | No |\n| [MalwareBazaar](https://bazaar.abuse.ch/api/) | Collect and share malware samples | `apiKey` | Yes | Unknown |\n| [Metacert](https://metacert.com/) | Metacert Link Flagging | `apiKey` | Yes | Unknown |\n| [NoPhishy](https://rapidapi.com/Amiichu/api/exerra-phishing-check/) | Check links to see if they're known phishing attempts | `apiKey` | Yes | Yes |\n| [Phisherman](https://phisherman.gg/) | IP/domain/URL reputation | `apiKey` | Yes | Unknown |\n| [Scanii](https://docs.scanii.com/) | Simple REST API that can scan submitted documents/files for the presence of threats | `apiKey` | Yes | Yes |\n| [URLhaus](https://urlhaus-api.abuse.ch/) | Bulk queries and Download Malware Samples | No | Yes | Yes |\n| [URLScan.io](https://urlscan.io/about-api/) | Scan and Analyse URLs | `apiKey` | Yes | Unknown |\n| [VirusTotal](https://www.virustotal.com/en/documentation/public-api/) | VirusTotal File/URL Analysis | `apiKey` | Yes | Unknown |\n| [Web of Trust](https://support.mywot.com/hc/en-us/sections/360004477734-API-) | IP/domain/URL reputation | `apiKey` | Yes | Unknown | \n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Art & Design\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Am\u00e9thyste](https://api.amethyste.moe/) | Generate images for Discord users | `apiKey` | Yes | Unknown |\n| [Art Institute of Chicago](https://api.artic.edu/docs/) | Art | No | Yes | Yes |\n| [Colormind](http://colormind.io/api-access/) | Color scheme generator | No | No | Unknown |\n| [ColourLovers](http://www.colourlovers.com/api) | Get various patterns, palettes and images | No | No | Unknown |\n| [Cooper Hewitt](https://collection.cooperhewitt.org/api) | Smithsonian Design Museum | `apiKey` | Yes | Unknown |\n| [Dribbble](https://developer.dribbble.com) | Discover the world\u2019s top designers & creatives | `OAuth` | Yes | Unknown |\n| [EmojiHub](https://github.com/cheatsnake/emojihub) | Get emojis by categories and groups | No | Yes | Yes |\n| [Europeana](https://pro.europeana.eu/resources/apis/search) | European Museum and Galleries content | `apiKey` | Yes | Unknown |\n| [Harvard Art Museums](https://github.com/harvardartmuseums/api-docs) | Art | `apiKey` | No | Unknown |\n| [Icon Horse](https://icon.horse) | Favicons for any website, with fallbacks | No | Yes | Yes |\n| [Iconfinder](https://developer.iconfinder.com) | Icons | `apiKey` | Yes | Unknown |\n| [Icons8](https://img.icons8.com/) | Icons (find \"search icon\" hyperlink in page) | No | Yes | Unknown |\n| [Lordicon](https://lordicon.com/) | Icons with predone Animations | No | Yes | Yes |\n| [Metropolitan Museum of Art](https://metmuseum.github.io/) | Met Museum of Art | No | Yes | No |\n| [Noun Project](http://api.thenounproject.com/index.html) | Icons | `OAuth` | No | Unknown |\n| [PHP-Noise](https://php-noise.com/) | Noise Background Image Generator | No | Yes | Yes |\n| [Pixel Encounter](https://pixelencounter.com/api) | SVG Icon Generator | No | Yes | No |\n| [Rijksmuseum](https://data.rijksmuseum.nl/object-metadata/api/) | RijksMuseum Data | `apiKey` | Yes | Unknown |\n| [Word Cloud](https://wordcloudapi.com/) | Easily create word clouds | `apiKey` | Yes | Unknown |\n| [xColors](https://x-colors.herokuapp.com/) | Generate & convert colors | No | Yes | Yes |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Authentication & Authorization\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Auth0](https://auth0.com) | Easy to implement, adaptable authentication and authorization platform | `apiKey` | Yes | Yes |\n| [GetOTP](https://otp.dev/en/docs/) | Implement OTP flow quickly | `apiKey` | Yes | No |\n| [Micro User Service](https://m3o.com/user) | User management and authentication | `apiKey` | Yes | No |\n| [MojoAuth](https://mojoauth.com) | Secure and modern passwordless authentication platform | `apiKey` | Yes | Yes |\n| [SAWO Labs](https://sawolabs.com) | Simplify login and improve user experience by integrating passwordless authentication in your app | `apiKey` | Yes | Yes |\n| [Stytch](https://stytch.com/) | User infrastructure for modern applications | `apiKey` | Yes | No |\n| [Warrant](https://warrant.dev/) | APIs for authorization and access control | `apiKey` | Yes | Yes |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Blockchain\n| API | Description | Auth | HTTPS | CORS |\n|---|:---|:---|:---|:---|\n| [Bitquery](https://graphql.bitquery.io/ide) | Onchain GraphQL APIs & DEX APIs | `apiKey` | Yes | Yes |\n| [Chainlink](https://chain.link/developer-resources) | Build hybrid smart contracts with Chainlink | No | Yes | Unknown |\n| [Chainpoint](https://tierion.com/chainpoint/) | Chainpoint is a global network for anchoring data to the Bitcoin blockchain | No | Yes | Unknown |\n| [Covalent](https://www.covalenthq.com/docs/api/) | Multi-blockchain data aggregator platform | `apiKey` | Yes | Unknown |\n| [Etherscan](https://etherscan.io/apis) | Ethereum explorer API | `apiKey` | Yes | Yes |\n| [Helium](https://docs.helium.com/api/blockchain/introduction/) | Helium is a global, distributed network of Hotspots that create public, long-range wireless coverage | No | Yes | Unknown |\n| [Nownodes](https://nownodes.io/) | Blockchain-as-a-service solution that provides high-quality connection via API | `apiKey` | Yes | Unknown |\n| [Steem](https://developers.steem.io/) | Blockchain-based blogging and social media website | No | No | No |\n| [The Graph](https://thegraph.com) | Indexing protocol for querying networks like Ethereum with GraphQL | `apiKey` | Yes | Unknown |\n| [Walltime](https://walltime.info/api.html) | To retrieve Walltime's market info | No | Yes | Unknown |\n| [Watchdata](https://docs.watchdata.io) | Provide simple and reliable API access to Ethereum blockchain | `apiKey` | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Books\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [A B\u00edblia Digital](https://www.abibliadigital.com.br/en) | Do not worry about managing the multiple versions of the Bible | `apiKey` | Yes | No |\n| [Bhagavad Gita](https://docs.bhagavadgitaapi.in) | Open Source Shrimad Bhagavad Gita API including 21+ authors translation in Sanskrit/English/Hindi | `apiKey` | Yes | Yes |\n| [Bhagavad Gita](https://bhagavadgita.io/api) | Bhagavad Gita text | `OAuth` | Yes | Yes |\n| [Bhagavad Gita telugu](https://gita-api.vercel.app) | Bhagavad Gita API in telugu and odia languages | No | Yes | Yes |\n| [Bible-api](https://bible-api.com/) | Free Bible API with multiple languages | No | Yes | Yes |\n| [British National Bibliography](http://bnb.data.bl.uk/) | Books | No | No | Unknown |\n| [Crossref Metadata Search](https://github.com/CrossRef/rest-api-doc) | Books & Articles Metadata | No | Yes | Unknown |\n| [Ganjoor](https://api.ganjoor.net) | Classic Persian poetry works including access to related manuscripts, recitations and music tracks | `OAuth` | Yes | Yes |\n| [Google Books](https://developers.google.com/books/) | Books | `OAuth` | Yes | Unknown |\n| [GurbaniNow](https://github.com/GurbaniNow/api) | Fast and Accurate Gurbani RESTful API | No | Yes | Unknown |\n| [Gutendex](https://gutendex.com/) | Web-API for fetching data from Project Gutenberg Books Library | No | Yes | Unknown |\n| [Open Library](https://openlibrary.org/developers/api) | Books, book covers and related data | No | Yes | No |\n| [Penguin Publishing](http://www.penguinrandomhouse.biz/webservices/rest/) | Books, book covers and related data | No | Yes | Yes |\n| [PoetryDB](https://github.com/thundercomb/poetrydb#readme) | Enables you to get instant data from our vast poetry collection | No | Yes | Yes |\n| [Quran](https://quran.api-docs.io/) | RESTful Quran API with multiple languages | No | Yes | Yes |\n| [Quran Cloud](https://alquran.cloud/api) | A RESTful Quran API to retrieve an Ayah, Surah, Juz or the entire Holy Quran | No | Yes | Yes |\n| [Quran-api](https://github.com/fawazahmed0/quran-api#readme) | Free Quran API Service with 90+ different languages and 400+ translations | No | Yes | Yes |\n| [Rig Veda](https://aninditabasu.github.io/indica/html/rv.html) | Gods and poets, their categories, and the verse meters, with the mandal and sukta number | No | Yes | Unknown |\n| [The Bible](https://docs.api.bible) | Everything you need from the Bible in one discoverable place | `apiKey` | Yes | Unknown |\n| [Thirukkural](https://api-thirukkural.web.app/) | 1330 Thirukkural poems and explanation in Tamil and English | No | Yes | Yes |\n| [Vedic Society](https://aninditabasu.github.io/indica/html/vs.html) | Descriptions of all nouns (names, places, animals, things) from vedic literature | No | Yes | Unknown |\n| [Wizard World](https://wizard-world-api.herokuapp.com/swagger/index.html) | Get information from the Harry Potter universe | No | Yes | Yes |\n| [Wolne Lektury](https://wolnelektury.pl/api/) | API for obtaining information about e-books available on the WolneLektury.pl website | No | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Business\nAPI | Description | Auth | HTTPS | CORS |\n|---|:---|:---|:---|:---|\n| [Apache Superset](https://superset.apache.org/docs/api) | API to manage your BI dashboards and data sources on Superset | `apiKey` | Yes | Yes |\n| [Charity Search](http://charityapi.orghunter.com/) | Non-profit charity data | `apiKey` | No | Unknown \n| [Clearbit Logo](https://clearbit.com/docs#logo-api) | Search for company logos and embed them in your projects | `apiKey` | Yes | Unknown |\n| [Domainsdb.info](https://domainsdb.info/) | Registered Domain Names Search | No | Yes | No |\n| [Freelancer](https://developers.freelancer.com) | Hire freelancers to get work done | `OAuth` | Yes | Unknown |\n| [Gmail](https://developers.google.com/gmail/api/) | Flexible, RESTful access to the user's inbox | `OAuth` | Yes | Unknown |\n| [Google Analytics](https://developers.google.com/analytics/) | Collect, configure and analyze your data to reach the right audience | `OAuth` | Yes | Unknown |\n| [Instatus](https://instatus.com/help/api) | Post to and update maintenance and incidents on your status page through an HTTP REST API | `apiKey` | Yes | Unknown |\n| [Mailchimp](https://mailchimp.com/developer/) | Send marketing campaigns and transactional mails | `apiKey` | Yes | Unknown |\n| [mailjet](https://www.mailjet.com/) | Marketing email can be sent and mail templates made in MJML or HTML can be sent using API | `apiKey` | Yes | Unknown |\n| [markerapi](https://markerapi.com) | Trademark Search | No | No | Unknown |\n| [ORB Intelligence](https://api.orb-intelligence.com/docs/) | Company lookup | `apiKey` | Yes | Unknown |\n| [Redash](https://redash.io/help/user-guide/integrations-and-api/api) | Access your queries and dashboards on Redash | `apiKey` | Yes | Yes |\n| [Smartsheet](https://smartsheet.redoc.ly/) | Allows you to programmatically access and Smartsheet data and account information | `OAuth` | Yes | No |\n| [Square](https://developer.squareup.com/reference/square) | Easy way to take payments, manage refunds, and help customers checkout online | `OAuth` | Yes | Unknown |\n| [SwiftKanban](https://www.digite.com/knowledge-base/swiftkanban/article/api-for-swift-kanban-web-services/#restapi) | Kanban software, Visualize Work, Increase Organizations Lead Time, Throughput & Productivity | `apiKey` | Yes | Unknown |\n| [Tenders in Hungary](https://tenders.guru/hu/api) | Get data for procurements in Hungary in JSON format | No | Yes | Unknown |\n| [Tenders in Poland](https://tenders.guru/pl/api) | Get data for procurements in Poland in JSON format | No | Yes | Unknown |\n| [Tenders in Romania](https://tenders.guru/ro/api) | Get data for procurements in Romania in JSON format | No | Yes | Unknown |\n| [Tenders in Spain](https://tenders.guru/es/api) | Get data for procurements in Spain in JSON format | No | Yes | Unknown |\n| [Tenders in Ukraine](https://tenders.guru/ua/api) | Get data for procurements in Ukraine in JSON format | No | Yes | Unknown |\n| [Tomba email finder](https://tomba.io/api) | Email Finder for B2B sales and email marketing and email verifier | `apiKey` | Yes | Yes |\n| [Trello](https://developers.trello.com/) | Boards, lists and cards to help you organize and prioritize your projects | `OAuth` | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Calendar\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Abstract Public Holidays](https://www.abstractapi.com/holidays-api) | Data on national, regional, and religious holidays via API | `apiKey` | Yes | Yes |\n| [Calendarific](https://calendarific.com/) | Worldwide Holidays | `apiKey` | Yes | Unknown |\n| [Checkiday - National Holiday API](https://apilayer.com/marketplace/checkiday-api) | Industry-leading Holiday API. Over 5,000 holidays and thousands of descriptions. Trusted by the World\u2019s leading companies | `apiKey` | Yes | Unknown |\n| [Church Calendar](http://calapi.inadiutorium.cz/) | Catholic liturgical calendar | No | No | Unknown |\n| [Czech Namedays Calendar](https://svatky.adresa.info) | Lookup for a name and returns nameday date | No | No | Unknown |\n| [Festivo Public Holidays](https://docs.getfestivo.com/docs/products/public-holidays-api/intro) | Fastest and most advanced public holiday and observance service on the market | `apiKey` | Yes | Yes |\n| [Google Calendar](https://developers.google.com/google-apps/calendar/) | Display, create and modify Google calendar events | `OAuth` | Yes | Unknown |\n| [Hebrew Calendar](https://www.hebcal.com/home/developer-apis) | Convert between Gregorian and Hebrew, fetch Shabbat and Holiday times, etc | No | No | Unknown |\n| [Holidays](https://holidayapi.com/) | Historical data regarding holidays | `apiKey` | Yes | Unknown |\n| [LectServe](http://www.lectserve.com) | Protestant liturgical calendar | No | No | Unknown |\n| [Nager.Date](https://date.nager.at) | Public holidays for more than 90 countries | No | Yes | No |\n| [Namedays Calendar](https://nameday.abalin.net) | Provides namedays for multiple countries | No | Yes | Yes |\n| [Non-Working Days](https://github.com/gadael/icsdb) | Database of ICS files for non working days | No | Yes | Unknown |\n| [Non-Working Days](https://isdayoff.ru) | Simple REST API for checking working, non-working or short days for Russia, CIS, USA and other | No | Yes | Yes |\n| [Russian Calendar](https://github.com/egno/work-calendar) | Check if a date is a Russian holiday or not | No | Yes | No |\n| [UK Bank Holidays](https://www.gov.uk/bank-holidays.json) | Bank holidays in England and Wales, Scotland and Northern Ireland | No | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Cloud Storage & File Sharing\nAPI | Description | Auth | HTTPS | CORS |\n|---|:---|:---|:---|:---|\n| [AnonFiles](https://anonfiles.com/docs/api) | Upload and share your files anonymously | No | Yes | Unknown | |\n| [BayFiles](https://bayfiles.com/docs/api) | Upload and share your files | No | Yes | Unknown | |\n| [Box](https://developer.box.com/) | File Sharing and Storage | `OAuth` | Yes | Unknown | |\n| [ddownload](https://ddownload.com/api) | File Sharing and Storage | `apiKey` | Yes | Unknown | |\n| [Dropbox](https://www.dropbox.com/developers) | File Sharing and Storage | `OAuth` | Yes | Unknown | |\n| [File.io](https://www.file.io) | Super simple file sharing, convenient, anonymous and secure | No | Yes | Unknown | |\n| [Filestack](https://www.filestack.com) | Filestack File Uploader & File Upload API | `apiKey` | Yes | Unknown |    |\n| [GoFile](https://gofile.io/api) | Unlimited size file uploads for free | `apiKey` | Yes | Unknown | |\n| [Google Drive](https://developers.google.com/drive/) | File Sharing and Storage | `OAuth` | Yes | Unknown | |\n| [Gyazo](https://gyazo.com/api/docs) | Save & Share screen captures instantly | `apiKey` | Yes | Unknown | |\n| [Imgbb](https://api.imgbb.com/) | Simple and quick private image sharing | `apiKey` | Yes | Unknown | |\n| [OneDrive](https://developer.microsoft.com/onedrive) | File Sharing and Storage | `OAuth` | Yes | Unknown | |\n| [Pantry](https://getpantry.cloud/) | Free JSON storage for small projects | No | Yes | Yes | |\n| [Pastebin](https://pastebin.com/doc_api) | Plain Text Storage | `apiKey` | Yes | Unknown | |\n| [Pinata](https://docs.pinata.cloud/) | IPFS Pinning Services API | `apiKey` | Yes | Unknown | |\n| [Quip](https://quip.com/dev/automation/documentation) | File Sharing and Storage for groups | `apiKey` | Yes | Yes | |\n| [Storj](https://docs.storj.io/dcs/) | Decentralized Open-Source Cloud Storage | `apiKey` | Yes | Unknown | |\n| [The Null Pointer](https://0x0.st) | No-bullshit file hosting and URL shortening service | No | Yes | Unknown | |\n| [Web3 Storage](https://web3.storage/) | File Sharing and Storage for Free with 1TB Space | `apiKey` | Yes | Yes | |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Continuous Integration\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Azure DevOps Health](https://docs.microsoft.com/en-us/rest/api/resourcehealth) | Resource health helps you diagnose and get support when an Azure issue impacts your resources | `apiKey` | No | No |\n| [Bitrise](https://api-docs.bitrise.io/) | Build tool and processes integrations to create efficient development pipelines | `apiKey` | Yes | Unknown |\n| [Buddy](https://buddy.works/docs/api/getting-started/overview) | The fastest continuous integration and continuous delivery platform | `OAuth` | Yes | Unknown |\n| [CircleCI](https://circleci.com/docs/api/v1-reference/) | Automate the software development process using continuous integration and continuous delivery | `apiKey` | Yes | Unknown |\n| [Codeship](https://docs.cloudbees.com/docs/cloudbees-codeship/latest/api-overview/) | Codeship is a Continuous Integration Platform in the cloud | `apiKey` | Yes | Unknown |\n| [Travis CI](https://docs.travis-ci.com/api/) | Sync your GitHub projects with Travis CI to test your code in minutes | `apiKey` | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Cryptocurrency\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [0x](https://0x.org/api) | API for querying token and pool stats across various liquidity pools | No | Yes | Yes |\n| [1inch](https://1inch.io/api/) | API for querying decentralize exchange | No | Yes | Unknown |\n| [Alchemy Ethereum](https://docs.alchemy.com/alchemy/) | Ethereum Node-as-a-Service Provider | `apiKey` | Yes | Yes |\n| [apilayer coinlayer](https://coinlayer.com) | Real-time Crypto Currency Exchange Rates | `apiKey` | Yes | Unknown |\n| [Binance](https://github.com/binance/binance-spot-api-docs) | Exchange for Trading Cryptocurrencies based in China | `apiKey` | Yes | Unknown |\n| [Bitcambio](https://nova.bitcambio.com.br/api/v3/docs#a-public) | Get the list of all traded assets in the exchange | No | Yes | Unknown |\n| [BitcoinAverage](https://apiv2.bitcoinaverage.com/) | Digital Asset Price Data for the blockchain industry | `apiKey` | Yes | Unknown |\n| [BitcoinCharts](https://bitcoincharts.com/about/exchanges/) | Financial and Technical Data related to the Bitcoin Network | No | Yes | Unknown |\n| [Bitfinex](https://docs.bitfinex.com/docs) | Cryptocurrency Trading Platform | `apiKey` | Yes | Unknown |\n| [Bitmex](https://www.bitmex.com/app/apiOverview) | Real-Time Cryptocurrency derivatives trading platform based in Hong Kong | `apiKey` | Yes | Unknown |\n| [Bittrex](https://bittrex.github.io/api/v3) | Next Generation Crypto Trading Platform | `apiKey` | Yes | Unknown |\n| [Block](https://block.io/docs/basic) | Bitcoin Payment, Wallet & Transaction Data | `apiKey` | Yes | Unknown |\n| [Blockchain](https://www.blockchain.com/api) | Bitcoin Payment, Wallet & Transaction Data | `apiKey` | Yes | Unknown |\n| [blockfrost Cardano](https://blockfrost.io/) | Interaction with the Cardano mainnet and several testnets | `apiKey` | Yes | Unknown |\n| [Brave NewCoin](https://bravenewcoin.com/developers) | Real-time and historic crypto data from more than 200+ exchanges | `apiKey` | Yes | Unknown |\n| [BtcTurk](https://docs.btcturk.com/) | Real-time cryptocurrency data, graphs and API that allows buy&sell | `apiKey` | Yes | Yes |\n| [Bybit](https://bybit-exchange.github.io/docs/linear/#t-introduction) | Cryptocurrency data feed and algorithmic trading | `apiKey` | Yes | Unknown |\n| [CoinAPI](https://docs.coinapi.io/) | All Currency Exchanges integrate under a single api | `apiKey` | Yes | No |\n| [Coinbase](https://developers.coinbase.com) | Bitcoin, Bitcoin Cash, Litecoin and Ethereum Prices | `apiKey` | Yes | Unknown |\n| [Coinbase Pro](https://docs.pro.coinbase.com/#api) | Cryptocurrency Trading Platform | `apiKey` | Yes | Unknown |\n| [CoinCap](https://docs.coincap.io/) | Real time Cryptocurrency prices through a RESTful API | No | Yes | Unknown |\n| [CoinDCX](https://docs.coindcx.com/) | Cryptocurrency Trading Platform | `apiKey` | Yes | Unknown |\n| [CoinDesk](https://old.coindesk.com/coindesk-api/) | CoinDesk's Bitcoin Price Index (BPI) in multiple currencies | No | Yes | Unknown |\n| [CoinGecko](http://www.coingecko.com/api) | Cryptocurrency Price, Market, and Developer/Social Data | No | Yes | Yes |\n| [Coinigy](https://coinigy.docs.apiary.io) | Interacting with Coinigy Accounts and Exchange Directly | `apiKey` | Yes | Unknown |\n| [Coinlib](https://coinlib.io/apidocs) | Crypto Currency Prices | `apiKey` | Yes | Unknown |\n| [Coinlore](https://www.coinlore.com/cryptocurrency-data-api) | Cryptocurrencies prices, volume and more | No | Yes | Unknown |\n| [CoinMarketCap](https://coinmarketcap.com/api/) | Cryptocurrencies Prices | `apiKey` | Yes | Unknown |\n| [Coinpaprika](https://api.coinpaprika.com) | Cryptocurrencies prices, volume and more | No | Yes | Yes |\n| [CoinRanking](https://developers.coinranking.com/api/documentation) | Live Cryptocurrency data | `apiKey` | Yes | Unknown |\n| [Coinremitter](https://coinremitter.com/docs) | Cryptocurrencies Payment & Prices | `apiKey` | Yes | Unknown |\n| [CoinStats](https://documenter.getpostman.com/view/5734027/RzZ6Hzr3?version=latest) | Crypto Tracker | No | Yes | Unknown |\n| [CryptAPI](https://docs.cryptapi.io/) | Cryptocurrency Payment Processor | No | Yes | Unknown |\n| [CryptingUp](https://www.cryptingup.com/apidoc/#introduction) | Cryptocurrency data | No | Yes | Unknown |\n| [CryptoCompare](https://www.cryptocompare.com/api#) | Cryptocurrencies Comparison | No | Yes | Unknown |\n| [CryptoMarket](https://api.exchange.cryptomkt.com/) | Cryptocurrencies Trading platform | `apiKey` | Yes | Yes |\n| [Cryptonator](https://www.cryptonator.com/api/) | Cryptocurrencies Exchange Rates | No | Yes | Unknown |\n| [dYdX](https://docs.dydx.exchange/) | Decentralized cryptocurrency exchange | `apiKey` | Yes | Unknown |\n| [Ethplorer](https://github.com/EverexIO/Ethplorer/wiki/Ethplorer-API) | Ethereum tokens, balances, addresses, history of transactions, contracts, and custom structures | `apiKey` | Yes | Unknown |\n| [EXMO](https://documenter.getpostman.com/view/10287440/SzYXWKPi) | Cryptocurrencies exchange based in UK | `apiKey` | Yes | Unknown |\n| [FTX](https://docs.ftx.com/) | Complete REST, websocket, and FTX APIs to suit your algorithmic trading needs | `apiKey` | Yes | Yes |\n| [Gateio](https://www.gate.io/api2) | API provides spot, margin and futures trading operations | `apiKey` | Yes | Unknown |\n| [Gemini](https://docs.gemini.com/rest-api/) | Cryptocurrencies Exchange | No | Yes | Unknown |\n| [Hirak Exchange Rates](https://rates.hirak.site/) | Exchange rates between 162 currency & 300 crypto currency update each 5 min, accurate, no limits | `apiKey` | Yes | Unknown |\n| [Huobi](https://huobiapi.github.io/docs/spot/v1/en/) | Seychelles based cryptocurrency exchange | `apiKey` | Yes | Unknown |\n| [icy.tools](https://developers.icy.tools/) | GraphQL based NFT API | `apiKey` | Yes | Unknown |\n| [Indodax](https://github.com/btcid/indodax-official-api-docs) | Trade your Bitcoin and other assets with rupiah | `apiKey` | Yes | Unknown |\n| [INFURA Ethereum](https://infura.io/product/ethereum) | Interaction with the Ethereum mainnet and several testnets | `apiKey` | Yes | Yes |\n| [Kraken](https://docs.kraken.com/rest/) | Cryptocurrencies Exchange | `apiKey` | Yes | Unknown |\n| [KuCoin](https://docs.kucoin.com/) | Cryptocurrency Trading Platform | `apiKey` | Yes | Unknown |\n| [Localbitcoins](https://localbitcoins.com/api-docs/) | P2P platform to buy and sell Bitcoins | No | Yes | Unknown |\n| [Mempool](https://mempool.space/api) | Bitcoin API Service focusing on the transaction fee | No | Yes | No |\n| [MercadoBitcoin](https://www.mercadobitcoin.com.br/api-doc/) | Brazilian Cryptocurrency Information | No | Yes | Unknown |\n| [Messari](https://messari.io/api) | Provides API endpoints for thousands of crypto assets | No | Yes | Unknown |\n| [Nexchange](https://nexchange2.docs.apiary.io/) | Automated cryptocurrency exchange service | No | No | Yes |\n| [Nomics](https://nomics.com/docs/) | Historical and realtime cryptocurrency prices and market data | `apiKey` | Yes | Yes |\n| [NovaDax](https://doc.novadax.com/en-US/#introduction) | NovaDAX API to access all market data, trading management endpoints | `apiKey` | Yes | Unknown |\n| [OKEx](https://www.okex.com/docs/) | Cryptocurrency exchange based in Seychelles | `apiKey` | Yes | Unknown |\n| [Poloniex](https://docs.poloniex.com) | US based digital asset exchange | `apiKey` | Yes | Unknown |\n| [Solana JSON RPC](https://docs.solana.com/developing/clients/jsonrpc-api) | Provides various endpoints to interact with the Solana Blockchain | No | Yes | Unknown |\n| [Technical Analysis](https://technical-analysis-api.com) | Cryptocurrency prices and technical analysis | `apiKey` | Yes | No |\n| [VALR](https://docs.valr.com/) | Cryptocurrency Exchange based in South Africa | `apiKey` | Yes | Unknown |\n| [WorldCoinIndex](https://www.worldcoinindex.com/apiservice) | Cryptocurrencies Prices | `apiKey` | Yes | Unknown |\n| [ZMOK](https://zmok.io) | Ethereum JSON RPC API and Web3 provider | No | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Currency Exchange\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [1Forge](https://1forge.com/forex-data-api/api-documentation) | Forex currency market data | `apiKey` | Yes | Unknown |\n| [Amdoren](https://www.amdoren.com/currency-api/) | Free currency API with over 150 currencies | `apiKey` | Yes | Unknown |\n| [apilayer fixer.io](https://fixer.io) | Exchange rates and currency conversion | `apiKey` | No | Unknown |\n| [Bank of Russia](https://www.cbr.ru/development/SXML/) | Exchange rates and currency conversion | No | Yes | Unknown |\n| [Currency-api](https://github.com/fawazahmed0/currency-api#readme) | Free Currency Exchange Rates API with 150+ Currencies & No Rate Limits | No | Yes | Yes |\n| [CurrencyFreaks](https://currencyfreaks.com/) | Provides current and historical currency exchange rates with free plan 1K requests/month | `apiKey` | Yes | Yes |\n| [Currencylayer](https://currencylayer.com/documentation) | Exchange rates and currency conversion | `apiKey` | Yes | Unknown |\n| [CurrencyScoop](https://currencyscoop.com/api-documentation) | Real-time and historical currency rates JSON API | `apiKey` | Yes | Yes |\n| [Czech National Bank](https://www.cnb.cz/cs/financni_trhy/devizovy_trh/kurzy_devizoveho_trhu/denni_kurz.xml) | A collection of exchange rates | No | Yes | Unknown |\n| [Economia.Awesome](https://docs.awesomeapi.com.br/api-de-moedas) | Portuguese free currency prices and conversion with no rate limits | No | Yes | Unknown |\n| [ExchangeRate-API](https://www.exchangerate-api.com) | Free currency conversion | `apiKey` | Yes | Yes |\n| [Exchangerate.host](https://exchangerate.host) | Free foreign exchange & crypto rates API | No | Yes | Unknown |\n| [Exchangeratesapi.io](https://exchangeratesapi.io) | Exchange rates with currency conversion | `apiKey` | Yes | Yes |\n| [Frankfurter](https://www.frankfurter.app/docs) | Exchange rates, currency conversion and time series | No | Yes | Yes |\n| [FreeForexAPI](https://freeforexapi.com/Home/Api) | Real-time foreign exchange rates for major currency pairs | No | Yes | No |\n| [National Bank of Poland](http://api.nbp.pl/en.html) | A collection of currency exchange rates (data in XML and JSON) | No | Yes | Yes |\n| [VATComply.com](https://www.vatcomply.com/documentation) | Exchange rates, geolocation and VAT number validation | No | Yes | Yes |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Data Validation\nAPI | Description | Auth | HTTPS | CORS |\n|---|:---|:---|:---|:---|\n| [Lob.com](https://lob.com/) | US Address Verification | `apiKey` | Yes | Unknown | |\n| [Postman Echo](https://www.postman-echo.com) | Test api server to receive and return value from HTTP method | No | Yes | Unknown | |\n| [PurgoMalum](http://www.purgomalum.com) | Content validator against profanity & obscenity | No | No | Unknown | |\n| [US Autocomplete](https://www.smarty.com/docs/cloud/us-autocomplete-pro-api) | Enter address data quickly with real-time address suggestions | `apiKey` | Yes | Yes | |\n| [US Extract](https://www.smarty.com/products/apis/us-extract-api) | Extract postal addresses from any text including emails | `apiKey` | Yes | Yes | |\n| [US Street Address](https://www.smarty.com/docs/cloud/us-street-api) | Validate and append data for any US postal address | `apiKey` | Yes | Yes | |\n| [vatlayer](https://vatlayer.com/documentation) | VAT number validation | `apiKey` | Yes | Unknown | |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Development\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [24 Pull Requests](https://24pullrequests.com/api) | Project to promote open source collaboration during December | No | Yes | Yes |\n| [Abstract Screenshot](https://www.abstractapi.com/website-screenshot-api) | Take programmatic screenshots of web pages from any website | `apiKey` | Yes | Yes |\n| [Agify.io](https://agify.io) | Estimates the age from a first name | No | Yes | Yes |\n| [API Gr\u00e1tis](https://apigratis.com.br/) | Multiples services and public APIs | No | Yes | Unknown |\n| [ApicAgent](https://www.apicagent.com) | Extract device details from user-agent string | No | Yes | Yes |\n| [ApiFlash](https://apiflash.com/) | Chrome based screenshot API for developers | `apiKey` | Yes | Unknown |\n| [apilayer userstack](https://userstack.com/) | Secure User-Agent String Lookup JSON API | `OAuth` | Yes | Unknown |\n| [APIs.guru](https://apis.guru/api-doc/) | Wikipedia for Web APIs, OpenAPI/Swagger specs for public APIs | No | Yes | Unknown |\n| [Azure DevOps](https://docs.microsoft.com/en-us/rest/api/azure/devops) | The Azure DevOps basic components of a REST API request/response pair | `apiKey` | Yes | Unknown |\n| [Base](https://www.base-api.io/) | Building quick backends | `apiKey` | Yes | Yes |\n| [Beeceptor](https://beeceptor.com/) | Build a mock Rest API endpoint in seconds | No | Yes | Yes |\n| [Bitbucket](https://developer.atlassian.com/bitbucket/api/2/reference/) | Bitbucket API | `OAuth` | Yes | Unknown |\n| [Blague.xyz](https://blague.xyz/) | La plus grande API de Blagues FR/The biggest FR jokes API | `apiKey` | Yes | Yes |\n| [Blitapp](https://blitapp.com/api/) | Schedule screenshots of web pages and sync them to your cloud | `apiKey` | Yes | Unknown |\n| [Blynk-Cloud](https://blynkapi.docs.apiary.io/#) | Control IoT Devices from Blynk IoT Cloud | `apiKey` | No | Unknown |\n| [Bored](https://www.boredapi.com/) | Find random activities to fight boredom | No | Yes | Unknown |\n| [Brainshop.ai](https://brainshop.ai/) | Make A Free A.I Brain | `apiKey` | Yes | Yes |\n| [Browshot](https://browshot.com/api/documentation) | Easily make screenshots of web pages in any screen size, as any device | `apiKey` | Yes | Yes |\n| [CDNJS](https://api.cdnjs.com/libraries/jquery) | Library info on CDNJS | No | Yes | Unknown |\n| [Changelogs.md](https://changelogs.md) | Structured changelog metadata from open source projects | No | Yes | Unknown |\n| [Ciprand](https://github.com/polarspetroll/ciprand) | Secure random string generator | No | Yes | No |\n| [Cloudflare Trace](https://github.com/fawazahmed0/cloudflare-trace-api) | Get IP Address, Timestamp, User Agent, Country Code, IATA, HTTP Version, TLS/SSL Version & More | No | Yes | Yes |\n| [Codex](https://github.com/Jaagrav/CodeX) | Online Compiler for Various Languages | No | Yes | Unknown |\n| [Contentful Images](https://www.contentful.com/developers/docs/references/images-api/) | Used to retrieve and apply transformations to images | `apiKey` | Yes | Yes |\n| [CORS Proxy](https://github.com/burhanuday/cors-proxy) | Get around the dreaded CORS error by using this proxy as a middle man | No | Yes | Yes |\n| [CountAPI](https://countapi.xyz) | Free and simple counting service. You can use it to track page hits and specific events | No | Yes | Yes |\n| [Databricks](https://docs.databricks.com/dev-tools/api/latest/index.html) | Service to manage your databricks account,clusters, notebooks, jobs and workspaces | `apiKey` | Yes | Yes |\n| [DigitalOcean Status](https://status.digitalocean.com/api) | Status of all DigitalOcean services | No | Yes | Unknown |\n| [Docker Hub](https://docs.docker.com/docker-hub/api/latest/) | Interact with Docker Hub | `apiKey` | Yes | Yes |\n| [DomainDb Info](https://api.domainsdb.info/) | Domain name search to find all domains containing particular words/phrases/etc | No | Yes | Unknown |\n| [ExtendsClass JSON Storage](https://extendsclass.com/json-storage.html) | A simple JSON store API | No | Yes | Yes |\n| [GeekFlare](https://apidocs.geekflare.com/docs/geekflare-api) | Provide numerous capabilities for important testing and monitoring methods for websites | `apiKey` | Yes | Unknown |\n| [Genderize.io](https://genderize.io) | Estimates a gender from a first name | No | Yes | Yes |\n| [GETPing](https://www.getping.info) | Trigger an email notification with a simple GET request | `apiKey` | Yes | Unknown |\n| [Ghost](https://ghost.org/) | Get Published content into your Website, App or other embedded media | `apiKey` | Yes | Yes |\n| [GitHub](https://docs.github.com/en/free-pro-team@latest/rest) | Make use of GitHub repositories, code and user info programmatically | `OAuth` | Yes | Yes |\n| [Gitlab](https://docs.gitlab.com/ee/api/) | Automate GitLab interaction programmatically | `OAuth` | Yes | Unknown |\n| [Gitter](https://developer.gitter.im/docs/welcome) | Chat for Developers | `OAuth` | Yes | Unknown |\n| [Glitterly](https://developers.glitterly.app) | Image generation API | `apiKey` | Yes | Yes |\n| [Google Docs](https://developers.google.com/docs/api/reference/rest) | API to read, write, and format Google Docs documents | `OAuth` | Yes | Unknown |\n| [Google Firebase](https://firebase.google.com/docs) | Google's mobile application development platform that helps build, improve, and grow app | `apiKey` | Yes | Yes |\n| [Google Fonts](https://developers.google.com/fonts/docs/developer_api) | Metadata for all families served by Google Fonts | `apiKey` | Yes | Unknown |\n| [Google Keep](https://developers.google.com/keep/api/reference/rest) | API to read, write, and format Google Keep notes | `OAuth` | Yes | Unknown |\n| [Google Sheets](https://developers.google.com/sheets/api/reference/rest) | API to read, write, and format Google Sheets data | `OAuth` | Yes | Unknown |\n| [Google Slides](https://developers.google.com/slides/api/reference/rest) | API to read, write, and format Google Slides presentations | `OAuth` | Yes | Unknown |\n| [Gorest](https://gorest.co.in/) | Online REST API for Testing and Prototyping | `OAuth` | Yes | Unknown |\n| [Hasura](https://hasura.io/opensource/) | GraphQL and REST API Engine with built in Authorization | `apiKey` | Yes | Yes |\n| [Heroku](https://devcenter.heroku.com/articles/platform-api-reference/) | REST API to programmatically create apps, provision add-ons and perform other task on Heroku | `OAuth` | Yes | Yes |\n| [host-t.com](https://host-t.com) | Basic DNS query via HTTP GET request | No | Yes | No |\n| [Host.io](https://host.io) | Domains Data API for Developers | `apiKey` | Yes | Yes |\n| [HTTP2.Pro](https://http2.pro/doc/api) | Test endpoints for client and server HTTP/2 protocol support | No | Yes | Unknown |\n| [Httpbin](https://httpbin.org/) | A Simple HTTP Request & Response Service | No | Yes | Yes |\n| [Httpbin Cloudflare](https://cloudflare-quic.com/b/) | A Simple HTTP Request & Response Service with HTTP/3 Support by Cloudflare | No | Yes | Yes |\n| [Hunter](https://hunter.io/api) | API for domain search, professional email finder, author finder and email verifier | `apiKey` | Yes | Unknown |\n| [IBM Text to Speech](https://cloud.ibm.com/docs/text-to-speech/getting-started.html) | Convert text to speech | `apiKey` | Yes | Yes |\n| [Icanhazepoch](https://icanhazepoch.com) | Get Epoch time | No | Yes | Yes |\n| [Icanhazip](https://major.io/icanhazip-com-faq/) | IP Address API | No | Yes | Yes |\n| [IFTTT](https://platform.ifttt.com/docs/connect_api) | IFTTT Connect API | No | Yes | Unknown |\n| [Image-Charts](https://documentation.image-charts.com/) | Generate charts, QR codes and graph images | No | Yes | Yes |\n| [import.io](http://api.docs.import.io/) | Retrieve structured data from a website or RSS feed | `apiKey` | Yes | Unknown |\n| [ip-fast.com](https://ip-fast.com/docs/) | IP address, country and city | No | Yes | Yes |\n| [IP2WHOIS Information Lookup](https://www.ip2whois.com/) | WHOIS domain name lookup | `apiKey` | Yes | Unknown |\n| [ipfind.io](https://ipfind.io) | Geographic location of an IP address or any domain name along with some other useful information | `apiKey` | Yes | Yes |\n| [IPify](https://www.ipify.org/) | A simple IP Address API | No | Yes | Unknown |\n| [IPinfo](https://ipinfo.io/developers) | Another simple IP Address API | No | Yes | Unknown |\n| [jsDelivr](https://github.com/jsdelivr/data.jsdelivr.com) | Package info and download stats on jsDelivr CDN | No | Yes | Yes |\n| [JSON 2 JSONP](https://json2jsonp.com/) | Convert JSON to JSONP (on-the-fly) for easy cross-domain data requests using client-side JavaScript | No | Yes | Unknown |\n| [JSONbin.io](https://jsonbin.io) | Free JSON storage service. Ideal for small scale Web apps, Websites and Mobile apps | `apiKey` | Yes | Yes |\n| [Kroki](https://kroki.io) | Creates diagrams from textual descriptions | No | Yes | Yes |\n| [License-API](https://github.com/cmccandless/license-api/blob/master/README.md) | Unofficial REST API for choosealicense.com | No | Yes | No |\n| [Logs.to](https://logs.to/) | Generate logs | `apiKey` | Yes | Unknown |\n| [Lua Decompiler](https://lua-decompiler.ferib.dev/) | Online Lua 5.1 Decompiler | No | Yes | Yes |\n| [MAC address vendor lookup](https://macaddress.io/api) | Retrieve vendor details and other information regarding a given MAC address or an OUI | `apiKey` | Yes | Yes |\n| [Micro DB](https://m3o.com/db) | Simple database service | `apiKey` | Yes | Unknown |\n| [MicroENV](https://microenv.com/) | Fake Rest API for developers | No | Yes | Unknown |\n| [Mocky](https://designer.mocky.io/) | Mock user defined test JSON for REST API endpoints | No | Yes | Yes |\n| [MY IP](https://www.myip.com/api-docs/) | Get IP address information | No | Yes | Unknown |\n| [Nationalize.io](https://nationalize.io) | Estimate the nationality of a first name | No | Yes | Yes |\n| [Netlify](https://docs.netlify.com/api/get-started/) | Netlify is a hosting service for the programmable web | `OAuth` | Yes | Unknown |\n| [NetworkCalc](https://networkcalc.com/api/docs) | Network calculators, including subnets, DNS, binary, and security tools | No | Yes | Yes |\n| [npm Registry](https://github.com/npm/registry/blob/master/docs/REGISTRY-API.md) | Query information about your favorite Node.js libraries programatically | No | Yes | Unknown |\n| [OneSignal](https://documentation.onesignal.com/docs/onesignal-api) | Self-serve customer engagement solution for Push Notifications, Email, SMS & In-App | `apiKey` | Yes | Unknown |\n| [Open Page Rank](https://www.domcop.com/openpagerank/) | API for calculating and comparing metrics of different websites using Page Rank algorithm | `apiKey` | Yes | Unknown |\n| [OpenAPIHub](https://hub.openapihub.com/) | The All-in-one API Platform | `X-Mashape-Key` | Yes | Unknown |\n| [OpenGraphr](https://opengraphr.com/docs/1.0/overview) | Really simple API to retrieve Open Graph data from an URL | `apiKey` | Yes | Unknown |\n| [oyyi](https://oyyi.xyz/docs/1.0) | API for Fake Data, image/video conversion, optimization, pdf optimization and thumbnail generation | No | Yes | Yes |\n| [PageCDN](https://pagecdn.com/docs/public-api) | Public API for javascript, css and font libraries on PageCDN | `apiKey` | Yes | Yes |\n| [Postman](https://www.postman.com/postman/workspace/postman-public-workspace/documentation/12959542-c8142d51-e97c-46b6-bd77-52bb66712c9a) | Tool for testing APIs | `apiKey` | Yes | Unknown |\n| [ProxyCrawl](https://proxycrawl.com) | Scraping and crawling anticaptcha service | `apiKey` | Yes | Unknown |\n| [ProxyKingdom](https://proxykingdom.com) | Rotating Proxy API that produces a working proxy on every request | `apiKey` | Yes | Yes |\n| [Pusher Beams](https://pusher.com/beams) | Push notifications for Android & iOS | `apiKey` | Yes | Unknown |\n| [QR code](https://www.qrtag.net/api/) | Create an easy to read QR code and URL shortener | No | Yes | Yes |\n| [QR code](http://goqr.me/api/) | Generate and decode / read QR code graphics | No | Yes | Unknown |\n| [Qrcode Monkey](https://www.qrcode-monkey.com/qr-code-api-with-logo/) | Integrate custom and unique looking QR codes into your system or workflow | No | Yes | Unknown |\n| [QuickChart](https://quickchart.io/) | Generate chart and graph images | No | Yes | Yes |\n| [Random Stuff](https://api-docs.pgamerx.com/) | Can be used to get AI Response, jokes, memes, and much more at lightning-fast speed | `apiKey` | Yes | Yes |\n| [Rejax](https://rejax.io/) | Reverse AJAX service to notify clients | `apiKey` | Yes | No |\n| [ReqRes](https://reqres.in/ ) | A hosted REST-API ready to respond to your AJAX requests | No | Yes | Unknown |\n| [RSS feed to JSON](https://rss-to-json-serverless-api.vercel.app) | Returns RSS feed in JSON format using feed URL | No | Yes | Yes |\n| [SavePage.io](https://www.savepage.io) | A free, RESTful API used to screenshot any desktop, or mobile website | `apiKey` | Yes | Yes |\n| [ScrapeNinja](https://scrapeninja.net) | Scraping API with Chrome fingerprint and residential proxies | `apiKey` | Yes | Unknown |\n| [ScraperApi](https://www.scraperapi.com) | Easily build scalable web scrapers | `apiKey` | Yes | Unknown |\n| [scraperBox](https://scraperbox.com/) | Undetectable web scraping API | `apiKey` | Yes | Yes |\n| [scrapestack](https://scrapestack.com/) | Real-time, Scalable Proxy & Web Scraping REST API | `apiKey` | Yes | Unknown |\n| [ScrapingAnt](https://scrapingant.com) | Headless Chrome scraping with a simple API | `apiKey` | Yes | Unknown |\n| [ScrapingDog](https://www.scrapingdog.com/) | Proxy API for Web scraping | `apiKey` | Yes | Unknown |\n| [ScreenshotAPI.net](https://screenshotapi.net/) | Create pixel-perfect website screenshots | `apiKey` | Yes | Yes |\n| [Serialif Color](https://color.serialif.com/) | Color conversion, complementary, grayscale and contrasted text | No | Yes | No |\n| [serpstack](https://serpstack.com/) | Real-Time & Accurate Google Search Results API | `apiKey` | Yes | Yes |\n| [Sheetsu](https://sheetsu.com/) | Easy google sheets integration | `apiKey` | Yes | Unknown |\n| [SHOUTCLOUD](http://shoutcloud.io/) | ALL-CAPS AS A SERVICE | No | No | Unknown |\n| [Sonar](https://github.com/Cgboal/SonarSearch) | Project Sonar DNS Enumeration API | No | Yes | Yes |\n| [SonarQube](https://sonarcloud.io/web_api) | SonarQube REST APIs to detect bugs, code smells & security vulnerabilities | `OAuth` | Yes | Unknown |\n| [StackExchange](https://api.stackexchange.com/) | Q&A forum for developers | `OAuth` | Yes | Unknown |\n| [Statically](https://statically.io/) | A free CDN for developers | No | Yes | Yes |\n| [Supportivekoala](https://developers.supportivekoala.com/) | Autogenerate images with template | `apiKey` | Yes | Yes |\n| [Tyk](https://tyk.io/open-source/) | Api and service management platform | `apiKey` | Yes | Yes |\n| [Wandbox](https://github.com/melpon/wandbox/blob/master/kennel2/API.rst) | Code compiler supporting 35+ languages mentioned at wandbox.org | No | Yes | Unknown |\n| [WebScraping.AI](https://webscraping.ai/) | Web Scraping API with built-in proxies and JS rendering | `apiKey` | Yes | Yes |\n| [ZenRows](https://www.zenrows.com/) | Web Scraping API that bypasses anti-bot solutions while offering JS rendering, and rotating proxies | `apiKey` | Yes | Unknown |\n\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Dictionaries\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Chinese Character Web](http://ccdb.hemiola.com/) | Chinese character definitions and pronunciations | No | No | No |\n| [Chinese Text Project](https://ctext.org/tools/api) | Online open-access digital library for pre-modern Chinese texts | No | Yes | Unknown |\n| [Collins](https://api.collinsdictionary.com/api/v1/documentation/html/) | Bilingual Dictionary and Thesaurus Data | `apiKey` | Yes | Unknown |\n| [Free Dictionary](https://dictionaryapi.dev/) | Definitions, phonetics, pronounciations, parts of speech, examples, synonyms | No | Yes | Unknown |\n| [Indonesia Dictionary](https://new-kbbi-api.herokuapp.com/) | Indonesia dictionary many words | No | Yes | Unknown |\n| [Lingua Robot](https://www.linguarobot.io) | Word definitions, pronunciations, synonyms, antonyms and others | `apiKey` | Yes | Yes |\n| [Merriam-Webster](https://dictionaryapi.com/) | Dictionary and Thesaurus Data | `apiKey` | Yes | Unknown |\n| [OwlBot](https://owlbot.info/) | Definitions with example sentence and photo if available | `apiKey` | Yes | Yes |\n| [Oxford](https://developer.oxforddictionaries.com/) | Dictionary Data | `apiKey` | Yes | No |\n| [Synonyms](https://www.synonyms.com/synonyms_api.php) | Synonyms, thesaurus and antonyms information for any given word | `apiKey` | Yes | Unknown |\n| [Wiktionary](https://en.wiktionary.org/w/api.php) | Collaborative dictionary data | No | Yes | Yes |\n| [Wordnik](https://developer.wordnik.com) | Dictionary Data | `apiKey` | Yes | Unknown |\n| [Words](https://www.wordsapi.com/docs/) | Definitions and synonyms for more than 150,000 words | `apiKey` | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Documents & Productivity\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Airtable](https://airtable.com/api) | Integrate with Airtable | `apiKey` | Yes | Unknown |\n| [Api2Convert](https://www.api2convert.com/) | Online File Conversion API | `apiKey` | Yes | Unknown |\n| [apilayer pdflayer](https://pdflayer.com) | HTML/URL to PDF | `apiKey` | Yes | Unknown |\n| [Asana](https://developers.asana.com/docs) | Programmatic access to all data in your asana system | `apiKey` | Yes | Yes |\n| [ClickUp](https://clickup.com/api) | ClickUp is a robust, cloud-based project management tool for boosting productivity | `OAuth` | Yes | Unknown |\n| [Clockify](https://clockify.me/developers-api ) | Clockify's REST-based API can be used to push/pull data to/from it & integrate it with other systems | `apiKey` | Yes | Unknown |\n| [CloudConvert](https://cloudconvert.com/api/v2) | Online file converter for audio, video, document, ebook, archive, image, spreadsheet, presentation | `apiKey` | Yes | Unknown |\n| [Cloudmersive Document and Data Conversion](https://cloudmersive.com/convert-api) | HTML/URL to PDF/PNG, Office documents to PDF, image conversion | `apiKey` | Yes | Yes |\n| [Code::Stats](https://codestats.net/api-docs) | Automatic time tracking for programmers | `apiKey` | Yes | No |\n| [CraftMyPDF](https://craftmypdf.com) | Generate PDF documents from templates with a drop-and-drop editor and a simple API | `apiKey` | Yes | No |\n| [Flowdash](https://docs.flowdash.com/docs/api-introduction) | Automate business workflows | `apiKey` | Yes | Unknown |\n| [Html2PDF](https://html2pdf.app/) | HTML/URL to PDF | `apiKey` | Yes | Unknown |\n| [iLovePDF](https://developer.ilovepdf.com/) | Convert, merge, split, extract text and add page numbers for PDFs. Free for 250 documents/month | `apiKey` | Yes | Yes |\n| [JIRA](https://developer.atlassian.com/server/jira/platform/rest-apis/) | JIRA is a proprietary issue tracking product that allows bug tracking and agile project management | `OAuth` | Yes | Unknown |\n| [Mattermost](https://api.mattermost.com/) | An open source platform for developer collaboration | `OAuth` | Yes | Unknown |\n| [Mercury](https://mercury.postlight.com/web-parser/) | Web parser | `apiKey` | Yes | Unknown |\n| [Monday](https://api.developer.monday.com/docs) | Programmatically access and update data inside a monday.com account | `apiKey` | Yes | Unknown |\n| [Notion](https://developers.notion.com/docs/getting-started) | Integrate with Notion | `OAuth` | Yes | Unknown |\n| [PandaDoc](https://developers.pandadoc.com) | DocGen and eSignatures API | `apiKey` | Yes | No |\n| [Pocket](https://getpocket.com/developer/) | Bookmarking service | `OAuth` | Yes | Unknown |\n| [Podio](https://developers.podio.com) | File sharing and productivity | `OAuth` | Yes | Unknown |\n| [PrexView](https://prexview.com) | Data from XML or JSON to PDF, HTML or Image | `apiKey` | Yes | Unknown |\n| [Restpack](https://restpack.io/) | Provides screenshot, HTML to PDF and content extraction APIs | `apiKey` | Yes | Unknown |\n| [Todoist](https://developer.todoist.com) | Todo Lists | `OAuth` | Yes | Unknown |\n| [Smart Image Enhancement API](https://apilayer.com/marketplace/image_enhancement-api) | Performs image upscaling by adding detail to images through multiple super-resolution algorithms | `apiKey` | Yes | Unknown |\n| [Vector Express v2.0](https://vector.express) | Free vector file converting API | No | Yes | No |\n| [WakaTime](https://wakatime.com/developers) | Automated time tracking leaderboards for programmers | No | Yes | Unknown |\n| [Zube](https://zube.io/docs/api) | Full stack project management | `OAuth` | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Email\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Abstract Email Validation](https://www.abstractapi.com/email-verification-validation-api) | Validate email addresses for deliverability and spam | `apiKey` | Yes | Yes |\n| [apilayer mailboxlayer](https://mailboxlayer.com) | Email address validation | `apiKey` | Yes | Unknown |\n| [Cloudmersive Validate](https://cloudmersive.com/validate-api) | Validate email addresses, phone numbers, VAT numbers and domain names | `apiKey` | Yes | Yes |\n| [Disify](https://www.disify.com/) | Validate and detect disposable and temporary email addresses | No | Yes | Yes |\n| [DropMail](https://dropmail.me/api/#live-demo) | GraphQL API for creating and managing ephemeral e-mail inboxes | No | Yes | Unknown |\n| [EVA](https://eva.pingutil.com/) | Validate email addresses | No | Yes | Yes |\n| [Guerrilla Mail](https://www.guerrillamail.com/GuerrillaMailAPI.html) | Disposable temporary Email addresses | No | Yes | Unknown |\n| [ImprovMX](https://improvmx.com/api) | API for free email forwarding service | `apiKey` | Yes | Unknown |\n| [Kickbox](https://open.kickbox.com/) | Email verification API | No | Yes | Yes |\n| [mail.gw](https://docs.mail.gw) | 10 Minute Mail | No | Yes | Yes |\n| [mail.tm](https://docs.mail.tm) | Temporary Email Service | No | Yes | Yes |\n| [MailboxValidator](https://www.mailboxvalidator.com/api-email-free) | Validate email address to improve deliverability | `apiKey` | Yes | Unknown |\n| [MailCheck.ai](https://www.mailcheck.ai/#documentation) | Prevent users to sign up with temporary email addresses | No | Yes | Unknown |\n| [Mailtrap](https://mailtrap.docs.apiary.io/#) | A service for the safe testing of emails sent from the development and staging environments | `apiKey` | Yes | Unknown |\n| [Sendgrid](https://docs.sendgrid.com/api-reference/) | A cloud-based SMTP provider that allows you to send emails without having to maintain email servers | `apiKey` | Yes | Unknown |\n| [Sendinblue](https://developers.sendinblue.com/docs) | A service that provides solutions relating to marketing and/or transactional email and/or SMS | `apiKey` | Yes | Unknown |\n| [Verifier](https://verifier.meetchopra.com/docs#/) | Verifies that a given email is real | `apiKey` | Yes | Yes |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Entertainment\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [chucknorris.io](https://api.chucknorris.io) | JSON API for hand curated Chuck Norris jokes | No | Yes | Unknown |\n| [Corporate Buzz Words](https://github.com/sameerkumar18/corporate-bs-generator-api) | REST API for Corporate Buzz Words | No | Yes | Yes |\n| [Excuser](https://excuser.herokuapp.com/) | Get random excuses for various situations | No | Yes | Unknown |\n| [Fun Fact](https://api.aakhilv.me) | A simple HTTPS api that can randomly select and return a fact from the FFA database | No | Yes | Yes |\n| [Imgflip](https://imgflip.com/api) | Gets an array of popular memes | No | Yes | Unknown |\n| [Meme Maker](https://mememaker.github.io/API/) | REST API for create your own meme | No | Yes | Unknown |\n| [NaMoMemes](https://github.com/theIYD/NaMoMemes) | Memes on Narendra Modi | No | Yes | Unknown |\n| [Random Useless Facts](https://uselessfacts.jsph.pl/) | Get useless, but true facts | No | Yes | Unknown |\n| [Techy](https://techy-api.vercel.app/) | JSON and Plaintext API for tech-savvy sounding phrases | No | Yes | Unknown |\n| [Yo Momma Jokes](https://github.com/beanboi7/yomomma-apiv2) | REST API for Yo Momma Jokes | No | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Environment\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [BreezoMeter Pollen](https://docs.breezometer.com/api-documentation/pollen-api/v2/) | Daily Forecast pollen conditions data for a specific location | `apiKey` | Yes | Unknown |\n| [Carbon Interface](https://docs.carboninterface.com/) | API to calculate carbon (C02) emissions estimates for common C02 emitting activities | `apiKey` | Yes | Yes |\n| [Climatiq](https://docs.climatiq.io) | Calculate the environmental footprint created by a broad range of emission-generating activities | `apiKey` | Yes | Yes |\n| [Cloverly](https://www.cloverly.com/carbon-offset-documentation) | API calculates the impact of common carbon-intensive activities in real time | `apiKey` | Yes | Unknown |\n| [CO2 Offset](https://co2offset.io/api.html) | API calculates and validates the carbon footprint | No | Yes | Unknown |\n| [Danish data service Energi](https://www.energidataservice.dk/) | Open energy data from Energinet to society | No | Yes | Unknown |\n| [Gr\u00fcnstromIndex](https://gruenstromindex.de/) | Green Power Index for Germany (Gr\u00fcnstromindex/GSI) | No | No | Yes |\n| [IQAir](https://www.iqair.com/air-pollution-data-api) | Air quality and weather data | `apiKey` | Yes | Unknown |\n| [Luchtmeetnet](https://api-docs.luchtmeetnet.nl/) | Predicted and actual air quality components for The Netherlands (RIVM) | No | Yes | Unknown |\n| [National Grid ESO](https://data.nationalgrideso.com/) | Open data from Great Britain\u2019s Electricity System Operator | No | Yes | Unknown |\n| [OpenAQ](https://docs.openaq.org/) | Open air quality data | `apiKey` | Yes | Unknown |\n| [PM2.5 Open Data Portal](https://pm25.lass-net.org/#apis) | Open low-cost PM2.5 sensor data | No | Yes | Unknown |\n| [PM25.in](http://www.pm25.in/api_doc) | Air quality of China | `apiKey` | No | Unknown |\n| [PVWatts](https://developer.nrel.gov/docs/solar/pvwatts/v6/) | Energy production photovoltaic (PV) energy systems | `apiKey` | Yes | Unknown |\n| [Srp Energy](https://srpenergy-api-client-python.readthedocs.io/en/latest/api.html) | Hourly usage energy report for Srp customers | `apiKey` | Yes | No |\n| [UK Carbon Intensity](https://carbon-intensity.github.io/api-definitions/#carbon-intensity-api-v1-0-0) | The Official Carbon Intensity API for Great Britain developed by National Grid | No | Yes | Unknown |\n| [Website Carbon](https://api.websitecarbon.com/) | API to estimate the carbon footprint of loading web pages | No | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Events\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Eventbrite](https://www.eventbrite.com/platform/api/) | Find events | `OAuth` | Yes | Unknown |\n| [SeatGeek](https://platform.seatgeek.com/) | Search events, venues and performers | `apiKey` | Yes | Unknown |\n| [Ticketmaster](http://developer.ticketmaster.com/products-and-docs/apis/getting-started/) | Search events, attractions, or venues | `apiKey` | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Finance\nAPI | Description | Auth | HTTPS | CORS |\n|---|:---|:---|:---|:---|\n| [Abstract VAT Validation](https://www.abstractapi.com/vat-validation-rates-api) | Validate VAT numbers and calculate VAT rates | `apiKey` | Yes | Yes | |\n| [Aletheia](https://aletheiaapi.com/) | Insider trading data, earnings call analysis, financial statements, and more | `apiKey` | Yes | Yes | |\n| [Alpaca](https://alpaca.markets/docs/api-documentation/api-v2/market-data/alpaca-data-api-v2/) | Realtime and historical market data on all US equities and ETFs | `apiKey` | Yes | Yes | |\n| [Alpha Vantage](https://www.alphavantage.co/) | Realtime and historical stock data | `apiKey` | Yes | Unknown | |\n| [apilayer marketstack](https://marketstack.com/) | Real-Time, Intraday & Historical Market Data API | `apiKey` | Yes | Unknown | |\n| [Banco do Brasil](https://developers.bb.com.br/home) | All Banco do Brasil financial transaction APIs | `OAuth` | Yes | Yes | |\n| [Bank Data API](https://apilayer.com/marketplace/bank_data-api) | Instant IBAN and SWIFT number validation across the globe | `apiKey` | Yes | Unknown | |\n| [Billplz](https://www.billplz.com/api) | Payment platform | `apiKey` | Yes | Unknown | |\n| [Binlist](https://binlist.net/) | Public access to a database of IIN/BIN information | No | Yes | Unknown | |\n| [Boleto.Cloud](https://boleto.cloud/) | A api to generate boletos in Brazil | `apiKey` | Yes | Unknown | |\n| [Citi](https://sandbox.developerhub.citi.com/api-catalog-list) | All Citigroup account and statement data APIs | `apiKey` | Yes | Unknown | |\n| [Econdb](https://www.econdb.com/api/) | Global macroeconomic data | No | Yes | Yes | |\n| [Fed Treasury](https://fiscaldata.treasury.gov/api-documentation/) | U.S. Department of the Treasury Data | No | Yes | Unknown | |\n| [Finage](https://finage.co.uk) | Finage is a stock, currency, cryptocurrency, indices, and ETFs real-time & historical data provider | `apiKey` | Yes | Unknown | |\n| [Financial Modeling Prep](https://site.financialmodelingprep.com/developer/docs) | Realtime and historical stock data | `apiKey` | Yes | Unknown | |\n| [Finnhub](https://finnhub.io/docs/api) | Real-Time RESTful APIs and Websocket for Stocks, Currencies, and Crypto | `apiKey` | Yes | Unknown | |\n| [FRED](https://fred.stlouisfed.org/docs/api/fred/) | Economic data from the Federal Reserve Bank of St. Louis | `apiKey` | Yes | Yes | |\n| [Front Accounting APIs](https://frontaccounting.com/fawiki/index.php?n=Devel.SimpleAPIModule) | Front accounting is multilingual and multicurrency software for small businesses | `OAuth` | Yes | Yes | |\n| [Hotstoks](https://hotstoks.com?utm_source=public-apis) | Stock market data powered by SQL | `apiKey` | Yes | Yes | |\n| [IEX Cloud](https://iexcloud.io/docs/api/) | Realtime & Historical Stock and Market Data | `apiKey` | Yes | Yes | |\n| [IG](https://labs.ig.com/gettingstarted) | Spreadbetting and CFD Market Data | `apiKey` | Yes | Unknown | |\n| [Indian Mutual Fund](https://www.mfapi.in/) | Get complete history of India Mutual Funds Data | No | Yes | Unknown | |\n| [Intrinio](https://intrinio.com/) | A wide selection of financial data feeds | `apiKey` | Yes | Unknown | |\n| [Klarna](https://docs.klarna.com/klarna-payments/api/payments-api/) | Klarna payment and shopping service | `apiKey` | Yes | Unknown | |\n| [MercadoPago](https://www.mercadopago.com.br/developers/es/reference) | Mercado Pago API reference - all the information you need to develop your integrations | `apiKey` | Yes | Unknown | |\n| [Mono](https://mono.co/) | Connect with users\u2019 bank accounts and access transaction data in Africa | `apiKey` | Yes | Unknown | |\n| [Moov](https://docs.moov.io/api/) | The Moov API makes it simple for platforms to send, receive, and store money | `apiKey` | Yes | Unknown | |\n| [Nordigen](https://nordigen.com/en/account_information_documenation/integration/quickstart_guide/) | Connect to bank accounts using official bank APIs and get raw transaction data | `apiKey` | Yes | Unknown | |\n| [OpenFIGI](https://www.openfigi.com/api) | Equity, index, futures, options symbology from Bloomberg LP | `apiKey` | Yes | Yes | |\n| [Plaid](https://www.plaid.com/docs) | Connect with user's bank accounts and access transaction data\t | `apiKey` | YES | |  |\n| [Polygon](https://polygon.io/) | Historical stock market data | `apiKey` | Yes | Unknown | |\n| [Portfolio Optimizer](https://portfoliooptimizer.io/) | Portfolio analysis and optimization | No | Yes | Yes | |\n| [Razorpay IFSC](https://razorpay.com/docs/) | Indian Financial Systems Code (Bank Branch Codes) | No | Yes | Unknown | |\n| [Real Time Finance](https://github.com/Real-time-finance/finance-websocket-API/) | Websocket API to access realtime stock data | `apiKey` | No | Unknown | |\n| [SEC EDGAR Data](https://www.sec.gov/edgar/sec-api-documentation) | API to access annual reports of public US companies | No | Yes | Yes | |\n| [SmartAPI](https://smartapi.angelbroking.com/) | Gain access to set of <SmartAPI> and create end-to-end broking services | `apiKey` | Yes | Unknown | |\n| [StockData](https://www.StockData.org) | Real-Time, Intraday & Historical Market Data, News and Sentiment API | `apiKey` | Yes | Yes | |\n| [Styvio](https://www.Styvio.com) | Realtime and historical stock data and current stock sentiment | `apiKey` | Yes | Unknown | |\n| [Tax Data API](https://apilayer.com/marketplace/tax_data-api) | Instant VAT number and tax validation across the globe | `apiKey` | Yes | Unkown | |\n| [Tradier](https://developer.tradier.com) | US equity/option market data (delayed, intraday, historical) | `OAuth` | Yes | Yes | |\n| [Twelve Data](https://twelvedata.com/) | Stock market data (real-time & historical) | `apiKey` | Yes | Unknown | |\n| [WallstreetBets](https://dashboard.nbshare.io/apps/reddit/api/) | WallstreetBets Stock Comments Sentiment Analysis | No | Yes | Unknown | |\n| [Yahoo Finance](https://www.yahoofinanceapi.com/) | Real time low latency Yahoo Finance API for stock market, crypto currencies, and currency exchange | `apiKey` | Yes | Yes | |\n| [YNAB](https://api.youneedabudget.com/) | Budgeting & Planning | `OAuth` | Yes | Yes | |\n| [Zoho Books](https://www.zoho.com/books/api/v3/) | Online accounting software, built for your business | `OAuth` | Yes | Unknown | |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Food & Drink\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [BaconMockup](https://baconmockup.com/) | Resizable bacon placeholder images | No | Yes | Yes |\n| [Chomp](https://chompthis.com/api/) | Data about various grocery products and foods | `apiKey` | Yes | Unknown |\n| [Coffee](https://coffee.alexflipnote.dev/) | Random pictures of coffee | No | Yes | Unknown |\n| [Edamam nutrition](https://developer.edamam.com/edamam-docs-nutrition-api) | Nutrition Analysis | `apiKey` | Yes | Unknown |\n| [Edamam recipes](https://developer.edamam.com/edamam-docs-recipe-api) | Recipe Search | `apiKey` | Yes | Unknown |\n| [Foodish](https://github.com/surhud004/Foodish#readme) | Random pictures of food dishes | No | Yes | Yes |\n| [Fruityvice](https://www.fruityvice.com) | Data about all kinds of fruit | No | Yes | Unknown |\n| [Kroger](https://developer.kroger.com/reference) | Supermarket Data | `apiKey` | Yes | Unknown |\n| [LCBO](https://lcboapi.com/) | Alcohol | `apiKey` | Yes | Unknown |\n| [Open Brewery DB](https://www.openbrewerydb.org) | Breweries, Cideries and Craft Beer Bottle Shops | No | Yes | Yes |\n| [Open Food Facts](https://world.openfoodfacts.org/data) | Food Products Database | No | Yes | Unknown |\n| [PunkAPI](https://punkapi.com/) | Brewdog Beer Recipes | No | Yes | Unknown |\n| [Rustybeer](https://rustybeer.herokuapp.com/) | Beer brewing tools | No | Yes | No |\n| [Spoonacular](https://spoonacular.com/food-api) | Recipes, Food Products, and Meal Planning | `apiKey` | Yes | Unknown |\n| [Systembolaget](https://api-portal.systembolaget.se) | Govornment owned liqour store in Sweden | `apiKey` | Yes | Unknown |\n| [TacoFancy](https://github.com/evz/tacofancy-api) | Community-driven taco database | No | No | Unknown |\n| [Tasty](https://rapidapi.com/apidojo/api/tasty/) | API to query data about recipe, plan, ingredients | `apiKey` | Yes | Unknown |\n| [The Report of the Week](https://github.com/andyklimczak/TheReportOfTheWeek-API) | Food & Drink Reviews | No | Yes | Unknown |\n| [TheCocktailDB](https://www.thecocktaildb.com/api.php) | Cocktail Recipes | `apiKey` | Yes | Yes |\n| [TheMealDB](https://www.themealdb.com/api.php) | Meal Recipes | `apiKey` | Yes | Yes |\n| [Untappd](https://untappd.com/api/docs) | Social beer sharing | `OAuth` | Yes | Unknown |\n| [What's on the menu?](http://nypl.github.io/menus-api/) | NYPL human-transcribed historical menu collection | `apiKey` | No | Unknown |\n| [WhiskyHunter](https://whiskyhunter.net/api/) | Past online whisky auctions statistical data | No | Yes | Unknown |\n| [Zestful](https://zestfuldata.com/) | Parse recipe ingredients | `apiKey` | Yes | Yes |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Games & Comics\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Age of Empires II](https://age-of-empires-2-api.herokuapp.com) | Get information about Age of Empires II resources | No | Yes | No |\n| [AmiiboAPI](https://amiiboapi.com/) | Nintendo Amiibo Information | No | Yes | Yes |\n| [Animal Crossing: New Horizons](http://acnhapi.com/) | API for critters, fossils, art, music, furniture and villagers | No | Yes | Unknown |\n| [Autochess VNG](https://github.com/didadadida93/autochess-vng-api) | Rest Api for Autochess VNG | No | Yes | Yes |\n| [Barter.VG](https://github.com/bartervg/barter.vg/wiki) | Provides information about Game, DLC, Bundles, Giveaways, Trading | No | Yes | Yes |\n| [Battle.net](https://develop.battle.net/documentation/guides/getting-started) | Diablo III, Hearthstone, StarCraft II and World of Warcraft game data APIs | `OAuth` | Yes | Yes |\n| [Board Game Geek](https://boardgamegeek.com/wiki/page/BGG_XML_API2) | Board games, RPG and videogames | No | Yes | No |\n| [Brawl Stars](https://developer.brawlstars.com) | Brawl Stars Game Information | `apiKey` | Yes | Unknown |\n| [Bugsnax](https://www.bugsnaxapi.com/) | Get information about Bugsnax | No | Yes | Yes |\n| [CheapShark](https://www.cheapshark.com/api) | Steam/PC Game Prices and Deals | No | Yes | Yes |\n| [Chess.com](https://www.chess.com/news/view/published-data-api) | Chess.com read-only REST API | No | Yes | Unknown |\n| [Chuck Norris Database](http://www.icndb.com/api/) | Jokes | No | No | Unknown |\n| [Clash of Clans](https://developer.clashofclans.com) | Clash of Clans Game Information | `apiKey` | Yes | Unknown |\n| [Clash Royale](https://developer.clashroyale.com) | Clash Royale Game Information | `apiKey` | Yes | Unknown |\n| [Comic Vine](https://comicvine.gamespot.com/api/documentation) | Comics | No | Yes | Unknown |\n| [Crafatar](https://crafatar.com) | API for Minecraft skins and faces | No | Yes | Yes |\n| [Cross Universe](https://crossuniverse.psychpsyo.com/apiDocs.html) | Cross Universe Card Data | No | Yes | Yes |\n| [Deck of Cards](http://deckofcardsapi.com/) | Deck of Cards | No | No | Unknown |\n| [Destiny The Game](https://bungie-net.github.io/multi/index.html) | Bungie Platform API | `apiKey` | Yes | Unknown |\n| [Digimon Information](https://digimon-api.vercel.app/) | Provides information about digimon creatures | No | Yes | Unknown |\n| [Digimon TCG](https://documenter.getpostman.com/view/14059948/TzecB4fH) | Search for Digimon cards in digimoncard.io | No | Yes | Unknown |\n| [Disney](https://disneyapi.dev) | Information of Disney characters | No | Yes | Yes |\n| [Dota 2](https://docs.opendota.com/) | Provides information about Player stats , Match stats, Rankings for Dota 2 | `apiKey` | Yes | Unknown |\n| [Dungeons and Dragons](https://www.dnd5eapi.co/docs/) | Reference for 5th edition spells, classes, monsters, and more | No | No | No |\n| [Dungeons and Dragons (Alternate)](https://open5e.com/) | Includes all monsters and spells from the SRD (System Reference Document) as well as a search API | No | Yes | Yes |\n| [Eve Online](https://esi.evetech.net/ui) | Third-Party Developer Documentation | `OAuth` | Yes | Unknown |\n| [FFXIV Collect](https://ffxivcollect.com/) | Final Fantasy XIV data on collectables | No | Yes | Yes |\n| [FIFA Ultimate Team](https://www.easports.com/fifa/ultimate-team/api/fut/item) | FIFA Ultimate Team items API | No | Yes | Unknown |\n| [Final Fantasy XIV](https://xivapi.com/) | Final Fantasy XIV Game data API | No | Yes | Yes |\n| [Fortnite](https://fortnitetracker.com/site-api) | Fortnite Stats | `apiKey` | Yes | Unknown |\n| [Forza](https://docs.forza-api.tk) | Show random image of car from Forza | No | Yes | Unknown |\n| [FreeToGame](https://www.freetogame.com/api-doc) | Free-To-Play Games Database | No | Yes | Yes |\n| [Fun Facts](https://asli-fun-fact-api.herokuapp.com/) | Random Fun Facts | No | Yes | Yes |\n| [FunTranslations](https://api.funtranslations.com/) | Translate Text into funny languages | No | Yes | Yes |\n| [GamerPower](https://www.gamerpower.com/api-read) | Game Giveaways Tracker | No | Yes | Yes |\n| [GDBrowser](https://gdbrowser.com/api) | Easy way to use the Geometry Dash Servers | No | Yes | Unknown |    \n| [Geek-Jokes](https://github.com/sameerkumar18/geek-joke-api) | Fetch a random geeky/programming related joke for use in all sorts of applications | No | Yes | Yes |\n| [Genshin Impact](https://genshin.dev) | Genshin Impact game data | No | Yes | Yes |\n| [Giant Bomb](https://www.giantbomb.com/api/documentation) | Video Games | `apiKey` | Yes | Unknown |\n| [GraphQL Pokemon](https://github.com/favware/graphql-pokemon) | GraphQL powered Pokemon API. Supports generations 1 through 8 | No | Yes | Yes |\n| [Guild Wars 2](https://wiki.guildwars2.com/wiki/API:Main) | Guild Wars 2 Game Information | `apiKey` | Yes | Unknown |\n| [GW2Spidy](https://github.com/rubensayshi/gw2spidy/wiki) | GW2Spidy API, Items data on the Guild Wars 2 Trade Market | No | Yes | Unknown |\n| [Halo](https://developer.haloapi.com/) | Halo 5 and Halo Wars 2 Information | `apiKey` | Yes | Unknown |\n| [Hearthstone](http://hearthstoneapi.com/) | Hearthstone Cards Information | `X-Mashape-Key` | Yes | Unknown |\n| [Humble Bundle](https://rapidapi.com/Ziggoto/api/humble-bundle) | Humble Bundle's current bundles | `apiKey` | Yes | Unknown |\n| [Humor](https://humorapi.com) | Humor, Jokes, and Memes | `apiKey` | Yes | Unknown |\n| [Hypixel](https://api.hypixel.net/) | Hypixel player stats | `apiKey` | Yes | Unknown |\n| [Hyrule Compendium](https://github.com/gadhagod/Hyrule-Compendium-API) | Data on all interactive items from The Legend of Zelda: BOTW | No | Yes | Unknown |\n| [Hytale](https://hytale-api.com/) | Hytale blog posts and jobs | No | Yes | Unknown |\n| [IGDB.com](https://api-docs.igdb.com) | Video Game Database | `apiKey` | Yes | Unknown |\n| [JokeAPI](https://sv443.net/jokeapi/v2/) | Programming, Miscellaneous and Dark Jokes | No | Yes | Yes |\n| [Jokes One](https://jokes.one/api/joke/) | Joke of the day and large category of jokes accessible via REST API | `apiKey` | Yes | Yes |\n| [Jservice](http://jservice.io) | Jeopardy Question Database | No | No | Unknown |\n| [Lichess](https://lichess.org/api) | Access to all data of users, games, puzzles and etc on Lichess | `OAuth` | Yes | Unknown |\n| [Magic The Gathering](http://magicthegathering.io/) | Magic The Gathering Game Information | No | No | Unknown |\n| [Mario Kart Tour](https://mario-kart-tour-api.herokuapp.com/) | API for Drivers, Karts, Gliders and Courses | `OAuth` | Yes | Unknown |\n| [Marvel](https://developer.marvel.com) | Marvel Comics | `apiKey` | Yes | Unknown |\n| [Minecraft Server Status](https://api.mcsrvstat.us) | API to get Information about a Minecraft Server | No | Yes | No |    \n| [MMO Games](https://www.mmobomb.com/api) | MMO Games Database, News and Giveaways | No | Yes | No |\n| [mod.io](https://docs.mod.io) | Cross Platform Mod API | `apiKey` | Yes | Unknown |\n| [Mojang](https://wiki.vg/Mojang_API) | Mojang / Minecraft API | `apiKey` | Yes | Unknown |\n| [Monster Hunter World](https://docs.mhw-db.com/) | Monster Hunter World data | No | Yes | Yes |\n| [Open Trivia](https://opentdb.com/api_config.php) | Trivia Questions | No | Yes | Unknown |\n| [PandaScore](https://developers.pandascore.co/) | E-sports games and results | `apiKey` | Yes | Unknown |\n| [Path of Exile](https://www.pathofexile.com/developer/docs) | Path of Exile Game Information | `OAuth` | Yes | Unknown |\n| [PlayerDB](https://playerdb.co/) | Query Minecraft, Steam and XBox Accounts | No | Yes | Unknown |\n| [Pok\u00e9api](https://pokeapi.co) | Pok\u00e9mon Information | No | Yes | Unknown |\n| [Pok\u00e9API (GraphQL)](https://github.com/mazipan/graphql-pokeapi) | The Unofficial GraphQL for PokeAPI | No | Yes | Yes |\n| [Pok\u00e9mon TCG](https://pokemontcg.io) | Pok\u00e9mon TCG Information | No | Yes | Unknown |\n| [Psychonauts](https://psychonauts-api.netlify.app/) | Psychonauts World Characters Information and PSI Powers | No | Yes | Yes |\n| [PUBG](https://developer.pubg.com/) | Access in-game PUBG data | `apiKey` | Yes | Yes |\n| [Puyo Nexus](https://github.com/deltadex7/puyodb-api-deno) | Puyo Puyo information from Puyo Nexus Wiki | No | Yes | Yes |\n| [quizapi.io](https://quizapi.io/) | Access to various kind of quiz questions | `apiKey` | Yes | Yes |\n| [Raider](https://raider.io/api) | Provides detailed character and guild rankings for Raiding and Mythic+ content in World of Warcraft | No | Yes | Unknown |\n| [RAWG.io](https://rawg.io/apidocs) | 500,000+ games for 50 platforms including mobiles | `apiKey` | Yes | Unknown |\n| [Rick and Morty](https://rickandmortyapi.com) | All the Rick and Morty information, including images | No | Yes | Yes |\n| [Riot Games](https://developer.riotgames.com/) | League of Legends Game Information | `apiKey` | Yes | Unknown |\n| [RPS 101](https://rps101.pythonanywhere.com/api) | Rock, Paper, Scissors with 101 objects | No | Yes | Yes |\n| [RuneScape](https://runescape.wiki/w/Application_programming_interface) | RuneScape and OSRS RPGs information | No | Yes | No |\n| [Sakura CardCaptor](https://github.com/JessVel/sakura-card-captor-api) | Sakura CardCaptor Cards Information | No | Yes | Unknown |\n| [Scryfall](https://scryfall.com/docs/api) | Magic: The Gathering database | No | Yes | Yes |\n| [SpaceTradersAPI](https://spacetraders.io?rel=pub-apis) | A playable inter-galactic space trading MMOAPI | `OAuth` | Yes | Yes |\n| [Steam](https://steamapi.xpaw.me/) | Steam Web API documentation | `apiKey` | Yes | No |\n| [Steam](https://github.com/Revadike/InternalSteamWebAPI/wiki) | Internal Steam Web API documentation | No | Yes | No |\n| [SuperHeroes](https://superheroapi.com) | All SuperHeroes and Villains data from all universes under a single API | `apiKey` | Yes | Unknown |\n| [TCGdex](https://www.tcgdex.net/docs) | Multi languages Pok\u00e9mon TCG Information | No | Yes | Yes |\n| [Tebex](https://docs.tebex.io/plugin/) | Tebex API for information about game purchases | `X-Mashape-Key` | Yes | No |\n| [TETR.IO](https://tetr.io/about/api/) | TETR.IO Tetra Channel API | No | Yes | Unknown |\n| [Tronald Dump](https://www.tronalddump.io/) | The dumbest things Donald Trump has ever said | No | Yes | Unknown |\n| [Universalis](https://universalis.app/docs/index.html) | Final Fantasy XIV market board data | No | Yes | Yes |\n| [Valorant (non-official)](https://valorant-api.com) | An extensive API containing data of most Valorant in-game items, assets and more | No | Yes | Unknown |\n| [Warface (non-official)](https://api.wfstats.cf) | Official API proxy with better data structure and more features | No | Yes | No |\n| [Wargaming.net](https://developers.wargaming.net/) | Wargaming.net info and stats | `apiKey` | Yes | No |\n| [When is next MCU film](https://github.com/DiljotSG/MCU-Countdown/blob/develop/docs/API.md) | Upcoming MCU film information | No | Yes | Unknown |\n| [xkcd](https://xkcd.com/json.html) | Retrieve xkcd comics as JSON | No | Yes | No |\n| [Yu-Gi-Oh!](https://db.ygoprodeck.com/api-guide/) | Yu-Gi-Oh! TCG Information | No | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Geocoding\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Abstract IP Geolocation](https://www.abstractapi.com/ip-geolocation-api) | Geolocate website visitors from their IPs | `apiKey` | Yes | Yes |\n| [Actinia Grass GIS](https://actinia.mundialis.de/api_docs/) | Actinia is an open source REST API for geographical data that uses GRASS GIS | `apiKey` | Yes | Unknown |\n| [administrative-divisons-db](https://github.com/kamikazechaser/administrative-divisions-db) | Get all administrative divisions of a country | No | Yes | Yes |\n| [adresse.data.gouv.fr](https://adresse.data.gouv.fr) | Address database of France, geocoding and reverse | No | Yes | Unknown |\n| [Airtel IP](https://sys.airtel.lv/ip2country/1.1.1.1/?full=true) | IP Geolocation API. Collecting data from multiple sources | No | Yes | Unknown |\n| [Apiip](https://apiip.net/) | Get location information by IP address | `apiKey` | Yes | Yes |\n| [apilayer ipstack](https://ipstack.com/) | Locate and identify website visitors by IP address | `apiKey` | Yes | Unknown |\n| [Battuta](http://battuta.medunes.net) | A (country/region/city) in-cascade location API | `apiKey` | No | Unknown |\n| [BigDataCloud](https://www.bigdatacloud.com/ip-geolocation-apis) | Provides fast and accurate IP geolocation APIs along with security checks and confidence area | `apiKey` | Yes | Unknown |\n| [Bing Maps](https://www.microsoft.com/maps/) | Create/customize digital maps based on Bing Maps data | `apiKey` | Yes | Unknown |\n| [bng2latlong](https://www.getthedata.com/bng2latlong) | Convert British OSGB36 easting and northing (British National Grid) to WGS84 latitude and longitude | No | Yes | Yes |\n| [Cartes.io](https://github.com/M-Media-Group/Cartes.io/wiki/API) | Create maps and markers for anything | No | Yes | Unknown |\n| [Cep.la](http://cep.la/) | Brazil RESTful API to find information about streets, zip codes, neighborhoods, cities and states | No | No | Unknown |\n| [CitySDK](http://www.citysdk.eu/citysdk-toolkit/) | Open APIs for select European cities | No | Yes | Unknown |\n| [Country](http://country.is/) | Get your visitor's country from their IP | No | Yes | Yes |\n| [CountryStateCity](https://countrystatecity.in/) | World countries, states, regions, provinces, cities & towns in JSON, SQL, XML, YAML, & CSV format | `apiKey` | Yes | Yes |\n| [Ducks Unlimited](https://gis.ducks.org/datasets/du-university-chapters/api) | API explorer that gives a query URL with a JSON response of locations and cities | No | Yes | No |\n| [GeoApi](https://api.gouv.fr/api/geoapi.html) | French geographical data | No | Yes | Unknown |\n| [Geoapify](https://www.geoapify.com/api/geocoding-api/) | Forward and reverse geocoding, address autocomplete | `apiKey` | Yes | Yes |\n| [Geocod.io](https://www.geocod.io/) | Address geocoding / reverse geocoding in bulk | `apiKey` | Yes | Unknown |\n| [Geocode.xyz](https://geocode.xyz/api) | Provides worldwide forward/reverse geocoding, batch geocoding and geoparsing | No | Yes | Unknown |\n| [Geocodify.com](https://geocodify.com/) | Worldwide geocoding, geoparsing and autocomplete for addresses | `apiKey` | Yes | Yes |\n| [Geodata.gov.gr](https://geodata.gov.gr/en/) | Open geospatial data and API service for Greece | No | Yes | Unknown |\n| [GeoDataSource](https://www.geodatasource.com/web-service) | Geocoding of city name by using latitude and longitude coordinates | `apiKey` | Yes | Unknown |\n| [GeoDB Cities](http://geodb-cities-api.wirefreethought.com/) | Get global city, region, and country data | `apiKey` | Yes | Unknown |\n| [GeographQL](https://geographql.netlify.app) | A Country, State, and City GraphQL API | No | Yes | Yes |\n| [GeoJS](https://www.geojs.io/) | IP geolocation with ChatOps integration | No | Yes | Yes |\n| [Geokeo](https://geokeo.com) | Geokeo geocoding service- with 2500 free api requests daily | No | Yes | Yes |\n| [GeoNames](http://www.geonames.org/export/web-services.html) | Place names and other geographical data | No | No | Unknown |\n| [geoPlugin](https://www.geoplugin.com) | IP geolocation and currency conversion | No | Yes | Yes |\n| [Google Earth Engine](https://developers.google.com/earth-engine/) | A cloud-based platform for planetary-scale environmental data analysis | `apiKey` | Yes | Unknown |\n| [Google Maps](https://developers.google.com/maps/) | Create/customize digital maps based on Google Maps data | `apiKey` | Yes | Unknown |\n| [Graph Countries](https://github.com/lennertVanSever/graphcountries) | Country-related data like currencies, languages, flags, regions+subregions and bordering countries | No | Yes | Unknown |\n| [HelloSalut](https://fourtonfish.com/project/hellosalut-api/) | Get hello translation following user language | No | Yes | Unknown |\n| [HERE Maps](https://developer.here.com) | Create/customize digital maps based on HERE Maps data | `apiKey` | Yes | Unknown |\n| [Hirak IP to Country](https://iplocation.hirak.site/) | Ip to location with country code, currency code & currency name, fast response, unlimited requests | `apiKey` | Yes | Unknown |\n| [Hong Kong GeoData Store](https://geodata.gov.hk/gs/) | API for accessing geo-data of Hong Kong | No | Yes | Unknown |\n| [IBGE](https://servicodados.ibge.gov.br/api/docs/) | Aggregate services of IBGE (Brazilian Institute of Geography and Statistics) | No | Yes | Unknown |\n| [IP 2 Country](https://ip2country.info) | Map an IP to a country | No | Yes | Unknown |\n| [IP Address Details](https://ipinfo.io/) | Find geolocation with ip address | No | Yes | Unknown |\n| [IP Vigilante](https://www.ipvigilante.com/) | Free IP Geolocation API | No | Yes | Unknown |\n| [ip-api](https://ip-api.com/docs) | Find location with IP address or domain | No | No | Unknown |\n| [IP2Location](https://www.ip2location.com/web-service/ip2location) | IP geolocation web service to get more than 55 parameters | `apiKey` | Yes | Unknown |\n| [IP2Proxy](https://www.ip2location.com/web-service/ip2proxy) | Detect proxy and VPN using IP address | `apiKey` | Yes | Unknown |\n| [ipapi.co](https://ipapi.co/api/#introduction) | Find IP address location information | No | Yes | Yes |\n| [ipapi.com](https://ipapi.com/) | Real-time Geolocation & Reverse IP Lookup REST API | `apiKey` | Yes | Unknown |\n| [IPGEO](https://api.techniknews.net/ipgeo/) | Unlimited free IP Address API with useful information | No | Yes | Unknown |\n| [ipgeolocation](https://ipgeolocation.io/) | IP Geolocation AP with free plan 30k requests per month | `apiKey` | Yes | Yes |\n| [IPInfoDB](https://www.ipinfodb.com/api) | Free Geolocation tools and APIs for country, region, city and time zone lookup by IP address | `apiKey` | Yes | Unknown |\n| [ipstack](https://ipstack.com/) | Locate and identify website visitors by IP address | `apiKey` | Yes | Unknown |\n| [Kakao Maps](https://apis.map.kakao.com) | Kakao Maps provide multiple APIs for Korean maps | `apiKey` | Yes | Unknown |\n| [keycdn IP Location Finder](https://tools.keycdn.com/geo) | Get the IP geolocation data through the simple REST API. All the responses are JSON encoded | `apiKey` | Yes | Unknown |\n| [LocationIQ](https://locationiq.org/docs/) | Provides forward/reverse geocoding and batch geocoding | `apiKey` | Yes | Yes |\n| [Longdo Map](https://map.longdo.com/docs/) | Interactive map with detailed places and information portal in Thailand | `apiKey` | Yes | Yes |\n| [Mapbox](https://docs.mapbox.com/) | Create/customize beautiful digital maps | `apiKey` | Yes | Unknown |\n| [MapQuest](https://developer.mapquest.com/) | To access tools and resources to map the world | `apiKey` | Yes | No | Yes\n| [Mexico](https://github.com/IcaliaLabs/sepomex) | Mexico RESTful zip codes API | No | Yes | Unknown |\n| [Nominatim](https://nominatim.org/release-docs/latest/api/Overview/) | Provides worldwide forward / reverse geocoding | No | Yes | Yes |\n| [One Map, Singapore](https://www.onemap.gov.sg/docs/) | Singapore Land Authority REST API services for Singapore addresses | `apiKey` | Yes | Unknown |\n| [OnWater](https://onwater.io/) | Determine if a lat/lon is on water or land | No | Yes | Unknown |\n| [Open Topo Data](https://www.opentopodata.org) | Elevation and ocean depth for a latitude and longitude | No | Yes | No |\n| [OpenCage](https://opencagedata.com) | Forward and reverse geocoding using open data | `apiKey` | Yes | Yes |\n| [openrouteservice.org](https://openrouteservice.org/) | Directions, POIs, isochrones, geocoding (+reverse), elevation, and more | `apiKey` | Yes | Unknown |\n| [OpenStreetMap](http://wiki.openstreetmap.org/wiki/API) | Navigation, geolocation and geographical data | `OAuth` | No | Unknown |\n| [Pinball Map](https://pinballmap.com/api/v1/docs) | A crowdsourced map of public pinball machines | No | Yes | Yes |\n| [positionstack](https://positionstack.com/) | Forward & Reverse Batch Geocoding REST API | `apiKey` | Yes | Unknown |\n| [Postali](https://postali.app/api) | Mexico Zip Codes API | No | Yes | Yes |\n| [PostcodeData.nl](http://api.postcodedata.nl/v1/postcode/?postcode=1211EP&streetnumber=60&ref=domeinnaam.nl&type=json) | Provide geolocation data based on postcode for Dutch addresses | No | No | Unknown |\n| [Postcodes.io](https://postcodes.io) | Postcode lookup & Geolocation for the UK | No | Yes | Yes |\n| [Queimadas INPE](https://queimadas.dgi.inpe.br/queimadas/dados-abertos/) | Access to heat focus data (probable wildfire) | No | Yes | Unknown |\n| [REST Countries](https://restcountries.com) | Get information about countries via a RESTful API | No | Yes | Yes |\n| [RoadGoat Cities](https://www.roadgoat.com/business/cities-api) | Cities content & photos API | `apiKey` | Yes | No |\n| [Rwanda Locations](https://rapidapi.com/victorkarangwa4/api/rwanda) | Rwanda Provences, Districts, Cities, Capital City, Sector, cells, villages and streets | No | Yes | Unknown |\n| [SLF](https://github.com/slftool/slftool.github.io/blob/master/API.md) | German city, country, river, database | No | Yes | Yes |\n| [SpotSense](https://spotsense.io/) | Add location based interactions to your mobile app | `apiKey` | Yes | Unknown |\n| [Telize](https://rapidapi.com/fcambus/api/telize/) | Telize offers location information from any IP address | `apiKey` | Yes | Yes |\n| [TomTom](https://developer.tomtom.com/) | Maps, Directions, Places and Traffic APIs | `apiKey` | Yes | Yes |\n| [Uebermaps](https://uebermaps.com/api/v2) | Discover and share maps with friends | `apiKey` | Yes | Unknown |\n| [US ZipCode](https://www.smarty.com/docs/cloud/us-zipcode-api) | Validate and append data for any US ZipCode | `apiKey` | Yes | Yes |\n| [Utah AGRC](https://api.mapserv.utah.gov) | Utah Web API for geocoding Utah addresses | `apiKey` | Yes | Unknown |\n| [ViaCep](https://viacep.com.br) | Brazil RESTful zip codes API | No | Yes | Unknown |\n| [What3Words](https://what3words.com) | Three words as rememberable and unique coordinates worldwide | `apiKey` | Yes | Unknown |\n| [Yandex.Maps Geocoder](https://yandex.com/dev/maps/geocoder) | Use geocoding to get an object's coordinates from its address | `apiKey` | Yes | Unknown |\n| [ZipCodeAPI](https://www.zipcodeapi.com) | US zip code distance, radius and location API | `apiKey` | Yes | Unknown |\n| [Zippopotam.us](http://www.zippopotam.us) | Get information about place such as country, city, state, etc | No | No | Unknown |\n| [Ziptastic](https://ziptasticapi.com/) | Get the country, state, and city of any US zip-code | No | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Government\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Bank Negara Malaysia Open Data](https://apikijangportal.bnm.gov.my/) | Malaysia Central Bank Open Data | No | Yes | Unknown |\n| [BCLaws](https://www.bclaws.gov.bc.ca/civix/template/complete/api/index.html) | Access to the laws of British Columbia | No | No | Unknown |\n| [Brazil](https://brasilapi.com.br/) | Community driven API for Brazil Public Data | No | Yes | Yes |\n| [Brazil Central Bank Open Data](https://dadosabertos.bcb.gov.br/) | Brazil Central Bank Open Data | No | Yes | Unknown |\n| [Brazil Receita WS](https://www.receitaws.com.br/) | Consult companies by CNPJ for Brazilian companies | No | Yes | Unknown |\n| [Brazilian Chamber of Deputies Open Data](https://dadosabertos.camara.leg.br/swagger/api.html) | Provides legislative information in Apis XML and JSON, as well as files in various formats | No | Yes | No |\n| [Census.gov](https://www.census.gov/data/developers/data-sets.html) | The US Census Bureau provides various APIs and data sets on demographics and businesses | No | Yes | Unknown |\n| [City, Berlin](https://daten.berlin.de/) | Berlin(DE) City Open Data | No | Yes | Unknown |\n| [City, Gda\u0144sk](https://ckan.multimediagdansk.pl/en) | Gda\u0144sk (PL) City Open Data | No | Yes | Unknown |\n| [City, Gdynia](http://otwartedane.gdynia.pl/en/api_doc.html) | Gdynia (PL) City Open Data | No | No | Unknown |\n| [City, Helsinki](https://hri.fi/en_gb/) | Helsinki(FI) City Open Data | No | Yes | Unknown |\n| [City, Lviv](https://opendata.city-adm.lviv.ua/) | Lviv(UA) City Open Data | No | Yes | Unknown |\n| [City, Nantes Open Data](https://data.nantesmetropole.fr/pages/home/) | Nantes(FR) City Open Data | `apiKey` | Yes | Unknown |\n| [City, New York Open Data](https://opendata.cityofnewyork.us/) | New York (US) City Open Data | No | Yes | Unknown |\n| [City, Prague Open Data](http://opendata.praha.eu/en) | Prague(CZ) City Open Data | No | No | Unknown |\n| [City, Toronto Open Data](https://open.toronto.ca/) | Toronto (CA) City Open Data | No | Yes | Yes |\n| [Code.gov](https://code.gov) | The primary platform for Open Source and code sharing for the U.S. Federal Government | `apiKey` | Yes | Unknown |\n| [Colorado Information Marketplace](https://data.colorado.gov/) | Colorado State Government Open Data | No | Yes | Unknown |\n| [Data USA](https://datausa.io/about/api/) | US Public Data | No | Yes | Unknown |\n| [Data.gov](https://api.data.gov/) | US Government Data | `apiKey` | Yes | Unknown |\n| [Data.parliament.uk](https://explore.data.parliament.uk/?learnmore=Members) | Contains live datasets including information about petitions, bills, MP votes, attendance and more | No | No | Unknown |\n| [Deutscher Bundestag DIP](https://dip.bundestag.de/documents/informationsblatt_zur_dip_api_v01.pdf) | This API provides read access to DIP entities (e.g. activities, persons, printed material) | `apiKey` | Yes | Unknown |\n| [District of Columbia Open Data](http://opendata.dc.gov/pages/using-apis) | Contains D.C. government public datasets, including crime, GIS, financial data, and so on | No | Yes | Unknown |\n| [EPA](https://www.epa.gov/developers/data-data-products#apis) | Web services and data sets from the US Environmental Protection Agency | No | Yes | Unknown |\n| [FBI Wanted](https://www.fbi.gov/wanted/api) | Access information on the FBI Wanted program | No | Yes | Unknown |\n| [FEC](https://api.open.fec.gov/developers/) | Information on campaign donations in federal elections | `apiKey` | Yes | Unknown |\n| [Federal Register](https://www.federalregister.gov/reader-aids/developer-resources/rest-api) | The Daily Journal of the United States Government | No | Yes | Unknown |\n| [Food Standards Agency](http://ratings.food.gov.uk/open-data/en-GB) | UK food hygiene rating data API | No | No | Unknown |\n| [Gazette Data, UK](https://www.thegazette.co.uk/data) | UK official public record API | `OAuth` | Yes | Unknown |\n| [Gun Policy](https://www.gunpolicy.org/api) | International firearm injury prevention and policy | `apiKey` | Yes | Unknown |\n| [INEI](http://iinei.inei.gob.pe/microdatos/) | Peruvian Statistical Government Open Data | No | No | Unknown |\n| [Interpol Red Notices](https://interpol.api.bund.dev/) | Access and search Interpol Red Notices | No | Yes | Unknown |\n| [Istanbul (\u0130BB) Open Data](https://data.ibb.gov.tr) | Data sets from the \u0130stanbul Metropolitan Municipality (\u0130BB) | No | Yes | Unknown |\n| [National Park Service, US](https://www.nps.gov/subjects/developer/) | Data from the US National Park Service | `apiKey` | Yes | Yes |\n| [Open Government, ACT](https://www.data.act.gov.au/) | Australian Capital Territory Open Data | No | Yes | Unknown |\n| [Open Government, Argentina](https://datos.gob.ar/) | Argentina Government Open Data | No | Yes | Unknown |\n| [Open Government, Australia](https://www.data.gov.au/) | Australian Government Open Data | No | Yes | Unknown |\n| [Open Government, Austria](https://www.data.gv.at/) | Austria Government Open Data | No | Yes | Unknown |\n| [Open Government, Belgium](https://data.gov.be/) | Belgium Government Open Data | No | Yes | Unknown |\n| [Open Government, Canada](http://open.canada.ca/en) | Canadian Government Open Data | No | No | Unknown |\n| [Open Government, Colombia](https://www.dane.gov.co/) | Colombia Government Open Data | No | No | Unknown |\n| [Open Government, Cyprus](https://data.gov.cy/?language=en) | Cyprus Government Open Data | No | Yes | Unknown |\n| [Open Government, Czech Republic](https://data.gov.cz/english/) | Czech Republic Government Open Data | No | Yes | Unknown |\n| [Open Government, Denmark](https://www.opendata.dk/) | Denmark Government Open Data | No | Yes | Unknown |\n| [Open Government, Estonia](https://avaandmed.eesti.ee/instructions/opendata-dataset-api) | Estonia Government Open Data | `apiKey` | Yes | Unknown |\n| [Open Government, Finland](https://www.avoindata.fi/en) | Finland Government Open Data | No | Yes | Unknown |\n| [Open Government, France](https://www.data.gouv.fr/) | French Government Open Data | `apiKey` | Yes | Unknown |\n| [Open Government, Germany](https://www.govdata.de/daten/-/details/govdata-metadatenkatalog) | Germany Government Open Data | No | Yes | Unknown |\n| [Open Government, Greece](https://data.gov.gr/) | Greece Government Open Data | `OAuth` | Yes | Unknown |\n| [Open Government, India](https://data.gov.in/) | Indian Government Open Data | `apiKey` | Yes | Unknown |\n| [Open Government, Ireland](https://data.gov.ie/pages/developers) | Ireland Government Open Data | No | Yes | Unknown |\n| [Open Government, Italy](https://www.dati.gov.it/) | Italy Government Open Data | No | Yes | Unknown |\n| [Open Government, Korea](https://www.data.go.kr/) | Korea Government Open Data | `apiKey` | Yes | Unknown |\n| [Open Government, Lithuania](https://data.gov.lt/public/api/1) | Lithuania Government Open Data | No | Yes | Unknown |\n| [Open Government, Luxembourg](https://data.public.lu) | Luxembourgish Government Open Data | `apiKey` | Yes | Unknown |\n| [Open Government, Mexico](https://www.inegi.org.mx/datos/) | Mexican Statistical Government Open Data | No | Yes | Unknown |\n| [Open Government, Mexico](https://datos.gob.mx/) | Mexico Government Open Data | No | Yes | Unknown |\n| [Open Government, Netherlands](https://data.overheid.nl/en/ondersteuning/data-publiceren/api) | Netherlands Government Open Data | No | Yes | Unknown |\n| [Open Government, New South Wales](https://api.nsw.gov.au/) | New South Wales Government Open Data | `apiKey` | Yes | Unknown |\n| [Open Government, New Zealand](https://www.data.govt.nz/) | New Zealand Government Open Data | No | Yes | Unknown |\n| [Open Government, Norway](https://data.norge.no/dataservices) | Norwegian Government Open Data | No | Yes | Yes |\n| [Open Government, Peru](https://www.datosabiertos.gob.pe/) | Peru Government Open Data | No | Yes | Unknown |\n| [Open Government, Poland](https://dane.gov.pl/en) | Poland Government Open Data | No | Yes | Yes |\n| [Open Government, Portugal](https://dados.gov.pt/en/docapi/) | Portugal Government Open Data | No | Yes | Yes |\n| [Open Government, Queensland Government](https://www.data.qld.gov.au/) | Queensland Government Open Data | No | Yes | Unknown |\n| [Open Government, Romania](http://data.gov.ro/) | Romania Government Open Data | No | No | Unknown |\n| [Open Government, Saudi Arabia](https://data.gov.sa) | Saudi Arabia Government Open Data | No | Yes | Unknown |\n| [Open Government, Singapore](https://data.gov.sg/developer) | Singapore Government Open Data | No | Yes | Unknown |\n| [Open Government, Slovakia](https://data.gov.sk/en/) | Slovakia Government Open Data | No | Yes | Unknown |\n| [Open Government, Slovenia](https://podatki.gov.si/) | Slovenia Government Open Data | No | Yes | No |\n| [Open Government, South Australian Government](https://data.sa.gov.au/) | South Australian Government Open Data | No | Yes | Unknown |\n| [Open Government, Spain](https://datos.gob.es/en) | Spain Government Open Data | No | Yes | Unknown |\n| [Open Government, Sweden](https://www.dataportal.se/en/dataservice/91_29789/api-for-the-statistical-database) | Sweden Government Open Data | No | Yes | Unknown |\n| [Open Government, Switzerland](https://handbook.opendata.swiss/de/content/nutzen/api-nutzen.html) | Switzerland Government Open Data | No | Yes | Unknown |\n| [Open Government, Taiwan](https://data.gov.tw/) | Taiwan Government Open Data | No | Yes | Unknown |\n| [Open Government, Thailand](https://data.go.th/) | Thailand Government Open Data | `apiKey` | Yes | Unknown |\n| [Open Government, UK](https://data.gov.uk/) | UK Government Open Data | No | Yes | Unknown |\n| [Open Government, USA](https://www.data.gov/) | United States Government Open Data | No | Yes | Unknown |\n| [Open Government, Victoria State Government](https://www.data.vic.gov.au/) | Victoria State Government Open Data | No | Yes | Unknown |\n| [Open Government, West Australia](https://data.wa.gov.au/) | West Australia Open Data | No | Yes | Unknown |\n| [PRC Exam Schedule](https://api.whenisthenextboardexam.com/docs/) | Unofficial Philippine Professional Regulation Commission's examination schedule | No | Yes | Yes |\n| [Represent by Open North](https://represent.opennorth.ca/) | Find Canadian Government Representatives | No | Yes | Unknown |\n| [UK Companies House](https://developer.company-information.service.gov.uk/) | UK Companies House Data from the UK government | `OAuth` | Yes | Unknown |\n| [US Presidential Election Data by TogaTech](https://uselection.togatech.org/api/) | Basic candidate data and live electoral vote counts for top two parties in US presidential election | No | Yes | No |\n| [USA.gov](https://www.usa.gov/developer) | Authoritative information on U.S. programs, events, services and more | `apiKey` | Yes | Unknown |\n| [USAspending.gov](https://api.usaspending.gov/) | US federal spending data | No | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Health\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [CMS.gov](https://data.cms.gov/provider-data/) | Access to the data from the CMS - medicare.gov | `apiKey` | Yes | Unknown |\n| [Coronavirus](https://pipedream.com/@pravin/http-api-for-latest-wuhan-coronavirus-data-2019-ncov-p_G6CLVM/readme) | HTTP API for Latest Covid-19 Data | No | Yes | Unknown |\n| [Coronavirus in the UK](https://coronavirus.data.gov.uk/details/developers-guide) | UK Government coronavirus data, including deaths and cases by region | No | Yes | Unknown |\n| [Covid Tracking Project](https://covidtracking.com/data/api/version-2) | Covid-19  data for the US | No | Yes | No |\n| [Covid-19](https://covid19api.com/) | Covid 19 spread, infection and recovery | No | Yes | Yes |\n| [Covid-19](https://github.com/M-Media-Group/Covid-19-API) | Covid 19 cases, deaths and recovery per country | No | Yes | Yes |\n| [Covid-19 Datenhub](https://npgeo-corona-npgeo-de.hub.arcgis.com) | Maps, datasets, applications and more in the context of COVID-19 | No | Yes | Unknown |\n| [Covid-19 Government Response](https://covidtracker.bsg.ox.ac.uk) | Government measures tracker to fight against the Covid-19 pandemic | No | Yes | Yes |\n| [Covid-19 India](https://data.covid19india.org/) | Covid 19 statistics state and district wise about cases, vaccinations, recovery within India | No | Yes | Unknown |\n| [Covid-19 JHU CSSE](https://nuttaphat.com/covid19-api/) | Open-source API for exploring Covid19 cases based on JHU CSSE | No | Yes | Yes |\n| [Covid-19 Live Data](https://github.com/mathdroid/covid-19-api) | Global and countrywise data of Covid 19 daily Summary, confirmed cases, recovered and deaths | No | Yes | Yes |\n| [Covid-19 Philippines](https://github.com/Simperfy/Covid-19-API-Philippines-DOH) | Unofficial Covid-19 Web API for Philippines from data collected by DOH | No | Yes | Yes |\n| [COVID-19 Tracker Canada](https://api.covid19tracker.ca/docs/1.0/overview) | Details on Covid-19 cases across Canada | No | Yes | Unknown |\n| [COVID-19 Tracker Sri Lanka](https://www.hpb.health.gov.lk/en/api-documentation) | Provides situation of the COVID-19 patients reported in Sri Lanka | No | Yes | Unknown |\n| [COVID-ID](https://data.covid19.go.id/public/api/prov.json) | Indonesian government Covid data per province | No | Yes | Yes |\n| [Dataflow Kit COVID-19](https://covid-19.dataflowkit.com) | COVID-19 live statistics into sites per hour | No | Yes | Unknown |\n| [FoodData Central](https://fdc.nal.usda.gov/) | National Nutrient Database for Standard Reference | `apiKey` | Yes | Unknown |\n| [Healthcare.gov](https://www.healthcare.gov/developers/) | Educational content about the US Health Insurance Marketplace | No | Yes | Unknown |\n| [Humanitarian Data Exchange](https://data.humdata.org/) | Humanitarian Data Exchange (HDX) is open platform for sharing data across crises and organisations | No | Yes | Unknown |\n| [Infermedica](https://developer.infermedica.com/docs/) | NLP based symptom checker and patient triage API for health diagnosis from text | `apiKey` | Yes | Yes |\n| [LAPIS](https://cov-spectrum.ethz.ch/public) | SARS-CoV-2 genomic sequences from public sources | No | Yes | Yes |\n| [Lexigram](https://docs.lexigram.io/) | NLP that extracts mentions of clinical concepts from text, gives access to clinical ontology | `apiKey` | Yes | Unknown |\n| [Makeup](http://makeup-api.herokuapp.com/) | Makeup Information | No | No | Unknown |\n| [MyVaccination](https://documenter.getpostman.com/view/16605343/Tzm8GG7u) | Vaccination data for Malaysia | No | Yes | Unknown |\n| [NPPES](https://npiregistry.cms.hhs.gov/registry/help-api) | National Plan & Provider Enumeration System, info on healthcare providers registered in US | No | Yes | Unknown |\n| [Nutritionix](https://developer.nutritionix.com/) | Worlds largest verified nutrition database | `apiKey` | Yes | Unknown |\n| [Open Data NHS Scotland](https://www.opendata.nhs.scot) | Medical reference data and statistics by Public Health Scotland | No | Yes | Unknown |\n| [Open Disease](https://disease.sh/) | API for Current cases and more stuff about COVID-19 and Influenza | No | Yes | Yes |\n| [openFDA](https://open.fda.gov) | Public FDA data about drugs, devices and foods | `apiKey` | Yes | Unknown |\n| [Orion Health](https://developer.orionhealth.io/) | Medical platform which allows the development of applications for different healthcare scenarios | `OAuth` | Yes | Unknown |\n| [Quarantine](https://quarantine.country/coronavirus/api/) | Coronavirus API with free COVID-19 live updates | No | Yes | Yes |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Jobs\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Adzuna](https://developer.adzuna.com/overview) | Job board aggregator | `apiKey` | Yes | Unknown |\n| [Arbeitnow](https://documenter.getpostman.com/view/18545278/UVJbJdKh) | API for Job board aggregator in Europe / Remote | No | Yes | Yes |\n| [Arbeitsamt](https://jobsuche.api.bund.dev/) | API for the \"Arbeitsamt\", which is a german Job board aggregator | `OAuth` | Yes | Unknown |\n| [Careerjet](https://www.careerjet.com/partners/api/) | Job search engine | `apiKey` | No | Unknown |\n| [DevITjobs UK](https://devitjobs.uk/job_feed.xml) | Jobs with GraphQL | No | Yes | Yes |\n| [Findwork](https://findwork.dev/developers/) | Job board | `apiKey` | Yes | Unknown |\n| [GraphQL Jobs](https://graphql.jobs/docs/api/) | Jobs with GraphQL | No | Yes | Yes |\n| [Jobs2Careers](http://api.jobs2careers.com/api/spec.pdf) | Job aggregator | `apiKey` | Yes | Unknown |\n| [Jooble](https://jooble.org/api/about) | Job search engine | `apiKey` | Yes | Unknown |\n| [Juju](http://www.juju.com/publisher/spec/) | Job search engine | `apiKey` | No | Unknown |\n| [Open Skills](https://github.com/workforce-data-initiative/skills-api/wiki/API-Overview) | Job titles, skills and related jobs data | No | No | Unknown |\n| [Reed](https://www.reed.co.uk/developers) | Job board aggregator | `apiKey` | Yes | Unknown |\n| [The Muse](https://www.themuse.com/developers/api/v2) | Job board and company profiles | `apiKey` | Yes | Unknown |\n| [Upwork](https://developers.upwork.com/) | Freelance job board and management system | `OAuth` | Yes | Unknown |\n| [USAJOBS](https://developer.usajobs.gov/) | US government job board | `apiKey` | Yes | Unknown |\n| [WhatJobs](https://www.whatjobs.com/affiliates) | Job search engine | `apiKey` | Yes | Unknown |\n| [ZipRecruiter](https://www.ziprecruiter.com/publishers) | Job search app and website | `apiKey` | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Machine Learning\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [AI For Thai](https://aiforthai.in.th/index.php) | Free Various Thai AI API | `apiKey` | Yes | Yes |\n| [Clarifai](https://docs.clarifai.com/api-guide/api-overview) | Computer Vision | `OAuth` | Yes | Unknown |\n| [Cloudmersive](https://www.cloudmersive.com/image-recognition-and-processing-api) | Image captioning, face recognition, NSFW classification | `apiKey` | Yes | Yes |\n| [Deepcode](https://www.deepcode.ai) | AI for code review | No | Yes | Unknown |\n| [Dialogflow](https://cloud.google.com/dialogflow/docs/) | Natural Language Processing | `apiKey` | Yes | Unknown |\n| [EXUDE-API](http://uttesh.com/exude-api/) | Used for the primary ways for filtering the stopping, stemming words from the text data | No | Yes | Yes |\n| [Hirak FaceAPI](https://faceapi.hirak.site/) | Face detection, face recognition with age estimation/gender estimation, accurate, no quota limits | `apiKey` | Yes | Unknown |    \n| [Imagga](https://imagga.com/) | Image Recognition Solutions like Tagging, Visual Search, NSFW moderation | `apiKey` | Yes | Unknown |\n| [Inferdo](https://rapidapi.com/user/inferdo) | Computer Vision services like Facial detection, Image labeling, NSFW classification | `apiKey` | Yes | Unknown |\n| [IPS Online](https://docs.identity.ps/docs) | Face and License Plate Anonymization | `apiKey` | Yes | Unknown |\n| [Irisnet](https://irisnet.de/api/) | Realtime content moderation API that blocks or blurs unwanted images in real-time | `apiKey` | Yes | Yes |\n| [Keen IO](https://keen.io/) | Data Analytics | `apiKey` | Yes | Unknown |\n| [Machinetutors](https://www.machinetutors.com/portfolio/MT_api.html) | AI Solutions: Video/Image Classification & Tagging, NSFW, Icon/Image/Audio Search, NLP | `apiKey` | Yes | Yes |\n| [MessengerX.io](https://messengerx.rtfd.io) | A FREE API for developers to build and monetize personalized ML based chat apps | `apiKey` | Yes | Yes |\n| [NLP Cloud](https://nlpcloud.io) | NLP API using spaCy and transformers for NER, sentiments, classification, summarization, and more | `apiKey` | Yes | Unknown |\n| [OpenVisionAPI](https://openvisionapi.com) | Open source computer vision API based on open source models | No | Yes | Yes |\n| [Perspective](https://perspectiveapi.com) | NLP API to return probability that if text is toxic, obscene, insulting or threatening | `apiKey` | Yes | Unknown |\n| [Roboflow Universe](https://universe.roboflow.com) | Pre-trained computer vision models | `apiKey` | Yes | Yes |\n| [SkyBiometry](https://skybiometry.com/documentation/) | Face Detection, Face Recognition and Face Grouping | `apiKey` | Yes | Unknown |\n| [Time Door](https://timedoor.io) | A time series analysis API | `apiKey` | Yes | Yes |\n| [Unplugg](https://unplu.gg/test_api.html) | Forecasting API for timeseries data | `apiKey` | Yes | Unknown |\n| [WolframAlpha](https://products.wolframalpha.com/api/) | Provides specific answers to questions using data and algorithms | `apiKey` | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Music\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [7digital](https://docs.7digital.com/reference) | Api of Music store 7digital | `OAuth` | Yes | Unknown |\n| [AI Mastering](https://aimastering.com/api_docs/) | Automated Music Mastering | `apiKey` | Yes | Yes |\n| [Audiomack](https://www.audiomack.com/data-api/docs) | Api of the streaming music hub Audiomack | `OAuth` | Yes | Unknown |\n| [Bandcamp](https://bandcamp.com/developer) | API of Music store Bandcamp | `OAuth` | Yes | Unknown |\n| [Bandsintown](https://app.swaggerhub.com/apis/Bandsintown/PublicAPI/3.0.0) | Music Events | No | Yes | Unknown |\n| [Deezer](https://developers.deezer.com/api) | Music | `OAuth` | Yes | Unknown |\n| [Discogs](https://www.discogs.com/developers/) | Music | `OAuth` | Yes | Unknown |\n| [Freesound](https://freesound.org/docs/api/) | Music Samples | `apiKey` | Yes | Unknown |\n| [Gaana](https://github.com/cyberboysumanjay/GaanaAPI) | API to retrieve song information from Gaana | No | Yes | Unknown |\n| [Genius](https://docs.genius.com/) | Crowdsourced lyrics and music knowledge | `OAuth` | Yes | Unknown |\n| [Genrenator](https://binaryjazz.us/genrenator-api/) | Music genre generator | No | Yes | Unknown |\n| [iTunes Search](https://affiliate.itunes.apple.com/resources/documentation/itunes-store-web-service-search-api/) | Software products | No | Yes | Unknown |\n| [Jamendo](https://developer.jamendo.com/v3.0/docs) | Music | `OAuth` | Yes | Unknown |\n| [JioSaavn](https://github.com/cyberboysumanjay/JioSaavnAPI) | API to retrieve song information, album meta data and many more from JioSaavn | No | Yes | Unknown |\n| [KKBOX](https://developer.kkbox.com) | Get music libraries, playlists, charts, and perform out of KKBOX's platform | `OAuth` | Yes | Unknown |\n| [KSoft.Si Lyrics](https://docs.ksoft.si/api/lyrics-api) | API to get lyrics for songs | `apiKey` | Yes | Unknown |\n| [LastFm](https://www.last.fm/api) | Music | `apiKey` | Yes | Unknown |\n| [Lyrics.ovh](https://lyricsovh.docs.apiary.io) | Simple API to retrieve the lyrics of a song | No | Yes | Unknown |\n| [Mixcloud](https://www.mixcloud.com/developers/) | Music | `OAuth` | Yes | Yes |\n| [MusicBrainz](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2) | Music | No | Yes | Unknown |\n| [Musixmatch](https://developer.musixmatch.com/) | Music | `apiKey` | Yes | Unknown |\n| [Napster](https://developer.napster.com/api/v2.2) | Music | `apiKey` | Yes | Yes |\n| [Openwhyd](https://openwhyd.github.io/openwhyd/API) | Download curated playlists of streaming tracks (YouTube, SoundCloud, etc...) | No | Yes | No |\n| [Phishin](https://phish.in/api-docs) | A web-based archive of legal live audio recordings of the improvisational rock band Phish | `apiKey` | Yes | No |\n| [Radio Browser](https://api.radio-browser.info/) | List of internet radio stations | No | Yes | Yes |\n| [Songkick](https://www.songkick.com/developer/) | Music Events | `apiKey` | Yes | Unknown |\n| [Songlink / Odesli](https://www.notion.so/API-d0ebe08a5e304a55928405eb682f6741) | Get all the services on which a song is available | `apiKey` | Yes | Yes |\n| [Songsterr](https://www.songsterr.com/a/wa/api/) | Provides guitar, bass and drums tabs and chords | No | Yes | Unknown |\n| [SoundCloud](https://developers.soundcloud.com/docs/api/guide) | With SoundCloud API you can build applications that will give more power to control your content | `OAuth` | Yes | Unknown |\n| [Spotify](https://beta.developer.spotify.com/documentation/web-api/) | View Spotify music catalog, manage users' libraries, get recommendations and more | `OAuth` | Yes | Unknown |\n| [TasteDive](https://tastedive.com/read/api) | Similar artist API (also works for movies and TV shows) | `apiKey` | Yes | Unknown |\n| [TheAudioDB](https://www.theaudiodb.com/api_guide.php) | Music | `apiKey` | Yes | Unknown |\n| [Vagalume](https://api.vagalume.com.br/docs/) | Crowdsourced lyrics and music knowledge | `apiKey` | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### News\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [apilayer mediastack](https://mediastack.com/) | Free, Simple REST API for Live News & Blog Articles | `apiKey` | Yes | Unknown |\n| [Associated Press](https://developer.ap.org/) | Search for news and metadata from Associated Press | `apiKey` | Yes | Unknown |\n| [Chronicling America](http://chroniclingamerica.loc.gov/about/api/) | Provides access to millions of pages of historic US newspapers from the Library of Congress | No | No | Unknown |\n| [Currents](https://currentsapi.services/) | Latest news published in various news sources, blogs and forums | `apiKey` | Yes | Yes |\n| [Feedbin](https://github.com/feedbin/feedbin-api) | RSS reader | `OAuth` | Yes | Unknown |\n| [GNews](https://gnews.io/) | Search for news from various sources | `apiKey` | Yes | Yes |\n| [Graphs for Coronavirus](https://corona.dnsforfamily.com/api.txt) | Each Country separately and Worldwide Graphs for Coronavirus. Daily updates | No | Yes | Yes |\n| [Inshorts News](https://github.com/cyberboysumanjay/Inshorts-News-API) | Provides news from inshorts | No | Yes | Unknown |\n| [MarketAux](https://www.marketaux.com/) | Live stock market news with tagged tickers + sentiment and stats JSON API | `apiKey` | Yes | Yes |\n| [New York Times](https://developer.nytimes.com/) | The New York Times Developer Network | `apiKey` | Yes | Unknown |\n| [News](https://newsapi.org/) | Headlines currently published on a range of news sources and blogs | `apiKey` | Yes | Unknown |\n| [NewsData](https://newsdata.io/docs) | News data API for live-breaking news and headlines from reputed  news sources | `apiKey` | Yes | Unknown |\n| [NewsX](https://rapidapi.com/machaao-inc-machaao-inc-default/api/newsx/) | Get or Search Latest Breaking News with ML Powered Summaries \ud83e\udd16 | `apiKey` | Yes | Unknown |\n| [NPR One](http://dev.npr.org/api/) | Personalized news listening experience from NPR | `OAuth` | Yes | Unknown |\n| [Spaceflight News](https://spaceflightnewsapi.net) | Spaceflight related news \ud83d\ude80 | No | Yes | Yes |\n| [The Guardian](http://open-platform.theguardian.com/) | Access all the content the Guardian creates, categorised by tags and section | `apiKey` | Yes | Unknown |\n| [The Old Reader](https://github.com/theoldreader/api) | RSS reader | `apiKey` | Yes | Unknown |\n| [TheNews](https://www.thenewsapi.com/) | Aggregated headlines, top story and live news JSON API | `apiKey` | Yes | Yes |\n| [Trove](https://trove.nla.gov.au/about/create-something/using-api) | Search through the National Library of Australia collection of 1000s of digitised newspapers | `apiKey` | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Open Data\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [18F](http://18f.github.io/API-All-the-X/) | Unofficial US Federal Government API Development | No | No | Unknown |\n| [API Setu](https://www.apisetu.gov.in/) | An Indian Government platform that provides a lot of APIS for KYC, business, education & employment | No | Yes | Yes |\n| [Archive.org](https://archive.readme.io/docs) | The Internet Archive | No | Yes | No |\n| [Black History Facts](https://www.blackhistoryapi.io/docs) | Contribute or search one of the largest black history fact databases on the web | `apiKey` | Yes | Yes |\n| [BotsArchive](https://botsarchive.com/docs.html) | JSON formatted details about Telegram Bots available in database | No | Yes | Unknown |\n| [Callook.info](https://callook.info) | United States ham radio callsigns | No | Yes | Unknown |\n| [CARTO](https://carto.com/) | Location Information Prediction | `apiKey` | Yes | Unknown |\n| [CollegeScoreCard.ed.gov](https://collegescorecard.ed.gov/data/) | Data on higher education institutions in the United States | No | Yes | Unknown |\n| [Enigma Public](https://developers.enigma.com/docs) | Broadest collection of public data | `apiKey` | Yes | Yes |\n| [French Address Search](https://geo.api.gouv.fr/adresse) | Address search via the French Government | No | Yes | Unknown |\n| [GENESIS](https://www.destatis.de/EN/Service/OpenData/api-webservice.html) | Federal Statistical Office Germany | `OAuth` | Yes | Unknown |\n| [Joshua Project](https://api.joshuaproject.net/) | People groups of the world with the fewest followers of Christ | `apiKey` | Yes | Unknown |\n| [Kaggle](https://www.kaggle.com/docs/api) | Create and interact with Datasets, Notebooks, and connect with Kaggle | `apiKey` | Yes | Unknown |\n| [LinkPreview](https://www.linkpreview.net) | Get JSON formatted summary with title, description and preview image for any requested URL | `apiKey` | Yes | Yes |\n| [Lowy Asia Power Index](https://github.com/0x0is1/lowy-index-api-docs) | Get measure resources and influence to rank the relative power of states in Asia | No | Yes | Unknown |\n| [Microlink.io](https://microlink.io) | Extract structured data from any website | No | Yes | Yes |\n| [Nasdaq Data Link](https://docs.data.nasdaq.com/) | Stock market data | `apiKey` | Yes | Unknown |\n| [Nobel Prize](https://www.nobelprize.org/about/developer-zone-2/) | Open data about nobel prizes and events | No | Yes | Yes |\n| [Open Data Minneapolis](https://opendata.minneapolismn.gov/) | Spatial (GIS) and non-spatial city data for Minneapolis | No | Yes | No |\n| [openAFRICA](https://africaopendata.org/) | Large datasets repository of African open data | No | Yes | Unknown |\n| [OpenCorporates](http://api.opencorporates.com/documentation/API-Reference) | Data on corporate entities and directors in many countries | `apiKey` | Yes | Unknown |\n| [OpenSanctions](https://www.opensanctions.org/docs/api/) | Data on international sanctions, crime and politically exposed persons | No | Yes | Yes |\n| [PeakMetrics](https://rapidapi.com/peakmetrics-peakmetrics-default/api/peakmetrics-news) | News articles and public datasets | `apiKey` | Yes | Unknown |\n| [Recreation Information Database](https://ridb.recreation.gov/) | Recreational areas, federal lands, historic sites, museums, and other attractions/resources(US) | `apiKey` | Yes | Unknown |\n| [Scoop.it](http://www.scoop.it/dev) | Content Curation Service | `apiKey` | No | Unknown |\n| [Socrata](https://dev.socrata.com/) | Access to Open Data from Governments, Non-profits and NGOs around the world | `OAuth` | Yes | Yes |\n| [Teleport](https://developers.teleport.org/) | Quality of Life Data | No | Yes | Unknown |\n| [Ume\u00e5 Open Data](https://opendata.umea.se/api/) | Open data of the city Ume\u00e5 in northen Sweden | No | Yes | Yes |\n| [Universities List](https://github.com/Hipo/university-domains-list) | University names, countries and domains | No | Yes | Unknown |\n| [University of Oslo](https://data.uio.no/) | Courses, lecture videos, detailed information for courses etc. for the University of Oslo (Norway) | No | Yes | Unknown |\n| [UPC database](https://upcdatabase.org/api) | More than 1.5 million barcode numbers from all around the world | `apiKey` | Yes | Unknown |\n| [Urban Observatory](https://urbanobservatory.ac.uk) | The largest set of publicly available real time urban data in the UK | No | No | No |\n| [Wikidata](https://www.wikidata.org/w/api.php?action=help) | Collaboratively edited knowledge base operated by the Wikimedia Foundation | `OAuth` | Yes | Unknown |\n| [Wikipedia](https://www.mediawiki.org/wiki/API:Main_page) | Mediawiki Encyclopedia | No | Yes | Unknown |\n| [Yelp](https://www.yelp.com/developers/documentation/v3) | Find Local Business | `OAuth` | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Open Source Projects\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Countly](https://api.count.ly/reference) | Countly web analytics | No | No | Unknown |\n| [Creative Commons Catalog](https://api.creativecommons.engineering/) | Search among openly licensed and public domain works | `OAuth` | Yes | Yes |\n| [Datamuse](https://www.datamuse.com/api/) | Word-finding query engine | No | Yes | Unknown |\n| [Drupal.org](https://www.drupal.org/drupalorg/docs/api) | Drupal.org | No | Yes | Unknown |\n| [Evil Insult Generator](https://evilinsult.com/api) | Evil Insults | No | Yes | Yes |\n| [GitHub Contribution Chart Generator](https://github-contributions.vercel.app) | Create an image of your GitHub contributions | No | Yes | Yes |\n| [GitHub ReadMe Stats](https://github.com/anuraghazra/github-readme-stats) | Add dynamically generated statistics to your GitHub profile ReadMe | No | Yes | Yes |\n| [Metabase](https://www.metabase.com/) | An open source Business Intelligence server to share data and analytics inside your company | No | Yes | Yes |\n| [Shields](https://shields.io/) | Concise, consistent, and legible badges in SVG and raster format | No | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Patent\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [EPO](https://developers.epo.org/) | European patent search system api | `OAuth` | Yes | Unknown |\n| [PatentsView ](https://patentsview.org/apis/purpose) | API is intended to explore and visualize trends/patterns across the US innovation landscape | No | Yes | Unknown |\n| [TIPO](https://tiponet.tipo.gov.tw/Gazette/OpenData/OD/OD05.aspx?QryDS=API00) | Taiwan patent search system api | `apiKey` | Yes | Unknown |\n| [USPTO](https://www.uspto.gov/learning-and-resources/open-data-and-mobility) | USA patent api services | No | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Personality\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Advice Slip](http://api.adviceslip.com/) | Generate random advice slips | No | Yes | Unknown |\n| [Biriyani As A Service](https://biriyani.anoram.com/) | Biriyani images placeholder | No | Yes | No |\n| [Dev.to](https://developers.forem.com/api) | Access Forem articles, users and other resources via API | `apiKey` | Yes | Unknown |\n| [Dictum](https://github.com/fisenkodv/dictum) | API to get access to the collection of the most inspiring expressions of mankind | No | Yes | Unknown |\n| [FavQs.com](https://favqs.com/api) | FavQs allows you to collect, discover and share your favorite quotes | `apiKey` | Yes | Unknown |\n| [FOAAS](http://www.foaas.com/) | Fuck Off As A Service | No | No | Unknown |\n| [Forismatic](http://forismatic.com/en/api/) | Inspirational Quotes | No | No | Unknown |\n| [icanhazdadjoke](https://icanhazdadjoke.com/api) | The largest selection of dad jokes on the internet | No | Yes | Unknown |\n| [Inspiration](https://inspiration.goprogram.ai/docs/) | Motivational and Inspirational quotes | No | Yes | Yes |\n| [kanye.rest](https://kanye.rest) | REST API for random Kanye West quotes | No | Yes | Yes |\n| [kimiquotes](https://kimiquotes.herokuapp.com/doc) | Team radio and interview quotes by Finnish F1 legend Kimi R\u00e4ikk\u00f6nen | No | Yes | Yes |\n| [Medium](https://github.com/Medium/medium-api-docs) | Community of readers and writers offering unique perspectives on ideas | `OAuth` | Yes | Unknown |\n| [Programming Quotes](https://github.com/skolakoda/programming-quotes-api) | Programming Quotes API for open source projects | No | Yes | Unknown |\n| [Quotable Quotes](https://github.com/lukePeavey/quotable) | Quotable is a free, open source quotations API | No | Yes | Unknown |\n| [Quote Garden](https://pprathameshmore.github.io/QuoteGarden/) | REST API for more than 5000 famous quotes | No | Yes | Unknown |\n| [quoteclear](https://quoteclear.web.app/) | Ever-growing list of James Clear quotes from the 3-2-1 Newsletter | No | Yes | Yes |\n| [Quotes on Design](https://quotesondesign.com/api/) | Inspirational Quotes | No | Yes | Unknown |\n| [Stoicism Quote](https://github.com/tlcheah2/stoic-quote-lambda-public-api) | Quotes about Stoicism | No | Yes | Unknown |\n| [They Said So Quotes](https://theysaidso.com/api/) | Quotes Trusted by many fortune brands around the world | No | Yes | Unknown |\n| [Traitify](https://app.traitify.com/developer) | Assess, collect and analyze Personality | No | Yes | Unknown |\n| [Udemy(instructor)](https://www.udemy.com/developers/instructor/) | API for instructors on Udemy | `apiKey` | Yes | Unknown |\n| [Vadivelu HTTP Codes](https://vadivelu.anoram.com/) | On demand HTTP Codes with images | No | Yes | No |\n| [Zen Quotes](https://zenquotes.io/) | Large collection of Zen quotes for inspiration | No | Yes | Yes |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Phone\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Abstract Phone Validation](https://www.abstractapi.com/phone-validation-api) | Validate phone numbers globally | `apiKey` | Yes | Yes |\n| [apilayer numverify](https://numverify.com) | Phone number validation | `apiKey` | Yes | Unknown |\n| [Cloudmersive Validate](https://cloudmersive.com/phone-number-validation-API) | Validate international phone numbers | `apiKey` | Yes | Yes |\n| [Phone Specification](https://github.com/azharimm/phone-specs-api) | Rest Api for Phone specifications | No | Yes | Yes |\n| [Veriphone](https://veriphone.io) | Phone number validation & carrier lookup | `apiKey` | Yes | Yes |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Photography\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [apilayer screenshotlayer](https://screenshotlayer.com) | URL 2 Image | No | Yes | Unknown |\n| [APITemplate.io](https://apitemplate.io) | Dynamically generate images and PDFs from templates with a simple API | `apiKey` | Yes | Yes |    \n| [Bruzu](https://docs.bruzu.com) | Image generation with query string | `apiKey` | Yes | Yes |\n| [CheetahO](https://cheetaho.com/docs/getting-started/) | Photo optimization and resize | `apiKey` | Yes | Unknown |\n| [Dagpi](https://dagpi.xyz) | Image manipulation and processing | `apiKey` | Yes | Unknown |\n| [Duply](https://duply.co/docs#getting-started-api) | Generate, Edit, Scale and Manage Images and Videos Smarter & Faster | `apiKey` | Yes | Yes |\n| [DynaPictures](https://dynapictures.com/docs/) | Generate Hundreds of Personalized Images in Minutes | `apiKey` | Yes | Yes |\n| [Flickr](https://www.flickr.com/services/api/) | Flickr Services | `OAuth` | Yes | Unknown |\n| [Getty Images](http://developers.gettyimages.com/en/) | Build applications using the world's most powerful imagery | `OAuth` | Yes | Unknown |\n| [Gfycat](https://developers.gfycat.com/api/) | Jiffier GIFs | `OAuth` | Yes | Unknown |\n| [Giphy](https://developers.giphy.com/docs/) | Get all your gifs | `apiKey` | Yes | Unknown |\n| [Google Photos](https://developers.google.com/photos) | Integrate Google Photos with your apps or devices | `OAuth` | Yes | Unknown |\n| [Image Upload](https://apilayer.com/marketplace/image_upload-api) | Image Optimization | `apiKey` | Yes | Unknown |\n| [Imgur](https://apidocs.imgur.com/) | Images | `OAuth` | Yes | Unknown |\n| [Imsea](https://imsea.herokuapp.com/) | Free image search | No | Yes | Unknown |\n| [Lorem Picsum](https://picsum.photos/) | Images from Unsplash | No | Yes | Unknown |\n| [ObjectCut](https://objectcut.com/) | Image Background removal | `apiKey` | Yes | Yes |\n| [Pexels](https://www.pexels.com/api/) | Free Stock Photos and Videos | `apiKey` | Yes | Yes |\n| [PhotoRoom](https://www.photoroom.com/api/) | Remove background from images | `apiKey` | Yes | Unknown |\n| [Pixabay](https://pixabay.com/sk/service/about/api/) | Photography | `apiKey` | Yes | Unknown |\n| [PlaceKeanu](https://placekeanu.com/) | Resizable Keanu Reeves placeholder images with grayscale and young Keanu options | No | Yes | Unknown |\n| [Readme typing SVG](https://github.com/DenverCoder1/readme-typing-svg) | Customizable typing and deleting text SVG | No | Yes | Unknown |\n| [Remove.bg](https://www.remove.bg/api) | Image Background removal | `apiKey` | Yes | Unknown |\n| [ReSmush.it](https://resmush.it/api) | Photo optimization | No | No | Unknown |\n| [shutterstock](https://api-reference.shutterstock.com/) | Stock Photos and Videos | `OAuth` | Yes | Unknown |\n| [Sirv](https://apidocs.sirv.com/) | Image management solutions like optimization, manipulation, hosting | `apiKey` | Yes | Unknown |\n| [Unsplash](https://unsplash.com/developers) | Photography | `OAuth` | Yes | Unknown |\n| [Wallhaven](https://wallhaven.cc/help/api) | Wallpapers | `apiKey` | Yes | Unknown |\n| [Webdam](https://www.damsuccess.com/hc/en-us/articles/202134055-REST-API) | Images | `OAuth` | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Programming\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Codeforces](https://codeforces.com/apiHelp) | Get access to Codeforces data | `apiKey` | Yes | Unknown |\n| [Hackerearth](https://www.hackerearth.com/docs/wiki/developers/v4/) | For compiling and running code in several languages | `apiKey` | Yes | Unknown |\n| [Judge0 CE](https://ce.judge0.com/) | Online code execution system | `apiKey` | Yes | Unknown |\n| [KONTESTS](https://kontests.net/api) | For upcoming and ongoing competitive coding contests | No | Yes | Unknown |\n| [Mintlify](https://docs.mintlify.com) | For programmatically generating documentation for code | `apiKey` | Yes | Yes |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Science & Math\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [arcsecond.io](https://api.arcsecond.io/) | Multiple astronomy data sources | No | Yes | Unknown |\n| [arXiv](https://arxiv.org/help/api/user-manual) | Curated research-sharing platform: physics, mathematics, quantitative finance, and economics | No | Yes | Unknown |\n| [CORE](https://core.ac.uk/services#api) | Access the world's Open Access research papers | `apiKey` | Yes | Unknown |\n| [GBIF](https://www.gbif.org/developer/summary) | Global Biodiversity Information Facility | No | Yes | Yes |\n| [iDigBio](https://github.com/idigbio/idigbio-search-api/wiki) | Access millions of museum specimens from organizations around the world | No | Yes | Unknown |\n| [inspirehep.net](https://github.com/inspirehep/rest-api-doc) | High Energy Physics info. system | No | Yes | Unknown |\n| [isEven (humor)](https://isevenapi.xyz/) | Check if a number is even | No | Yes | Unknown |\n| [ISRO](https://isro.vercel.app) | ISRO Space Crafts Information | No | Yes | No |\n| [ITIS](https://www.itis.gov/ws_description.html) | Integrated Taxonomic Information System | No | Yes | Unknown |\n| [Launch Library 2](https://thespacedevs.com/llapi) | Spaceflight launches and events database | No | Yes | Yes |\n| [Materials Platform for Data Science](https://mpds.io) | Curated experimental data for materials science | `apiKey` | Yes | No |\n| [Minor Planet Center](http://www.asterank.com/mpc) | Asterank.com Information | No | No | Unknown |\n| [NASA](https://api.nasa.gov) | NASA data, including imagery | No | Yes | No |\n| [NASA ADS](https://ui.adsabs.harvard.edu/help/api/api-docs.html) | NASA Astrophysics Data System | `OAuth` | Yes | Yes |\n| [Newton](https://newton.vercel.app) | Symbolic and Arithmetic Math Calculator | No | Yes | No |\n| [Noctua](https://api.noctuasky.com/api/v1/swaggerdoc/) | REST API used to access NoctuaSky features | No | Yes | Unknown |\n| [Numbers](https://math.tools/api/numbers/) | Number of the day, random number, number facts and anything else you want to do with numbers | `apiKey` | Yes | No |\n| [Numbers](http://numbersapi.com) | Facts about numbers | No | No | No |\n| [Ocean Facts](https://oceanfacts.herokuapp.com/) | Facts pertaining to the physical science of Oceanography | No | Yes | Unknown |\n| [Open Notify](http://open-notify.org/Open-Notify-API/) | ISS astronauts, current location, etc | No | No | No |\n| [Open Science Framework](https://developer.osf.io) | Repository and archive for study designs, research materials, data, manuscripts, etc | No | Yes | Unknown |\n| [Purple Air](https://www2.purpleair.com/) | Real Time Air Quality Monitoring | No | Yes | Unknown |\n| [Remote Calc](https://github.com/elizabethadegbaju/remotecalc) | Decodes base64 encoding and parses it to return a solution to the calculation in JSON | No | Yes | Yes |\n| [SHARE](https://share.osf.io/api/v2/) | A free, open, dataset about research and scholarly activities | No | Yes | No |\n| [SpaceX](https://github.com/r-spacex/SpaceX-API) | Company, vehicle, launchpad and launch data | No | Yes | No |\n| [SpaceX](https://api.spacex.land/graphql/) | GraphQL, Company, Ships, launchpad and launch data | No | Yes | Unknown |\n| [Sunrise and Sunset](https://sunrise-sunset.org/api) | Sunset and sunrise times for a given latitude and longitude | No | Yes | No |\n| [Times Adder](https://github.com/FranP-code/API-Times-Adder) | With this API you can add each of the times introduced in the array sended | No | Yes | No |\n| [TLE](https://tle.ivanstanojevic.me/#/docs) | Satellite information | No | Yes | No |\n| [USGS Earthquake Hazards Program](https://earthquake.usgs.gov/fdsnws/event/1/) | Earthquakes data real-time | No | Yes | No |\n| [USGS Water Services](https://waterservices.usgs.gov/) | Water quality and level info for rivers and lakes | No | Yes | No |\n| [World Bank](https://datahelpdesk.worldbank.org/knowledgebase/topics/125589) | World Data | No | Yes | No |\n| [xMath](https://x-math.herokuapp.com/) | Random mathematical expressions | No | Yes | Yes |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Security\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Application Environment Verification](https://github.com/fingerprintjs/aev) | Android library and API to verify the safety of user devices, detect rooted devices and other risks | `apiKey` | Yes | Yes |\n| [BinaryEdge](https://docs.binaryedge.io/api-v2.html) | Provide access to BinaryEdge 40fy scanning platform | `apiKey` | Yes | Yes |\n| [BitWarden](https://bitwarden.com/help/api/) | Best open-source password manager | `OAuth` | Yes | Unknown |\n| [Botd](https://github.com/fingerprintjs/botd) | Botd is a browser library for JavaScript bot detection | `apiKey` | Yes | Yes |\n| [Bugcrowd](https://docs.bugcrowd.com/api/getting-started/) | Bugcrowd API for interacting and tracking the reported issues programmatically | `apiKey` | Yes | Unknown |\n| [Censys](https://search.censys.io/api) | Search engine for Internet connected host and devices | `apiKey` | Yes | No |\n| [Classify](https://classify-web.herokuapp.com/#/api) | Encrypting & decrypting text messages | No | Yes | Yes |\n| [Complete Criminal Checks](https://completecriminalchecks.com/Developers) | Provides data of offenders from all U.S. States and Pureto Rico | `apiKey` | Yes | Yes |\n| [CRXcavator](https://crxcavator.io/apidocs) | Chrome extension risk scoring | `apiKey` | Yes | Unknown |\n| [Dehash.lt](https://github.com/Dehash-lt/api) | Hash decryption MD5, SHA1, SHA3, SHA256, SHA384, SHA512 | No | Yes | Unknown |\n| [EmailRep](https://docs.emailrep.io/) | Email address threat and risk prediction | No | Yes | Unknown |\n| [Escape](https://github.com/polarspetroll/EscapeAPI) | An API for escaping different kind of queries | No | Yes | No |\n| [FilterLists](https://filterlists.com) | Lists of filters for adblockers and firewalls | No | Yes | Unknown |\n| [FingerprintJS Pro](https://dev.fingerprintjs.com/docs) | Fraud detection API offering highly accurate browser fingerprinting | `apiKey` | Yes | Yes |\n| [FraudLabs Pro](https://www.fraudlabspro.com/developer/api/screen-order) | Screen order information using AI to detect frauds | `apiKey` | Yes | Unknown |\n| [FullHunt](https://api-docs.fullhunt.io/#introduction) | Searchable attack surface database of the entire internet | `apiKey` | Yes | Unknown |\n| [GitGuardian](https://api.gitguardian.com/doc) | Scan files for secrets (API Keys, database credentials) | `apiKey` | Yes | No |\n| [GreyNoise](https://docs.greynoise.io/reference/get_v3-community-ip) | Query IPs in the GreyNoise dataset and retrieve a subset of the full IP context data | `apiKey` | Yes | Unknown |\n| [HackerOne](https://api.hackerone.com/) | The industry\u2019s first hacker API that helps increase productivity towards creative bug bounty hunting | `apiKey` | Yes | Unknown |\n| [Hashable](https://hashable.space/pages/api/) | A REST API to access high level cryptographic functions and methods | No | Yes | Yes |\n| [HaveIBeenPwned](https://haveibeenpwned.com/API/v3) | Passwords which have previously been exposed in data breaches | `apiKey` | Yes | Unknown |\n| [Intelligence X](https://github.com/IntelligenceX/SDK/blob/master/Intelligence%20X%20API.pdf) | Perform OSINT via Intelligence X | `apiKey` | Yes | Unknown |\n| [LoginRadius](https://www.loginradius.com/docs/) | Managed User Authentication Service | `apiKey` | Yes | Yes |\n| [Microsoft Security Response Center (MSRC)](https://msrc.microsoft.com/report/developer) | Programmatic interfaces to engage with the Microsoft Security Response Center (MSRC) | No | Yes | Unknown |\n| [Mozilla http scanner](https://github.com/mozilla/http-observatory/blob/master/httpobs/docs/api.md) | Mozilla observatory http scanner | No | Yes | Unknown |\n| [Mozilla tls scanner](https://github.com/mozilla/tls-observatory#api-endpoints) | Mozilla observatory tls scanner | No | Yes | Unknown |\n| [National Vulnerability Database](https://nvd.nist.gov/vuln/Data-Feeds/JSON-feed-changelog) | U.S. National Vulnerability Database | No | Yes | Unknown |\n| [Passwordinator](https://github.com/fawazsullia/password-generator/) | Generate random passwords of varying complexities | No | Yes | Yes |\n| [PhishStats](https://phishstats.info/) | Phishing database | No | Yes | Unknown |\n| [Privacy.com](https://privacy.com/developer/docs) | Generate merchant-specific and one-time use credit card numbers that link back to your bank | `apiKey` | Yes | Unknown |\n| [Pulsedive](https://pulsedive.com/api/) | Scan, search and collect threat intelligence data in real-time | `apiKey` | Yes | Unknown |\n| [SecurityTrails](https://securitytrails.com/corp/apidocs) | Domain and IP related information such as current and historical WHOIS and DNS records | `apiKey` | Yes | Unknown |\n| [Shodan](https://developer.shodan.io/) | Search engine for Internet connected devices | `apiKey` | Yes | Unknown |\n| [Spyse](https://spyse-dev.readme.io/reference/quick-start) | Access data on all Internet assets and build powerful attack surface management applications | `apiKey` | Yes | Unknown |\n| [Threat Jammer](https://threatjammer.com/docs/index) | Risk scoring service from curated threat intelligence data | `apiKey` | Yes | Unknown |\n| [UK Police](https://data.police.uk/docs/) | UK Police data | No | Yes | Unknown |\n| [Virushee](https://api.virushee.com/) | Virushee file/data scanning | No | Yes | Yes |\n| [VulDB](https://vuldb.com/?doc.api) | VulDB API allows to initiate queries for one or more items along with transactional bots | `apiKey` | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Shopping\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Best Buy](https://bestbuyapis.github.io/api-documentation/#overview) | Products, Buying Options, Categories, Recommendations, Stores and Commerce | `apiKey` | Yes | Unknown |\n| [Digi-Key](https://www.digikey.com/en/resources/api-solutions) | Retrieve price and inventory of electronic components as well as place orders | `OAuth` | Yes | Unknown |\n| [Dummy Products](https://dummyproducts-api.herokuapp.com/) | An api to fetch dummy e-commerce products JSON data with placeholder images | `apiKey` | Yes | Yes |\n| [eBay](https://developer.ebay.com/) | Sell and Buy on eBay | `OAuth` | Yes | Unknown |\n| [Etsy](https://www.etsy.com/developers/documentation/getting_started/api_basics) | Manage shop and interact with listings | `OAuth` | Yes | Unknown |\n| [Flipkart Marketplace](https://seller.flipkart.com/api-docs/FMSAPI.html) | Product listing management, Order Fulfilment in the Flipkart Marketplace | `OAuth` | Yes | Yes |\n| [Lazada](https://open.lazada.com/doc/doc.htm) | Retrieve product ratings and seller performance metrics | `apiKey` | Yes | Unknown |\n| [Mercadolibre](https://developers.mercadolibre.cl/es_ar/api-docs-es) | Manage sales, ads, products, services and Shops | `apiKey` | Yes | Unknown |\n| [Octopart](https://octopart.com/api/v4/reference) | Electronic part data for manufacturing, design, and sourcing | `apiKey` | Yes | Unknown |\n| [OLX Poland](https://developer.olx.pl/api/doc#section/) | Integrate with local sites by posting, managing adverts and communicating with OLX users | `apiKey` | Yes | Unknown |\n| [Rappi](https://dev-portal.rappi.com/) | Manage orders from Rappi's app | `OAuth` | Yes | Unknown |\n| [Shopee](https://open.shopee.com/documents?version=1) | Shopee's official API for integration of various services from Shopee | `apiKey` | Yes | Unknown |\n| [Tokopedia](https://developer.tokopedia.com/openapi/guide/#/) | Tokopedia's Official API for integration of various services from Tokopedia | `OAuth` | Yes | Unknown |\n| [WooCommerce](https://woocommerce.github.io/woocommerce-rest-api-docs/) | WooCommerce REST APIS to create, read, update, and delete data on wordpress website in JSON format | `apiKey` | Yes | Yes |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n<br >\n<br >\n### Social\nAPI | Description | Auth | HTTPS | CORS |\n|---|---|---|---|---|\n| [4chan](https://github.com/4chan/4chan-API) | Simple image-based bulletin board dedicated to a variety of topics | No | Yes | Yes |\n| [Ayrshare](https://www.ayrshare.com) | Social media APIs to post, get analytics, and manage multiple users social media accounts | `apiKey` | Yes | Yes |\n| [aztro](https://aztro.sameerkumar.website/) | Daily horoscope info for yesterday, today, and tomorrow | No | Yes | Unknown |\n| [Blogger](https://developers.google.com/blogger/) | The Blogger APIs allows client applications to view and update Blogger content | `OAuth` | Yes | Unknown |\n| [Cisco Spark](https://developer.ciscospark.com) | Team Collaboration Software | `OAuth` | Yes | Unknown |\n| [Dangerous Discord Database](https://discord.riverside.rocks/docs/index.php) | Database of malicious Discord accounts | `apiKey` | Yes | Unknown |\n| [Discord](https://discord.com/developers/docs/intro) | Make bots for Discord, integrate Discord onto an external platform | `OAuth` | Yes | Unknown | | |\n| [Disqus](https://disqus.com/api/docs/auth/) | Communicate with Disqus data | `OAuth` | Yes | Unknown |\n| [Doge-Meme](https://api.doge-meme.lol/docs) | Top meme posts from r/dogecoin which include 'Meme' flair | No | Yes | Yes |\n| [Facebook](https://developers.facebook.com/) | Facebook Login, Share on FB, Social Plugins, Analytics and more | `OAuth` | Yes | Unknown |\n| [Foursquare](https://developer.foursquare.com/) | Interact with Foursquare users and places (geolocation-based checkins, photos, tips, events, etc) | `OAuth` | Yes | Unknown |\n| [Fuck Off as a Service](https://www.foaas.com) | Asks someone to fuck off | No | Yes | Unknown |\n| [Full Contact](https://docs.fullcontact.com/) | Get Social Media profiles and contact Information | `OAuth` | Yes | Unknown |\n| [HackerNews](https://github.com/HackerNews/API) | Social news for CS and entrepreneurship | No | Yes | Unknown |\n| [Hashnode](https://hashnode.com) | A blogging platform built for developers | No | Yes | Unknown |\n| [Instagram](https://www.instagram.com/developer/) | Instagram Login, Share on Instagram, Social Plugins and more | `OAuth` | Yes | Unknown |\n| [Kakao](https://developers.kakao.com/) | Kakao Login, Share on KakaoTalk, Social Plugins and more | `OAuth` | Yes | Unknown |\n| [Lanyard](https://github.com/Phineas/lanyard) | Retrieve your presence on Discord through an HTTP REST API or WebSocket | No | Yes | Yes |\n| [Line](https://developers.line.biz/) | Line Login, Share on Line, Social Plugins and more | `OAuth` | Yes | Unknown |\n| [LinkedIn](https://docs.microsoft.com/en-us/linkedin/?context=linkedin/context) | The foundation of all digital integrations with LinkedIn | `OAuth` | Yes | Unknown |\n| [Meetup.com](https://www.meetup.com/api/guide) | Data about Meetups from Meetup.com | `apiKey` | Yes | Unknown |\n| [Microsoft Graph](https://docs.microsoft.com/en-us/graph/api/overview) | Access the data and intelligence in Microsoft 365, Windows 10, and Enterprise Mobility | `OAuth` | Yes | Unknown |\n| [NAVER](https://developers.naver.com/main/) | NAVER Login, Share on NAVER, Social Plugins and more | `OAuth` | Yes | Unknown |\n| [Open Collective](https://docs.opencollective.com/help/developers/api) | Get Open Collective data | No | Yes | Unknown |\n| [Pinterest](https://developers.pinterest.com/) | The world's catalog of ideas | `OAuth` | Yes | Unknown |\n| [Product Hunt](https://api.producthunt.com/v2/docs) | The best new products in tech | `OAuth` | Yes | Unknown |\n| [Reddit](https://www.reddit.com/dev/api) | Homepage of the internet | `OAuth` | Yes | Unknown |\n| [Revolt](https://developers.revolt.chat/api/) | Revolt open source Discord alternative | `apiKey` | Yes | Unknown |\n| [Saidit](https://www.saidit.net/dev/api) | Open Source Reddit Clone | `OAuth` | Yes | Unknown |\n| [Slack](https://api.slack.com/) | Team Instant Messaging | `OAuth` | Yes | Unknown |\n| [TamTam](https://dev.tamtam.chat/) | Bot API to interact with TamTam | `apiKey` | Yes | Unknown |\n| [Telegram Bot](https://core.telegram.org/bots/api) | Simplified HTTP version of the MTProto API for bots | `apiKey` | Yes | Unknown |\n| [Telegram MTProto](https://core.telegram.org/api#getting-started) | Read and write Telegram data | `OAuth` | Yes | Unknown |\n| [Telegraph](https://telegra.ph/api) | Create attractive blogs easily, to share | `apiKey` | Yes | Unknown |\n| [TikTok](https://developers.tiktok.com/doc/login-kit-web) | Fetches user info and user's video posts on TikTok platform | `OAuth` | Yes | Unknown |\n| [Trash Nothing](https://trashnothing.com/developer) | A freecycling community with thousands of free items posted every day | `OAuth` | Yes | Yes |\n| [Tumblr](https://www.tumblr.com/docs/en/api/v2) | Read and write Tumblr Data | `OAuth` | Yes | Unknown |\n| [Twitch](https://dev.twitch.tv/docs) | Game Streaming API | `OAuth` | Yes | Unknown |\n| [Twitter](https://developer.twitter.com/en/docs) | Read and write Twitter data | `OAuth` | Yes | No |\n| [vk](https://vk.com/dev/sites) | Read and write vk data | `OAuth` | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Sports & Fitness\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [API-FOOTBALL](https://www.api-football.com/documentation-v3) | Get information about Football Leagues & Cups | `apiKey` | Yes | Yes |\n| [ApiMedic](https://apimedic.com/) | ApiMedic offers a medical symptom checker API primarily for patients | `apiKey` | Yes | Unknown |\n| [balldontlie](https://www.balldontlie.io) | Balldontlie provides access to stats data from the NBA | No | Yes | Yes |\n| [Canadian Football League (CFL)](http://api.cfl.ca/) | Official JSON API providing real-time league, team and player statistics about the CFL | `apiKey` | Yes | No |\n| [City Bikes](https://api.citybik.es/v2/) | City Bikes around the world | No | Yes | Unknown |\n| [Cloudbet](https://www.cloudbet.com/api/) | Official Cloudbet API provides real-time sports odds and betting API to place bets programmatically | `apiKey` | Yes | Yes |\n| [CollegeFootballData.com](https://collegefootballdata.com) | Unofficial detailed American college football statistics, records, and results API | `apiKey` | Yes | Unknown |\n| [Ergast F1](http://ergast.com/mrd/) | F1 data from the beginning of the world championships in 1950 | No | Yes | Unknown |\n| [Fitbit](https://dev.fitbit.com/) | Fitbit Information | `OAuth` | Yes | Unknown |\n| [Football](https://rapidapi.com/GiulianoCrescimbeni/api/football98/) | A simple Open Source Football API to get squads\u2019 stats, best scorers and more | `X-Mashape-Key` | Yes | Unknown |\n| [Football (Soccer) Videos](https://www.scorebat.com/video-api/) | Embed codes for goals and highlights from Premier League, Bundesliga, Serie A and many more | No | Yes | Yes |\n| [Football Standings](https://github.com/azharimm/football-standings-api) | Display football standings e.g epl, la liga, serie a etc. The data is based on espn site | No | Yes | Yes |\n| [Football-Data](https://www.football-data.org) | Football data with matches info, players, teams, and competitions | `X-Mashape-Key` | Yes | Unknown |\n| [JCDecaux Bike](https://developer.jcdecaux.com/) | JCDecaux's self-service bicycles | `apiKey` | Yes | Unknown |\n| [MLB Records and Stats](https://appac.github.io/mlb-data-api-docs/) | Current and historical MLB statistics | No | No | Unknown |\n| [NBA Data](https://rapidapi.com/api-sports/api/api-nba/) | All NBA Stats DATA, Games, Livescore, Standings, Statistics | `apiKey` | Yes | Unknown |\n| [NBA Stats](https://any-api.com/nba_com/nba_com/docs/API_Description) | Current and historical NBA Statistics | No | Yes | Unknown |\n| [NHL Records and Stats](https://gitlab.com/dword4/nhlapi) | NHL historical data and statistics | No | Yes | Unknown |\n| [Oddsmagnet](https://data.oddsmagnet.com) | Odds history from multiple UK bookmakers | No | Yes | Yes |\n| [OpenLigaDB](https://www.openligadb.de) | Crowd sourced sports league results | No | Yes | Yes |\n| [Premier League Standings ](https://rapidapi.com/heisenbug/api/premier-league-live-scores/) | All Current Premier League Standings and Statistics | `apiKey` | Yes | Unknown |\n| [Sport Data](https://sportdataapi.com) | Get sports data from all over the world | `apiKey` | Yes | Unknown |\n| [Sport List & Data](https://developers.decathlon.com/products/sports) | List of and resources related to sports | No | Yes | Yes |\n| [Sport Places](https://developers.decathlon.com/products/sport-places) | Crowd-source sports places around the world | No | Yes | No |\n| [Sport Vision](https://developers.decathlon.com/products/sport-vision) | Identify sport, brands and gear in an image. Also does image sports captioning | `apiKey` | Yes | Yes |\n| [Sportmonks Cricket](https://docs.sportmonks.com/cricket/) | Live cricket score, player statistics and fantasy API | `apiKey` | Yes | Unknown |\n| [Sportmonks Football](https://docs.sportmonks.com/football/) | Football score/schedule, news api, tv channels, stats, history, display standing e.g. epl, la liga | `apiKey` | Yes | Unknown |\n| [Squiggle](https://api.squiggle.com.au) | Fixtures, results and predictions for Australian Football League matches | No | Yes | Yes |\n| [Strava](https://strava.github.io/api/) | Connect with athletes, activities and more | `OAuth` | Yes | Unknown |\n| [SuredBits](https://suredbits.com/api/) | Query sports data, including teams, players, games, scores and statistics | No | No | No |\n| [TheSportsDB](https://www.thesportsdb.com/api.php) | Crowd-Sourced Sports Data and Artwork | `apiKey` | Yes | Yes |\n| [Tredict](https://www.tredict.com/blog/oauth_docs/) | Get and set activities, health data and more | `OAuth` | Yes | Unknown |\n| [Wger](https://wger.de/en/software/api) | Workout manager data as exercises, muscles or equipment | `apiKey` | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Test Data\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Bacon Ipsum](https://baconipsum.com/json-api/) | A Meatier Lorem Ipsum Generator | No | Yes | Unknown |\n| [Dicebear Avatars](https://avatars.dicebear.com/) | Generate random pixel-art avatars | No | Yes | No |\n| [English Random Words](https://random-words-api.vercel.app/word) | Generate English Random Words with Pronunciation | No | Yes | No |\n| [FakeJSON](https://fakejson.com) | Service to generate test and fake data | `apiKey` | Yes | Yes |\n| [FakerAPI](https://fakerapi.it/en) | APIs collection to get fake data | No | Yes | Yes |\n| [FakeStoreAPI](https://fakestoreapi.com/) | Fake store rest API for your e-commerce or shopping website prototype | No | Yes | Unknown |\n| [GeneradorDNI](https://api.generadordni.es) | Data generator API. Profiles, vehicles, banks and cards, etc | `apiKey` | Yes | Unknown |\n| [ItsThisForThat](https://itsthisforthat.com/api.php) | Generate Random startup ideas | No | Yes | No |\n| [JSONPlaceholder](http://jsonplaceholder.typicode.com/) | Fake data for testing and prototyping | No | No | Unknown |\n| [Loripsum](http://loripsum.net/) | The \"lorem ipsum\" generator that doesn't suck | No | No | Unknown |\n| [Mailsac](https://mailsac.com/docs/api) | Disposable Email | `apiKey` | Yes | Unknown |\n| [Metaphorsum](http://metaphorpsum.com/) | Generate demo paragraphs giving number of words and sentences | No | No | Unknown |\n| [Mockaroo](https://www.mockaroo.com/docs) | Generate fake data to JSON, CSV, TXT, SQL and XML | `apiKey` | Yes | Unknown |\n| [QuickMocker](https://quickmocker.com) | API mocking tool to generate contextual, fake or random data | No | Yes | Yes |\n| [Random Data](https://random-data-api.com) | Random data generator | No | Yes | Unknown |\n| [Randommer](https://randommer.io/randommer-api) | Random data generator | `apiKey` | Yes | Yes |\n| [RandomUser](https://randomuser.me) | Generates and list user data | No | Yes | Unknown |\n| [RoboHash](https://robohash.org/) | Generate random robot/alien avatars | No | Yes | Unknown |\n| [Spanish random names](https://random-names-api.herokuapp.com/public) | Generate spanish names (with gender) randomly | No | Yes | Unknown |\n| [Spanish random words](https://palabras-aleatorias-public-api.herokuapp.com) | Generate spanish words randomly | No | Yes | Unknown |\n| [This Person Does not Exist](https://thispersondoesnotexist.com) | Generates real-life faces of people who do not exist | No | Yes | Unknown |\n| [Toolcarton](https://testimonialapi.toolcarton.com/) | Generate random testimonial data | No | Yes | Unknown |\n| [UUID Generator](https://www.uuidtools.com/docs) | Generate UUIDs | No | Yes | No |\n| [What The Commit](http://whatthecommit.com/index.txt) | Random commit message generator | No | No | Yes |\n| [Yes No](https://yesno.wtf/api) | Generate yes or no randomly | No | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Text Analysis\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Code Detection API](https://codedetectionapi.runtime.dev) | Detect, label, format and enrich the code in your app or in your data pipeline | `OAuth` | Yes | Unknown |\n| [apilayer languagelayer](https://languagelayer.com/) | Language Detection JSON API supporting 173 languages | `OAuth` | Yes | Unknown |\n| [Aylien Text Analysis](https://docs.aylien.com/textapi/#getting-started) | A collection of information retrieval and natural language APIs | `apiKey` | Yes | Unknown |\n| [Cloudmersive Natural Language Processing](https://www.cloudmersive.com/nlp-api) | Natural language processing and text analysis | `apiKey` | Yes | Yes |\n| [Detect Language](https://detectlanguage.com/) | Detects text language | `apiKey` | Yes | Unknown |\n| [ELI](https://nlp.insightera.co.th/docs/v1.0) | Natural Language Processing Tools for Thai Language | `apiKey` | Yes | Unknown |\n| [Google Cloud Natural](https://cloud.google.com/natural-language/docs/) | Natural language understanding technology, including sentiment, entity and syntax analysis | `apiKey` | Yes | Unknown |\n| [Hirak OCR](https://ocr.hirak.site/) | Image to text -text recognition- from image more than 100 language, accurate, unlimited requests | `apiKey` | Yes | Unknown |\n| [Hirak Translation](https://translate.hirak.site/) | Translate between 21 of most used languages, accurate, unlimited requests | `apiKey` | Yes | Unknown |\n| [Lecto Translation](https://rapidapi.com/lecto-lecto-default/api/lecto-translation/) | Translation API with free tier and reasonable prices | `apiKey` | Yes | Yes |\n| [LibreTranslate](https://libretranslate.com/docs) | Translation tool with 17 available languages | No | Yes | Unknown |\n| [Semantria](https://semantria.readme.io/docs) | Text Analytics with sentiment analysis, categorization & named entity extraction | `OAuth` | Yes | Unknown |\n| [Sentiment Analysis](https://www.meaningcloud.com/developer/sentiment-analysis) | Multilingual sentiment analysis of texts from different sources | `apiKey` | Yes | Yes |\n| [Tisane](https://tisane.ai/) | Text Analytics with focus on detection of abusive content and law enforcement applications | `OAuth` | Yes | Yes |\n| [Watson Natural Language Understanding](https://cloud.ibm.com/apidocs/natural-language-understanding/natural-language-understanding) | Natural language processing for advanced text analysis | `OAuth` | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Tracking\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Aftership](https://developers.aftership.com/reference/quick-start) | API to update, manage and track shipment efficiently | `apiKey` | Yes | Yes |\n| [Correios](https://cws.correios.com.br/ajuda) | Integration to provide information and prepare shipments using Correio's services | `apiKey` | Yes | Unknown |\n| [Pixela](https://pixe.la) | API for recording and tracking habits or effort, routines | `X-Mashape-Key` | Yes | Yes |\n| [PostalPinCode](http://www.postalpincode.in/Api-Details) | API for getting Pincode details in India | No | Yes | Unknown |\n| [Postmon](http://postmon.com.br) | An API to query Brazilian ZIP codes and orders easily, quickly and free | No | No | Unknown |\n| [PostNord](https://developer.postnord.com/api) | Provides information about parcels in transport for Sweden and Denmark | `apiKey` | No | Unknown |\n| [UPS](https://www.ups.com/upsdeveloperkit) | Shipment and Address information | `apiKey` | Yes | Unknown |\n| [WeCanTrack](https://docs.wecantrack.com) | Automatically place subids in affiliate links to attribute affiliate conversions to click data | `apiKey` | Yes | Yes |\n| [WhatPulse](https://developer.whatpulse.org/#web-api) | Small application that measures your keyboard/mouse usage | No | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Transportation\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [ADS-B Exchange](https://www.adsbexchange.com/data/) | Access real-time and historical data of any and all airborne aircraft | No | Yes | Unknown |\n| [airportsapi](https://airport-web.appspot.com/api/docs/) | Get name and website-URL for airports by ICAO code | No | Yes | Unknown |\n| [AIS Hub](http://www.aishub.net/api) | Real-time data of any marine and inland vessel equipped with AIS tracking system | `apiKey` | No | Unknown |\n| [Amadeus for Developers](https://developers.amadeus.com/self-service) | Travel Search - Limited usage | `OAuth` | Yes | Unknown |\n| [apilayer aviationstack](https://aviationstack.com/) | Real-time Flight Status & Global Aviation Data API | `OAuth` | Yes | Unknown |\n| [AviationAPI](https://docs.aviationapi.com) | FAA Aeronautical Charts and Publications, Airport Information, and Airport Weather | No | Yes | No |\n| [AZ511](https://www.az511.com/developers/doc) | Access traffic data from the ADOT API | `apiKey` | Yes | Unknown |\n| [Bay Area Rapid Transit](http://api.bart.gov) | Stations and predicted arrivals for BART | `apiKey` | No | Unknown |\n| [BC Ferries](https://www.bcferriesapi.ca) | Sailing times and capacities for BC Ferries | No | Yes | Yes |\n| [BIC-Boxtech](https://docs.bic-boxtech.org/) | Container technical detail for the global container fleet | `OAuth` | Yes | Unknown |\n| [BlaBlaCar](https://dev.blablacar.com) | Search car sharing trips | `apiKey` | Yes | Unknown |\n| [Boston MBTA Transit](https://www.mbta.com/developers/v3-api) | Stations and predicted arrivals for MBTA | `apiKey` | Yes | Unknown |\n| [Community Transit](https://github.com/transitland/transitland-datastore/blob/master/README.md#api-endpoints) | Transitland API | No | Yes | Unknown |\n| [Compare Flight Prices](https://rapidapi.com/obryan-software-obryan-software-default/api/compare-flight-prices/) | API for comparing flight prices across platforms | `apiKey` | Yes | Unknown |\n| [CTS](https://api.cts-strasbourg.eu/) | CTS Realtime API | `apiKey` | Yes | Yes |\n| [Grab](https://developer.grab.com/docs/) | Track deliveries, ride fares, payments and loyalty points | `OAuth` | Yes | Unknown |\n| [GraphHopper](https://docs.graphhopper.com/) | A-to-B routing with turn-by-turn instructions | `apiKey` | Yes | Unknown |\n| [Icelandic APIs](http://docs.apis.is/) | Open APIs that deliver services in or regarding Iceland | No | Yes | Unknown |\n| [Impala Hotel Bookings](https://docs.impala.travel/docs/booking-api/) | Hotel content, rates and room bookings | `apiKey` | Yes | No |\n| [Izi](http://api-docs.izi.travel/) | Audio guide for travellers | `apiKey` | Yes | Unknown |\n| [Land Transport Authority DataMall, Singapore](https://datamall.lta.gov.sg/content/dam/datamall/datasets/LTA_DataMall_API_User_Guide.pdf) | Singapore transport information | `apiKey` | No | Unknown |\n| [Metro Lisboa](http://app.metrolisboa.pt/status/getLinhas.php) | Delays in subway lines | No | No | No |\n| [Navitia](https://doc.navitia.io/) | The open API for building cool stuff with transport data | `apiKey` | Yes | Unknown |\n| [Open Charge Map](https://openchargemap.org/site/develop/api) | Global public registry of electric vehicle charging locations | `apiKey` | Yes | Yes |\n| [OpenSky Network](https://opensky-network.org/apidoc/index.html) | Free real-time ADS-B aviation data | No | Yes | Unknown |\n| [Railway Transport for France](https://www.digital.sncf.com/startup/api) | SNCF public API | `apiKey` | Yes | Unknown |\n| [REFUGE Restrooms](https://www.refugerestrooms.org/api/docs/#!/restrooms) | Provides safe restroom access for transgender, intersex and gender nonconforming individuals | No | Yes | Unknown |\n| [Sabre for Developers](https://developer.sabre.com/guides/travel-agency/quickstart/getting-started-in-travel) | Travel Search - Limited usage | `apiKey` | Yes | Unknown |\n| [Schiphol Airport](https://developer.schiphol.nl/) | Schiphol | `apiKey` | Yes | Unknown |\n| [Tankerkoenig](https://creativecommons.tankerkoenig.de/swagger/) | German realtime gas/diesel prices | `apiKey` | Yes | Yes |\n| [TransitLand](https://www.transit.land/documentation/datastore/api-endpoints.html) | Transit Aggregation | No | Yes | Unknown |\n| [Transport for Atlanta, US](http://www.itsmarta.com/app-developer-resources.aspx) | Marta | No | No | Unknown |\n| [Transport for Auckland, New Zealand](https://dev-portal.at.govt.nz/) | Auckland Transport | No | Yes | Unknown |\n| [Transport for Belgium](https://docs.irail.be/) | The iRail API is a third-party API for Belgian public transport by train | No | Yes | Yes |\n| [Transport for Berlin, Germany](https://github.com/derhuerst/vbb-rest/blob/3/docs/index.md) | Third-party VBB API | No | Yes | Unknown |\n| [Transport for Bordeaux, France](https://opendata.bordeaux-metropole.fr/explore/) | Bordeaux M\u00e9tropole public transport and more (France) | `apiKey` | Yes | Unknown |\n| [Transport for Budapest, Hungary](https://bkkfutar.docs.apiary.io) | Budapest public transport API | No | Yes | Unknown |\n| [Transport for Chicago, US](http://www.transitchicago.com/developers/) | Chicago Transit Authority (CTA) | `apiKey` | No | Unknown |\n| [Transport for Czech Republic](https://www.chaps.cz/eng/products/idos-internet) | Czech transport API | No | Yes | Unknown |\n| [Transport for Denver, US](http://www.rtd-denver.com/gtfs-developer-guide.shtml) | RTD | No | No | Unknown |\n| [Transport for Finland](https://digitransit.fi/en/developers/ ) | Finnish transport API | No | Yes | Unknown |\n| [Transport for Germany](http://data.deutschebahn.com/dataset/api-fahrplan) | Deutsche Bahn (DB) API | `apiKey` | No | Unknown |\n| [Transport for Grenoble, France](https://www.mobilites-m.fr/pages/opendata/OpenDataApi.html) | Grenoble public transport | No | No | No |\n| [Transport for Hessen, Germany](https://opendata.rmv.de/site/start.html) | RMV API (Public Transport in Hessen) | No | Yes | Unknown |\n| [Transport for Honolulu, US](http://hea.thebus.org/api_info.asp) | Honolulu Transportation Information | `apiKey` | No | Unknown |\n| [Transport for Lisbon, Portugal](https://emel.city-platform.com/opendata/) | Data about buses routes, parking and traffic | `apiKey` | Yes | Unknown |\n| [Transport for London, England](https://api.tfl.gov.uk) | TfL API | `apiKey` | Yes | Unknown |\n| [Transport for Los Angeles, US](https://developer.metro.net/api/) | Data about positions of Metro vehicles in real time and travel their routes | No | Yes | Unknown |\n| [Transport for Manchester, England](https://developer.tfgm.com/) | TfGM transport network data | `apiKey` | Yes | No |\n| [Transport for Norway](https://developer.entur.org/) | Transport APIs and dataset for Norway | No | Yes | Unknown |\n| [Transport for Ottawa, Canada](https://www.octranspo.com/en/plan-your-trip/travel-tools/developers) | OC Transpo API | `apiKey` | Yes | Unknown |\n| [Transport for Paris, France](http://data.ratp.fr/api/v1/console/datasets/1.0/search/) | RATP Open Data API | No | No | Unknown |\n| [Transport for Philadelphia, US](http://www3.septa.org/hackathon/) | SEPTA APIs | No | No | Unknown |\n| [Transport for Sao Paulo, Brazil](http://www.sptrans.com.br/desenvolvedores/api-do-olho-vivo-guia-de-referencia/documentacao-api/) | SPTrans | `OAuth` | No | Unknown |\n| [Transport for Spain](https://data.renfe.com/api/1/util/snippet/api_info.html?resource_id=a2368cff-1562-4dde-8466-9635ea3a572a) | Public trains of Spain | No | Yes | Unknown |\n| [Transport for Sweden](https://www.trafiklab.se/api) | Public Transport consumer | `OAuth` | Yes | Unknown |\n| [Transport for Switzerland](https://opentransportdata.swiss/en/) | Official Swiss Public Transport Open Data | `apiKey` | Yes | Unknown |\n| [Transport for Switzerland](https://transport.opendata.ch/) | Swiss public transport API | No | Yes | Unknown |\n| [Transport for The Netherlands](http://www.ns.nl/reisinformatie/ns-api) | NS, only trains | `apiKey` | No | Unknown |\n| [Transport for The Netherlands](https://github.com/skywave/KV78Turbo-OVAPI/wiki) | OVAPI, country-wide public transport | No | Yes | Unknown |\n| [Transport for Toronto, Canada](https://myttc.ca/developers) | TTC | No | Yes | Unknown |\n| [Transport for UK](https://developer.transportapi.com) | Transport API and dataset for UK | `apiKey` | Yes | Unknown |\n| [Transport for United States](https://retro.umoiq.com/xmlFeedDocs/NextBusXMLFeed.pdf) | NextBus API | No | No | Unknown |\n| [Transport for Vancouver, Canada](https://developer.translink.ca/) | TransLink | `OAuth` | Yes | Unknown |\n| [Transport for Washington, US](https://developer.wmata.com/) | Washington Metro transport API | `OAuth` | Yes | Unknown |\n| [transport.rest](https://transport.rest) | Community maintained, developer-friendly public transport API | No | Yes | Yes |\n| [Tripadvisor](https://developer-tripadvisor.com/home/) | Rating content for a hotel, restaurant, attraction or destination | `apiKey` | Yes | Unknown |\n| [Uber](https://developer.uber.com/products) | Uber ride requests and price estimation | `OAuth` | Yes | Yes |\n| [Velib metropolis, Paris, France](https://www.velib-metropole.fr/donnees-open-data-gbfs-du-service-velib-metropole) | Velib Open Data API | No | Yes | No |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### URL Shorteners\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [1pt](https://github.com/1pt-co/api/blob/main/README.md) | A simple URL shortener | No | Yes | Yes |\n| [Bitly](http://dev.bitly.com/get_started.html) | URL shortener and link management | `OAuth` | Yes | Unknown |\n| [CleanURI](https://cleanuri.com/docs) | URL shortener service | No | Yes | Yes |\n| [ClickMeter](https://support.clickmeter.com/hc/en-us/categories/201474986) | Monitor, compare and optimize your marketing links | `apiKey` | Yes | Unknown |\n| [Clico](https://cli.com/swagger-ui/index.html?configUrl=/v3/api-docs/swagger-config) | URL shortener service | `apiKey` | Yes | Unknown |\n| [Cutt.ly](https://cutt.ly/api-documentation/cuttly-links-api) | URL shortener service | `apiKey` | Yes | Unknown |\n| [Drivet URL Shortener](https://wiki.drivet.xyz/en/url-shortener/add-links) | Shorten a long URL easily and fast | No | Yes | Unknown |\n| [Free Url Shortener](https://ulvis.net/developer.html) | Free URL Shortener offers a powerful API to interact with other sites | No | Yes | Unknown |\n| [Git.io](https://github.blog/2011-11-10-git-io-github-url-shortener/) | Git.io URL shortener | No | Yes | Unknown |\n| [GoTiny](https://github.com/robvanbakel/gotiny-api) | A lightweight URL shortener, focused on ease-of-use for the developer and end-user | No | Yes | Yes |\n| [Kutt](https://docs.kutt.it/) | Free Modern URL Shortener | `apiKey` | Yes | Yes |\n| [Mgnet.me](http://mgnet.me/api.html) | Torrent URL shorten API | No | Yes | No |\n| [owo](https://owo.vc/api) | A simple link obfuscator/shortener | No | Yes | Unknown |\n| [Rebrandly](https://developers.rebrandly.com/v1/docs) | Custom URL shortener for sharing branded links | `apiKey` | Yes | Unknown |\n| [Short Link](https://github.com/FayasNoushad/Short-Link-API) | Short URLs support so many domains | No | Yes | Unknown |\n| [Shrtcode](https://shrtco.de/docs) | URl Shortener with multiple Domains | No | Yes | Yes |\n| [Shrtlnk](https://shrtlnk.dev/developer) | Simple and efficient short link creation | `apiKey` | Yes | Yes |\n| [TinyURL](https://tinyurl.com/app/dev) | Shorten long URLs | `apiKey` | Yes | No |\n| [UrlBae](https://urlbae.com/developers) | Simple and efficient short link creation | `apiKey` | Yes | Yes |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Vehicle\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [Brazilian Vehicles and Prices](https://deividfortuna.github.io/fipe/) | Vehicles information from Funda\u00e7\u00e3o Instituto de Pesquisas Econ\u00f4micas - Fipe | No | Yes | No |\n| [Helipaddy sites](https://helipaddy.com/api/) | Helicopter and passenger drone landing site directory, Helipaddy data and much more | `apiKey` | Yes | Unknown |\n| [Kelley Blue Book](http://developer.kbb.com/#!/data/1-Default) | Vehicle info, pricing, configuration, plus much more | `apiKey` | Yes | No |\n| [Mercedes-Benz](https://developer.mercedes-benz.com/apis) | Telematics data, remotely access vehicle functions, car configurator, locate service dealers | `apiKey` | Yes | No |\n| [NHTSA](https://vpic.nhtsa.dot.gov/api/) | NHTSA Product Information Catalog and Vehicle Listing | No | Yes | Unknown |\n| [Smartcar](https://smartcar.com/docs/) | Lock and unlock vehicles and get data like odometer reading and location. Works on most new cars | `OAuth` | Yes | Yes |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Video\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [An API of Ice And Fire](https://anapioficeandfire.com/) | Game Of Thrones API | No | Yes | Unknown |\n| [Bob's Burgers](https://bobs-burgers-api-ui.herokuapp.com) | Bob's Burgers API | No | Yes | Yes |\n| [Breaking Bad](https://breakingbadapi.com/documentation) | Breaking Bad API | No | Yes | Unknown |\n| [Breaking Bad Quotes](https://github.com/shevabam/breaking-bad-quotes) | Some Breaking Bad quotes | No | Yes | Unknown |\n| [Catalogopolis](https://api.catalogopolis.xyz/docs/) | Doctor Who API | No | Yes | Unknown |\n| [Catch The Show](https://catchtheshow.herokuapp.com/api/documentation) | REST API for next-episode.net | No | Yes | Unknown |\n| [Czech Television](http://www.ceskatelevize.cz/xml/tv-program/) | TV programme of Czech TV | No | No | Unknown |\n| [Dailymotion](https://developer.dailymotion.com/) | Dailymotion Developer API | `OAuth` | Yes | Unknown |\n| [Dune](https://github.com/ywalia01/dune-api) | A simple API which provides you with book, character, movie and quotes JSON data | No | Yes | Yes |\n| [Final Space](https://finalspaceapi.com/docs/) | Final Space API | No | Yes | Yes |\n| [Game of Thrones Quotes](https://gameofthronesquotes.xyz/) | Some Game of Thrones quotes | No | Yes | Unknown |\n| [Harry Potter Charactes](https://hp-api.herokuapp.com/) | Harry Potter Characters Data with with imagery | No | Yes | Unknown |\n| [IMDb-API](https://imdb-api.com/) | API for receiving movie, serial and cast information | `apiKey` | Yes | Unknown |\n| [IMDbOT](https://github.com/SpEcHiDe/IMDbOT) | Unofficial IMDb Movie / Series Information | No | Yes | Yes |\n| [JSON2Video](https://json2video.com) | Create and edit videos programmatically: watermarks,resizing,slideshows,voice-over,text animations | `apiKey` | Yes | No |\n| [Lucifer Quotes](https://github.com/shadowoff09/lucifer-quotes) | Returns Lucifer quotes | No | Yes | Unknown |\n| [MCU Countdown](https://github.com/DiljotSG/MCU-Countdown) | A Countdown to the next MCU Film | No | Yes | Yes |\n| [Motivational Quotes](https://nodejs-quoteapp.herokuapp.com/) | Random Motivational Quotes | No | Yes | Unknown |\n| [Movie Quote](https://github.com/F4R4N/movie-quote/) | Random Movie and Series Quotes | No | Yes | Yes |\n| [Open Movie Database](http://www.omdbapi.com/) | Movie information | `apiKey` | Yes | Unknown |\n| [Owen Wilson Wow](https://owen-wilson-wow-api.herokuapp.com) | API for actor Owen Wilson's \"wow\" exclamations in movies | No | Yes | Yes |\n| [Ron Swanson Quotes](https://github.com/jamesseanwright/ron-swanson-quotes#ron-swanson-quotes-api) | Television | No | Yes | Unknown |\n| [Simkl](https://simkl.docs.apiary.io) | Movie, TV and Anime data | `apiKey` | Yes | Unknown |\n| [STAPI](http://stapi.co) | Information on all things Star Trek | No | No | No |\n| [Stranger Things Quotes](https://github.com/shadowoff09/strangerthings-quotes) | Returns Stranger Things quotes | No | Yes | Unknown |\n| [Stream](https://api.stream.cz/graphiql) | Czech internet television, films, series and online videos for free | No | Yes | No |\n| [Stromberg Quotes](https://www.stromberg-api.de/) | Returns Stromberg quotes and more | No | Yes | Unknown |\n| [SWAPI](https://swapi.dev/) | All the Star Wars data you've ever wanted | No | Yes | Yes |\n| [SWAPI](https://www.swapi.tech) | All things Star Wars | No | Yes | Yes |\n| [SWAPI GraphQL](https://graphql.org/swapi-graphql) | Star Wars GraphQL API | No | Yes | Unknown |\n| [The Lord of the Rings](https://the-one-api.dev/) | The Lord of the Rings API | `apiKey` | Yes | Unknown |\n| [The Vampire Diaries](https://vampire-diaries-api.netlify.app/) | TV Show Data | `apiKey` | Yes | Yes |\n| [ThronesApi](https://thronesapi.com/) | Game Of Thrones Characters Data with imagery | No | Yes | Unknown |\n| [TMDb](https://www.themoviedb.org/documentation/api) | Community-based movie data | `apiKey` | Yes | Unknown |\n| [TrailerAddict](https://www.traileraddict.com/trailerapi) | Easily embed trailers from TrailerAddict | `apiKey` | No | Unknown |    \n| [Trakt](https://trakt.docs.apiary.io/) | Movie and TV Data | `apiKey` | Yes | Yes |\n| [TVDB](https://thetvdb.com/api-information) | Television data | `apiKey` | Yes | Unknown |\n| [TVMaze](http://www.tvmaze.com/api) | TV Show Data | No | No | Unknown |\n| [uNoGS](https://rapidapi.com/unogs/api/unogsng) | Unofficial Netflix Online Global Search, Search all netflix regions in one place | `apiKey` | Yes | Yes |\n| [Vimeo](https://developer.vimeo.com/) | Vimeo Developer API | `OAuth` | Yes | Unknown |\n| [Watchmode](https://api.watchmode.com/) | API for finding out the streaming availability of movies & shows | `apiKey` | Yes | Unknown |\n| [Web Series Quotes Generator](https://github.com/yogeshwaran01/web-series-quotes) | API generates various Web Series Quote Images | No | Yes | Yes |\n| [YouTube](https://developers.google.com/youtube/) | Add YouTube functionality to your sites and apps | `OAuth` | Yes | Unknown |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n### Weather\nAPI | Description | Auth | HTTPS | CORS |\n|:---|:---|:---|:---|:---|\n| [7Timer!](http://www.7timer.info/doc.php?lang=en) | Weather, especially for Astroweather | No | No | Unknown |\n| [AccuWeather](https://developer.accuweather.com/apis) | Weather and forecast data | `apiKey` | No | Unknown |\n| [Aemet](https://opendata.aemet.es/centrodedescargas/inicio) | Weather and forecast data from Spain | `apiKey` | Yes | Unknown |\n| [apilayer weatherstack](https://weatherstack.com/) | Real-Time & Historical World Weather Data API | `apiKey` | Yes | Unknown |\n| [APIXU](https://www.apixu.com/doc/request.aspx) | Weather | `apiKey` | Yes | Unknown |\n| [AQICN](https://aqicn.org/api/) | Air Quality Index Data for over 1000 cities | `apiKey` | Yes | Unknown |\n| [AviationWeather](https://www.aviationweather.gov/dataserver) | NOAA aviation weather forecasts and observations | No | Yes | Unknown |\n| [ColorfulClouds](https://open.caiyunapp.com/ColorfulClouds_Weather_API) | Weather | `apiKey` | Yes | Yes |\n| [Euskalmet](https://opendata.euskadi.eus/api-euskalmet/-/api-de-euskalmet/) | Meteorological data of the Basque Country | `apiKey` | Yes | Unknown |\n| [Foreca](https://developer.foreca.com) | Weather | `OAuth` | Yes | Unknown |\n| [HG Weather](https://hgbrasil.com/status/weather) | Provides weather forecast data for cities in Brazil | `apiKey` | Yes | Yes |\n| [Hong Kong Obervatory](https://www.hko.gov.hk/en/abouthko/opendata_intro.htm) | Provide weather information, earthquake information, and climate data | No | Yes | Unknown |\n| [MetaWeather](https://www.metaweather.com/api/) | Weather | No | Yes | No |\n| [Meteorologisk Institutt](https://api.met.no/weatherapi/documentation) | Weather and climate data | `User-Agent` | Yes | Unknown |\n| [Micro Weather](https://m3o.com/weather/api) | Real time weather forecasts and historic data | `apiKey` | Yes | Unknown |\n| [ODWeather](http://api.oceandrivers.com/static/docs.html) | Weather and weather webcams | No | No | Unknown |\n| [Oikolab](https://docs.oikolab.com) | 70+ years of global, hourly historical and forecast weather data from NOAA and ECMWF | `apiKey` | Yes | Yes |\n| [Open-Meteo](https://open-meteo.com/) | Global weather forecast API for non-commercial use | No | Yes | Yes |\n| [openSenseMap](https://api.opensensemap.org/) | Data from Personal Weather Stations called senseBoxes | No | Yes | Yes |\n| [OpenUV](https://www.openuv.io) | Real-time UV Index Forecast | `apiKey` | Yes | Unknown |\n| [OpenWeatherMap](https://openweathermap.org/api) | Weather | `apiKey` | Yes | Unknown |\n| [QWeather](https://dev.qweather.com/en/) | Location-based weather data | `apiKey` | Yes | Yes |\n| [RainViewer](https://www.rainviewer.com/api.html) | Radar data collected from different websites across the Internet | No | Yes | Unknown |\n| [Storm Glass](https://stormglass.io/) | Global marine weather from multiple sources | `apiKey` | Yes | Yes |\n| [Tomorrow](https://docs.tomorrow.io) | Weather API Powered by Proprietary Technology | `apiKey` | Yes | Unknown |\n| [US Weather](https://www.weather.gov/documentation/services-web-api) | US National Weather Service | No | Yes | Yes |\n| [Visual Crossing](https://www.visualcrossing.com/weather-api) | Global historical and weather forecast data | `apiKey` | Yes | Yes |\n| [weather-api](https://github.com/robertoduessmann/weather-api) | A RESTful free API to check the weather | No | Yes | No |\n| [WeatherAPI](https://www.weatherapi.com/) | Weather API with other stuff like Astronomy and Geolocation API | `apiKey` | Yes | Yes |\n| [Weatherbit](https://www.weatherbit.io/api) | Weather | `apiKey` | Yes | Unknown |\n| [Yandex.Weather](https://yandex.com/dev/weather/) | Assesses weather condition in specific locations | `apiKey` | Yes | No |\n\n**[\u2b06 Back to Index](#index)**\n<br >\n<br >\n\n<br>\n\n## License\n[MIT](LICENSE) (c) 2022 public-apis\n"}
{"repo_url": "https://github.com/public-apis/public-apis", "path": "scripts/README.md", "size": 1877, "license": "MIT", "content_sha": "2e926a37d1eccfa4a71df5081492f441248ffdb1", "findings": [], "content": "# Public APIs Scripts\n\nThis directory contains all validation and testing scripts used by Public APIs.\n\n```bash\nscripts\n\u2502   github_pull_request.sh  # used to validate changes of a pull request\n\u2502   requirements.txt  # contains dependencies of validate package\n\u2502\n\u251c\u2500\u2500\u2500tests  # contains all unit tests from the validate package\n\u2502       test_validate_format.py\n\u2502       test_validate_links.py\n\u2502\n\u2514\u2500\u2500\u2500validate  # validate package\n        format.py\n        links.py\n```\n\n## Install dependencies\n\nYou must have [python](https://www.python.org/) installed to use these scripts.\n\nit is also necessary to install the validation package dependencies, use [pip package manager](https://pypi.org/project/pip/) for this:\n\n```bash\n$ python -m pip install -r scripts/requirements.txt\n```\n\n## Run validations\n\nTo run format validation on the `README.md` file, being in the root directory of public-apis, run:\n\n```bash\n$ python scripts/validate/format.py README.md\n```\n\nTo run link validation on the `README.md` file, being in the root directory of public-apis, run:\n\n```bash\n$ python scripts/validate/links.py README.md\n```\n\nAs there are many links to check, this process can take some time. If your goal is not to check if the links are working, you can only check for duplicate links. Run:\n\n```bash\n$ python scripts/validate/links.py README.md -odlc\n```\n\n*`-odlc` is an abbreviation of `--only_duplicate_links_checker`*\n\n## Running Tests\n\nTo run all tests it is necessary to change to the scripts directory:\n\n```bash\n$ cd scripts\n```\n\nthen run:\n\n```bash\n$ python -m unittest discover tests/ --verbose\n```\n\nTo run only the format tests, run:\n\n```bash\n$ python -m unittest discover tests/ --verbose --pattern \"test_validate_format.py\"\n```\n\nTo run only the links tests, run:\n\n```bash\n$ python -m unittest discover tests/ --verbose --pattern \"test_validate_links.py\"\n```\n"}
{"repo_url": "https://github.com/public-apis/public-apis", "path": "scripts/requirements.txt", "size": 89, "license": "MIT", "content_sha": "9b0cb45316c0af73e54c34eb9b89236b747c66f0", "findings": [], "content": "certifi==2021.10.8\ncharset-normalizer==2.0.10\nidna==3.3\nrequests==2.27.1\nurllib3==1.26.8\n"}
{"repo_url": "https://github.com/public-apis/public-apis", "path": "scripts/validate/__init__.py", "size": 80, "license": "MIT", "content_sha": "4287dcc89cdc905b662bd4dd2a719dfa973ed3c2", "findings": [], "content": "# -*- coding: utf-8 -*-\n\nfrom validate import format\nfrom validate import links\n"}
{"repo_url": "https://github.com/public-apis/public-apis", "path": "scripts/validate/format.py", "size": 8464, "license": "MIT", "content_sha": "092595dc0015c1d76d19b8631754e35ecd8af7fd", "findings": [], "content": "# -*- coding: utf-8 -*-\n\nimport re\nimport sys\nfrom string import punctuation\nfrom typing import List, Tuple, Dict\n\n# Temporary replacement\n# The descriptions that contain () at the end must adapt to the new policy later\npunctuation = punctuation.replace('()', '')\n\nanchor = '###'\nauth_keys = ['apiKey', 'OAuth', 'X-Mashape-Key', 'User-Agent', 'No']\nhttps_keys = ['Yes', 'No']\ncors_keys = ['Yes', 'No', 'Unknown']\n\nindex_title = 0\nindex_desc = 1\nindex_auth = 2\nindex_https = 3\nindex_cors = 4\n\nnum_segments = 5\nmin_entries_per_category = 3\nmax_description_length = 100\n\nanchor_re = re.compile(anchor + '\\s(.+)')\ncategory_title_in_index_re = re.compile('\\*\\s\\[(.*)\\]')\nlink_re = re.compile('\\[(.+)\\]\\((http.*)\\)')\n\n# Type aliases\nAPIList = List[str]\nCategories = Dict[str, APIList]\nCategoriesLineNumber = Dict[str, int]\n\n\ndef error_message(line_number: int, message: str) -> str:\n    line = line_number + 1\n    return f'(L{line:03d}) {message}'\n\n\ndef get_categories_content(contents: List[str]) -> Tuple[Categories, CategoriesLineNumber]:\n\n    categories = {}\n    category_line_num = {}\n\n    for line_num, line_content in enumerate(contents):\n\n        if line_content.startswith(anchor):\n            category = line_content.split(anchor)[1].strip()\n            categories[category] = []\n            category_line_num[category] = line_num\n            continue\n\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        raw_title = [\n            raw_content.strip() for raw_content in line_content.split('|')[1:-1]\n        ][0]\n\n        title_match = link_re.match(raw_title)\n        if title_match:\n                title = title_match.group(1).upper()\n                categories[category].append(title)\n\n    return (categories, category_line_num)\n\n\ndef check_alphabetical_order(lines: List[str]) -> List[str]:\n\n    err_msgs = []\n\n    categories, category_line_num = get_categories_content(contents=lines)\n\n    for category, api_list in categories.items():\n        if sorted(api_list) != api_list:\n            err_msg = error_message(\n                category_line_num[category], \n                f'{category} category is not alphabetical order'\n            )\n            err_msgs.append(err_msg)\n    \n    return err_msgs\n\n\ndef check_title(line_num: int, raw_title: str) -> List[str]:\n\n    err_msgs = []\n\n    title_match = link_re.match(raw_title)\n\n    # url should be wrapped in \"[TITLE](LINK)\" Markdown syntax\n    if not title_match:\n        err_msg = error_message(line_num, 'Title syntax should be \"[TITLE](LINK)\"')\n        err_msgs.append(err_msg)\n    else:\n        # do not allow \"... API\" in the entry title\n        title = title_match.group(1)\n        if title.upper().endswith(' API'):\n            err_msg = error_message(line_num, 'Title should not end with \"... API\". Every entry is an API here!')\n            err_msgs.append(err_msg)\n\n    return err_msgs\n\n\ndef check_description(line_num: int, description: str) -> List[str]:\n\n    err_msgs = []\n\n    first_char = description[0]\n    if first_char.upper() != first_char:\n        err_msg = error_message(line_num, 'first character of description is not capitalized')\n        err_msgs.append(err_msg)\n\n    last_char = description[-1]\n    if last_char in punctuation:\n        err_msg = error_message(line_num, f'description should not end with {last_char}')\n        err_msgs.append(err_msg)\n\n    desc_length = len(description)\n    if desc_length > max_description_length:\n        err_msg = error_message(line_num, f'description should not exceed {max_description_length} characters (currently {desc_length})')\n        err_msgs.append(err_msg)\n    \n    return err_msgs\n\n\ndef check_auth(line_num: int, auth: str) -> List[str]:\n\n    err_msgs = []\n\n    backtick = '`'\n    if auth != 'No' and (not auth.startswith(backtick) or not auth.endswith(backtick)):\n        err_msg = error_message(line_num, 'auth value is not enclosed with `backticks`')\n        err_msgs.append(err_msg)\n\n    if auth.replace(backtick, '') not in auth_keys:\n        err_msg = error_message(line_num, f'{auth} is not a valid Auth option')\n        err_msgs.append(err_msg)\n    \n    return err_msgs\n\n\ndef check_https(line_num: int, https: str) -> List[str]:\n\n    err_msgs = []\n\n    if https not in https_keys:\n        err_msg = error_message(line_num, f'{https} is not a valid HTTPS option')\n        err_msgs.append(err_msg)\n\n    return err_msgs\n\n\ndef check_cors(line_num: int, cors: str) -> List[str]:\n\n    err_msgs = []\n\n    if cors not in cors_keys:\n        err_msg = error_message(line_num, f'{cors} is not a valid CORS option')\n        err_msgs.append(err_msg)\n    \n    return err_msgs\n\n\ndef check_entry(line_num: int, segments: List[str]) -> List[str]:\n\n    raw_title = segments[index_title]\n    description = segments[index_desc]\n    auth = segments[index_auth]\n    https = segments[index_https]\n    cors = segments[index_cors]\n\n    title_err_msgs = check_title(line_num, raw_title)\n    desc_err_msgs = check_description(line_num, description)\n    auth_err_msgs = check_auth(line_num, auth)\n    https_err_msgs = check_https(line_num, https)\n    cors_err_msgs = check_cors(line_num, cors)\n\n    err_msgs = [\n        *title_err_msgs,\n        *desc_err_msgs,\n        *auth_err_msgs,\n        *https_err_msgs,\n        *cors_err_msgs\n    ]\n\n    return err_msgs\n\n\ndef check_file_format(lines: List[str]) -> List[str]:\n\n    err_msgs = []\n    category_title_in_index = []\n\n    alphabetical_err_msgs = check_alphabetical_order(lines)\n    err_msgs.extend(alphabetical_err_msgs)\n\n    num_in_category = min_entries_per_category + 1\n    category = ''\n    category_line = 0\n\n    for line_num, line_content in enumerate(lines):\n\n        category_title_match = category_title_in_index_re.match(line_content)\n        if category_title_match:\n            category_title_in_index.append(category_title_match.group(1))\n\n        # check each category for the minimum number of entries\n        if line_content.startswith(anchor):\n            category_match = anchor_re.match(line_content)\n            if category_match:\n                if category_match.group(1) not in category_title_in_index:\n                    err_msg = error_message(line_num, f'category header ({category_match.group(1)}) not added to Index section')\n                    err_msgs.append(err_msg)\n            else:\n                err_msg = error_message(line_num, 'category header is not formatted correctly')\n                err_msgs.append(err_msg)\n\n            if num_in_category < min_entries_per_category:\n                err_msg = error_message(category_line, f'{category} category does not have the minimum {min_entries_per_category} entries (only has {num_in_category})')\n                err_msgs.append(err_msg)\n\n            category = line_content.split(' ')[1]\n            category_line = line_num\n            num_in_category = 0\n            continue\n\n        # skips lines that we do not care about\n        if not line_content.startswith('|') or line_content.startswith('|---'):\n            continue\n\n        num_in_category += 1\n        segments = line_content.split('|')[1:-1]\n        if len(segments) < num_segments:\n            err_msg = error_message(line_num, f'entry does not have all the required columns (have {len(segments)}, need {num_segments})')\n            err_msgs.append(err_msg)\n            continue\n    \n        for segment in segments:\n            # every line segment should start and end with exactly 1 space\n            if len(segment) - len(segment.lstrip()) != 1 or len(segment) - len(segment.rstrip()) != 1:\n                err_msg = error_message(line_num, 'each segment must start and end with exactly 1 space')\n                err_msgs.append(err_msg)\n        \n        segments = [segment.strip() for segment in segments]\n        entry_err_msgs = check_entry(line_num, segments)\n        err_msgs.extend(entry_err_msgs)\n    \n    return err_msgs\n\n\ndef main(filename: str) -> None:\n\n    with open(filename, mode='r', encoding='utf-8') as file:\n        lines = list(line.rstrip() for line in file)\n\n    file_format_err_msgs = check_file_format(lines)\n\n    if file_format_err_msgs:\n        for err_msg in file_format_err_msgs:\n            print(err_msg)\n        sys.exit(1)\n\n\nif __name__ == '__main__':\n\n    num_args = len(sys.argv)\n\n    if num_args < 2:\n        print('No .md file passed (file should contain Markdown table syntax)')\n        sys.exit(1)\n\n    filename = sys.argv[1]\n\n    main(filename)\n"}
{"repo_url": "https://github.com/public-apis/public-apis", "path": "scripts/validate/links.py", "size": 8032, "license": "MIT", "content_sha": "9f8088712e5093f0758a0f9a1ca2ec4af4c2ae35", "findings": [], "content": "# -*- coding: utf-8 -*-\n\nimport re\nimport sys\nimport random\nfrom typing import List, Tuple\n\nimport requests\nfrom requests.models import Response\n\n\ndef find_links_in_text(text: str) -> List[str]:\n    \"\"\"Find links in a text and return a list of URLs.\"\"\"\n\n    link_pattern = re.compile(r'((?:https?://|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:\\'\\\".,<>?\u00ab\u00bb\u201c\u201d\u2018\u2019]))')\n\n    raw_links = re.findall(link_pattern, text)\n\n    links = [\n        str(raw_link[0]) for raw_link in raw_links\n    ]\n\n    return links\n\n\ndef find_links_in_file(filename: str) -> List[str]:\n    \"\"\"Find links in a file and return a list of URLs from text file.\"\"\"\n\n    with open(filename, mode='r', encoding='utf-8') as file:\n        readme = file.read()\n        index_section = readme.find('## Index')\n        if index_section == -1:\n            index_section = 0\n        content = readme[index_section:]\n\n    links = find_links_in_text(content)\n\n    return links\n\n\ndef check_duplicate_links(links: List[str]) -> Tuple[bool, List]:\n    \"\"\"Check for duplicated links.\n\n    Returns a tuple with True or False and duplicate list.\n    \"\"\"\n\n    seen = {}\n    duplicates = []\n    has_duplicate = False\n\n    for link in links:\n        link = link.rstrip('/')\n        if link not in seen:\n            seen[link] = 1\n        else:\n            if seen[link] == 1:\n                duplicates.append(link)\n\n    if duplicates:\n        has_duplicate = True\n\n    return (has_duplicate, duplicates)\n\n\ndef fake_user_agent() -> str:\n    \"\"\"Faking user agent as some hosting services block not-whitelisted UA.\"\"\"\n\n    user_agents = [\n        'Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1467.0 Safari/537.36',\n        'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko)',\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',\n        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',\n    ]\n\n    return random.choice(user_agents)\n\n\ndef get_host_from_link(link: str) -> str:\n\n    host = link.split('://', 1)[1] if '://' in link else link\n\n    # Remove routes, arguments and anchors\n    if '/' in host:\n        host = host.split('/', 1)[0]\n\n    elif '?' in host:\n        host = host.split('?', 1)[0]\n\n    elif '#' in host:\n        host = host.split('#', 1)[0]\n\n    return host\n\n\ndef has_cloudflare_protection(resp: Response) -> bool:\n    \"\"\"Checks if there is any cloudflare protection in the response.\n\n    Cloudflare implements multiple network protections on a given link,\n    this script tries to detect if any of them exist in the response from request.\n\n    Common protections have the following HTTP code as a response:\n        - 403: When host header is missing or incorrect (and more)\n        - 503: When DDOS protection exists\n\n    See more about it at:\n        - https://support.cloudflare.com/hc/en-us/articles/115003014512-4xx-Client-Error\n        - https://support.cloudflare.com/hc/en-us/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors\n        - https://www.cloudflare.com/ddos/\n        - https://superuser.com/a/888526\n\n    Discussions in issues and pull requests:\n        - https://github.com/public-apis/public-apis/pull/2409\n        - https://github.com/public-apis/public-apis/issues/2960 \n    \"\"\"\n\n    code = resp.status_code\n    server = resp.headers.get('Server') or resp.headers.get('server')\n    cloudflare_flags = [\n        '403 Forbidden',\n        'cloudflare',\n        'Cloudflare',\n        'Security check',\n        'Please Wait... | Cloudflare',\n        'We are checking your browser...',\n        'Please stand by, while we are checking your browser...',\n        'Checking your browser before accessing',\n        'This process is automatic.',\n        'Your browser will redirect to your requested content shortly.',\n        'Please allow up to 5 seconds',\n        'DDoS protection by',\n        'Ray ID:',\n        'Cloudflare Ray ID:',\n        '_cf_chl',\n        '_cf_chl_opt',\n        '__cf_chl_rt_tk',\n        'cf-spinner-please-wait',\n        'cf-spinner-redirecting'\n    ]\n\n    if code in [403, 503] and server == 'cloudflare':\n        html = resp.text\n\n        flags_found = [flag in html for flag in cloudflare_flags]\n        any_flag_found = any(flags_found)\n\n        if any_flag_found:\n            return True\n\n    return False\n\n\ndef check_if_link_is_working(link: str) -> Tuple[bool, str]:\n    \"\"\"Checks if a link is working.\n\n    If an error is identified when the request for the link occurs,\n    the return will be a tuple with the first value True and the second\n    value a string containing the error message.\n\n    If no errors are identified, the return will be a tuple with the\n    first value False and the second an empty string.\n    \"\"\"\n\n    has_error = False\n    error_message = ''\n\n    try:\n        resp = requests.get(link, timeout=25, headers={\n            'User-Agent': fake_user_agent(),\n            'host': get_host_from_link(link)\n        })\n\n        code = resp.status_code\n\n        if code >= 400 and not has_cloudflare_protection(resp):\n            has_error = True\n            error_message = f'ERR:CLT: {code} : {link}'\n\n    except requests.exceptions.SSLError as error:\n        has_error = True\n        error_message = f'ERR:SSL: {error} : {link}'\n\n    except requests.exceptions.ConnectionError as error:\n        has_error = True\n        error_message = f'ERR:CNT: {error} : {link}'\n\n    except (TimeoutError, requests.exceptions.ConnectTimeout):\n        has_error = True\n        error_message = f'ERR:TMO: {link}'\n\n    except requests.exceptions.TooManyRedirects as error:\n        has_error = True\n        error_message = f'ERR:TMR: {error} : {link}'\n\n    except (Exception, requests.exceptions.RequestException) as error:\n        has_error = True\n        error_message = f'ERR:UKN: {error} : {link}'\n\n    return (has_error, error_message)\n\n\ndef check_if_list_of_links_are_working(list_of_links: List[str]) -> List[str]:\n    error_messages = []\n    for link in list_of_links:\n        has_error, error_message = check_if_link_is_working(link)\n\n        if has_error:\n            error_messages.append(error_message)\n\n    return error_messages\n\n\ndef start_duplicate_links_checker(links: List[str]) -> None:\n\n    print('Checking for duplicate links...')\n\n    has_duplicate_link, duplicates_links = check_duplicate_links(links)\n\n    if has_duplicate_link:\n        print(f'Found duplicate links:')\n\n        for duplicate_link in duplicates_links:\n            print(duplicate_link)\n\n        sys.exit(1)\n    else:\n        print('No duplicate links.')\n\n\ndef start_links_working_checker(links: List[str]) -> None:\n\n    print(f'Checking if {len(links)} links are working...')\n\n    errors = check_if_list_of_links_are_working(links)\n    if errors:\n\n        num_errors = len(errors)\n        print(f'Apparently {num_errors} links are not working properly. See in:')\n\n        for error_message in errors:\n            print(error_message)\n\n        sys.exit(1)\n\n\ndef main(filename: str, only_duplicate_links_checker: bool) -> None:\n\n    links = find_links_in_file(filename)\n\n    start_duplicate_links_checker(links)\n\n    if not only_duplicate_links_checker:\n        start_links_working_checker(links)\n\n\nif __name__ == '__main__':\n    num_args = len(sys.argv)\n    only_duplicate_links_checker = False\n\n    if num_args < 2:\n        print('No .md file passed')\n        sys.exit(1)\n    elif num_args == 3:\n        third_arg = sys.argv[2].lower()\n\n        if third_arg == '-odlc' or third_arg == '--only_duplicate_links_checker':\n            only_duplicate_links_checker = True\n        else:\n            print(f'Third invalid argument. Usage: python {__file__} [-odlc | --only_duplicate_links_checker]')\n            sys.exit(1)\n\n    filename = sys.argv[1]\n\n    main(filename, only_duplicate_links_checker)\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "README.md", "size": 5871, "license": "NOASSERTION", "content_sha": "1a6280d7b069558621917022a379aa2ebd8a720d", "findings": [{"type": "pii_email", "matches": ["595666367@qq.com"]}], "content": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/readme.gif\"/>\n  <br>\u4e2d\u6587 | <a href=\"README_en.md\">English</a> | <a href=\"README_ja.md\">\u65e5\u672c\u8a9e</a>\n  <br>\u5206\u4eab GitHub \u4e0a\u6709\u8da3\u3001\u5165\u95e8\u7ea7\u7684\u5f00\u6e90\u9879\u76ee\u3002<br>\u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c\u8fd9\u91cc\u80fd\u591f\u5e2e\u4f60\u627e\u5230\u5f00\u6e90\u7684\u4e50\u8da3\uff01\n</p>\n\n<p align=\"center\">\n  <a href=\"https://hellogithub.com/repository/d4aae58ddbf34f0799bf3e8f965e0d70\" target=\"_blank\"><img src=\"https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=d4aae58ddbf34f0799bf3e8f965e0d70&claim_uid=8MKvZoxaWt\" alt=\"Featured\uff5cHelloGitHub\" style=\"width: 250px; height: 54px;\" width=\"250\" height=\"54\" /></a><br>\n  <a href=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\"><img src=\"https://img.shields.io/badge/Talk-%E5%BE%AE%E4%BF%A1%E7%BE%A4-brightgreen.svg?style=popout-square\" alt=\"WeiXin\"></a>\n  <a href=\"https://github.com/521xueweihan/HelloGitHub/stargazers\"><img src=\"https://img.shields.io/github/stars/521xueweihan/HelloGitHub.svg?style=popout-square\" alt=\"GitHub stars\"></a>\n  <a href=\"https://github.com/521xueweihan/HelloGitHub/issues\"><img src=\"https://img.shields.io/github/issues/521xueweihan/HelloGitHub.svg?style=popout-square\" alt=\"GitHub issues\"></a>\n    <a href=\"https://weibo.com/hellogithub\"><img src=\"https://img.shields.io/badge/%E6%96%B0%E6%B5%AA-Weibo-red.svg?style=popout-square\" alt=\"Sina Weibo\"></a>\n</p>\n\n## \u7b80\u4ecb\n\nHelloGitHub \u5206\u4eab GitHub \u4e0a\u6709\u8da3\u3001\u5165\u95e8\u7ea7\u7684\u5f00\u6e90\u9879\u76ee\u3002**\u6bcf\u6708 28 \u53f7**\u4ee5\u6708\u520a\u7684\u5f62\u5f0f[\u66f4\u65b0\u53d1\u5e03](https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA5MzYyNzQ0MQ==&action=getalbum&album_id=1331197538447310849#wechat_redirect)\uff0c\u5185\u5bb9\u5305\u62ec\uff1a**\u6709\u8da3\u3001\u5165\u95e8\u7ea7\u7684\u5f00\u6e90\u9879\u76ee**\u3001**\u5f00\u6e90\u4e66\u7c4d**\u3001**\u5b9e\u6218\u9879\u76ee**\u3001**\u4f01\u4e1a\u7ea7\u9879\u76ee**\u7b49\uff0c\u8ba9\u4f60\u7528\u5f88\u77ed\u65f6\u95f4\u611f\u53d7\u5230\u5f00\u6e90\u7684\u9b45\u529b\uff0c\u7231\u4e0a\u5f00\u6e90\uff01\n\n## \u5185\u5bb9\n\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c [\u5b98\u7f51](https://hellogithub.com/) \u6216 [HelloGitHub \u516c\u4f17\u53f7](https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/weixin.png)\n\n| :card_index: | :jack_o_lantern: | :beer: | :fish_cake: | :octocat: |\n| ------- | ----- | ------------ | ------ | --------- |\n| [\u7b2c 108 \u671f](/content/HelloGitHub108.md) | [\u7b2c 107 \u671f](/content/HelloGitHub107.md) | [\u7b2c 106 \u671f](/content/HelloGitHub106.md) |\n| [\u7b2c 105 \u671f](/content/HelloGitHub105.md) | [\u7b2c 104 \u671f](/content/HelloGitHub104.md) | [\u7b2c 103 \u671f](/content/HelloGitHub103.md) | [\u7b2c 102 \u671f](/content/HelloGitHub102.md) | [\u7b2c 101 \u671f](/content/HelloGitHub101.md) |\n| [\u7b2c 100 \u671f](/content/HelloGitHub100.md) | [\u7b2c 99 \u671f](/content/HelloGitHub99.md) | [\u7b2c 98 \u671f](/content/HelloGitHub98.md) | [\u7b2c 97 \u671f](/content/HelloGitHub97.md) | [\u7b2c 96 \u671f](/content/HelloGitHub96.md) |\n| [\u7b2c 95 \u671f](/content/HelloGitHub95.md) | [\u7b2c 94 \u671f](/content/HelloGitHub94.md) | [\u7b2c 93 \u671f](/content/HelloGitHub93.md) | [\u7b2c 92 \u671f](/content/HelloGitHub92.md) | [\u7b2c 91 \u671f](/content/HelloGitHub91.md) |\n| [\u7b2c 90 \u671f](/content/HelloGitHub90.md) | [\u7b2c 89 \u671f](/content/HelloGitHub89.md) | [\u7b2c 88 \u671f](/content/HelloGitHub88.md) | [\u7b2c 87 \u671f](/content/HelloGitHub87.md) | [\u7b2c 86 \u671f](/content/HelloGitHub86.md) |\n| [\u7b2c 85 \u671f](/content/HelloGitHub85.md) | [\u7b2c 84 \u671f](/content/HelloGitHub84.md) | [\u7b2c 83 \u671f](/content/HelloGitHub83.md) | [\u7b2c 82 \u671f](/content/HelloGitHub82.md) | [\u7b2c 81 \u671f](/content/HelloGitHub81.md) |\n| [\u7b2c 80 \u671f](/content/HelloGitHub80.md) | [\u7b2c 79 \u671f](/content/HelloGitHub79.md) | [\u7b2c 78 \u671f](/content/HelloGitHub78.md) | [\u7b2c 77 \u671f](/content/HelloGitHub77.md) | [\u7b2c 76 \u671f](/content/HelloGitHub76.md) |\n| [\u7b2c 75 \u671f](/content/HelloGitHub75.md) | [\u7b2c 74 \u671f](/content/HelloGitHub74.md) | [\u7b2c 73 \u671f](/content/HelloGitHub73.md) | [\u7b2c 72 \u671f](/content/HelloGitHub72.md) | [\u7b2c 71 \u671f](/content/HelloGitHub71.md) |\n\n\n\u6b22\u8fce[\u63a8\u8350\u6216\u81ea\u8350](https://hellogithub.com/periodical)\u9879\u76ee\u6210\u4e3a **HelloGitHub** \u7684[\u8d21\u732e\u8005](https://github.com/521xueweihan/HelloGitHub/blob/master/content/contributors.md)\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002<a href=\"mailto:595666367@qq.com\">\u8054\u7cfb\u6211</a>\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "README_en.md", "size": 4532, "license": "NOASSERTION", "content_sha": "ed482560d0dc4aa70666f5cfb011ccaf73c70495", "findings": [], "content": "<p align=\"center\">\n  <img src=\"https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/readme.gif\"/>\n  <br><a href=\"README.md\">\u4e2d\u6587</a> | English | <a href=\"README_ja.md\">\u65e5\u672c\u8a9e</a>\n  <br><strong>HelloGitHub</strong> is to share interesting, entry-level open source projects on GitHub.\n  <br>Interest is the best teacher, you will find the interests of open-source here!\n</p>\n\n<p align=\"center\">\n  <a href=\"https://hellogithub.com/repository/d4aae58ddbf34f0799bf3e8f965e0d70\" target=\"_blank\"><img src=\"https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=d4aae58ddbf34f0799bf3e8f965e0d70&claim_uid=8MKvZoxaWt\" alt=\"Featured\uff5cHelloGitHub\" style=\"width: 250px; height: 54px;\" width=\"250\" height=\"54\" /></a><br>\n  <a href=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\"><img src=\"https://img.shields.io/badge/Talk-WeChat-brightgreen.svg?style=popout-square\" alt=\"WeiXin\"></a>\n  <a href=\"https://github.com/521xueweihan/HelloGitHub/stargazers\"><img src=\"https://img.shields.io/github/stars/521xueweihan/HelloGitHub.svg?style=popout-square\" alt=\"GitHub stars\"></a>\n  <a href=\"https://github.com/521xueweihan/HelloGitHub/issues\"><img src=\"https://img.shields.io/github/issues/521xueweihan/HelloGitHub.svg?style=popout-square\" alt=\"GitHub issues\"></a>\n</p>\n\n## Introduction\n\nThis is a project for **novice programmers**, **programming lovers**, and **open-source community lovers**. And the content will be updated and published as a **monthly** magazine. The contents include: **popular projects**, **entry-level projects**, **tools to make life better**, **books**, **learning notes**, **enterprise projects**, etc. Most of these open source projects are very easy to start, very cool and can make you feel the pleasure and the magic of programming in a very short time. So that we can feel the joy of programming, and begin to program.\n\nIt is hoped that through this project, more and more people will join the **open-source community** and contribute to the community. Let these interesting and valuable projects be discovered, concerned, participated and contributed by more people. In the process of participating in these projects, you will learn more programming knowledge \ud83d\udcda, improve programming skills \ud83d\udcbb, and find the pleasure of programming \ud83c\udfae.\n\n## Content\n\nWill be released on the **28th of each month**. [Website](https://hellogithub.com/en) | [Contributors](https://github.com/521xueweihan/HelloGitHub/blob/master/content/contributors.md)\n\n| :card_index: | :jack_o_lantern: | :beer: | :fish_cake: | :octocat: |\n| ------- | ----- | ------------ | ------ | --------- |\n| [NO.108](/content/en/HelloGitHub108.md) | [NO.107](/content/en/HelloGitHub107.md) | [NO.106](/content/en/HelloGitHub106.md) |\n| [NO.105](/content/en/HelloGitHub105.md) | [NO.104](/content/en/HelloGitHub104.md) | [NO.103](/content/en/HelloGitHub103.md) | [NO.102](/content/en/HelloGitHub102.md) | [NO.101](/content/en/HelloGitHub101.md) |\n| [NO.100](/content/en/HelloGitHub100.md) | [NO.99](/content/en/HelloGitHub99.md) | [NO.98](/content/en/HelloGitHub98.md) | [NO.97](/content/en/HelloGitHub97.md) | [NO.96](/content/en/HelloGitHub96.md) |\n| [NO.95](/content/en/HelloGitHub95.md) | [NO.94](/content/en/HelloGitHub94.md) | [NO.93](/content/en/HelloGitHub93.md) | [NO.92](/content/en/HelloGitHub92.md) | [NO.91](/content/en/HelloGitHub91.md) |\n| [NO.90](/content/en/HelloGitHub90.md) | [NO.89](/content/en/HelloGitHub89.md) | [NO.88](/content/en/HelloGitHub88.md) | [NO.87](/content/en/HelloGitHub87.md) | [NO.86](/content/en/HelloGitHub86.md) |\n| [NO.85](/content/en/HelloGitHub85.md) | [NO.84](/content/en/HelloGitHub84.md) | [NO.83](/content/en/HelloGitHub83.md) | [NO.82](/content/en/HelloGitHub82.md) | [NO.81](/content/en/HelloGitHub81.md) |\n| [NO.80](/content/en/HelloGitHub80.md) | [NO.79](/content/en/HelloGitHub79.md) | [NO.78](/content/en/HelloGitHub78.md) | [NO.77](/content/en/HelloGitHub77.md) | [NO.76](/content/en/HelloGitHub76.md) |\n| [NO.75](/content/en/HelloGitHub75.md) | [NO.74](/content/en/HelloGitHub74.md) | [NO.73](/content/en/HelloGitHub73.md) | [NO.72](/content/en/HelloGitHub72.md) | [NO.71](/content/en/HelloGitHub71.md) |\n\n\n## Licence\n\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en\"><img alt=\"CC BY-NC-ND 4.0\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>This work is under the <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en\">CC BY-NC-ND 4.0</a> Lisence.\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "README_ja.md", "size": 5266, "license": "NOASSERTION", "content_sha": "bc7819cf4f9555a3e2d8f5daf4e70332715ee9dc", "findings": [], "content": "<p align=\"center\">\n  <img src=\"https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/readme.gif\"/>\n  <br><a href=\"README.md\">\u4e2d\u6587</a> | <a href=\"README_en.md\">English</a> | \u65e5\u672c\u8a9e\n  <br><strong>HelloGitHub</strong> \u306f\u3001\u8208\u5473\u6df1\u3044\u3001\u30a8\u30f3\u30c8\u30ea\u30fc\u30ec\u30d9\u30eb\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092 GitHub \u3067\u5171\u6709\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n  <br>\u8208\u5473\u306f\u6700\u9ad8\u306e\u6559\u5e2b\u3067\u3042\u308a\u3001\u3042\u306a\u305f\u306f\u3053\u3053\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u8208\u5473\u3092\u898b\u3064\u3051\u308b\u3060\u308d\u3046\uff01\n</p>\n\n<p align=\"center\">\n  <a href=\"https://hellogithub.com/repository/d4aae58ddbf34f0799bf3e8f965e0d70\" target=\"_blank\"><img src=\"https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=d4aae58ddbf34f0799bf3e8f965e0d70&claim_uid=8MKvZoxaWt\" alt=\"Featured\uff5cHelloGitHub\" style=\"width: 250px; height: 54px;\" width=\"250\" height=\"54\" /></a><br>\n  <a href=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\"><img src=\"https://img.shields.io/badge/Talk-WeChat-brightgreen.svg?style=popout-square\" alt=\"WeiXin\"></a>\n  <a href=\"https://github.com/521xueweihan/HelloGitHub/stargazers\"><img src=\"https://img.shields.io/github/stars/521xueweihan/HelloGitHub.svg?style=popout-square\" alt=\"GitHub stars\"></a>\n  <a href=\"https://github.com/521xueweihan/HelloGitHub/issues\"><img src=\"https://img.shields.io/github/issues/521xueweihan/HelloGitHub.svg?style=popout-square\" alt=\"GitHub issues\"></a>\n</p>\n\n## \u30a4\u30f3\u30c8\u30ed\n\n\u3053\u308c\u306f\u3001**\u521d\u5fc3\u8005\u30d7\u30ed\u30b0\u30e9\u30de\u30fc**\u3001**\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u611b\u597d\u5bb6**\u3001**\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u611b\u597d\u5bb6** \u306e\u305f\u3081\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\u307e\u305f\u3001\u30b3\u30f3\u30c6\u30f3\u30c4\u306f **\u6708\u520a** \u30de\u30ac\u30b8\u30f3\u3068\u3057\u3066\u66f4\u65b0\u30fb\u767a\u884c\u3055\u308c\u307e\u3059\u3002\u5185\u5bb9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059: **\u4eba\u6c17\u30d7\u30ed\u30b8\u30a7\u30af\u30c8**\u3001**\u30a8\u30f3\u30c8\u30ea\u30fc\u30ec\u30d9\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8**\u3001**\u751f\u6d3b\u3092\u3088\u308a\u826f\u304f\u3059\u308b\u30c4\u30fc\u30eb**\u3001**\u66f8\u7c4d**\u3001**\u5b66\u7fd2\u30ce\u30fc\u30c8**\u3001**\u30a8\u30f3\u30bf\u30fc\u30d7\u30e9\u30a4\u30ba\u30d7\u30ed\u30b8\u30a7\u30af\u30c8** \u306a\u3069\u3067\u3059\u3002\u3053\u308c\u3089\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u307b\u3068\u3093\u3069\u306f\u3001\u3068\u3066\u3082\u7c21\u5358\u306b\u59cb\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u3068\u3066\u3082\u30af\u30fc\u30eb\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u697d\u3057\u3055\u3068\u9b54\u6cd5\u3092\u77ed\u6642\u9593\u3067\u611f\u3058\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u697d\u3057\u3055\u3092\u611f\u3058\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u59cb\u3081\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u901a\u3058\u3066\u3001\u3088\u308a\u591a\u304f\u306e\u4eba\u3005\u304c **\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30b3\u30df\u30e5\u30cb\u30c6\u30a3** \u306b\u53c2\u52a0\u3057\u3001\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306b\u8ca2\u732e\u3059\u308b\u3053\u3068\u3092\u671b\u3093\u3067\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u8208\u5473\u6df1\u304f\u4fa1\u5024\u306e\u3042\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u3001\u3088\u308a\u591a\u304f\u306e\u4eba\u3005\u306b\u3088\u3063\u3066\u767a\u898b\u3055\u308c\u3001\u95a2\u5fc3\u3092\u6301\u305f\u308c\u3001\u53c2\u52a0\u3055\u308c\u3001\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u3053\u308c\u3089\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u53c2\u52a0\u3059\u308b\u904e\u7a0b\u3067\u3001\u3042\u306a\u305f\u306f\u3088\u308a\u591a\u304f\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u77e5\u8b58\u3092\u5b66\u3073\ud83d\udcda\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u30b9\u30ad\u30eb\u3092\u5411\u4e0a\u3055\u305b\ud83d\udcbb\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u697d\u3057\u3055\u3092\u898b\u3064\u3051\u308b\u3067\u3057\u3087\u3046\ud83c\udfae\u3002\n\n## \u30b3\u30f3\u30c6\u30f3\u30c4\n\n**\u6bce\u670828\u65e5** \u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3059| [\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30bf\u30fc](https://github.com/521xueweihan/HelloGitHub/blob/master/content/contributors.md) | [Web \u30b5\u30a4\u30c8](https://hellogithub.com)\n\n| :card_index: | :jack_o_lantern: | :beer: | :fish_cake: | :octocat: |\n| ------- | ----- | ------------ | ------ | --------- |\n| [\u7b2c 108 \u53f7](/content/HelloGitHub108.md) | [\u7b2c 107 \u53f7](/content/HelloGitHub107.md) | [\u7b2c 106 \u53f7](/content/HelloGitHub106.md) |\n| [\u7b2c 105 \u53f7](/content/HelloGitHub105.md) | [\u7b2c 104 \u53f7](/content/HelloGitHub104.md) | [\u7b2c 103 \u53f7](/content/HelloGitHub103.md) | [\u7b2c 102 \u53f7](/content/HelloGitHub102.md) | [\u7b2c 101 \u53f7](/content/HelloGitHub101.md) |\n| [\u7b2c 100 \u53f7](/content/HelloGitHub100.md) | [\u7b2c 99 \u53f7](/content/HelloGitHub99.md) | [\u7b2c 98 \u53f7](/content/HelloGitHub98.md) | [\u7b2c 97 \u53f7](/content/HelloGitHub97.md) | [\u7b2c 96 \u53f7](/content/HelloGitHub96.md) |\n| [\u7b2c 95 \u53f7](/content/HelloGitHub95.md) | [\u7b2c 94 \u53f7](/content/HelloGitHub94.md) | [\u7b2c 93 \u53f7](/content/HelloGitHub93.md) | [\u7b2c 92 \u53f7](/content/HelloGitHub92.md) | [\u7b2c 91 \u53f7](/content/HelloGitHub91.md) |\n| [\u7b2c 90 \u53f7](/content/HelloGitHub90.md) | [\u7b2c 89 \u53f7](/content/HelloGitHub89.md) | [\u7b2c 88 \u53f7](/content/HelloGitHub88.md) | [\u7b2c 87 \u53f7](/content/HelloGitHub87.md) | [\u7b2c 86 \u53f7](/content/HelloGitHub86.md) |\n| [\u7b2c 85 \u53f7](/content/HelloGitHub85.md) | [\u7b2c 84 \u53f7](/content/HelloGitHub84.md) | [\u7b2c 83 \u53f7](/content/HelloGitHub83.md) | [\u7b2c 82 \u53f7](/content/HelloGitHub82.md) | [\u7b2c 81 \u53f7](/content/HelloGitHub81.md) |\n| [\u7b2c 80 \u53f7](/content/HelloGitHub80.md) | [\u7b2c 79 \u53f7](/content/HelloGitHub79.md) | [\u7b2c 78 \u53f7](/content/HelloGitHub78.md) | [\u7b2c 77 \u53f7](/content/HelloGitHub77.md) | [\u7b2c 76 \u53f7](/content/HelloGitHub76.md) |\n| [\u7b2c 75 \u53f7](/content/HelloGitHub75.md) | [\u7b2c 74 \u53f7](/content/HelloGitHub74.md) | [\u7b2c 73 \u53f7](/content/HelloGitHub73.md) | [\u7b2c 72 \u53f7](/content/HelloGitHub72.md) | [\u7b2c 71 \u53f7](/content/HelloGitHub71.md) |\n\n\n## \u30e9\u30a4\u30bb\u30f3\u30b9\n\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en\"><img alt=\"CC BY-NC-ND 4.0\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u3053\u306e\u4f5c\u54c1\u306f <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en\">CC BY-NC-ND 4.0</a> \u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "content/HelloGitHub01.md", "size": 8853, "license": "NOASSERTION", "content_sha": "bafc3422710c4e60fcff315fcb050a5f6316e5ab", "findings": [], "content": "# \u300aHelloGitHub\u300b\u7b2c 01 \u671f\n> \u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c**HelloGitHub** \u8ba9\u4f60\u5bf9\u5f00\u6e90\u611f\u5174\u8da3\uff01\n<p align=\"center\">\n    <img src='https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg' style=\"max-width:100%;\"></img>\n</p>\n\n## \u76ee\u5f55\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 **\u300c\u76ee\u5f55\u300d** \u56fe\u6807\u6253\u5f00\u76ee\u5f55\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n![](https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png)\n\n**Tips**\uff1a\u5982\u679c\u9047\u5230\u56fe\u7247\u5237\u4e0d\u51fa\u6765\u7684\u60c5\u51b5\uff0c[\u70b9\u51fb](https://hellogithub.com/periodical/volume/01) \u6362\u4e00\u79cd\u6d4f\u89c8\u65b9\u5f0f\u3002\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\" style=\"max-width:30%;\"></img><br>\n\u5173\u6ce8\u300cHelloGitHub\u300d\u516c\u4f17\u53f7\uff0c\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\n</p>\n\n## \u5185\u5bb9\n> **\u4ee5\u4e0b\u4e3a\u672c\u671f\u5185\u5bb9**\uff5c\u6bcf\u4e2a\u6708 **28** \u53f7\u66f4\u65b0\n\n### CSS \u9879\u76ee\n1\u3001[typo.css](https://hellogithub.com/periodical/statistics/click?target=https://github.com/sofish/typo.css)\uff1a\u4e2d\u6587\u7f51\u9875\u91cd\u8bbe\u4e0e\u6392\u7248\uff0c\u4e3a\u4e86\u4e00\u81f4\u5316\u6d4f\u89c8\u5668\u6392\u7248\u6548\u679c\uff0c\u6784\u5efa\u6700\u9002\u5408\u4e2d\u6587\u9605\u8bfb\u7684\u7f51\u9875\u6392\u7248\u3002\u5305\u62ec\u684c\u9762\u548c\u79fb\u52a8\u5e73\u53f0\uff0c[\u9884\u89c8](http://typo.sofi.sh/)\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/01/3124402.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### JavaScript \u9879\u76ee\n2\u3001[activate-power-mode](https://hellogithub.com/periodical/statistics/click?target=https://github.com/disjukr/activate-power-mode)\uff1a\u7206\u70b8\u8f93\u5165\u6548\u679c\uff0c[\u5728\u7ebf\u6f14\u793a](http://0xabcdef.com/activate-power-mode/)\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/01/47449796.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n3\u3001[ant-design](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ant-design/ant-design)\uff1a\u963f\u91cc\u5f00\u6e90\u7684\u4e00\u5957\u4f01\u4e1a\u7ea7\u7684 UI \u8bbe\u8ba1\u8bed\u8a00\u548c React \u5b9e\u73b0\u3002[\u4e2d\u6587\u6587\u6863](https://ant.design/docs/react/introduce-cn)\uff0c\u6837\u5f0f\u504f\u5411\u4e8e\u540e\u7aef\uff0c\u5c55\u793a\u6548\u679c\u5341\u5206\u6f02\u4eae\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/01/34526884.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n4\u3001[VeryNginx](https://hellogithub.com/periodical/statistics/click?target=https://github.com/alexazhou/VeryNginx)\uff1a\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u800c\u5bf9\u4eba\u7c7b\u53cb\u597d\u7684 Nginx \u6269\u5c55\u7a0b\u5e8f\u3002[VeryNginx \u6587\u6863](https://github.com/alexazhou/VeryNginx/blob/master/readme_zh.md)\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/01/48843327.jpeg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Python \u9879\u76ee\n5\u3001[awesome-python-webapp](https://hellogithub.com/periodical/statistics/click?target=https://github.com/michaelliao/awesome-python-webapp)\uff1a\u5ed6\u8001\u5e08\u7684 Python \u5165\u95e8\u6559\u7a0b\u4e2d\u7684\u5b9e\u8df5\u9879\u76ee\u7684\u4ee3\u7801\uff0c[\u6559\u7a0b\u5728\u7ebf\u9605\u8bfb](http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001397616003925a3d157284cd24bc0952d6c4a7c9d8c55000)\n\n\n6\u3001[beijing_bus](https://hellogithub.com/periodical/statistics/click?target=https://github.com/wong2/beijing_bus)\uff1a\u5317\u4eac\u5b9e\u65f6\u516c\u4ea4\uff0c\u53ef\u4ee5\u663e\u793a\u67e5\u8be2\u7684\u516c\u4ea4\u5230\u8fbe\u67d0\u7ad9\u8fd8\u9700\u591a\u4e45\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/01/27574074.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n7\u3001[Minos](https://hellogithub.com/periodical/statistics/click?target=https://github.com/phith0n/Minos)\uff1a\u4e00\u4e2a\u57fa\u4e8e Tornado/MongoDB/Redis \u7684\u793e\u533a\u7cfb\u7edf\n\n\n8\u3001[tushare](https://hellogithub.com/periodical/statistics/click?target=https://github.com/waditu/tushare)\uff1aTuShare \u662f\u4e00\u4e2a\u514d\u8d39\u3001\u5f00\u6e90\u7684 Python \u8d22\u7ecf\u6570\u636e\u63a5\u53e3\u5305\uff0c[TuShare \u6587\u6863](http://tushare.org/index.html)\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/01/28904322.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5176\u5b83\n9\u3001[archey-osx](https://hellogithub.com/periodical/statistics/click?target=https://github.com/obihann/archey-osx)\uff1a\u547d\u4ee4\u884c\u4e2d\u663e\u793a Mac OS X \u8ba1\u7b97\u673a\u7684\u57fa\u672c\u4fe1\u606f\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/01/12810222.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n10\u3001[awesome-python-cn](https://hellogithub.com/periodical/statistics/click?target=https://github.com/jobbole/awesome-python-cn)\uff1aawesome-python \u4e2d\u6587\u7248\n\n\n11\u3001[github](https://hellogithub.com/periodical/statistics/click?target=https://github.com/phodal/github)\uff1a\u300aGitHub \u6f2b\u6e38\u6307\u5357\u300b\u8be5\u6307\u5357\u80fd\u591f\u8ba9\u65b0\u624b\u5b66\u4f1a\u5982\u4f55\u4f7f\u7528 GitHub \u7f51\u7ad9\uff0c\u4ece\u800c\u52a0\u5165\u5230\u5f00\u6e90\u793e\u533a\u3002phodal \u4ece\u4ed6\u548c GitHub \u7684\u9752\u6da9\u6545\u4e8b\u5199\u8d77\uff0c\u5168\u65b9\u4f4d\u5730\u4ecb\u7ecd\u4e86 GitHub \u8fd9\u4e2a\u7f51\u7ad9\uff0c\u4ee5\u53ca\u5982\u4f55\u5408\u7406\u5730\u4f7f\u7528\u8fd9\u4e2a\u7f51\u7ad9\n\n\n12\u3001[Learning-SICP](https://hellogithub.com/periodical/statistics/click?target=https://github.com/DeathKing/Learning-SICP)\uff1a\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u6784\u9020\u548c\u89e3\u91ca\u300b\u516c\u5f00\u8bfe\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/01/6688319.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5f00\u6e90\u4e66\u7c4d\n13\u3001[design_patterns](https://hellogithub.com/periodical/statistics/click?target=https://github.com/me115/design_patterns)\uff1a\u300a\u56fe\u8bf4\u8bbe\u8ba1\u6a21\u5f0f\u300b\uff0c[\u5728\u7ebf\u9605\u8bfb](https://design-patterns.readthedocs.io/zh_CN/latest/index.html#)\n\n\n14\u3001[intermediatePython](https://hellogithub.com/periodical/statistics/click?target=https://github.com/yasoob/intermediatePython)\uff1a\u300aIntermediate Python\u300bPython \u8fdb\u9636\u3002\u8fd9\u662f\u672c\u5f88\u8584\u7684 Python \u5165\u95e8\u7ea7\u4e66\u7c4d\uff0c\u6bcf\u7bc7\u5185\u5bb9\u82b1\u4e2a\u4e94\u5206\u949f\u5c31\u80fd\u770b\u5b8c\u3001\u770b\u61c2\u3001\u6709\u6536\u83b7\u7684\u90a3\u79cd\u3002\n\n15\u3001[linuxtools_rst](https://hellogithub.com/periodical/statistics/click?target=https://github.com/me115/linuxtools_rst)\uff1a\u300aLinux \u5de5\u5177\u5feb\u901f\u6559\u7a0b\u300b\uff0c[\u5728\u7ebf\u9605\u8bfb](http://linuxtools-rst.readthedocs.io/zh_CN/latest/)\n\n\n16\u3001[python3-cookbook](https://hellogithub.com/periodical/statistics/click?target=https://github.com/yidao620c/python3-cookbook)\uff1a\u300aPython Cookbook 3rd \u4e2d\u6587\u7248\u300b\uff0c[\u5728\u7ebf\u9605\u8bfb](http://python3-cookbook.readthedocs.org/zh_CN/latest/)\n\n\n17\u3001[the_new_world_linux](https://hellogithub.com/periodical/statistics/click?target=https://github.com/yangyangwithgnu/the_new_world_linux)\uff1a\u300aLinux \u4e0b\u7684\u60ec\u610f\u751f\u6d3b\u300b\uff0c[\u5728\u7ebf\u9605\u8bfb](https://github.com/yangyangwithgnu/the_new_world_linux#\u76ee\u5f55)\n\n\n\n\n<p align=\"center\">\n    \u300e\u4e0a\u4e00\u671f\u300f | <a href='https://github.com/521xueweihan/HelloGitHub/issues/899'>\u53cd\u9988\u548c\u5efa\u8bae</a> | <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub02.md\">\u300e\u4e0b\u4e00\u671f\u300f</a>\n</p>\n\n---\n<p align=\"center\">\n    \ud83d\udc49 <a href='https://hellogithub.com/periodical'>\u6765\uff01\u63a8\u8350\u5f00\u6e90\u9879\u76ee</a> \ud83d\udc48<br>\n    \u5fae\u4fe1\u4e2d\u641c\uff1a<strong>HelloGitHub</strong> \u5173\u6ce8\u516c\u4f17\u53f7<br>\n    \u4e0d\u4ec5\u80fd\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\uff0c\u8fd8\u6709\u56de\u9988\u7c89\u4e1d\u7684\u6d3b\u52a8<br>\n    \u5982\u679c\u6587\u4e2d\u7684\u56fe\u5237\u4e0d\u51fa\u6765\uff0c\u53ef\u4ee5\u70b9\u51fb <a href='https://hellogithub.com/periodical/volume/01'>\u8fd9\u91cc</a>\u3002\n</p>\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "content/HelloGitHub02.md", "size": 8973, "license": "NOASSERTION", "content_sha": "f05a9942d454c738c4bcc9e6ae0684917354a49f", "findings": [], "content": "# \u300aHelloGitHub\u300b\u7b2c 02 \u671f\n> \u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c**HelloGitHub** \u8ba9\u4f60\u5bf9\u5f00\u6e90\u611f\u5174\u8da3\uff01\n<p align=\"center\">\n    <img src='https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg' style=\"max-width:100%;\"></img>\n</p>\n\n## \u76ee\u5f55\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 **\u300c\u76ee\u5f55\u300d** \u56fe\u6807\u6253\u5f00\u76ee\u5f55\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n![](https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png)\n\n**Tips**\uff1a\u5982\u679c\u9047\u5230\u56fe\u7247\u5237\u4e0d\u51fa\u6765\u7684\u60c5\u51b5\uff0c[\u70b9\u51fb](https://hellogithub.com/periodical/volume/02) \u6362\u4e00\u79cd\u6d4f\u89c8\u65b9\u5f0f\u3002\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\" style=\"max-width:30%;\"></img><br>\n\u5173\u6ce8\u300cHelloGitHub\u300d\u516c\u4f17\u53f7\uff0c\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\n</p>\n\n## \u5185\u5bb9\n> **\u4ee5\u4e0b\u4e3a\u672c\u671f\u5185\u5bb9**\uff5c\u6bcf\u4e2a\u6708 **28** \u53f7\u66f4\u65b0\n\n### CSS \u9879\u76ee\n1\u3001[github-markdown-css](https://hellogithub.com/periodical/statistics/click?target=https://github.com/sindresorhus/github-markdown-css)\uff1a\u4eff GitHub \u7684 Markdown \u7684\u6837\u5f0f\uff0c\u5c31\u662f\u4f7f\u7528\u4e86\u8fd9\u4e2a CSS \u540e\uff0cMarkdown \u5c55\u793a\u6548\u679c\u548c GitHub \u7684\u5927\u81f4\u4e00\u6837\u3002[\u793a\u4f8b](https://sindresorhus.com/github-markdown-css/)\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/02/19544711.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### JavaScript \u9879\u76ee\n2\u3001[ant-motion](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ant-design/ant-motion)\uff1a\u963f\u91cc\u5f00\u6e90\u7684\u9879\u76ee\uff0c\u4e00\u5957 React \u6846\u67b6\u52a8\u6548\u89e3\u51b3\u65b9\u6848\uff0c\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\uff0c\u66f4\u5bb9\u6613\u7684\u5728\u9879\u76ee\u4e2d\u4f7f\u7528\u52a8\u6548\u3002\u540c\u65f6\u53ef\u4ee5\u65b9\u4fbf\u5feb\u6377\u5730\u5236\u4f5c\u4e00\u4e2a\u516c\u53f8\u7684\u4ecb\u7ecd\u9875\uff0c[\u5728\u7ebf\u6f14\u793a](https://motion.ant.design/)\n\n\n3\u3001[jquery-weui](https://hellogithub.com/periodical/statistics/click?target=https://github.com/lihongxun945/jquery-weui)\uff1a\u53ef\u80fd\u662f\u6700\u597d\u7528 WeUI \u7248\u672c\uff0c\u5c55\u793a\u6548\u679c\u5982\u4e0b\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/02/48972492.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n4\u3001[listen1_desktop](https://hellogithub.com/periodical/statistics/click?target=https://github.com/listen1/listen1_desktop)\uff1aListen 1 \u8ba9\u4f60\u7528\u4e00\u4e2a\u7f51\u9875\u5c31\u80fd\u542c\u5230\u591a\u4e2a\u7f51\u7ad9\u7684\u5728\u7ebf\u97f3\u4e50\uff0c\u652f\u6301\u5404\u79cd\u5e73\u53f0\u3002\u5982\u56fe\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/02/59187489.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n5\u3001[ssbc](https://hellogithub.com/periodical/statistics/click?target=https://github.com/78/ssbc)\uff1aPython Django \u5199\u7684\u79cd\u5b50\u641c\u7d22\u7f51\u7ad9\u2014\u2014\u624b\u6495\u5305\u83dc\uff0c\u5982\u56fe\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/02/35296157.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n6\u3001[waitForImages](https://hellogithub.com/periodical/statistics/click?target=https://github.com/alexanderdickson/waitForImages)\uff1a\u80cc\u666f\u52a0\u8f7d\u5b8c\u4e8b\u4ef6\uff0c\u793a\u4f8b\u4ee3\u7801\uff1a\n```html\n<script type=\"text/javascript\" src=\"http://catmull.uk/downloads/bg-loaded/bg-loaded.js\"></script>\n<script type=\"text/javascript\">\n   $('body').bgLoaded({\n      afterLoaded : function() {\n         alert('Background image done loading');\n      }\n   });\n</script>\n```\n\n\n7\u3001[wechat-h5-boilerplate](https://hellogithub.com/periodical/statistics/click?target=https://github.com/panteng/wechat-h5-boilerplate)\uff1a\u4e3a\u817e\u8baf\u5fae\u4fe1\u4f18\u5316\u7684 HTML5 \u52a8\u6548\u6a21\u677f\uff0c\u5e2e\u52a9\u4f60\u5feb\u901f\u6784\u5efa\u5168\u5c4f\u6eda\u52a8\u578b HTML5 \u9875\u9762\uff0c[\u793a\u4f8b](https://panteng.github.io/wechat-h5-boilerplate/)\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/02/48837302.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Python \u9879\u76ee\n8\u3001[algorithm](https://hellogithub.com/periodical/statistics/click?target=https://github.com/qiwsir/algorithm)\uff1a\u8001\u9f50\u7684 Python \u7b97\u6cd5\u6559\u7a0b\n\n\n9\u3001[mincss](https://hellogithub.com/periodical/statistics/click?target=https://github.com/peterbe/mincss)\uff1aPython \u5199\u7684\u7528\u6765\u627e\u5230 CSS \u4e2d\u6ca1\u6709\u7528\u5230\u7684\u4ee3\u7801\u7247\u6bb5\uff0c\u5e76\u5220\u9664\u3002\u9002\u7528\u4e8e\uff1a\u60f3\u8981\u505a\u4e00\u4e2a\u9875\u9762\uff0c\u4f46\u662f\u4e0d\u4f1a\u5199 CSS \u4eba\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a\n```python\n#coding:utf-8\n#!/usr/bin/env python\nfrom __future__ import print_function\nimport sys, os\nsys.path.insert(0, os.path.abspath('.'))\nfrom mincss.processor import Processor\n\n# \u8fd9\u91cc\u6539\u6210\u60f3\u8981\u53c2\u8003\u7684\u9875\u9762\nURL = 'http://localhost:9000/page.html'\n\ndef run():\n    p = Processor()\n    p.process(URL)\n\n    # \u8f93\u51faINlink\u7684css\u7684\u7b80\u5316\u524d\u548c\u7b80\u5316\u540e\u7684css\u4ee3\u7801\n    print(\"INLINES \".ljust(79, '-'))\n    for each in p.inlines:\n        print(\"On line %s\" % each.line)\n        print('- ' * 40)\n        print(\"BEFORE\")\n        print(each.before)\n        print('- ' * 40)\n        print(\"AFTER:\")\n        print(each.after)\n\n    # \u8f93\u51falink\u5f15\u7528\u7684css\u7684\u7b80\u5316\u524d\u548c\u7b80\u5316\u540e\u7684css\u4ee3\u7801\n    print(\"LINKS \".ljust(79, '-'))\n    for each in p.links:\n        print(\"On href %s\" % each.href)\n        print('- ' * 40)\n        print(\"BEFORE\")\n        print(each.before)\n        print('- ' * 40)\n        print(\"AFTER:\")\n        print(each.after)\n\nif __name__ == '__main__':\n    run()\n```\n\n\n10\u3001[python-gems](https://hellogithub.com/periodical/statistics/click?target=https://github.com/RealHacker/python-gems)\uff1a\u6709\u8da3\u7684 Pyhton \u4ee3\u7801\u7247\u6bb5\u96c6\u5408\n\n\n11\u3001[python-goose](https://hellogithub.com/periodical/statistics/click?target=https://github.com/grangier/python-goose)\uff1aGoose \u7528\u4e8e\u6587\u7ae0\u63d0\u53d6\u5668\uff0c\u63d0\u53d6\u4e2d\u6587\u5185\u5bb9\u7684\u793a\u4f8b\u4ee3\u7801\uff1a\n```python\n>>> from goose import Goose\n>>> from goose.text import StopWordsChinese\n>>> url  = 'http://www.bbc.co.uk/zhongwen/simp/chinese_news/2012/12/121210_hongkong_politics.shtml'\n>>> g = Goose({'stopwords_class': StopWordsChinese})\n>>> article = g.extract(url=url)\n>>> print article.cleaned_text[:150]\n\u9999\u6e2f\u884c\u653f\u957f\u5b98\u6881\u632f\u82f1\u5728\u5404\u65b9\u538b\u529b\u4e0b\u5c31\u5176\u5927\u5b85\u7684\u8fdd\u7ae0\u5efa\u7b51\uff08\u50ed\u5efa\uff09\u95ee\u9898\u5230\u7acb\u6cd5\u4f1a\u63a5\u53d7\u8d28\u8be2\uff0c\u5e76\u5411\u9999\u6e2f\u6c11\u4f17\u9053\u6b49\u3002\n\n\u6881\u632f\u82f1\u5728\u661f\u671f\u4e8c\uff0812\u670810\u65e5\uff09\u7684\u7b54\u95ee\u5927\u4f1a\u5f00\u59cb\u4e4b\u9645\u5728\u5176\u6f14\u8bf4\u4e2d\u9053\u6b49\uff0c\u4f46\u5f3a\u8c03\u4ed6\u5728\u8fdd\u7ae0\u5efa\u7b51\u95ee\u9898\u4e0a\u6ca1\u6709\u9690\u7792\u7684\u610f\u56fe\u548c\u52a8\u673a\u3002\n\n\u4e00\u4e9b\u4eb2\u5317\u4eac\u9635\u8425\u8bae\u5458\u6b22\u8fce\u6881\u632f\u82f1\u9053\u6b49\uff0c\u4e14\u8ba4\u4e3a\u5e94\u80fd\u83b7\u5f97\u9999\u6e2f\u6c11\u4f17\u63a5\u53d7\uff0c\u4f46\u8fd9\u4e9b\u8bae\u5458\u4e5f\u8d28\u95ee\u6881\u632f\u82f1\u6709\n```\n\n\n### \u5176\u5b83\n12\u3001[leetcode-solutions](https://hellogithub.com/periodical/statistics/click?target=https://github.com/RealHacker/leetcode-solutions)\uff1aLeetcode OJ \u7684 Python \u7b97\u6cd5\u5b9e\u73b0\n\n\n\n\n<p align=\"center\">\n    <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub01.md\">\u300e\u4e0a\u4e00\u671f\u300f</a> | <a href='https://github.com/521xueweihan/HelloGitHub/issues/899'>\u53cd\u9988\u548c\u5efa\u8bae</a> | <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub03.md\">\u300e\u4e0b\u4e00\u671f\u300f</a>\n</p>\n\n---\n<p align=\"center\">\n    \ud83d\udc49 <a href='https://hellogithub.com/periodical'>\u6765\uff01\u63a8\u8350\u5f00\u6e90\u9879\u76ee</a> \ud83d\udc48<br>\n    \u5fae\u4fe1\u4e2d\u641c\uff1a<strong>HelloGitHub</strong> \u5173\u6ce8\u516c\u4f17\u53f7<br>\n    \u4e0d\u4ec5\u80fd\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\uff0c\u8fd8\u6709\u56de\u9988\u7c89\u4e1d\u7684\u6d3b\u52a8<br>\n    \u5982\u679c\u6587\u4e2d\u7684\u56fe\u5237\u4e0d\u51fa\u6765\uff0c\u53ef\u4ee5\u70b9\u51fb <a href='https://hellogithub.com/periodical/volume/02'>\u8fd9\u91cc</a>\u3002\n</p>\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "content/HelloGitHub03.md", "size": 6945, "license": "NOASSERTION", "content_sha": "783920cadd114bcf5b8a352bdae3275650fc1dc5", "findings": [], "content": "# \u300aHelloGitHub\u300b\u7b2c 03 \u671f\n> \u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c**HelloGitHub** \u8ba9\u4f60\u5bf9\u5f00\u6e90\u611f\u5174\u8da3\uff01\n<p align=\"center\">\n    <img src='https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg' style=\"max-width:100%;\"></img>\n</p>\n\n## \u76ee\u5f55\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 **\u300c\u76ee\u5f55\u300d** \u56fe\u6807\u6253\u5f00\u76ee\u5f55\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n![](https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png)\n\n**Tips**\uff1a\u5982\u679c\u9047\u5230\u56fe\u7247\u5237\u4e0d\u51fa\u6765\u7684\u60c5\u51b5\uff0c[\u70b9\u51fb](https://hellogithub.com/periodical/volume/03) \u6362\u4e00\u79cd\u6d4f\u89c8\u65b9\u5f0f\u3002\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\" style=\"max-width:30%;\"></img><br>\n\u5173\u6ce8\u300cHelloGitHub\u300d\u516c\u4f17\u53f7\uff0c\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\n</p>\n\n## \u5185\u5bb9\n> **\u4ee5\u4e0b\u4e3a\u672c\u671f\u5185\u5bb9**\uff5c\u6bcf\u4e2a\u6708 **28** \u53f7\u66f4\u65b0\n\n### CSS \u9879\u76ee\n1\u3001[animate.css](https://hellogithub.com/periodical/statistics/click?target=https://github.com/animate-css/animate.css)\uff1a\u63d0\u4f9b\u70ab\u9177\u52a8\u753b\u6548\u679c\uff0c\u540c\u65f6\u65b9\u4fbf\u3001\u6613\u7528\u3001\u8de8\u6d4f\u89c8\u5668\u7684 CSS \u5e93\u3002[\u5728\u7ebf\u6f14\u793a](https://daneden.github.io/animate.css/)\n\n\n2\u3001[mui](https://hellogithub.com/periodical/statistics/click?target=https://github.com/dcloudio/mui)\uff1a\u6700\u63a5\u8fd1\u539f\u751f APP \u4f53\u9a8c\u7684\u9ad8\u6027\u80fd\u6846\u67b6\u3002\u6027\u80fd\u548c\u4f53\u9a8c\u7684\u5dee\u8ddd\uff0c\u4e00\u76f4\u662f mobile App \u5f00\u53d1\u8005\u653e\u5f03 HTML5 \u7684\u9996\u8981\u539f\u56e0\u3002mui \u6846\u67b6\u6709\u6548\u7684\u89e3\u51b3\u4e86\u8fd9\u4e9b\u95ee\u9898\uff0c\u8fd9\u662f\u4e00\u4e2a\u53ef\u4ee5\u65b9\u4fbf\u5f00\u53d1\u51fa\u9ad8\u6027\u80fd App \u7684\u6846\u67b6\uff0c\u4e5f\u662f\u76ee\u524d\u6700\u63a5\u8fd1\u539f\u751f App \u6548\u679c\u7684\u6846\u67b6\u3002[mui \u5b98\u7f51](http://dev.dcloud.net.cn/mui/)\n\n\n### Go \u9879\u76ee\n3\u3001[pholcus](https://hellogithub.com/periodical/statistics/click?target=https://github.com/andeya/pholcus)\uff1aPholcus \u662f Go \u5199\u7684\u91cd\u91cf\u7ea7\u722c\u866b\uff0c\u7eaf Go \u8bed\u8a00\u7f16\u5199\u7684\u9ad8\u5e76\u53d1\u3001\u5206\u5e03\u5f0f\u3001\u91cd\u91cf\u7ea7\u722c\u866b\u8f6f\u4ef6\uff0c\u652f\u6301\u5355\u673a\u3001\u670d\u52a1\u7aef\u3001\u5ba2\u6237\u7aef\u4e09\u79cd\u8fd0\u884c\u6a21\u5f0f\uff0c\u62e5\u6709 Web\u3001GUI\u3001\u547d\u4ee4\u884c\u4e09\u79cd\u64cd\u4f5c\u754c\u9762\uff0c\u529f\u80fd\u9f50\u5168\u3001\u5f3a\u5927\u3002[\u4f7f\u7528\u624b\u518c](https://pholcus.gitbooks.io/docs/content/)\uff0c\u4f7f\u7528\u5c55\u793a\u5982\u56fe\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/03/38499784.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Java \u9879\u76ee\n4\u3001[greys-anatomy](https://hellogithub.com/periodical/statistics/click?target=https://github.com/oldmanpushcart/greys-anatomy)\uff1aGreys \u662f Java \u5728\u7ebf\u95ee\u9898\u8bca\u65ad\u5de5\u5177\u3002\n\n\n### JavaScript \u9879\u76ee\n5\u3001[editor.md](https://hellogithub.com/periodical/statistics/click?target=https://github.com/pandao/editor.md)\uff1a\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u3001\u53ef\u5d4c\u5165\u7684 Markdown \u5728\u7ebf\u7f16\u8f91\u5668\uff08\u7ec4\u4ef6\uff09\uff0c\u57fa\u4e8e CodeMirror\u3001jQuery \u548c Marked \u6784\u5efa\u3002[\u5728\u7ebf\u5c1d\u8bd5](http://lab.lepture.com/editor/)\uff0c\u4f7f\u7528\u5c55\u793a\u5982\u56fe\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/03/30136107.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n6\u3001[OS.js](https://hellogithub.com/periodical/statistics/click?target=https://github.com/os-js/OS.js)\uff1aJavaScript \u5199\u7684\u57fa\u4e8e\u6d4f\u89c8\u5668\u4e0a\u7684\u684c\u9762\u64cd\u4f5c\u7cfb\u7edf\u3002[\u5728\u7ebf\u6f14\u793a](https://demo.os-js.org/)\uff0c\u4f7f\u7528\u5c55\u793a\u5982\u56fe\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/03/14473933.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Python \u9879\u76ee\n7\u3001[KindleEar](https://hellogithub.com/periodical/statistics/click?target=https://github.com/cdhigh/KindleEar)\uff1a\u8fd9\u662f\u4e00\u4e2a\u8fd0\u884c\u5728 Google App Engine(GAE) \u4e0a\u7684 Kindle \u4e2a\u4eba\u63a8\u9001\u670d\u52a1\u5e94\u7528\uff0c\u751f\u6210\u6392\u7248\u7cbe\u7f8e\u7684\u6742\u5fd7\u6a21\u5f0f `mobi/epub` \u683c\u5f0f\u81ea\u52a8\u6bcf\u5929\u63a8\u9001\u81f3\u60a8\u7684 Kindle \u6216\u5176\u4ed6\u90ae\u7bb1\u3002\n\n\n8\u3001[walle-web](https://hellogithub.com/periodical/statistics/click?target=https://github.com/meolu/walle-web)\uff1aWalle\uff08\u74e6\u529b\uff09 \u4e00\u4e2a Web \u90e8\u7f72\u7cfb\u7edf\u5de5\u5177\uff0c\u53ef\u80fd\u4e5f\u662f\u4e2a\u6301\u7eed\u53d1\u5e03\u5de5\u5177\uff0c\u914d\u7f6e\u7b80\u5355\u3001\u529f\u80fd\u5b8c\u5584\u3001\u754c\u9762\u6d41\u7545\u3001\u5f00\u7bb1\u5373\u7528\uff01\u652f\u6301 git\u3001svn \u7248\u672c\u7ba1\u7406\uff0c\u652f\u6301\u5404\u79cd Web \u4ee3\u7801\u53d1\u5e03\uff0c\u9759\u6001\u7684 HTML\uff0c\u52a8\u6001 PHP\uff0c\u9700\u8981\u7f16\u8bd1\u7684 Java \u7b49\u3002[\u4e2d\u6587\u4ecb\u7ecd](https://github.com/meolu/walle-web/blob/master/docs/README-zh.md)\uff0c\u4f7f\u7528\u5c55\u793a\u5982\u56fe\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/03/42289146.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5176\u5b83\n9\u3001[css-creating](https://hellogithub.com/periodical/statistics/click?target=https://github.com/cssdream/css-creating)\uff1aCSS \u521b\u4f5c\u6307\u5357\n\n\n\n\n<p align=\"center\">\n    <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub02.md\">\u300e\u4e0a\u4e00\u671f\u300f</a> | <a href='https://github.com/521xueweihan/HelloGitHub/issues/899'>\u53cd\u9988\u548c\u5efa\u8bae</a> | <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub04.md\">\u300e\u4e0b\u4e00\u671f\u300f</a>\n</p>\n\n---\n<p align=\"center\">\n    \ud83d\udc49 <a href='https://hellogithub.com/periodical'>\u6765\uff01\u63a8\u8350\u5f00\u6e90\u9879\u76ee</a> \ud83d\udc48<br>\n    \u5fae\u4fe1\u4e2d\u641c\uff1a<strong>HelloGitHub</strong> \u5173\u6ce8\u516c\u4f17\u53f7<br>\n    \u4e0d\u4ec5\u80fd\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\uff0c\u8fd8\u6709\u56de\u9988\u7c89\u4e1d\u7684\u6d3b\u52a8<br>\n    \u5982\u679c\u6587\u4e2d\u7684\u56fe\u5237\u4e0d\u51fa\u6765\uff0c\u53ef\u4ee5\u70b9\u51fb <a href='https://hellogithub.com/periodical/volume/03'>\u8fd9\u91cc</a>\u3002\n</p>\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "content/HelloGitHub04.md", "size": 8329, "license": "NOASSERTION", "content_sha": "c639e0546e2a863f167f02ebc0eced1932c3dc3f", "findings": [], "content": "# \u300aHelloGitHub\u300b\u7b2c 04 \u671f\n> \u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c**HelloGitHub** \u8ba9\u4f60\u5bf9\u5f00\u6e90\u611f\u5174\u8da3\uff01\n<p align=\"center\">\n    <img src='https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg' style=\"max-width:100%;\"></img>\n</p>\n\n## \u76ee\u5f55\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 **\u300c\u76ee\u5f55\u300d** \u56fe\u6807\u6253\u5f00\u76ee\u5f55\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n![](https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png)\n\n**Tips**\uff1a\u5982\u679c\u9047\u5230\u56fe\u7247\u5237\u4e0d\u51fa\u6765\u7684\u60c5\u51b5\uff0c[\u70b9\u51fb](https://hellogithub.com/periodical/volume/04) \u6362\u4e00\u79cd\u6d4f\u89c8\u65b9\u5f0f\u3002\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\" style=\"max-width:30%;\"></img><br>\n\u5173\u6ce8\u300cHelloGitHub\u300d\u516c\u4f17\u53f7\uff0c\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\n</p>\n\n## \u5185\u5bb9\n> **\u4ee5\u4e0b\u4e3a\u672c\u671f\u5185\u5bb9**\uff5c\u6bcf\u4e2a\u6708 **28** \u53f7\u66f4\u65b0\n\n### Java \u9879\u76ee\n1\u3001[cachecloud](https://hellogithub.com/periodical/statistics/click?target=https://github.com/sohutv/cachecloud)\uff1a\u641c\u72d0\u89c6\u9891\u5f00\u6e90\u7684 CacheCloud \u9879\u76ee\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a Redis \u4e91\u7ba1\u7406\u5e73\u53f0\uff0c\u529f\u80fd\u5f3a\u5927\uff0c\u6559\u7a0b\u8be6\u7ec6\uff08\u6709\u89c6\u9891\u6559\u7a0b\uff09\uff0c\u6587\u6863\u9f50\u5168\uff0c**\u4f01\u4e1a\u7ea7\u5f00\u6e90\u9879\u76ee**\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/04/50406544.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### JavaScript \u9879\u76ee\n2\u3001[zhihudaily-vue](https://hellogithub.com/periodical/statistics/click?target=https://github.com/yatessss/zhihudaily-vue)\uff1a\u7528 Vue.js \u5199\u7684\u77e5\u4e4e\u65e5\u62a5\u624b\u673a Web \u7248\uff0c\u9700\u6253\u5f00 chrome \u6d4f\u89c8\u5668\u7684\u624b\u673a\u6a21\u62df\u529f\u80fd\uff0c\u6765\u83b7\u5f97\u6bd4\u8f83\u597d\u7684\u6d4f\u89c8\u6548\u679c\u3002\u8bbf\u95ee\u5c55\u793a\u56fe\u5982\u4e0b\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/04/61360359.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n3\u3001[zingtouch](https://hellogithub.com/periodical/statistics/click?target=https://github.com/zingchart/zingtouch)\uff1a\u652f\u6301\u79fb\u52a8\u7aef\u5404\u79cd\u89e6\u6478\u52a8\u4f5c\u5305\u542b\uff1a\u8f6c\u52a8\u3001\u6325\u52a8\u3001\u6ed1\u52a8\u7b49\u52a8\u4f5c\u7684\u5e93\uff0c[\u5b98\u65b9\u7f51\u7ad9](https://zingchart.github.io/zingtouch/)\uff0c\u5c55\u793a\u56fe\u5982\u4e0b\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/04/53977537.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Python \u9879\u76ee\n4\u3001[flask-admin](https://hellogithub.com/periodical/statistics/click?target=https://github.com/pallets-eco/flask-admin)\uff1a\u6211\u5de5\u4f5c\u4e2d\u9700\u8981\u5199\u4e00\u4e2a\u5fae\u578b\u7684\u7ba1\u7406\u7cfb\u7edf\uff0c\u7528\u7684\u5c31\u662f\u8fd9\u4e2a\u6846\u67b6\u3002\u7b80\u76f4\u5feb\u9910\u578b\uff0c\u9875\u9762\u90fd\u5199\u597d\u4e86\uff0c\u53ea\u8981\u8bbe\u7f6e\u597d\u76f8\u5173\u914d\u7f6e\u5c31\u53ef\u4ee5\u8dd1\u8d77\u6765\u4e86\u3002\u552f\u4e00\u7f3a\u70b9\u5c31\u662f\u6587\u6863\u4e2d\u7684\u4f8b\u5b50\u5c11\uff0c\u5f00\u53d1\u4e00\u4e9b\u7279\u5b9a\u7684\u9700\u6c42\u9700\u8981\u81ea\u5df1\u770b\u6e90\u7801\uff0c\u624d\u80fd\u77e5\u9053\u5982\u4f55\u6539\u3002[\u6587\u6863](https://flask-admin.readthedocs.io/en/latest/)\uff0c\u4e0b\u9762\u662f\u6211\u8dd1\u8d77\u6765\u4e4b\u540e\u7684\u6837\u5b50\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/04/3758878.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n5\u3001[python-guide](https://hellogithub.com/periodical/statistics/click?target=https://github.com/realpython/python-guide)\uff1aRequests \u5e93\u7684\u4f5c\u8005\u2014\u2014kennethreitz\uff0c\u5199\u7684 Python \u5165\u95e8\u6559\u7a0b\u3002\u4e0d\u5355\u5355\u662f\u8bed\u6cd5\u5c42\u9762\u7684\uff0c\u6db5\u76d6\u9879\u76ee\u7ed3\u6784\u3001\u4ee3\u7801\u98ce\u683c\uff0c\u8fdb\u9636\u3001\u5de5\u5177\u7b49\u65b9\u65b9\u9762\u9762\u3002\u867d\u7136\u662f**\u82f1\u6587\u7248**([\u4e2d\u6587\u7ffb\u8bd1\u7248](http://pythonguidecn.readthedocs.io/zh/latest/))\uff0c\u4f46\u6211\u8fd9\u4e2a\u82f1\u8bed\u6e23\u90fd\u80fd\u770b\u61c2\uff0c\u4f60\u80af\u5b9a\u4e5f\u53ef\u4ee5\uff0c\u5feb\u53bb\u770b\u770b\u5427\uff0c\u5f00\u5377\u6709\u76ca\u3002[\u5728\u7ebf\u9605\u8bfb](http://docs.python-guide.org/en/latest/)\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/04/1481305.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n6\u3001[python-sdk](https://hellogithub.com/periodical/statistics/click?target=https://github.com/qiniu/python-sdk)\uff1a\u4e03\u725b\u4e91\u5b58\u50a8 SDK\u3002\u6211\u81ea\u5df1\u5728\u7528\u4ed6\u5bb6\u7684\u670d\u52a1\uff0c\u4e0a\u624b\u7b80\u5355\u3001\u6709\u514d\u8d39\u989d\u5ea6\uff0c\u53ef\u4ee5\u7528\u6765\u505a\u2018\u56fe\u5e8a\u2019\uff0c\u540c\u65f6\uff0c\u6709\u4e86\u8fd9\u4e2a SDK \u53ef\u4ee5\u5199\u4e00\u4e9b\u597d\u7528\u7684\u5c0f\u5de5\u5177\u3002**\u6ce8\u610f**\uff1a\u56fe\u5e8a\u4e0d\u80fd\u968f\u4fbf\u7528\uff0c\u6211\u66fe\u7ecf\u5c31\u7528\u8d85\u4e86\uff0c\u8d26\u6237\u7684\u94b1\u80fd\u6263\u6210**\u8d1f\u6570**\uff01\n\n\n### \u5176\u5b83\n7\u3001[AndroidInterview-Q-A](https://hellogithub.com/periodical/statistics/click?target=https://github.com/JackyAndroid/AndroidInterview-Q-A)\uff1a\u8fd9\u4e2a\u9879\u76ee\u4e3b\u8981\u662f\u56fd\u5185\u4e00\u7ebf\u4e92\u8054\u7f51\u516c\u53f8\u7684 Java \u548c Android \u65b9\u9762\u7684\u5185\u90e8\u9762\u8bd5\u9898\u3002\n\n\n8\u3001[awesome-mac](https://hellogithub.com/periodical/statistics/click?target=https://github.com/jaywcjlove/awesome-mac)\uff1a\u6392\u7248\u76f8\u5f53\u597d\u7684\u4e00\u4e2a awesome \u7cfb\u5217\u6587\u7ae0\uff0c\u6587\u4e2d\u4ecb\u7ecd\u4e86\u5f88\u591a Mac \u4e0a\u597d\u7528\u7684\u5de5\u5177\u3002\n\n\n9\u3001[Front-end-Web-Development-Interview-Question](https://hellogithub.com/periodical/statistics/click?target=https://github.com/paddingme/Front-end-Web-Development-Interview-Question)\uff1a\u524d\u7aef\u5f00\u53d1\u9762\u8bd5\u9898\u5927\u6536\u96c6\n\n\n10\u3001[interview](https://hellogithub.com/periodical/statistics/click?target=https://github.com/HIT-Alibaba/interview)\uff1a\u7b14\u8bd5\u9762\u8bd5\u77e5\u8bc6\u6574\u7406(\u6db5\u76d6\uff1aIOS\u3001Android\u3001\u8ba1\u7b97\u673a\u57fa\u7840)\uff0c[\u5728\u7ebf\u9605\u8bfb](https://hit-alibaba.github.io/interview/index.html)\n\n\n11\u3001[interview_python](https://hellogithub.com/periodical/statistics/click?target=https://github.com/taizilongxu/interview_python)\uff1a\u5173\u4e8e Python \u7684\u9762\u8bd5\u9898\n\n\n12\u3001[neural-networks-and-deep-learning](https://hellogithub.com/periodical/statistics/click?target=https://github.com/mnielsen/neural-networks-and-deep-learning)\uff1a\u300a\u795e\u7ecf\u7f51\u7edc\u4e0e\u6df1\u5ea6\u5b66\u4e60\u300b\u76f8\u5173\u4ee3\u7801 Python \u5b9e\u73b0\uff0c[\u795e\u7ecf\u7f51\u7edc\u4e0e\u6df1\u5ea6\u5b66\u4e60\uff0d\u4e2d\u6587\u5728\u7ebf\u9605\u8bfb](https://tigerneil.gitbooks.io/neural-networks-and-deep-learning-zh/content/chapter1.html)\uff0c\u8be5\u4e66\u4e2d\u7684\u76f8\u5173\u7406\u8bba\u7684 Python \u4ee3\u7801\u5b9e\u73b0\n\n\n13\u3001[PyZh](https://hellogithub.com/periodical/statistics/click?target=https://github.com/MrKiven/PyZh)\uff1aPython \u7ecf\u5178\u7684\u6280\u672f\u6587\u7ae0\u7684\u7ffb\u8bd1\u548c\u6536\u96c6\uff0c[\u5728\u7ebf\u9605\u8bfb](http://pyzh.readthedocs.io/en/latest/)\n\n\n\n\n<p align=\"center\">\n    <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub03.md\">\u300e\u4e0a\u4e00\u671f\u300f</a> | <a href='https://github.com/521xueweihan/HelloGitHub/issues/899'>\u53cd\u9988\u548c\u5efa\u8bae</a> | <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub05.md\">\u300e\u4e0b\u4e00\u671f\u300f</a>\n</p>\n\n---\n<p align=\"center\">\n    \ud83d\udc49 <a href='https://hellogithub.com/periodical'>\u6765\uff01\u63a8\u8350\u5f00\u6e90\u9879\u76ee</a> \ud83d\udc48<br>\n    \u5fae\u4fe1\u4e2d\u641c\uff1a<strong>HelloGitHub</strong> \u5173\u6ce8\u516c\u4f17\u53f7<br>\n    \u4e0d\u4ec5\u80fd\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\uff0c\u8fd8\u6709\u56de\u9988\u7c89\u4e1d\u7684\u6d3b\u52a8<br>\n    \u5982\u679c\u6587\u4e2d\u7684\u56fe\u5237\u4e0d\u51fa\u6765\uff0c\u53ef\u4ee5\u70b9\u51fb <a href='https://hellogithub.com/periodical/volume/04'>\u8fd9\u91cc</a>\u3002\n</p>\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "content/HelloGitHub05.md", "size": 8947, "license": "NOASSERTION", "content_sha": "f7ddb4a4018b5fc91c70d01ecfbdc1a5947c63b0", "findings": [], "content": "# \u300aHelloGitHub\u300b\u7b2c 05 \u671f\n> \u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c**HelloGitHub** \u8ba9\u4f60\u5bf9\u5f00\u6e90\u611f\u5174\u8da3\uff01\n<p align=\"center\">\n    <img src='https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg' style=\"max-width:100%;\"></img>\n</p>\n\n## \u76ee\u5f55\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 **\u300c\u76ee\u5f55\u300d** \u56fe\u6807\u6253\u5f00\u76ee\u5f55\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n![](https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png)\n\n**Tips**\uff1a\u5982\u679c\u9047\u5230\u56fe\u7247\u5237\u4e0d\u51fa\u6765\u7684\u60c5\u51b5\uff0c[\u70b9\u51fb](https://hellogithub.com/periodical/volume/05) \u6362\u4e00\u79cd\u6d4f\u89c8\u65b9\u5f0f\u3002\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\" style=\"max-width:30%;\"></img><br>\n\u5173\u6ce8\u300cHelloGitHub\u300d\u516c\u4f17\u53f7\uff0c\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\n</p>\n\n## \u5185\u5bb9\n> **\u4ee5\u4e0b\u4e3a\u672c\u671f\u5185\u5bb9**\uff5c\u6bcf\u4e2a\u6708 **28** \u53f7\u66f4\u65b0\n\n### C# \u9879\u76ee\n1\u3001[WeiXinMPSDK](https://hellogithub.com/periodical/statistics/click?target=https://github.com/JeffreySu/WeiXinMPSDK)\uff1a\u5fae\u4fe1\u516c\u4f17\u5e73\u53f0 SDK\uff0c\u652f\u6301 .NET Framework \u53ca .NET Core\u3002\u5df2\u652f\u6301\u5fae\u4fe1\u516c\u4f17\u53f7\u3001\u4f01\u4e1a\u53f7\u3001\u5f00\u653e\u5e73\u53f0\u3001\u5fae\u4fe1\u652f\u4ed8\u3001JSSDK\u3002\u6b64\u9879\u76ee\u5f00\u6e90\u3001\u514d\u8d39\u3001\u6301\u7eed\u7ef4\u62a4\u3002\n\n\n### Go \u9879\u76ee\n2\u3001[gh-ost](https://hellogithub.com/periodical/statistics/click?target=https://github.com/github/gh-ost)\uff1aGitHub \u5f00\u6e90\u7684\u5728\u7ebf\u4fee\u6539\u8868\u7ed3\u6784\u5de5\u5177\u3002\u76ee\u7684\u662f\u89e3\u51b3\u4e00\u4e2a\u7ecf\u5e38\u78b0\u5230\u7684\u95ee\u9898\uff1a\u4e0d\u65ad\u53d8\u5316\u7684\u4ea7\u54c1\u9700\u6c42\u4f1a\u4e0d\u65ad\u8981\u6c42\u66f4\u6539 MySQL \u8868\u7ed3\u6784\u3002gh-ost \u901a\u8fc7\u4e00\u79cd\u5f71\u54cd\u5c0f\u3001\u53ef\u63a7\u5236\u3001\u53ef\u5ba1\u8ba1\u3001\u64cd\u4f5c\u7b80\u5355\u800c\u4e14\u5b89\u5168\u7684\u65b9\u5f0f\u6765\u6539\u53d8\u7ebf\u4e0a\u8868\u7ed3\u6784\u3002[\u4e2d\u6587\u7b80\u4ecb](http://www.infoq.com/cn/news/2016/08/GitHub-MySQL-gh-ost?utm_campaign=infoq_content&utm_source=infoq&utm_medium=feed&utm_term=global)\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/05/54378638.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n3\u3001[gogs](https://hellogithub.com/periodical/statistics/click?target=https://github.com/gogs/gogs)\uff1a\u7528 Go \u5199\u7684\u4e00\u6b3e\u6781\u6613\u642d\u5efa\u7684\u81ea\u52a9 Git \u670d\u52a1\uff0c\u652f\u6301\u6240\u6709\u5e73\u53f0\u3002\u5c31\u50cf GitLab \u4e00\u6837\u7684\u670d\u52a1\uff0c\u4f46\u662f GitLab \u662f\u57fa\u4e8e ruby \u8bed\u8a00\u7684\u3002\u53e6\u5916\uff1a\u5b8c\u5584\u7684\u4e2d\u6587\u6587\u6863\u3001\u652f\u6301 Go \u8bed\u8a00\u652f\u6301\u7684\u6240\u6709\u5e73\u53f0\uff0c\u5305\u62ec Linux\u3001Mac OS X\u3001Windows \u4ee5\u53ca ARM \u5e73\u53f0\u3002[\u4e2d\u6587\u4ecb\u7ecd](https://github.com/gogits/gogs/blob/master/README_ZH.md)\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/05/16752620.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### JavaScript \u9879\u76ee\n4\u3001[share.js](https://hellogithub.com/periodical/statistics/click?target=https://github.com/overtrue/share.js)\uff1a\u4e00\u952e\u5206\u4eab\u5230\u5fae\u535a\u3001QQ \u7a7a\u95f4\u3001QQ \u597d\u53cb\u3001\u5fae\u4fe1\u3001\u817e\u8baf\u5fae\u535a\u3001\u8c46\u74e3\u7b49\u793e\u4ea4\u7f51\u7ad9\u7684 JavaScript \u9879\u76ee\u3002[\u5728\u7ebf\u6f14\u793a](http://overtrue.me/share.js/)\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/05/25138401.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### PHP \u9879\u76ee\n5\u3001[pinyin](https://hellogithub.com/periodical/statistics/click?target=https://github.com/overtrue/pinyin)\uff1a\u57fa\u4e8e CC-CEDICT \u8bcd\u5178\u7684\u4e2d\u6587\u8f6c\u62fc\u97f3\u5de5\u5177\uff0c\u66f4\u51c6\u786e\u7684\u652f\u6301\u591a\u97f3\u5b57\u7684\u6c49\u5b57\u8f6c\u62fc\u97f3\u89e3\u51b3\u65b9\u6848\uff0c\u793a\u4f8b\u4ee3\u7801\uff1a\n```php\nuse OvertruePinyinPinyin;\n\n$pinyin = new Pinyin();\n\n$pinyin->convert('\u5e26\u7740\u5e0c\u671b\u53bb\u65c5\u884c\uff0c\u6bd4\u5230\u8fbe\u7ec8\u70b9\u66f4\u7f8e\u597d');\n// [\"dai\", \"zhe\", \"xi\", \"wang\", \"qu\", \"lv\", \"xing\", \"bi\", \"dao\", \"da\", \"zhong\", \"dian\", \"geng\", \"mei\", \"hao\"]\n\n$pinyin->convert('\u5e26\u7740\u5e0c\u671b\u53bb\u65c5\u884c\uff0c\u6bd4\u5230\u8fbe\u7ec8\u70b9\u66f4\u7f8e\u597d', PINYIN_UNICODE);\n// [\"d\u00e0i\",\"zhe\",\"x\u012b\",\"w\u00e0ng\",\"q\u00f9\",\"l\u01da\",\"x\u00edng\",\"b\u01d0\",\"d\u00e0o\",\"d\u00e1\",\"zh\u014dng\",\"di\u01cen\",\"g\u00e8ng\",\"m\u011bi\",\"h\u01ceo\"]\n\n$pinyin->convert('\u5e26\u7740\u5e0c\u671b\u53bb\u65c5\u884c\uff0c\u6bd4\u5230\u8fbe\u7ec8\u70b9\u66f4\u7f8e\u597d', PINYIN_ASCII);\n//[\"dai4\",\"zhe\",\"xi1\",\"wang4\",\"qu4\",\"lv3\",\"xing2\",\"bi3\",\"dao4\",\"da2\",\"zhong1\",\"dian3\",\"geng4\",\"mei3\",\"hao3\"]\n```\n\n\n### Python \u9879\u76ee\n6\u3001[flaskbb](https://hellogithub.com/periodical/statistics/click?target=https://github.com/flaskbb/flaskbb)\uff1a\u57fa\u4e8e Flask \u6846\u67b6\u505a\u7684\u8bba\u575b\uff0c\u529f\u80fd\u6709\u9650\uff0c\u8f7b\u91cf\u7ea7\u7684\u8bba\u575b\u5e94\u7528[\u5728\u7ebf\u6587\u6863](https://flaskbb.readthedocs.io/en/latest/index.html)\uff0c\u53ef\u4ee5\u5728\u8fd9\u4e2a\u9879\u76ee\u4e0a\u8fdb\u884c\u4e8c\u6b21\u5f00\u53d1\uff0c\u5b9e\u73b0\u66f4\u52a0\u590d\u6742\u7684\u529f\u80fd\u3002[\u5728\u7ebf\u9884\u89c8](https://forums.flaskbb.org)\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/05/12751570.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n7\u3001[fuck-login](https://hellogithub.com/periodical/statistics/click?target=https://github.com/xchaoinfo/fuck-login)\uff1a\u6a21\u62df\u767b\u5f55\u4e00\u4e9b\u77e5\u540d\u7684\u7f51\u7ad9\uff0c\u4e3a\u4e86\u65b9\u4fbf\u722c\u53d6\u9700\u8981\u767b\u5f55\u7684\u7f51\u7ad9\u3002**\u6ce8\u610f**\uff1a\u63a7\u5236\u722c\u866b\u7684\u722c\u53d6\u9891\u7387\uff01\n\n\n8\u3001[superset](https://hellogithub.com/periodical/statistics/click?target=https://github.com/apache/superset)\uff1a\u4f01\u4e1a\u7ea7\u7684\u6570\u636e\u63a2\u7d22\u3001\u5c55\u793a\u5e73\u53f0\u3002\u529f\u80fd\u5f88\u5f3a\u5927\uff0c\u53ef\u4ee5\u7528\u6765\u505a\u6570\u636e\u5206\u6790\u3001\u5c55\u793a\u3002\u5982\u4e0b\u56fe\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/05/39464018.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5176\u5b83\n9\u3001[bytesize-icons](https://hellogithub.com/periodical/statistics/click?target=https://github.com/danklammer/bytesize-icons)\uff1a\u6781\u5c0f\u3001\u6781\u7b80\u7684 SVG \u56fe\u6807\u96c6\u5408\uff0c[\u5728\u7ebf\u6f14\u793a](http://danklammer.com/articles/svg-stroke-ftw/#give-it-a-spin)\u3002\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/05/39126489.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n10\u3001[gitignore](https://hellogithub.com/periodical/statistics/click?target=https://github.com/github/gitignore)\uff1a\u5404\u79cd `gitignore` \u6a21\u7248\uff0c\u7279\u522b\u5168\uff0c\u5e94\u8be5\u80fd\u627e\u5230\u4f60\u9700\u8981\u7684\u3002[\u4ec0\u4e48\u662f gitignore \u6587\u4ef6](http://gitbook.liuhui998.com/4_1.html)\u3002\n\n\n11\u3001[security-guide-for-developers](https://hellogithub.com/periodical/statistics/click?target=https://github.com/FallibleInc/security-guide-for-developers)\uff1a\u8fd9\u662f\u4e00\u4e2a\u5b9e\u9645\u5de5\u4f5c\u4e2d\u4f1a\u7528\u5230\u7684\u5b89\u5168 checklist\u3002\u4f5c\u4e3a\u4e00\u4e2a real world web developer \u4f60\u5e94\u8be5\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u4e0d\u65ad\u5730\u8c28\u614e\u4f7f\u7528\u8fd9\u5957\u5217\u8868\uff0c\u51cf\u5c11\u5b89\u5168\u9690\u60a3\u3002[\u4e2d\u6587\u7ffb\u8bd1\u7248](https://github.com/FallibleInc/security-guide-for-developers/blob/master/README-zh.md)\n\n\n12\u3001[Solve-App-Store-Review-Problem](https://hellogithub.com/periodical/statistics/click?target=https://github.com/zhichengfalv/Solve-App-Store-Review-Problem)\uff1aApp Store \u5ba1\u6838\u672a\u901a\u8fc7\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\n\n\n\n<p align=\"center\">\n    <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub04.md\">\u300e\u4e0a\u4e00\u671f\u300f</a> | <a href='https://github.com/521xueweihan/HelloGitHub/issues/899'>\u53cd\u9988\u548c\u5efa\u8bae</a> | <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub06.md\">\u300e\u4e0b\u4e00\u671f\u300f</a>\n</p>\n\n---\n<p align=\"center\">\n    \ud83d\udc49 <a href='https://hellogithub.com/periodical'>\u6765\uff01\u63a8\u8350\u5f00\u6e90\u9879\u76ee</a> \ud83d\udc48<br>\n    \u5fae\u4fe1\u4e2d\u641c\uff1a<strong>HelloGitHub</strong> \u5173\u6ce8\u516c\u4f17\u53f7<br>\n    \u4e0d\u4ec5\u80fd\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\uff0c\u8fd8\u6709\u56de\u9988\u7c89\u4e1d\u7684\u6d3b\u52a8<br>\n    \u5982\u679c\u6587\u4e2d\u7684\u56fe\u5237\u4e0d\u51fa\u6765\uff0c\u53ef\u4ee5\u70b9\u51fb <a href='https://hellogithub.com/periodical/volume/05'>\u8fd9\u91cc</a>\u3002\n</p>\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "content/HelloGitHub06.md", "size": 8849, "license": "NOASSERTION", "content_sha": "e0e053585c6e76672c5ba44ca144a263fbc09670", "findings": [], "content": "# \u300aHelloGitHub\u300b\u7b2c 06 \u671f\n> \u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c**HelloGitHub** \u8ba9\u4f60\u5bf9\u5f00\u6e90\u611f\u5174\u8da3\uff01\n<p align=\"center\">\n    <img src='https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg' style=\"max-width:100%;\"></img>\n</p>\n\n## \u76ee\u5f55\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 **\u300c\u76ee\u5f55\u300d** \u56fe\u6807\u6253\u5f00\u76ee\u5f55\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n![](https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png)\n\n**Tips**\uff1a\u5982\u679c\u9047\u5230\u56fe\u7247\u5237\u4e0d\u51fa\u6765\u7684\u60c5\u51b5\uff0c[\u70b9\u51fb](https://hellogithub.com/periodical/volume/06) \u6362\u4e00\u79cd\u6d4f\u89c8\u65b9\u5f0f\u3002\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\" style=\"max-width:30%;\"></img><br>\n\u5173\u6ce8\u300cHelloGitHub\u300d\u516c\u4f17\u53f7\uff0c\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\n</p>\n\n## \u5185\u5bb9\n> **\u4ee5\u4e0b\u4e3a\u672c\u671f\u5185\u5bb9**\uff5c\u6bcf\u4e2a\u6708 **28** \u53f7\u66f4\u65b0\n\n### C# \u9879\u76ee\n1\u3001[Cowboy](https://hellogithub.com/periodical/statistics/click?target=https://github.com/gaochundong/Cowboy)\uff1a\u4e00\u4e2a\u57fa\u4e8e .NET/C# \u5b9e\u73b0\u7684\u5f00\u6e90 WebSocket \u7f51\u7edc\u5e93\u3002[\u8be6\u7ec6\u4ecb\u7ecd](http://www.cnblogs.com/gaochundong/p/cowboy_websockets.html)\n\n\n### Go \u9879\u76ee\n2\u3001[wukong](https://hellogithub.com/periodical/statistics/click?target=https://github.com/huichen/wukong)\uff1a\u609f\u7a7a\u5f15\u64ce\u662f\u4e00\u4e2a\u9ad8\u5ea6\u53ef\u5b9a\u5236\u7684\u5168\u6587\u641c\u7d22\u5f15\u64ce\uff0c[\u4e3a\u4ec0\u4e48\u8981\u6709\u609f\u7a7a\u5f15\u64ce](https://github.com/huichen/wukong/blob/master/docs/why_wukong.md)\uff0c[\u5165\u95e8\u6559\u7a0b](https://github.com/huichen/wukong/blob/master/docs/codelab.md)\uff0c\u8fd9\u4e2a\u9879\u76ee\u7684\u641c\u7d22\u5f15\u64ce\u539f\u7406\u5982\u4e0b\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/06/11994902.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Java \u9879\u76ee\n3\u3001[disconf](https://hellogithub.com/periodical/statistics/click?target=https://github.com/knightliao/disconf)\uff1a\u4e00\u4e2a\u4f01\u4e1a\u7ea7\u7684\u5206\u5e03\u5f0f\u914d\u7f6e\u7ba1\u7406\u5e73\u53f0\uff0c\u4e13\u6ce8\u4e8e\u5404\u79cd\u5206\u5e03\u5f0f\u7cfb\u7edf\u914d\u7f6e\u7ba1\u7406\u7684\u901a\u7528\u5e73\u53f0\uff0c\u63d0\u4f9b\u7edf\u4e00\u7684\u914d\u7f6e\u7ba1\u7406\u670d\u52a1\u3002\u6838\u5fc3\u76ee\u6807\uff1a\u4e00\u4e2a jar \u5305\uff0c\u5230\u5904\u8fd0\u884c\u3002[\u5728\u7ebf\u6587\u6863](http://disconf.readthedocs.io/zh_CN/latest/index.html)\n\n\n4\u3001[moco](https://hellogithub.com/periodical/statistics/click?target=https://github.com/dreamhead/moco)\uff1a\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u9700\u8981\u4f9d\u8d56\u4e00\u4e9b\u63a5\u53e3\uff0c\u8fd9\u4e9b\u63a5\u53e3\u8981\u4e48\u662f\u642d\u5efa\u73af\u5883\u56f0\u96be\uff0c\u8981\u4e48\u662f\u8fd8\u6ca1\u6709\u5b9e\u73b0\uff0c\u8981\u4e48\u662f\u4ea4\u4e92\u6bd4\u8f83\u590d\u6742\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528 mock server \u6765 mock\uff08\u6a21\u62df\uff09\u8fd9\u4e9b\u63a5\u53e3\uff0c\u4ee5\u4fbf\u5f00\u53d1\u548c\u6d4b\u8bd5\u80fd\u591f\u6b63\u5e38\u8fdb\u884c\u3002\u5feb\u901f\u4e0a\u624b\u6b65\u9aa4\uff1a\n```\n1. \u4e0b\u8f7d Moco\uff1ahttps://repo1.maven.org/maven2/com/github/dreamhead/moco-runner/0.11.0/moco-runner-0.11.0-standalone.jar\n\n2. \u5199\u9700\u8981\u8fd4\u56de\u7684reponse\u6570\u636e\u683c\u5f0f\u5982\u4e0b\uff1a\n[\n  {\n    \"response\" :\n      {\n        \"text\" : \"Hello, Moco\"\n      }\n  }\n]\n(\u6587\u4ef6\u540d\uff1afoo.json)\n\n3.\u8fd0\u884c\njava -jar moco-runner-<version>-standalone.jar http -p 12306 -c foo.json\n\n4. \u8bbf\u95ee http://localhost:12306\uff0c\u4f60\u5c06\u4f1a\u770b\u5230 \u201cHello, Moco\u201d\n```\n\n\n### JavaScript \u9879\u76ee\n5\u3001[nodeppt](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ksky521/nodeppt)\uff1a\u8fd9\u53ef\u80fd\u662f\u8fc4\u4eca\u4e3a\u6b62\u6700\u597d\u7684\u7f51\u9875\u7248\u6f14\u793a\u5e93\uff0c[\u5728\u7ebf\u6f14\u793a](http://qdemo.sinaapp.com/)\n\n\n6\u3001[vue-sui-demo](https://hellogithub.com/periodical/statistics/click?target=https://github.com/eteplus/vue-sui-demo)\uff1a\u8fd9\u662f\u4e00\u4e2a\u7528 Vue \u548c SUI-Mobile \u5199\u7684\u79fb\u52a8\u7aef Demo\uff0c\u53ef\u4ee5\u7528\u6765\u5b66\u4e60 Vue.js\u3002[\u9879\u76ee\u7ebf\u4e0a\u9884\u89c8](https://eteplus.github.io/vue-sui-demo/)\uff0c\u6548\u679c\u56fe\u5982\u4e0b\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/06/50753708.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Python \u9879\u76ee\n7\u3001[amazing-qr](https://hellogithub.com/periodical/statistics/click?target=https://github.com/x-hw/amazing-qr)\uff1aPython \u5199\u7684\u751f\u6210\u52a8\u6001\u3001\u5f69\u8272\u3001\u5404\u5f0f\u5404\u6837\u7684\u4e8c\u7ef4\u7801\uff0c\u8be6\u7ec6\u7684[\u4e2d\u6587\u6587\u6863](https://github.com/sylnsfar/qrcode/blob/master/README-cn.md)\uff0c\u901a\u8fc7 `qrcode` \u751f\u6210\u7684\u4e8c\u7ef4\u7801\u6837\u5f0f\u5982\u4e0b\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/06/66557478.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n8\u3001[Young](https://hellogithub.com/periodical/statistics/click?target=https://github.com/shiyanhui/Young)\uff1a\u57fa\u4e8e Tornado \u6846\u67b6\u3001MongoDB \u6570\u636e\u5e93\uff0c\u5199\u7684\u529f\u80fd\u4e30\u5bcc\u7684\u793e\u533a\u9879\u76ee\u3002\u8be6\u7ec6\u7684[\u5b89\u88c5\u6b65\u9aa4](https://github.com/shiyanhui/Young/blob/master/README_CN.md)\uff0c\u9002\u5408\u5b66\u4e60\u5982\u4f55\u521b\u5efa\u793e\u533a\u7c7b Web App\u3002[\u5728\u7ebf\u9884\u89c8](http://beyoung.io/)\uff0c\u9879\u76ee\u8fd0\u884c\u6548\u679c\u56fe\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/06/67109930.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Swift \u9879\u76ee\n9\u3001[12306ForMac](https://hellogithub.com/periodical/statistics/click?target=https://github.com/fancymax/12306ForMac)\uff1a\u975e\u5b98\u65b9\u7684 12306 \u8d2d\u7968\uff0cMac OS \u5ba2\u6237\u7aef\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/06/50915433.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5176\u5b83\n10\u3001[Apollo-11](https://hellogithub.com/periodical/statistics/click?target=https://github.com/chrislgarry/Apollo-11)\uff1a\u963f\u6ce2\u7f57 11 \u53f7\u4ee3\u7801\uff0c[\u4e2d\u6587\u4ecb\u7ecd](https://github.com/chrislgarry/Apollo-11/blob/master/README.zh_cn.md)\n\n\n11\u3001[gvm](https://hellogithub.com/periodical/statistics/click?target=https://github.com/moovweb/gvm)\uff1aGo \u7248\u672c\u7ba1\u7406\u5de5\u5177\uff0c\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\uff0c\u65e0\u75db\u5207\u6362\u4e0d\u540c\u7684 Go \u7248\u672c\uff0c\u793a\u4f8b\u6307\u4ee4\uff1a\n```\n1. \u5b89\u88c5gvm\uff1abash < <(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)\n\n2. \u6839\u636e\u63d0\u793a\uff0c\u5728shell\u914d\u7f6e\u4e2d\u52a0\u5165\uff1asource /PATH/.gvm/scripts/gvm\n\n3. \u4ee5\u4e0b\u4e3a\u5e38\u7528\u547d\u4ee4\uff1a\ngvm install go1.4  \uff03 \u5b89\u88c5\u5236\u5b9a\u7248\u672c\u7684GO\ngvm use go1.4  \uff03 \u4f7f\u7528\u5236\u5b9a\u7248\u672c\u7684GO\n\n4. Mac\u4e0b\u5b89\u88c5Go\u65f6\u5982\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u5c31\u5b89\u88c5\u4f9d\u8d56\u7684\u5e93\uff1a\nxcode-select --install\nbrew update\nbrew install mercurial\n\n5. \u6211\u5728\u4f7f\u7528\u4e2d\u53d1\u73b0\u7684\u95ee\u9898\uff1a\n\u5b89\u88c5Go\u65f6\u6ca1\u6709\u8fdb\u5ea6\u6761\n```\n\n\n12\u3001[LearningNotes](https://hellogithub.com/periodical/statistics/click?target=https://github.com/francistao/LearningNotes)\uff1a\u5f88\u5168\u9762\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u504f\u5411 Android \u548c Java\n\n\n13\u3001[weapp-ide-crack](https://hellogithub.com/periodical/statistics/click?target=https://github.com/gavinkwoe/weapp-ide-crack)\uff1a\u3010\u5e94\u7528\u53f7\u3011IDE + \u7834\u89e3 + Demo\n\n\n\n\n<p align=\"center\">\n    <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub05.md\">\u300e\u4e0a\u4e00\u671f\u300f</a> | <a href='https://github.com/521xueweihan/HelloGitHub/issues/899'>\u53cd\u9988\u548c\u5efa\u8bae</a> | <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub07.md\">\u300e\u4e0b\u4e00\u671f\u300f</a>\n</p>\n\n---\n<p align=\"center\">\n    \ud83d\udc49 <a href='https://hellogithub.com/periodical'>\u6765\uff01\u63a8\u8350\u5f00\u6e90\u9879\u76ee</a> \ud83d\udc48<br>\n    \u5fae\u4fe1\u4e2d\u641c\uff1a<strong>HelloGitHub</strong> \u5173\u6ce8\u516c\u4f17\u53f7<br>\n    \u4e0d\u4ec5\u80fd\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\uff0c\u8fd8\u6709\u56de\u9988\u7c89\u4e1d\u7684\u6d3b\u52a8<br>\n    \u5982\u679c\u6587\u4e2d\u7684\u56fe\u5237\u4e0d\u51fa\u6765\uff0c\u53ef\u4ee5\u70b9\u51fb <a href='https://hellogithub.com/periodical/volume/06'>\u8fd9\u91cc</a>\u3002\n</p>\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "content/HelloGitHub07.md", "size": 10823, "license": "NOASSERTION", "content_sha": "0500207f4aa393c891b9f6ff8b2804e486b6d5d3", "findings": [], "content": "# \u300aHelloGitHub\u300b\u7b2c 07 \u671f\n> \u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c**HelloGitHub** \u8ba9\u4f60\u5bf9\u5f00\u6e90\u611f\u5174\u8da3\uff01\n<p align=\"center\">\n    <img src='https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg' style=\"max-width:100%;\"></img>\n</p>\n\n## \u76ee\u5f55\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 **\u300c\u76ee\u5f55\u300d** \u56fe\u6807\u6253\u5f00\u76ee\u5f55\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n![](https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png)\n\n**Tips**\uff1a\u5982\u679c\u9047\u5230\u56fe\u7247\u5237\u4e0d\u51fa\u6765\u7684\u60c5\u51b5\uff0c[\u70b9\u51fb](https://hellogithub.com/periodical/volume/07) \u6362\u4e00\u79cd\u6d4f\u89c8\u65b9\u5f0f\u3002\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\" style=\"max-width:30%;\"></img><br>\n\u5173\u6ce8\u300cHelloGitHub\u300d\u516c\u4f17\u53f7\uff0c\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\n</p>\n\n## \u5185\u5bb9\n> **\u4ee5\u4e0b\u4e3a\u672c\u671f\u5185\u5bb9**\uff5c\u6bcf\u4e2a\u6708 **28** \u53f7\u66f4\u65b0\n\n### C \u9879\u76ee\n1\u3001[BaiduPCS](https://hellogithub.com/periodical/statistics/click?target=https://github.com/GangZhuo/BaiduPCS)\uff1aC \u5199\u7684\u767e\u5ea6\u7f51\u76d8\u547d\u4ee4\u884c\u5de5\u5177\uff0c[\u5728\u7ebf\u6587\u6863](https://github.com/GangZhuo/BaiduPCS/wiki/BaiduPCS-\u57fa\u672c\u4f7f\u7528)\n\n\n### C# \u9879\u76ee\n2\u3001[MongoCola](https://hellogithub.com/periodical/statistics/click?target=https://github.com/magicdict/MongoCola)\uff1aMongoCola \u662f\u4e00\u4e2a\u5f00\u6e90\u7684 MongoDB \u7ba1\u7406\u5de5\u5177\u3002\u6301\u7eed\u5f00\u53d1\u3001\u7ef4\u62a4\u5df2\u7ecf\u6709**\u4e94\u5e74**\u4e86\uff0c[\u5f00\u53d1\u5386\u7a0b](http://www.cnblogs.com/TextEditor/p/5473190.html)\uff0c\u6548\u679c\u56fe\u5982\u4e0b\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/07/2518082.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### C++ \u9879\u76ee\n3\u3001[cpr](https://hellogithub.com/periodical/statistics/click?target=https://github.com/libcpr/cpr)\uff1aC++ \u7248 `Request for human`\uff0c[\u5728\u7ebf\u6587\u6863](https://whoshuu.github.io/cpr/)\uff0c\u793a\u4f8b\u4ee3\u7801\uff1a\n```C++\n#include <cpr/cpr.h>\n\nint main(int argc, char** argv) {\n    auto r = cpr::Get(cpr::Url{\"https://api.github.com/repos/whoshuu/cpr/contributors\"},\n                      cpr::Authentication{\"user\", \"pass\"},\n                      cpr::Parameters{{\"anon\", \"true\"}, {\"key\", \"value\"}});\n    r.status_code;                  // 200\n    r.header[\"content-type\"];       // application/json; charset=utf-8\n    r.text;                         // JSON text string\n}\n```\n\n\n### CSS \u9879\u76ee\n4\u3001[cssicon](https://hellogithub.com/periodical/statistics/click?target=https://github.com/wentin/cssicon)\uff1a\u7eaf CSS \u5b9e\u73b0\u7684 icon\n\n\n### Go \u9879\u76ee\n5\u3001[beego](https://hellogithub.com/periodical/statistics/click?target=https://github.com/beego/beego)\uff1a\u4e00\u4e2a\u4f7f\u7528 Go \u7684\u601d\u7ef4\u6765\u5e2e\u52a9\u60a8\u6784\u5efa\u5e76\u5f00\u53d1 Go \u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u6e90\u6846\u67b6\uff0c\u9f50\u5168\u7684\u6587\u6863\uff08\u4e2d\u6587\uff09\uff0c\u4e30\u5bcc\u7684\u4f7f\u7528\u6848\u4f8b\u3002[\u5b98\u7f51\u5730\u5740](https://beego.me)\n\n\n### JavaScript \u9879\u76ee\n6\u3001[clipboard.js](https://hellogithub.com/periodical/statistics/click?target=https://github.com/zenorocha/clipboard.js)\uff1a\u5b9e\u73b0\u4e86\u70b9\u51fb\u6587\u672c\u5185\u5bb9\u7684 JavaScript \u63d2\u4ef6\uff0c\u4f18\u70b9\uff1a\u6700\u65b0\u3001\u6781\u5c0f\u3001\u65e0\u4efb\u4f9d\u8d56\u3001\u4f7f\u7528\u7b80\u5355\u65b9\u4fbf\u3002[\u5728\u7ebf\u6587\u6863](https://clipboardjs.com)\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/07/42751014.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n7\u3001[nodeclub](https://hellogithub.com/periodical/statistics/click?target=https://github.com/cnodejs/nodeclub)\uff1aNodeclub \u662f\u4f7f\u7528 Node.js \u548c MongoDB \u5f00\u53d1\u7684\u793e\u533a\u7cfb\u7edf\uff0c[\u793e\u533a\u5730\u5740](https://cnodejs.org/)\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/07/3447593.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Objective-C \u9879\u76ee\n8\u3001[PYPhotoBrowser](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ko1o/PYPhotoBrowser)\uff1a\u9ad8\u4eff QQ\u3001\u5fae\u4fe1\u6548\u679c\u7684\u56fe\u7247\u6d4f\u89c8\u5668\uff08\u652f\u6301\u539f\u56fe\u548c\u7f29\u7565\u56fe\u3001\u591a\u79cd\u624b\u52bf\u3001CocoaPods\uff09\n\n\n### Python \u9879\u76ee\n9\u3001[cli](https://hellogithub.com/periodical/statistics/click?target=https://github.com/httpie/cli)\uff1a\u975e\u5e38\u597d\u7528\u7684\u547d\u4ee4\u884c HTTP \u5ba2\u6237\u7aef\uff0ccURL \u7684\u66ff\u4ee3\u8005\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u652f\u6301**\u9ad8\u4eae**\uff0c\u63d0\u9ad8\u4e86\u53ef\u8bfb\u6027\u3002\u7528\u4e8e\u8c03\u8bd5\u63a5\u53e3\u3001\u67e5\u770b\u670d\u52a1\u5668\u8fd4\u56de\u7684 HTTP \u534f\u8bae\u7684\u4fe1\u606f\u3002[\u5728\u7ebf\u6587\u6863](https://httpie.org/docs#examples)\uff0c\u4e0b\u9762\u7684\u662f cURL \u548c httpie \u7684\u8fd4\u56de\u7ed3\u679c\u5bf9\u6bd4\u56fe\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/07/3544424.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n10\u3001[fake-useragent](https://hellogithub.com/periodical/statistics/click?target=https://github.com/fake-useragent/fake-useragent)\uff1a\u4f2a\u88c5\u6d4f\u89c8\u5668\u8eab\u4efd\uff0c\u5e38\u7528\u4e8e\u722c\u866b\u3002\u8fd9\u4e2a\u9879\u76ee\u7684\u4ee3\u7801\u5f88\u5c11\uff0c\u53ef\u4ee5\u9605\u8bfb\u4e00\u4e0b\uff0c\u770b\u770b `ua.random` \u662f\u5982\u4f55\u8fd4\u56de\u968f\u673a\u7684\u6d4f\u89c8\u5668\u8eab\u4efd\u7684\ud83d\ude01\uff0c\u793a\u4f8b\u4ee3\u7801\uff1a\n```python\nfrom fake_useragent import UserAgent\nua = UserAgent()\n\nua.ie\n# Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US);\nua.msie\n# Mozilla/5.0 (compatible; MSIE 10.0; Macintosh; Intel Mac OS X 10_7_3; Trident/6.0)'\nua['Internet Explorer']\n# Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 3.3.69573; WOW64; en-US)\nua.opera\n# Opera/9.80 (X11; Linux i686; U; ru) Presto/2.8.131 Version/11.11\nua.chrome\n# Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.2 (KHTML, like Gecko) Chrome/22.0.1216.0 Safari/537.2'\nua.google\n# Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.13 (KHTML, like Gecko) Chrome/24.0.1290.1 Safari/537.13\nua['google chrome']\n# Mozilla/5.0 (X11; CrOS i686 2268.111.0) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11\nua.firefox\n# Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:16.0.1) Gecko/20121011 Firefox/16.0.1\nua.ff\n# Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:15.0) Gecko/20100101 Firefox/15.0.1\nua.safari\n# Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5355d Safari/8536.25\n\n# and the best one, random via real world browser usage statistic\nua.random\n```\n\n\n11\u3001[langid.py](https://hellogithub.com/periodical/statistics/click?target=https://github.com/saffsd/langid.py)\uff1a\u7528\u4e8e\u8bc6\u522b\u8f93\u5165\u6587\u672c\u6570\u636e\u6240\u5c5e\u7684\u8bed\u79cd\uff0c\u76ee\u524d\u652f\u6301 97 \u79cd\u8bed\u8a00\u8bc6\u522b\u3002\u793a\u4f8b\u4ee3\u7801\uff1a\n```python\nimport langid\ntext1 = \"I am a coder and love data mining\"\ntext2 = \"\u8bf7\u6ce8\u660e\u4f5c\u8005\u548c\u51fa\u5904\u5e76\u4fdd\u7559\u58f0\u660e\u548c\u8054\u7cfb\u65b9\u5f0f\"\n\nprint langid.classify(text1)\nprint langid.classify(text2)\n\n# ('en', 0.9999957874458753)\n# ('zh', 1.0)\n```\n\n\n### \u5176\u5b83\n12\u3001[coding-interview-university](https://hellogithub.com/periodical/statistics/click?target=https://github.com/jwasham/coding-interview-university)\uff1a\u4e00\u5957\u5b8c\u6574\u7684\u5b66\u4e60\u624b\u518c\u5e2e\u52a9\u81ea\u5df1\u51c6\u5907 Google \u7684\u9762\u8bd5\uff0c[\u4e2d\u6587\u7ffb\u8bd1\u7248](https://github.com/jwasham/coding-interview-university/blob/master/translations/README-cn.md)\n\n\n13\u3001[How-to-Make-a-Computer-Operating-System](https://hellogithub.com/periodical/statistics/click?target=https://github.com/SamyPesse/How-to-Make-a-Computer-Operating-System)\uff1a\uff08\u82f1\u6587\uff09\u5982\u4f55\u505a\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf[\u5728\u7ebf\u9605\u8bfb](https://www.gitbook.com/book/samypesse/how-to-create-an-operating-system/details)\n\n\n14\u3001[learning-react](https://hellogithub.com/periodical/statistics/click?target=https://github.com/yiminghe/learning-react)\uff1a[yiminghe](https://github.com/yiminghe) \u7684 react \u4e2d\u6587\u6559\u7a0b\uff0c\u5305\u542b[\u5165\u95e8](http://yiminghe.me/learning-react/tutorial/zh-cn/intro.html#/)\u548c[\u8fdb\u9636](http://yiminghe.me/learning-react/tutorial/zh-cn/advanced.html#/)\n\n\n15\u3001[static](https://hellogithub.com/periodical/statistics/click?target=https://github.com/staticfile/static)\uff1a\u8fd9\u4e2a\u9879\u76ee\u662f\u4e00\u4e2a\u4ed3\u5e93\uff0c\u5b83\u5c3d\u53ef\u80fd\u5168\u9762\u6536\u5f55\u4f18\u79c0\u7684\u5f00\u6e90\u5e93\uff0c\u5e76\u514d\u8d39\u4e3a\u4e4b\u63d0\u4f9b CDN \u52a0\u901f\u670d\u52a1\uff0c\u4f7f\u4e4b\u6709\u66f4\u597d\u7684\u8bbf\u95ee\u901f\u5ea6\u548c\u7a33\u5b9a\u7684\u73af\u5883\u3002\u540c\u65f6\uff0c\u5b83\u4e5f\u63d0\u4f9b\u5f00\u6e90\u5e93\u6e90\u63a5\u5165\u7684\u5165\u53e3\uff0c\u8ba9\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u63d0\u4ea4\u5f00\u6e90\u5e93\uff0c\u5305\u62ec JavaScript\u3001CSS\u3001image \u548c swf \u7b49\u9759\u6001\u6587\u4ef6\u3002[\u8bbf\u95ee Staticfile CDN](https://www.staticfile.org/about.html)\n\n\n16\u3001[WebFundamentals](https://hellogithub.com/periodical/statistics/click?target=https://github.com/google/WebFundamentals)\uff1a\uff08\u82f1\u6587\uff09Google \u7684 Web \u5f00\u53d1\u8005\u6700\u4f73\u7ec3\u4e60\u6559\u7a0b\n\n\n### \u5f00\u6e90\u4e66\u7c4d\n17\u3001[build-web-application-with-golang](https://hellogithub.com/periodical/statistics/click?target=https://github.com/astaxie/build-web-application-with-golang)\uff1a\u300aGo Web \u7f16\u7a0b\u300b\u4e2d\u6587\n\n\n\n\n<p align=\"center\">\n    <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub06.md\">\u300e\u4e0a\u4e00\u671f\u300f</a> | <a href='https://github.com/521xueweihan/HelloGitHub/issues/899'>\u53cd\u9988\u548c\u5efa\u8bae</a> | <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub08.md\">\u300e\u4e0b\u4e00\u671f\u300f</a>\n</p>\n\n---\n<p align=\"center\">\n    \ud83d\udc49 <a href='https://hellogithub.com/periodical'>\u6765\uff01\u63a8\u8350\u5f00\u6e90\u9879\u76ee</a> \ud83d\udc48<br>\n    \u5fae\u4fe1\u4e2d\u641c\uff1a<strong>HelloGitHub</strong> \u5173\u6ce8\u516c\u4f17\u53f7<br>\n    \u4e0d\u4ec5\u80fd\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\uff0c\u8fd8\u6709\u56de\u9988\u7c89\u4e1d\u7684\u6d3b\u52a8<br>\n    \u5982\u679c\u6587\u4e2d\u7684\u56fe\u5237\u4e0d\u51fa\u6765\uff0c\u53ef\u4ee5\u70b9\u51fb <a href='https://hellogithub.com/periodical/volume/07'>\u8fd9\u91cc</a>\u3002\n</p>\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "content/HelloGitHub08.md", "size": 13097, "license": "NOASSERTION", "content_sha": "9d8adea28131cfc2debe90076a3728189571bb86", "findings": [{"type": "pii_email", "matches": ["webmaster@python.org", "james@example.com"]}], "content": "# \u300aHelloGitHub\u300b\u7b2c 08 \u671f\n> \u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c**HelloGitHub** \u8ba9\u4f60\u5bf9\u5f00\u6e90\u611f\u5174\u8da3\uff01\n<p align=\"center\">\n    <img src='https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg' style=\"max-width:100%;\"></img>\n</p>\n\n## \u76ee\u5f55\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 **\u300c\u76ee\u5f55\u300d** \u56fe\u6807\u6253\u5f00\u76ee\u5f55\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n![](https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png)\n\n**Tips**\uff1a\u5982\u679c\u9047\u5230\u56fe\u7247\u5237\u4e0d\u51fa\u6765\u7684\u60c5\u51b5\uff0c[\u70b9\u51fb](https://hellogithub.com/periodical/volume/08) \u6362\u4e00\u79cd\u6d4f\u89c8\u65b9\u5f0f\u3002\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\" style=\"max-width:30%;\"></img><br>\n\u5173\u6ce8\u300cHelloGitHub\u300d\u516c\u4f17\u53f7\uff0c\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\n</p>\n\n## \u5185\u5bb9\n> **\u4ee5\u4e0b\u4e3a\u672c\u671f\u5185\u5bb9**\uff5c\u6bcf\u4e2a\u6708 **28** \u53f7\u66f4\u65b0\n\n### C# \u9879\u76ee\n1\u3001[Newtonsoft.Json](https://hellogithub.com/periodical/statistics/click?target=https://github.com/JamesNK/Newtonsoft.Json)\uff1aNewtonsoft.Json \u662f\u4e00\u6b3e .NET \u5e73\u53f0\u4e2d\u5f00\u6e90\u7684 JSON \u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7c7b\u5e93\uff0c\u793a\u4f8b\u4ee3\u7801\uff1a\n```\npublic class Account\n{\n    public string Email { get; set; }\n    public bool Active { get; set; }\n    public DateTime CreatedDate { get; set; }\n    public IList<string> Roles { get; set; }\n}\n\nAccount account = new Account\n{\n     Email = \"james@example.com\",\n     Active = true,\n     CreatedDate = new DateTime(2013, 1, 20, 0, 0, 0, ateTimeKind.Utc),\n     Roles = new List<string>\n     {\n         \"User\",\n         \"Admin\"\n    }\n};\n\nstring json = JsonConvert.SerializeObject(account, Formatting.Indented);\n// {\n//   \"Email\": \"james@example.com\",\n//   \"Active\": true,\n//   \"CreatedDate\": \"2013-01-20T00:00:00Z\",\n//   \"Roles\": [\n//     \"User\",\n//     \"Admin\"\n//   ]\n// }\n\nConsole.WriteLine(json);\n```\n\n\n### C++ \u9879\u76ee\n2\u3001[libco](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Tencent/libco)\uff1a\u817e\u8baf\u7684\u5f00\u6e90\u9879\u76ee\u2014\u2014libco \u662f\u5fae\u4fe1\u540e\u53f0\u5927\u89c4\u6a21\u4f7f\u7528\u7684 C/C++ \u534f\u7a0b\u5e93\uff0c2013 \u5e74\u81f3\u4eca\u7a33\u5b9a\u8fd0\u884c\u5728\u5fae\u4fe1\u540e\u53f0\u7684\u6570\u4e07\u53f0\u673a\u5668\u4e0a\u3002\n- \u65e0\u9700\u4fb5\u5165\u4e1a\u52a1\u903b\u8f91\uff0c\u628a\u591a\u8fdb\u7a0b\u3001\u591a\u7ebf\u7a0b\u670d\u52a1\u6539\u9020\u6210\u534f\u7a0b\u670d\u52a1\uff0c\u5e76\u53d1\u80fd\u529b\u5f97\u5230\u767e\u500d\u63d0\u5347\n- \u652f\u6301 CGI \u6846\u67b6\uff0c\u8f7b\u677e\u6784\u5efa Web \u670d\u52a1\n- \u652f\u6301 gethostbyname\u3001mysqlclient\u3001ssl \u7b49\u5e38\u7528\u7b2c\u4e09\u65b9\u5e93\n- \u53ef\u9009\u7684\u5171\u4eab\u6808\u6a21\u5f0f\uff0c\u5355\u673a\u8f7b\u677e\u63a5\u5165\u5343\u4e07\u8fde\u63a5\n- \u5b8c\u5584\u7b80\u6d01\u7684\u534f\u7a0b\u7f16\u7a0b\u63a5\u53e3\n    - \u7c7b pthread \u63a5\u53e3\u8bbe\u8ba1\uff0c\u901a\u8fc7 co_create\u3001co_resume \u7b49\u7b80\u5355\u6e05\u6670\u63a5\u53e3\u5373\u53ef\u5b8c\u6210\u534f\u7a0b\u7684\u521b\u5efa\u4e0e\u6062\u590d\n    - \\_\\_thread \u7684\u534f\u7a0b\u79c1\u6709\u53d8\u91cf\u3001\u534f\u7a0b\u95f4\u901a\u4fe1\u7684\u534f\u7a0b\u4fe1\u53f7\u91cf co_signal\n    - \u8bed\u8a00\u7ea7\u522b\u7684 lambda \u5b9e\u73b0\uff0c\u7ed3\u5408\u534f\u7a0b\u539f\u5730\u7f16\u5199\u5e76\u6267\u884c\u540e\u53f0\u5f02\u6b65\u4efb\u52a1\n    - \u57fa\u4e8e epoll/kqueue \u5b9e\u73b0\u7684\u5c0f\u800c\u8f7b\u7684\u7f51\u7edc\u6846\u67b6\uff0c\u57fa\u4e8e\u65f6\u95f4\u8f6e\u76d8\u5b9e\u73b0\u7684\u9ad8\u6027\u80fd\u5b9a\u65f6\u5668\n\n\n### Go \u9879\u76ee\n3\u3001[kcptun](https://hellogithub.com/periodical/statistics/click?target=https://github.com/xtaci/kcptun)\uff1a\u4e5f\u8bb8\u662f\u4e16\u754c\u4e0a\u6700\u5feb\u7684 UDP \u4f20\u8f93\u5de5\u5177\uff0c\u652f\u6301 macOS/Linux/Windows/FreeBSD/ARM/Raspberry Pi/OpenWrt\u3002\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/08/52595226.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Java \u9879\u76ee\n4\u3001[AndroidUtilCode](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Blankj/AndroidUtilCode)\uff1aAndroid \u5f00\u53d1\u4eba\u5458\u4e0d\u5f97\u4e0d\u6536\u96c6\u7684\u4ee3\u7801\uff0c[\u4e2d\u6587\u4ecb\u7ecd](https://github.com/Blankj/AndroidUtilCode/blob/master/README-CN.md)\n\n\n5\u3001[DanmakuFlameMaster](https://hellogithub.com/periodical/statistics/click?target=https://github.com/bilibili/DanmakuFlameMaster)\uff1aBilibili \u5f00\u6e90\u7684 Android \u5f00\u6e90\u5f39\u5e55\u5f15\u64ce\u00b7\u70c8\u7130\u5f39\u5e55\u4f7f\u3002\u7279\u6027\uff1a\n- \u4f7f\u7528\u591a\u79cd\u65b9\u5f0f(View/SurfaceView/TextureView)\u5b9e\u73b0\u9ad8\u6548\u7ed8\u5236\n- \u8be5\u7ad9 XML \u5f39\u5e55\u683c\u5f0f\u89e3\u6790\n- \u57fa\u7840\u5f39\u5e55\u7cbe\u786e\u8fd8\u539f\u7ed8\u5236\n- \u652f\u6301 mode7 \u7279\u6b8a\u5f39\u5e55\n- \u591a\u6838\u673a\u578b\u4f18\u5316\uff0c\u9ad8\u6548\u7684\u9884\u7f13\u5b58\u673a\u5236\n- \u652f\u6301\u591a\u79cd\u663e\u793a\u6548\u679c\u9009\u9879\u5b9e\u65f6\u5207\u6362\n- \u5b9e\u65f6\u5f39\u5e55\u663e\u793a\u652f\u6301\n- \u6362\u884c\u5f39\u5e55\u652f\u6301/\u8fd0\u52a8\u5f39\u5e55\u652f\u6301\n- \u652f\u6301\u81ea\u5b9a\u4e49\u5b57\u4f53\n- \u652f\u6301\u591a\u79cd\u5f39\u5e55\u53c2\u6570\u8bbe\u7f6e\n- \u652f\u6301\u591a\u79cd\u65b9\u5f0f\u7684\u5f39\u5e55\u5c4f\u853d\n\n\n### JavaScript \u9879\u76ee\n6\u3001[atrament](https://hellogithub.com/periodical/statistics/click?target=https://github.com/jakubfiala/atrament)\uff1a\u6781\u5c0f\u7684 JavaScript \u753b\u677f\uff0c[\u5728\u7ebf\u6f14\u793a](http://fiala.uk/atrament.js/demo/)\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/08/55308814.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n7\u3001[incubator-weex](https://hellogithub.com/periodical/statistics/click?target=https://github.com/apache/incubator-weex)\uff1a\u79fb\u52a8\u7aef\uff0c\u8de8\u5e73\u53f0\u524d\u7aef\u6846\u67b6\uff0c[\u8be6\u7ec6\u7684\u4e2d\u6587\u6863](https://weex-project.io/cn/guide/)\n\n\n8\u3001[WeFlow](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Tencent/WeFlow)\uff1a\u5fae\u4fe1\u51fa\u54c1\u7684\u4e00\u4e2a\u9ad8\u6548\u3001\u5f3a\u5927\u3001\u8de8\u5e73\u53f0\u7684 Web \u524d\u7aef\u5f00\u53d1\u5de5\u4f5c\u6d41\u5de5\u5177\uff0c[\u5b98\u7f51](https://weflow.io/)\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/08/59920662.jpeg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Objective-C \u9879\u76ee\n9\u3001[aria2gui](https://hellogithub.com/periodical/statistics/click?target=https://github.com/NickYang29/aria2gui)\uff1aAria2 \u7684 Mac \u5ba2\u6237\u7aef\uff08\u4e0b\u8f7d\u5de5\u5177\uff09\uff0c[\u4ecb\u7ecd\u3001\u4f7f\u7528\u65b9\u6cd5](http://www.jianshu.com/p/1290f8e7b326)\uff0c\u7279\u70b9\uff1a\n- \u96c6\u6210\u4e86 aria2\uff0c\u8fd0\u884c\u540e\u5373\u5b8c\u6210\u914d\u7f6e\u5de5\u4f5c\n- \u591a\u7ebf\u7a0b\u4e0b\u8f7d\n- \u672a\u5b8c\u6210\u4efb\u52a1\u9000\u51fa\u53ef\u4ee5\u81ea\u52a8\u4fdd\u5b58\n- \u652f\u6301\u8fc5\u96f7\u79bb\u7ebf\uff0c\u767e\u5ea6\u3001115\u3001360 \u7b49\u7f51\u76d8\u7684 aria2 \u5bfc\u51fa\uff08\u9700\u8981\u6d4f\u89c8\u5668\u63d2\u4ef6\u652f\u6301\uff09\n- \u652f\u6301 PT/BT\uff0cBT \u901f\u5ea6\u8ddf\u79cd\u5b50\u70ed\u5ea6\u6709\u5173\uff0c\u5982\u679c\u6ca1\u6709\u901f\u5ea6\u7f51\u76d8\u79bb\u7ebf\u540e\u518d\u4e0b\u8f7d\n- \u5728 Badge \u663e\u793a\u6574\u4f53\u4e0b\u8f7d\u901f\u5ea6\n- \u4efb\u52a1\u5b8c\u6210\u901a\u77e5\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/08/37798806.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Python \u9879\u76ee\n10\u3001[httpstat](https://hellogithub.com/periodical/statistics/click?target=https://github.com/reorx/httpstat)\uff1ahttpstat \u7f8e\u5316\u4e86 `curl` \u7684\u7ed3\u679c\uff0c\u4f7f\u5f97\u7ed3\u679c\u66f4\u52a0\u53ef\u8bfb\u3002\u540c\u65f6\u5b83\u65e0\u4f9d\u8d56\u3001\u517c\u5bb9 Python3\u3001\u4e00\u5171\u624d 300 \u591a\u884c\u3002\u8fd8\u53ef\u4ee5\u663e\u793a HTTP \u8bf7\u6c42\u7684\u6bcf\u4e2a\u8fc7\u7a0b\u4e2d\u6d88\u8017\u7684\u65f6\u95f4\uff0c\u5982\u4e0b\u56fe\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/08/66913302.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n11\u3001[PyMySQL](https://hellogithub.com/periodical/statistics/click?target=https://github.com/PyMySQL/PyMySQL)\uff1a\u7eaf Pyton \u5199\u7684 MySQL \u5e93\uff0c\u7eaf Python \u7684\u597d\u5904\u5c31\u662f\u53ef\u4ee5\u8fd0\u884c\u5728\u4efb\u4f55\u88c5\u6709 Python \u89e3\u91ca\u5668\uff08CPython\u3001PyPy\u3001IronPython\uff09\u7684\u5e73\u53f0\u4e0a\u3002\u76f8\u5bf9\u4e8e [MySQLdb](https://github.com/farcepest/MySQLdb1) \u6027\u80fd\u51e0\u4e4e\u4e00\u6837\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e5f\u4e00\u6837\uff0c\u4f46\u662f **PyMySQL \u5b89\u88c5\u65b9\u6cd5\u6781\u5176\u7b80\u5355**\u2014\u2014`pip install PyMySQL`\uff0cPyMySQL \u4f7f\u7528\u793a\u4f8b\u4ee3\u7801\uff1a\n```\n# \u4e0b\u9762\u4e3a\u4f8b\u5b50\u9700\u8981\u7684\u6570\u636e\u5e93\u7684\u5efa\u8868\u8bed\u53e5\nCREATE TABLE `users` (\n    `id` int(11) NOT NULL AUTO_INCREMENT,\n    `email` varchar(255) COLLATE utf8_bin NOT NULL,\n    `password` varchar(255) COLLATE utf8_bin NOT NULL,\n    PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin\nAUTO_INCREMENT=1 ;\n```\n\n```python\n# -*- coding: utf-8 -*-\nimport pymysql.cursors\n\n# \u8fde\u63a5\u6570\u636e\u5e93\nconnection = pymysql.connect(host='localhost',\n                             user='user',\n                             password='passwd',\n                             db='db',\n                             charset='utf8mb4',\n                             cursorclass=pymysql.cursors.DictCursor)\n\ntry:\n    with connection.cursor() as cursor:\n        # \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7eaa\u5f55\uff08record\uff09\n        sql = \"INSERT INTO `users` (`email`, `password`) VALUES (%s, %s)\"\n        cursor.execute(sql, ('webmaster@python.org', 'very-secret'))\n\n    # \u8fde\u63a5\u4e0d\u4f1a\u81ea\u52a8\u63d0\u4ea4\uff0c\u6240\u4ee5\u4f60\u60f3\u4e0b\u9762\u8981\u8c03\u7528 commit \u65b9\u6cd5\uff0c\u5b58\u50a8\u5bf9\u6570\u636e\u5e93\u7684\u6539\u52a8\n    connection.commit()\n\n    with connection.cursor() as cursor:\n        sql = \"SELECT `id`, `password` FROM `users` WHERE `email`=%s\"\n        cursor.execute(sql, ('webmaster@python.org',))\n\n        # \u83b7\u53d6\u4e00\u6761\u7684\u7eaa\u5f55\uff08record\uff09\n        result = cursor.fetchone()\n        print(result)  # \u7ed3\u679c\u8f93\u51fa\uff1a{'password': 'very-secret', 'id': 1}\nfinally:\n    connection.close()  # \u64cd\u4f5c\u5b8c\u6570\u636e\u5e93\u4e00\u8981\u8bb0\u5f97\u8c03\u7528 close \u65b9\u6cd5\uff0c\u5173\u95ed\u8fde\u63a5\n```\n\n\n12\u3001[reddit](https://hellogithub.com/periodical/statistics/click?target=https://github.com/reddit-archive/reddit)\uff1a[reddit.com](https://www.reddit.com/) \u7f51\u7ad9\u7684\u6e90\u7801\uff0c\u901a\u8fc7\u8fd9\u4e2a\u9879\u76ee\uff0c\u53ef\u4ee5\u5b66\u4e60 Python \u5728\u6784\u5efa\u5927\u578b\u9879\u76ee\u4e2d\u7684\u4f7f\u7528\u3001\u9879\u76ee\u7ed3\u6784\u3001\u4ee3\u7801\u98ce\u683c\u3001Python \u6280\u5de7\u7684\u4f7f\u7528\u65b9\u6cd5\u7b49\u3002[\u5b89\u88c5\u6559\u7a0b](https://github.com/reddit/reddit/wiki/Install-guide)\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/08/26554.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Ruby \u9879\u76ee\n13\u3001[discourse](https://hellogithub.com/periodical/statistics/click?target=https://github.com/discourse/discourse)\uff1aRuby \u8bed\u8a00\u5199\u7684\u8bba\u575b\uff0c\u767e\u5206\u4e4b\u767e\u5f00\u6e90\u3001\u514d\u8d39\u3002\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/08/7569578.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5176\u5b83\n14\u3001[How-To-Ask-Questions-The-Smart-Way](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way)\uff1a\u63d0\u95ee\u7684\u667a\u6167\uff0c\u63d0\u51fa\u4e00\u4e2a\u597d\u7684\u95ee\u9898\u662f\u89e3\u51b3\u95ee\u9898\u7684\u5173\u952e\n\n\n15\u3001[jstraining](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ruanyf/jstraining)\uff1a\u962e\u4e00\u5cf0\u5199\u7684\u5168\u6808\u5de5\u7a0b\u5e08\u57f9\u8bad\u6750\u6599\n\n\n16\u3001[macOS-Security-and-Privacy-Guide](https://hellogithub.com/periodical/statistics/click?target=https://github.com/drduh/macOS-Security-and-Privacy-Guide)\uff1aMacOS \u7684\u5b89\u5168\u548c\u9690\u79c1\u6307\u5357\uff0c[\u4e2d\u6587\u7ffb\u8bd1\u7248](https://github.com/xitu/macOS-Security-and-Privacy-Guide/blob/master/README-cn.md)\n\n\n17\u3001[PTVS](https://hellogithub.com/periodical/statistics/click?target=https://github.com/microsoft/PTVS)\uff1aVisual Studio \u4e0b\u7684 Python \u5f00\u53d1\u63d2\u4ef6\n\n\n18\u3001[styleguide](https://hellogithub.com/periodical/statistics/click?target=https://github.com/fex-team/styleguide)\uff1a\u767e\u5ea6\u524d\u7aef\u7814\u53d1\u56e2\u961f\u7684\u6587\u6863\u4e0e\u6e90\u7801\u7f16\u5199\u98ce\u683c\n\n\n19\u3001[the-swift-programming-language-in-chinese](https://hellogithub.com/periodical/statistics/click?target=https://github.com/SwiftGGTeam/the-swift-programming-language-in-chinese)\uff1a\u4e2d\u6587\u7248 Apple \u5b98\u65b9 Swift \u6559\u7a0b\u300aThe Swift Programming Language\u300b\n\n\n\n\n<p align=\"center\">\n    <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub07.md\">\u300e\u4e0a\u4e00\u671f\u300f</a> | <a href='https://github.com/521xueweihan/HelloGitHub/issues/899'>\u53cd\u9988\u548c\u5efa\u8bae</a> | <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub09.md\">\u300e\u4e0b\u4e00\u671f\u300f</a>\n</p>\n\n---\n<p align=\"center\">\n    \ud83d\udc49 <a href='https://hellogithub.com/periodical'>\u6765\uff01\u63a8\u8350\u5f00\u6e90\u9879\u76ee</a> \ud83d\udc48<br>\n    \u5fae\u4fe1\u4e2d\u641c\uff1a<strong>HelloGitHub</strong> \u5173\u6ce8\u516c\u4f17\u53f7<br>\n    \u4e0d\u4ec5\u80fd\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\uff0c\u8fd8\u6709\u56de\u9988\u7c89\u4e1d\u7684\u6d3b\u52a8<br>\n    \u5982\u679c\u6587\u4e2d\u7684\u56fe\u5237\u4e0d\u51fa\u6765\uff0c\u53ef\u4ee5\u70b9\u51fb <a href='https://hellogithub.com/periodical/volume/08'>\u8fd9\u91cc</a>\u3002\n</p>\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "content/HelloGitHub09.md", "size": 10057, "license": "NOASSERTION", "content_sha": "22c238400c00b4dcf5274f82da849232f0918787", "findings": [], "content": "# \u300aHelloGitHub\u300b\u7b2c 09 \u671f\n> \u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c**HelloGitHub** \u8ba9\u4f60\u5bf9\u5f00\u6e90\u611f\u5174\u8da3\uff01\n<p align=\"center\">\n    <img src='https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg' style=\"max-width:100%;\"></img>\n</p>\n\n## \u76ee\u5f55\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 **\u300c\u76ee\u5f55\u300d** \u56fe\u6807\u6253\u5f00\u76ee\u5f55\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n![](https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png)\n\n**Tips**\uff1a\u5982\u679c\u9047\u5230\u56fe\u7247\u5237\u4e0d\u51fa\u6765\u7684\u60c5\u51b5\uff0c[\u70b9\u51fb](https://hellogithub.com/periodical/volume/09) \u6362\u4e00\u79cd\u6d4f\u89c8\u65b9\u5f0f\u3002\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\" style=\"max-width:30%;\"></img><br>\n\u5173\u6ce8\u300cHelloGitHub\u300d\u516c\u4f17\u53f7\uff0c\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\n</p>\n\n## \u5185\u5bb9\n> **\u4ee5\u4e0b\u4e3a\u672c\u671f\u5185\u5bb9**\uff5c\u6bcf\u4e2a\u6708 **28** \u53f7\u66f4\u65b0\n\n### C++ \u9879\u76ee\n1\u3001[json](https://hellogithub.com/periodical/statistics/click?target=https://github.com/nlohmann/json)\uff1aC++ \u7684 JSON \u5e93\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/09/11171548.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Go \u9879\u76ee\n2\u3001[vim-go](https://hellogithub.com/periodical/statistics/click?target=https://github.com/fatih/vim-go)\uff1aGo \u7684 vim \u914d\u7f6e\n\n\n### Java \u9879\u76ee\n3\u3001[android](https://hellogithub.com/periodical/statistics/click?target=https://github.com/SmartisanTech/android)\uff1a\u9524\u5b50\u5f00\u6e90\u7684 One Step \u9879\u76ee\uff0c\u4e00\u6b65\uff08one step\uff09\u662f\u901a\u8fc7\u62d6\u62fd\u5b8c\u6210\u5c06\u4fe1\u606f\u53d1\u9001\u81f3\u5e94\u7528\u6216\u8054\u7cfb\u4eba\u7684\u52a8\u4f5c\uff0c\u8282\u7701\u4e86\u5728\u4e0d\u540c\u5e94\u7528\u4e4b\u95f4\u5207\u6362\u7684\u8bf8\u591a\u6b65\u9aa4\uff0c\u7b2c\u4e00\u6b21\u6253\u901a\u4e86\u624b\u6301\u8bbe\u5907\u4e2d\u5e94\u7528\u95f4\u7684\u8fb9\u754c\uff0c[One Step](http://www.smartisan.com/m1/#/os?section=onestep)\n\n\n4\u3001[android-open-project](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Trinea/android-open-project)\uff1aAndroid \u5f00\u6e90\u9879\u76ee\u5206\u7c7b\u6c47\u603b\n\n\n5\u3001[MSEC](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Tencent/MSEC)\uff1a\u817e\u8baf\u5f00\u6e90\u7684\u6beb\u79d2\u670d\u52a1\u5f15\u64ce\uff08Mass Service Engine in Cluster\uff09\u3002\u5b83\u662f\u4e00\u4e2a\u5f00\u6e90\u6846\u67b6\uff0c\u9002\u7528\u4e8e\u5728\u5ec9\u4ef7\u673a\u5668\u7ec4\u6210\u7684\u96c6\u7fa4\u4e0a\u5f00\u53d1\u548c\u8fd0\u8425\u5206\u5e03\u5f0f\u540e\u53f0\u670d\u52a1\u3002\u6beb\u79d2\u670d\u52a1\u5f15\u64ce\u96c6 RPC\u3001\u540d\u5b57\u53d1\u73b0\u670d\u52a1\u3001\u8d1f\u8f7d\u5747\u8861\u3001\u4e1a\u52a1\u76d1\u63a7\u3001\u7070\u5ea6\u53d1\u5e03\u3001\u5bb9\u91cf\u7ba1\u7406\u3001\u65e5\u5fd7\u7ba1\u7406\u3001key-value \u5b58\u50a8\u4e8e\u4e00\u4f53\uff0c[\u5b98\u7f51\u4ecb\u7ecd](http://haomiao.qq.com/index.html#documents)\n\n\n### JavaScript \u9879\u76ee\n6\u3001[N-blog](https://hellogithub.com/periodical/statistics/click?target=https://github.com/nswbmw/N-blog)\uff1a\u9762\u5411\u65b0\u624b\u7684 Node.js \u6559\u7a0b\uff0c\u8be5\u6559\u7a0b\u8bb2\u8ff0\u4e86 Node.js \u57fa\u672c\u77e5\u8bc6\u70b9\uff0c\u540c\u65f6\u7ed3\u5408\u642d\u5efa\u4e00\u4e2a\u591a\u4eba\u535a\u5ba2\u7684\u5b9e\u6218\uff0c\u4ece\u96f6\u57fa\u7840\u5230\u5b9e\u9645\u5f00\u53d1\uff0c\u7531\u6d45\u5230\u6df1\u5e2e\u52a9\u65b0\u624b\u5165\u95e8 Node.js \u8fd9\u95e8\u8bed\u8a00\n\n\n7\u3001[pomelo](https://hellogithub.com/periodical/statistics/click?target=https://github.com/NetEase/pomelo)\uff1aPomelo \u7f51\u6613\u5f00\u6e90\u7684\u4e00\u4e2a Node.js \u6e38\u620f\u670d\u52a1\u5668\u6846\u67b6\uff0c[Demo](http://pomelo.netease.com/demo.html)\n\n\n8\u3001[vue-hackernews-2.0](https://hellogithub.com/periodical/statistics/click?target=https://github.com/vuejs/vue-hackernews-2.0)\uff1a\u8fd9\u662f\u4e00\u4e2a Vue2.0 \u793a\u4f8b\uff0c\u514b\u9686 [Hacker News](https://news.ycombinator.com/) \u7f51\u7ad9\uff08\u6211\u611f\u89c9\u6bd4\u539f\u7ad9\u597d\u770b\u591a\u4e86\ud83d\ude05\uff09\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/09/65052980.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### PHP \u9879\u76ee\n9\u3001[VulApps](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Medicean/VulApps)\uff1a\u7528\u4e8e\u5feb\u901f\u642d\u5efa\u5404\u79cd\u6f0f\u6d1e\u73af\u5883\uff0c\u53ef\u7528\u6765\u5b66\u4e60\u3001\u7406\u89e3\u5e38\u89c1\u7684\u6f0f\u6d1e\uff0c\u589e\u5f3a\u81ea\u5df1\u5728\u5f00\u53d1\u8fc7\u7a0b\u7684\u5b89\u5168\u610f\u8bc6\n\n\n### Python \u9879\u76ee\n10\u3001[flask-limiter](https://hellogithub.com/periodical/statistics/click?target=https://github.com/alisaifee/flask-limiter)\uff1a\u4e00\u4e2a Flask \u7684\u6269\u5c55\u5e93\uff0c\u5b83\u53ef\u4ee5\u6839\u636e\u8bbf\u95ee\u8005\u7684 IP \u9650\u5236\u5176\u8bbf\u95ee\u9891\u7387\u3001\u6b21\u6570\u7b49\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a\n```python\nfrom flask import Flask\nfrom flask_limiter import Limiter\nfrom flask_limiter.util import get_remote_address\n\napp = Flask(__name__)\nlimiter = Limiter(\n    app,\n    key_func=get_remote_address,\n    global_limits=[\"2 per minute\", \"1 per second\"],\n)\n\n@app.route(\"/slow\")\n@limiter.limit(\"1 per day\")\ndef slow():\n    return \"24\"\n\n@app.route(\"/fast\")\ndef fast():\n    return \"42\"\n\n@app.route(\"/ping\")\n@limiter.exempt\ndef ping():\n    return 'PONG'\n\napp.run()\n```\n\n\n11\u3001[glances](https://hellogithub.com/periodical/statistics/click?target=https://github.com/nicolargo/glances)\uff1a\u4e00\u4e2a\u53ef\u4ee5\u8ba9\u4f60**\u4e00\u76ee\u4e86\u7136**\u4f60\u7684\u7cfb\u7edf\u60c5\u51b5\uff08\u7c7b (h)top\uff09\u7684\u5de5\u5177\uff0c\u5b83\u754c\u9762\u53cb\u597d\uff0c\u5b89\u88c5\u65b9\u4fbf\uff1a`pip install glances`\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/09/2909429.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n12\u3001[ngrok](https://hellogithub.com/periodical/statistics/click?target=https://github.com/inconshreveable/ngrok)\uff1a\u4e00\u4e2a\u5341\u5206\u65b9\u4fbf\u3001\u597d\u7528\u7684\u5185\u7f51\u7a7f\u900f\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u628a\u672c\u5730\u67d0\u4e2a\u7aef\u53e3\u7684\u670d\u52a1\uff0c\u901a\u8fc7\u4e00\u4e2a\u5b89\u5168\u96a7\u9053\uff0c\u6620\u5c04\u5230\u516c\u7f51\u7684\u4e00\u4e2a\u5730\u5740\u3002\u540c\u65f6\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a Web \u9875\u9762\uff0c\u5c55\u793a\u4e86\u6bcf\u4e2a\u8bf7\u6c42\u3001\u54cd\u5e94\u7684\u6240\u6709\u4fe1\u606f\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u672c\u5730\u7684\u7a0b\u5e8f\u3002\u57fa\u672c\u7684\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a\n```\nngrok \u534f\u8bae \u672c\u5730\u670d\u52a1\u76d1\u542c\u7684\u7aef\u53e3\nngrok http 8000\n\n\u521b\u5efa\u6210\u529f\u4f1a\u8fd4\u56de\u516c\u7f51\u5730\u5740\uff0c\u7136\u540e\u901a\u8fc7\u8be5\u5730\u5740\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230\u672c\u5730\u7684\u670d\u52a1\u3002\n\u672c\u5730\u8bbf\u95ee http://localhost:4040\uff0c\u5c31\u53ef\u4ee5\u67e5\u770b\u5173\u4e8e\u6bcf\u4e2a\u8bf7\u6c42\u3001\u54cd\u5e94\u7684\u76f8\u5173\u6570\u636e\n```\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/09/8900723.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Swift \u9879\u76ee\n13\u3001[Kingfisher](https://hellogithub.com/periodical/statistics/click?target=https://github.com/onevcat/Kingfisher)\uff1aKingfisher \u662f\u4e00\u4e2a\u5f02\u6b65\u4e0b\u8f7d\u548c\u7f13\u5b58\u56fe\u7247\u7684\u5e93\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u770b\u505a SDWebImage \u7684\u7eaf Swift \u5b9e\u73b0\u548c\u66ff\u4ee3\u3002\u5b83\u53ef\u4ee5\u5e2e\u52a9\u7b80\u5355\u5730\u5b9e\u73b0\u50cf\u662f\u7528\u6237\u5934\u50cf\u6216\u8005 table view \u91cc\u9762\u7684\u56fe\u7247\u7684\u4e0b\u8f7d\u548c\u7f13\u5b58\u8fd9\u6837\u7684\u5de5\u4f5c\uff0c\u4ee5\u63d0\u9ad8 app \u901f\u5ea6\u548c\u5e2e\u52a9\u5f00\u53d1\u8005\u8282\u7701\u65f6\u95f4\uff0c[\u4f5c\u8005\u7684\u4e2d\u6587\u535a\u5ba2](http://project.onevcat.com/)\n\n\n### \u4eba\u5de5\u667a\u80fd\n14\u3001[machine-learning-for-software-engineers](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ZuzooVn/machine-learning-for-software-engineers)\uff1a\u81ea\u4e0a\u800c\u4e0b\u7684\u5b66\u4e60\u8def\u7ebf\uff0c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u673a\u5668\u5b66\u4e60\uff0c[\u4e2d\u6587\u7248](https://github.com/ZuzooVn/machine-learning-for-software-engineers/blob/master/README-zh-CN.md)\n\n\n### \u5176\u5b83\n15\u3001[best-chinese-front-end-blogs](https://hellogithub.com/periodical/statistics/click?target=https://github.com/FrankFang/best-chinese-front-end-blogs)\uff1a\u8be5\u9879\u76ee\u662f\u6536\u96c6\u4f18\u8d28\u7684\u4e2d\u6587\u524d\u7aef\u535a\u5ba2\n\n\n16\u3001[freecodecamp.cn](https://hellogithub.com/periodical/statistics/click?target=https://github.com/FreeCodeCampChina/freecodecamp.cn)\uff1afreecodecamp \u662f\u4e00\u4e2a\u81ea\u7531\u7684\u5f00\u6e90\u7f16\u7a0b\u793e\u533a\uff0c[freecodecamp \u4e2d\u6587\u793e\u533a](https://freecodecamp.cn)\n\n\n17\u3001[golang-open-source-projects](https://hellogithub.com/periodical/statistics/click?target=https://github.com/hackstoic/golang-open-source-projects)\uff1a\u4e2d\u6587\u7248 awesome-go\n\n\n18\u3001[Learn-Algorithms](https://hellogithub.com/periodical/statistics/click?target=https://github.com/nonstriater/Learn-Algorithms)\uff1a\u7b97\u6cd5\u6570\u636e\u7ed3\u6784\u5b66\u4e60\uff0cC \u8bed\u8a00\u5b9e\u73b0\n\n\n### \u5f00\u6e90\u4e66\u7c4d\n19\u3001[the-way-to-go_ZH_CN](https://hellogithub.com/periodical/statistics/click?target=https://github.com/unknwon/the-way-to-go_ZH_CN)\uff1a\u300aThe Way to Go\u300b\u4e2d\u6587\u8bd1\u672c\uff0c\u4e2d\u6587\u6b63\u5f0f\u540d\u300aGo \u5165\u95e8\u6307\u5357\u300b\n\n\n\n\n<p align=\"center\">\n    <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub08.md\">\u300e\u4e0a\u4e00\u671f\u300f</a> | <a href='https://github.com/521xueweihan/HelloGitHub/issues/899'>\u53cd\u9988\u548c\u5efa\u8bae</a> | <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub10.md\">\u300e\u4e0b\u4e00\u671f\u300f</a>\n</p>\n\n---\n<p align=\"center\">\n    \ud83d\udc49 <a href='https://hellogithub.com/periodical'>\u6765\uff01\u63a8\u8350\u5f00\u6e90\u9879\u76ee</a> \ud83d\udc48<br>\n    \u5fae\u4fe1\u4e2d\u641c\uff1a<strong>HelloGitHub</strong> \u5173\u6ce8\u516c\u4f17\u53f7<br>\n    \u4e0d\u4ec5\u80fd\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\uff0c\u8fd8\u6709\u56de\u9988\u7c89\u4e1d\u7684\u6d3b\u52a8<br>\n    \u5982\u679c\u6587\u4e2d\u7684\u56fe\u5237\u4e0d\u51fa\u6765\uff0c\u53ef\u4ee5\u70b9\u51fb <a href='https://hellogithub.com/periodical/volume/09'>\u8fd9\u91cc</a>\u3002\n</p>\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "content/HelloGitHub10.md", "size": 11803, "license": "NOASSERTION", "content_sha": "2150b67a44f4df61632665a975f7bfc3e3093bfd", "findings": [], "content": "# \u300aHelloGitHub\u300b\u7b2c 10 \u671f\n> \u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c**HelloGitHub** \u8ba9\u4f60\u5bf9\u5f00\u6e90\u611f\u5174\u8da3\uff01\n<p align=\"center\">\n    <img src='https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg' style=\"max-width:100%;\"></img>\n</p>\n\n## \u76ee\u5f55\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 **\u300c\u76ee\u5f55\u300d** \u56fe\u6807\u6253\u5f00\u76ee\u5f55\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n![](https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png)\n\n**Tips**\uff1a\u5982\u679c\u9047\u5230\u56fe\u7247\u5237\u4e0d\u51fa\u6765\u7684\u60c5\u51b5\uff0c[\u70b9\u51fb](https://hellogithub.com/periodical/volume/10) \u6362\u4e00\u79cd\u6d4f\u89c8\u65b9\u5f0f\u3002\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\" style=\"max-width:30%;\"></img><br>\n\u5173\u6ce8\u300cHelloGitHub\u300d\u516c\u4f17\u53f7\uff0c\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\n</p>\n\n## \u5185\u5bb9\n> **\u4ee5\u4e0b\u4e3a\u672c\u671f\u5185\u5bb9**\uff5c\u6bcf\u4e2a\u6708 **28** \u53f7\u66f4\u65b0\n\n### C# \u9879\u76ee\n1\u3001[Wox](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Wox-launcher/Wox)\uff1aWindows \u4e0a\u7684 Alfred\u3001Launchy\uff0c\u4f7f\u7528\u6f14\u793a\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/10/15315789.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### C++ \u9879\u76ee\n2\u3001[simhash](https://hellogithub.com/periodical/statistics/click?target=https://github.com/yanyiwu/simhash)\uff1a\u6b64\u9879\u76ee\u7528\u6765\u5bf9\u4e2d\u6587\u6587\u6863\u8ba1\u7b97\u51fa\u5bf9\u5e94\u7684 simhash \u503c\u3002simhash \u662f\u8c37\u6b4c\u7528\u6765\u8fdb\u884c\u6587\u672c\u53bb\u91cd\u7684\u7b97\u6cd5\uff08[\u8be6\u89c1 simhash \u7b97\u6cd5\u539f\u7406\u53ca\u5b9e\u73b0](http://yanyiwu.com/work/2014/01/30/simhash-shi-xian-xiang-jie.html)\uff09\uff0c\u73b0\u5728\u5e7f\u6cdb\u5e94\u7528\u5728\u6587\u672c\u5904\u7406\u4e2d\u3002\u7279\u5f81\uff1a\n- \u4f7f\u7528 CppJieba \u4f5c\u4e3a\u5206\u8bcd\u5668\u548c\u5173\u952e\u8bcd\u62bd\u53d6\u5668\n- \u4f7f\u7528 jenkins \u4f5c\u4e3a hash \u51fd\u6570\n- hpp \u98ce\u683c\uff0c\u6240\u6709\u6e90\u7801\u90fd\u662f .hpp \u6587\u4ef6\u91cc\u9762\uff0c\u65b9\u4fbf\u4f7f\u7528\u3002\u6ca1\u6709\u94fe\u63a5\uff0c\u5c31\u6ca1\u6709\u4f24\u5bb3\u3002\n- \u672c\u9879\u76ee\u7684\u526f\u4ea7\u54c1\u9879\u76ee\uff1asimhash_server \u63d0\u4f9b\u4e86\u7b80\u5355\u7684 simhash HTTP \u670d\u52a1\u3002\n\n\n### CSS \u9879\u76ee\n3\u3001[Font-Awesome](https://hellogithub.com/periodical/statistics/click?target=https://github.com/FortAwesome/Font-Awesome)\uff1aGitHub \u4e0a Star \u6570\u6700\u591a\u7684\u56fe\u6807\u5e93\uff0c\u5e94\u8be5\u662f\u5f53\u4e0b\u6700\u6d41\u884c\u7684\u56fe\u6807\u5e93\n\n\n4\u3001[material-design-icons](https://hellogithub.com/periodical/statistics/click?target=https://github.com/google/material-design-icons)\uff1aGoogle \u5b98\u65b9\u5f00\u6e90\u57fa\u4e8e Material Design \u8bbe\u8ba1\u98ce\u683c\u7684\u56fe\u6807\u5e93\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/10/24953448.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Go \u9879\u76ee\n5\u3001[kingshard](https://hellogithub.com/periodical/statistics/click?target=https://github.com/flike/kingshard)\uff1akingshard \u662f\u4e00\u4e2a\u7531 Go \u5f00\u53d1\u9ad8\u6027\u80fd MySQL Proxy \u9879\u76ee\uff0ckingshard \u5728\u6ee1\u8db3\u57fa\u672c\u7684\u8bfb\u5199\u5206\u79bb\u7684\u529f\u80fd\u4e0a\uff0c\u81f4\u529b\u4e8e\u7b80\u5316 MySQL \u5206\u5e93\u5206\u8868\u64cd\u4f5c\uff1b\u80fd\u591f\u8ba9 DBA \u901a\u8fc7 kingshard \u8f7b\u677e\u5e73\u6ed1\u5730\u5b9e\u73b0 MySQL \u6570\u636e\u5e93\u6269\u5bb9\u3002\n\n\n### Java \u9879\u76ee\n6\u3001[rocketmq](https://hellogithub.com/periodical/statistics/click?target=https://github.com/apache/rocketmq)\uff1aRocketMQ \u662f\u963f\u91cc\u5df4\u5df4\u5728 2012 \u5e74\u5f00\u6e90\u7684\u7b2c\u4e09\u4ee3\u5206\u5e03\u5f0f\u6d88\u606f\u4e2d\u95f4\u4ef6\u3002\n\u5386\u5e74\u53cc 11\uff0cRocketMQ \u90fd\u627f\u62c5\u4e86\u963f\u91cc\u5df4\u5df4\u751f\u4ea7\u7cfb\u7edf\u767e\u5206\u4e4b\u767e\u7684\u6d88\u606f\u6d41\u8f6c\uff0c\u5728\u6838\u5fc3\u4ea4\u6613\u94fe\u8def\u6709\u7740\u7a33\u5b9a\u548c\u51fa\u8272\u7684\u8868\u73b0\uff0c\u4eca\u5e74\u53cc\u5341\u4e00\uff0c\u66f4\u662f\u521b\u9020\u4e86\u4e07\u4ebf\u7ea7\u6d88\u606f\u7cbe\u51c6\u4f4e\u5ef6\u8fdf\u6295\u9012\u3002\n\n\n### JavaScript \u9879\u76ee\n7\u3001[flv.js](https://hellogithub.com/periodical/statistics/click?target=https://github.com/bilibili/flv.js)\uff1a\u4f7f\u7528\u7eaf JavaScript \u5199\u7684 HTML5 Flash \u89c6\u9891\uff08flv\uff09\u64ad\u653e\u5668\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a\n```javascript\n<script src=\"flv.min.js\"></script>\n<video id=\"videoElement\"></video>\n<script>\n    if (flvjs.isSupported()) {\n        var videoElement = document.getElementById('videoElement');\n        var flvPlayer = flvjs.createPlayer({\n            type: 'flv',\n            url: 'http://example.com/flv/video.flv'\n        });\n        flvPlayer.attachMediaElement(videoElement);\n        flvPlayer.load();\n        flvPlayer.play();\n    }\n</script>\n```\n\n\n8\u3001[iview](https://hellogithub.com/periodical/statistics/click?target=https://github.com/iview/iview)\uff1aiView \u662f\u4e00\u5957\u57fa\u4e8e Vue.js \u7684\u5f00\u6e90 UI \u7ec4\u4ef6\u5e93\uff0c\u4e3b\u8981\u670d\u52a1\u4e8e PC \u754c\u9762\u7684\u4e2d\u540e\u53f0\u4ea7\u54c1\u3002\u7279\u6027\uff1a\n- \u9ad8\u8d28\u91cf\u3001\u529f\u80fd\u4e30\u5bcc\n- \u53cb\u597d\u7684 API\uff0c\u81ea\u7531\u7075\u6d3b\u5730\u4f7f\u7528\u7a7a\u95f4\n- \u4e8b\u65e0\u5de8\u7ec6\u7684\u6587\u6863\n- \u7ec6\u81f4\u3001\u6f02\u4eae\u7684 UI\n- \u4f7f\u7528\u5355\u6587\u4ef6\u7684 Vue \u7ec4\u4ef6\u5316\u5f00\u53d1\u6a21\u5f0f\n- \u57fa\u4e8e npm + webpack + babel \u5f00\u53d1\uff0c\u652f\u6301 ES2015\n\n\n9\u3001[RAP](https://hellogithub.com/periodical/statistics/click?target=https://github.com/thx/RAP)\uff1a\u963f\u91cc\u5988\u5988 MUX \u56e2\u961f\u51fa\u54c1\uff0c\u4f01\u4e1a\u7ea7 Web \u63a5\u53e3\u7ba1\u7406\u5de5\u5177\u3002RAP \u901a\u8fc7 GUI \u5de5\u5177\u5e2e\u52a9 Web \u5de5\u7a0b\u5e08\u66f4\u9ad8\u6548\u7684\u7ba1\u7406\u63a5\u53e3\u6587\u6863\uff0c\u540c\u65f6\u901a\u8fc7\u5206\u6790\u63a5\u53e3\u7ed3\u6784\u81ea\u52a8\u751f\u6210 Mock \u6570\u636e\u3001\u6821\u9a8c\u771f\u5b9e\u63a5\u53e3\u7684\u6b63\u786e\u6027\uff0c\u4f7f\u5f97\u63a5\u53e3\u5f00\u53d1\u66f4\u52a0\u89c4\u8303\u3001\u81ea\u52a8\u5316\u3002\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/10/12779699.jpeg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Objective-C \u9879\u76ee\n10\u3001[sequelpro](https://hellogithub.com/periodical/statistics/click?target=https://github.com/sequelpro/sequelpro)\uff1a\u8fd9\u662f\u6211\u5230\u76ee\u524d\u4e3a\u6b62\u5728 Mac \u4e0a\u53d1\u73b0\u6700\u597d\u7528\u7684 MySQL \u7ba1\u7406\u5de5\u5177\u3002\u672c\u4eba\u4e00\u76f4\u5728\u4f7f\u7528\uff0c\u5e76\u4e14\u63a8\u8350\u7ed9\u4e86\u6211\u7684\u5c0f\u4f19\u4f34\u4eec\uff0c\u7528\u8fc7\u90fd\u8bf4\u597d\ud83d\ude08\uff5e\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/10/14224695.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### PHP \u9879\u76ee\n11\u3001[typecho](https://hellogithub.com/periodical/statistics/click?target=https://github.com/typecho/typecho)\uff1aPHP \u7684\u4e00\u6b3e\u535a\u5ba2\u7a0b\u5e8f\uff0c[\u5b98\u7f51](http://typecho.org/)\uff0c[\u6587\u6863](http://docs.typecho.org/doku.php)\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/10/11467667.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Python \u9879\u76ee\n12\u3001[jumpserver](https://hellogithub.com/periodical/statistics/click?target=https://github.com/jumpserver/jumpserver)\uff1aJumpserver \u662f\u4e00\u6b3e\u7531 Python \u7f16\u5199\u5f00\u6e90\u7684\u8df3\u677f\u673a\uff08\u662f\u4e00\u7c7b\u53ef\u4f5c\u4e3a\u8df3\u677f\u6279\u91cf\u64cd\u4f5c\u8fdc\u7a0b\u8bbe\u5907\u7684\u7f51\u7edc\u8bbe\u5907\uff09\u7cfb\u7edf\uff0c\u5b9e\u73b0\u4e86\u8df3\u677f\u673a\u5e94\u6709\u7684\u529f\u80fd\u3002\u57fa\u4e8e SSH \u534f\u8bae\u6765\u7ba1\u7406\uff0c\u5ba2\u6237\u7aef\u65e0\u9700\u5b89\u88c5 agent\u3002\u652f\u6301\u5e38\u89c1 Linux \u7cfb\u7edf\uff0c\u6548\u679c\u5982\u4e0b\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/10/21484781.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n13\u3001[locust](https://hellogithub.com/periodical/statistics/click?target=https://github.com/locustio/locust)\uff1a\u6a21\u62df\u7528\u6237\u884c\u4e3a\u7684[\u8d1f\u8f7d\u6d4b\u8bd5](http://blog.csdn.net/kerryzhu/article/details/3515714)\u5de5\u5177\uff0c\u5305\u542b\u53cb\u597d\u7684 Web \u9875\u9762\uff0c\u5982\u4e0b\u56fe\uff1a\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/10/1377867.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n14\u3001[saythanks.io](https://hellogithub.com/periodical/statistics/click?target=https://github.com/BlitzKraft/saythanks.io)\uff1aKennethreitz \u5199\u7684\u4e00\u4e2a\u7b80\u5355\u7684\u7f51\u7ad9\uff08\u57fa\u4e8e Flask\uff09\uff0c\u7528\u4e8e\u5411\u5f00\u6e90\u9879\u76ee\u4f5c\u8005\u53d1\u9001\u611f\u8c22\u90ae\u4ef6\u7684 Web App\u3002\u8be5\u9879\u76ee\u7ed3\u6784\u7b80\u5355\uff0c\u53ef\u4ee5\u7528\u6765\u5b66\u4e60\u5927\u795e\u662f\u5982\u4f55\u5feb\u901f\u5f00\u53d1 Web \u9879\u76ee\u3001\u65b9\u6cd5\u3001\u4ee3\u7801\u98ce\u683c\u3001\u5f00\u53d1\u5e38\u7528\u5e93\u3002\u800c\u4e14\u8be5\u9879\u76ee\u7684\u610f\u4e49\u4e5f\u7279\u522b\u597d\uff1a**\u611f\u8c22\u5f00\u6e90\u9879\u76ee\u7684\u4f5c\u8005**\uff0c\u613f\u5f00\u6e90\u793e\u533a\u8d8a\u6765\u8d8a\u597d\uff0c[\u7f51\u7ad9\u5730\u5740](https://saythanks.io)\n\n\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/10/73524850.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u4eba\u5de5\u667a\u80fd\n15\u3001[MLAlgorithms](https://hellogithub.com/periodical/statistics/click?target=https://github.com/rushter/MLAlgorithms)\uff1a\u5e38\u89c1\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0cPython \u5b9e\u73b0\uff1a\n- [Deep learning (MLP, CNN, RNN, LSTM)](https://github.com/rushter/MLAlgorithms/tree/master/mla/neuralnet)\n- [Linear regression, logistic regression](https://github.com/rushter/MLAlgorithms/blob/master/mla/linear_models.py)\n- [Random Forests](https://github.com/rushter/MLAlgorithms/blob/master/mla/ensemble/random_forest.py)\n- [Support vector machine (SVM) with kernels (Linear, Poly, RBF)](https://github.com/rushter/MLAlgorithms/tree/master/mla/svm)\n- [K-Means](https://github.com/rushter/MLAlgorithms/blob/master/mla/kmeans.py)\n- \u7b49\u7b49\n\n\n### \u5176\u5b83\n16\u3001[500lines](https://hellogithub.com/periodical/statistics/click?target=https://github.com/aosabook/500lines)\uff1a\uff08\u82f1\u6587\uff09\u7528\u5c11\u4e8e 500 \u884c\u7684 Python \u4ee3\u7801\uff0c\u4f60\u53ef\u4ee5\u5199\u51fa\u4ec0\u4e48\u4e1c\u897f\uff1f\u76f8\u4fe1\u4f60\u770b\u5b8c\u8fd9\u4e2a\u9879\u76ee\uff0c\u4f1a\u5b66\u5230\u5f88\u591a\uff08\u6bcf\u4e2a\u9879\u76ee\u7684\u4f5c\u8005\u90fd\u662f\u4e1a\u5185\u5927\u795e\u5199\u7684\uff09\u3002[\u4e2d\u6587\u7ffb\u8bd1\u7248\uff08\u672a\u7ffb\u8bd1\u5b8c\uff09](https://github.com/HT524/500LineorLess_CN)\n\n\n17\u3001[Awesome_APIs](https://hellogithub.com/periodical/statistics/click?target=https://github.com/TonnyL/Awesome_APIs)\uff1a\u7b2c\u4e09\u65b9 API \u96c6\u5408\n\n\n18\u3001[IntelliJ-IDEA-Tutorial](https://hellogithub.com/periodical/statistics/click?target=https://github.com/judasn/IntelliJ-IDEA-Tutorial)\uff1aIntelliJ IDEA \u7b80\u4f53\u4e2d\u6587\u4e13\u9898\u6559\u7a0b\n\n\n19\u3001[Lee-VR-Source](https://hellogithub.com/periodical/statistics/click?target=https://github.com/GeekLiB/Lee-VR-Source)\uff1aVR \u5f00\u53d1\u8005\u5fc5\u5907\u8d44\u6e90\u6c47\u603b\n\n\n### \u5f00\u6e90\u4e66\u7c4d\n20\u3001[redisbook](https://hellogithub.com/periodical/statistics/click?target=https://github.com/huangzworks/redisbook)\uff1aRedis \u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff08\u7f51\u7edc\u7248\uff09\n\n\n\n\n<p align=\"center\">\n    <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub09.md\">\u300e\u4e0a\u4e00\u671f\u300f</a> | <a href='https://github.com/521xueweihan/HelloGitHub/issues/899'>\u53cd\u9988\u548c\u5efa\u8bae</a> | <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub11.md\">\u300e\u4e0b\u4e00\u671f\u300f</a>\n</p>\n\n---\n<p align=\"center\">\n    \ud83d\udc49 <a href='https://hellogithub.com/periodical'>\u6765\uff01\u63a8\u8350\u5f00\u6e90\u9879\u76ee</a> \ud83d\udc48<br>\n    \u5fae\u4fe1\u4e2d\u641c\uff1a<strong>HelloGitHub</strong> \u5173\u6ce8\u516c\u4f17\u53f7<br>\n    \u4e0d\u4ec5\u80fd\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\uff0c\u8fd8\u6709\u56de\u9988\u7c89\u4e1d\u7684\u6d3b\u52a8<br>\n    \u5982\u679c\u6587\u4e2d\u7684\u56fe\u5237\u4e0d\u51fa\u6765\uff0c\u53ef\u4ee5\u70b9\u51fb <a href='https://hellogithub.com/periodical/volume/10'>\u8fd9\u91cc</a>\u3002\n</p>\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "content/HelloGitHub100.md", "size": 28101, "license": "NOASSERTION", "content_sha": "196cce4ede0ea47e74f4d3cf38b4765953101339", "findings": [], "content": "# \u300aHelloGitHub\u300b\u7b2c 100 \u671f\n> \u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c**HelloGitHub** \u8ba9\u4f60\u5bf9\u5f00\u6e90\u611f\u5174\u8da3\uff01\n<p align=\"center\">\n    <img src='https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg' style=\"max-width:100%;\"></img>\n</p>\n\n## \u76ee\u5f55\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 **\u300c\u76ee\u5f55\u300d** \u56fe\u6807\u6253\u5f00\u76ee\u5f55\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n![](https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png)\n\n**Tips**\uff1a\u5982\u679c\u9047\u5230\u56fe\u7247\u5237\u4e0d\u51fa\u6765\u7684\u60c5\u51b5\uff0c[\u70b9\u51fb](https://hellogithub.com/periodical/volume/100) \u6362\u4e00\u79cd\u6d4f\u89c8\u65b9\u5f0f\u3002\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\" style=\"max-width:30%;\"></img><br>\n\u5173\u6ce8\u300cHelloGitHub\u300d\u516c\u4f17\u53f7\uff0c\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\n</p>\n\n## \u5185\u5bb9\n> **\u4ee5\u4e0b\u4e3a\u672c\u671f\u5185\u5bb9**\uff5c\u6bcf\u4e2a\u6708 **28** \u53f7\u66f4\u65b0\n\n### C \u9879\u76ee\n1\u3001[darktable](https://hellogithub.com/periodical/statistics/click?target=https://github.com/darktable-org/darktable)\uff1a\u5f00\u6e90\u7684\u6444\u5f71\u540e\u671f\u5904\u7406\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u514d\u8d39\u4e14\u4e13\u4e1a\u7684\u6444\u5f71\u4f5c\u54c1\u540e\u671f\u5904\u7406\u8f6f\u4ef6\u3002\u5b83\u50cf\u4e00\u4e2a\u865a\u62df\u7684\u5149\u684c\u548c\u6697\u623f\uff0c\u80fd\u591f\u5e2e\u52a9\u6444\u5f71\u5e08\u5b58\u50a8\u6570\u5b57\u5e95\u7247\u3001\u653e\u5927\u67e5\u770b\u548c\u68c0\u7d22\u7167\u7247\u3002\u8be5\u8f6f\u4ef6\u53ef\u4ee5\u663e\u793a\u7167\u7247\u7684\u7126\u8ddd\u548c\u66dd\u5149\u5ea6\u7b49\u4fe1\u606f\uff0c\u5e76\u652f\u6301\u7f16\u8f91\u5386\u53f2\u3001\u5730\u56fe\u6a21\u5f0f\u548c\u6253\u5370\u7167\u7247\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/3791835.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n2\u3001[gnucash](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Gnucash/gnucash)\uff1a\u5b8c\u5168\u5f00\u6e90\u7684\u8d22\u52a1\u8f6f\u4ef6\u3002\u8fd9\u662f\u4e00\u6b3e\u9002\u7528\u4e8e\u4e2a\u4eba\u548c\u5c0f\u578b\u4f01\u4e1a\u7684\u5f00\u6e90\u8d22\u52a1\u8f6f\u4ef6\uff0c\u5b83\u91c7\u7528\u590d\u5f0f\u8bb0\u8d26\u6cd5\uff0c\u63d0\u4f9b\u4e86\u7b80\u6d01\u7684\u64cd\u4f5c\u754c\u9762\uff0c\u5e76\u652f\u6301\u751f\u6210\u62a5\u8868\u3001\u5bf9\u8d26\u3001\u591a\u56fd\u8d27\u5e01\uff0c\u4ee5\u53ca\u83b7\u53d6\u80a1\u7968\u5b9e\u65f6\u4ef7\u683c\u7b49\u529f\u80fd\uff0c\u9002\u7528\u4e8e Windows\u3001Linux \u548c macOS \u5e73\u53f0\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/7966650.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### C# \u9879\u76ee\n3\u3001[git-credential-manager](https://hellogithub.com/periodical/statistics/click?target=https://github.com/git-ecosystem/git-credential-manager)\uff1a\u901a\u7528\u7684 Git \u51ed\u636e\u7ba1\u7406\u5668\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e .NET \u5f00\u53d1\u7684 Git \u51ed\u8bc1\u5b58\u50a8\u548c\u7ba1\u7406\u5de5\u5177\u3002\u5b83\u5f00\u7bb1\u5373\u7528\u3001\u65e0\u9700\u989d\u5916\u64cd\u4f5c\uff0c\u4f7f\u7528 git \u547d\u4ee4\u65f6\uff0c\u5de5\u5177\u4f1a\u81ea\u52a8\u5f15\u5bfc\u5b8c\u6210\u767b\u5f55\uff0c\u540e\u7eed\u65e0\u9700\u518d\u6b21\u767b\u5f55\uff0c\u8f7b\u677e\u89e3\u51b3\u5bf9\u8fdc\u7a0b Git \u4ed3\u5e93\u8fdb\u884c\u64cd\u4f5c\u65f6\u9047\u5230\u7684\u9700\u8981\u767b\u5f55\u548c\u8ba4\u8bc1\u5931\u8d25\u7b49\u95ee\u9898\uff0c\u652f\u6301 GitHub\u3001Bitbucket \u548c GitLab \u7b49\u5e73\u53f0\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/158405551.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n4\u3001[Lean](https://hellogithub.com/periodical/statistics/click?target=https://github.com/QuantConnect/Lean)\uff1a\u57fa\u4e8e C# \u7684\u91cf\u5316\u4ea4\u6613\u5f15\u64ce\u3002\u8fd9\u662f\u4e00\u6b3e\u91c7\u7528 C# \u7f16\u5199\u7684\u5f00\u6e90\u3001\u7ecf\u8fc7\u5b9e\u6218\u8003\u9a8c\u7684\u91cf\u5316\u4ea4\u6613\u5f15\u64ce\u3002\u652f\u6301\u4f7f\u7528 Python3 \u6216 C# \u7f16\u5199\u4ea4\u6613\u7b97\u6cd5\uff0c\u517c\u5bb9 Windows\u3001Linux \u548c macOS \u5e73\u53f0\uff0c\u9002\u7528\u4e8e\u91cf\u5316\u4ea4\u6613\u7b56\u7565\u7814\u7a76\u3001\u56de\u6d4b\u548c\u5b9e\u76d8\u4ea4\u6613\u7b49\u573a\u666f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/27251463.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n5\u3001[space-station-14](https://hellogithub.com/periodical/statistics/click?target=https://github.com/space-wizards/space-station-14)\uff1a\u5f00\u6e90\u6e38\u620f\u300a14 \u53f7\u7a7a\u95f4\u7ad9\u300b\u3002\u8be5\u9879\u76ee\u662f\u7ecf\u5178\u6e38\u620f\u300aSpace Station 13\u300b\u7684\u5f00\u6e90\u91cd\u5236\u7248\u3002\u5728\u8fd9\u6b3e\u56de\u5408\u5236\u591a\u4eba\u89d2\u8272\u626e\u6f14\u7684\u6e38\u620f\u4e2d\uff0c\u73a9\u5bb6\u53ef\u4ee5\u9009\u62e9\u5404\u79cd\u89d2\u8272\uff0c\u5982\u5de5\u7a0b\u5e08\u3001\u8239\u957f\u548c\u53db\u5f92\uff0c\u5e76\u4e0e\u5176\u4ed6\u73a9\u5bb6\u5408\u4f5c\u6216\u7ade\u4e89\uff0c\u5728\u8d44\u6e90\u6709\u9650\u7684\u73af\u5883\u4e2d\u751f\u5b58\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/92001425.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n6\u3001[subtitleedit](https://hellogithub.com/periodical/statistics/click?target=https://github.com/SubtitleEdit/subtitleedit)\uff1a\u5f00\u6e90\u7684\u89c6\u9891\u5b57\u5e55\u7f16\u8f91\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u9002\u7528\u4e8e Windows \u7684\u514d\u8d39\u89c6\u9891\u5b57\u5e55\u7f16\u8f91\u5668\u3002\u5b83\u5f00\u7bb1\u5373\u7528\u4e14\u529f\u80fd\u5f3a\u5927\uff0c\u652f\u6301\u521b\u5efa\u3001\u8c03\u6574\u3001\u540c\u6b65\u548c\u7ffb\u5f55\u5b57\u5e55\uff0c\u8fd8\u63d0\u4f9b\u4e86\u81ea\u52a8\u7ffb\u8bd1\u3001\u5b57\u5e55\u683c\u5f0f\u8f6c\u6362\u548c\u8bed\u97f3\u8bc6\u522b\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/16473585.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### C++ \u9879\u76ee\n7\u3001[diff-pdf](https://hellogithub.com/periodical/statistics/click?target=https://github.com/vslavik/diff-pdf)\uff1a\u76f4\u89c2\u6bd4\u8f83\u4e24\u4e2a PDF \u6587\u4ef6\u7684\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u7528 C++ \u7f16\u5199\u7684 PDF \u6587\u4ef6\u6bd4\u8f83\u5de5\u5177\u3002\u5b83\u652f\u6301\u4e24\u79cd\u67e5\u770b\u65b9\u5f0f\uff0c\u5c06\u6587\u4ef6\u5185\u5bb9\u7684\u5dee\u5f02\u8f93\u51fa\u5230\u4e00\u4e2a\u65b0\u7684 PDF \u6587\u4ef6\uff0c\u6216\u76f4\u63a5\u5728 GUI \u4e2d\u67e5\u770b\u3002\n```\n// \u8f93\u51fa\u5dee\u5f02\ndiff-pdf --output-diff=diff.pdf a.pdf b.pdf\n// \u76f4\u63a5\u67e5\u770b\ndiff-pdf --view a.pdf b.pdf\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/353360.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Go \u9879\u76ee\n8\u3001[buildg](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ktock/buildg)\uff1a\u4ea4\u4e92\u5f0f\u7684 Dockerfile \u8c03\u8bd5\u5de5\u5177\u3002\u8be5\u9879\u662f\u57fa\u4e8e BuildKit \u7684\u4ea4\u4e92\u5f0f\u8c03\u8bd5 Dockerfile \u7684\u5de5\u5177\uff0c\u652f\u6301\u8bbe\u7f6e\u65ad\u70b9\u3001\u5355\u6b65\u6267\u884c\u548c\u975e root \u6a21\u5f0f\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728 VSCode \u7b49\u7f16\u8f91\u5668\u4e2d\u4f7f\u7528\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/490156339.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n9\u3001[devzat](https://hellogithub.com/periodical/statistics/click?target=https://github.com/quackduck/devzat)\uff1a\u7a0b\u5e8f\u5458\u4e13\u5c5e\u7684 SSH \u804a\u5929\u5ba4\u3002\u8fd9\u662f\u4e00\u4e2a\u901a\u8fc7 SSH \u8fde\u63a5\u7684\u804a\u5929\u5ba4\uff0c\u7528\u6237\u65e0\u9700\u5b89\u88c5\u5ba2\u6237\u7aef\uff0c\u4ec5\u9700\u4e00\u6761 SSH \u547d\u4ee4\u5373\u53ef\u767b\u5f55\u3002\u5b83\u652f\u6301\u79c1\u4eba\u6d88\u606f\u3001\u591a\u804a\u5929\u5ba4\u3001\u56fe\u7247\u548c\u4ee3\u7801\u9ad8\u4eae\u7b49\u529f\u80fd\uff0c\u8fd8\u53ef\u4ee5\u96c6\u6210\u7b2c\u4e09\u65b9\u670d\u52a1\u3001\u81ea\u6258\u7ba1 SSH \u804a\u5929\u5ba4\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/354515412.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n10\u3001[expr](https://hellogithub.com/periodical/statistics/click?target=https://github.com/expr-lang/expr)\uff1aGo \u8bed\u8a00\u7684\u8868\u8fbe\u5f0f\u5e93\u3002\u8be5\u9879\u76ee\u662f\u4e13\u4e3a Go \u8bed\u8a00\u8bbe\u8ba1\u7684\u8868\u8fbe\u5f0f\u8bed\u8a00\u548c\u6c42\u503c\u5f15\u64ce\uff0c\u652f\u6301\u4e30\u5bcc\u7684\u7b97\u5b50\u548c\u9ad8\u7ea7\u51fd\u6570\uff0c\u5177\u6709\u5b89\u5168\u3001\u65e0\u526f\u4f5c\u7528\u548c\u9759\u6001\u7c7b\u578b\u68c0\u6d4b\u7b49\u7279\u70b9\u3002\u8868\u8fbe\u5f0f\u662f\u4e00\u884c\u7531\u53d8\u91cf\u3001\u8fd0\u7b97\u7b26\u548c\u51fd\u6570\u7ec4\u6210\u7684\u4ee3\u7801\uff0c\u5b83\u80fd\u591f\u7b80\u5316\u590d\u6742\u7684\u8ba1\u7b97\u4efb\u52a1\uff0c\u591a\u7528\u4e8e\u52a8\u6001\u914d\u7f6e\u548c\u4e1a\u52a1\u89c4\u5219\u5f15\u64ce\u7b49\u573a\u666f\u3002\u6765\u81ea [@\u4e24\u53cc\u7b77\u5b50sqldc](https://hellogithub.com/user/5dGtvaZ6H3L4QMY) \u7684\u5206\u4eab\n```go\nfunc main() {\n    // \u8868\u8fbe\u5f0f\n\tcode := `all(Tweets, {.Len <= 240})`\n\n\tprogram, err := expr.Compile(code, expr.Env(Env{}))\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tenv := Env{\n\t\tTweets: []Tweet{{42}, {98}, {69}},\n\t}\n    // \u8ba1\u7b97\u8868\u8fbe\u5f0f\n\toutput, err := expr.Run(program, env)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\tfmt.Println(output)\n}\n```\n\n11\u3001[gdu](https://hellogithub.com/periodical/statistics/click?target=https://github.com/dundee/gdu)\uff1a\u5feb\u901f\u67e5\u770b\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 Go \u8bed\u8a00\u7f16\u5199\u7684\u78c1\u76d8\u4f7f\u7528\u5206\u6790\u5668\uff0c\u5b83\u80fd\u591f\u5feb\u901f\u626b\u63cf\u5e76\u5c55\u793a\u6587\u4ef6\u548c\u76ee\u5f55\u6240\u5360\u7528\u7684\u78c1\u76d8\u7a7a\u95f4\uff0c\u652f\u6301 TUI\uff08\u9ed8\u8ba4\uff09\u3001\u975e\u4ea4\u4e92\u548c\u5bfc\u51fa\u4e09\u79cd\u4f7f\u7528\u65b9\u5f0f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/122750502.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Java \u9879\u76ee\n12\u3001[cryptomator](https://hellogithub.com/periodical/statistics/click?target=https://github.com/cryptomator/cryptomator)\uff1a\u4e3a\u4f60\u7684\u4e91\u7aef\u6587\u4ef6\u201c\u4e0a\u9501\u201d\u7684\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u4e91\u5b58\u50a8\u6587\u4ef6\u52a0\u5bc6\u5de5\u5177\uff0c\u652f\u6301 Dropbox\u3001OneDrive \u7b49\u4e3b\u6d41\u4e91\u5b58\u50a8\u670d\u52a1\u3002\u5b83\u7b80\u5355\u6613\u7528\u3001\u8de8\u5e73\u53f0\u3001\u65e0\u9700\u6ce8\u518c\uff0c\u91c7\u7528 AES-256 \u52a0\u5bc6\u4e0a\u4f20\u81f3\u4e91\u5b58\u50a8\u7684\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u9002\u7528\u4e8e\u9700\u8981\u5907\u4efd\u6570\u636e\u81f3\u4e91\u7aef\uff0c\u53c8\u62c5\u5fc3\u6570\u636e\u6cc4\u6f0f\u7684\u573a\u666f\u3002\u6765\u81ea [@\u5b64\u80c6\u67aa\u624b](https://hellogithub.com/user/i1wAIyo6P3NXkxm) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/16446099.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n13\u3001[JarEditor](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Liubsyy/JarEditor)\uff1a\u76f4\u63a5\u7f16\u8f91 JAR \u6587\u4ef6\u7684 IDEA \u63d2\u4ef6\u3002\u8fd9\u662f\u4e00\u6b3e IntelliJ IDEA \u63d2\u4ef6\uff0c\u8ba9\u4f60\u65e0\u9700\u89e3\u538b\u5373\u53ef\u76f4\u63a5\u7f16\u8f91 JAR \u6587\u4ef6\u4e2d\u7684 class \u548c\u8d44\u6e90\u6587\u4ef6\u3002\u5b83\u652f\u6301\u6dfb\u52a0\u3001\u5220\u9664\u3001\u91cd\u547d\u540d JAR \u5305\u5185\u7684\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u5e76\u63d0\u4f9b\u4e86\u641c\u7d22\u548c\u590d\u5236 JAR \u5305\u5185\u5bb9\u7b49\u529f\u80fd\uff0c\u517c\u5bb9 SpringBoot \u548c Kotlin \u9879\u76ee\u3002\u6765\u81ea [@\u9e70\u5f71](https://hellogithub.com/user/iEnYZr4sASMjWJb) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/799158803.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n14\u3001[PojavLauncher](https://hellogithub.com/periodical/statistics/click?target=https://github.com/PojavLauncherTeam/PojavLauncher)\uff1aMinecraft \u6e38\u620f\u7684 Android \u542f\u52a8\u5668\u3002\u8be5\u9879\u76ee\u53ef\u4ee5\u8ba9\u4f60\u5728 Android \u4e0a\u73a9 Minecraft\uff08\u6211\u7684\u4e16\u754c\uff09\uff0c\u63d0\u4f9b\u4e86\u79bb\u7ebf\u548c\u591a\u4eba\u8054\u673a\u6a21\u5f0f\u3002\u5b83\u652f\u6301\u51e0\u4e4e\u6240\u6709\u7248\u672c\u7684 Minercraft\uff0c\u8fd8\u53ef\u4ee5\u5b89\u88c5 Forge\u3001Fabric \u548c OptiFine \u7b49\u6a21\u7ec4\u548c\u52a0\u8f7d\u5668\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/246464565.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### JavaScript \u9879\u76ee\n15\u3001[grapesjs](https://hellogithub.com/periodical/statistics/click?target=https://github.com/GrapesJS/grapesjs)\uff1a\u514d\u8d39\u7684\u53ef\u89c6\u5316 Web \u9875\u9762\u6784\u5efa\u5e73\u53f0\u3002\u8be5\u9879\u76ee\u901a\u8fc7\u76f4\u89c2\u7684\u53ef\u89c6\u5316\u754c\u9762\uff0c\u8ba9\u7528\u6237\u80fd\u591f\u901a\u8fc7\u62d6\u62fd\u7684\u65b9\u5f0f\uff0c\u5feb\u901f\u8bbe\u8ba1\u548c\u6784\u5efa\u7f51\u7ad9\u7684 HTML \u6a21\u677f\u3002\u5b83\u6240\u89c1\u5373\u6240\u5f97\u3001\u79fb\u52a8\u7aef\u9002\u914d\uff0c\u9002\u7528\u4e8e\u5b98\u7f51\u3001\u65b0\u95fb\u548c CMS \u7b49\u7c7b\u578b\u7684\u7f51\u7ad9\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/50146229.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n16\u3001[react-content-loader](https://hellogithub.com/periodical/statistics/click?target=https://github.com/danilowoz/react-content-loader)\uff1a\u8f7b\u677e\u521b\u5efa\u9aa8\u67b6\u5c4f\u7684 React \u7ec4\u4ef6\u3002\u8be5\u9879\u76ee\u662f\u7528\u4e8e\u521b\u5efa\u9875\u9762\u52a0\u8f7d\u65f6\u7684\u5360\u4f4d\u56fe React \u7ec4\u4ef6\uff0c\u5b83\u4f53\u79ef\u5c0f\u3001\u6613\u5b9a\u5236\uff0c\u63d0\u4f9b\u4e86\u591a\u79cd\u9884\u8bbe\u6837\u5f0f\u548c\u793a\u4f8b\u4ee3\u7801\uff0c\u62ff\u6765\u5373\u7528\u6781\u6613\u4e0a\u624b\uff0c\u652f\u6301 React\u3001Vue \u548c Angular \u7b49\u4e3b\u6d41\u6846\u67b6\u3002\n```typescript\nimport { Code } from 'react-content-loader'\n\nconst MyCodeLoader = () => <Code />\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/79509385.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n17\u3001[Sink](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ccbikai/Sink)\uff1a\u57fa\u4e8e Cloudflare \u5e26\u8bbf\u95ee\u7edf\u8ba1\u7684\u77ed\u94fe\u5e73\u53f0\u3002\u8be5\u9879\u76ee\u662f\u8fd0\u884c\u5728 Cloudflare \u4e0a\u7684\u77ed\u94fe\u63a5\u670d\u52a1\uff0c\u652f\u6301\u7f51\u5740\u7f29\u77ed\u3001\u8bbf\u95ee\u5206\u6790\u548c\u94fe\u63a5\u6709\u6548\u671f\u7b49\u529f\u80fd\u3002\u6765\u81ea [@\u9762\u6761](https://hellogithub.com/user/qi74Zp23wYKeAVB) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/796284842.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n18\u3001[typebot.io](https://hellogithub.com/periodical/statistics/click?target=https://github.com/baptisteArno/typebot.io)\uff1a\u81ea\u6258\u7ba1\u7684\u804a\u5929\u673a\u5668\u4eba\u6784\u5efa\u5668\u3002\u8be5\u9879\u76ee\u901a\u8fc7\u53ef\u89c6\u5316\u7684\u62d6\u62fd\u754c\u9762\uff0c\u8ba9\u7528\u6237\u80fd\u591f\u8f7b\u677e\u521b\u5efa\u9ad8\u7ea7\u804a\u5929\u673a\u5668\u4eba\uff0c\u5e76\u5c06\u5176\u5d4c\u5165\u7f51\u7ad9\u4e2d\u3002\u5b83\u63d0\u4f9b\u4e86 30 \u591a\u79cd\u804a\u5929\u6784\u5efa\u5757\uff0c\u652f\u6301\u81ea\u6258\u7ba1\u3001\u5206\u6790\u5de5\u5177\u3001\u81ea\u5b9a\u4e49\u57df\u540d\u548c\u54c1\u724c\u5b9a\u5236\u7b49\u529f\u80fd\uff0c\u9002\u7528\u4e8e\u5728\u7ebf\u5ba2\u670d\u548c\u9500\u552e\u652f\u6301\u7b49\u573a\u666f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/429736266.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n19\u3001[typed.js](https://hellogithub.com/periodical/statistics/click?target=https://github.com/mattboldt/typed.js)\uff1a\u6781\u6613\u4e0a\u624b\u7684 JavaScript \u6253\u5b57\u52a8\u753b\u5e93\u3002\u8be5\u9879\u76ee\u662f\u4e13\u95e8\u7528\u4e8e\u521b\u5efa\u6253\u5b57\u52a8\u753b\u6548\u679c\u7684 JavaScript \u5e93\uff0c\u5b83\u7b80\u5355\u6613\u7528\u4e14 SEO \u53cb\u597d\uff0c\u652f\u6301\u5220\u9664\u6548\u679c\u3001\u8bbe\u7f6e\u6253\u5b57\u901f\u5ea6\u548c\u5faa\u73af\u6b21\u6570\u7b49\u529f\u80fd\u3002\n```javascript\nvar typed = new Typed('.element', {\n  strings: [\"First sentence.\", \"Second sentence.\"],\n  typeSpeed: 30\n});\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/10290605.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Kotlin \u9879\u76ee\n20\u3001[WiFiAnalyzer](https://hellogithub.com/periodical/statistics/click?target=https://github.com/VREMSoftwareDevelopment/WiFiAnalyzer)\uff1a\u7528\u4e8e\u5206\u6790 WiFi \u4fe1\u53f7\u7684 Android \u5e94\u7528\u3002\u8be5\u9879\u76ee\u662f\u7528 Kotlin \u5199\u7684 WiFi \u5206\u6790\u5de5\u5177\uff0c\u5b83\u63d0\u4f9b\u4e86\u76f4\u89c2\u7684\u56fe\u8868\u5c55\u793a WiFi \u7f51\u7edc\u60c5\u51b5\uff0c\u652f\u6301\u8bc6\u522b\u5468\u56f4\u7684 WiFi\u3001\u6d4b\u91cf\u4fe1\u53f7\u5f3a\u5ea6\u548c\u67e5\u770b\u9891\u9053\u62e5\u6324\u7a0b\u5ea6\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/47726042.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Python \u9879\u76ee\n21\u3001[buzz](https://hellogithub.com/periodical/statistics/click?target=https://github.com/chidiwilliams/buzz)\uff1a\u97f3\u9891\u8f6c\u5f55\u4e0e\u7ffb\u8bd1\u5de5\u5177\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e Whisper \u7684\u97f3\u9891\u8f6c\u5f55\u548c\u7ffb\u8bd1\u5de5\u5177\uff0c\u5b83\u5f00\u7bb1\u5373\u7528\u4e14\u64cd\u4f5c\u7b80\u5355\uff0c\u652f\u6301\u8bed\u97f3\u8f6c\u6587\u5b57\u3001\u97f3\u9891\u7ffb\u8bd1\u3001\u591a\u79cd\u8bed\u8a00\u548c\u79bb\u7ebf\u4f7f\u7528\uff0c\u9002\u7528\u4e8e macOS\u3001Windows \u548c Linux \u5e73\u53f0\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/540842713.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n22\u3001[helium](https://hellogithub.com/periodical/statistics/click?target=https://github.com/mherrmann/helium)\uff1a\u7b80\u5316\u6d4f\u89c8\u5668\u81ea\u52a8\u5316\u7684 Python \u5e93\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e Selenium \u7684\u8f7b\u91cf\u7ea7 Python \u5e93\uff0c\u5b83\u901a\u8fc7\u63d0\u4f9b\u66f4\u9ad8\u7ea7\u548c\u6613\u7528\u7684 API\uff0c\u8ba9\u7528 Python \u7f16\u5199\u6d4f\u89c8\u5668\u81ea\u52a8\u5316\u811a\u672c\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\u548c\u65b9\u4fbf\uff0c\u652f\u6301 Chrome \u548c Firefox \u6d4f\u89c8\u5668\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/224234024.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n23\u3001[jurigged](https://hellogithub.com/periodical/statistics/click?target=https://github.com/breuleux/jurigged)\uff1aPython \u7684\u70ed\u91cd\u8f7d\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u4e13\u4e3a Python \u63d0\u4f9b\u70ed\u91cd\u8f7d\u529f\u80fd\u7684\u5e93\uff0c\u5b83\u652f\u6301\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4fee\u6539\u548c\u66f4\u65b0 Python \u4ee3\u7801\uff0c\u65e0\u9700\u91cd\u542f\u7a0b\u5e8f\u3002\n```\n# Loop over a function\njurigged --loop function_name script.py\njurigged --loop module_name:function_name script.py\n\n# Only stop on exceptions\njurigged --xloop function_name script.py\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/334540343.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n24\u3001[python-sortedcontainers](https://hellogithub.com/periodical/statistics/click?target=https://github.com/grantjenks/python-sortedcontainers)\uff1a\u66f4\u597d\u7528\u7684 Python \u6392\u5e8f\u96c6\u5408\u5e93\u3002\u8be5\u9879\u76ee\u63d0\u4f9b\u4e86 SortedList\u3001SortedDict \u548c SortedSet \u4e09\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5b8c\u5168\u517c\u5bb9 List\u3001Dict\u3001Set \u5185\u7f6e\u6570\u636e\u7c7b\u578b\u7684 API\u3002\u5c3d\u7ba1\u91c7\u7528\u7eaf Python \u7f16\u5199\uff0c\u5176\u901f\u5ea6\u5374\u53ef\u4ee5\u5ab2\u7f8e\u4f7f\u7528 C \u6269\u5c55\u5b9e\u73b0\u7684 Python \u5e93\u3002\n```python\nfrom sortedcontainers import SortedList\nsl = SortedList(['e', 'a', 'c', 'd', 'b'])\n# sl: SortedList(['a', 'b', 'c', 'd', 'e'])\nsl *= 10_000_000\nsl.count('c')  # 10000000\nsl[-3:]  # ['e', 'e', 'e']\n\nfrom sortedcontainers import SortedDict\nsd = SortedDict({'c': -3, 'a': 1, 'b': 2})\n# sd: SortedDict({'a': 1, 'b': 2, 'c': -3})\nsd.popitem(index=-1)  # ('c', -3)\n\nfrom sortedcontainers import SortedSet\nss = SortedSet('abracadabra')\n# ss: SortedSet(['a', 'b', 'c', 'd', 'r'])\nss.bisect_left('c')  # 2\n```\n\n25\u3001[radon](https://hellogithub.com/periodical/statistics/click?target=https://github.com/rubik/radon)\uff1aPython \u4ee3\u7801\u8d28\u91cf\u5206\u6790\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u5f3a\u5927\u7684 Python \u4ee3\u7801\u5ea6\u91cf\u5de5\u5177\uff0c\u5b83\u80fd\u591f\u8ba1\u7b97\u591a\u79cd\u4ee3\u7801\u6307\u6807\uff0c\u5305\u62ec McCabe \u590d\u6742\u5ea6\u3001Halstead \u6307\u6807\u548c\u53ef\u7ef4\u62a4\u6027\u6307\u6570\uff0c\u9002\u7528\u4e8e Python \u4ee3\u7801\u8d28\u91cf\u8bc4\u4f30\u548c\u6301\u7eed\u96c6\u6210\u7b49\u573a\u666f\u3002\n```\n$ radon cc sympy/solvers/solvers.py -a -nc\nsympy/solvers/solvers.py\n    F 346:0 solve - F\n    F 1093:0 _solve - F\n    F 1434:0 _solve_system - F\n    F 2647:0 unrad - F\n    F 110:0 checksol - F\n    F 2238:0 _tsolve - F\n    F 2482:0 _invert - F\n    F 1862:0 solve_linear_system - E\n    F 1781:0 minsolve_linear_system - D\n    F 1636:0 solve_linear - D\n    F 2382:0 nsolve - C\n\n11 blocks (classes, functions, methods) analyzed.\nAverage complexity: F (61.0)\n```\n\n### Rust \u9879\u76ee\n26\u3001[komorebi](https://hellogithub.com/periodical/statistics/click?target=https://github.com/LGUG2Z/komorebi)\uff1aWindows \u7684\u5e73\u94fa\u7a97\u53e3\u7ba1\u7406\u5668\u3002\u8fd9\u662f\u4e00\u6b3e\u4e13\u4e3a Windows \u8bbe\u8ba1\u7684\u684c\u9762\u7a97\u53e3\u7ba1\u7406\u5de5\u5177\uff0c\u652f\u6301\u81ea\u52a8\u5e73\u94fa\u7a97\u53e3\u3001\u7ba1\u7406\u591a\u4e2a\u865a\u62df\u684c\u9762\u548c\u591a\u663e\u793a\u5668\u7b49\u529f\u80fd\uff0c\u9002\u7528\u4e8e Windows 10 \u53ca\u66f4\u9ad8\u7248\u672c\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/390873100.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n27\u3001[min-sized-rust](https://hellogithub.com/periodical/statistics/click?target=https://github.com/johnthagen/min-sized-rust)\uff1a\u4f18\u5316 Rust \u4e8c\u8fdb\u5236\u6587\u4ef6\u5927\u5c0f\u7684\u65b9\u6cd5\u3002Rust \u6784\u5efa\u65f6\u9ed8\u8ba4\u4e0d\u4f1a\u4f18\u5316\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u8be5\u9879\u76ee\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728\u4fdd\u8bc1 Rust \u7a0b\u5e8f\u529f\u80fd\u5b8c\u6574\u7684\u540c\u65f6\uff0c\u51cf\u5c11\u4e8c\u8fdb\u5236\u6587\u4ef6\u4f53\u79ef\u7684\u5de5\u5177\u548c\u6280\u5de7\uff0c\u9002\u7528\u4e8e\u5d4c\u5165\u5f0f\u548c\u7269\u8054\u7f51\u7b49\u5bf9\u7a0b\u5e8f\u4f53\u79ef\u654f\u611f\u7684\u573a\u666f\u3002\n\n28\u3001[readyset](https://hellogithub.com/periodical/statistics/click?target=https://github.com/readysettech/readyset)\uff1aRust \u5f00\u53d1\u7684 SQL \u6570\u636e\u5e93\u7f13\u5b58\u5f15\u64ce\u3002\u8be5\u9879\u76ee\u662f\u91c7\u7528 Rust \u5f00\u53d1\u7684 Postgres \u548c MySQL \u6570\u636e\u5e93\u7f13\u5b58\u5c42\uff0c\u652f\u6301\u81ea\u52a8\u7ef4\u62a4\u7f13\u5b58\u3001\u7f13\u5b58\u590d\u6742\u7684 SQL \u67e5\u8be2\u7ed3\u679c\u548c\u4fdd\u6301\u6570\u636e\u5b9e\u65f6\u540c\u6b65\u7b49\u529f\u80fd\u3002\u4f7f\u7528\u65f6\u65e0\u9700\u6539\u52a8\u4ee3\u7801\u5373\u53ef\u96c6\u6210\u5230\u73b0\u6709\u7684\u5e94\u7528\u548c\u6570\u636e\u5e93\u4e4b\u95f4\uff0c\u663e\u8457\u63d0\u5347\u67e5\u8be2\u6027\u80fd\u3002\u6765\u81ea [@DeShuiYu](https://hellogithub.com/user/ZWJkOqsvYbPgD8p) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/495863734.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Swift \u9879\u76ee\n29\u3001[ATV-Bilibili-demo](https://hellogithub.com/periodical/statistics/click?target=https://github.com/yichengchen/ATV-Bilibili-demo)\uff1a\u5f00\u6e90\u7684 Apple TV \u54d4\u54e9\u54d4\u54e9\u5ba2\u6237\u7aef\u3002\u8be5\u9879\u76ee\u662f\u4e13\u4e3a\u82f9\u679c\u7535\u89c6\uff08tvOS\uff09\u8bbe\u8ba1\u7684\u54d4\u54e9\u54d4\u54e9\u5ba2\u6237\u7aef\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u89c2\u770b B \u7ad9\u4e0a\u7684\u89c6\u9891\u3001\u76f4\u64ad\u548c\u5f39\u5e55\uff0c\u652f\u6301\u767b\u5f55\u3001\u6295\u5c4f\u3001\u641c\u7d22\u548c\u5386\u53f2\u8bb0\u5f55\u7b49\u529f\u80fd\uff0c\u5c31\u662f\u5b89\u88c5\u6709\u70b9\u9ebb\u70e6\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/352088293.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n30\u3001[PlayCover](https://hellogithub.com/periodical/statistics/click?target=https://github.com/PlayCover/PlayCover)\uff1a\u5728 Mac \u4e0a\u8fd0\u884c iOS \u6e38\u620f\u548c\u5e94\u7528\u7684\u5de5\u5177\u3002\u8be5\u9879\u76ee\u662f\u4e13\u4e3a Apple Silicon Mac \u8bbe\u5907\uff08M \u7cfb\u5217\u82af\u7247\uff09\u8bbe\u8ba1\uff0c\u7528\u4e8e\u8fd0\u884c iOS \u5e94\u7528\u548c\u6e38\u620f\u7684\u5de5\u5177\u3002\u5b83\u901a\u8fc7\u6a21\u62df iPad \u73af\u5883\u548c\u952e\u76d8\u6620\u5c04\u529f\u80fd\uff0c\u8ba9\u7528\u6237\u53ef\u4ee5\u5728 Mac \u7535\u8111\u4e0a\u73a9 iOS \u6e38\u620f\uff0c\u9700\u81ea\u884c\u4e0b\u8f7d IPA \u6587\u4ef6\uff0c\u9002\u7528\u4e8e macOS 12.0 \u6216\u66f4\u9ad8\u7248\u672c\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/511961615.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u4eba\u5de5\u667a\u80fd\n31\u3001[mem0](https://hellogithub.com/periodical/statistics/click?target=https://github.com/mem0ai/mem0)\uff1a\u589e\u5f3a LLM \u4e0a\u4e0b\u6587\u8fde\u7eed\u6027\u7684 Python \u5e93\u3002\u8be5\u9879\u76ee\u80fd\u4e3a\u591a\u79cd\u4e3b\u6d41\u7684\u5927\u578b\u8bed\u8a00\u6a21\u578b\u63d0\u4f9b\u8bb0\u5fc6\u5c42\uff0c\u5b83\u652f\u6301\u4fdd\u5b58\u7528\u6237\u4e0e LLM \u4ea4\u4e92\u65f6\u7684\u4f1a\u8bdd\u548c\u4e0a\u4e0b\u6587\uff0c\u5e76\u80fd\u5b9e\u65f6\u52a8\u6001\u66f4\u65b0\u548c\u8c03\u6574\uff0c\u4ece\u800c\u589e\u5f3a AI \u7684\u4e2a\u6027\u5316\uff0c\u9002\u7528\u4e8e\u5b66\u4e60\u52a9\u624b\u3001\u533b\u7597\u52a9\u7406\u548c\u865a\u62df\u4f34\u4fa3\u7b49\u9700\u8981\u957f\u671f\u8bb0\u5fc6\u7684\u4e2a\u6027\u5316 LLM \u5e94\u7528\u3002\n```python\nfrom mem0 import Memory\nm = Memory()\n# Add\nresult = m.add(\"Likes to play cricket on weekends\", user_id=\"alice\", metadata={\"category\": \"hobbies\"})\n# Search\nrelated_memories = m.search(query=\"What are Alice's hobbies?\", user_id=\"alice\")\n# Update\nresult = m.update(memory_id=\"m1\", data=\"Likes to play tennis on weekends\")\n```\n\n32\u3001[Retrieval-based-Voice-Conversion-WebUI](https://hellogithub.com/periodical/statistics/click?target=https://github.com/RVC-Project/Retrieval-based-Voice-Conversion-WebUI)\uff1a\u5f00\u7bb1\u5373\u7528\u7684 AI \u53d8\u58f0\u5668\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e VITS \u7684\u53d8\u58f0\u6846\u67b6\uff0c\u4ec5\u9700\u5c11\u91cf\u8bed\u97f3\u6570\u636e\u548c\u666e\u901a\u7684\u663e\u5361\uff0c\u5c31\u80fd\u5feb\u901f\u8bad\u7ec3\u51fa\u9ad8\u8d28\u91cf\u7684\u8bed\u97f3\u8f6c\u6362\u6a21\u578b\u3002\u5b83\u63d0\u4f9b\u4e86\u7b80\u5355\u6613\u7528\u7684 Web \u548c GUI \u754c\u9762\uff0c\u652f\u6301\u5b9e\u65f6\u53d8\u58f0\u3001\u4eba\u58f0\u548c\u4f34\u594f\u5206\u79bb\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/619521008.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n33\u3001[Upsonic](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Upsonic/Upsonic)\uff1a\u6781\u7b80\u7684 GPT-4o \u5ba2\u6237\u7aef\u3002\u8be5\u9879\u76ee\u662f\u9002\u7528\u4e8e Windows\u3001macOS \u548c Ubuntu \u7684 GPT-4o \u5ba2\u6237\u7aef\uff0c\u5b83\u62e5\u6709\u6781\u7b80\u7684\u7528\u6237\u754c\u9762\uff0c\u652f\u6301\u6267\u884c\u591a\u79cd\u4efb\u52a1\uff0c\u5305\u62ec\u8bfb\u53d6\u5c4f\u5e55\u3001\u6253\u5f00\u5e94\u7528\u3001\u7cfb\u7edf\u97f3\u9891\u548c\u6587\u672c\u8f93\u5165\u7b49\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/806192576.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5176\u5b83\n34\u3001[dart_simple_live](https://hellogithub.com/periodical/statistics/click?target=https://github.com/xiaoyaocz/dart_simple_live)\uff1a\u7b80\u5355\u6613\u7528\u7684\u770b\u76f4\u64ad\u5de5\u5177\u3002\u8be5\u9879\u76ee\u53ef\u4ee5\u8ba9\u4f60\u5728\u4e00\u4e2a APP \u4e0a\u770b\u5404\u79cd\u4e3b\u6d41\u76f4\u64ad\u5e73\u53f0\uff0c\u5e76\u63d0\u4f9b\u4e86 Android\u3001iOS\u3001macOS \u548c Android TV \u7b49\u5ba2\u6237\u7aef\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/607042713.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n35\u3001[github-readme-terminal](https://hellogithub.com/periodical/statistics/click?target=https://github.com/x0rzavi/github-readme-terminal)\uff1a\u7528\u590d\u53e4\u7ec8\u7aef GIF \u5c55\u793a GitHub \u4e2a\u4eba\u8d44\u6599\u3002\u8be5\u9879\u76ee\u53ef\u4ee5\u6839\u636e\u4f60\u7684 GitHub \u4e2a\u4eba\u6570\u636e\uff0c\u751f\u6210\u590d\u53e4\u98ce\u683c\u7684\u7535\u8111\u542f\u52a8 GIF \u52a8\u753b\uff0c\u5c55\u793a\u4f60\u7684 GitHub \u4e2a\u4eba\u8d44\u6599\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/719900617.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n36\u3001[hugo-book](https://hellogithub.com/periodical/statistics/click?target=https://github.com/alex-shpak/hugo-book)\uff1a\u4e66\u7c4d\u98ce\u683c\u7684 Hugo \u4e3b\u9898\u3002\u8fd9\u662f\u4e00\u4e2a\u5f00\u6e90\u7684 Hugo \u4e3b\u9898\uff0c\u80fd\u591f\u5e2e\u52a9\u7528\u6237\u8f7b\u677e\u521b\u5efa\u7c7b\u4f3c\u4e66\u7c4d\u7684\u6587\u6863\u7f51\u7ad9\u3002\u5b83\u62e5\u6709\u7b80\u6d01\u7684\u8bbe\u8ba1\u3001\u9002\u914d\u79fb\u52a8\u7aef\u3001\u652f\u6301\u591a\u8bed\u8a00\uff0c\u9002\u7528\u4e8e\u6280\u672f\u6587\u6863\u3001\u5728\u7ebf\u6559\u7a0b\u548c\u4e66\u7c4d\u7b49\u573a\u666f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/147530276.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n37\u3001[OMOTE](https://hellogithub.com/periodical/statistics/click?target=https://github.com/CoretechR/OMOTE)\uff1a\u5f00\u6e90\u7684\u901a\u7528\u9065\u63a7\u5668\u3002\u8be5\u9879\u76ee\u662f\u7528 ESP32 \u5236\u4f5c\u7684\u901a\u7528\u9065\u63a7\u5668\uff0c\u5b83\u62e5\u6709 2.8 \u82f1\u5bf8\u7535\u5bb9\u89e6\u6478\u5c4f\u30012000 \u6beb\u5b89\u7535\u6c60\u548c\u5b9e\u4f53\u6309\u952e\uff0c\u652f\u6301\u7ea2\u5916\u3001WiFi \u548c\u84dd\u7259\u8fde\u63a5\u65b9\u5f0f\uff0c\u80fd\u591f\u63a7\u5236\u5404\u79cd\u5bb6\u7535\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/655304519.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n38\u3001[pintree](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Pintree-io/pintree)\uff1aChrome \u4e66\u7b7e\u53d8\u6210\u5bfc\u822a\u7ad9\u3002\u8be5\u9879\u76ee\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u51e0\u6b65\uff0c\u5c06 Chrome \u6d4f\u89c8\u5668\u7684\u4e66\u7b7e\uff0c\u8f6c\u6362\u6210\u4e00\u4e2a\u7f8e\u89c2\u4e14\u6613\u7528\u7684\u5bfc\u822a\u9875\u9762\u3002\u7531\u4e8e\u751f\u6210\u7684\u662f\u9759\u6001\u7f51\u7ad9\uff0c\u56e0\u6b64\u65e0\u6cd5\u81ea\u52a8\u540c\u6b65\u65b0\u589e\u7684\u4e66\u7b7e\u3002\u6765\u81ea [@\u5b64\u80c6\u67aa\u624b](https://hellogithub.com/user/i1wAIyo6P3NXkxm) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/815891082.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n39\u3001[Scoop](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ScoopInstaller/Scoop)\uff1aWindows \u547d\u4ee4\u884c\u5b89\u88c5\u8f6f\u4ef6\u7684\u5229\u5668\u3002\u8be5\u9879\u76ee\u662f\u7c7b\u4f3c\u4e8e Homebrew \u7684 Windows \u547d\u4ee4\u884c\u5b89\u88c5\u5de5\u5177\u3002\u5b83\u53ef\u4ee5\u4ece\u547d\u4ee4\u884c\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\uff0c\u5177\u6709\u6d88\u9664\u6743\u9650\u5f39\u7a97\u3001\u9690\u85cf GUI \u5411\u5bfc\u3001\u81ea\u52a8\u5904\u7406\u4f9d\u8d56\u548c\u9632\u6b62\u6c61\u67d3 PATH \u73af\u5883\u53d8\u91cf\u7b49\u7279\u70b9\u3002\n```\nscoop install sudo\nsudo scoop install 7zip git openssh --global\nscoop install aria2 curl grep sed less touch\nscoop install python ruby go perl\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/9994688.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5f00\u6e90\u4e66\u7c4d\n40\u3001[introduction-to-git-and-github-ebook](https://hellogithub.com/periodical/statistics/click?target=https://github.com/bobbyiliev/introduction-to-git-and-github-ebook)\uff1a\u300aGit \u548c GitHub \u5165\u95e8\u6307\u5357\u300b\u3002\u8fd9\u662f\u4e00\u672c\u4ecb\u7ecd Git \u548c GitHub \u57fa\u7840\u77e5\u8bc6\u7684\u5f00\u6e90\u4e66\u7c4d\uff0c\u5185\u5bb9\u5305\u62ec\u5b89\u88c5 Git\u3001GitHub CLI\u3001\u5206\u652f\u7ba1\u7406\u548c\u5de5\u4f5c\u6d41\u7a0b\u7b49\u5b9e\u7528\u77e5\u8bc6\u3002\n\n41\u3001[machine-learning-for-trading](https://hellogithub.com/periodical/statistics/click?target=https://github.com/stefan-jansen/machine-learning-for-trading)\uff1a\u300aMachine Learning for Algorithmic Trading\u300b\u914d\u5957\u4ee3\u7801\u3002\u8fd9\u662f\u4e00\u672c\u5173\u4e8e\u5982\u4f55\u5c06\u673a\u5668\u5b66\u4e60\u5e94\u7528\u4e8e\u4ea4\u6613\u7b56\u7565\u7684\u4e66\u7c4d\uff0c\u8be5\u9879\u76ee\u662f\u4e66\u7c4d\u7684\u914d\u5957\u4ee3\u7801\u548c\u8d44\u6e90\uff0c\u5305\u542b 150 \u591a\u4e2a\u4ee3\u7801\u793a\u4f8b\uff0c\u6db5\u76d6\u4e86\u6570\u636e\u91c7\u96c6\u3001\u6a21\u578b\u8bad\u7ec3\u548c\u7b56\u7565\u8bc4\u4f30\u7b49\u65b9\u9762\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/100/132754148.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n\n\n<p align=\"center\">\n    <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub99.md\">\u300e\u4e0a\u4e00\u671f\u300f</a> | <a href='https://github.com/521xueweihan/HelloGitHub/issues/899'>\u53cd\u9988\u548c\u5efa\u8bae</a> | <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub101.md\">\u300e\u4e0b\u4e00\u671f\u300f</a>\n</p>\n\n---\n<p align=\"center\">\n    \ud83d\udc49 <a href='https://hellogithub.com/periodical'>\u6765\uff01\u63a8\u8350\u5f00\u6e90\u9879\u76ee</a> \ud83d\udc48<br>\n    \u5fae\u4fe1\u4e2d\u641c\uff1a<strong>HelloGitHub</strong> \u5173\u6ce8\u516c\u4f17\u53f7<br>\n    \u4e0d\u4ec5\u80fd\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\uff0c\u8fd8\u6709\u56de\u9988\u7c89\u4e1d\u7684\u6d3b\u52a8<br>\n    \u5982\u679c\u6587\u4e2d\u7684\u56fe\u5237\u4e0d\u51fa\u6765\uff0c\u53ef\u4ee5\u70b9\u51fb <a href='https://hellogithub.com/periodical/volume/100'>\u8fd9\u91cc</a>\u3002\n</p>\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "content/HelloGitHub101.md", "size": 30993, "license": "NOASSERTION", "content_sha": "636de4b7100822b846efe5b9e6d085e87936f78d", "findings": [], "content": "# \u300aHelloGitHub\u300b\u7b2c 101 \u671f\n> \u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c**HelloGitHub** \u8ba9\u4f60\u5bf9\u5f00\u6e90\u611f\u5174\u8da3\uff01\n<p align=\"center\">\n    <img src='https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg' style=\"max-width:100%;\"></img>\n</p>\n\n## \u76ee\u5f55\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 **\u300c\u76ee\u5f55\u300d** \u56fe\u6807\u6253\u5f00\u76ee\u5f55\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n![](https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png)\n\n**Tips**\uff1a\u5982\u679c\u9047\u5230\u56fe\u7247\u5237\u4e0d\u51fa\u6765\u7684\u60c5\u51b5\uff0c[\u70b9\u51fb](https://hellogithub.com/periodical/volume/101) \u6362\u4e00\u79cd\u6d4f\u89c8\u65b9\u5f0f\u3002\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\" style=\"max-width:30%;\"></img><br>\n\u5173\u6ce8\u300cHelloGitHub\u300d\u516c\u4f17\u53f7\uff0c\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\n</p>\n\n## \u5185\u5bb9\n> **\u4ee5\u4e0b\u4e3a\u672c\u671f\u5185\u5bb9**\uff5c\u6bcf\u4e2a\u6708 **28** \u53f7\u66f4\u65b0\n\n### C \u9879\u76ee\n1\u3001[austin](https://hellogithub.com/periodical/statistics/click?target=https://github.com/P403n1x87/austin)\uff1a\u6df1\u5165 Python \u7a0b\u5e8f\u6027\u80fd\u5206\u6790\u7684\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u4e13\u4e3a Python \u7a0b\u5e8f\u8bbe\u8ba1\u7684\u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c\u65e0\u9700\u4fee\u6539\u4ee3\u7801\u5373\u53ef\u8f7b\u677e\u5b9a\u4f4d Python \u7a0b\u5e8f\u7684\u6027\u80fd\u74f6\u9888\u548c\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u3002\u5b83\u662f\u91c7\u7528 C \u8bed\u8a00\u7f16\u5199\u7684 CPython \u5e27\u5806\u6808\u91c7\u6837\u5668\uff0c\u5177\u6709\u4f53\u79ef\u5c0f\u3001\u8fd0\u884c\u901f\u5ea6\u5feb\u3001\u96f6\u4ee3\u7801\u4fb5\u5165\u7b49\u7279\u70b9\uff0c\u652f\u6301 WebUI\u3001TUI\u3001VSCode \u7b49\u591a\u79cd\u53ef\u89c6\u5316\u65b9\u5f0f\uff08\u9700\u989d\u5916\u5b89\u88c5\uff09\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/149680486.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n2\u3001[chsrc](https://hellogithub.com/periodical/statistics/click?target=https://github.com/RubyMetric/chsrc)\uff1a\u5168\u5e73\u53f0\u901a\u7528\u7684\u6362\u6e90\u5de5\u5177\u3002\u8be5\u9879\u76ee\u80fd\u591f\u4e3a\u5e38\u89c1\u7684 Linux \u53d1\u884c\u7248\u3001\u7f16\u7a0b\u8bed\u8a00\u548c\u8f6f\u4ef6\u5207\u6362\u81f3\u56fd\u5185\u955c\u50cf\u6e90\uff0c\u64cd\u4f5c\u7b80\u5355\u4ec5\u9700\u4e00\u6761\u547d\u4ee4\u3002\u5b83\u91c7\u7528 C \u8bed\u8a00\u7f16\u5199\uff0c\u5177\u6709\u9ad8\u6548\u548c\u8f7b\u91cf\u7ea7\u7684\u7279\u70b9\uff0c\u652f\u6301\u6d4b\u901f\u3001\u591a\u5e73\u53f0\u4ee5\u53ca\u9879\u76ee\u7ea7\u6362\u6e90\u7b49\u529f\u80fd\uff0c\u9002\u7528\u4e8e\u4f18\u5316\u4e0b\u8f7d\u901f\u5ea6\u6216\u89e3\u51b3\u6e90\u53d7\u9650\u7684\u573a\u666f\u3002\u6765\u81ea [@ccmywish](https://hellogithub.com/user/H6YVMUy7ulev8R4) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/686497147.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n3\u3001[collectd](https://hellogithub.com/periodical/statistics/click?target=https://github.com/collectd/collectd)\uff1a\u7075\u6d3b\u7684\u7cfb\u7edf\u4fe1\u606f\u6536\u96c6\u5b88\u62a4\u8fdb\u7a0b\u3002\u8fd9\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u6536\u96c6\u7cfb\u7edf\u4fe1\u606f\u7684\u5b88\u62a4\u8fdb\u7a0b\uff0c\u80fd\u591f\u5b9a\u671f\u6536\u96c6\u548c\u7edf\u8ba1\u7cfb\u7edf\u4fe1\u606f\u3002\u5b83\u652f\u6301\u4e30\u5bcc\u7684\u6570\u636e\u6536\u96c6\u63d2\u4ef6\uff0c\u53ef\u4ee5\u76d1\u63a7\u786c\u4ef6\u4f7f\u7528\u60c5\u51b5\u3001\u7cfb\u7edf\u6027\u80fd\u6307\u6807\u3001\u7f51\u7edc\u6d41\u91cf\u7b49\u591a\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u5305\u62ec Apache\u3001MySQL\u3001\u7535\u6c60\u3001\u4f20\u611f\u5668\u7b49\u3002\u5e76\u652f\u6301\u5c06\u6536\u96c6\u7684\u6570\u636e\u8f93\u51fa\u5230 RRDtool\u3001InfluxDB \u7b49\u591a\u79cd\u6570\u636e\u5e93\u548c\u76d1\u63a7\u7cfb\u7edf\uff0c\u9002\u7528\u4e8e\u5d4c\u5165\u5f0f\u3001\u7269\u8054\u7f51\u548c\u670d\u52a1\u5668\u96c6\u7fa4\u76d1\u63a7\u7b49\u573a\u666f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/3208640.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### C# \u9879\u76ee\n4\u3001[LenovoLegionToolkit](https://hellogithub.com/periodical/statistics/click?target=https://github.com/BartoszCichecki/LenovoLegionToolkit)\uff1a\u8f7b\u91cf\u7ea7\u7684\u8054\u60f3\u62ef\u6551\u8005\u5de5\u5177\u7bb1\u3002\u8be5\u9879\u76ee\u662f\u4e13\u4e3a\u8054\u60f3\u62ef\u6551\u8005\u7cfb\u5217\u7b14\u8bb0\u672c\u8bbe\u8ba1\u7684\u5f00\u6e90\u5de5\u5177\uff0c\u5b83\u5177\u6709\u5c0f\u5de7\u8f7b\u4fbf\u3001\u5360\u7528\u5185\u5b58\u5c11\u3001\u4e0d\u6536\u96c6\u7528\u6237\u4fe1\u606f\u7b49\u4f18\u70b9\uff0c\u652f\u6301\u8c03\u8282\u7535\u6e90\u6a21\u5f0f\u3001\u663e\u5361\u5de5\u4f5c\u6a21\u5f0f\u3001\u98ce\u6247\u901f\u5ea6\u548c\u952e\u76d8\u706f\u6548\u7b49\u529f\u80fd\uff0c\u63d0\u4f9b\u4e86\u4e2d\u6587\u754c\u9762\uff0c\u53ef\u4f5c\u4e3a\u8054\u60f3 Vantage \u8f6f\u4ef6\u7684\u5f00\u6e90\u66ff\u4ee3\u54c1\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/418846673.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n5\u3001[PDFQFZ](https://hellogithub.com/periodical/statistics/click?target=https://github.com/flytkgl/PDFQFZ)\uff1a\u514d\u8d39\u7684 PDF \u52a0\u76d6\u9a91\u7f1d\u7ae0\u5de5\u5177\u3002\u8be5\u9879\u76ee\u662f\u7528\u4e8e\u5728 PDF \u6587\u4ef6\u4e0a\u52a0\u76d6\u9a91\u7f1d\u7ae0\u7684\u5de5\u5177\uff0c\u9002\u7528\u4e8e Windows \u5e73\u53f0\u3002\u5b83\u4e0d\u4ec5\u514d\u8d39\u4e14\u5f00\u6e90\uff0c\u4f7f\u7528\u65f6\u53ef\u4ee5\u6307\u5b9a\u76ee\u5f55\uff0c\u5bf9\u591a\u4e2a PDF \u6587\u4ef6\u8fdb\u884c\u6279\u91cf\u5904\u7406\uff0c\u5e76\u652f\u6301\u9884\u89c8\u3001\u8c03\u6574\u5370\u7ae0\u5927\u5c0f\u548c\u4f4d\u7f6e\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/128596963.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### C++ \u9879\u76ee\n6\u3001[lnav](https://hellogithub.com/periodical/statistics/click?target=https://github.com/tstack/lnav)\uff1a\u5f3a\u5927\u7684\u7ec8\u7aef\u65e5\u5fd7\u6587\u4ef6\u67e5\u770b\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u7528\u4e8e\u67e5\u770b\u548c\u5206\u6790\u65e5\u5fd7\u6587\u4ef6\u7684\u8f7b\u91cf\u7ea7\u5de5\u5177\u3002\u5b83\u65e0\u9700\u914d\u7f6e\u3001\u5f00\u7bb1\u5373\u7528\uff0c\u53ef\u81ea\u52a8\u8bc6\u522b\u65e5\u5fd7\u683c\u5f0f\u5e76\u89e3\u538b\u6587\u4ef6\uff0c\u652f\u6301\u540c\u65f6\u5904\u7406\u591a\u4e2a\u6587\u4ef6\u548c\u76ee\u5f55\u3001\u5b9e\u65f6\u66f4\u65b0\u3001\u6587\u672c\u9ad8\u4eae\u3001\u6b63\u5219\u4e0e SQL \u8fc7\u6ee4\u65e5\u5fd7\u7b49\u529f\u80fd\uff0c\u7279\u522b\u9002\u5408\u5728\u670d\u52a1\u5668\u548c\u5f00\u53d1\u73af\u5883\u4e2d\u4f7f\u7528\u3002\u6765\u81ea [@DeShuiYu](https://hellogithub.com/user/ZWJkOqsvYbPgD8p) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/306147.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n7\u3001[shadPS4](https://hellogithub.com/periodical/statistics/click?target=https://github.com/shadps4-emu/shadPS4)\uff1a\u5f00\u6e90\u7684 PS4 \u6a21\u62df\u5668\u3002\u8fd9\u662f\u7528 C++ \u7f16\u5199\u7684 PlayStation 4\uff08PS4\uff09\u6a21\u62df\u5668\uff0c\u652f\u6301\u5728 Windows\u3001Linux \u548c macOS \u7cfb\u7edf\u4e0a\u73a9 PS4 \u6e38\u620f\u3002\u867d\u7136\u9879\u76ee\u4ecd\u5904\u4e8e\u65e9\u671f\u5f00\u53d1\u9636\u6bb5\uff0c\u80fd\u8fd0\u884c\u7684\u6e38\u620f\u6709\u9650\uff0c\u4f46\u6700\u65b0\u7248\u5df2\u7ecf\u80fd\u591f\u6210\u529f\u8fd0\u884c\u300a\u8840\u6e90\u8bc5\u5492\u300b\u548c\u300a\u9ed1\u6697\u4e4b\u9b42II\u300b\u7b49\u6e38\u620f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/556675672.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Go \u9879\u76ee\n8\u3001[doggo](https://hellogithub.com/periodical/statistics/click?target=https://github.com/mr-karan/doggo)\uff1a\u53cb\u597d\u7684\u547d\u4ee4\u884c DNS \u67e5\u8be2\u5de5\u5177\u3002\u8be5\u9879\u76ee\u662f\u7528 Go \u8bed\u8a00\u7f16\u5199\u7684\u547d\u4ee4\u884c DNS \u5ba2\u6237\u7aef\u5de5\u5177\uff0c\u5b89\u88c5\u7b80\u5355\u4e14\u5f00\u7bb1\u5373\u7528\u3002\u5b83\u63d0\u4f9b\u4e86\u53cb\u597d\u7684\u547d\u4ee4\u884c\u754c\u9762\uff0c\u53ef\u5feb\u901f\u663e\u793a DNS \u8bb0\u5f55\u4fe1\u606f\uff0c\u652f\u6301\u9ad8\u4eae\u663e\u793a\u3001\u54cd\u5e94\u65f6\u95f4\u548c\u591a\u79cd DNS \u8bb0\u5f55\u7c7b\u578b\u7b49\uff0c\u9002\u7528\u4e8e\u7f51\u7edc\u8bca\u65ad\u7b49\u573a\u666f\u3002\n```\n# Simple DNS lookup\ndoggo example.com\n\n# Query MX records using a specific nameserver\ndoggo MX github.com @9.9.9.9\n\n# Use DNS over HTTPS\ndoggo example.com @https://cloudflare-dns.com/dns-query\n\n# JSON output for scripting\ndoggo example.com --json | jq '.responses[0].answers[].address'\n\n# Reverse DNS lookup\ndoggo --reverse 8.8.8.8 --short\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/319848237.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n9\u3001[glasskube](https://hellogithub.com/periodical/statistics/click?target=https://github.com/glasskube/glasskube)\uff1a\u66f4\u5bb9\u6613\u4e0a\u624b\u7684 K8s \u5305\u7ba1\u7406\u5668\u3002\u8fd9\u662f\u4e00\u6b3e\u63d0\u4f9b\u76f4\u89c2\u56fe\u5f62\u754c\u9762\u548c\u7075\u6d3b\u547d\u4ee4\u884c\u5de5\u5177\u7684 Kubernetes \u8f6f\u4ef6\u5305\u7ba1\u7406\u5de5\u5177\u3002\u5b83\u64cd\u4f5c\u7b80\u5355\u66f4\u5bb9\u6613\u4e0a\u624b\uff0c\u652f\u6301\u81ea\u52a8\u5904\u7406\u4f9d\u8d56\u3001GitOps \u548c\u81ea\u52a8\u66f4\u65b0\u7b49\u529f\u80fd\uff0c\u7b80\u5316\u4e86\u7e41\u7410\u7684\u624b\u52a8\u914d\u7f6e\u8fc7\u7a0b\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/742106639.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n10\u3001[lancet](https://hellogithub.com/periodical/statistics/click?target=https://github.com/duke-git/lancet)\uff1a\u5168\u9762\u7684 Go \u8bed\u8a00\u5de5\u5177\u51fd\u6570\u5e93\u3002\u8fd9\u662f\u4e00\u4e2a\u9ad8\u6548\u4e14\u5168\u9762\u7684 Go \u8bed\u8a00\u5de5\u5177\u51fd\u6570\u5e93\uff0c\u5305\u542b 600 \u591a\u4e2a\u51fd\u6570\uff0c\u6db5\u76d6\u5b57\u7b26\u4e32\u5904\u7406\u3001\u5207\u7247\u64cd\u4f5c\u3001\u7f51\u7edc\u7f16\u7a0b\u3001\u5e76\u53d1\u3001\u52a0\u89e3\u5bc6\u3001\u6587\u4ef6\u5904\u7406\u3001\u65f6\u95f4/\u65e5\u671f\u3001\u6d41\u5904\u7406\u3001\u8fed\u4ee3\u5668\u7b49\u529f\u80fd\u3002\u6765\u81ea [@\u4e24\u53cc\u7b77\u5b50sqldc](https://hellogithub.com/user/5dGtvaZ6H3L4QMY) \u7684\u5206\u4eab\n```go\npackage main\n\nimport (\n    \"fmt\"\n    \"github.com/duke-git/lancet/v2/strutil\"\n)\n\nfunc main() {\n    s := \"hello\"\n    rs := strutil.Reverse(s)\n    fmt.Println(rs) //olleh\n}\n```\n\n11\u3001[neko](https://hellogithub.com/periodical/statistics/click?target=https://github.com/m1k1o/neko)\uff1a\u591a\u529f\u80fd\u7684\u865a\u62df\u6d4f\u89c8\u5668\u5de5\u5177\u3002\u8be5\u9879\u76ee\u662f\u8fd0\u884c\u5728 Docker \u5bb9\u5668\u4e2d\u7684\u81ea\u6258\u7ba1\u865a\u62df\u6d4f\u89c8\u5668\u73af\u5883\uff0c\u4e3a\u7528\u6237\u63d0\u4f9b\u5b89\u5168\u3001\u9694\u79bb\u548c\u529f\u80fd\u9f50\u5168\u7684\u865a\u62df\u6d4f\u89c8\u5668\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u652f\u6301\u5728\u7ebf\u5171\u4eab\u6d4f\u89c8\u5668\u548c\u5b9e\u65f6\u4e92\u52a8\u6f14\u793a\uff0c\u5177\u5907\u591a\u4eba\u8bbf\u95ee\u3001\u7ba1\u7406\u5458\u7528\u6237\u3001\u6587\u672c\u804a\u5929\u548c\u53cc\u5411\u6587\u4ef6\u4f20\u8f93\u7b49\u529f\u80fd\u3002\u6765\u81ea [@\u730e\u96bc\u4e36\u6b62\u6208reNo7](https://hellogithub.com/user/Ew59HqRWjPe0zZO) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/247350713.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n12\u3001[sftpgo](https://hellogithub.com/periodical/statistics/click?target=https://github.com/drakkan/sftpgo)\uff1a\u96c6\u6210\u4e91\u5b58\u50a8\u7684 SFTP \u670d\u52a1\u5668\u3002\u8be5\u9879\u76ee\u662f\u7528 Go \u7f16\u5199\u7684\u529f\u80fd\u9f50\u5168\u3001\u7075\u6d3b\u53ef\u914d\u7f6e\u7684 SFTP \u670d\u52a1\u5668\uff0c\u652f\u6301 SFTP\u3001SCP\u3001FTP/S\u3001WebDAV\u3001HTTP/S \u7b49\u591a\u79cd\u6587\u4ef6\u4f20\u8f93\u534f\u8bae\uff0c\u5e76\u517c\u5bb9\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u3001S3\u3001\u8c37\u6b4c\u4e91\u5b58\u50a8\u7b49\u591a\u79cd\u5b58\u50a8\u540e\u7aef\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u63d0\u4f9b\u4e86 Web \u754c\u9762\uff0c\u4fbf\u4e8e\u8f7b\u677e\u521b\u5efa\u548c\u7ba1\u7406\u7528\u6237\u3001\u6587\u4ef6\u5939\u3001\u7fa4\u7ec4\u7b49\u8d44\u6e90\u3002\u6765\u81ea [@\u730e\u96bc\u4e36\u6b62\u6208reNo7](https://hellogithub.com/user/Ew59HqRWjPe0zZO) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/197914161.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Java \u9879\u76ee\n13\u3001[JPlag](https://hellogithub.com/periodical/statistics/click?target=https://github.com/jplag/JPlag)\uff1a\u5f00\u6e90\u7684\u4ee3\u7801\u6284\u88ad\u68c0\u6d4b\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u68c0\u6d4b\u6e90\u4ee3\u7801\u76f8\u4f3c\u5ea6\u7684\u5de5\u5177\uff0c\u652f\u6301 Java\u3001C/C++\u3001Python\u3001JavaScript \u7b49\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u9002\u7528\u4e8e\u8bc6\u522b\u7f16\u7a0b\u4f5c\u4e1a\u4e2d\u7684\u6284\u88ad\u884c\u4e3a\u7b49\u573a\u666f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/32648170.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n14\u3001[MooTool](https://hellogithub.com/periodical/statistics/click?target=https://github.com/rememberber/MooTool)\uff1a\u8de8\u5e73\u53f0\u7684\u5f00\u53d1\u8005\u5de5\u5177\u7bb1\u3002\u8fd9\u662f\u4e00\u6b3e\u7528 Java \u5f00\u53d1\u7684\u5f00\u53d1\u8005\u5e38\u7528\u5de5\u5177\u7684\u684c\u9762\u5e94\u7528\uff0c\u652f\u6301 Windows\u3001macOS \u548c Linux \u7cfb\u7edf\u3002\u5b83\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u591a\u79cd\u5b9e\u7528\u5de5\u5177\uff0c\u5982\u6587\u672c\u8f6c\u6362\u3001\u65f6\u95f4\u5904\u7406\u3001JSON \u683c\u5f0f\u5316\u548c\u6b63\u5219\u5339\u914d\u6d4b\u8bd5\u7b49\u3002\u6765\u81ea [@\u5468\u6ce2](https://hellogithub.com/user/0UhXFJvP9ndHtiB) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/214978063.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### JavaScript \u9879\u76ee\n15\u3001[paint-board](https://hellogithub.com/periodical/statistics/click?target=https://github.com/LHRUN/paint-board)\uff1a\u7b80\u6d01\u6613\u7528\u7684 Web \u7aef\u521b\u610f\u753b\u677f\u3002\u8fd9\u662f\u4e00\u6b3e\u652f\u6301\u79fb\u52a8\u7aef\u7684 Web \u753b\u677f\u5e94\u7528\uff0c\u5b83\u96c6\u6210\u4e86\u591a\u79cd\u521b\u610f\u753b\u7b14\u548c\u7ed8\u753b\u529f\u80fd\uff0c\u652f\u6301\u5f62\u72b6\u7ed8\u5236\u3001\u6a61\u76ae\u64e6\u3001\u81ea\u5b9a\u4e49\u753b\u677f\u7b49\u64cd\u4f5c\uff0c\u5e76\u53ef\u4ee5\u5c06\u4f5c\u54c1\u4fdd\u5b58\u4e3a\u56fe\u7247\u3002\u6765\u81ea [@Leo Song](https://hellogithub.com/user/T1MwoAkuxOfqarN) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/534574923.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n16\u3001[PptxGenJS](https://hellogithub.com/periodical/statistics/click?target=https://github.com/gitbrent/PptxGenJS)\uff1a\u521b\u5efa\u6f14\u793a\u6587\u7a3f\uff08PPT\uff09\u7684 JavaScript \u5e93\u3002\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u751f\u6210 PPT \u6587\u4ef6\u7684 JavaScript \u5e93\uff0c\u5b83\u4e0a\u624b\u65e0\u95e8\u69db\u3001\u529f\u80fd\u5f3a\u5927\uff0c\u652f\u6301\u6dfb\u52a0\u56fe\u8868\u3001\u8868\u683c\u3001SVG\u3001GIF \u7b49\u5185\u5bb9\uff0c\u5e76\u4e14\u751f\u6210\u7684\u6587\u4ef6\u517c\u5bb9 PowerPoint \u548c Keynote \u7b49\u5e94\u7528\u3002\u6765\u81ea [@Fenix](https://hellogithub.com/user/4dzVMWGUfYLPpak) \u7684\u5206\u4eab\n```typescript\nimport pptxgen from \"pptxgenjs\";\n\n// 1. Create a new Presentation\nlet pres = new pptxgen();\n\n// 2. Add a Slide\nlet slide = pres.addSlide();\n\n// 3. Add one or more objects (Tables, Shapes, Images, Text and Media) to the Slide\nlet textboxText = \"Hello World from PptxGenJS!\";\nlet textboxOpts = { x: 1, y: 1, color: \"363636\" };\nslide.addText(textboxText, textboxOpts);\n\n// 4. Save the Presentation\npres.writeFile();\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/52322425.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n17\u3001[Reactive-Resume](https://hellogithub.com/periodical/statistics/click?target=https://github.com/AmruthPillai/Reactive-Resume)\uff1a\u514d\u8d39\u5f00\u6e90\u7684\u7b80\u5386\u8bbe\u8ba1\u5e73\u53f0\u3002\u8fd9\u662f\u4e00\u4e2a\u514d\u8d39\u3001\u5f00\u6e90\u3001\u65e0\u5e7f\u544a\u7684\u5728\u7ebf\u7b80\u5386\u5236\u4f5c\u5e73\u53f0\uff0c\u5185\u7f6e 12 \u6b3e\u4e13\u4e1a\u7684\u7b80\u5386\u6a21\u677f\uff0c\u652f\u6301\u591a\u8bed\u8a00\u3001PDF \u5bfc\u51fa\u548c OpenAI \u96c6\u6210\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/249995750.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n18\u3001[vue-XiuXianGame](https://hellogithub.com/periodical/statistics/click?target=https://github.com/setube/vue-XiuXianGame)\uff1a\u5f00\u6e90\u7684\u6587\u5b57\u4fee\u4ed9\u6e38\u620f\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e Vue.js \u5f00\u53d1\u7684\u4fee\u4ed9\u6a21\u62df\u5668\uff0c\u4e92\u52a8\u5f0f\u7684\u6587\u5b57\u6e38\u620f\uff0c\u9002\u5408\u559c\u6b22\u653e\u7f6e\u7c7b\u548c\u4fee\u4ed9\u9898\u6750\u6e38\u620f\u7684\u73a9\u5bb6\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/828462853.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n19\u3001[xyflow](https://hellogithub.com/periodical/statistics/click?target=https://github.com/xyflow/xyflow)\uff1a\u5f3a\u5927\u7075\u6d3b\u7684\u6d41\u7a0b\u56fe\u5f15\u64ce\u3002\u8be5\u9879\u76ee\u662f\u7528\u4e8e\u6784\u5efa\u57fa\u4e8e\u8282\u70b9\u7684\u7f16\u8f91\u5668\u548c\u4ea4\u4e92\u5f0f\u56fe\u8868\uff0c\u652f\u6301 React \u548c Svelte \u6846\u67b6\u3002\u5b83\u5f00\u7bb1\u5373\u7528\u4e14\u9ad8\u5ea6\u53ef\u5b9a\u5236\uff0c\u9002\u7528\u4e8e\u5f00\u53d1\u5de5\u4f5c\u6d41\u548c\u6d41\u7a0b\u56fe\u7b49\u573a\u666f\u3002\u6765\u81ea [@\u5854\u5496](https://hellogithub.com/user/bzJpGyu0IanC6L7) \u7684\u5206\u4eab\n```typescript\nconst initialNodes = [\n{ id: '1', position: { x: 0, y: 0 }, data: { label: '1' } },\n{ id: '2', position: { x: 0, y: 100 }, data: { label: '2' } },\n];\n\nconst initialEdges = [{ id: 'e1-2', source: '1', target: '2' }];\n\nfunction Flow() {\nconst [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\nconst [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n\nconst onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), [setEdges]);\n\nreturn (\n  <ReactFlow\n    nodes={nodes}\n    edges={edges}\n    onNodesChange={onNodesChange}\n    onEdgesChange={onEdgesChange}\n    onConnect={onConnect}\n  >\n    <MiniMap />\n    <Controls />\n    <Background />\n  </ReactFlow>\n);\n}\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/197018189.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Kotlin \u9879\u76ee\n20\u3001[Android-DataBackup](https://hellogithub.com/periodical/statistics/click?target=https://github.com/XayahSuSuSu/Android-DataBackup)\uff1aAndroid \u7684\u6570\u636e\u5907\u4efd\u5e94\u7528\u3002\u8be5\u9879\u76ee\u4e3a Android 7.0 \u53ca\u4ee5\u4e0a\u7cfb\u7edf\uff0c\u63d0\u4f9b\u4e86\u5e94\u7528\u6570\u636e\u7684\u5907\u4efd\u548c\u6062\u590d\u529f\u80fd\uff0c\u89e3\u51b3\u4e86\u6362\u673a\u540e\u5e94\u7528\u9700\u8981\u91cd\u65b0\u767b\u5f55\u6216\u4e0b\u8f7d\u989d\u5916\u6570\u636e\u5305\u7b49\u95ee\u9898\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/430540203.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n21\u3001[BinaryEye](https://hellogithub.com/periodical/statistics/click?target=https://github.com/markusfisch/BinaryEye)\uff1aAndroid \u7684\u6761\u5f62\u7801\u626b\u63cf\u5e94\u7528\u3002\u8fd9\u662f\u4e00\u6b3e\u7b80\u5355\u6613\u7528\u3001\u65e0\u5e7f\u544a\u7684 Android \u6761\u5f62\u7801\u548c\u4e8c\u7ef4\u7801\u626b\u63cf\u5668\uff0c\u652f\u6301\u5feb\u901f\u8bc6\u522b\u591a\u79cd\u7c7b\u578b\u7684\u6761\u5f62\u7801\u548c\u4e8c\u7ef4\u7801\uff0c\u5e76\u63d0\u4f9b\u4e8c\u7ef4\u7801/\u6761\u5f62\u7801\u751f\u6210\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/101552674.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### PHP \u9879\u76ee\n22\u3001[cachet](https://hellogithub.com/periodical/statistics/click?target=https://github.com/cachethq/cachet)\uff1aPHP \u5199\u7684\u670d\u52a1\u8fd0\u884c\u72b6\u6001\u9875\u9762\u3002\u8be5\u9879\u76ee\u662f\u91c7\u7528 Laravel+Bootstrap \u6784\u5efa\u7684\u670d\u52a1\u72b6\u6001\u76d1\u63a7\u548c\u7ba1\u7406\u5e73\u53f0\uff0c\u514d\u8d39\u4e14\u5f00\u6e90\u3002\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u81ea\u52a8\u76d1\u63a7\u670d\u52a1\u7684\u6b63\u5e38\u8fd0\u884c\u65f6\u95f4\uff0c\u8fd8\u63d0\u4f9b\u4e86\u7ba1\u7406\u540e\u53f0\u652f\u6301\u4e3b\u52a8\u8bb0\u5f55\u548c\u7ef4\u62a4\u4e8b\u6545\u4fe1\u606f\uff0c\u652f\u6301\u591a\u8bed\u8a00\u3001\u81ea\u6258\u7ba1\u3001\u79fb\u52a8\u7aef\u9002\u914d\u548c\u90ae\u4ef6\u901a\u77e5\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/26730195.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n23\u3001[minimalist-web-notepad](https://hellogithub.com/periodical/statistics/click?target=https://github.com/pereorga/minimalist-web-notepad)\uff1a\u6781\u7b80\u7684\u5728\u7ebf\u8bb0\u4e8b\u672c\u5e94\u7528\u3002\u8be5\u9879\u76ee\u662f\u91c7\u7528 PHP \u7f16\u5199\u7684 Web \u8bb0\u4e8b\u672c\u5de5\u5177\uff0c\u6838\u5fc3\u529f\u80fd\u4ec5\u901a\u8fc7\u4e00\u4e2a\u6587\u4ef6\u5b9e\u73b0\u3002\u5b83\u63d0\u4f9b\u4e86\u5728\u7ebf\u7f16\u8f91\u3001\u81ea\u52a8\u4fdd\u5b58\u548c\u5206\u4eab\u7b14\u8bb0\u7684\u529f\u80fd\uff0c\u7528\u6237\u65e0\u9700\u6ce8\u518c\u548c\u767b\u5f55\u5373\u53ef\u4f7f\u7528\uff0c\u9002\u5408\u4e34\u65f6\u8bb0\u5f55\u3001\u5feb\u901f\u4fdd\u5b58\u548c\u5206\u4eab\u6587\u5b57\u7684\u573a\u666f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/5299409.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Python \u9879\u76ee\n24\u3001[Box](https://hellogithub.com/periodical/statistics/click?target=https://github.com/cdgriffith/Box)\uff1a\u9ad8\u7ea7\u5b57\u5178\u64cd\u4f5c\u7684 Python \u5e93\u3002\u8fd9\u662f\u4e00\u4e2a\u63d0\u5347 Python \u5b57\u5178\u6613\u7528\u6027\u7684\u5e93\uff0c\u517c\u5bb9\u539f\u751f\u5b57\u5178\u3002\u5b83\u652f\u6301\u70b9\u8868\u793a\u6cd5\uff08dict.user.name\uff09\u8f7b\u677e\u8bbf\u95ee\u548c\u8bbe\u7f6e\u503c\uff0c\u5e76\u80fd\u81ea\u52a8\u521b\u5efa\u7f3a\u5931\u7684\u952e\uff0c\u907f\u514d\u51fa\u73b0 KeyError \u5f02\u5e38\u3002\u6765\u81ea [@Bit0rls1Mc](https://hellogithub.com/user/F7PCYiI3d9WBfpZ) \u7684\u5206\u4eab\n```python\nfrom box import Box\n\nhg_box = Box({ \"HelloGitHub\": { \"star\": \"89k\", \"fork\": \"9.5k\" } })\nhg_box.HelloGitHub.star\n# 89k\nhg_box.to_json(filename=\"hg.json\")\nnew_box = Box.from_json(filename=\"hg.json\")\nnew_box.keys()\n# dict_keys(['HelloGitHub'])\n```\n\n25\u3001[Game-Cheats-Manager](https://hellogithub.com/periodical/statistics/click?target=https://github.com/dyang886/Game-Cheats-Manager)\uff1a\u6e38\u620f\u4fee\u6539\u5668\u7ba1\u7406\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u5f3a\u5927\u7684\u6e38\u620f\u4fee\u6539\u5668\u7ba1\u7406\u5de5\u5177\uff0c\u652f\u6301\u641c\u7d22\u3001\u4e0b\u8f7d\u3001\u542f\u52a8\u3001\u5bfc\u5165\u548c\u66f4\u65b0\u6e38\u620f\u4fee\u6539\u5668\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/737509032.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n26\u3001[linkding](https://hellogithub.com/periodical/statistics/click?target=https://github.com/sissbruecker/linkding)\uff1a\u6781\u7b80\u7684\u6d4f\u89c8\u5668\u4e66\u7b7e\u7ba1\u7406\u5e73\u53f0\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e Django \u6784\u5efa\u7684\u6d4f\u89c8\u5668\u4e66\u7b7e\u7ba1\u7406\u5e73\u53f0\uff0c\u5b83\u63d0\u4f9b\u4e86\u7b80\u6d01\u6613\u7528\u7684 Web \u754c\u9762\u548c\u5f3a\u5927\u7684\u641c\u7d22\u529f\u80fd\uff0c\u652f\u6301\u6807\u7b7e\u5206\u7c7b\u3001\u6279\u91cf\u7f16\u8f91\u548c\u7a0d\u540e\u9605\u8bfb\u7b49\u529f\u80fd\uff0c\u5e76\u914d\u6709 Chrome \u548c Firefox \u63d2\u4ef6\uff0c\u65b9\u4fbf\u7528\u6237\u968f\u65f6\u968f\u5730\u4fdd\u5b58\u548c\u8bbf\u95ee\u4e66\u7b7e\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/194212327.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n27\u3001[mkdocs-material](https://hellogithub.com/periodical/statistics/click?target=https://github.com/squidfunk/mkdocs-material)\uff1a\u5feb\u901f\u751f\u6210 Material \u98ce\u683c\u7684\u6587\u6863\u7f51\u7ad9\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e MkDocs \u6784\u5efa\u7684\u7f8e\u89c2\u4e14\u529f\u80fd\u4e30\u5bcc\u7684\u6587\u6863\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u652f\u6301 Markdown\u3001\u641c\u7d22\u3001\u79fb\u52a8\u7aef\u9002\u914d\u3001\u591a\u8bed\u8a00\u7b49\u529f\u80fd\uff0c\u9002\u7528\u4e8e\u5feb\u901f\u521b\u5efa\u6280\u672f\u6587\u6863\u3001\u4ea7\u54c1\u624b\u518c\u548c\u6559\u7a0b\u7b49\u7c7b\u578b\u7684\u7f51\u7ad9\u3002\u6765\u81ea [@\u730e\u96bc\u4e36\u6b62\u6208reNo7](https://hellogithub.com/user/Ew59HqRWjPe0zZO) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/50617428.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n28\u3001[SeleniumBase](https://hellogithub.com/periodical/statistics/click?target=https://github.com/seleniumbase/SeleniumBase)\uff1a\u529f\u80fd\u5168\u9762\u7684\u6d4f\u89c8\u5668\u81ea\u52a8\u5316\u6846\u67b6\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e Selenium \u7684 Python \u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6\uff0c\u96c6\u6210\u4e86\u722c\u866b\u3001\u81ea\u52a8\u5316\u6d4b\u8bd5\u548c\u751f\u6210\u62a5\u544a\u7b49\u591a\u79cd\u529f\u80fd\u3002\u5b83\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u793a\u4f8b\uff0c\u5e76\u4e14\u72ec\u7279\u7684 UC \u6a21\u5f0f\uff0c\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u5728\u8fdb\u884c\u6d4f\u89c8\u5668\u81ea\u52a8\u5316\u64cd\u4f5c\u65f6\u907f\u514d\u88ab\u68c0\u6d4b\u51fa\u6765\u3002\n```python\nfrom seleniumbase import BaseCase\nBaseCase.main(__name__, __file__)\n\nclass TestSimpleLogin(BaseCase):\n    def test_simple_login(self):\n        self.open(\"seleniumbase.io/simple/login\")\n        self.type(\"#username\", \"demo_user\")\n        self.type(\"#password\", \"secret_pass\")\n        self.click('a:contains(\"Sign in\")')\n        self.assert_exact_text(\"Welcome!\", \"h1\")\n        self.assert_element(\"img#image1\")\n        self.highlight(\"#image1\")\n        self.click_link(\"Sign out\")\n        self.assert_text(\"signed out\", \"#top_message\")\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/17420614.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Rust \u9879\u76ee\n29\u3001[abstreet](https://hellogithub.com/periodical/statistics/click?target=https://github.com/a-b-street/abstreet)\uff1a\u5f00\u6e90\u7684\u57ce\u5e02\u4ea4\u901a\u6a21\u62df\u5668\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 Rust \u7f16\u5199\u7684\u57ce\u5e02\u4ea4\u901a\u6a21\u62df\u5de5\u5177\uff0c\u652f\u6301\u6a21\u62df\u591a\u79cd\u4ea4\u901a\u65b9\u5f0f\uff0c\u5305\u62ec\u79c1\u5bb6\u8f66\u3001\u516c\u5171\u4ea4\u901a\u3001\u6b65\u884c\u548c\u81ea\u884c\u8f66\u3002\u7528\u6237\u53ef\u4ee5\u5728\u8f6f\u4ef6\u4e2d\u6a21\u62df\u4e0d\u540c\u7684\u4ea4\u901a\u7b56\u7565\u548c\u57fa\u7840\u8bbe\u65bd\u8c03\u6574\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/135952436.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n30\u3001[delta](https://hellogithub.com/periodical/statistics/click?target=https://github.com/dandavison/delta)\uff1a\u63d0\u5347 Git \u5dee\u5f02\u53ef\u8bfb\u6027\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 Rust \u5199\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u80fd\u591f\u4ee5\u66f4\u6e05\u6670\u3001\u7f8e\u89c2\u7684\u65b9\u5f0f\u5c55\u793a Git \u7684 diff\u3001blame \u548c grep \u547d\u4ee4\u3002\u5b83\u652f\u6301\u663e\u793a\u884c\u53f7\u3001\u8bed\u6cd5\u9ad8\u4eae\u548c\u66f4\u667a\u80fd\u7684\u884c\u5185\u5dee\u5f02\u663e\u793a\u7b49\u529f\u80fd\uff0c\u53ef\u65e0\u7f1d\u96c6\u6210\u5230 Git \u5de5\u4f5c\u6d41\u4e2d\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/193526915.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n31\u3001[dust](https://hellogithub.com/periodical/statistics/click?target=https://github.com/bootandy/dust)\uff1a\u5feb\u901f\u663e\u793a\u786c\u76d8\u4f7f\u7528\u60c5\u51b5\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u53ef\u89c6\u5316\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u540d\u5b57\u6e90\u81ea du \u548c Rust \u7f16\u7a0b\u8bed\u8a00\u7ec4\u5408\u3002\u5b83\u4f53\u79ef\u5c0f\u5de7\u3001\u8fd0\u884c\u901f\u5ea6\u5feb\uff0c\u80fd\u591f\u4ee5\u76f4\u89c2\u7684\u65b9\u5f0f\u5c55\u793a\u78c1\u76d8\u7a7a\u95f4\u6982\u89c8\u3002\u6765\u81ea [@DeShuiYu](https://hellogithub.com/user/ZWJkOqsvYbPgD8p) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/125563061.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n32\u3001[mail-server](https://hellogithub.com/periodical/statistics/click?target=https://github.com/stalwartlabs/mail-server)\uff1a\u5b89\u5168\u4e14\u6613\u4e8e\u90e8\u7f72\u7684\u90ae\u4ef6\u670d\u52a1\u3002\u8be5\u9879\u76ee\u662f\u7528 Rust \u7f16\u5199\u7684\u90ae\u4ef6\u670d\u52a1\u5668\uff0c\u652f\u6301 SMTP\u3001IMAP \u548c POP3 \u7b49\u5e38\u89c1\u90ae\u4ef6\u534f\u8bae\uff0c\u5185\u7f6e\u5f3a\u5927\u7684\u5783\u573e\u90ae\u4ef6\u548c\u9493\u9c7c\u7f51\u7ad9\u8fc7\u6ee4\u5668\u3002\u6765\u81ea [@Mauro D.](https://hellogithub.com/user/ogvJ1bR2hPjHkVy) \u7684\u5206\u4eab\n\n### Swift \u9879\u76ee\n33\u3001[Pearcleaner](https://hellogithub.com/periodical/statistics/click?target=https://github.com/alienator88/Pearcleaner)\uff1a\u514d\u8d39\u7684 Mac \u5e94\u7528\u6e05\u7406\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u514d\u8d39\u5f00\u6e90\u7684 Mac \u5e94\u7528\u6e05\u7406\u5de5\u5177\uff0c\u80fd\u591f\u5f7b\u5e95\u5378\u8f7d\u5e94\u7528\u5e76\u6e05\u7406\u6b8b\u7559\u6587\u4ef6\u3002\u5b83\u91c7\u7528 SwiftUI \u5f00\u53d1\uff0c\u63d0\u4f9b\u4e86\u7b80\u5355\u6613\u7528\u7684\u754c\u9762\uff0c\u652f\u6301\u53f3\u952e\u5378\u8f7d\u3001\u8ff7\u4f60\u6a21\u5f0f\u548c Homebrew \u6e05\u7406\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/717960955.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u4eba\u5de5\u667a\u80fd\n34\u3001[k8sgpt](https://hellogithub.com/periodical/statistics/click?target=https://github.com/k8sgpt-ai/k8sgpt)\uff1aKubernetes \u6545\u969c\u8bca\u65ad AI \u52a9\u624b\u3002\u8be5\u9879\u76ee\u5229\u7528 LLM \u81ea\u52a8\u5206\u6790 Kubernetes \u96c6\u7fa4\u95ee\u9898\uff0c\u5e76\u7ed9\u51fa\u6545\u969c\u8bca\u65ad\u548c\u4f18\u5316\u5efa\u8bae\u3002\u5b83\u901a\u8fc7\u8bfb\u53d6\u96c6\u7fa4\u7684\u72b6\u6001\u6570\u636e\u548c\u914d\u7f6e\uff0c\u751f\u6210\u9760\u8c31\u7684\u8bca\u65ad\u62a5\u544a\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/617152691.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n35\u3001[llama_index](https://hellogithub.com/periodical/statistics/click?target=https://github.com/run-llama/llama_index)\uff1a\u5927\u578b\u8bed\u8a00\u6a21\u578b\u7684\u6570\u636e\u6846\u67b6\u3002\u8be5\u9879\u76ee\u662f\u4e13\u4e3a LLM \u5e94\u7528\u8bbe\u8ba1\u7684\u6570\u636e\u6846\u67b6\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u5c06\u79c1\u6709\u6570\u636e\u4e0e LLM \u8f7b\u677e\u7ed3\u5408\u3002\u5b83\u63d0\u4f9b\u4e86\u6570\u636e\u8fde\u63a5\u5668\uff0c\u652f\u6301\u4ece API\u3001PDF\u3001\u6587\u6863\u3001SQL \u7b49\u591a\u79cd\u6570\u636e\u6e90\u6784\u5efa\u7d22\u5f15\uff0c\u5e76\u7b80\u5316\u6570\u636e\u5bfc\u5165\u548c\u67e5\u8be2\u64cd\u4f5c\uff0c\u8ba9\u521d\u5b66\u8005\u4e5f\u80fd\u7528\u51e0\u884c\u4ee3\u7801\u5b8c\u6210 LLMs \u4e0a\u4e0b\u6587\u589e\u5f3a\u3002\n```python\nfrom llama_index.core import VectorStoreIndex, SimpleDirectoryReader\n\ndocuments = SimpleDirectoryReader(\"data\").load_data()\nindex = VectorStoreIndex.from_documents(documents)\nquery_engine = index.as_query_engine()\nresponse = query_engine.query(\"Some question about the data should go here\")\nprint(response)\n```\n\n36\u3001[RAG_Techniques](https://hellogithub.com/periodical/statistics/click?target=https://github.com/NirDiamant/RAG_Techniques)\uff1a\u68c0\u7d22\u589e\u5f3a\u751f\u6210\uff08RAG\uff09\u6559\u7a0b\u96c6\u5408\u3002\u8be5\u9879\u76ee\u63d0\u4f9b\u4e86 20 \u591a\u79cd\u5148\u8fdb\u7684 RAG \u6280\u672f\u6559\u7a0b\uff0c\u5305\u542b\u5b9e\u73b0\u6307\u5357\u548c\u793a\u4f8b\u4ee3\u7801\uff0c\u5e76\u5b9a\u671f\u66f4\u65b0\u3002\u5185\u5bb9\u6db5\u76d6\u68c0\u7d22\u67e5\u8be2\u3001\u4e0a\u4e0b\u6587\u589e\u5f3a\u3001\u878d\u5408\u68c0\u7d22\uff08Fusion Retrieval\uff09\u3001\u5206\u5c42\u7d22\u5f15\u3001\u4e0a\u4e0b\u6587\u538b\u7f29\u3001\u77e5\u8bc6\u56fe\u8c31\u6574\u5408\u7b49\u591a\u79cd RAG \u6280\u672f\u3002\n\n37\u3001[video2x](https://hellogithub.com/periodical/statistics/click?target=https://github.com/k4yt3x/video2x)\uff1a\u89c6\u9891\u548c\u56fe\u50cf\u65e0\u635f\u653e\u5927\u5de5\u5177\u3002\u8be5\u9879\u76ee\u96c6\u6210\u4e86\u591a\u79cd\u8d85\u5206\u8fa8\u7387\u7b97\u6cd5\uff08\u5982 Waifu2x\u3001Anime4K\u3001Real-ESRGAN\uff09\uff0c\u80fd\u591f\u6709\u6548\u63d0\u9ad8\u89c6\u9891\u548c\u56fe\u50cf\u7684\u5206\u8fa8\u7387\uff0c\u5e76\u63d0\u4f9b\u4e86\u56fe\u5f62\u754c\u9762\uff08GUI\uff09\u3001Docker \u548c\u547d\u4ee4\u884c\u754c\u9762\uff08CLI\uff09\u7684\u4f7f\u7528\u65b9\u5f0f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/122758193.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5176\u5b83\n38\u3001[deskreen](https://hellogithub.com/periodical/statistics/click?target=https://github.com/pavlobu/deskreen)\uff1a\u80fd\u5c06\u4efb\u4f55\u8bbe\u5907\u53d8\u4e3a\u7535\u8111\u7b2c\u4e8c\u5c4f\u5e55\u7684\u5de5\u5177\u3002\u8be5\u9879\u76ee\u5229\u7528 WebRTC \u6280\u672f\u5c06\u7535\u8111\u5c4f\u5e55\uff0c\u901a\u8fc7 WiFi \u955c\u50cf\u5230\u5177\u6709 Web \u6d4f\u89c8\u5668\u7684\u8bbe\u5907\u5c4f\u5e55\u4e0a\uff0c\u5b9e\u73b0\u5c4f\u5e55\u5171\u4eab\u529f\u80fd\uff0c\u4f7f\u5176\u6210\u4e3a\u7535\u8111\u7684\u8f85\u52a9\u663e\u793a\u5668\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/286047827.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n39\u3001[Kazumi](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Predidit/Kazumi)\uff1a\u8de8\u5e73\u53f0\u7684\u8ffd\u756a\u795e\u5668\u3002\u8fd9\u662f\u4e00\u6b3e\u91c7\u7528 Flutter \u5f00\u53d1\u7684\u756a\u5267\u91c7\u96c6\u5e94\u7528\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49 Xpath \u89c4\u5219\uff0c\u5b9e\u73b0\u91c7\u96c6\u3001\u8ffd\u8e2a\u3001\u641c\u7d22\u548c\u5728\u7ebf\u89c2\u770b\u52a8\u6f2b\uff0c\u652f\u6301\u5b57\u5e55\u3001\u5f39\u5e55\u3001\u65f6\u95f4\u8868\u3001\u786c\u4ef6\u52a0\u901f\u548c\u65e0\u7ebf\u6295\u5c4f\u7b49\u529f\u80fd\uff0c\u9002\u7528\u4e8e Android\u3001Windows \u548c macOS \u7b49\u5e73\u53f0\u3002\u6765\u81ea [@Micro\u00b7J](https://hellogithub.com/user/L2Xx0OfvPzpYt4u) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/798049841.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n40\u3001[open-and-shut](https://hellogithub.com/periodical/statistics/click?target=https://github.com/veggiedefender/open-and-shut)\uff1a\u7b14\u8bb0\u672c\u76d6\u7684\u65b0\u73a9\u6cd5\u3002\u8fd9\u662f\u4e00\u4e2a\u901a\u8fc7\u53cd\u590d\u5408\u4e0a\u548c\u6253\u5f00\u7b14\u8bb0\u672c\u7535\u8111\u7684\u76d6\u5b50\uff0c\u8f93\u5165\u6469\u65af\u7535\u7801\u7684\u5de5\u5177\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/251081242.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n41\u3001[rime-ice](https://hellogithub.com/periodical/statistics/click?target=https://github.com/iDvel/rime-ice)\uff1a\u5f00\u7bb1\u5373\u7528\u7684 RIME \u8f93\u5165\u6cd5\u914d\u7f6e\u3002\u8fd9\u662f\u4e00\u4efd RIME \u8f93\u5165\u6cd5\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u9700\u8981\u914d\u5408 RIME \u5ba2\u6237\u7aef\u4f7f\u7528\u3002\u5b83\u63d0\u4f9b\u4e86\u9ad8\u8d28\u91cf\u3001\u957f\u671f\u7ef4\u62a4\u7684\u7b80\u4f53\u4e2d\u6587\u8bcd\u5e93\uff0c\u5e76\u4f18\u5316\u4e86\u82f1\u6587\u8f93\u5165\u4f53\u9a8c\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/334110599.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n42\u3001[vCards](https://hellogithub.com/periodical/statistics/click?target=https://github.com/metowolf/vCards)\uff1a\u5f00\u6e90\u7684\u7535\u5b50\u540d\u7247\u6587\u4ef6\u3002\u8be5\u9879\u76ee\u6536\u96c6\u5e76\u6574\u7406\u4e86\u5e38\u7528\u8054\u7cfb\u4eba\u7684\u53f7\u7801\u548c\u5934\u50cf\uff0c\u4f18\u5316\u4e86\u624b\u673a\u6765\u7535\u548c\u901a\u8baf\u5f55\u4fe1\u606f\u754c\u9762\u7684\u4f53\u9a8c\uff0c\u652f\u6301\u8ba2\u9605\uff08\u81ea\u52a8\u66f4\u65b0\uff09\u548c\u624b\u52a8\u5bfc\u5165 vcf \u6587\u4ef6\u4e24\u79cd\u4f7f\u7528\u65b9\u5f0f\u3002\u6765\u81ea [@Mingo](https://hellogithub.com/user/auVvsjDMeyQW7nc) \u7684\u5206\u4eab\n\n43\u3001[Watchy](https://hellogithub.com/periodical/statistics/click?target=https://github.com/sqfmi/Watchy)\uff1a\u5f00\u6e90\u7535\u5b50\u58a8\u6c34\u5c4f\u667a\u80fd\u624b\u8868\u3002\u8be5\u9879\u76ee\u662f\u91c7\u7528 ESP32-PICO-D4 \u548c\u7535\u5b50\u58a8\u6c34\u5c4f\u5236\u4f5c\u7684\u4e00\u6b3e\u667a\u80fd\u624b\u8868\uff0c\u652f\u6301\u65e5\u5386\u3001\u95f9\u949f\u3001\u6b65\u6570\u3001\u624b\u52bf\u68c0\u6d4b\uff0c\u4ee5\u53ca WiFi \u548c\u84dd\u7259\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/220497210.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5f00\u6e90\u4e66\u7c4d\n44\u3001[grammar-club](https://hellogithub.com/periodical/statistics/click?target=https://github.com/llwslc/grammar-club)\uff1a\u300a\u8bed\u6cd5\u4ff1\u4e50\u90e8\u300b\u3002\u8fd9\u662f\u65cb\u5143\u4f51\u8001\u5e08\u5199\u7684\u4e00\u672c\u82f1\u8bed\u8bed\u6cd5\u4e66\u7c4d\uff0c\u65e8\u5728\u5e2e\u52a9\u8bfb\u8005\u5efa\u7acb\u624e\u5b9e\u7684\u8bed\u6cd5\u57fa\u7840\uff0c\u9002\u5408\u5404\u4e2a\u6c34\u5e73\u7684\u82f1\u8bed\u5b66\u4e60\u8005\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/101/190264619.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n\n\n<p align=\"center\">\n    <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub100.md\">\u300e\u4e0a\u4e00\u671f\u300f</a> | <a href='https://github.com/521xueweihan/HelloGitHub/issues/899'>\u53cd\u9988\u548c\u5efa\u8bae</a> | <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub102.md\">\u300e\u4e0b\u4e00\u671f\u300f</a>\n</p>\n\n---\n<p align=\"center\">\n    \ud83d\udc49 <a href='https://hellogithub.com/periodical'>\u6765\uff01\u63a8\u8350\u5f00\u6e90\u9879\u76ee</a> \ud83d\udc48<br>\n    \u5fae\u4fe1\u4e2d\u641c\uff1a<strong>HelloGitHub</strong> \u5173\u6ce8\u516c\u4f17\u53f7<br>\n    \u4e0d\u4ec5\u80fd\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\uff0c\u8fd8\u6709\u56de\u9988\u7c89\u4e1d\u7684\u6d3b\u52a8<br>\n    \u5982\u679c\u6587\u4e2d\u7684\u56fe\u5237\u4e0d\u51fa\u6765\uff0c\u53ef\u4ee5\u70b9\u51fb <a href='https://hellogithub.com/periodical/volume/101'>\u8fd9\u91cc</a>\u3002\n</p>\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "content/HelloGitHub102.md", "size": 28625, "license": "NOASSERTION", "content_sha": "e4bbd6731a57088014a1378ef178b45d561ad121", "findings": [], "content": "# \u300aHelloGitHub\u300b\u7b2c 102 \u671f\n> \u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c**HelloGitHub** \u8ba9\u4f60\u5bf9\u5f00\u6e90\u611f\u5174\u8da3\uff01\n<p align=\"center\">\n    <img src='https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg' style=\"max-width:100%;\"></img>\n</p>\n\n## \u76ee\u5f55\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 **\u300c\u76ee\u5f55\u300d** \u56fe\u6807\u6253\u5f00\u76ee\u5f55\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n![](https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png)\n\n**Tips**\uff1a\u5982\u679c\u9047\u5230\u56fe\u7247\u5237\u4e0d\u51fa\u6765\u7684\u60c5\u51b5\uff0c[\u70b9\u51fb](https://hellogithub.com/periodical/volume/102) \u6362\u4e00\u79cd\u6d4f\u89c8\u65b9\u5f0f\u3002\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\" style=\"max-width:30%;\"></img><br>\n\u5173\u6ce8\u300cHelloGitHub\u300d\u516c\u4f17\u53f7\uff0c\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\n</p>\n\n## \u5185\u5bb9\n> **\u4ee5\u4e0b\u4e3a\u672c\u671f\u5185\u5bb9**\uff5c\u6bcf\u4e2a\u6708 **28** \u53f7\u66f4\u65b0\n\n### C \u9879\u76ee\n1\u3001[Ditto](https://hellogithub.com/periodical/statistics/click?target=https://github.com/sabrogden/Ditto)\uff1aWindows \u7684\u526a\u8d34\u677f\u5386\u53f2\u7ba1\u7406\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u514d\u8d39\u7684 Windows \u526a\u8d34\u677f\u589e\u5f3a\u5de5\u5177\u3002\u5b83\u80fd\u591f\u5c06\u590d\u5236\u5230\u526a\u8d34\u677f\u7684\u5185\u5bb9\u5b58\u50a8\u5230\u6570\u636e\u5e93\u4e2d\uff08SQLite\uff09\uff0c\u65b9\u4fbf\u65e5\u540e\u68c0\u7d22\uff0c\u652f\u6301\u8bbe\u5b9a\u4fdd\u5b58\u65e5\u671f\u3001\u6761\u76ee\u603b\u6570\u3001\u5408\u5e76\u7c98\u8d34\u3001\u5206\u7ec4\u3001\u5feb\u901f\u641c\u7d22\u548c\u70ed\u952e\u7c98\u8d34\u7b49\u529f\u80fd\u3002\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u5171\u4eab\u526a\u8d34\u677f\u5185\u5bb9\uff0c\u5e76\u5bf9\u4f20\u8f93\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\u4fdd\u62a4\u3002\u6765\u81ea [@Veeja Liu](https://hellogithub.com/user/70zTMbIqVf9dvZp) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/312430210.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n2\u3001[FlappyBird](https://hellogithub.com/periodical/statistics/click?target=https://github.com/VadimBoev/FlappyBird)\uff1a\u4ec5 100KB \u7684\u50cf\u7d20\u9e1f\u6e38\u620f\u3002\u8be5\u9879\u76ee\u662f\u7528 C \u8bed\u8a00\u7f16\u5199\u7684\u98de\u7fd4\u7684\u5c0f\u9e1f\u6e38\u620f\uff08Flappy Bird\uff09\uff0c\u5b83\u8fd0\u884c\u6d41\u7545\u3001\u5b89\u88c5\u5305\u4e0d\u5230 100KB\uff0c\u9002\u7528\u4e8e Android 5.1 \u53ca\u4ee5\u4e0a\u7cfb\u7edf\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/857252347.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n3\u3001[system-bus-radio](https://hellogithub.com/periodical/statistics/click?target=https://github.com/fulldecent/system-bus-radio)\uff1a\u7528\u7535\u8111\u8f7b\u677e\u53d1\u5c04\u65e0\u7ebf\u7535\u4fe1\u53f7\u3002\u8be5\u9879\u76ee\u901a\u8fc7\u63a7\u5236\u8ba1\u7b97\u673a\u7cfb\u7edf\u603b\u7ebf\u5728\u7279\u5b9a\u9891\u7387\u4e0a\u5207\u6362\u7535\u6d41\uff0c\u5b9e\u73b0\u4e86\u65e0\u9700\u989d\u5916\u786c\u4ef6\u8bbe\u5907\uff0c\u4ec5\u7528\u7535\u8111\u53d1\u9001 AM \u65e0\u7ebf\u7535\u4fe1\u53f7\u7684\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/52827329.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### C# \u9879\u76ee\n4\u3001[eShop](https://hellogithub.com/periodical/statistics/click?target=https://github.com/dotnet/eShop)\uff1a\u5f00\u6e90\u7684 .NET \u7535\u5546\u5e73\u53f0\u3002\u8be5\u9879\u76ee\u662f\u7531 .NET \u5b98\u65b9\u5f00\u6e90\u7684\u7535\u5b50\u5546\u52a1\u5e73\u53f0\uff0c\u57fa\u4e8e .NET Aspire \u6784\u5efa\u3002\u4f5c\u4e3a\u793a\u4f8b\u9879\u76ee\uff0c\u5b83\u91c7\u7528\u6700\u65b0\u7684 .NET 8 \u548c\u5fae\u670d\u52a1\u67b6\u6784\uff0c\u5e76\u5b9e\u73b0\u4e86\u6838\u5fc3\u7684\u7535\u5546\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/706944893.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n5\u3001[Loaf](https://hellogithub.com/periodical/statistics/click?target=https://github.com/DinoChan/Loaf)\uff1a\u5047\u88c5 Windows \u66f4\u65b0\u7684\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u4e13\u4e3a\u6478\u9c7c\u8bbe\u8ba1\u7684\u5c0f\u5de5\u5177\u3002\u70b9\u51fb\u201c\u6478\u9c7c\u201d\u6309\u94ae\u540e\uff0c\u5b83\u4f1a\u663e\u793a Windows Update \u754c\u9762\uff0c\u8425\u9020\u7535\u8111\u6b63\u5728\u5347\u7ea7\u7684\u5047\u8c61\uff0c\u8ba9\u4f60\u80fd\u591f\u540d\u6b63\u8a00\u987a\u5730\u6478\u9c7c\u3002\u6765\u81ea [@\u5218\u777f\u534e](https://hellogithub.com/user/TJ65FfbQU09PLHM) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/432108375.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### C++ \u9879\u76ee\n6\u3001[alien](https://hellogithub.com/periodical/statistics/click?target=https://github.com/chrxh/alien)\uff1a\u5f3a\u5927\u7684\u4eba\u5de5\u751f\u547d\u6a21\u62df\u5de5\u5177\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e CUDA \u7684 2D \u7c92\u5b50\u5f15\u64ce\u6784\u5efa\u7684\u4eba\u5de5\u751f\u547d\u6a21\u62df\u5de5\u5177\u3002\u5b83\u63d0\u4f9b\u4e86\u56fe\u5f62\u5316\u7528\u6237\u754c\u9762\u548c\u7c92\u5b50\u7f16\u8f91\u5668\uff0c\u80fd\u591f\u8f7b\u677e\u6a21\u62df\u8f6f\u4f53\u3001\u6d41\u4f53\u3001\u6570\u5b57\u751f\u7269\u4f53\u3001\u9057\u4f20\u548c\u8fdb\u5316\u7b49\u8fc7\u7a0b\u3002\u751f\u7269\u884c\u4e3a\u7531\u795e\u7ecf\u7f51\u7edc\u63a7\u5236\uff0c\u652f\u6301\u5b9e\u65f6\u4ea4\u4e92\u548c\u6a21\u62df\u767e\u4e07\u91cf\u7ea7\u7684\u7c92\u5b50\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/305438235.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n7\u3001[vcmi](https://hellogithub.com/periodical/statistics/click?target=https://github.com/vcmi/vcmi)\uff1a\u300a\u82f1\u96c4\u65e0\u654c III\u300b\u7684\u5f00\u6e90\u91cd\u5236\u7248\u3002\u8be5\u9879\u76ee\u662f\u7ecf\u5178\u7b56\u7565\u6e38\u620f\u300a\u9b54\u6cd5\u95e8\u4e4b\u82f1\u96c4\u65e0\u654c III\u300b\u7684\u5f00\u6e90\u91cd\u5236\u7248\uff0c\u5b83\u91c7\u7528 C++ \u91cd\u65b0\u7f16\u5199\u4e86\u6e38\u620f\u5f15\u64ce\uff0c\u652f\u6301\u66f4\u9ad8\u7684\u5206\u8fa8\u7387\u3001\u591a\u4eba\u6e38\u620f\u548c\u81ea\u5b9a\u4e49\u5730\u56fe\u7b49\u529f\u80fd\uff0c\u53ef\u4ee5\u5728 Windows\u3001macOS\u3001Android \u548c iOS \u7b49\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c\u4f46\u9700\u8981\u81ea\u884c\u51c6\u5907\u542f\u52a8\u6e38\u620f\u6240\u9700\u7684\u6570\u636e\u6587\u4ef6\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/18490421.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Go \u9879\u76ee\n8\u3001[clickhouse-sql-parser](https://hellogithub.com/periodical/statistics/click?target=https://github.com/AfterShip/clickhouse-sql-parser)\uff1a\u7eaf Go \u5b9e\u73b0\u7684 ClickHouse SQL \u89e3\u6790\u5668\u3002\u8fd9\u662f\u4e00\u6b3e\u7528 Go \u5b9e\u73b0\u7684 ClickHouse SQL \u89e3\u6790\u5668\uff0c\u517c\u5bb9\u5927\u591a\u6570 DML/DDL/Query \u8bed\u53e5\u3002\u5b83\u7684\u4ee3\u7801\u7b80\u6d01\u6613\u61c2\uff0c\u53ef\u4f5c\u4e3a Go \u5f00\u53d1\u8005\u5b66\u4e60 SQL \u89e3\u6790\u5668\u7684\u5165\u95e8\u9879\u76ee\u3002\n```go\npackage main\n\nimport (\n    clickhouse \"github.com/AfterShip/clickhouse-sql-parser/parser\"\n)\n\nquery := \"SELECT * FROM clickhouse\"\nparser := clickhouse.NewParser(query)\n// Parse query into AST\nstatements, err := parser.ParseStmts()\nif err != nil {\n    return nil, err\n}\n```\n\n9\u3001[go2rtc](https://hellogithub.com/periodical/statistics/click?target=https://github.com/AlexxIT/go2rtc)\uff1a\u652f\u6301\u5404\u79cd\u6d41\u5a92\u4f53\u534f\u8bae\u7684\u5904\u7406\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 Go \u8bed\u8a00\u7f16\u5199\u7684\u5e93\uff0c\u652f\u6301 RTSP\u3001WebRTC\u3001HomeKit\u3001FFmpeg\u3001RTMP \u7b49\u89c6\u9891\u6d41\u534f\u8bae\u7684\u5904\u7406\u3002\u5728 FFMPEG \u7684\u52a0\u6301\u4e0b\uff0c\u5b83\u51e0\u4e4e\u80fd\u5c06\u4efb\u4f55\u5a92\u4f53\u683c\u5f0f\u4f5c\u4e3a\u8f93\u5165\u6e90\uff0c\u8f6c\u6362\u4e3a\u9002\u7528\u4e8e\u4e3b\u6d41\u6d41\u5a92\u4f53\u670d\u52a1\u548c\u6d4f\u89c8\u5668\u7684\u683c\u5f0f\u3002\u6765\u81ea [@\u730e\u96bc\u4e36\u6b62\u6208reNo7](https://hellogithub.com/user/Ew59HqRWjPe0zZO) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/526081371.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n10\u3001[maroto](https://hellogithub.com/periodical/statistics/click?target=https://github.com/johnfercher/maroto)\uff1a\u7528 Go \u751f\u6210\u6837\u5f0f\u7f8e\u89c2\u7684 PDF \u6587\u4ef6\u3002\u8fd9\u4e00\u4e2a Go \u8bed\u8a00\u5f00\u53d1\u7684\u7528\u4e8e\u521b\u5efa PDF \u6587\u4ef6\u7684\u5e93\uff0c\u5176\u7075\u611f\u6765\u6e90\u4e8e Bootstrap \u6846\u67b6\u3002\u5b83\u5141\u8bb8\u4f60\u50cf\u4f7f\u7528 Bootstrap \u521b\u5efa\u7f51\u7ad9\u4e00\u6837\uff0c\u8f7b\u677e\u7f16\u5199\u548c\u751f\u6210\u4e0d\u540c\u6837\u5f0f\u7684 PDF \u6587\u4ef6\u3002\u6765\u81ea [@DeShuiYu](https://hellogithub.com/user/ZWJkOqsvYbPgD8p) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/187727138.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n11\u3001[nginx-ui](https://hellogithub.com/periodical/statistics/click?target=https://github.com/0xJacky/nginx-ui)\uff1a\u5168\u65b0\u7684 Nginx \u5728\u7ebf\u7ba1\u7406\u5e73\u53f0\u3002\u8be5\u9879\u76ee\u662f\u7528 Go+Vue.js \u6784\u5efa\u7684 Nginx \u5728\u7ebf\u7ba1\u7406\u5e73\u53f0\uff0c\u5b83\u5f00\u7bb1\u5373\u7528\u3001\u529f\u80fd\u4e30\u5bcc\uff0c\u652f\u6301\u6d41\u91cf\u7edf\u8ba1\u3001\u5728\u7ebf\u67e5\u770b Nginx \u65e5\u5fd7\u3001\u7f16\u8f91 Nginx \u914d\u7f6e\u6587\u4ef6\u3001\u81ea\u52a8\u68c0\u67e5\u548c\u91cd\u8f7d\u914d\u7f6e\u6587\u4ef6\u7b49\u529f\u80fd\u3002\u6765\u81ea [@kekylin](https://hellogithub.com/user/ux7SYGoKUMv461E) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/340339997.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n12\u3001[watchtower](https://hellogithub.com/periodical/statistics/click?target=https://github.com/containrrr/watchtower)\uff1a\u81ea\u52a8\u66f4\u65b0 Docker \u5bb9\u5668\u7684\u5de5\u5177\u3002\u8be5\u9879\u76ee\u80fd\u591f\u81ea\u52a8\u76d1\u6d4b\u5e76\u66f4\u65b0\u6b63\u5728\u8fd0\u884c\u7684 Docker \u5bb9\u5668\u3002\u5b83\u4f1a\u5b9a\u671f\u68c0\u67e5\u5e76\u62c9\u53d6 Docker Hub \u6216\u79c1\u6709\u955c\u50cf\u4ed3\u5e93\u4e2d\u7684\u6700\u65b0\u955c\u50cf\u7248\u672c\uff0c\u5e76\u81ea\u52a8\u91cd\u542f\u5bb9\u5668\u3002\u9002\u7528\u4e8e\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u4e2a\u4eba\u4f7f\u7528\u573a\u666f\uff0c\u4f46\u4e0d\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u3002\n```\ndocker run -d \\\n--name watchtower \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\ncontainrrr/watchtower\n```\n\n### Java \u9879\u76ee\n13\u3001[graphhopper](https://hellogithub.com/periodical/statistics/click?target=https://github.com/graphhopper/graphhopper)\uff1a\u9ad8\u6548\u7075\u6d3b\u7684\u5f00\u6e90\u8def\u7ebf\u89c4\u5212\u5f15\u64ce\u3002\u8be5\u9879\u76ee\u662f\u7528 Java \u5f00\u53d1\u7684\u9ad8\u6027\u80fd\u8def\u5f84\u89c4\u5212\u5f15\u64ce\uff0c\u80fd\u591f\u5feb\u901f\u8ba1\u7b97\u4e24\u70b9\u6216\u591a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u5b83\u652f\u6301 Dijkstra\u3001A* \u548c\u6536\u7f29\u5c42\u7ea7\uff08CH\uff09\u7b49\u7b97\u6cd5\uff0c\u53ef\u4ee5\u4f5c\u4e3a Java \u5e93\u6216 Web \u670d\u52a1\u4f7f\u7528\u3002\u57fa\u4e8e OpenStreetMap \u5730\u56fe\u6570\u636e\uff0c\u53ef\u5b9e\u73b0\u6c7d\u8f66\u3001\u81ea\u884c\u8f66\u3001\u6b65\u884c\u7b49\u591a\u79cd\u4ea4\u901a\u65b9\u5f0f\u7684\u8def\u7ebf\u89c4\u5212\u548c\u5bfc\u822a\u670d\u52a1\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/3480666.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n14\u3001[J2ME-Loader](https://hellogithub.com/periodical/statistics/click?target=https://github.com/nikita36078/J2ME-Loader)\uff1a\u5728 Android \u4e0a\u73a9 J2ME \u6e38\u620f\u3002\u8fd9\u662f\u4e00\u6b3e Android \u7684 J2ME \u6a21\u62df\u5668\uff0c\u652f\u6301\u5927\u591a\u6570 2D \u548c 3D \u6e38\u620f\u3002\u5b83\u5185\u7f6e\u865a\u62df\u952e\u76d8\uff0c\u9002\u7528\u4e8e Android 4.0+ \u7cfb\u7edf\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/91971028.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n15\u3001[spring-ai](https://hellogithub.com/periodical/statistics/click?target=https://github.com/spring-projects/spring-ai)\uff1a\u5e2e\u52a9\u5f00\u53d1 AI \u5e94\u7528\u7684 Spring \u6846\u67b6\u3002\u8fd9\u662f\u7531 Spring \u5b98\u65b9\u5f00\u6e90\u7684\u7528\u4e8e\u7b80\u5316\u5305\u542b AI \u529f\u80fd\u7684\u5e94\u7528\u5f00\u53d1\u7684 Java \u6846\u67b6\uff0c\u5b83\u53ef\u4ee5\u8f7b\u677e\u63a5\u5165 OpenAI\u3001Microsoft\u3001Amazon\u3001Google \u548c Huggingface \u7b49\u4e3b\u6d41\u6a21\u578b\u4f9b\u5e94\u5546\uff0c\u4ee5\u53ca\u804a\u5929\u3001\u6587\u672c\u751f\u6210\u56fe\u50cf\u7684\u6a21\u578b\u7c7b\u578b\uff0c\u652f\u6301\u63d0\u793a\u5de5\u7a0b\u3001AI \u6a21\u578b\u8f6c POJO \u5bf9\u8c61\u3001\u77e2\u91cf\u6570\u636e\u5e93\u3001RAG\uff08\u68c0\u7d22\u589e\u5f3a\u751f\u6210\uff09\u7b49\u6709\u52a9\u4e8e\u5f00\u53d1 AI \u5e94\u7528\u7684\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/659402878.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### JavaScript \u9879\u76ee\n16\u3001[create-t3-app](https://hellogithub.com/periodical/statistics/click?target=https://github.com/t3-oss/create-t3-app)\uff1a\u521b\u5efa\u5168\u6808\u3001\u7c7b\u578b\u5b89\u5168\u7684 Next.js \u9879\u76ee\u7684\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa\u5168\u6808\u4e14\u7c7b\u578b\u5b89\u5168\u7684 Next.js \u9879\u76ee\u7684\u811a\u624b\u67b6\u5de5\u5177\u3002\u5b83\u5f00\u7bb1\u5373\u7528\uff0c\u4ec5\u9700\u4e00\u6761\u547d\u4ee4\u5c31\u80fd\u5feb\u901f\u521b\u5efa\u4e00\u4e2a\u5168\u65b0\u7684 Next.js \u9879\u76ee\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/495836457.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n17\u3001[markmap](https://hellogithub.com/periodical/statistics/click?target=https://github.com/markmap/markmap)\uff1a\u5c06 Markdown \u53ef\u89c6\u5316\u4e3a\u601d\u7ef4\u5bfc\u56fe\u3002\u8fd9\u662f\u4e00\u4e2a\u652f\u6301\u4f7f\u7528 Markdown \u8bed\u6cd5\u7ed8\u5236\u601d\u7ef4\u5bfc\u56fe\u7684\u5de5\u5177\u3002\u5b83\u5f00\u7bb1\u5373\u7528\u5e76\u63d0\u4f9b\u591a\u79cd\u4f7f\u7528\u65b9\u5f0f\uff0c\u5305\u62ec\u5728\u7ebf\u3001\u547d\u4ee4\u884c\u4ee5\u53ca VSCode\u3001Vim \u548c Emacs \u63d2\u4ef6\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/233568787.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n18\u3001[pglite](https://hellogithub.com/periodical/statistics/click?target=https://github.com/electric-sql/pglite)\uff1a\u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c Postgres \u6570\u636e\u5e93\u3002\u8be5\u9879\u76ee\u5c06 PostgreSQL \u6570\u636e\u5e93\u7f16\u8bd1\u6210 WebAssembly (WASM)\uff0c\u5e76\u6253\u5305\u6210\u4e00\u4e2a TypeScript/JavaScript \u5ba2\u6237\u7aef\u5e93\u3002\u5b83\u538b\u7f29\u540e\u4f53\u79ef\u4e0d\u5230 3MB\uff0c\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u3001Node.js\u3001Bun \u548c Deno \u73af\u5883\u4e2d\u8fd0\u884c\uff0c\u65e0\u9700\u5b89\u88c5\u4efb\u4f55\u989d\u5916\u7684\u4f9d\u8d56\u3002\u63d0\u4f9b\u7075\u6d3b\u7684\u5b58\u50a8\u9009\u9879\uff0c\u652f\u6301\u5185\u5b58\u5b58\u50a8\u3001\u672c\u5730\u6301\u4e45\u5316\u6216 IndexedDB\u3002\n```typescript\nimport { PGlite } from \"@electric-sql/pglite\";\n\nconst db = new PGlite();\nawait db.query(\"select 'Hello world' as message;\");\n// -> { rows: [ { message: \"Hello world\" } ] }\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/759893102.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n19\u3001[staticrypt](https://hellogithub.com/periodical/statistics/click?target=https://github.com/robinmoisson/staticrypt)\uff1a\u4e3a\u9759\u6001\u7f51\u7ad9\u63d0\u4f9b\u5bc6\u7801\u4fdd\u62a4\u529f\u80fd\u3002\u8be5\u9879\u76ee\u65e0\u9700\u670d\u52a1\u5668\u7aef\u652f\u6301\uff0c\u5373\u53ef\u5b9e\u73b0\u5bf9 HTML \u9875\u9762\u8fdb\u884c\u5bc6\u7801\u8ba4\u8bc1\u8bbf\u95ee\u7684\u529f\u80fd\u3002\u5b83\u4f7f\u7528 AES-256 \u52a0\u5bc6\u7b97\u6cd5\u548c\u8bbe\u5b9a\u7684\u5bc6\u7801\uff0c\u5bf9\u9700\u8981\u4fdd\u62a4\u7684\u9875\u9762\u8fdb\u884c\u52a0\u5bc6\u3002\u751f\u6210\u7684\u9875\u9762\u5305\u542b\u5bc6\u7801\u8f93\u5165\u6846\uff0c\u53ea\u6709\u5728\u8f93\u5165\u6b63\u786e\u7684\u5bc6\u7801\u540e\uff0c\u624d\u4f1a\u663e\u793a\u539f\u59cb\u7684 HTML \u9875\u9762\u5185\u5bb9\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/89785877.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n20\u3001[ui](https://hellogithub.com/periodical/statistics/click?target=https://github.com/shadcn-ui/ui)\uff1a\u6d41\u884c\u3001\u8bbe\u8ba1\u7cbe\u7f8e\u7684 UI \u7ec4\u4ef6\u96c6\u5408\u3002\u8fd9\u662f\u4e00\u6b3e\u7531 Vercel \u5f00\u6e90\u3001\u57fa\u4e8e React \u5f00\u53d1\u7684 UI \u7ec4\u4ef6\u96c6\u5408\uff0c\u5305\u62ec\u4eea\u8868\u677f\u3001\u5361\u7247\u3001\u6a21\u578b\u5bf9\u8bdd\u3001\u8868\u5355\u3001\u767b\u5f55\u7b49\u7ec4\u4ef6\uff0c\u62ff\u6765\u5373\u7528\u3002\u901a\u8fc7 CLI \u5f15\u5165\u7ec4\u4ef6\u540e\uff0c\u5c06\u5f97\u5230\u8be5\u7ec4\u4ef6\u7684\u6e90\u7801\uff0c\u53ef\u968f\u610f\u4fee\u6539\u548c\u5b9a\u5236\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/585146387.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Kotlin \u9879\u76ee\n21\u3001[game2048](https://hellogithub.com/periodical/statistics/click?target=https://github.com/andstatus/game2048)\uff1a\u5f00\u6e90\u7684 2048 \u6e38\u620f\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e Kotlin \u548c KorGe \u6e38\u620f\u5f15\u64ce\u5f00\u53d1\u7684 2048 \u6e38\u620f\u3002\u5b83\u514d\u8d39\u3001\u5f00\u6e90\u4e14\u6ca1\u5e7f\u544a\uff0c\u652f\u6301\u5b58\u6863\u3001\u65e0\u9650\u64a4\u56de\u3001AI \u6a21\u5f0f\u548c\u56de\u653e\u7b49\u529f\u80fd\u3002\u4f5c\u8005\u4ec5\u63d0\u4f9b\u4e86 Android \u5b89\u88c5\u5305\uff0c\u5176\u4ed6\u5e73\u53f0\u9700\u8981\u81ea\u884c\u7f16\u8bd1\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/299049641.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n22\u3001[ImageToolbox](https://hellogithub.com/periodical/statistics/click?target=https://github.com/T8RIN/ImageToolbox)\uff1aAndroid \u7684\u591a\u529f\u80fd\u56fe\u50cf\u7f16\u8f91\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u4e13\u4e3a Android \u8bbe\u8ba1\u7684\u56fe\u50cf\u7f16\u8f91\u5de5\u5177\u3002\u5b83\u5b8c\u5168\u514d\u8d39\uff0c\u652f\u6301\u6279\u91cf\u5904\u7406\u3001\u6ee4\u955c\u3001\u80cc\u666f\u79fb\u9664\u3001\u5c3a\u5bf8\u8c03\u6574\u548c\u88c1\u526a\u7b49\u591a\u79cd\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/478710402.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Python \u9879\u76ee\n23\u3001[aiofiles](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Tinche/aiofiles)\uff1aPython \u5f02\u6b65\u6587\u4ef6\u5904\u7406\u5e93\u3002\u5728 Python \u4e2d\uff0c\u4f20\u7edf\u7684\u6587\u4ef6 I/O \u662f\u963b\u585e\u7684\uff0c\u8be5\u9879\u76ee\u63d0\u4f9b\u4e86\u5f02\u6b65\uff08\u975e\u963b\u585e\uff09\u7684\u6587\u4ef6\u64cd\u4f5c\u3002\u5b83\u7684 API \u4e0e Python \u6807\u51c6\u5e93\u76f8\u4f3c\uff0c\u652f\u6301 async/await \u8bed\u6cd5\u3002\n```python\nasync with aiofiles.open('filename', mode='r') as f:\n    contents = await f.read()\nprint(contents)\n'My file contents'\n```\n\n24\u3001[cupy](https://hellogithub.com/periodical/statistics/click?target=https://github.com/cupy/cupy)\uff1aGPU \u7248\u7684 NumPy \u548c SciPy\u3002\u8fd9\u662f\u4e00\u4e2a\u5229\u7528 GPU \u52a0\u901f\u6570\u503c\u8ba1\u7b97\u7684 Python \u5e93\uff0c\u4e0e NumPy \u548c SciPy \u517c\u5bb9\u3002\u4f60\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u73b0\u6709\u7684 NumPy/SciPy \u4ee3\u7801\uff0c\u8fc1\u79fb\u5230 NVIDIA CUDA \u6216 AMD ROCm \u5e73\u53f0\u4e0a\u8fd0\u884c\uff0c\u90e8\u5206\u60c5\u51b5\u4e0b\u901f\u5ea6\u53ef\u63d0\u5347 100 \u500d\u4ee5\u4e0a\u3002\n```python\n>>> import cupy as cp\n>>> x = cp.arange(6).reshape(2, 3).astype('f')\n>>> x\narray([[ 0.,  1.,  2.],\n       [ 3.,  4.,  5.]], dtype=float32)\n>>> x.sum(axis=1)\narray([  3.,  12.], dtype=float32)\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/72523920.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n25\u3001[curl_cffi](https://hellogithub.com/periodical/statistics/click?target=https://github.com/lexiforest/curl_cffi)\uff1a\u6a21\u62df\u6d4f\u89c8\u5668\u6307\u7eb9\u7684 HTTP \u5ba2\u6237\u7aef\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 Python \u5199\u7684 HTTP \u5ba2\u6237\u7aef\u5e93\uff0c\u53ef\u4ee5\u6a21\u62df\u6d4f\u89c8\u5668 TLS\u3001JA3 \u548c HTTP/2 \u6307\u7eb9\u3002\u5b83\u5f00\u7bb1\u5373\u7528\u3001\u901f\u5ea6\u5feb\uff0c\u5e76\u4e14\u652f\u6301 WebSocket \u548c\u5f02\u6b65\u3002\n```python\nfrom curl_cffi import requests\n\n# Notice the impersonate parameter\nr = requests.get(\"https://tools.scrapfly.io/api/fp/ja3\", impersonate=\"chrome\")\n\nprint(r.json())\n# output: {..., \"ja3n_hash\": \"aa56c057ad164ec4fdcb7a5a283be9fc\", ...}\n# the js3n fingerprint should be the same as target browser\n\n# To keep using the latest browser version as `curl_cffi` updates,\n# simply set impersonate=\"chrome\" without specifying a version.\n# Other similar values are: \"safari\" and \"safari_ios\"\nr = requests.get(\"https://tools.scrapfly.io/api/fp/ja3\", impersonate=\"chrome\")\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/468168223.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n26\u3001[LibreTranslate](https://hellogithub.com/periodical/statistics/click?target=https://github.com/LibreTranslate/LibreTranslate)\uff1a\u53ef\u79bb\u7ebf\u90e8\u7f72\u7684\u7ffb\u8bd1 API \u670d\u52a1\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e\u79bb\u7ebf\u7ffb\u8bd1\u5f15\u64ce Argos Translate \u6784\u5efa\u7684\u7ffb\u8bd1 API \u670d\u52a1\u3002\u5b83\u4e0d\u4f9d\u8d56\u7b2c\u4e09\u65b9\u7ffb\u8bd1\u670d\u52a1\uff0c\u53ef\u8f7b\u677e\u81ea\u5efa\u7ffb\u8bd1 API \u670d\u52a1\uff0c\u652f\u6301\u81ea\u52a8\u8bed\u8a00\u68c0\u6d4b\u3001API \u5bc6\u94a5\u548c\u8bbf\u95ee\u9891\u7387\u9650\u5236\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/322921248.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n27\u3001[s-tui](https://hellogithub.com/periodical/statistics/click?target=https://github.com/amanusk/s-tui)\uff1a\u57fa\u4e8e\u7ec8\u7aef\u7684 CPU \u76d1\u63a7\u548c\u538b\u6d4b\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a Python \u5199\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u53ef\u5728\u7ec8\u7aef\u4e2d\u4ee5\u56fe\u5f62\u65b9\u5f0f\u5b9e\u65f6\u663e\u793a CPU \u6e29\u5ea6\u3001\u9891\u7387\u3001\u529f\u7387\u548c\u5229\u7528\u7387\u7b49\u4fe1\u606f\u3002\u5b83\u8fd8\u652f\u6301\u5b89\u88c5 FIRESTARTER \u7b49\u5de5\u5177\uff0c\u5bf9 CPU \u8fdb\u884c\u538b\u529b\u6d4b\u8bd5\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/87705200.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Rust \u9879\u76ee\n28\u3001[uv](https://hellogithub.com/periodical/statistics/click?target=https://github.com/astral-sh/uv)\uff1a\u8d85\u5feb\u7684 Python \u5305\u7ba1\u7406\u5de5\u5177\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e Rust \u5f00\u53d1\u7684\u4e0b\u4e00\u4ee3 Python \u5305\u7ba1\u7406\u5de5\u5177\uff0c\u53ef\u7528\u4e8e\u66ff\u4ee3\u4f20\u7edf\u7684 Python \u5305\u548c\u73af\u5883\u7ba1\u7406\u5de5\u5177\u3002\u5b83\u517c\u5bb9 pip\u3001pip-tools \u548c virtualenv \u547d\u4ee4\uff0c\u901f\u5ea6\u6bd4\u8fd9\u4e9b\u5de5\u5177\u5feb 10-100 \u500d\uff0c\u5e76\u901a\u8fc7\u5168\u5c40\u4f9d\u8d56\u7f13\u5b58\u8282\u7701\u66f4\u591a\u7684\u786c\u76d8\u7a7a\u95f4\uff0c\u5f00\u7bb1\u5373\u7528\u652f\u6301 Windows\u3001Linux \u548c macOS \u7cfb\u7edf\u3002\n```\n# On macOS and Linux.\n$ curl -LsSf https://astral.sh/uv/install.sh | sh\n\n# On Windows.\n$ powershell -c \"irm https://astral.sh/uv/install.ps1 | iex\"\n\n# With pip.\n$ pip install uv\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/699532645.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n29\u3001[yazi](https://hellogithub.com/periodical/statistics/click?target=https://github.com/sxyazi/yazi)\uff1a\u8d85\u5feb\u7684\u7ec8\u7aef\u6587\u4ef6\u7ba1\u7406\u5668\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 Rust \u7f16\u5199\u7684\u7ec8\u7aef\u6587\u4ef6\u7ba1\u7406\u5668\uff0c\u6240\u6709 I/O \u64cd\u4f5c\u5747\u4e3a\u5f02\u6b65\u3002\u5b83\u63d0\u4f9b\u4e86\u53cb\u597d\u7684\u754c\u9762\u3001\u81ea\u7531\u53ef\u5b9a\u5236\u548c\u6d41\u7545\u7684\u4f7f\u7528\u4f53\u9a8c\uff0c\u652f\u6301\u56fe\u7247\u9884\u89c8\u3001\u4ee3\u7801\u9ad8\u4eae\u3001\u6eda\u52a8\u9884\u89c8\u548c\u63d2\u4ef6\u7cfb\u7edf\uff0c\u5e76\u96c6\u6210\u4e86 ripgrep\u3001fd\u3001fzf \u7b49\u9ad8\u6548\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002\u6765\u81ea [@fortystory](https://hellogithub.com/user/pnOrTEBk9I1QKx5) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/663900193.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Swift \u9879\u76ee\n30\u3001[BBackupp](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Lakr233/BBackupp)\uff1a\u8f7b\u677e\u5907\u4efd iOS \u8bbe\u5907\u6570\u636e\u7684\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u514d\u8d39\u7684 iOS \u5907\u4efd\u5de5\u5177\uff0c\u652f\u6301\u663e\u793a\u5907\u4efd\u8fdb\u5ea6\u3001\u81ea\u52a8\u5907\u4efd\u8ba1\u5212\u3001\u65e0\u7ebf\u5907\u4efd\u3001\u52a0\u5bc6\u4fdd\u62a4\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/677801474.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n31\u3001[OpenScanner](https://hellogithub.com/periodical/statistics/click?target=https://github.com/pencilresearch/OpenScanner)\uff1a\u9002\u7528\u4e8e iPhone \u7684\u514d\u8d39\u6587\u6863\u626b\u63cf\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u7528 Swift \u7f16\u5199\u7684\u6587\u6863\u626b\u63cf\u5de5\u5177\uff0c\u5b8c\u5168\u514d\u8d39\uff0c\u6ca1\u5e7f\u544a\u4e14\u65e0\u5185\u8d2d\u3002\u5b83\u53ef\u4ee5\u626b\u63cf\u6536\u636e\u3001\u5408\u540c\u3001\u7b14\u8bb0\u7b49\uff0c\u652f\u6301\u81ea\u52a8\u8bc6\u522b\u6587\u672c\u3001\u7f16\u8f91\u626b\u63cf\u4ef6\u3001\u7b7e\u540d\u548c\u5bfc\u51fa PDF \u6587\u4ef6\u7b49\u529f\u80fd\uff0c\u9002\u7528\u4e8e iOS 16.0+ \u548c visionOS 1.2+ \u7cfb\u7edf\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/858437661.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u4eba\u5de5\u667a\u80fd\n32\u3001[miniMNIST-c](https://hellogithub.com/periodical/statistics/click?target=https://github.com/konrad-gajdus/miniMNIST-c)\uff1aC \u8bed\u8a00\u5b9e\u73b0\u7684\u6781\u7b80\u795e\u7ecf\u7f51\u7edc\u3002\u8be5\u9879\u76ee\u5c55\u793a\u4e86\u5982\u4f55\u7528 C \u8bed\u8a00\u4ece\u5934\u5b9e\u73b0\u4e00\u4e2a\u6700\u5c0f\u7684\u795e\u7ecf\u7f51\u7edc\u3002\u5b83\u7528\u4e0d\u5230 200 \u884c\u4ee3\u7801\u548c C \u6807\u51c6\u5e93\uff0c\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6781\u7b80\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u80fd\u591f\u5bf9 MNIST \u6570\u636e\u96c6\u4e2d\u7684\u624b\u5199\u6570\u5b57\u8fdb\u884c\u5206\u7c7b\u3002\n\n33\u3001[openvino](https://hellogithub.com/periodical/statistics/click?target=https://github.com/openvinotoolkit/openvino)\uff1a\u4f18\u5316\u548c\u90e8\u7f72\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u7684\u5de5\u5177\u5305\u3002\u8be5\u9879\u76ee\u662f\u82f1\u7279\u5c14\u5f00\u6e90\u7684\u5de5\u5177\u5e93\uff0c\u65e8\u5728\u52a0\u901f\u548c\u4f18\u5316\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u90e8\u7f72\u3002\u5b83\u80fd\u5e2e\u52a9\u5f00\u53d1\u8005\u5c06\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u90e8\u7f72\u5230\u591a\u79cd\u786c\u4ef6\u5e73\u53f0\uff0c\u652f\u6301 TensorFlow\u3001PyTorch \u548c ONNX \u7b49\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u3002\n```python\nimport openvino as ov\nimport torch\nimport torchvision\n\n# load PyTorch model into memory\nmodel = torch.hub.load(\"pytorch/vision\", \"shufflenet_v2_x1_0\", weights=\"DEFAULT\")\n\n# convert the model into OpenVINO model\nexample = torch.randn(1, 3, 224, 224)\nov_model = ov.convert_model(model, example_input=(example,))\n\n# compile the model for CPU device\ncore = ov.Core()\ncompiled_model = core.compile_model(ov_model, 'CPU')\n\n# infer the model on random data\noutput = compiled_model({0: example.numpy()})\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/153097643.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5176\u5b83\n34\u3001[90DaysOfDevOps](https://hellogithub.com/periodical/statistics/click?target=https://github.com/MichaelCade/90DaysOfDevOps)\uff1a\u4e3a\u671f 90 \u5929\u7684 DevOps \u514d\u8d39\u6559\u7a0b\u3002\u8be5\u9879\u76ee\u6700\u521d\u662f\u4f5c\u8005\u8bb0\u5f55\u81ea\u5df1\u5b66\u4e60 DevOps \u77e5\u8bc6\u7684\u7b14\u8bb0\uff0c\u5982\u4eca\u5df2\u53d1\u5c55\u4e3a\u4e00\u4e2a\u7531\u793e\u533a\u9a71\u52a8\u7684 DevOps \u514d\u8d39\u6559\u7a0b\uff0c\u5185\u5bb9\u6db5\u76d6\u4e86 DevOps \u6982\u5ff5\u3001Linux \u57fa\u7840\u3001\u8ba1\u7b97\u673a\u7f51\u7edc\u3001\u5bb9\u5668\u3001Kubernetes\u3001CI/CD\u3001\u76d1\u63a7\u548c\u4e91\u670d\u52a1\u5546\u7b49\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/441903012.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n35\u3001[Atlas](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Atlas-OS/Atlas)\uff1a\u5f00\u6e90\u7684\u7cbe\u7b80\u7248 Windows \u64cd\u4f5c\u7cfb\u7edf\u3002\u8fd9\u662f\u4e00\u4e2a\u7ecf\u8fc7\u4f18\u5316\u7684 Windows \u64cd\u4f5c\u7cfb\u7edf\uff0c\u79fb\u9664\u4e86\u8bb8\u591a\u7528\u4e0d\u5230\u4f46\u4f1a\u62d6\u6162\u7cfb\u7edf\u7684\u7ec4\u4ef6\u3002\u7626\u8eab\u540e\u51cf\u5c11\u4e86\u7cfb\u7edf\u8fdb\u7a0b\u6570\u3001\u7f51\u7edc\u548c\u5185\u5b58\u5360\u7528\uff0c\u83b7\u5f97\u4e86\u66f4\u5feb\u7684\u542f\u52a8\u901f\u5ea6\u548c\u66f4\u6d41\u7545\u7684\u64cd\u4f5c\u4f53\u9a8c\u3002\u8be5\u7cfb\u7edf\u80fd\u591f\u6b63\u5e38\u8fd0\u884c\u5404\u79cd Windows \u8f6f\u4ef6\u548c\u6e38\u620f\uff0c\u662f\u4e00\u4efd\u9001\u7ed9\u6e38\u620f\u7231\u597d\u8005\u548c\u8ffd\u6c42\u9ad8\u6027\u80fd\u7528\u6237\u7684\u5f00\u6e90\u793c\u7269\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/336920522.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n36\u3001[GPU-Puzzles](https://hellogithub.com/periodical/statistics/click?target=https://github.com/srush/GPU-Puzzles)\uff1a\u5b66\u4e60 GPU \u5e76\u884c\u7f16\u7a0b\u7684\u4e92\u52a8\u5f0f\u6559\u7a0b\u3002\u8be5\u9879\u76ee\u63d0\u4f9b\u4e86 14 \u9053\u9898\uff0c\u5e2e\u52a9\u5b66\u4e60 GPU \u7f16\u7a0b\u3002\u4f60\u9700\u8981\u7f16\u5199\u4ee3\u7801\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\u5c3d\u7ba1\u4ee3\u7801\u770b\u8d77\u6765\u50cf Python\uff0c\u4f46\u5b9e\u9645\u4e0a\u662f\u4f7f\u7528 numba \u5e93\u7f16\u5199 CUDA \u4ee3\u7801\u3002\u66f4\u6709\u8da3\u7684\u662f\uff0c\u8fd0\u884c\u4ee3\u7801\u540e\u4f1a\u751f\u6210\u4e00\u5f20\u793a\u610f\u56fe\uff0c\u5e2e\u52a9\u4f60\u7406\u89e3\u4ee3\u7801\u8fd0\u884c\u8fc7\u7a0b\u3002\u6b64\u5916\uff0c\u4f5c\u8005\u8fd8\u5236\u4f5c\u4e86\u8bb2\u89e3\u89c6\u9891\uff0c\u6307\u5bfc\u5982\u4f55\u8fd0\u884c\u9879\u76ee\u5e76\u67e5\u770b\u7b54\u6848\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/512867291.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n37\u3001[kando](https://hellogithub.com/periodical/statistics/click?target=https://github.com/kando-menu/kando)\uff1a\u8de8\u5e73\u53f0\u7684\u73af\u5f62\u72b6\u83dc\u5355\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u684c\u9762\u5706\u5f62\u83dc\u5355\uff08Pie menu\uff09\u5de5\u5177\uff0c\u53ef\u7528\u4e8e\u542f\u52a8\u5e94\u7528\u3001\u6a21\u62df\u952e\u76d8\u5feb\u6377\u952e\u3001\u6253\u5f00\u6587\u4ef6\u7b49\uff0c\u5c24\u5176\u9002\u5408\u4e0e\u89e6\u63a7\u7b14\u548c\u89e6\u6478\u5c4f\u914d\u5408\u4f7f\u7528\uff0c\u652f\u6301 Windows\u3001Linux \u548c macOS \u7b49\u7cfb\u7edf\u3002\u6765\u81ea [@\u6709\u6545\u4e8b\u7684\u5f90\u540c\u5b66](https://hellogithub.com/user/dsBIQo8K4UaFPR2) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/628600520.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n38\u3001[omakub](https://hellogithub.com/periodical/statistics/click?target=https://github.com/basecamp/omakub)\uff1a\u7cbe\u7f8e\u7684 Ubuntu \u914d\u7f6e\u65b9\u6848\u3002\u8be5\u9879\u76ee\u53ef\u4ee5\u5c06\u5168\u65b0\u7684 Ubuntu 24.04 \u7cfb\u7edf\u914d\u7f6e\u6210\u7f8e\u89c2\u3001\u529f\u80fd\u9f50\u5168\u3001\u9002\u5408 Web \u5f00\u53d1\u7684\u7cfb\u7edf\u3002\u53ea\u9700\u7b80\u5355\u7684\u4e00\u6761\u547d\u4ee4\uff0c\u5373\u53ef\u62e5\u6709\u914d\u7f6e\u597d\u7684 GNOME \u684c\u9762\u73af\u5883\u3001\u7a97\u53e3\u7ba1\u7406\u5de5\u5177\u3001Alacritty \u7ec8\u7aef\u3001Neovim \u548c VSCode \u7f16\u8f91\u5668\u7b49\u5e94\u7528\uff0c\u8fd8\u4f1a\u5c06 Chrome \u8bbe\u7f6e\u6210\u9ed8\u8ba4\u6d4f\u89c8\u5668\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/805916722.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n39\u3001[weather_landscape](https://hellogithub.com/periodical/statistics/click?target=https://github.com/lds133/weather_landscape)\uff1a\u7528\u6709\u8da3\u7684\u52a8\u753b\u663e\u793a\u5929\u6c14\u9884\u62a5\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e\u6c14\u8c61\u6570\u636e\u751f\u6210\u666f\u89c2\u56fe\u7684\u9879\u76ee\uff0c\u901a\u8fc7\u52a8\u753b\u5f62\u5f0f\u751f\u52a8\u5730\u5c55\u73b0\u5929\u6c14\uff0c\u66ff\u4ee3\u4e86\u67af\u71e5\u7684\u6c14\u8c61\u6570\u503c\u663e\u793a\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/102/860493834.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5f00\u6e90\u4e66\u7c4d\n40\u3001[DictionaryByGPT4](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Ceelog/DictionaryByGPT4)\uff1a\u7528 GPT-4 \u751f\u6210\u7684\u82f1\u8bed\u5355\u8bcd\u4e66\u3002\u8be5\u9879\u76ee\u901a\u8fc7 GPT-4 \u5206\u6790\u4e2d\u8003\u3001\u9ad8\u8003\u3001\u53ca\u56db\u516d\u7ea7\u8003\u8bd5\u4e2d\u7684 8000 \u591a\u4e2a\u82f1\u8bed\u5355\u8bcd\uff0c\u751f\u6210\u4e86\u4e00\u672c\u82f1\u8bed\u8bcd\u6c47\u4e66\u3002\u4e66\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u6bcf\u4e2a\u5355\u8bcd\u7684\u8bcd\u4e49\u3001\u8bcd\u6839\u3001\u8bcd\u7f00\u3001\u4f8b\u53e5\uff0c\u4ee5\u53ca\u53d1\u5c55\u5386\u53f2\u548c\u6587\u5316\u80cc\u666f\u7b49\u3002\n\n41\u3001[SystemDesign](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Admol/SystemDesign)\uff1a\u300aSystem Design Interview: An Insider\u2019s Guide\u300b\u4e2d\u6587\u7ffb\u8bd1\u3002\u8be5\u9879\u76ee\u662f\u300a\u7cfb\u7edf\u8bbe\u8ba1\u9762\u8bd5\uff1a\u5185\u5e55\u6307\u5357\u300b\u4e00\u4e66\u7684\u4e2d\u6587\u7ffb\u8bd1\uff0c\u5185\u5bb9\u662f\u4f20\u6388\u9762\u8bd5\u4e2d\u5173\u4e8e\u7cfb\u7edf\u8bbe\u8ba1\u67b6\u6784\u7684\u6280\u5de7\uff0c\u4f8b\u5982\u5982\u4f55\u8bbe\u8ba1\u4e00\u4e2a YouTube \u7b49\u7cfb\u7edf\u3002\u6765\u81ea [@\u5218\u777f\u534e](https://hellogithub.com/user/TJ65FfbQU09PLHM) \u7684\u5206\u4eab\n\n\n\n<p align=\"center\">\n    <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub101.md\">\u300e\u4e0a\u4e00\u671f\u300f</a> | <a href='https://github.com/521xueweihan/HelloGitHub/issues/899'>\u53cd\u9988\u548c\u5efa\u8bae</a> | <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub103.md\">\u300e\u4e0b\u4e00\u671f\u300f</a>\n</p>\n\n---\n<p align=\"center\">\n    \ud83d\udc49 <a href='https://hellogithub.com/periodical'>\u6765\uff01\u63a8\u8350\u5f00\u6e90\u9879\u76ee</a> \ud83d\udc48<br>\n    \u5fae\u4fe1\u4e2d\u641c\uff1a<strong>HelloGitHub</strong> \u5173\u6ce8\u516c\u4f17\u53f7<br>\n    \u4e0d\u4ec5\u80fd\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\uff0c\u8fd8\u6709\u56de\u9988\u7c89\u4e1d\u7684\u6d3b\u52a8<br>\n    \u5982\u679c\u6587\u4e2d\u7684\u56fe\u5237\u4e0d\u51fa\u6765\uff0c\u53ef\u4ee5\u70b9\u51fb <a href='https://hellogithub.com/periodical/volume/102'>\u8fd9\u91cc</a>\u3002\n</p>\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "content/HelloGitHub103.md", "size": 31495, "license": "NOASSERTION", "content_sha": "16c597ec427e8f26559b49e0b50627ed214a9899", "findings": [], "content": "# \u300aHelloGitHub\u300b\u7b2c 103 \u671f\n> \u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c**HelloGitHub** \u8ba9\u4f60\u5bf9\u5f00\u6e90\u611f\u5174\u8da3\uff01\n<p align=\"center\">\n    <img src='https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg' style=\"max-width:100%;\"></img>\n</p>\n\n## \u76ee\u5f55\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 **\u300c\u76ee\u5f55\u300d** \u56fe\u6807\u6253\u5f00\u76ee\u5f55\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n![](https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png)\n\n**Tips**\uff1a\u5982\u679c\u9047\u5230\u56fe\u7247\u5237\u4e0d\u51fa\u6765\u7684\u60c5\u51b5\uff0c[\u70b9\u51fb](https://hellogithub.com/periodical/volume/103) \u6362\u4e00\u79cd\u6d4f\u89c8\u65b9\u5f0f\u3002\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\" style=\"max-width:30%;\"></img><br>\n\u5173\u6ce8\u300cHelloGitHub\u300d\u516c\u4f17\u53f7\uff0c\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\n</p>\n\n## \u5185\u5bb9\n> **\u4ee5\u4e0b\u4e3a\u672c\u671f\u5185\u5bb9**\uff5c\u6bcf\u4e2a\u6708 **28** \u53f7\u66f4\u65b0\n\n### C \u9879\u76ee\n1\u3001[rawdrawandroid](https://hellogithub.com/periodical/statistics/click?target=https://github.com/cnlohr/rawdrawandroid)\uff1a\u4ec5\u7528 C \u8bed\u8a00\u5f00\u53d1 Android \u5e94\u7528\u3002\u8fd9\u662f\u4e00\u4e2a Android \u5e94\u7528\u5f00\u53d1\u6846\u67b6\uff0c\u53ef\u4ee5\u8ba9\u5f00\u53d1\u8005\u4e0d\u7528 Java\uff0c\u4ec5\u7528 C \u548c Make \u5f00\u53d1 Android \u5e94\u7528\u3002\u5b83\u8f7b\u91cf\u4e14\u8de8\u5e73\u53f0\uff0c\u652f\u6301 OpenGL ES\u3001\u9640\u87ba\u4eea\u3001\u591a\u70b9\u89e6\u63a7\u53ca Android \u952e\u76d8\uff0c\u5e76\u80fd\u76f4\u63a5\u8bbf\u95ee USB \u8bbe\u5907\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/212012440.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n2\u3001[taisei](https://hellogithub.com/periodical/statistics/click?target=https://github.com/taisei-project/taisei)\uff1a\u514d\u8d39\u5f00\u6e90\u7684\u4e1c\u65b9 Project \u7cfb\u5217\u7684\u5c04\u51fb\u6e38\u620f\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e\u4e1c\u65b9 Project \u4e16\u754c\u89c2\u7684\u5f39\u5e55\u5c04\u51fb\u7c7b\u6e38\u620f\uff0c\u62e5\u6709\u72ec\u7acb\u539f\u521b\u7684\u6545\u4e8b\u60c5\u8282\u3001\u97f3\u4e50\u548c\u6e38\u620f\u673a\u5236\u3002\u8fd9\u6b3e\u540d\u4e3a\u201c\u6cf0\u897f\u201d\u7684\u6e38\u620f\uff0c\u91c7\u7528 C11\u3001SDL2 \u548c OpenGL \u5f00\u53d1\uff0c\u5b8c\u5168\u514d\u8d39\u4e14\u5f00\u6e90\uff0c\u652f\u6301\u5728 Windows\u3001Linux\u3001macOS \u548c Chrome \u7b49\u6d4f\u89c8\u5668\u4e0a\u8fd0\u884c\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/977986.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### C# \u9879\u76ee\n3\u3001[Bulk-Crap-Uninstaller](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Klocman/Bulk-Crap-Uninstaller)\uff1a\u514d\u8d39\u7684 Windows \u5e94\u7528\u5378\u8f7d\u795e\u5668\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 C# \u5f00\u53d1\u7684 Windows \u8f6f\u4ef6\u5378\u8f7d\u5de5\u5177\uff0c\u80fd\u591f\u5feb\u901f\u5220\u9664\u5927\u91cf\u4e0d\u9700\u8981\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u5b8c\u5168\u514d\u8d39\u3001\u5f00\u7bb1\u5373\u7528\uff0c\u652f\u6301\u6279\u91cf\u548c\u5f3a\u5236\u5378\u8f7d\u3001\u6e05\u7406\u6b8b\u7559\u6587\u4ef6\u3001\u68c0\u6d4b\u9690\u85cf\u6216\u53d7\u4fdd\u62a4\u7684\u5df2\u6ce8\u518c\u5e94\u7528\u7b49\u529f\u80fd\u3002\u867d\u7136\u9762\u5411 IT \u4e13\u4e1a\u4eba\u5458\u8bbe\u8ba1\uff0c\u4f46\u5176\u7b80\u5355\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u8ba9\u4efb\u4f55\u4eba\u90fd\u80fd\u8f7b\u677e\u4e0a\u624b\u3002\u6765\u81ea [@\u730e\u96bc\u4e36\u6b62\u6208reNo7](https://hellogithub.com/user/Ew59HqRWjPe0zZO) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/64677873.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n4\u3001[Macro-Deck](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Macro-Deck-App/Macro-Deck)\uff1a\u5c06\u624b\u673a\u53d8\u6210 Stream Deck \u7684\u5de5\u5177\u3002\u8be5\u9879\u76ee\u53ef\u4ee5\u5c06\u624b\u673a\u3001\u5e73\u677f\u7b49\u5e26\u6d4f\u89c8\u5668\u7684\u8bbe\u5907\u53d8\u6210\u7c7b\u4f3c Stream Deck \u7684\u8fdc\u7a0b\u81ea\u5b9a\u4e49\u6309\u952e\u677f\uff0c\u5b9e\u73b0\u4e00\u952e\u6267\u884c\u5355\u6b65\u6216\u591a\u6b65\u64cd\u4f5c\uff0c\u9002\u7528\u4e8e\u76f4\u64ad\u548c\u7b80\u5316\u65e5\u5e38\u4efb\u52a1\u7b49\u573a\u666f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/166713531.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### C++ \u9879\u76ee\n5\u3001[aria2](https://hellogithub.com/periodical/statistics/click?target=https://github.com/aria2/aria2)\uff1a\u8d85\u5feb\u7684\u547d\u4ee4\u884c\u4e0b\u8f7d\u5de5\u5177\u3002\u8fd9\u4e2a\u8de8\u5e73\u53f0\u547d\u4ee4\u884c\u4e0b\u8f7d\u5de5\u5177\u7531 C++ \u5f00\u53d1\uff0c\u652f\u6301 HTTP(S)\u3001FTP\u3001SFTP\u3001BitTorrent \u7b49\u591a\u79cd\u534f\u8bae\u3002\u5b83\u64cd\u4f5c\u7b80\u5355\u3001\u4f53\u79ef\u5c0f\u3001\u4e0b\u8f7d\u901f\u5ea6\u5feb\uff0c\u5e76\u63d0\u4f9b\u540e\u53f0\u8fd0\u884c\u3001\u901f\u5ea6\u9650\u5236\u3001\u5206\u6bb5\u4e0b\u8f7d\u548c BitTorrent \u6269\u5c55\u7b49\u529f\u80fd\u3002\u6765\u81ea [@\u5218\u777f\u534e](https://hellogithub.com/user/TJ65FfbQU09PLHM) \u7684\u5206\u4eab\n\n6\u3001[fast_float](https://hellogithub.com/periodical/statistics/click?target=https://github.com/fastfloat/fast_float)\uff1a\u901f\u5ea6\u4e0e\u7cbe\u51c6\u517c\u5177\u7684 C++ \u6570\u5b57\u89e3\u6790\u5e93\u3002\u8be5\u9879\u76ee\u662f\u7528\u4e8e\u5feb\u901f\u89e3\u6790\u6570\u5b57\u5b57\u7b26\u4e32\u7684 C++ \u5e93\uff0c\u5b9e\u73b0\u4e86\u7c7b\u4f3c from_charts \u51fd\u6570\u7684\u529f\u80fd\u3002\u5b83\u662f\u4e00\u4e2a\u901f\u5ea6\u6781\u5feb\u3001\u4ec5\u5934\u6587\u4ef6\u7684\u5e93\uff0c\u6bd4\u6807\u51c6\u5e93\u5feb\u6570\u500d\u3002\u652f\u6301\u89e3\u6790 float\u3001double \u548c\u6574\u6570\u7c7b\u578b\u7684\u5b57\u7b26\u4e32\uff0c\u5df2\u88ab\u5e7f\u6cdb\u5e94\u7528\u5728 Chromium\u3001Redis \u548c LLVM \u7b49\u77e5\u540d\u9879\u76ee\u4e2d\u3002\n```c++\n#include \"fast_float/fast_float.h\"\n#include <iostream>\n\nint main() {\n    const std::string input =  \"3.1416 xyz \";\n    double result;\n    auto answer = fast_float::from_chars(input.data(), input.data()+input.size(), result);\n    if(answer.ec != std::errc()) { std::cerr << \"parsing failure\\n\"; return EXIT_FAILURE; }\n    std::cout << \"parsed the number \" << result << std::endl;\n    return EXIT_SUCCESS;\n}\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/305438763.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n7\u3001[mame](https://hellogithub.com/periodical/statistics/click?target=https://github.com/mamedev/mame)\uff1a\u5f00\u6e90\u7684\u8857\u673a\u6a21\u62df\u5668\u3002\u8fd9\u662f\u4e00\u6b3e\u652f\u6301\u6d77\u91cf\u8857\u673a\u6e38\u620f\u7684\u6a21\u62df\u5668\u3002\u5b83\u901a\u8fc7\u6a21\u62df\u591a\u79cd\u786c\u4ef6\u5e73\u53f0\uff0c\u5b9e\u73b0\u4e86\u5728\u7535\u8111\u4e0a\u8fd0\u884c\u5404\u79cd\u590d\u53e4\u8f6f\u4ef6\u7684\u529f\u80fd\u3002\u4e0d\u4ec5\u652f\u6301\u8857\u673a\uff0c\u8fd8\u6709\u8001\u5f0f\u7535\u8111\u548c\u6e38\u620f\u673a\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/14303048.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Go \u9879\u76ee\n8\u3001[beszel](https://hellogithub.com/periodical/statistics/click?target=https://github.com/henrygd/beszel)\uff1a\u8f7b\u91cf\u7ea7\u9ad8\u989c\u503c\u7684 Docker \u76d1\u63a7\u5e73\u53f0\u3002\u8fd9\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u670d\u52a1\u5668\u76d1\u63a7\u5e73\u53f0\uff0c\u5305\u62ec Docker \u7edf\u8ba1\u3001\u5386\u53f2\u6570\u636e\u548c\u8b66\u62a5\u529f\u80fd\u3002\u5b83\u62e5\u6709\u53cb\u597d\u7684 Web \u754c\u9762\uff0c\u914d\u7f6e\u7b80\u5355\u3001\u5f00\u7bb1\u5373\u7528\uff0c\u652f\u6301\u81ea\u52a8\u5907\u4efd\u3001\u591a\u7528\u6237\u3001OAuth \u8ba4\u8bc1\u548c API \u8bbf\u95ee\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/825470378.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n9\u3001[envd](https://hellogithub.com/periodical/statistics/click?target=https://github.com/tensorchord/envd)\uff1a\u9ad8\u6548\u7684 AI \u5f00\u53d1\u73af\u5883\u642d\u5efa\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u4e3a AI/ML \u9879\u76ee\u63d0\u4f9b\u53ef\u590d\u73b0\u5f00\u53d1\u73af\u5883\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002\u53ea\u9700\u7b80\u5355\u7684\u914d\u7f6e\u8bed\u8a00\u548c\u547d\u4ee4\uff0c\u5373\u53ef\u5feb\u901f\u521b\u5efa\u57fa\u4e8e\u5bb9\u5668\u7684\u5f00\u53d1\u73af\u5883\uff0c\u652f\u6301\u8fdc\u7a0b\u6784\u5efa\u3001\u4f9d\u8d56\u7f13\u5b58\u548c\u5bfc\u5165\u8fdc\u7a0b\u4ed3\u5e93\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/480303698.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n10\u3001[gophish](https://hellogithub.com/periodical/statistics/click?target=https://github.com/gophish/gophish)\uff1a\u5f00\u6e90\u7684\u7f51\u7edc\u9493\u9c7c\u5e73\u53f0\u3002\u8be5\u9879\u76ee\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f00\u7bb1\u5373\u7528\u7684\u7f51\u7edc\u9493\u9c7c\u5e73\u53f0\uff0c\u53ef\u7528\u4e8e\u6a21\u62df\u9493\u9c7c\u653b\u51fb\u3002\u5b83\u62e5\u6709\u53cb\u597d\u7684 Web \u7ba1\u7406\u540e\u53f0\uff0c\u652f\u6301\u90ae\u4ef6\u6a21\u677f\u3001\u6279\u91cf\u53d1\u9001\u90ae\u4ef6\u3001\u7f51\u7ad9\u514b\u9686\u548c\u6570\u636e\u53ef\u89c6\u5316\uff0c\u9002\u7528\u4e8e\u4f01\u4e1a\u5b89\u5168\u57f9\u8bad\u548c\u6e17\u900f\u6d4b\u8bd5\u7b49\u573a\u666f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/14508450.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n11\u3001[opentofu](https://hellogithub.com/periodical/statistics/click?target=https://github.com/opentofu/opentofu)\uff1a\u5b9e\u73b0\u57fa\u7840\u8bbe\u65bd\u5373\u4ee3\u7801\u7684\u5f00\u6e90\u65b9\u6848\u3002\u8be5\u9879\u76ee\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u57fa\u7840\u8bbe\u65bd\u5373\u4ee3\u7801\u5de5\u5177\uff0c\u4e13\u6ce8\u4e8e\u81ea\u52a8\u5316\u5730\u521b\u5efa\u3001\u7ba1\u7406\u548c\u90e8\u7f72\u672c\u5730\u548c\u4e91\u670d\u52a1\u57fa\u7840\u8bbe\u65bd\u3002\u4f5c\u4e3a Terraform \u7684\u4e00\u4e2a\u5206\u652f\uff0c\u5b83\u7531\u793e\u533a\u9a71\u52a8\uff0c\u652f\u6301\u4f7f\u7528\u9ad8\u7ea7\u914d\u7f6e\u8bed\u6cd5\u63cf\u8ff0\u57fa\u7840\u8bbe\u65bd\u3001\u751f\u6210\u6267\u884c\u8ba1\u5212\u548c\u6784\u5efa\u8d44\u6e90\u4f9d\u8d56\u56fe\uff0c\u4ece\u800c\u51cf\u5c11\u4eba\u4e3a\u64cd\u4f5c\u5931\u8bef\uff0c\u5b9e\u73b0\u590d\u6742\u53d8\u66f4\u7684\u81ea\u52a8\u5316\u3002\u6765\u81ea [@\u5218\u777f\u534e](https://hellogithub.com/user/TJ65FfbQU09PLHM) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/679421146.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n12\u3001[photoview](https://hellogithub.com/periodical/statistics/click?target=https://github.com/photoview/photoview)\uff1a\u6781\u7b80\u7684\u7167\u7247\u7ba1\u7406\u5e73\u53f0\u3002\u8fd9\u662f\u4e00\u6b3e\u7528\u4e8e\u81ea\u5efa\u4e91\u76f8\u518c\u7684 Web \u5e94\u7528\uff0c\u5b83\u62e5\u6709\u76f4\u89c2\u7684\u7528\u6237\u754c\u9762\u548c\u4e30\u5bcc\u7684\u529f\u80fd\uff0c\u652f\u6301\u81ea\u52a8\u6574\u7406\u7167\u7247\u3001\u751f\u6210\u7f29\u7565\u56fe\u3001\u5171\u4eab\u76f8\u518c\u3001EXIF \u89e3\u6790\u548c\u591a\u7528\u6237\u7ba1\u7406\u3002\u8fd8\u63d0\u4f9b\u4e86 iOS \u5e94\u7528\uff0c\u65b9\u4fbf\u7528\u6237\u5728\u624b\u673a\u4e0a\u8bbf\u95ee\u3002\u6765\u81ea [@\u5218\u777f\u534e](https://hellogithub.com/user/TJ65FfbQU09PLHM) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/195657294.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Java \u9879\u76ee\n13\u3001[GoGoGo](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ZCShou/GoGoGo)\uff1a\u5f00\u6e90\u7684 Android \u865a\u62df\u5b9a\u4f4d\u5e94\u7528\u3002\u8be5\u9879\u76ee\u662f\u4e00\u4e2a\u57fa\u4e8e Android \u8c03\u8bd5 API \u548c\u767e\u5ea6\u5730\u56fe\u5b9e\u73b0\u7684\u865a\u62df\u5b9a\u4f4d\u5de5\u5177\uff0c\u65e0\u9700 ROOT \u6743\u9650\u5373\u53ef\u4fee\u6539\u5730\u7406\u4f4d\u7f6e\u3002\u5b83\u652f\u6301\u4f4d\u7f6e\u641c\u7d22\u548c\u624b\u52a8\u8f93\u5165\u5750\u6807\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u81ea\u7531\u79fb\u52a8\u7684\u6447\u6746\u6765\u6a21\u62df\u4f4d\u79fb\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/434497397.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n14\u3001[karate](https://hellogithub.com/periodical/statistics/click?target=https://github.com/karatelabs/karate)\uff1a\u5f00\u6e90\u7684 API \u81ea\u52a8\u6d4b\u8bd5\u6846\u67b6\u3002\u8fd9\u662f\u4e00\u6b3e\u57fa\u4e8e Java \u7684 API \u6d4b\u8bd5\u6846\u67b6\uff0c\u53ef\u4e0e Spring Boot\u3001Maven \u7b49 Java \u751f\u6001\u7cfb\u7edf\u65e0\u7f1d\u96c6\u6210\u3002\u5b83\u6574\u5408\u4e86 API \u6d4b\u8bd5\u81ea\u52a8\u5316\u3001\u6a21\u62df\u3001\u6027\u80fd\u6d4b\u8bd5\u548c UI \u81ea\u52a8\u5316\u7b49\u529f\u80fd\uff0c\u652f\u6301\u4f7f\u7528\u7c7b\u4f3c Cucumber \u7684\u8bed\u6cd5\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5373\u4f7f\u5bf9 Java \u4e0d\u719f\u6089\u4e5f\u80fd\u8f7b\u677e\u4e0a\u624b\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/81226206.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### JavaScript \u9879\u76ee\n15\u3001[icones](https://hellogithub.com/periodical/statistics/click?target=https://github.com/antfu-collective/icones)\uff1a\u6781\u7b80\u7684\u56fe\u6807\u641c\u7d22\u7f51\u7ad9\u3002\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u5feb\u901f\u67e5\u627e\u5404\u79cd\u56fe\u6807\u7684\u7f51\u7ad9\uff0c\u652f\u6301\u5206\u7c7b\u8fc7\u6ee4\u548c\u591a\u9009\u6a21\u5f0f\u3002\u7528\u6237\u53ef\u5c06\u9009\u62e9\u7684\u56fe\u6807\u6253\u5305\u4e3a\u5b57\u4f53\u6216\u76f4\u63a5\u4e0b\u8f7d SVG \u683c\u5f0f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/278862095.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n16\u3001[media-chrome](https://hellogithub.com/periodical/statistics/click?target=https://github.com/muxinc/media-chrome)\uff1a\u6253\u9020\u73b0\u4ee3\u5316\u7f51\u9875\u64ad\u653e\u5668\u754c\u9762\u7684\u7ec4\u4ef6\u5e93\u3002\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u5b9a\u5236\u7f51\u9875\u97f3\u9891\u548c\u89c6\u9891\u64ad\u653e\u5668\u754c\u9762\u7684\u5e93\uff0c\u517c\u5bb9\u5404\u79cd JavaScript \u6846\u67b6\u3002\u5b83\u9ad8\u5ea6\u53ef\u5b9a\u5236\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u8f7b\u677e\u8c03\u6574\u7ec4\u4ef6\u7684\u5916\u89c2\u548c\u529f\u80fd\uff0c\u652f\u6301\u5b57\u5e55\u3001\u6295\u5c4f\u3001\u5feb\u6377\u952e\u3001\u500d\u901f\u3001\u9884\u89c8\u7f29\u7565\u56fe\u3001\u79fb\u52a8\u7aef\u548c\u9759\u97f3\u6309\u94ae\u7b49\u529f\u80fd\u3002\n```html\n<media-controller audio>\n  <audio\n    slot=\"media\"\n    src=\"xxxxxx\"\n  ></audio>\n  <media-control-bar>\n    <media-play-button></media-play-button>\n    <media-time-display showduration></media-time-display>\n    <media-time-range></media-time-range>\n    <media-playback-rate-button></media-playback-rate-button>\n    <media-mute-button></media-mute-button>\n    <media-volume-range></media-volume-range>\n  </media-control-bar>\n</media-controller>\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/208394975.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n17\u3001[Moe-Counter](https://hellogithub.com/periodical/statistics/click?target=https://github.com/journey-ad/Moe-Counter)\uff1a\u53ef\u7231\u7684\u7f51\u7ad9\u8ba1\u6570\u5668\u3002\u8be5\u9879\u76ee\u662f\u4e00\u4e2a\u7528\u4e8e\u7edf\u8ba1\u9875\u9762\u8bbf\u95ee\u4eba\u6570\u7684\u8ba1\u6570\u5668\u3002\u5b83\u4e0d\u4ec5\u7b80\u5355\u6613\u7528\uff0c\u8fd8\u63d0\u4f9b\u591a\u79cd\u53ef\u7231\u98ce\u683c\u7684\u4e3b\u9898\uff0c\u7528\u6237\u53ef\u6839\u636e\u4e2a\u4eba\u559c\u597d\u8fdb\u884c\u9009\u62e9\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/284698414.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n18\u3001[piscina](https://hellogithub.com/periodical/statistics/click?target=https://github.com/piscinajs/piscina)\uff1a\u7075\u6d3b\u9ad8\u6548\u7684 Node.js \u7ebf\u7a0b\u6c60\u3002\u8be5\u9879\u76ee\u662f\u7528 TypeScript \u7f16\u5199\u7684\u9ad8\u6027\u80fd Node Worker \u7ebf\u7a0b\u6c60\uff0c\u65e8\u5728\u7b80\u5316 Node.js \u591a\u7ebf\u7a0b\u7f16\u7a0b\u3002\u5b83\u63d0\u4f9b\u7b80\u5355\u6613\u7528\u7684 API\uff0c\u652f\u6301\u7ebf\u7a0b\u95f4\u901a\u4fe1\u3001\u52a8\u6001\u8c03\u6574\u7ebf\u7a0b\u6c60\u5927\u5c0f\u3001\u53d6\u6d88\u4efb\u52a1\u3001\u8bbe\u7f6e\u5185\u5b58\u9650\u5236\u548c\u5f02\u6b65\u4efb\u52a1\u8ddf\u8e2a\u7b49\u529f\u80fd\u3002\n```javascript\nconst path = require('path');\nconst Piscina = require('piscina');\n\nconst piscina = new Piscina({\n  filename: path.resolve(__dirname, 'worker.js')\n});\n\n(async function() {\n  const result = await piscina.run({ a: 4, b: 6 });\n  console.log(result);  // Prints 10\n})();\n```\n\n19\u3001[swapy](https://hellogithub.com/periodical/statistics/click?target=https://github.com/TahaSh/swapy)\uff1a\u8f7b\u677e\u5b9e\u73b0\u62d6\u52a8\u4ea4\u6362\u5e03\u5c40\u7684\u5e93\u3002\u8be5\u9879\u76ee\u53ef\u4ee5\u5c06\u4efb\u610f\u5e03\u5c40\u8f6c\u6362\u4e3a\u53ef\u62d6\u52a8\u4ea4\u6362\u7684\u5f62\u5f0f\uff0c\u4ec5\u9700\u51e0\u884c\u4ee3\u7801\u5373\u53ef\u5b9e\u73b0\u3002\u5b83\u652f\u6301\u8bbe\u7f6e\u4ea4\u4e92\u52a8\u753b\uff0c\u53ef\u4ee5\u5728 React\u3001Vue\u3001Svelte \u7b49\u6846\u67b6\u4e2d\u4f7f\u7528\uff0c\u9002\u7528\u4e8e\u5404\u79cd\u9700\u8981\u4ea4\u4e92\u5f0f\u5e03\u5c40\u7684\u573a\u666f\u3002\n```typescript\nimport { createSwapy } from 'swapy'\n\nconst container = document.querySelector('.container')\n\nconst swapy = createSwapy(container, {\n  animation: 'dynamic' // or spring or none\n})\n\n// You can disable and enable it anytime you want\nswapy.enable(true)\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/829042475.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Kotlin \u9879\u76ee\n20\u3001[etchdroid](https://hellogithub.com/periodical/statistics/click?target=https://github.com/etchdroid/etchdroid)\uff1a\u5728\u624b\u673a\u4e0a\u5236\u4f5c USB \u542f\u52a8\u76d8\u7684\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u5f00\u6e90\u7684 Android \u5e94\u7528\uff0c\u4e13\u4e3a\u5728\u624b\u673a\u4e0a\u5236\u4f5c\u64cd\u4f5c\u7cfb\u7edf USB \u542f\u52a8\u76d8\u800c\u8bbe\u8ba1\u3002\u5b83\u65e0\u9700 ROOT \u6743\u9650\uff0c\u5373\u53ef\u5c06\u64cd\u4f5c\u7cfb\u7edf\u955c\u50cf\u5199\u5165 USB \u8bbe\u5907\uff0c\u652f\u6301 Ubuntu\u3001\u6811\u8393\u6d3e\u7b49\u591a\u4e2a\u7cfb\u7edf\uff0c\u9002\u7528\u5728\u65e0\u6cd5\u4f7f\u7528\u7535\u8111\u65f6\u5236\u4f5c\u542f\u52a8 U \u76d8\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/147043230.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n21\u3001[KeyMapper](https://hellogithub.com/periodical/statistics/click?target=https://github.com/keymapperorg/KeyMapper)\uff1aAndroid \u6309\u952e\u91cd\u6620\u5c04\u5e94\u7528\u3002\u8fd9\u662f\u4e00\u4e2a\u514d\u8d39\u5f00\u6e90\u7684 Android \u5e94\u7528\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49 Android \u8bbe\u5907\u7684\u6309\u952e\u3001\u6307\u7eb9\u548c\u624b\u52bf\u64cd\u4f5c\u3002\u65e0\u9700 ROOT \u6743\u9650\uff0c\u652f\u6301\u84dd\u7259\u548c\u6709\u7ebf\u952e\u76d8\uff0c\u63d0\u4f9b\u7075\u6d3b\u7684\u6309\u952e\u91cd\u6620\u5c04\u4f53\u9a8c\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/141129812.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Python \u9879\u76ee\n22\u3001[backtrader](https://hellogithub.com/periodical/statistics/click?target=https://github.com/mementum/backtrader)\uff1aPython \u91cf\u5316\u4ea4\u6613\u56de\u6d4b\u6846\u67b6\u3002\u8be5\u9879\u76ee\u662f\u7528 Python \u7f16\u5199\u7684\u56de\u6d4b\u5e93\uff0c\u4e13\u4e3a\u5f00\u53d1\u548c\u6d4b\u8bd5\u4ea4\u6613\u7b56\u7565\u800c\u8bbe\u8ba1\u3002\u5b83\u53ef\u4ee5\u4ece CSV \u6587\u4ef6\u3001\u5728\u7ebf\u6570\u636e\u6e90\u548c pandas \u4e2d\u63d0\u53d6\u6570\u636e\uff0c\u652f\u6301\u591a\u7b56\u7565\u540c\u6b65\u8fd0\u884c\u3001\u751f\u6210\u4ea4\u6613\u7b56\u7565\u7684\u53ef\u89c6\u5316\u56fe\u8868\u7b49\u529f\u80fd\u3002\u5185\u7f6e 100 \u591a\u79cd\u6307\u6807\uff0c\u5305\u62ec\u8d8b\u52bf\u3001\u6210\u4ea4\u91cf\u548c\u6ce2\u52a8\u6027\u7b49\u6307\u6807\u3002\n```python\nfrom datetime import datetime\nimport backtrader as bt\n\nclass SmaCross(bt.SignalStrategy):\n    def __init__(self):\n        sma1, sma2 = bt.ind.SMA(period=10), bt.ind.SMA(period=30)\n        crossover = bt.ind.CrossOver(sma1, sma2)\n        self.signal_add(bt.SIGNAL_LONG, crossover)\n\ncerebro = bt.Cerebro()\ncerebro.addstrategy(SmaCross)\n\ndata0 = bt.feeds.YahooFinanceData(dataname='MSFT', fromdate=datetime(2011, 1, 1),\n                                  todate=datetime(2012, 12, 31))\ncerebro.adddata(data0)\n\ncerebro.run()\ncerebro.plot()\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/29050338.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n23\u3001[core](https://hellogithub.com/periodical/statistics/click?target=https://github.com/home-assistant/core)\uff1a\u5f00\u6e90\u7684\u667a\u80fd\u5bb6\u5c45\u5e73\u53f0\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 Python \u7f16\u5199\u7684\u667a\u80fd\u5bb6\u5c45\u5e73\u53f0\uff0c\u65e8\u5728\u6574\u5408\u4e0d\u540c\u54c1\u724c\u7684\u667a\u80fd\u8bbe\u5907\uff0c\u63d0\u4f9b\u4e2a\u6027\u5316\u7684\u5bb6\u5ead\u81ea\u52a8\u5316\u4f53\u9a8c\u3002\u5b83\u89e3\u51b3\u4e86\u4f20\u7edf\u7cfb\u7edf\u4e92\u64cd\u4f5c\u6027\uff08Interoperability\uff09\u5dee\u7684\u95ee\u9898\uff0c\u5141\u8bb8\u7528\u6237\u5728\u540c\u4e00\u5e73\u53f0\u4e0a\u81ea\u7531\u63a7\u5236\u548c\u8054\u52a8 Apple HomeKit\u3001\u7c73\u5bb6\u3001Aqara\u3001\u6d82\u9e26\u7b49\u8bbe\u5907\uff0c\u6781\u5927\u63d0\u5347\u4e86\u667a\u80fd\u5bb6\u5c45\u7684\u7075\u6d3b\u6027\u548c\u4fbf\u6377\u6027\u3002\u9002\u5408\u5e0c\u671b\u6253\u7834\u5355\u4e00\u5e73\u53f0\u9650\u5236\u7684\u7528\u6237\uff0c\u5c24\u5176\u662f\u8ffd\u6c42\u9ad8\u6027\u4ef7\u6bd4\u7684 DIY \u667a\u80fd\u5bb6\u5c45\u7231\u597d\u8005\u3002\u6765\u81ea [@\u65e0\u95f4\u4e4b\u949f](https://hellogithub.com/user/rnlYFdQcyhRm50p) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/12888993.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n24\u3001[paperless-ngx](https://hellogithub.com/periodical/statistics/click?target=https://github.com/paperless-ngx/paperless-ngx)\uff1a\u7eb8\u8d28\u6587\u6863\u6570\u5b57\u5316\u5b58\u6863\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e Django \u7684\u6587\u6863\u7ba1\u7406\u7cfb\u7edf\uff0c\u53ef\u5c06\u7eb8\u8d28\u6587\u6863\u8f6c\u6362\u6210\u53ef\u641c\u7d22\u7684\u5728\u7ebf\u5b58\u6863\u3002\u4e0d\u540c\u4e8e\u666e\u901a\u7684\u626b\u63cf\u4eea\u5c06\u5b9e\u4f53\u4e66\u53d8\u4e3a\u96be\u4ee5\u68c0\u7d22\u7684\u56fe\u7247\u6216 PDF \u683c\u5f0f\uff0c\u5b83\u901a\u8fc7\u6587\u6863\u626b\u63cf\u5668\u5b9e\u73b0\u7535\u5b50\u5316\uff0c\u8f6c\u5316\u4e3a\u6613\u4e8e\u68c0\u7d22\u7684\u683c\u5f0f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/458648791.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n25\u3001[pipreqs](https://hellogithub.com/periodical/statistics/click?target=https://github.com/bndr/pipreqs)\uff1a\u5feb\u901f\u751f\u6210 Python \u9879\u76ee\u4f9d\u8d56\u6587\u4ef6\u7684\u5de5\u5177\u3002\u8be5\u9879\u76ee\u53ef\u4ee5\u6839\u636e Python \u9879\u76ee\u4e2d\u7684\u5bfc\u5165\u8bed\u53e5\uff0c\u751f\u6210 requirements.txt \u6587\u4ef6\u3002\u5b83\u80fd\u591f\u81ea\u52a8\u8bc6\u522b\u9879\u76ee\u4e2d\u4f7f\u7528\u7684\u5e93\uff0c\u65e0\u9700\u5b89\u88c5\u5373\u53ef\u751f\u6210\u4f9d\u8d56\u5e93\u5217\u8868\u3002\n\n26\u3001[pokeapi](https://hellogithub.com/periodical/statistics/click?target=https://github.com/PokeAPI/pokeapi)\uff1a\u5b9d\u53ef\u68a6\u6570\u636e\u7684 API \u670d\u52a1\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e Django \u6784\u5efa\u7684\u5b9d\u53ef\u68a6\u6570\u636e RESTful API \u670d\u52a1\uff0c\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u5168\u9762\u7684\u5b9d\u53ef\u68a6\u6570\u636e\u5e93\uff0c\u5305\u62ec\u5c0f\u7cbe\u7075\u7684\u52a8\u4f5c\u3001\u5c5e\u6027\u3001\u6280\u80fd\u548c\u8fdb\u5316\u4fe1\u606f\u7b49\u8be6\u7ec6\u8d44\u6599\u3002\n\n### Rust \u9879\u76ee\n27\u3001[insta](https://hellogithub.com/periodical/statistics/click?target=https://github.com/mitsuhiko/insta)\uff1aRust \u7684\u5feb\u7167\u6d4b\u8bd5\u5e93\u3002\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e Rust \u9879\u76ee\u7684\u5feb\u7167\u6d4b\u8bd5\u5e93\uff0c\u7279\u522b\u9002\u7528\u4e8e\u53c2\u8003\u503c\u975e\u5e38\u5927\u6216\u7ecf\u5e38\u53d8\u5316\u7684\u573a\u666f\u3002\u5b83\u63d0\u4f9b\u4e86 VSCode \u63d2\u4ef6\u548c\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5f53\u6d4b\u8bd5\u56e0\u53c2\u8003\u503c\u53d8\u52a8\u800c\u5931\u8d25\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7 review \u547d\u4ee4\u67e5\u770b\u95ee\u9898\uff0c\u5e76\u4e00\u952e\u66f4\u65b0\u5feb\u7167\uff08\u53c2\u8003\u503c\uff09\uff0c\u4ece\u800c\u5feb\u901f\u901a\u8fc7\u5355\u5143\u6d4b\u8bd5\u3002\n```rust\nfn split_words(s: &str) -> Vec<&str> {\n    s.split_whitespace().collect()\n}\n\n#[test]\nfn test_split_words() {\n    let words = split_words(\"hello from the other side\");\n    insta::assert_yaml_snapshot!(words);\n}\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/165561258.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n28\u3001[oha](https://hellogithub.com/periodical/statistics/click?target=https://github.com/hatoo/oha)\uff1aRust \u9a71\u52a8\u7684 HTTP \u538b\u6d4b\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 Rust \u5f00\u53d1\u7684 HTTP \u8bf7\u6c42\u538b\u6d4b\u5de5\u5177\uff0c\u5b83\u64cd\u4f5c\u7b80\u5355\u3001\u5e26 TUI \u52a8\u753b\u754c\u9762\uff0c\u652f\u6301\u751f\u6210\u8bf7\u6c42\u5ef6\u8fdf\u3001\u541e\u5410\u91cf\u7b49\u6307\u6807\u7684\u62a5\u544a\uff0c\u4ee5\u53ca\u52a8\u6001 URL \u548c\u66f4\u7075\u6d3b\u7684\u8bf7\u6c42\u95f4\u9694\uff08burst-delay\uff09\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/244377430.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n29\u3001[steel](https://hellogithub.com/periodical/statistics/click?target=https://github.com/mattwparas/steel)\uff1a\u57fa\u4e8e Rust \u7684\u5d4c\u5165\u5f0f Scheme \u89e3\u91ca\u5668\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 Rust \u7f16\u5199\u7684\u5d4c\u5165\u5f0f Scheme \u89e3\u91ca\u5668\uff0c\u65e8\u5728\u63d0\u4f9b\u8f7b\u91cf\u7ea7\u4e14\u5feb\u901f\u7684\u811a\u672c\u8bed\u8a00\u652f\u6301\u3002\u5b83\u89e3\u51b3\u4e86\u5728\u5d4c\u5165\u5f0f\u73af\u5883\u6216\u5c0f\u578b\u5e94\u7528\u4e2d\u5bf9\u9ad8\u6548\u3001\u7075\u6d3b\u811a\u672c\u5f15\u64ce\u7684\u9700\u6c42\u3002\u6765\u81ea [@\u65e0\u95f4\u4e4b\u949f](https://hellogithub.com/user/rnlYFdQcyhRm50p) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/241949362.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Swift \u9879\u76ee\n30\u3001[aural-player](https://hellogithub.com/periodical/statistics/click?target=https://github.com/kartik-venugopal/aural-player)\uff1a\u7075\u611f\u6765\u81ea Winamp \u7684 macOS \u97f3\u4e50\u64ad\u653e\u5668\u3002\u8be5\u9879\u76ee\u662f\u53d7\u7ecf\u5178\u7684 Winamp \u64ad\u653e\u5668\u542f\u53d1\uff0c\u7528 Swift \u7f16\u7a0b\u8bed\u8a00\u5f00\u53d1\u7684\u9002\u7528\u4e8e macOS \u7684\u97f3\u4e50\u64ad\u653e\u5668\u3002\u5b83\u5185\u7f6e\u97f3\u6548\u548c\u5747\u8861\u5668\uff0c\u652f\u6301\u591a\u79cd\u97f3\u9891\u683c\u5f0f\u3001\u56de\u653e\u3001\u6b4c\u8bcd\u663e\u793a\u3001\u81ea\u5b9a\u4e49\u754c\u9762\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/96710143.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n31\u3001[DockDoor](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ejbills/DockDoor)\uff1a\u9002\u7528\u4e8e macOS \u7684\u7a97\u53e3\u9884\u89c8\u5de5\u5177\u3002\u8be5\u9879\u76ee\u662f\u7528 Swift \u548c SwiftUI \u5f00\u53d1\u7684 Dock \u7a97\u53e3\u9884\u89c8\u5de5\u5177\u3002\u53ea\u9700\u5c06\u9f20\u6807\u60ac\u505c\u5728 Dock \u4e0a\u7684\u5e94\u7528\u56fe\u6807\uff0c\u5373\u53ef\u9884\u89c8\u5176\u6253\u5f00\u7684\u7a97\u53e3\uff0c\u8fd8\u652f\u6301\u7c7b\u4f3c Windows \u7684 Alt+Tab \u5207\u6362\u548c\u81ea\u5b9a\u4e49\u5feb\u6377\u952e\u7684\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/809906907.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u4eba\u5de5\u667a\u80fd\n32\u3001[moondream](https://hellogithub.com/periodical/statistics/click?target=https://github.com/vikhyat/moondream)\uff1a\u5c0f\u578b\u7684\u89c6\u89c9\u8bed\u8a00\u6a21\u578b\u3002\u8fd9\u662f\u4e00\u4e2a\u53ef\u5728\u8d44\u6e90\u53d7\u9650\u7684\u8bbe\u5907\u4e0a\u8fd0\u884c\u7684\u5c0f\u578b\u89c6\u89c9\u8bed\u8a00\u6a21\u578b\uff0c\u5b83\u80fd\u591f\u7406\u89e3\u5e76\u751f\u6210\u4e0e\u56fe\u50cf\u76f8\u5173\u7684\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\uff0c\u652f\u6301\u56fe\u50cf\u8bc6\u522b\u3001\u751f\u6210\u63cf\u8ff0\u548c\u95ee\u7b54\u7b49\u529f\u80fd\u3002\n```python\nfrom transformers import AutoModelForCausalLM, AutoTokenizer\nfrom PIL import Image\n\nmodel_id = \"vikhyatk/moondream2\"\nrevision = \"2024-08-26\"\nmodel = AutoModelForCausalLM.from_pretrained(\n    model_id, trust_remote_code=True, revision=revision\n)\ntokenizer = AutoTokenizer.from_pretrained(model_id, revision=revision)\n\nimage = Image.open('<IMAGE_PATH>')\nenc_image = model.encode_image(image)\nprint(model.answer_question(enc_image, \"Describe this image.\", tokenizer))\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/736812439.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n33\u3001[Prompt_Engineering](https://hellogithub.com/periodical/statistics/click?target=https://github.com/NirDiamant/Prompt_Engineering)\uff1a\u5168\u9762\u7684\u63d0\u793a\u5de5\u7a0b\u5b9e\u6218\u6307\u5357\u3002\u8fd9\u4efd\u6559\u7a0b\u81f4\u529b\u4e8e\u5e2e\u52a9\u7528\u6237\u638c\u63e1\u4e0e\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u6c9f\u901a\u7684\u6280\u5de7\u3002\u5185\u5bb9\u6db5\u76d6\u4ece\u57fa\u7840\u5230\u9ad8\u7ea7\u7684\u63d0\u793a\u5de5\u7a0b\u6280\u672f\uff0c\u9644\u6709\u8be6\u7ec6\u7684\u5b9e\u73b0\u6307\u5357\u548c\u793a\u4f8b\u4ee3\u7801\u3002\n\n34\u3001[spaCy](https://hellogithub.com/periodical/statistics/click?target=https://github.com/explosion/spaCy)\uff1a\u5f3a\u5927\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406 Python \u5e93\u3002\u8fd9\u662f\u4e00\u4e2a\u5de5\u4e1a\u7ea7\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08NLP\uff09\u5e93\uff0c\u652f\u6301 70 \u591a\u79cd\u8bed\u8a00\u7684\u5206\u8bcd\u548c\u8bad\u7ec3\u3002\u5b83\u91c7\u7528 Python \u7f16\u5199\uff0c\u53ef\u5b9e\u73b0\u6807\u6ce8\u3001\u89e3\u6790\u548c\u6587\u672c\u5206\u7c7b\u7b49\u529f\u80fd\uff0c\u5e76\u652f\u6301\u6a21\u578b\u6253\u5305\u4e0e\u90e8\u7f72\u3002\n```python\n# pip install -U spacy\n# python -m spacy download en_core_web_sm\nimport spacy\n\n# Load English tokenizer, tagger, parser and NER\nnlp = spacy.load(\"en_core_web_sm\")\n\n# Process whole documents\ntext = (\"When Sebastian Thrun started working on self-driving cars at \"\n        \"Google in 2007, few people outside of the company took him \"\n        \"seriously. \u201cI can tell you very senior CEOs of major American \"\n        \"car companies would shake my hand and turn away because I wasn\u2019t \"\n        \"worth talking to,\u201d said Thrun, in an interview with Recode earlier \"\n        \"this week.\")\ndoc = nlp(text)\n\n# Analyze syntax\nprint(\"Noun phrases:\", [chunk.text for chunk in doc.noun_chunks])\nprint(\"Verbs:\", [token.lemma_ for token in doc if token.pos_ == \"VERB\"])\n\n# Find named entities, phrases and concepts\nfor entity in doc.ents:\n    print(entity.text, entity.label_)\n```\n\n35\u3001[ultralytics](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ultralytics/ultralytics)\uff1a\u5148\u8fdb\u7684\u5bf9\u8c61\u68c0\u6d4b\u548c\u8ddf\u8e2a\u6a21\u578b\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e\u4e4b\u524d\u7684 YOLO \u7248\u672c\uff0c\u589e\u52a0\u4e86\u65b0\u529f\u80fd\u5e76\u6539\u8fdb\u4e86\u6a21\u578b\uff0c\u5728\u5bf9\u8c61\u68c0\u6d4b\u3001\u8ddf\u8e2a\u3001\u5b9e\u4f8b\u5206\u5272\u548c\u56fe\u50cf\u5206\u7c7b\u7b49\u4efb\u52a1\u4e2d\u8868\u73b0\u51fa\u8272\u3002\n```python\nfrom ultralytics import YOLO\n\n# Load a model\nmodel = YOLO(\"yolo11n.pt\")\n\n# Train the model\ntrain_results = model.train(\n    data=\"coco8.yaml\",  # path to dataset YAML\n    epochs=100,  # number of training epochs\n    imgsz=640,  # training image size\n    device=\"cpu\",  # device to run on, i.e. device=0 or device=0,1,2,3 or device=cpu\n)\n\n# Evaluate model performance on the validation set\nmetrics = model.val()\n\n# Perform object detection on an image\nresults = model(\"path/to/image.jpg\")\nresults[0].show()\n\n# Export the model to ONNX format\npath = model.export(format=\"onnx\")  # return path to exported model\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/535360445.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5176\u5b83\n36\u3001[BilibiliSponsorBlock](https://hellogithub.com/periodical/statistics/click?target=https://github.com/hanydd/BilibiliSponsorBlock)\uff1aB \u7ad9\u89c6\u9891\u7a7a\u964d\u52a9\u624b\u3002\u8fd9\u662f\u4e00\u6b3e\u80fd\u591f\u81ea\u52a8\u8df3\u8fc7 B \u7ad9\u89c6\u9891\u4e2d\u6070\u996d\u7247\u6bb5\u548c\u5f00\u573a\u3001\u7ed3\u5c3e\u52a8\u753b\u7684\u6d4f\u89c8\u5668\u63d2\u4ef6\uff0c\u6240\u6709\u6807\u6ce8\u6570\u636e\u5747\u7531\u7f51\u53cb\u8d21\u732e\uff0c\u652f\u6301 Chrome\u3001Edge \u548c FireFox \u6d4f\u89c8\u5668\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/744617272.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n37\u3001[cognitive-load](https://hellogithub.com/periodical/statistics/click?target=https://github.com/zakirullin/cognitive-load)\uff1a\u964d\u4f4e\u5f00\u53d1\u8005\u8ba4\u77e5\u8d1f\u8377\u7684\u5efa\u8bae\u3002\u8fd9\u662f\u4e00\u7bc7\u5173\u4e8e\u5982\u4f55\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u964d\u4f4e\u8ba4\u77e5\u8d1f\u8377\u7684\u6587\u7ae0\u3002\u5373\u7b80\u5316\u4ee3\u7801\u3001\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u51cf\u8f7b\u5f00\u53d1\u8005\u5728\u9605\u8bfb\u548c\u7406\u89e3\u4ee3\u7801\u65f6\u7684\u8d1f\u62c5\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/642858415.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n38\u3001[dockerc](https://hellogithub.com/periodical/statistics/click?target=https://github.com/NilsIrl/dockerc)\uff1a\u5c06 Docker \u955c\u50cf\u7f16\u8bd1\u4e3a\u72ec\u7acb\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5de5\u5177\u3002\u8be5\u9879\u76ee\u80fd\u5c06 Docker \u955c\u50cf\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u65e0\u9700\u914d\u7f6e Docker \u73af\u5883\u6216\u5b89\u88c5\u4f9d\u8d56\uff0c\u7b80\u5316\u4e86\u8f6f\u4ef6\u7684\u5206\u53d1\u548c\u8fd0\u884c\u6d41\u7a0b\u3002\u6765\u81ea [@kero990](https://hellogithub.com/user/c3Y4NR1rq6neVoD) \u7684\u5206\u4eab\n\n39\u3001[kubernetes-goat](https://hellogithub.com/periodical/statistics/click?target=https://github.com/madhuakula/kubernetes-goat)\uff1aKubernetes \u5b89\u5168\u653b\u9632\u6f14\u7ec3\u5e73\u53f0\u3002\u8be5\u9879\u76ee\u662f\u7528\u4e8e\u6784\u5efa\u6f0f\u6d1e\u767e\u51fa\u3001\u6613\u53d7\u653b\u51fb\u7684\u96c6\u7fa4\u73af\u5883\uff0c\u8ba9\u5f00\u53d1\u8005\u53ef\u4ee5\u5728\u771f\u5b9e\u573a\u666f\u4e2d\u5b66\u4e60 K8s \u653b\u51fb\u548c\u9632\u5fa1\u6280\u5de7\u3002\n\n40\u3001[pilipala](https://hellogithub.com/periodical/statistics/click?target=https://github.com/guozhigq/pilipala)\uff1a\u5f00\u6e90\u7684 bilibili \u7b2c\u4e09\u65b9\u5ba2\u6237\u7aef\u3002\u8be5\u9879\u76ee\u662f\u7528 Flutter \u5f00\u53d1\u7684 B \u7ad9\u7b2c\u4e09\u65b9\u5ba2\u6237\u7aef\uff0c\u652f\u6301 Android \u548c iOS \u5e73\u53f0\u3002\u5b83\u63d0\u4f9b\u4e86\u63a8\u8350\u89c6\u9891\u5217\u8868\u3001\u70ed\u95e8\u76f4\u64ad\u3001\u756a\u5267\u3001\u79bb\u7ebf\u7f13\u5b58\u3001\u56de\u590d\u8bc4\u8bba\u3001\u5f39\u5e55\u548c\u641c\u7d22\u7b49\u529f\u80fd\u3002\u6765\u81ea [@Micro\u00b7J](https://hellogithub.com/user/L2Xx0OfvPzpYt4u) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/629282922.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n41\u3001[Sensor-Watch](https://hellogithub.com/periodical/statistics/click?target=https://github.com/joeycastillo/Sensor-Watch)\uff1a\u5361\u897f\u6b27 F-91W \u624b\u8868\u7684\u5f00\u6e90\u7535\u8def\u677f\u3002\u8be5\u9879\u76ee\u662f\u4e3a\u7ecf\u5178 Casio F-91W \u624b\u8868\u81ea\u5236\u7535\u8def\u677f\uff0c\u91c7\u7528 ARM Cortex-M0+ \u5fae\u63a7\u5236\u5668\uff08SAM L22\uff09\u3002\u914d\u5907\u5341\u4f4d\u6570\u6bb5\u6db2\u6676\u663e\u793a\u5c4f\u3001\u4e94\u4e2a\u6307\u793a\u6bb5\u3001LED \u80cc\u5149\u548c\u4e09\u4e2a\u6309\u94ae\uff0c\u652f\u6301\u7528\u6237\u901a\u8fc7 USB \u7f16\u7a0b\uff0c\u5728\u624b\u8868\u4e0a\u8fd0\u884c\u81ea\u5b9a\u4e49\u7a0b\u5e8f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/356689400.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n42\u3001[themostdangerouswritingapp](https://hellogithub.com/periodical/statistics/click?target=https://github.com/maebert/themostdangerouswritingapp)\uff1a\u6311\u6218\u5199\u4f5c\u6548\u7387\u6781\u9650\u7684\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u5e2e\u52a9\u7528\u6237\u8fdb\u5165\u5199\u4f5c\u201c\u5fc3\u6d41\u201d\u72b6\u6001\u7684 Web \u5e94\u7528\u3002\u5982\u679c\u4f60\u505c\u6b62\u8f93\u5165\u8d85\u8fc7 5 \u79d2\uff0c\u5c4f\u5e55\u4e0a\u7684\u6587\u5b57\u5c31\u4f1a\u9010\u6e10\u53d8\u5f97\u6a21\u7cca\uff0c\u6700\u7ec8\u4f1a\u5f7b\u5e95\u6d88\u5931\u3002\u6765\u81ea [@\u5b64\u80c6\u67aa\u624b](https://hellogithub.com/user/i1wAIyo6P3NXkxm) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/52758523.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5f00\u6e90\u4e66\u7c4d\n43\u3001[udlbook](https://hellogithub.com/periodical/statistics/click?target=https://github.com/udlbook/udlbook)\uff1a\u300aUnderstanding Deep Learning\u300b\u7406\u89e3\u6df1\u5ea6\u5b66\u4e60\u3002\u8be5\u4e66\u662f\u7531 Simon J.D. Prince \u7f16\u5199\u7684\u4e00\u672c\u5173\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u4e13\u4e1a\u4e66\u7c4d\uff0c\u5185\u5bb9\u6db5\u76d6\u6df1\u5ea6\u5b66\u4e60\u7684\u7406\u8bba\u57fa\u7840\u3001\u6027\u80fd\u8bc4\u4f30\u3001\u5377\u79ef\u7f51\u7edc\u3001Transformers\u3001\u56fe\u795e\u7ecf\u7f51\u7edc\u3001\u751f\u6210\u5bf9\u6297\u7f51\u7edc\uff08GANs\uff09\u3001\u6269\u6563\u6a21\u578b\uff08Diffusion Models\uff09\u3001\u5f3a\u5316\u5b66\u4e60\u7b49\u4e3b\u9898\uff0c\u5e76\u9644\u6709\u5927\u91cf\u7ec3\u4e60\u9898\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/103/520128820.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n\n\n<p align=\"center\">\n    <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub102.md\">\u300e\u4e0a\u4e00\u671f\u300f</a> | <a href='https://github.com/521xueweihan/HelloGitHub/issues/899'>\u53cd\u9988\u548c\u5efa\u8bae</a> | <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub104.md\">\u300e\u4e0b\u4e00\u671f\u300f</a>\n</p>\n\n---\n<p align=\"center\">\n    \ud83d\udc49 <a href='https://hellogithub.com/periodical'>\u6765\uff01\u63a8\u8350\u5f00\u6e90\u9879\u76ee</a> \ud83d\udc48<br>\n    \u5fae\u4fe1\u4e2d\u641c\uff1a<strong>HelloGitHub</strong> \u5173\u6ce8\u516c\u4f17\u53f7<br>\n    \u4e0d\u4ec5\u80fd\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\uff0c\u8fd8\u6709\u56de\u9988\u7c89\u4e1d\u7684\u6d3b\u52a8<br>\n    \u5982\u679c\u6587\u4e2d\u7684\u56fe\u5237\u4e0d\u51fa\u6765\uff0c\u53ef\u4ee5\u70b9\u51fb <a href='https://hellogithub.com/periodical/volume/103'>\u8fd9\u91cc</a>\u3002\n</p>\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "content/HelloGitHub104.md", "size": 28456, "license": "NOASSERTION", "content_sha": "a8739ff59b2ac4d20f4dc8592eef40ad735268d8", "findings": [], "content": "# \u300aHelloGitHub\u300b\u7b2c 104 \u671f\n> \u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c**HelloGitHub** \u8ba9\u4f60\u5bf9\u5f00\u6e90\u611f\u5174\u8da3\uff01\n<p align=\"center\">\n    <img src='https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg' style=\"max-width:100%;\"></img>\n</p>\n\n## \u76ee\u5f55\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 **\u300c\u76ee\u5f55\u300d** \u56fe\u6807\u6253\u5f00\u76ee\u5f55\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n![](https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png)\n\n**Tips**\uff1a\u5982\u679c\u9047\u5230\u56fe\u7247\u5237\u4e0d\u51fa\u6765\u7684\u60c5\u51b5\uff0c[\u70b9\u51fb](https://hellogithub.com/periodical/volume/104) \u6362\u4e00\u79cd\u6d4f\u89c8\u65b9\u5f0f\u3002\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\" style=\"max-width:30%;\"></img><br>\n\u5173\u6ce8\u300cHelloGitHub\u300d\u516c\u4f17\u53f7\uff0c\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\n</p>\n\n## \u5185\u5bb9\n> **\u4ee5\u4e0b\u4e3a\u672c\u671f\u5185\u5bb9**\uff5c\u6bcf\u4e2a\u6708 **28** \u53f7\u66f4\u65b0\n\n### C \u9879\u76ee\n1\u3001[deskhop](https://hellogithub.com/periodical/statistics/click?target=https://github.com/hrvach/deskhop)\uff1a\u57fa\u4e8e\u6811\u8393\u6d3e\u7684\u53cc\u673a\u9f20\u6807\u952e\u76d8\u5171\u4eab\u65b9\u6848\u3002\u8fd9\u662f\u4e00\u6b3e\u7528\u4e8e\u5feb\u901f\u5207\u6362\u9f20\u6807\u548c\u952e\u76d8\u7684\u684c\u9762\u5207\u6362\u5de5\u5177\uff0c\u89e3\u51b3\u4e86\u7528\u6237\u5728\u591a\u53f0\u8ba1\u7b97\u673a\u4e4b\u95f4\u5171\u4eab\u952e\u76d8\u548c\u9f20\u6807\u65f6\u9047\u5230\u7684\u7e41\u7410\u548c\u5ef6\u8fdf\u95ee\u9898\u3002\u5b83\u901a\u8fc7\u786c\u4ef6\u4e2d\u4ecb\u8bbe\u5907\uff0c\u652f\u6301\u5728\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\uff08Linux\u3001macOS\u3001Windows\uff09\u4e4b\u95f4\u901a\u8fc7\u62d6\u52a8\u9f20\u6807\u6216\u4f7f\u7528\u5feb\u6377\u952e\u5b9e\u73b0\u8f93\u5165\u7684\u65e0\u7f1d\u5207\u6362\u3002\u8be5\u9879\u76ee\u5b8c\u5168\u5f00\u6e90\uff0c\u4e14\u4e0d\u9700\u8981\u5b89\u88c5\u989d\u5916\u7684\u9a71\u52a8\u3002\u786c\u4ef6\u5219\u662f\u57fa\u4e8e Raspberry Pi Pico \u548c USB \u8f93\u5165/\u8f93\u51fa\u534f\u8bae\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u914d\u7f6e\u5e76\u63d0\u4f9b\u591a\u79cd\u9644\u52a0\u529f\u80fd\uff0c\u5982\u6162\u901f\u9f20\u6807\u6a21\u5f0f\u3001\u5c4f\u5e55\u9501\u5b9a\u548c\u6e38\u620f\u6a21\u5f0f\u3002\u6765\u81ea [@\u65e0\u95f4\u4e4b\u949f](https://hellogithub.com/user/rnlYFdQcyhRm50p) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/735426820.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n2\u3001[kyanos](https://hellogithub.com/periodical/statistics/click?target=https://github.com/hengyoush/kyanos)\uff1a\u6df1\u5165\u5185\u6838\u7684\u7f51\u7edc\u6d41\u91cf\u5206\u6790\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e eBPF \u7684\u7f51\u7edc\u95ee\u9898\u5206\u6790\u5de5\u5177\uff0c\u80fd\u591f\u5b9e\u65f6\u76d1\u63a7\u548c\u5206\u6790 HTTP\u3001Redis \u548c MySQL \u8bf7\u6c42\u3002\u5b83\u652f\u6301\u5f3a\u5927\u7684\u6d41\u91cf\u8fc7\u6ee4\u529f\u80fd\uff0c\u53ef\u6839\u636e\u8fdb\u7a0b\u3001\u5bb9\u5668\u3001\u534f\u8bae\u4fe1\u606f\u548c\u8017\u65f6\u7b49\u6761\u4ef6\u8fdb\u884c\u7cbe\u786e\u8fc7\u6ee4\uff0c\u5e76\u63d0\u4f9b\u591a\u7ef4\u5ea6\u805a\u5408\u6293\u53d6\u7684\u6570\u636e\u5305\u4fe1\u606f\uff0c\u9002\u7528\u4e8e\u6392\u67e5\u8fdc\u7a0b\u670d\u52a1\u6162\u67e5\u8be2\u7b49\u95ee\u9898\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/793985221.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n3\u3001[minisign](https://hellogithub.com/periodical/statistics/click?target=https://github.com/jedisct1/minisign)\uff1a\u7b80\u5355\u6613\u7528\u7684\u6587\u4ef6\u7b7e\u540d\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u5f00\u7bb1\u5373\u7528\u7684\u6587\u4ef6\u6570\u5b57\u7b7e\u540d\u4e0e\u9a8c\u8bc1\u5de5\u5177\uff0c\u53ea\u9700\u8981\u7b80\u5355\u7684\u547d\u4ee4\u5373\u53ef\u751f\u6210\u548c\u9a8c\u8bc1\u6587\u4ef6\u7b7e\u540d\u3002\u5b83\u57fa\u4e8e Ed25519 \u516c\u94a5\u7b7e\u540d\u7cfb\u7edf\uff0c\u63d0\u4f9b\u53ef\u9760\u7684\u6587\u4ef6\u5b8c\u6574\u6027\u9a8c\u8bc1\u529f\u80fd\uff0c\u9002\u7528\u4e8e\u8f6f\u4ef6\u5206\u53d1\u548c\u6587\u4ef6\u5171\u4eab\u7b49\u573a\u666f\u3002\n```\n# \u521b\u5efa\u5bc6\u94a5\nminisign -G\n# \u5bf9\u6587\u4ef6\u8fdb\u884c\u7b7e\u540d\nminisign -Sm HelloGitHub.txt\n# \u9a8c\u8bc1\u7b7e\u540d\n$ minisign -Vm HelloGitHub.txt -P xxxx\n```\n\n### C# \u9879\u76ee\n4\u3001[AvaloniaVisualBasic6](https://hellogithub.com/periodical/statistics/click?target=https://github.com/BAndysc/AvaloniaVisualBasic6)\uff1a\u7ecf\u5178\u7684 VB6 IDE \u8de8\u5e73\u53f0\u91cd\u751f\u8ba1\u5212\u3002\u8be5\u9879\u76ee\u4f7f\u7528 C# \u8bed\u8a00\u548c Avalonia \u6846\u67b6\u590d\u523b\u4e86\u7ecf\u5178\u7684 Visual Basic 6 IDE\uff0c\u652f\u6301\u521b\u5efa\u3001\u4fdd\u5b58\u3001\u52a0\u8f7d\u548c\u8fd0\u884c VB6 \u8bed\u8a00\u7684\u9879\u76ee\uff0c\u80fd\u591f\u5728 Windows\u3001macOS\u3001Linux \u548c\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u3002\u6765\u81ea [@39499740](https://hellogithub.com/user/7eRBdwFSrtPxipV) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/884565845.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n5\u3001[FileConverter](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Tichau/FileConverter)\uff1a\u53f3\u952e\u8f7b\u677e\u8f6c\u6362\u548c\u538b\u7f29\u6587\u4ef6\u7684\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u4e13\u4e3a Windows \u8bbe\u8ba1\u7684\u6587\u4ef6\u8f6c\u6362\u548c\u538b\u7f29\u5de5\u5177\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u53f3\u952e\u83dc\u5355\u8f7b\u677e\u5b8c\u6210\u6587\u4ef6\u683c\u5f0f\u8f6c\u6362\u548c\u538b\u7f29\u64cd\u4f5c\u3002\u5b83\u5b8c\u5168\u514d\u8d39\u5f00\u6e90\uff0c\u652f\u6301\u591a\u79cd\u6587\u4ef6\u683c\u5f0f\u3001\u6279\u91cf\u5904\u7406\u7b49\u529f\u80fd\uff0c\u5e76\u63d0\u4f9b\u5305\u62ec\u4e2d\u6587\u5728\u5185\u7684\u591a\u8bed\u8a00\u652f\u6301\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/33476566.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### C++ \u9879\u76ee\n6\u3001[carla](https://hellogithub.com/periodical/statistics/click?target=https://github.com/carla-simulator/carla)\uff1a\u5f00\u6e90\u7684\u81ea\u52a8\u9a7e\u9a76\u7814\u53d1\u6a21\u62df\u5e73\u53f0\u3002\u8fd9\u662f\u4e00\u6b3e\u7528\u4e8e\u81ea\u52a8\u9a7e\u9a76\u7814\u7a76\u7684\u5f00\u6e90\u6a21\u62df\u5668\uff0c\u4e13\u4e3a\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\u7684\u5f00\u53d1\u3001\u8bad\u7ec3\u548c\u9a8c\u8bc1\u63d0\u4f9b\u865a\u62df\u73af\u5883\u3002\u5b83\u5305\u542b\u514d\u8d39\u7684\u6570\u5b57\u8d44\u4ea7\u5e93\uff0c\u5305\u62ec\u57ce\u5e02\u5e03\u5c40\u3001\u5efa\u7b51\u548c\u8f66\u8f86\u6a21\u578b\u7b49\uff0c\u652f\u6301\u7075\u6d3b\u914d\u7f6e\u4f20\u611f\u5668\u5957\u4ef6\u548c\u73af\u5883\u6761\u4ef6\u3002\u8fd8\u63d0\u4f9b\u4e86\u5bb9\u6613\u4e0a\u624b\u7684 Python API\uff0c\u65b9\u4fbf\u5f00\u53d1\u8005\u8fdb\u884c\u8f66\u8f86\u63a7\u5236\u3001\u4f20\u611f\u5668\u914d\u7f6e\u548c\u73af\u5883\u53c2\u6570\u8c03\u6574\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/108102826.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n7\u3001[PrismLauncher](https://hellogithub.com/periodical/statistics/click?target=https://github.com/PrismLauncher/PrismLauncher)\uff1a\u5f00\u6e90\u7684 Minecraft \u542f\u52a8\u5668\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e MultiMC \u5f00\u53d1\u7684 Minecraft \u542f\u52a8\u5668\uff0c\u65e8\u5728\u5e2e\u52a9\u7528\u6237\u8f7b\u677e\u7ba1\u7406\u591a\u4e2a Minecraft \u7248\u672c\u548c\u5b9e\u4f8b\u3002\u5b83\u4f18\u5316\u4e86\u542f\u52a8\u5668\u7684\u4f7f\u7528\u4f53\u9a8c\uff0c\u652f\u6301\u5feb\u901f\u5207\u6362\u4e0d\u540c\u7248\u672c\u3001\u6a21\u7ec4\u914d\u7f6e\u548c\u6e38\u620f\u8bbe\u7f6e\uff0c\u517c\u5bb9 Windows\u3001Linux \u548c macOS \u5e73\u53f0\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/553135896.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n8\u3001[zeal](https://hellogithub.com/periodical/statistics/click?target=https://github.com/zealdocs/zeal)\uff1a\u5b9e\u7528\u7684\u79bb\u7ebf\u6587\u6863\u6d4f\u89c8\u5de5\u5177\u3002\u8be5\u9879\u76ee\u662f\u53d7 Dash \u542f\u53d1\u3001\u4e13\u4e3a\u5f00\u53d1\u8005\u6253\u9020\u7684\u79bb\u7ebf\u6587\u6863\u67e5\u8be2\u5de5\u5177\uff0c\u65e0\u9700\u8054\u7f51\u5373\u53ef\u8bbf\u95ee\u5404\u79cd\u7f16\u7a0b\u8bed\u8a00\u548c\u6846\u67b6\u7684 API \u6587\u6863\u3002\u5b83\u63d0\u4f9b\u7b80\u6d01\u7684\u754c\u9762\u548c\u591a\u79cd\u7f16\u8f91\u5668\u63d2\u4ef6\uff0c\u5e76\u652f\u6301\u81ea\u5b9a\u4e49\u6587\u6863\u7684\u521b\u5efa\u548c\u5bfc\u5165\uff0c\u9002\u5408\u5728\u6ca1\u7f51\u7684\u73af\u5883\u4e0b\u67e5\u770b\u6280\u672f\u6587\u6863\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/7711472.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Go \u9879\u76ee\n9\u3001[dpanel](https://hellogithub.com/periodical/statistics/click?target=https://github.com/donknap/dpanel)\uff1a\u8f7b\u91cf\u7ea7\u7684 Docker \u53ef\u89c6\u5316\u7ba1\u7406\u9762\u677f\u3002\u8fd9\u662f\u4e00\u6b3e\u4e13\u4e3a\u56fd\u5185\u7528\u6237\u8bbe\u8ba1\u7684 Docker \u53ef\u89c6\u5316\u7ba1\u7406\u9762\u677f\uff0c\u91c7\u7528\u5168\u4e2d\u6587\u754c\u9762\u3002\u5b83\u5b89\u88c5\u7b80\u5355\u4e14\u8d44\u6e90\u5360\u7528\u4f4e\uff0c\u8fd0\u884c\u5728\u5bb9\u5668\u5185\u90e8\u5bf9\u5bbf\u4e3b\u673a\u65e0\u4fb5\u5165\uff0c\u652f\u6301\u5bb9\u5668\u7ba1\u7406\u3001\u955c\u50cf\u7ba1\u7406\u3001\u6587\u4ef6\u7ba1\u7406\u4ee5\u53ca Compose \u7ba1\u7406\u7b49\u529f\u80fd\u3002\u6765\u81ea [@donknap](https://hellogithub.com/user/ekhLfDOxR5U0mVw) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/722655859.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n10\u3001[go-blueprint](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Melkeydev/go-blueprint)\uff1a\u5feb\u901f\u751f\u6210 Go Web \u9879\u76ee\u7ed3\u6784\u7684\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u5feb\u901f\u642d\u5efa Go \u8bed\u8a00 Web \u9879\u76ee\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u96c6\u6210\u4e86 Chi\u3001Gin\u3001Fiber\u3001Echo \u7b49\u591a\u79cd\u6d41\u884c\u7684 Go \u6846\u67b6\u3002\u5b83\u652f\u6301\u9009\u62e9 MySQL\u3001Postgres\u3001Redis \u7b49\u4e3b\u6d41\u6570\u636e\u5e93\uff0c\u8fd8\u63d0\u4f9b\u4e86 WebSocket \u548c Docker \u7b49\u9ad8\u7ea7\u8bbe\u7f6e\u3002\u7528\u6237\u53ea\u9700\u9009\u62e9\u6280\u672f\u6808\uff0c\u5373\u53ef\u751f\u6210\u4e00\u5957\u5b8c\u6574\u7684 Go Web \u9879\u76ee\u67b6\u5b50\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/703404066.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n11\u3001[lute](https://hellogithub.com/periodical/statistics/click?target=https://github.com/88250/lute)\uff1a\u5bf9\u4e2d\u6587\u66f4\u53cb\u597d\u7684 Markdown \u5f15\u64ce\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 Go \u8bed\u8a00\u7f16\u5199\u7684 Markdown \u5f15\u64ce\uff0c\u5b9e\u73b0\u4e86\u6700\u65b0\u7684 GFM/CM \u89c4\u8303\u3002\u5b83\u662f\u5c06 Markdown \u6587\u672c\u8f6c\u6362\u6210\u4e00\u4e2a\u62bd\u8c61\u8bed\u6cd5\u6811\uff08AST\uff09\uff0c\u65e0\u9700\u6b63\u5219\u8868\u8fbe\u5f0f\u89e3\u6790\u901f\u5ea6\u66f4\u5feb\uff0c\u652f\u6301 GFM/CM \u89c4\u8303\u3001\u5185\u7f6e\u4ee3\u7801\u9ad8\u4eae\u3001\u672f\u8bed\u4fee\u6b63\u3001\u683c\u5f0f\u5316\uff08\u4e2d\u82f1\u6587\u95f4\u81ea\u52a8\u63d2\u5165\u7a7a\u683c\uff09\u548c Emoji \u89e3\u6790\u7b49\u529f\u80fd\u3002\u6765\u81ea [@\u4e24\u53cc\u7b77\u5b50sqldc](https://hellogithub.com/user/5dGtvaZ6H3L4QMY) \u7684\u5206\u4eab\n```go\nfunc main() {\n\tluteEngine := lute.New() // \u9ed8\u8ba4\u5df2\u7ecf\u542f\u7528 GFM \u652f\u6301\u4ee5\u53ca\u4e2d\u6587\u8bed\u5883\u4f18\u5316\n\thtml:= luteEngine.MarkdownStr(\"demo\", \"**Lute** - A structured markdown engine.\")\n\tfmt.Println(html)\n\t// <p><strong>Lute</strong> - A structured Markdown engine.</p>\n}\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/225160662.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n12\u3001[OliveTin](https://hellogithub.com/periodical/statistics/click?target=https://github.com/OliveTin/OliveTin)\uff1a\u6781\u7b80\u7684 Shell \u547d\u4ee4 Web \u7ba1\u7406\u5e73\u53f0\u3002\u8be5\u9879\u76ee\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u76f4\u89c2\u7684 Web \u754c\u9762\uff0c\u8ba9\u7528\u6237\u80fd\u591f\u5feb\u901f\u6267\u884c\u9884\u5148\u8bbe\u5b9a\u597d\u7684 Shell \u547d\u4ee4\u3002\u5b83\u5f00\u7bb1\u5373\u7528\u3001\u914d\u7f6e\u7b80\u5355\u3001\u5360\u7528\u8d44\u6e90\u5c11\uff0c\u53ef\u4ee5\u5c06\u590d\u6742\u7684\u547d\u4ee4\u7b80\u5316\u6210\u7f51\u9875\u4e0a\u7684\u4e00\u4e2a\u6309\u94ae\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/365300077.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n13\u3001[wanderer](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Flomp/wanderer)\uff1a\u5f00\u6e90\u7684\u63a2\u9669\u8f68\u8ff9\u8bb0\u5f55\u4e0e\u5206\u4eab\u5e73\u53f0\u3002\u8be5\u9879\u76ee\u662f\u7528\u4e8e\u8bb0\u5f55\u548c\u7ba1\u7406\u7528\u6237\u7684\u6237\u5916\u63a2\u9669\u8f68\u8ff9\u7684 Web \u5e73\u53f0\uff0c\u5e2e\u52a9\u4f60\u4fdd\u5b58\u73cd\u8d35\u7684\u884c\u7a0b\u6570\u636e\u3002\u5b83\u91c7\u7528 Go+Svelte \u5f00\u53d1\uff0c\u63d0\u4f9b\u4e0a\u4f20\u3001\u4fdd\u5b58\u3001\u67e5\u770b\uff08\u591a\u79cd\u89c6\u56fe\uff09\u548c\u5206\u4eab\u5192\u9669\u8f68\u8ff9\u7684\u529f\u80fd\uff0c\u5e76\u652f\u6301\u81ea\u6258\u7ba1\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/749092533.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### JavaScript \u9879\u76ee\n14\u3001[moodist](https://hellogithub.com/periodical/statistics/click?target=https://github.com/remvze/moodist)\uff1a\u514d\u8d39\u3001\u9ad8\u989c\u503c\u7684\u767d\u566a\u97f3\u7f51\u7ad9\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u52a9\u4e8e\u4e13\u6ce8\u4e0e\u653e\u677e\u7684\u542c\u89c9\u7f51\u7ad9\uff0c\u65e0\u9700\u6ce8\u518c\u5b8c\u5168\u514d\u8d39\u3002\u5b83\u754c\u9762\u7b80\u6d01\u3001\u64cd\u4f5c\u65b9\u4fbf\uff0c\u5185\u7f6e 75 \u79cd\u767d\u566a\u97f3\uff0c\u7528\u6237\u53ef\u6839\u636e\u4e2a\u4eba\u559c\u597d\u81ea\u7531\u9009\u62e9\u4e0e\u7ec4\u5408\uff0c\u627e\u5230\u9002\u5408\u81ea\u5df1\u7684\u58f0\u97f3\u73af\u5883\u3002\u540c\u65f6\uff0cMoodist \u8fd8\u652f\u6301\u5b9a\u65f6\u5173\u95ed\u3001\u756a\u8304\u65f6\u949f\u3001\u5feb\u6377\u952e\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/700879222.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n15\u3001[rot.js](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ondras/rot.js)\uff1a\u5f00\u53d1 Roguelike \u6e38\u620f\u7684 JavaScript \u5de5\u5177\u5305\u3002\u8fd9\u662f\u4e00\u4e2a\u65e0\u4f9d\u8d56\u7684 JavaScript \u5e93\uff0c\u4e13\u4e3a\u5f00\u53d1 Roguelike\uff08\u8089\u9e3d\uff09\u6e38\u620f\u800c\u8bbe\u8ba1\uff0c\u5305\u542b\u5730\u56fe\u751f\u6210\u3001\u968f\u673a\u6570\u751f\u6210\u3001\u8def\u5f84\u5bfb\u627e\u3001\u6309\u952e\u5904\u7406\u548c\u7167\u660e\u7b49\u591a\u4e2a\u6a21\u5757\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/4391145.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n16\u3001[slugify](https://hellogithub.com/periodical/statistics/click?target=https://github.com/simov/slugify)\uff1a\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u6210 URL \u53cb\u597d\u7684 JS \u5e93\u3002\u8be5\u9879\u76ee\u662f\u7528\u4e8e\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u9002\u5408\u5728 URL \u4e2d\u4f7f\u7528\u7684\u683c\u5f0f\uff0c\u8f93\u51fa\u7531\u5c0f\u5199\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u77ed\u6a2a\u7ebf\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u4e0d\u542b\u7a7a\u683c\u548c\u7279\u6b8a\u5b57\u7b26\uff0c\u8fd9\u79cd\u683c\u5f0f\u6709\u52a9\u4e8e\u641c\u7d22\u5f15\u64ce\u4f18\u5316\uff08SEO\uff09\u3002\n```javascript\nvar slugify = require('slugify')\n\nslugify('some string') // some-string\n\n// if you prefer something other than '-' as separator\nslugify('some string', '_')  // some_string\n```\n\n17\u3001[starlight](https://hellogithub.com/periodical/statistics/click?target=https://github.com/withastro/starlight)\uff1a\u57fa\u4e8e Astro \u7684\u4e00\u7ad9\u5f0f\u6587\u6863\u89e3\u51b3\u65b9\u6848\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e Astro \u6846\u67b6\u6253\u9020\u7684\u6587\u6863\u4e3b\u9898\uff0c\u53ef\u7528\u4e8e\u5feb\u901f\u642d\u5efa\u548c\u90e8\u7f72\u6587\u6863\u7f51\u7ad9\u3002\u5b83\u754c\u9762\u7f8e\u89c2\u3001\u5f00\u7bb1\u5373\u7528\u3001\u8bbf\u95ee\u901f\u5ea6\u5feb\uff0c\u652f\u6301\u7f51\u7ad9\u5bfc\u822a\u3001\u641c\u7d22\u3001\u56fd\u9645\u5316\u3001SEO \u548c\u5404\u79cd\u63d2\u4ef6\u3002\u6765\u81ea [@\u5c0f\u5c0f\u4fee\u771f\u8005](https://hellogithub.com/user/OJpriDKTWlq0ZHI) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/614933136.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n18\u3001[xiaoju-survey](https://hellogithub.com/periodical/statistics/click?target=https://github.com/didi/xiaoju-survey)\uff1a\u4f01\u4e1a\u7ea7\u7684\u95ee\u5377\u8c03\u67e5\u5e73\u53f0\u3002\u8fd9\u662f\u4e00\u6b3e\u514d\u8d39\u4e14\u4e13\u4e1a\u7684\u8c03\u7814\u7cfb\u7edf\uff0c\u65e8\u5728\u4e3a\u4e2a\u4eba\u548c\u4f01\u4e1a\u63d0\u4f9b\u4e00\u7ad9\u5f0f\u4ea7\u54c1\u7ea7\u7684\u8c03\u7814\u89e3\u51b3\u65b9\u6848\u3002\u5b83\u524d\u540e\u7aef\u5747\u5df2\u5f00\u6e90\uff0c\u5e76\u652f\u6301 Docker \u4e00\u952e\u90e8\u7f72\uff0c\u5185\u7f6e\u4e86\u591a\u79cd\u9898\u578b\u548c\u6a21\u7248\uff0c\u652f\u6301\u903b\u8f91\u7f16\u6392\u3001\u81ea\u5b9a\u4e49\u54c1\u724c\u3001\u6743\u9650\u7ba1\u7406\u3001\u6570\u636e\u5206\u6790\u548c\u5bfc\u51fa\u7b49\u529f\u80fd\uff0c\u53ef\u7528\u4e8e\u521b\u5efa\u95ee\u5377\u3001\u8003\u8bd5\u3001\u6d4b\u8bc4\u548c\u590d\u6742\u8868\u5355\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/713210442.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Kotlin \u9879\u76ee\n19\u3001[ab-download-manager](https://hellogithub.com/periodical/statistics/click?target=https://github.com/amir1376/ab-download-manager)\uff1aKotlin \u5f00\u53d1\u7684\u4e0b\u8f7d\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u684c\u9762\u4e0b\u8f7d\u5de5\u5177\uff0c\u4e13\u4e3a\u63d0\u4f9b\u4fbf\u6377\u5feb\u901f\u7684\u4e0b\u8f7d\u4f53\u9a8c\u800c\u8bbe\u8ba1\u3002\u5b83\u62e5\u6709\u73b0\u4ee3\u5316\u7684\u754c\u9762\u548c\u66f4\u5feb\u7684\u4e0b\u8f7d\u901f\u5ea6\uff0c\u652f\u6301\u4e0b\u8f7d\u961f\u5217\u3001\u901f\u5ea6\u9650\u5236\u548c\u6d4f\u89c8\u5668\u63d2\u4ef6\u529f\u80fd\uff0c\u517c\u5bb9 Windows \u548c Linux \u5e73\u53f0\u3002\u6765\u81ea [@DeShuiYu](https://hellogithub.com/user/ZWJkOqsvYbPgD8p) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/825187044.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n20\u3001[Olauncher](https://hellogithub.com/periodical/statistics/click?target=https://github.com/tanujnotes/Olauncher)\uff1a\u6781\u7b80\u7684 Android \u542f\u52a8\u5668\u3002\u8fd9\u662f\u4e00\u6b3e\u514d\u8d39\u3001\u65e0\u5e7f\u544a\u7684 Android \u542f\u52a8\u5668\uff0c\u4e3b\u5c4f\u5e55\u4e0a\u6700\u591a\u53ef\u8bbe\u7f6e 8 \u4e2a\u5e94\u7528\uff0c\u63d0\u4f9b\u6781\u7b80\u7684 Android \u4f7f\u7528\u4f53\u9a8c\uff0c\u5e76\u652f\u6301\u624b\u52bf\u3001\u53cc\u51fb\u9501\u5c4f\u548c\u6bcf\u65e5\u58c1\u7eb8\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/278638069.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Python \u9879\u76ee\n21\u3001[ASCII-generator](https://hellogithub.com/periodical/statistics/click?target=https://github.com/vietnh1009/ASCII-generator)\uff1a\u751f\u6210\u6587\u5b57\u56fe\u7684 Python \u5e93\u3002\u8be5\u9879\u76ee\u662f\u4e00\u6b3e\u5c06\u56fe\u7247\u548c\u89c6\u9891\u8f6c\u6362\u4e3a ASCII \u827a\u672f\u98ce\u683c\u4f5c\u54c1\u7684\u5de5\u5177\uff0c\u5373\u7528\u5b57\u7b26\u827a\u672f\u5316\u5730\u8868\u8fbe\u56fe\u50cf\u5185\u5bb9\u3002\u5b83\u4f7f\u7528\u7b80\u5355\uff0c\u652f\u6301\u5c06\u56fe\u7247\u8f6c\u6362\u4e3a\u6587\u672c\u6216 ASCII \u98ce\u683c\u56fe\u7247\uff0c\u4ee5\u53ca\u5c06\u89c6\u9891\u8f6c\u6362\u4e3a ASCII \u98ce\u683c\u89c6\u9891\uff0c\u5e76\u63d0\u4f9b\u989c\u8272\u9009\u62e9\u7b49\u591a\u79cd\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/168572824.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n22\u3001[icloud_photos_downloader](https://hellogithub.com/periodical/statistics/click?target=https://github.com/icloud-photos-downloader/icloud_photos_downloader)\uff1aiCloud \u7167\u7247\u4e0b\u8f7d\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u7528 Python \u5f00\u53d1\u7684\u5de5\u5177\uff0c\u53ef\u7528\u4e8e\u6279\u91cf\u4e0b\u8f7d iCloud \u7167\u7247\u3002\u5b83\u63d0\u4f9b\u4e86\u590d\u5236\u3001\u540c\u6b65\u548c\u79fb\u52a8\u4e09\u79cd\u64cd\u4f5c\u6a21\u5f0f\uff0c\u652f\u6301 Live Photos\u3001\u81ea\u52a8\u5220\u9664\u91cd\u590d\u6570\u636e\u3001\u589e\u91cf\u4e0b\u8f7d\u7b49\u529f\u80fd\uff0c\u9002\u5408\u7528\u4e8e iCloud \u7167\u7247\u8fc1\u79fb\u548c\u5907\u4efd\u7b49\u573a\u666f\u3002\n\n23\u3001[imagehash](https://hellogithub.com/periodical/statistics/click?target=https://github.com/JohannesBuchner/imagehash)\uff1a\u57fa\u4e8e\u54c8\u5e0c\u503c\u8bc6\u522b\u76f8\u4f3c\u56fe\u50cf\u7684 Python \u5e93\u3002\u8be5\u9879\u76ee\u7684\u7b97\u6cd5\u4e0d\u540c\u4e8e\u4f20\u7edf\u7684\u52a0\u5bc6\u54c8\u5e0c\u7b97\u6cd5\uff08\u5982 MD5\u3001SHA-1\uff09\uff0c\u5b83\u4e13\u6ce8\u4e8e\u56fe\u50cf\u5185\u5bb9\u7684\u76f8\u4f3c\u5ea6\u5206\u6790\uff0c\u5bf9\u6709\u7ec6\u5fae\u4e0d\u540c\u7684\u56fe\u7247\u53ef\u751f\u6210\u76f8\u4f3c\u7684\u54c8\u5e0c\u503c\uff0c\u7528\u4e8e\u8ba1\u7b97\u56fe\u7247\u76f8\u4f3c\u5ea6\uff0c\u652f\u6301\u5e73\u5747\u54c8\u5e0c\u3001\u611f\u77e5\u54c8\u5e0c\u3001\u5dee\u5206\u54c8\u5e0c\u7b49\u7b97\u6cd5\uff0c\u9002\u7528\u4e8e\u5feb\u901f\u8bc6\u522b\u7248\u6743\u56fe\u7247\u7b49\u573a\u666f\u3002\n```python\nfrom PIL import Image\nimport imagehash\n\n# \u8ba1\u7b97\u7b2c\u4e00\u4e2a\u56fe\u50cf\u7684\u54c8\u5e0c\u503c\nhash = imagehash.average_hash(Image.open('tests/data/imagehash.png'))\nprint(hash)\n# \u54c8\u5e0c\u503c\uff1affd7918181c9ffff\n\n# \u8ba1\u7b97\u7b2c\u4e8c\u4e2a\u56fe\u50cf\u7684\u54c8\u5e0c\u503c\notherhash = imagehash.average_hash(Image.open('tests/data/peppers.png'))\nprint(otherhash)\n# \u54c8\u5e0c\u503c\uff1a9f172786e71f1e00\n\n# \u6bd4\u8f83\u4e24\u4e2a\u56fe\u50cf\u54c8\u5e0c\u503c\u662f\u5426\u76f8\u7b49\nprint(hash == otherhash)  # False\n\n# \u8ba1\u7b97\u5e76\u8f93\u51fa\u54c8\u5e0c\u503c\u7684\u6c49\u660e\u8ddd\u79bb\nprint(hash - otherhash)  # 33 \u6c49\u660e\u8ddd\u79bb\uff08\u5dee\u5f02\u5ea6\uff09\n```\n\n24\u3001[mopidy](https://hellogithub.com/periodical/statistics/click?target=https://github.com/mopidy/mopidy)\uff1aPython \u5199\u7684\u97f3\u4e50\u670d\u52a1\u5668\u3002\u8fd9\u662f\u4e00\u4e2a\u6613\u6269\u5c55\u7684 Python \u97f3\u4e50\u670d\u52a1\u5668\uff0c\u652f\u6301\u626b\u63cf\u548c\u64ad\u653e\u672c\u5730\u97f3\u4e50\uff0c\u5e76\u96c6\u6210\u591a\u4e2a\u5728\u7ebf\u97f3\u4e50\u6d41\u5a92\u4f53\uff0c\u8fd8\u53ef\u901a\u8fc7\u63d2\u4ef6\u6269\u5c55\u97f3\u4e50\u6e90\u3001\u7ba1\u7406\u754c\u9762\u548c\u5728\u7ebf\u64ad\u653e\u5668\u7b49\u529f\u80fd\u3002\n\n25\u3001[pyarmor](https://hellogithub.com/periodical/statistics/click?target=https://github.com/dashingsoft/pyarmor)\uff1a\u5f3a\u5927\u7684 Python \u811a\u672c\u52a0\u5bc6\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u5bf9 Python \u811a\u672c\u8fdb\u884c\u6df7\u6dc6\u5904\u7406\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u4ec5\u9700\u4e00\u6761\u547d\u4ee4\u5373\u53ef\u5b8c\u6210\u52a0\u5bc6\u64cd\u4f5c\u3002\u5b83\u63d0\u4f9b\u4e30\u5bcc\u7684\u52a0\u5bc6\u9009\u9879\uff0c\u7528\u6765\u5e73\u8861\u5b89\u5168\u4e0e\u6027\u80fd\uff0c\u652f\u6301\u5c06\u52a0\u5bc6\u540e\u7684\u811a\u672c\u7ed1\u5b9a\u5230\u7279\u5b9a\u673a\u5668\u3001\u8bbe\u7f6e\u52a0\u5bc6\u6709\u6548\u671f\u548c Themida \u4fdd\u62a4\u7b49\u529f\u80fd\u3002\u6765\u81ea [@Xuefeng Xu](https://hellogithub.com/user/k4oyT8wSU5Qfx6H) \u7684\u5206\u4eab\n\n### Rust \u9879\u76ee\n26\u3001[kanata](https://hellogithub.com/periodical/statistics/click?target=https://github.com/jtroo/kanata)\uff1a\u8de8\u5e73\u53f0\u7684\u952e\u76d8\u91cd\u6620\u5c04\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 Rust \u8bed\u8a00\u5f00\u53d1\u7684\u952e\u76d8\u91cd\u6620\u5c04\u5de5\u5177\uff0c\u7528\u6237\u53ef\u6839\u636e\u81ea\u8eab\u9700\u6c42\u81ea\u5b9a\u4e49\u952e\u76d8\u5e03\u5c40\u548c\u529f\u80fd\uff0c\u652f\u6301\u70b9\u51fb\u6309\u4f4f\u3001\u7ec4\u5408\u952e\u7f16\u7a0b\u3001\u8bbe\u7f6e\u6309\u952e\u54cd\u5e94\u901f\u5ea6\uff0c\u9002\u7528\u4e8e Windows\u3001Linux \u548c macOS \u7cfb\u7edf\u3002\n\n27\u3001[surrealdb](https://hellogithub.com/periodical/statistics/click?target=https://github.com/surrealdb/surrealdb)\uff1a\u7aef\u5230\u7aef\u7684\u4e91\u539f\u751f\u6570\u636e\u5e93\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 Rust \u5f00\u53d1\u7684\u591a\u6a21\u578b\u6570\u636e\u5e93\uff0c\u652f\u6301\u8868\u683c\uff08Table\uff09\u3001\u6587\u6863\uff08Documents\uff09\u548c\u56fe\uff08Graph\uff09\u6570\u636e\u6a21\u578b\u3002\u5b83\u65e2\u53ef\u4ee5\u4f5c\u4e3a\u6570\u636e\u5e93\u4f7f\u7528\uff0c\u4e5f\u53ef\u4f5c\u4e3a API \u540e\u7aef\u670d\u52a1\uff0c\u652f\u6301 SQL\u3001GraphQL\u3001ACID \u4e8b\u52a1\u3001\u56fe\u67e5\u8be2\u548c\u5168\u6587\u7d22\u5f15\u7b49\u591a\u79cd\u67e5\u8be2\u65b9\u5f0f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/436658287.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n28\u3001[tauri](https://hellogithub.com/periodical/statistics/click?target=https://github.com/tauri-apps/tauri)\uff1aRust \u9a71\u52a8\u7684\u8de8\u5e73\u53f0\u684c\u9762\u5e94\u7528\u5f00\u53d1\u6846\u67b6\u3002\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u6784\u5efa\u66f4\u5c0f\u3001\u66f4\u5feb\u3001\u66f4\u5b89\u5168\u7684\u684c\u9762\u548c\u79fb\u52a8\u5e94\u7528\u7684\u6846\u67b6\uff0c\u652f\u6301 macOS\u3001Windows\u3001Linux\u3001Android \u548c iOS \u5e73\u53f0\u3002\u5b83\u5141\u8bb8\u4f7f\u7528\u524d\u7aef\u6846\u67b6\u6784\u5efa\u7528\u6237\u754c\u9762\uff0c\u5e76\u5185\u7f6e\u5e94\u7528\u6253\u5305\u5668\u3001\u7cfb\u7edf\u6258\u76d8\u56fe\u6807\u548c\u539f\u751f\u901a\u77e5\u7b49\u529f\u80fd\u3002\u6765\u81ea [@DeShuiYu](https://hellogithub.com/user/ZWJkOqsvYbPgD8p) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/196701619.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Swift \u9879\u76ee\n29\u3001[Off-Day](https://hellogithub.com/periodical/statistics/click?target=https://github.com/zizicici/Off-Day)\uff1a\u4f11\u606f\u65e5\u95f9\u949f\u4e0d\u54cd\u7684 iOS \u5e94\u7528\u3002\u8fd9\u662f\u4e00\u4e2a\u4e13\u4e3a iOS \u7528\u6237\u5f00\u53d1\u7684\u8282\u5047\u65e5\u95f9\u949f\u5e94\u7528\uff0c\u5185\u7f6e\u591a\u4e2a\u516c\u5171\u5047\u671f\u6a21\u677f\uff0c\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u6807\u8bb0\u5047\u671f\uff0c\u5b9e\u73b0\u81ea\u52a8\u7ba1\u7406\u5de5\u4f5c\u65e5\u548c\u5047\u671f\u7684\u95f9\u949f\u8bbe\u7f6e\uff0c\u786e\u4fdd\u4f11\u606f\u65e5\u4e0d\u518d\u88ab\u95f9\u949f\u6253\u6270\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/794390400.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u4eba\u5de5\u667a\u80fd\n30\u3001[krita-ai-diffusion](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Acly/krita-ai-diffusion)\uff1aKrita \u7684 AI \u7ed8\u753b\u52a9\u624b\u63d2\u4ef6\u3002\u8fd9\u662f\u4e00\u4e2a\u4e13\u4e3a Krita \u7ed8\u753b\u8f6f\u4ef6\u5f00\u53d1\u7684 AIGC \u63d2\u4ef6\uff0c\u65e8\u5728\u63d0\u4f9b\u66f4\u4fbf\u6377\u548c\u53ef\u63a7\u7684\u56fe\u50cf\u751f\u6210\u4f53\u9a8c\u3002\u7528\u6237\u53ea\u9700\u9009\u62e9\u533a\u57df\u5e76\u8f93\u5165\u6587\u672c\u63d0\u793a\uff0c\u5373\u53ef\u8f7b\u677e\u5b9e\u73b0\u56fe\u50cf\u586b\u5145\u3001\u6269\u5c55\u3001\u653e\u5927\u3001\u6dfb\u52a0\u548c\u5220\u9664\u5bf9\u8c61\u7b49\u64cd\u4f5c\uff0c\u652f\u6301\u672c\u5730\u8fd0\u884c\u3001Stable Diffusion\u3001ControlNet\u3001IP-Adapter \u548c\u81ea\u5b9a\u4e49\u68c0\u67e5\u70b9\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/686161611.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n31\u3001[netron](https://hellogithub.com/periodical/statistics/click?target=https://github.com/lutzroeder/netron)\uff1a\u8de8\u5e73\u53f0\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\u67e5\u770b\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u3001\u6df1\u5ea6\u5b66\u4e60\u548c\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u652f\u6301\u591a\u79cd\u6a21\u578b\u683c\u5f0f\uff0c\u5305\u62ec ONNX\u3001TensorFlow Lite\u3001Core ML\u3001Keras\u3001Caffe\u3001Darknet \u548c PyTorch \u7b49\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/1198539.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n32\u3001[Perplexica](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ItzCrazyKns/Perplexica)\uff1aAI \u9a71\u52a8\u7684\u641c\u7d22\u5f15\u64ce\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u5f00\u6e90\u7684 AI \u641c\u7d22\u5f15\u64ce\u5de5\u5177\uff0c\u7075\u611f\u6765\u6e90\u4e8e Perplexity AI\u3002\u5b83\u7ed3\u5408\u4e86 SearxNG \u548c\u5927\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u7b49\u6280\u672f\uff0c\u80fd\u591f\u7406\u89e3\u4f60\u7684\u95ee\u9898\u5e76\u6df1\u5165\u4e92\u8054\u7f51\u67e5\u627e\u7b54\u6848\uff0c\u53ef\u4f5c\u4e3a\u4f20\u7edf\u641c\u7d22\u5f15\u64ce\u7684\u66ff\u4ee3\u54c1\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/784181462.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n33\u3001[TensorRT-YOLO](https://hellogithub.com/periodical/statistics/click?target=https://github.com/laugh12321/TensorRT-YOLO)\uff1a\u7075\u6d3b\u6613\u7528\u7684 YOLO \u90e8\u7f72\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u4e13\u4e3a NVIDIA \u8bbe\u5907\u4f18\u5316\u7684 YOLO \u90e8\u7f72\u5de5\u5177\u3002\u5b83\u901a\u8fc7\u96c6\u6210 TensorRT \u63d2\u4ef6\u548c CUDA \u6280\u672f\uff0c\u63d0\u4f9b C++ \u548c Python API\uff0c\u663e\u8457\u63d0\u5347\u4e86\u63a8\u7406\u901f\u5ea6\u548c\u6613\u7528\u6027\uff0c\u652f\u6301\u591a\u79cd YOLO \u7248\u672c\uff0c\u9002\u7528\u4e8e\u76ee\u6807\u68c0\u6d4b\u3001\u5b9e\u4f8b\u5206\u5272\u3001\u59ff\u6001\u8bc6\u522b\u3001\u65cb\u8f6c\u76ee\u6807\u68c0\u6d4b\u548c\u89c6\u9891\u5206\u6790\u7b49\u591a\u79cd\u573a\u666f\u3002\u6765\u81ea [@Laugh](https://hellogithub.com/user/2AGzE4dsO8ZUD9R) \u7684\u5206\u4eab\n```python\nimport cv2\nfrom tensorrt_yolo.infer import DeployDet, generate_labels_with_colors, visualize\n\n# \u521d\u59cb\u5316\u6a21\u578b\nmodel = DeployDet(\"yolo11n-with-plugin.engine\")\n# \u52a0\u8f7d\u56fe\u7247\nim = cv2.imread(\"test_image.jpg\")\n# \u6a21\u578b\u9884\u6d4b\nresult = model.predict(cv2.cvtColor(im, cv2.COLOR_BGR2RGB))\nprint(f\"==> detect result: {result}\")\n# \u53ef\u89c6\u5316\nlabels = generate_labels_with_colors(\"labels.txt\")\nvis_im = visualize(im, result, labels)\ncv2.imwrite(\"vis_image.jpg\", vis_im)\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/749292767.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5176\u5b83\n34\u3001[BewlyBewly](https://hellogithub.com/periodical/statistics/click?target=https://github.com/BewlyBewly/BewlyBewly)\uff1a\u4f18\u5316 bilibili \u7f51\u7ad9\u754c\u9762\u7684\u6d4f\u89c8\u5668\u63d2\u4ef6\u3002\u8fd9\u662f\u4e00\u4e2a\u7b2c\u4e09\u65b9\u7684 B \u7ad9\u6d4f\u89c8\u5668\u63d2\u4ef6\uff0c\u901a\u8fc7\u4f18\u5316 bilibili \u7f51\u7ad9\u7684\u754c\u9762\u6765\u63d0\u5347\u7528\u6237\u4f53\u9a8c\uff0c\u652f\u6301 Chrome\u3001Edge \u548c Firefox \u6d4f\u89c8\u5668\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/473632745.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n35\u3001[frpc-desktop](https://hellogithub.com/periodical/statistics/click?target=https://github.com/luckjiawei/frpc-desktop)\uff1a\u8de8\u5e73\u53f0\u7684 frp \u684c\u9762\u5ba2\u6237\u7aef\u3002\u8be5\u9879\u76ee\u662f\u5185\u7f51\u7a7f\u900f\u5de5\u5177 frp \u7684\u684c\u9762\u5ba2\u6237\u7aef\uff0c\u66f4\u65b9\u4fbf\u5730\u5b9e\u73b0\u5185\u7f51\u7a7f\u900f\u3002\u5b83\u5f00\u7bb1\u5373\u7528\u3001\u754c\u9762\u6e05\u723d\uff0c\u652f\u6301\u5f00\u673a\u542f\u52a8\u3001\u591a\u7528\u6237\u3001\u914d\u7f6e\u5bfc\u5165\u548c\u5bfc\u51fa\u7b49\u529f\u80fd\uff0c\u9002\u7528\u4e8e Windows\u3001Linux \u548c macOS \u5e73\u53f0\u3002\u6765\u81ea [@\u8822\ud83d\udc37](https://hellogithub.com/user/fRmIN16g9jXtYFe) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/723986046.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n36\u3001[keeptrack.space](https://hellogithub.com/periodical/statistics/click?target=https://github.com/thkruz/keeptrack.space)\uff1a\u536b\u661f\u6570\u636e 3D \u53ef\u89c6\u5316\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u4e3a\u975e\u4e13\u4e1a\u4eba\u58eb\u5f00\u53d1\u7684\u5f00\u6e90\u5929\u4f53\u529b\u5b66\u5de5\u5177\uff0c\u652f\u6301\u67e5\u770b\u536b\u661f\u6570\u636e\u3001\u6a21\u62df\u536b\u661f\u53d1\u5c04\u548c\u89e3\u4f53\u7b49\u529f\u80fd\uff0c\u9002\u5408\u7528\u4e8e\u6559\u80b2\u548c\u79d1\u666e\u7b49\u573a\u666f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/77081817.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n37\u3001[openhaystack](https://hellogithub.com/periodical/statistics/click?target=https://github.com/seemoo-lab/openhaystack)\uff1a\u5229\u7528\u82f9\u679c\u7f51\u7edc\u5b9e\u73b0\u7269\u54c1\u8ffd\u8e2a\u7684\u6846\u67b6\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e\u82f9\u679c\u7684 Find My \u7f51\u7edc\uff0c\u5b9e\u73b0\u8de8\u8bbe\u5907\u7684\u5b9a\u4f4d\u4e0e\u8ffd\u8e2a\u3002\u5b83\u901a\u8fc7\u5c06\u652f\u6301\u84dd\u7259\u7684\u8bbe\u5907\u8f6c\u5316\u4e3a\u7c7b\u4f3c AirTag \u7684\u8ffd\u8e2a\u5668\uff0c\u8f7b\u677e\u5b9a\u4f4d\u4e2a\u4eba\u7269\u54c1\u7684\u4f4d\u7f6e\uff0c\u65b9\u4fbf\u627e\u56de\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/341208122.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n38\u3001[ping-clock](https://hellogithub.com/periodical/statistics/click?target=https://github.com/turingbirds/ping-clock)\uff1a\u663e\u793a\u7f51\u7edc\u5ef6\u8fdf\u7684\u65f6\u949f\u3002\u8fd9\u662f\u4e00\u4e2a\u81ea\u5236\u7684\u65f6\u949f\uff0c\u7528\u4e8e\u663e\u793a ping \u6307\u4ee4\u7684\u54cd\u5e94\u65f6\u95f4\uff0c\u6574\u4f53\u9020\u4ef7\u7ea6\u4e3a 150 \u6b27\u5143\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/284364418.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n39\u3001[spotube](https://hellogithub.com/periodical/statistics/click?target=https://github.com/KRTirtho/spotube)\uff1a\u5f00\u6e90\u7684 Spotify \u5ba2\u6237\u7aef\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e Flutter \u5f00\u53d1\u7684 Spotify \u5ba2\u6237\u7aef\uff0c\u5b8c\u5168\u514d\u8d39\u4e14\u65e0\u5e7f\u544a\u3002\u5b83\u4f7f\u7528 Spotify\u3001JioSaavn \u548c YouTube \u4f5c\u4e3a\u97f3\u4e50\u6e90\uff0c\u7528\u6237\u65e0\u9700\u767b\u5f55\u5373\u53ef\u81ea\u7531\u4e0b\u8f7d\u97f3\u4e50\uff0c\u652f\u6301\u684c\u9762\u548c\u79fb\u52a8\u8bbe\u5907\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/104/338719962.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5f00\u6e90\u4e66\u7c4d\n40\u3001[copenhagen](https://hellogithub.com/periodical/statistics/click?target=https://github.com/pilcrowonpaper/copenhagen)\uff1a\u300aWeb \u5e94\u7528\u8ba4\u8bc1\u5b9e\u73b0\u6307\u5357\u300b\u3002\u8fd9\u662f\u4e00\u672c\u4ecb\u7ecd\u5982\u4f55\u5728 Web \u5e94\u7528\u4e2d\u5b9e\u73b0\u8ba4\u8bc1\uff08auth\uff09\u7684\u4e66\u7c4d\uff0c\u5185\u5bb9\u6db5\u76d6\u8bbe\u8ba1\u8ba4\u8bc1\u6d41\u7a0b\u3001\u5b58\u50a8\u7528\u6237\u51ed\u636e\u3001\u4fdd\u62a4\u7528\u6237\u6570\u636e\u7b49\u65b9\u9762\u7684\u6307\u5bfc\u4e0e\u5efa\u8bae\u3002\n\n41\u3001[php-the-right-way](https://hellogithub.com/periodical/statistics/click?target=https://github.com/codeguy/php-the-right-way)\uff1a\u300aPHP: The Right Way\u300b\u3002\u8fd9\u662f\u4e00\u672c\u9002\u5408\u521d\u5b66\u8005\u8fdb\u9636\u7684 PHP \u4e66\u7c4d\uff0c\u4ecb\u7ecd\u4e86 PHP \u7684\u6700\u4f73\u5b9e\u8df5\u548c\u7f16\u7801\u89c4\u8303\uff0c\u5df2\u88ab\u7ffb\u8bd1\u6210\u5305\u62ec\u4e2d\u6587\u5728\u5185\u7684\u591a\u56fd\u8bed\u8a00\u3002\n\n\n\n<p align=\"center\">\n    <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub103.md\">\u300e\u4e0a\u4e00\u671f\u300f</a> | <a href='https://github.com/521xueweihan/HelloGitHub/issues/899'>\u53cd\u9988\u548c\u5efa\u8bae</a> | <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub105.md\">\u300e\u4e0b\u4e00\u671f\u300f</a>\n</p>\n\n---\n<p align=\"center\">\n    \ud83d\udc49 <a href='https://hellogithub.com/periodical'>\u6765\uff01\u63a8\u8350\u5f00\u6e90\u9879\u76ee</a> \ud83d\udc48<br>\n    \u5fae\u4fe1\u4e2d\u641c\uff1a<strong>HelloGitHub</strong> \u5173\u6ce8\u516c\u4f17\u53f7<br>\n    \u4e0d\u4ec5\u80fd\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\uff0c\u8fd8\u6709\u56de\u9988\u7c89\u4e1d\u7684\u6d3b\u52a8<br>\n    \u5982\u679c\u6587\u4e2d\u7684\u56fe\u5237\u4e0d\u51fa\u6765\uff0c\u53ef\u4ee5\u70b9\u51fb <a href='https://hellogithub.com/periodical/volume/104'>\u8fd9\u91cc</a>\u3002\n</p>\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "content/HelloGitHub105.md", "size": 27611, "license": "NOASSERTION", "content_sha": "2f45e90d7c23169aa6aa93d60b5604d5f65928a1", "findings": [{"type": "pii_email", "matches": ["alaynawuckert@kozey.biz"]}], "content": "# \u300aHelloGitHub\u300b\u7b2c 105 \u671f\n> \u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c**HelloGitHub** \u8ba9\u4f60\u5bf9\u5f00\u6e90\u611f\u5174\u8da3\uff01\n<p align=\"center\">\n    <img src='https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg' style=\"max-width:100%;\"></img>\n</p>\n\n## \u76ee\u5f55\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 **\u300c\u76ee\u5f55\u300d** \u56fe\u6807\u6253\u5f00\u76ee\u5f55\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n![](https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png)\n\n**Tips**\uff1a\u5982\u679c\u9047\u5230\u56fe\u7247\u5237\u4e0d\u51fa\u6765\u7684\u60c5\u51b5\uff0c[\u70b9\u51fb](https://hellogithub.com/periodical/volume/105) \u6362\u4e00\u79cd\u6d4f\u89c8\u65b9\u5f0f\u3002\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\" style=\"max-width:30%;\"></img><br>\n\u5173\u6ce8\u300cHelloGitHub\u300d\u516c\u4f17\u53f7\uff0c\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\n</p>\n\n## \u5185\u5bb9\n> **\u4ee5\u4e0b\u4e3a\u672c\u671f\u5185\u5bb9**\uff5c\u6bcf\u4e2a\u6708 **28** \u53f7\u66f4\u65b0\n\n### C \u9879\u76ee\n1\u3001[fluent-bit](https://hellogithub.com/periodical/statistics/click?target=https://github.com/fluent/fluent-bit)\uff1a\u9ad8\u6548\u8f7b\u91cf\u7684\u65e5\u5fd7\u6536\u96c6\u4e0e\u5904\u7406\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u3001\u9ad8\u6548\u7684\u65e5\u5fd7\u6536\u96c6\u3001\u5904\u7406\u548c\u8f6c\u53d1\u5de5\u5177\uff0c\u652f\u6301\u5b9e\u65f6\u6536\u96c6\u548c\u5904\u7406\u6765\u81ea\u4e0d\u540c\u6765\u6e90\u7684\u65e5\u5fd7\u6570\u636e\uff0c\u5177\u6709\u4f4e\u5185\u5b58\u548c CPU \u5360\u7528\u7684\u7279\u6027\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/29933948.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n2\u3001[write-a-hash-table](https://hellogithub.com/periodical/statistics/click?target=https://github.com/jamesroutley/write-a-hash-table)\uff1a\u4ece\u96f6\u7528 C \u8bed\u8a00\u5b9e\u73b0\u54c8\u5e0c\u8868\u3002\u8be5\u9879\u76ee\u662f\u8bb2\u89e3\u5982\u4f55\u7528 C \u8bed\u8a00\u5b9e\u73b0\u4e00\u4e2a\u5f00\u653e\u5bfb\u5740\u548c\u53cc\u91cd\u54c8\u5e0c\u7684\u54c8\u5e0c\u8868\uff0c\u4ee3\u7801\u7ea6\u4e3a 200 \u884c\uff0c\u9884\u8ba1\u5b66\u4e60\u65f6\u95f4\u4e3a 1 \u5230 2 \u5c0f\u65f6\u3002\n\n### C# \u9879\u76ee\n3\u3001[ArchiSteamFarm](https://hellogithub.com/periodical/statistics/click?target=https://github.com/JustArchiNET/ArchiSteamFarm)\uff1a\u5f00\u6e90\u7684 Steam \u6302\u5361\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 C# \u5f00\u53d1\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u7ba1\u7406\u591a\u4e2a Steam \u8d26\u53f7\u5e76\u81ea\u52a8\u6536\u96c6\u5361\u724c\uff0c\u65e0\u9700\u5b89\u88c5\u6216\u8fd0\u884c Steam \u5ba2\u6237\u7aef\uff0c\u652f\u6301 VAC \u514d\u75ab\u3001\u4ea4\u6613\u7b49\u529f\u80fd\uff0c\u9002\u7528\u4e8e Windows\u3001Linux \u548c macOS \u7cfb\u7edf\u3002\n\n4\u3001[qttabbar](https://hellogithub.com/periodical/statistics/click?target=https://github.com/indiff/qttabbar)\uff1a\u4e3a Windows \u8d44\u6e90\u7ba1\u7406\u5668\u589e\u52a0\u6807\u7b7e\u9875\u529f\u80fd\u7684\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 C# \u5f00\u53d1\u7684\u5c0f\u5de5\u5177\uff0c\u5141\u8bb8\u7528\u6237\u5728 Windows \u8d44\u6e90\u7ba1\u7406\u5668\uff08Explorer\uff09\u4e2d\u4f7f\u7528\u6807\u7b7e\u9875\u529f\u80fd\uff0c\u652f\u6301\u4ee5\u6807\u7b7e\u9875\u7684\u5f62\u5f0f\u540c\u65f6\u6253\u5f00\u548c\u7ba1\u7406\u591a\u4e2a\u6587\u4ef6\u5939\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/177127386.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### C++ \u9879\u76ee\n5\u3001[love](https://hellogithub.com/periodical/statistics/click?target=https://github.com/love2d/love)\uff1a\u5b8c\u5168\u514d\u8d39\u7684 2D \u6e38\u620f\u5f15\u64ce\u3002\u8fd9\u662f\u4e00\u6b3e\u514d\u8d39\u3001\u5f00\u6e90\u3001\u53ef\u5546\u7528\u7684 2D \u6e38\u620f\u5f00\u53d1\u6846\u67b6\uff0c\u652f\u6301\u4f7f\u7528 Lua \u8bed\u8a00\u5f00\u53d1\u8de8\u5e73\u53f0\u7684 2D \u6e38\u620f\uff0c\u517c\u5bb9 Windows\u3001macOS\u3001Linux\u3001Android \u548c iOS \u5e73\u53f0\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/188601229.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n6\u3001[WLED](https://hellogithub.com/periodical/statistics/click?target=https://github.com/wled/WLED)\uff1a\u65e0\u7ebf\u63a7\u5236 LED \u706f\u5e26\u3002\u8be5\u9879\u76ee\u662f\u4e00\u4e2a\u8fd0\u884c\u5728 ESP32 \u548c ESP8266 \u4e0a\u7684 Web \u670d\u52a1\u5668\uff0c\u53ef\u5b9e\u73b0\u901a\u8fc7 WiFi \u63a7\u5236 LED \u706f\u5e26\u7684\u989c\u8272\u548c\u6548\u679c\uff0c\u652f\u6301 100 \u79cd\u7279\u6548\u300150 \u79cd\u8c03\u8272\u677f\u3001250 \u4e2a\u7528\u6237\u81ea\u5b9a\u4e49\u9884\u8bbe\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/76990209.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### CSS \u9879\u76ee\n7\u3001[latex-css](https://hellogithub.com/periodical/statistics/click?target=https://github.com/vincentdoerig/latex-css)\uff1aLaTex \u6587\u6863\u98ce\u683c\u7684 CSS \u5e93\u3002\u8fd9\u662f\u4e00\u4e2a\u80fd\u591f\u8ba9\u4f60\u7684\u7f51\u7ad9\u770b\u8d77\u6765\u50cf LaTex \u6587\u6863\u7684 CSS \u6837\u5f0f\u5e93\uff0c\u652f\u6301\u5b9a\u7406\u3001\u5b9a\u4e49\u3001\u5f15\u7406\u548c\u8bc1\u660e\u7684\u6807\u7b7e\uff0c\u4ee5\u53ca\u4f5c\u8005\u3001\u526f\u6807\u9898\u3001\u6458\u8981\u7b49\u53ef\u9009\u7684\u7c7b\u540d\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/264919101.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Go \u9879\u76ee\n8\u3001[gofakeit](https://hellogithub.com/periodical/statistics/click?target=https://github.com/brianvoe/gofakeit)\uff1a\u5feb\u901f\u751f\u6210\u5047\u6570\u636e\u7684 Go \u5e93\u3002\u8be5\u9879\u76ee\u662f\u7528\u4e8e\u751f\u6210\u5404\u79cd\u5047\u6570\u636e\u7684 Go \u8bed\u8a00\u5e93\uff0c\u652f\u6301\u968f\u673a\u751f\u6210\u540d\u5b57\u3001\u5730\u5740\u3001\u7535\u8bdd\u548c\u65e5\u671f\u7b49\u683c\u5f0f\u7684\u6570\u636e\u3002\u5b83\u9ed8\u8ba4\u4e0d\u652f\u6301\u751f\u6210\u4e2d\u6587\u5047\u6570\u636e\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u65b9\u5f0f\u6269\u5c55\u6216\u8c03\u6574\u751f\u6210\u903b\u8f91\u5b9e\u73b0\u3002\u6765\u81ea [@DeShuiYu](https://hellogithub.com/user/ZWJkOqsvYbPgD8p) \u7684\u5206\u4eab\n```go\ngofakeit.Name()             // Markus Moen\ngofakeit.Email()            // alaynawuckert@kozey.biz\ngofakeit.Phone()            // (570)245-7485\ngofakeit.BS()               // front-end\ngofakeit.BeerName()         // Duvel\ngofakeit.Color()            // MediumOrchid\ngofakeit.Company()          // Moen, Pagac and Wuckert\ngofakeit.CreditCardNumber() // 4287271570245748\ngofakeit.HackerPhrase()     // Connecting the array won't do anything, we need to generate the haptic COM driver!\ngofakeit.JobTitle()         // Director\ngofakeit.CurrencyShort()    // USD\n```\n\n9\u3001[hertz](https://hellogithub.com/periodical/statistics/click?target=https://github.com/cloudwego/hertz)\uff1a\u5b57\u8282\u8df3\u52a8\u5f00\u6e90\u7684 Go \u5fae\u670d\u52a1 HTTP \u6846\u67b6\u3002\u8be5\u9879\u76ee\u662f\u7531 CloudWeGo \u56e2\u961f\u5f00\u53d1\u7684\u9ad8\u6027\u80fd\u3001\u6613\u6269\u5c55\u7684 Go \u8bed\u8a00 Web \u6846\u67b6\uff0c\u53ef\u7528\u4e8e\u6784\u5efa RESTful API\u3001\u5fae\u670d\u52a1\u4ee5\u53ca\u9700\u8981\u9ad8\u541e\u5410\u91cf\u7684 Web \u5e94\u7528\u3002\u5728\u5b57\u8282\u8df3\u52a8\u5185\u90e8\uff0cHertz \u5df2\u88ab\u5e7f\u6cdb\u5e94\u7528\uff0c\u8868\u73b0\u7a33\u5b9a\u53ef\u9760\u3002\u6765\u81ea [@DeShuiYu](https://hellogithub.com/user/ZWJkOqsvYbPgD8p) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/491539130.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n10\u3001[lima](https://hellogithub.com/periodical/statistics/click?target=https://github.com/lima-vm/lima)\uff1a\u5728 macOS \u4e0a\u8f7b\u677e\u8fd0\u884c Linux \u865a\u62df\u673a\u3002\u8fd9\u662f\u4e00\u6b3e\u5728 macOS \u4e0a\u521b\u5efa\u548c\u7ba1\u7406 Linux \u865a\u62df\u673a\u7684\u5de5\u5177\uff0c\u5b83\u901a\u8fc7 QEMU \u548c macOS \u539f\u751f\u865a\u62df\u5316\u6280\u672f\uff0c\u63d0\u4f9b\u4e00\u4e2a\u5f00\u7bb1\u5373\u7528\u3001\u8f7b\u91cf\u7ea7\u7684 Linux \u865a\u62df\u673a\u73af\u5883\uff0c\u652f\u6301\u8fd0\u884c\u5404\u79cd Linux \u5e94\u7528\u548c\u5de5\u5177\uff0c\u4ee5\u53ca Docker\u3001Podman\u3001K8s \u7b49\u5bb9\u5668\u3002\n```\n# \u5b89\u88c5\nbrew install lima\n# \u542f\u52a8\nlimactl start\n# \u8fd0\u884c Linux \u547d\u4ee4\nlima sudo apt-get install -y neofetch\nlima neofetch\n# \u8fd0\u884c\u5bb9\u5668\nlima nerdctl run --rm hello-world\nkubectl apply -f ...\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/367284699.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n11\u3001[primitive](https://hellogithub.com/periodical/statistics/click?target=https://github.com/fogleman/primitive)\uff1a\u7528\u51e0\u4f55\u56fe\u5f62\u751f\u6210\u56fe\u50cf\u3002\u8be5\u9879\u76ee\u662f\u7528 Go \u8bed\u8a00\u5f00\u53d1\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5b83\u901a\u8fc7\u56fe\u50cf\u5904\u7406\u7b97\u6cd5\uff0c\u53ef\u5c06\u4efb\u610f\u56fe\u50cf\u8f6c\u6362\u4e3a\u4ec5\u7531\u5355\u4e00\u51e0\u4f55\u56fe\u5f62\u7ec4\u6210\u7684\u56fe\u50cf\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/68068967.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n12\u3001[zap](https://hellogithub.com/periodical/statistics/click?target=https://github.com/uber-go/zap)\uff1a\u5feb\u901f\u3001\u7ed3\u6784\u5316\u7684 Go \u65e5\u5fd7\u5e93\u3002\u8be5\u9879\u76ee\u662f Uber \u5f00\u53d1\u7684\u4e00\u6b3e\u9ad8\u6027\u80fd\u65e5\u5fd7\u5e93\uff0c\u4e13\u4e3a\u90a3\u4e9b\u9700\u8981\u5feb\u901f\u3001\u7ed3\u6784\u5316\u65e5\u5fd7\u8bb0\u5f55\u7684\u573a\u666f\u800c\u8bbe\u8ba1\u3002\u4e0e\u5176\u4ed6 Go \u8bed\u8a00\u7684\u65e5\u5fd7\u5e93\u76f8\u6bd4\uff0czap \u7684\u6027\u80fd\u66f4\u4e3a\u4f18\u8d8a\uff0c\u5c24\u5176\u662f\u5728\u9700\u8981\u9891\u7e41\u8bb0\u5f55\u65e5\u5fd7\u7684\u9ad8\u5e76\u53d1\u73af\u5883\u4e2d\u3002\u6765\u81ea [@\u4e24\u53cc\u7b77\u5b50sqldc](https://hellogithub.com/user/5dGtvaZ6H3L4QMY) \u7684\u5206\u4eab\n```go\nlogger, _ := zap.NewProduction()\ndefer logger.Sync() // flushes buffer, if any\nsugar := logger.Sugar()\nsugar.Infow(\"failed to fetch URL\",\n  // Structured context as loosely typed key-value pairs.\n  \"url\", url,\n  \"attempt\", 3,\n  \"backoff\", time.Second,\n)\nsugar.Infof(\"Failed to fetch URL: %s\", url)\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/52034309.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Java \u9879\u76ee\n13\u3001[async-profiler](https://hellogithub.com/periodical/statistics/click?target=https://github.com/async-profiler/async-profiler)\uff1aJava \u6027\u80fd\u5206\u6790\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u4f4e\u5f00\u9500\u7684 Java \u91c7\u6837\u5206\u6790\u5668\uff0c\u53ef\u7528\u4e8e\u5bf9 Java \u5e94\u7528\u8fdb\u884c\u6027\u80fd\u5206\u6790\u3002\u5b83\u80fd\u591f\u5e2e\u52a9\u5f00\u53d1\u8005\u8ffd\u8e2a CPU \u6d88\u8017\u7684\u70ed\u70b9\u4ee3\u7801\u8def\u5f84\u3001\u5b9a\u4f4d\u5185\u5b58\u6cc4\u6f0f\uff0c\u4ee5\u53ca\u5206\u6790\u7ebf\u7a0b\u9501\u4e89\u7528\u548c\u7ebf\u7a0b\u95f4\u7684\u540c\u6b65\u7b49\u95ee\u9898\u3002\u6765\u81ea [@\u5854\u5496](https://hellogithub.com/user/bzJpGyu0IanC6L7) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/56894212.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n14\u3001[javaparser](https://hellogithub.com/periodical/statistics/click?target=https://github.com/javaparser/javaparser)\uff1a\u5f3a\u5927\u7684 Java \u4ee3\u7801\u89e3\u6790\u5e93\u3002\u8fd9\u662f\u4e00\u4e2a\u7eaf Java \u5b9e\u73b0\u7684\u89e3\u6790\u5e93\uff0c\u4e13\u4e3a\u89e3\u6790\u3001\u5206\u6790\u548c\u751f\u6210 Java \u4ee3\u7801\u800c\u8bbe\u8ba1\u3002\u5b83\u80fd\u591f\u5c06 Java \u4ee3\u7801\u89e3\u6790\u4e3a\u62bd\u8c61\u8bed\u6cd5\u6811\uff08AST\uff09\uff0c\u652f\u6301\u4ece Java 1.0 \u5230 Java 21 \u7248\u672c\u3002\u53ef\u7528\u4e8e\u5f00\u53d1\u4ee3\u7801\u5206\u6790\u5de5\u5177\u3001\u91cd\u6784\u5de5\u5177\u3001\u7f16\u8bd1\u5668\u7b49\u3002\n\n15\u3001[kestra](https://hellogithub.com/periodical/statistics/click?target=https://github.com/kestra-io/kestra)\uff1a\u4e8b\u4ef6\u9a71\u52a8\u7684\u58f0\u660e\u5f0f\u7f16\u6392\u5e73\u53f0\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e Java \u5f00\u53d1\u7684\u4e8b\u4ef6\u9a71\u52a8\u7f16\u6392\u5e73\u53f0\uff0c\u65e8\u5728\u7b80\u5316\u8ba1\u5212\u6027\u548c\u4e8b\u4ef6\u9a71\u52a8\u5de5\u4f5c\u6d41\u3002\u5b83\u63d0\u4f9b\u76f4\u89c2\u7684 Web \u754c\u9762\uff0c\u5185\u7f6e\u4ee3\u7801\u7f16\u8f91\u5668\u548c\u6570\u767e\u4e2a\u63d2\u4ef6\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7 YAML \u4ee3\u7801\u8f7b\u677e\u6784\u5efa\u53ef\u9760\u7684\u5de5\u4f5c\u6d41\uff0c\u652f\u6301\u7f16\u6392\u5fae\u670d\u52a1\u3001\u6279\u5904\u7406\u4efb\u52a1\u3001\u4e34\u65f6\u811a\u672c\u3001SQL \u67e5\u8be2\u3001\u6570\u636e\u540c\u6b65\u7b49\u591a\u79cd\u4efb\u52a1\u3002\u6765\u81ea [@IZRINO](https://hellogithub.com/user/eK0Bv1dmJPxnrwy) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/204164353.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### JavaScript \u9879\u76ee\n16\u3001[Dexie.js](https://hellogithub.com/periodical/statistics/click?target=https://github.com/dexie/Dexie.js)\uff1a\u8f7b\u91cf\u7ea7\u7684 IndexedDB \u5e93\u3002\u8fd9\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684 JavaScript \u5e93\uff0c\u5c01\u88c5\u4e86\u6d4f\u89c8\u5668\u539f\u751f\u7684 IndexedDB API\uff0c\u4f7f\u5f97\u5728\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u4e2d\u8fdb\u884c\u6570\u636e\u5b58\u50a8\u548c\u67e5\u8be2\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\uff0c\u652f\u6301\u5b58\u50a8\u5927\u91cf\u6570\u636e\u3001\u4e8b\u52a1\u548c\u7d22\u5f15\u7b49\u529f\u80fd\u3002\n```javascript\nconst db = new Dexie('MyDatabase');\n\n// Find some old friends\nconst oldFriends = await db.friends\n    .where('age').above(75)\n    .toArray();\n\n// or make a new one\nawait db.friends.add({\n    name: 'HelloGitHub',\n    age: 25,\n    street: 'East 13:th Street',\n    picture: await getBlob('HelloGitHub.png')\n});\n```\n\n17\u3001[gitstars](https://hellogithub.com/periodical/statistics/click?target=https://github.com/cfour-hi/gitstars)\uff1a\u4f60\u7684 GitHub Star \u7ba1\u5bb6\u3002\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u7ba1\u7406 GitHub \u4e0a Star \u9879\u76ee\u7684\u5de5\u5177\uff0c\u652f\u6301\u6839\u636e\u6807\u7b7e\u548c\u7f16\u7a0b\u8bed\u8a00\u5bf9\u9879\u76ee\u8fdb\u884c\u5206\u7c7b\u3002\u6765\u81ea [@cfour](https://hellogithub.com/user/wl9AZeRUx6bFYzo) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/108359461.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n18\u3001[jitsi-meet](https://hellogithub.com/periodical/statistics/click?target=https://github.com/jitsi/jitsi-meet)\uff1a\u5f00\u6e90\u7684\u89c6\u9891\u4f1a\u8bae\u5e73\u53f0\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e WebRTC \u6784\u5efa\u7684\u89c6\u9891\u4f1a\u8bae\u5e73\u53f0\uff0c\u63d0\u4f9b\u9ad8\u6e05\u97f3\u89c6\u9891\u8d28\u91cf\uff0c\u652f\u6301\u79c1\u804a\u3001\u4e3e\u624b\u3001\u6295\u7968\u548c\u865a\u62df\u80cc\u666f\u7b49\u591a\u79cd\u529f\u80fd\uff0c\u517c\u5bb9\u6240\u6709\u4e3b\u6d41\u6d4f\u89c8\u5668\u548c\u79fb\u52a8\u5e73\u53f0\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/15225670.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n19\u3001[mermaid](https://hellogithub.com/periodical/statistics/click?target=https://github.com/mermaid-js/mermaid)\uff1a\u7528\u7c7b\u4f3c Markdown \u7684\u8bed\u6cd5\u7ed8\u5236\u56fe\u8868\u3002\u8fd9\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u56fe\u8868\u7ed8\u5236\u5de5\u5177\uff0c\u652f\u6301\u901a\u8fc7\u7c7b\u4f3c Markdown \u7684\u8bed\u6cd5\u751f\u6210\u591a\u79cd\u7c7b\u578b\u7684\u56fe\u8868\uff0c\u5982\u6d41\u7a0b\u56fe\u3001\u5e8f\u5217\u56fe\u548c\u7518\u7279\u56fe\u7b49\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/26066727.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n20\u3001[semantic-release](https://hellogithub.com/periodical/statistics/click?target=https://github.com/semantic-release/semantic-release)\uff1a\u81ea\u52a8\u5316\u7684\u7248\u672c\u7ba1\u7406\u548c\u53d1\u5e03\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e Node.js \u5f00\u53d1\u7684\u81ea\u52a8\u5316\u7248\u672c\u7ba1\u7406\u548c\u53d1\u5e03\u5de5\u5177\uff0c\u65e8\u5728\u901a\u8fc7\u8bed\u4e49\u5316\u7248\u672c\u63a7\u5236\uff08Semantic Versioning\uff09\u7b80\u5316\u9879\u76ee\u53d1\u5e03\u6d41\u7a0b\u3002\u5b83\u901a\u8fc7\u5206\u6790 Git \u63d0\u4ea4\u4fe1\u606f\uff0c\u81ea\u52a8\u63a8\u5bfc\u7248\u672c\u53f7\uff0c\u5e76\u751f\u6210\u76f8\u5e94\u7684\u53d8\u66f4\u65e5\u5fd7\u3002\n\n### Kotlin \u9879\u76ee\n21\u3001[ChinesePinyin-CodeCompletionHelper](https://hellogithub.com/periodical/statistics/click?target=https://github.com/tuchg/ChinesePinyin-CodeCompletionHelper)\uff1a\u652f\u6301\u62fc\u97f3\u8f93\u5165\u6cd5\u81ea\u52a8\u8865\u5168\u7684 JetBrains \u63d2\u4ef6\u3002\u8fd9\u662f\u4e00\u4e2a\u4e13\u4e3a JetBrains \u7cfb\u5217 IDE \u8bbe\u8ba1\u7684\u63d2\u4ef6\uff0c\u652f\u6301\u62fc\u97f3\u548c\u4e94\u7b14\u8f93\u5165\u6cd5\u7684\u4ee3\u7801\u8865\u5168\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/282809702.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Python \u9879\u76ee\n22\u3001[grip](https://hellogithub.com/periodical/statistics/click?target=https://github.com/joeyespo/grip)\uff1aGitHub README \u6587\u4ef6\u672c\u5730\u9884\u89c8\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u7528\u4e8e\u672c\u5730\u9884\u89c8 GFM\uff08GitHub Flavored Markdown\uff09\u6587\u4ef6\u7684\u5de5\u5177\u3002\u5b83\u901a\u8fc7 Flask \u548c  GitHub Markdown API\uff0c\u80fd\u5728\u672c\u5730\u73af\u5883\u4e2d\u6e32\u67d3\u5e76\u663e\u793a\u4e0e GitHub \u5b8c\u5168\u4e00\u81f4\u7684 Markdown \u6587\u4ef6\u6548\u679c\u3002\n```\n$ cd myrepo\n$ grip\n * Running on http://localhost:6419/\n```\n\n23\u3001[ha_xiaomi_home](https://hellogithub.com/periodical/statistics/click?target=https://github.com/XiaoMi/ha_xiaomi_home)\uff1a\u5c0f\u7c73\u5f00\u6e90\u7684 HA \u63d2\u4ef6\u3002\u8be5\u9879\u76ee\u662f\u7531\u5c0f\u7c73\u5f00\u6e90\u7684 Home Assistant \u96c6\u6210\u63d2\u4ef6\uff0c\u53ef\u5b9e\u73b0\u5c0f\u7c73 IoT \u667a\u80fd\u8bbe\u5907\u4e0e Home Assistant \u7684\u65e0\u7f1d\u96c6\u6210\uff0c\u652f\u6301\u8bbe\u5907\u53d1\u73b0\u3001\u72b6\u6001\u540c\u6b65\u3001\u8fdc\u7a0b\u63a7\u5236\u7b49\u529f\u80fd\u3002\u6765\u81ea [@\u9b54\u7fbdMagic](https://hellogithub.com/user/2wtnCMo4Ne97Ypi) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/854347601.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n24\u3001[pex](https://hellogithub.com/periodical/statistics/click?target=https://github.com/pex-tool/pex)\uff1a\u76f8\u89c1\u6068\u665a\u7684 Python \u9879\u76ee\u6253\u5305\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u5f00\u6e90\u7684 Python \u9879\u76ee\u6253\u5305\u5de5\u5177\uff0c\u4e13\u4e3a\u8de8\u73af\u5883\u90e8\u7f72\u548c\u65e0\u6cd5\u8bbf\u95ee\u516c\u7f51\u7684\u90e8\u7f72\u573a\u666f\u8bbe\u8ba1\u3002\u5b83\u80fd\u591f\u5c06 Python \u9879\u76ee\u53ca\u5176\u6240\u6709\u4f9d\u8d56\uff0c\u751a\u81f3\u662f Python \u89e3\u91ca\u5668\uff08\u53ef\u9009\uff09\uff0c\u6253\u5305\u6210\u5355\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff08.pex\uff09\uff0c\u8ba9\u5f00\u53d1\u8005\u65e0\u9700\u5b89\u88c5\u8fd0\u884c\u73af\u5883\uff0c\u5373\u53ef\u76f4\u63a5\u8fd0\u884c Python \u7a0b\u5e8f\uff0c\u652f\u6301 Linux \u548c macOS \u7cfb\u7edf\u3002\n```\n$ pex \"uvicorn[standard]\" -c uvicorn --inject-args 'example:app --port 8888' -ohellogithub-app.pex\n$ ./hellogithub-app.pex\nINFO:     Started server process [2014]\nINFO:     Waiting for application startup.\nINFO:     ASGI 'lifespan' protocol appears unsupported.\nINFO:     Application startup complete.\nINFO:     Uvicorn running on http://127.0.0.1:8888 (Press CTRL+C to quit)\n^CINFO:     Shutting down\nINFO:     Finished server process [2014]\n```\n\n25\u3001[runlike](https://hellogithub.com/periodical/statistics/click?target=https://github.com/lavie/runlike)\uff1a\u5feb\u901f\u83b7\u53d6 Docker \u5bb9\u5668\u542f\u52a8\u547d\u4ee4\u7684\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u89e3\u6790\u8fd0\u884c\u4e2d\u5bb9\u5668\u7684\u5de5\u5177\uff0c\u53ef\u81ea\u52a8\u751f\u6210\u5bf9\u5e94\u7684 docker run \u542f\u52a8\u547d\u4ee4\u3002\u5b83\u80fd\u591f\u63d0\u53d6\u5bb9\u5668\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u5305\u62ec\u7aef\u53e3\u7ed1\u5b9a\u3001\u6620\u5c04\u5377\u3001\u73af\u5883\u53d8\u91cf\u3001\u7f51\u7edc\u8bbe\u7f6e\u7b49\uff0c\u9002\u7528\u4e8e\u590d\u5236\u3001\u8c03\u8bd5\u6216\u8fc1\u79fb\u5bb9\u5668\u7684\u573a\u666f\u3002\u6765\u81ea [@\u730e\u96bc\u4e36\u6b62\u6208reNo7](https://hellogithub.com/user/Ew59HqRWjPe0zZO) \u7684\u5206\u4eab\n```\n$ runlike -p redis\n\ndocker run \\\n    --name=redis \\\n    -e \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\" \\\n    -e \"REDIS_VERSION=2.8.9\" \\\n    -e \"REDIS_DOWNLOAD_URL=http://download.redis.io/releases/redis-2.8.9.tar.gz\" \\\n    -e \"REDIS_DOWNLOAD_SHA1=003ccdc175816e0a751919cf508f1318e54aac1e\" \\\n    -p 0.0.0.0:6379:6379/tcp \\\n    --detach=true \\\n    myrepo/redis:7860c450dbee9878d5215595b390b9be8fa94c89 \\\n    redis-server --slaveof 172.31.17.84 6379\n```\n\n26\u3001[viztracer](https://hellogithub.com/periodical/statistics/click?target=https://github.com/gaogaotiantian/viztracer)\uff1a\u5f00\u7bb1\u5373\u7528\u7684 Python \u6027\u80fd\u5206\u6790\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u9ad8\u6548\u3001\u6613\u7528\u7684 Python \u7a0b\u5e8f\u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u8c03\u8bd5\u4ee3\u7801\u548c\u5206\u6790\u6027\u80fd\u74f6\u9888\u3002\u5b83\u9488\u5bf9\u6027\u80fd\u8ffd\u8e2a\u505a\u4e86\u4f18\u5316\uff0c\u5c3d\u53ef\u80fd\u51cf\u5c11\u5bf9\u88ab\u5206\u6790\u7a0b\u5e8f\u7684\u6027\u80fd\u5f71\u54cd\uff0c\u652f\u6301\u65f6\u95f4\u7ebf\u8ffd\u8e2a\u3001\u591a\u8fdb\u7a0b\u5206\u6790\u548c\u6a21\u5757\u5316\u8ffd\u8e2a\u7b49\u529f\u80fd\uff0c\u5e76\u751f\u6210\u76f4\u89c2\u3001\u4ea4\u4e92\u5f0f\u7684\u5206\u6790\u62a5\u544a\u3002\u6765\u81ea [@\u5b64\u80c6\u67aa\u624b](https://hellogithub.com/user/i1wAIyo6P3NXkxm) \u7684\u5206\u4eab\n```\n# \u5b89\u88c5\npip install viztracer\n# \u751f\u6210\u5206\u6790\u62a5\u544a\nviztracer my_script.py arg1 arg2\n# \u53ef\u89c6\u5316\u67e5\u770b\u62a5\u544a\nvizviewer result.json \n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/285134677.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Rust \u9879\u76ee\n27\u3001[himalaya](https://hellogithub.com/periodical/statistics/click?target=https://github.com/pimalaya/himalaya)\uff1a\u7ba1\u7406\u90ae\u4ef6\u7684\u547d\u4ee4\u884c\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 Rust \u5f00\u53d1\u7684\u547d\u4ee4\u884c\u7535\u5b50\u90ae\u4ef6\u5ba2\u6237\u7aef\uff0c\u652f\u6301\u591a\u8d26\u6237\u3001\u90ae\u4ef6\u6536\u53d1\u3001\u591a\u79cd\u90ae\u4ef6\u534f\u8bae\uff08\u5982 IMAP \u548c SMTP\uff09\u548c PGP \u52a0\u5bc6\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/324025361.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n28\u3001[zoxide](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ajeetdsouza/zoxide)\uff1a\u66f4\u667a\u80fd\u7684 cd \u547d\u4ee4\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 Rust \u7f16\u5199\u7684\u9ad8\u6548 cd \u547d\u4ee4\u5de5\u5177\uff0c\u7075\u611f\u6765\u81ea z \u548c autojump\u3002\u5b83\u80fd\u591f\u6839\u636e\u7528\u6237\u8bbf\u95ee\u9891\u7387\u81ea\u52a8\u6392\u5e8f\u76ee\u5f55\uff0c\u5feb\u901f\u5b9a\u4f4d\u6700\u53ef\u80fd\u7684\u76ee\u6807\u76ee\u5f55\uff0c\u5e76\u652f\u6301\u6a21\u7cca\u5339\u914d\u548c\u4ea4\u4e92\u9009\u62e9\u3002\u6765\u81ea [@IZRINO](https://hellogithub.com/user/eK0Bv1dmJPxnrwy) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/245166720.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Swift \u9879\u76ee\n29\u3001[ConfettiSwiftUI](https://hellogithub.com/periodical/statistics/click?target=https://github.com/simibac/ConfettiSwiftUI)\uff1a\u4e94\u5f69\u7eb8\u5c51\u52a8\u753b\u6548\u679c\u7684 Swift \u5e93\u3002\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u6dfb\u52a0\u4e94\u5f69\u7eb8\u5c51\u52a8\u753b\u6548\u679c\u7684 Swift \u5e93\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u7eb8\u5c51\u5f62\u72b6\u3001\u7206\u70b8\u534a\u5f84\u548c\u89d2\u5ea6\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/316241544.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n30\u3001[MarkEdit](https://hellogithub.com/periodical/statistics/click?target=https://github.com/MarkEdit-app/MarkEdit)\uff1a\u4e13\u4e3a macOS \u8bbe\u8ba1\u7684\u6781\u7b80 Markdown \u7f16\u8f91\u5668\u3002\u8fd9\u662f\u4e00\u6b3e\u9002\u7528\u4e8e macOS \u7684\u514d\u8d39\u5f00\u6e90 Markdown \u7f16\u8f91\u5668\uff0c\u4f53\u79ef\u5c0f\u5de7\uff08\u4ec5 3 MB\uff09\u3002\u5b83\u63d0\u4f9b\u5e72\u51c0\u6e05\u723d\u7684\u754c\u9762\u548c\u4e13\u6ce8\u4e8e\u5199\u4f5c\u7684\u7f16\u8f91\u73af\u5883\u3002\u4f5c\u8005\u8ba4\u4e3a Markdown \u8bed\u6cd5\u975e\u5e38\u76f4\u89c2\uff0c\u56e0\u6b64\u672a\u63d0\u4f9b Markdown \u9884\u89c8\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/597609111.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u4eba\u5de5\u667a\u80fd\n31\u3001[garak](https://hellogithub.com/periodical/statistics/click?target=https://github.com/NVIDIA/garak)\uff1a\u5f00\u6e90\u7684 LLMs \u6f0f\u6d1e\u626b\u63cf\u5de5\u5177\u3002\u8be5\u9879\u76ee\u662f NVIDIA \u5f00\u6e90\u7684\u7528\u4e8e\u626b\u63cf LLMs \u6f0f\u6d1e\u7684\u5de5\u5177\uff0c\u652f\u6301\u68c0\u6d4b LLM \u53ef\u80fd\u5b58\u5728\u7684\u5b89\u5168\u95ee\u9898\u548c\u4e0d\u826f\u884c\u4e3a\uff0c\u5305\u62ec\u5e7b\u89c9\u3001\u6570\u636e\u6cc4\u6f0f\u3001\u63d0\u793a\u6ce8\u5165\u3001\u9519\u8bef\u4fe1\u606f\u3001\u6709\u6bd2\u5185\u5bb9\u751f\u6210\u548c\u8d8a\u72f1\u7b49\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/639097338.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n32\u3001[letta](https://hellogithub.com/periodical/statistics/click?target=https://github.com/letta-ai/letta)\uff1a\u4e3a LLM \u5e94\u7528\u6ce8\u5165\u8bb0\u5fc6\u80fd\u529b\u7684\u5f00\u53d1\u6846\u67b6\u3002\u8be5\u9879\u76ee\u662f\u7528\u4e8e\u6784\u5efa\u5177\u6709\u8bb0\u5fc6\u529f\u80fd\u7684 LLM \u5e94\u7528\u7684 Python \u6846\u67b6\uff0c\u652f\u6301\u521b\u5efa\u62e5\u6709\u957f\u671f\u8bb0\u5fc6\u548c\u6301\u4e45\u72b6\u6001\u7684\u667a\u80fd\u4f53\uff08Agent\uff09\uff0c\u5e76\u80fd\u591f\u96c6\u6210\u591a\u79cd LLM API \u670d\u52a1\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/703411624.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n33\u3001[MagicMirror](https://hellogithub.com/periodical/statistics/click?target=https://github.com/idootop/MagicMirror)\uff1a\u96f6\u95e8\u69db AI \u6362\u8138\u5e94\u7528\u3002\u8fd9\u662f\u4e00\u6b3e\u8f7b\u91cf\u7ea7\u3001\u5f00\u7bb1\u5373\u7528\u7684 AI \u6362\u8138\u5de5\u5177\uff0c\u65e0\u9700 GPU\u3001\u53ef\u79bb\u7ebf\u4f7f\u7528\uff0c\u4e00\u952e\u8f7b\u677e\u5c1d\u8bd5\u65b0\u5f62\u8c61\uff08\u53d1\u578b\u3001\u7a7f\u642d\u7b49\uff09\u3002\u6765\u81ea [@Del](https://hellogithub.com/user/LdwexZ8z7Ggu3lJ) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/886749252.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n34\u3001[vllm](https://hellogithub.com/periodical/statistics/click?target=https://github.com/vllm-project/vllm)\uff1a\u66f4\u9ad8\u6548\u7684 LLMs \u63a8\u7406\u548c\u670d\u52a1\u5f15\u64ce\u3002\u8fd9\u662f\u4e00\u4e2a\u9ad8\u6548\u6613\u7528\u7684\u5927\u578b\u8bed\u8a00\u6a21\u578b\u63a8\u7406\u5f15\u64ce\uff0c\u4e13\u4e3a\u89e3\u51b3\u63a8\u7406\u901f\u5ea6\u6162\u3001\u8d44\u6e90\u5229\u7528\u7387\u4f4e\u7b49\u95ee\u9898\u800c\u8bbe\u8ba1\u3002\u5b83\u57fa\u4e8e PyTorch \u548c CUDA\uff0c\u5e76\u7ed3\u5408\u5185\u5b58\u4f18\u5316\u7b97\u6cd5\uff08PagedAttention\uff09\u3001\u8ba1\u7b97\u56fe\u4f18\u5316\u548c\u6a21\u578b\u5e76\u884c\u6280\u672f\uff0c\u5927\u5e45\u964d\u4f4e GPU \u5185\u5b58\u5360\u7528\uff0c\u5e76\u5145\u5206\u5229\u7528\u591a GPU \u8d44\u6e90\u63d0\u5347\u63a8\u7406\u6027\u80fd\u3002\u540c\u65f6\uff0cvLLM \u4e0e HF \u6a21\u578b\u65e0\u7f1d\u517c\u5bb9\u3002\u652f\u6301\u5728 GPU\u3001CPU\u3001TPU \u7b49\u591a\u79cd\u786c\u4ef6\u5e73\u53f0\u4e0a\u9ad8\u6548\u8fd0\u884c\uff0c\u9002\u7528\u4e8e\u5b9e\u65f6\u95ee\u7b54\u3001\u6587\u672c\u751f\u6210\u548c\u63a8\u8350\u7cfb\u7edf\u7b49\u573a\u666f\u3002\u6765\u81ea [@Caleb](https://hellogithub.com/user/8JFOjaTEvWt4zkC) \u7684\u5206\u4eab\n```python\nfrom vllm import LLM\n\nprompts = [\"Hello, my name is\", \"The capital of France is\"]  # Sample prompts.\nllm = LLM(model=\"lmsys/vicuna-7b-v1.3\")  # Create an LLM.\noutputs = llm.generate(prompts)  # Generate texts from the prompts.\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/599547518.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n35\u3001[zerox](https://hellogithub.com/periodical/statistics/click?target=https://github.com/getomni-ai/zerox)\uff1a\u4f7f\u7528\u89c6\u89c9\u6a21\u578b\u5c06 PDF \u8f6c\u6362\u4e3a Markdown\u3002\u8be5\u9879\u76ee\u57fa\u4e8e\u89c6\u89c9\u6a21\u578b API \u670d\u52a1\uff0c\u63d0\u4f9b\u4e86\u5c06 PDF \u6587\u6863\u8f6c\u5316\u4e3a Markdown \u7684\u529f\u80fd\u3002\u5176\u539f\u7406\u662f\u5148\u5c06\u539f\u6587\u4ef6\uff08\u5982 pdf\u3001docx\uff09\u8f6c\u6362\u4e3a\u56fe\u7247\uff0c\u7136\u540e\u628a\u56fe\u7247\u53d1\u7ed9\u89c6\u89c9\u6a21\u578b\u5904\u7406\uff0c\u6700\u540e\u6c47\u603b\u6240\u6709\u7ed3\u679c\u751f\u6210\u5b8c\u6574\u7684 Markdown \u6587\u4ef6\u3002\n```\nimport path from \"path\";\nimport { zerox } from \"zerox\";\n\nconst result = await zerox({\n  filePath: path.resolve(__dirname, \"./hellogithub.pdf\"),\n  openaiAPIKey: process.env.OPENAI_API_KEY,\n});\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/831872524.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5176\u5b83\n36\u3001[awesome-low-level-design](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ashishps1/awesome-low-level-design)\uff1a\u7cfb\u7edf\u8be6\u7ec6\u8bbe\u8ba1\u7684\u5b66\u4e60\u8d44\u6e90\u5408\u96c6\u3002\u8fd9\u662f\u4e00\u4efd\u5e2e\u52a9\u5f00\u53d1\u8005\u5b66\u4e60\u548c\u638c\u63e1 LLD\uff08Low-Level Design\uff09\u7684\u8d44\u6e90\u96c6\u5408\uff0c\u5305\u542b\u5404\u79cd\u7cfb\u7edf\u7684\u5b9e\u73b0\u7ec6\u8282\u3001\u793a\u4f8b\u4ee3\u7801\u548c\u63a5\u53e3\u5b9a\u4e49\u7b49\uff0c\u975e\u5e38\u9002\u5408\u51c6\u5907\u9762\u8bd5\u548c\u63d0\u5347\u6280\u672f\u6c34\u5e73\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/719980575.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n37\u3001[bocker](https://hellogithub.com/periodical/statistics/click?target=https://github.com/p8952/bocker)\uff1a\u4ec5\u7528\u767e\u884c shell \u5b9e\u73b0\u7684 Docker\u3002\u8be5\u9879\u76ee\u901a\u8fc7\u5927\u7ea6 100 \u884c Bash \u4ee3\u7801\u5b9e\u73b0\u4e86 Docker \u7684\u57fa\u672c\u529f\u80fd\uff0c\u9002\u5408\u7528\u4e8e\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u7b80\u5355\u7684\u811a\u672c\u8bed\u8a00\u5b9e\u73b0\u5bb9\u5668\u7684\u6838\u5fc3\u529f\u80fd\u3002\n\n38\u3001[docker-xiaoya](https://hellogithub.com/periodical/statistics/click?target=https://github.com/monlor/docker-xiaoya)\uff1a\u4e00\u952e\u90e8\u7f72 Alist+Emby+Jellyfin \u670d\u52a1\u3002\u8be5\u9879\u76ee\u63d0\u4f9b\u4e86\u4e00\u952e\u90e8\u7f72 Alist\u3001Emby \u548c Jellyfin \u670d\u52a1\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5e2e\u4f60\u8f7b\u677e\u6784\u5efa\u5b8c\u6574\u7684\u5bb6\u5ead\u591a\u5a92\u4f53\u4e2d\u5fc3\uff0c\u652f\u6301 Linux\u3001macOS\u3001Windows \u7b49\u5e73\u53f0\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/807555568.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n39\u3001[domain-driven-hexagon](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Sairyss/domain-driven-hexagon)\uff1a\u5b66\u4e60\u9886\u57df\u9a71\u52a8\u8bbe\u8ba1\u4e0e\u516d\u8fb9\u5f62\u67b6\u6784\u7684\u6700\u4f73\u5b9e\u8df5\u3002\u8fd9\u662f\u4e00\u4e2a\u7ed3\u5408\u9886\u57df\u9a71\u52a8\u8bbe\u8ba1\uff08DDD\uff09\u4e0e\u516d\u8fb9\u5f62\u67b6\u6784\uff08Hexagonal Architecture\uff09\u7684\u793a\u4f8b\u9879\u76ee\uff0c\u65e8\u5728\u5e2e\u52a9\u5f00\u53d1\u8005\u7406\u89e3\u5982\u4f55\u8bbe\u8ba1\u9ad8\u8d28\u91cf\u3001\u53ef\u6269\u5c55\u3001\u53ef\u7ef4\u62a4\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/316988921.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n40\u3001[Racer](https://hellogithub.com/periodical/statistics/click?target=https://github.com/StuckAtPrototype/Racer)\uff1a\u81ea\u5236\u5f00\u6e90\u5c0f\u8d5b\u8f66\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e ESP32-H2 \u6784\u5efa\u7684\u5c0f\u578b\u8d5b\u8f66\uff0c\u4ec5\u6709\u4e94\u516d\u5398\u7c73\u5927\u5c0f\u3002\u5b83\u80fd\u591f\u8bc6\u522b\u989c\u8272\u5e76\u4f5c\u51fa\u53cd\u5e94\uff08\u795e\u7ecf\u7f51\u7edc\uff09\uff0c\u540c\u65f6\u652f\u6301\u952e\u76d8\u63a7\u5236\u3002\u6765\u81ea [@\u5b64\u80c6\u67aa\u624b](https://hellogithub.com/user/i1wAIyo6P3NXkxm) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/105/872769562.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n\n\n<p align=\"center\">\n    <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub104.md\">\u300e\u4e0a\u4e00\u671f\u300f</a> | <a href='https://github.com/521xueweihan/HelloGitHub/issues/899'>\u53cd\u9988\u548c\u5efa\u8bae</a> | <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub106.md\">\u300e\u4e0b\u4e00\u671f\u300f</a>\n</p>\n\n---\n<p align=\"center\">\n    \ud83d\udc49 <a href='https://hellogithub.com/periodical'>\u6765\uff01\u63a8\u8350\u5f00\u6e90\u9879\u76ee</a> \ud83d\udc48<br>\n    \u5fae\u4fe1\u4e2d\u641c\uff1a<strong>HelloGitHub</strong> \u5173\u6ce8\u516c\u4f17\u53f7<br>\n    \u4e0d\u4ec5\u80fd\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\uff0c\u8fd8\u6709\u56de\u9988\u7c89\u4e1d\u7684\u6d3b\u52a8<br>\n    \u5982\u679c\u6587\u4e2d\u7684\u56fe\u5237\u4e0d\u51fa\u6765\uff0c\u53ef\u4ee5\u70b9\u51fb <a href='https://hellogithub.com/periodical/volume/105'>\u8fd9\u91cc</a>\u3002\n</p>\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n"}
{"repo_url": "https://github.com/521xueweihan/HelloGitHub", "path": "content/HelloGitHub106.md", "size": 31323, "license": "NOASSERTION", "content_sha": "a1417f8d98926333ff61707886f5909fbbb4bc85", "findings": [], "content": "# \u300aHelloGitHub\u300b\u7b2c 106 \u671f\n> \u5174\u8da3\u662f\u6700\u597d\u7684\u8001\u5e08\uff0c**HelloGitHub** \u8ba9\u4f60\u5bf9\u5f00\u6e90\u611f\u5174\u8da3\uff01\n<p align=\"center\">\n    <img src='https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/cover.jpg' style=\"max-width:100%;\"></img>\n</p>\n\n## \u76ee\u5f55\n\n\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 **\u300c\u76ee\u5f55\u300d** \u56fe\u6807\u6253\u5f00\u76ee\u5f55\uff0c\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\n\n![](https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/catalog.png)\n\n**Tips**\uff1a\u5982\u679c\u9047\u5230\u56fe\u7247\u5237\u4e0d\u51fa\u6765\u7684\u60c5\u51b5\uff0c[\u70b9\u51fb](https://hellogithub.com/periodical/volume/106) \u6362\u4e00\u79cd\u6d4f\u89c8\u65b9\u5f0f\u3002\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/weixin.png\" style=\"max-width:30%;\"></img><br>\n\u5173\u6ce8\u300cHelloGitHub\u300d\u516c\u4f17\u53f7\uff0c\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\n</p>\n\n## \u5185\u5bb9\n> **\u4ee5\u4e0b\u4e3a\u672c\u671f\u5185\u5bb9**\uff5c\u6bcf\u4e2a\u6708 **28** \u53f7\u66f4\u65b0\n\n### C \u9879\u76ee\n1\u3001[sshfs](https://hellogithub.com/periodical/statistics/click?target=https://github.com/libfuse/sshfs)\uff1a\u901a\u8fc7 SSH \u6302\u8f7d\u8fdc\u7a0b\u6587\u4ef6\u7cfb\u7edf\u7684\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e SFTP \u534f\u8bae\u7684\u6587\u4ef6\u7cfb\u7edf\u5de5\u5177\uff0c\u53ef\u901a\u8fc7 SSH \u534f\u8bae\u5c06\u8fdc\u7a0b\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u5230\u672c\u5730\u3002\u5b83\u64cd\u4f5c\u7b80\u5355\uff0c\u4ec5\u9700\u4e00\u6761\u547d\u4ee4\uff0c\u5373\u53ef\u50cf\u8bbf\u95ee\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u4e00\u6837\u7ba1\u7406\u8fdc\u7a0b\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u517c\u5bb9 Linux\u3001BSD \u548c macOS \u7cfb\u7edf\u3002\n```\n\u6302\u8f7d\u6587\u4ef6\u7cfb\u7edf\nsshfs [user@]hostname:[directory] mountpoint\n\u5378\u8f7d\u6587\u4ef6\u7cfb\u7edf\nfusermount -u mountpoint\n```\n\n### C# \u9879\u76ee\n2\u3001[mRemoteNG](https://hellogithub.com/periodical/statistics/click?target=https://github.com/mRemoteNG/mRemoteNG)\uff1a\u96c6\u6210\u591a\u534f\u8bae\u7684\u8fdc\u7a0b\u8fde\u63a5\u7ba1\u7406\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u529f\u80fd\u5f3a\u5927\u7684\u8fdc\u7a0b\u8fde\u63a5\u7ba1\u7406\u5de5\u5177\uff0c\u652f\u6301 RDP\u3001VNC\u3001SSH \u7b49\u591a\u79cd\u4e3b\u6d41\u534f\u8bae\u3002\u5b83\u63d0\u4f9b\u4e86\u6807\u7b7e\u5f0f\u754c\u9762\uff0c\u7528\u6237\u53ef\u540c\u65f6\u7ba1\u7406\u548c\u5207\u6362\u591a\u4e2a\u8fdc\u7a0b\u8fde\u63a5\uff0c\u652f\u6301 Windows 11\u300110 \u7b49\u7cfb\u7edf\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/460848.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n3\u3001[msstyleEditor](https://hellogithub.com/periodical/statistics/click?target=https://github.com/nptr/msstyleEditor)\uff1a\u5f00\u7bb1\u5373\u7528\u7684 Windows \u89c6\u89c9\u6837\u5f0f\u7f16\u8f91\u5668\u3002\u8fd9\u662f\u4e00\u6b3e\u7528\u4e8e\u7f16\u8f91 Windows \u89c6\u89c9\u6837\u5f0f\uff08.msstyles \u6587\u4ef6\uff09\u7684\u5de5\u5177\uff0c\u517c\u5bb9 Windows 7\u30018\u300110 \u548c 11 \u7cfb\u7edf\u3002\u5b83\u65e0\u9700\u5b89\u88c5\u3001\u5f00\u7bb1\u5373\u7528\uff0c\u652f\u6301\u5feb\u901f\u67e5\u770b\u6240\u6709\u7ec4\u4ef6\u5e76\u4fee\u6539\u5176\u5c5e\u6027\uff0c\u8f7b\u677e\u81ea\u5b9a\u4e49\u4e3b\u9898\u6837\u5f0f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/93086337.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### C++ \u9879\u76ee\n4\u3001[Memento](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ripose-jp/Memento)\uff1a\u8fb9\u770b\u89c6\u9891\u8fb9\u5b66\u65e5\u8bed\u7684\u89c6\u9891\u64ad\u653e\u5668\u3002\u8fd9\u662f\u4e00\u6b3e\u57fa\u4e8e mpv \u7684\u5f00\u6e90\u89c6\u9891\u64ad\u653e\u5668\uff0c\u4e13\u4e3a\u5b66\u4e60\u65e5\u8bed\u800c\u8bbe\u8ba1\u3002\u5b83\u80fd\u591f\u5e2e\u52a9\u7528\u6237\u5728\u89c2\u770b\u89c6\u9891\u65f6\u5b66\u4e60\u65e5\u8bed\uff0c\u652f\u6301\u5f39\u51fa\u5f0f\u8bcd\u5178\u3001\u5b57\u5e55\u6d4f\u89c8\u3001\u751f\u6210\u548c\u540c\u6b65\u751f\u8bcd\u5361\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/302477133.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n5\u3001[mixxx](https://hellogithub.com/periodical/statistics/click?target=https://github.com/mixxxdj/mixxx)\uff1a\u514d\u8d39\u5f00\u6e90\u7684 DJ \u6df7\u97f3\u8f6f\u4ef6\u3002\u8be5\u9879\u76ee\u662f\u4e00\u6b3e\u7528 C++ \u5f00\u53d1\u7684\u4e13\u4e1a\u7ea7 DJ \u8f6f\u4ef6\uff0c\u5b8c\u5168\u514d\u8d39\u3002\u5b83\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u529f\u80fd\u548c\u786c\u4ef6\u517c\u5bb9\u6027\uff0c\u652f\u6301\u81ea\u52a8 BPM \u68c0\u6d4b\u3001\u5b9e\u65f6\u6548\u679c\u5904\u7406\u3001\u5f55\u97f3\u548c\u76f4\u64ad\u7b49\u529f\u80fd\uff0c\u9002\u7528\u4e8e Windows\u3001macOS \u548c Linux \u5e73\u53f0\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/10126031.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n6\u3001[parallel-hashmap](https://hellogithub.com/periodical/statistics/click?target=https://github.com/greg7mdp/parallel-hashmap)\uff1a\u9ad8\u6027\u80fd\u7684 HashMap \u5e93\u3002\u8be5\u9879\u76ee\u63d0\u4f9b\u4e86\u591a\u79cd\u9ad8\u6027\u80fd\u3001\u5185\u5b58\u53cb\u597d\u3001\u7ebf\u7a0b\u5b89\u5168\u7684\u54c8\u5e0c\u8868\u548c B \u6811\u5bb9\u5668\u5b9e\u73b0\u3002\u5b83\u57fa\u4e8e Google \u7684 Abseil \u5e93\u8fdb\u884c\u5f00\u53d1\u548c\u4f18\u5316\uff0c\u652f\u6301 C++11 \u6807\u51c6\u548c\u5934\u6587\u4ef6\u5f62\u5f0f\uff0c\u65e0\u9700\u7f16\u8bd1\u5373\u53ef\u76f4\u63a5\u4f7f\u7528\u3002\n```c++\n#include <iostream>\n#include <string>\n#include <parallel_hashmap/phmap.h>\n\nusing phmap::flat_hash_map;\n\nint main()\n{\n    flat_hash_map<std::string, std::string> nickname =\n    {\n        { \"tom\",  \"tomcat\"},\n        { \"jim\",  \"jimoby\"}\n    };\n\n    for (const auto& n : nickname)\n        std::cout << n.first << \"'s nickname is: \" << n.second << \"\\n\";\n\n    email[\"bill\"] = \"hellogithub\";\n    std::cout << \"bill's nickname is: \" << nickname[\"bill\"] << \"\\n\";\n\n    return 0;\n}\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/173454206.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n7\u3001[upx](https://hellogithub.com/periodical/statistics/click?target=https://github.com/upx/upx)\uff1a\u538b\u7f29\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u53ef\u6267\u884c\u6587\u4ef6\u538b\u7f29\u5de5\u5177\uff0c\u652f\u6301\u591a\u79cd\u53ef\u6267\u884c\u6587\u4ef6\u683c\u5f0f\uff08Windows\u3001Linux\u3001macOS\uff09\u3002\u5b83\u62e5\u6709\u51fa\u8272\u7684\u538b\u7f29\u6bd4\uff0850-70%\uff09\uff0c\u538b\u7f29\u540e\u7684\u6587\u4ef6\u53ef\u76f4\u63a5\u8fd0\u884c\uff0c\u9002\u7528\u4e8e\u7a0b\u5e8f\u5206\u53d1\u548c\u5927\u89c4\u6a21\u5b58\u50a8\u7684\u573a\u666f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/67031040.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Go \u9879\u76ee\n8\u3001[bunster](https://hellogithub.com/periodical/statistics/click?target=https://github.com/yassinebenaid/bunster)\uff1a\u4e00\u952e\u201c\u7f16\u8bd1\u201d shell \u811a\u672c\u7684\u5de5\u5177\u3002\u8be5\u9879\u76ee\u662f\u4e00\u4e2a Shell-to-Go \u8f6c\u8bd1\u5668\uff08Transpiler\uff09\uff0c\u539f\u7406\u662f\u5148\u628a shell \u811a\u672c\u8f6c\u6362\u4e3a Go \u4ee3\u7801\uff0c\u7136\u540e\u5229\u7528 Go \u5de5\u5177\u94fe\u5c06\u5176\u7f16\u8bd1\u4e3a\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5f25\u8865\u4e86\u4f20\u7edf shell \u811a\u672c\u5728\u6027\u80fd\u3001\u53ef\u79fb\u690d\u6027\u548c\u5b89\u5168\u6027\u65b9\u9762\u7684\u4e0d\u8db3\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/831420946.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n9\u3001[daytona](https://hellogithub.com/periodical/statistics/click?target=https://github.com/daytonaio/daytona)\uff1a\u7b80\u5316\u5f00\u53d1\u73af\u5883\u642d\u5efa\u7684\u5de5\u5177\u3002\u8be5\u9879\u76ee\u53ef\u4ee5\u901a\u8fc7\u4e00\u6761\u547d\u4ee4\uff0c\u5feb\u901f\u521b\u5efa\u4e00\u4e2a\u914d\u7f6e\u597d\u7684\u5f00\u53d1\u73af\u5883\uff0c\u652f\u6301\u4e0e\u4e3b\u6d41 IDE \u65e0\u7f1d\u96c6\u6210\uff0c\u4ee5\u53ca\u672c\u5730\u673a\u5668\u3001\u8fdc\u7a0b\u670d\u52a1\u5668\u3001\u4e91\u5e73\u53f0\u7b49\u591a\u79cd\u57fa\u7840\u8bbe\u65bd\u3002\u6765\u81ea [@IZRINO](https://hellogithub.com/user/eK0Bv1dmJPxnrwy) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/753490180.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n10\u3001[gopher-lua](https://hellogithub.com/periodical/statistics/click?target=https://github.com/yuin/gopher-lua)\uff1a\u5c06 Lua \u811a\u672c\u5d4c\u5165 Go \u7a0b\u5e8f\u3002\u8fd9\u662f\u4e00\u4e2a Go \u8bed\u8a00\u5b9e\u73b0\u7684 Lua \u865a\u62df\u673a\u548c\u7f16\u8bd1\u5668\uff0c\u5b8c\u5168\u517c\u5bb9 Lua5.1 \u8bed\u6cd5\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u4ee3\u7801\uff0c\u5c06 Lua \u811a\u672c\u5d4c\u5165\u5230 Go \u5e94\u7528\u4e2d\uff0c\u9002\u7528\u4e8e\u6e38\u620f\u5f00\u53d1\u3001\u81ea\u52a8\u5316\u5de5\u5177\u548c\u63d2\u4ef6\u7cfb\u7edf\u7b49\u9700\u8981\u811a\u672c\u5316\u652f\u6301\u7684\u573a\u666f\u3002\u6765\u81ea [@\u4e24\u53cc\u7b77\u5b50sqldc](https://hellogithub.com/user/5dGtvaZ6H3L4QMY) \u7684\u5206\u4eab\n```go\nL := lua.NewState()\ndefer L.Close()\nif err := L.DoString(`print(\"hello\")`); err != nil {\n    panic(err)\n}\n```\n\n11\u3001[SamWaf](https://hellogithub.com/periodical/statistics/click?target=https://github.com/samwafgo/SamWaf)\uff1a\u5f00\u6e90\u7684\u8f7b\u91cf\u7ea7 Web \u5e94\u7528\u9632\u706b\u5899\u3002\u8fd9\u662f\u4e00\u6b3e\u5b8c\u5168\u5f00\u6e90\u7684\u8f7b\u91cf\u7ea7 Web \u5e94\u7528\u9632\u706b\u5899\uff0c\u652f\u6301\u79c1\u6709\u5316\u90e8\u7f72\uff0c\u63d0\u4f9b Bot \u68c0\u6d4b\u3001URL \u767d\u540d\u5355\u3001CC \u9632\u62a4\u3001\u81ea\u5b9a\u4e49\u9632\u62a4\u89c4\u5219\u7b49\u529f\u80fd\uff0c\u9002\u7528\u4e8e\u5c0f\u578b\u4f01\u4e1a\u3001\u5de5\u4f5c\u5ba4\u548c\u4e2a\u4eba\u7f51\u7ad9\u3002\u6765\u81ea [@\u730e\u96bc\u4e36\u6b62\u6208reNo7](https://hellogithub.com/user/Ew59HqRWjPe0zZO) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/737285725.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Java \u9879\u76ee\n12\u3001[mzt-biz-log](https://hellogithub.com/periodical/statistics/click?target=https://github.com/mouzt/mzt-biz-log)\uff1a\u5f00\u7bb1\u5373\u7528\u7684 Spring Boot \u64cd\u4f5c\u65e5\u5fd7\u7ec4\u4ef6\u3002\u8fd9\u662f\u4e00\u4e2a\u4e3a Spring Boot \u9879\u76ee\u8bbe\u8ba1\u7684\u64cd\u4f5c\u65e5\u5fd7\u7ec4\u4ef6\uff0c\u652f\u6301\u901a\u8fc7\u6ce8\u89e3\u7684\u65b9\u5f0f\uff0c\u8f7b\u677e\u8bb0\u5f55\u4e1a\u52a1\u64cd\u4f5c\u65e5\u5fd7\uff0c\u5305\u62ec\u64cd\u4f5c\u4eba\u3001\u64cd\u4f5c\u65f6\u95f4\u3001\u64cd\u4f5c\u5185\u5bb9\u7b49\u3002\u6765\u81ea [@FangPengbo](https://hellogithub.com/user/WtxAwC6DlVhTEJO) \u7684\u5206\u4eab\n```java\n@LogRecord(\n        fail = \"\u521b\u5efa\u8ba2\u5355\u5931\u8d25\uff0c\u5931\u8d25\u539f\u56e0\uff1a\u300c{{#_errorMsg}}\u300d\",\n        success = \"{{#order.purchaseName}}\u4e0b\u4e86\u4e00\u4e2a\u8ba2\u5355,\u8d2d\u4e70\u5546\u54c1\u300c{{#order.productName}}\u300d,\u6d4b\u8bd5\u53d8\u91cf\u300c{{#innerOrder.productName}}\u300d,\u4e0b\u5355\u7ed3\u679c:{{#_ret}}\",\n        type = LogRecordType.ORDER,\n        bizNo = \"{{#order.orderNo}}\")\npublic boolean createOrder(Order order) {\n    log.info(\"\u3010\u521b\u5efa\u8ba2\u5355\u3011orderNo={}\", order.getOrderNo());\n\n    // db insert order\n    Order order1 = new Order();\n    order1.setProductName(\"\u5185\u90e8\u53d8\u91cf\u6d4b\u8bd5\");\n\n    LogRecordContext.putVariable(\"innerOrder\", order1);\n\n    return true;\n}\n```\n\n13\u3001[poi-tl](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Sayi/poi-tl)\uff1aJava \u7684 Word \u6a21\u677f\u5f15\u64ce\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e Apache POI \u7684 Word \u6a21\u677f\u5f15\u64ce\uff0c\u53ef\u4ee5\u52a8\u6001\u751f\u6210 Word \u6587\u6863\u3002\u5b83\u63d0\u4f9b\u4e86\u53cb\u597d\u7684 API\uff0c\u652f\u6301\u6587\u672c\u3001\u56fe\u7247\u3001\u8868\u683c\u3001\u6761\u4ef6\u6e32\u67d3\u3001\u56fe\u8868\u7b49\u591a\u79cd\u5185\u5bb9\u7684\u6e32\u67d3\uff0c\u9002\u7528\u4e8e\u6279\u91cf\u751f\u6210\u5408\u540c\u3001\u62a5\u544a\u3001\u901a\u77e5\u3001\u8bc1\u4e66\u7b49\u573a\u666f\u3002\n```java\nXWPFTemplate template = XWPFTemplate.compile(\"template.docx\").render(\n  new HashMap<String, Object>(){{\n    put(\"title\", \"HelloGitHub\");\n}});  \ntemplate.writeAndClose(new FileOutputStream(\"output.docx\")); \n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/32567673.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### JavaScript \u9879\u76ee\n14\u3001[openmtp](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ganeshrvel/openmtp)\uff1aMac \u4e0a\u7684 Android \u6587\u4ef6\u4f20\u8f93\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a\u4e13\u4e3a macOS \u8bbe\u8ba1\u7684\u5f00\u6e90 Android \u6587\u4ef6\u4f20\u8f93\u5de5\u5177\u3002\u901a\u8fc7 USB \u8fde\u63a5\uff0c\u5b9e\u73b0 macOS \u4e0e Android \u8bbe\u5907\u4e4b\u95f4\u5feb\u901f\u7a33\u5b9a\u7684\u6587\u4ef6\u4f20\u8f93\uff0c\u652f\u6301 macOS 11.0 \u53ca\u4ee5\u4e0a\u7248\u672c\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/161636751.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n15\u3001[readest](https://hellogithub.com/periodical/statistics/click?target=https://github.com/readest/readest)\uff1a\u6c89\u6d78\u5f0f\u7684\u7535\u5b50\u4e66\u9605\u8bfb\u5668\u3002\u8fd9\u662f\u4e00\u6b3e\u4e3a\u70ed\u7231\u9605\u8bfb\u7684\u7528\u6237\u91cf\u8eab\u6253\u9020\u7684\u9605\u8bfb\u8f6f\u4ef6\uff0c\u5c06\u6781\u7b80\u8bbe\u8ba1\u4e0e\u5f3a\u5927\u529f\u80fd\u878d\u5408\uff0c\u4e3a\u4f60\u5e26\u6765\u4e13\u6ce8\u3001\u6c89\u6d78\u7684\u9605\u8bfb\u4f53\u9a8c\u3002\u5b83\u57fa\u4e8e Next.js \u548c Tauri \u5f00\u53d1\uff0c\u652f\u6301\u8de8\u5e73\u53f0\u8fd0\u884c\uff0c\u73b0\u5df2\u652f\u6301 macOS\u3001Windows\u3001Linux \u548c Web \u5e73\u53f0\uff0c\u672a\u6765\u8fd8\u5c06\u63a8\u51fa iOS \u548c Android \u7248\u672c\uff0c\u5b9e\u73b0\u771f\u6b63\u7684\u5168\u5e73\u53f0\u8986\u76d6\u3002\u6765\u81ea [@Huang Xin](https://hellogithub.com/user/eRLUbPOy2qZtDgw) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/871781831.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n16\u3001[sharp](https://hellogithub.com/periodical/statistics/click?target=https://github.com/lovell/sharp)\uff1a\u9ad8\u6027\u80fd\u7684 Node.js \u56fe\u50cf\u5904\u7406\u5e93\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e libvips \u7684\u9ad8\u6027\u80fd Node.js \u56fe\u50cf\u5904\u7406\u5e93\uff0c\u652f\u6301\u5bf9 JPEG\u3001PNG\u3001WebP\u3001GIF \u548c SVG \u7b49\u683c\u5f0f\u7684\u56fe\u50cf\u8fdb\u884c\u8c03\u6574\u5927\u5c0f\u3001\u683c\u5f0f\u8f6c\u6362\u3001\u88c1\u526a\u548c\u65cb\u8f6c\u7b49\u64cd\u4f5c\u3002\n```javascript\nconst semiTransparentRedPng = await sharp({\n  create: {\n    width: 48,\n    height: 48,\n    channels: 4,\n    background: { r: 255, g: 0, b: 0, alpha: 0.5 }\n  }\n})\n  .png()\n  .toBuffer();\n```\n\n17\u3001[stretchly](https://hellogithub.com/periodical/statistics/click?target=https://github.com/hovancik/stretchly)\uff1a\u8de8\u5e73\u53f0\u7684\u4f11\u606f\u63d0\u9192\u52a9\u624b\u3002\u8fd9\u662f\u4e00\u6b3e\u8de8\u5e73\u53f0\u7684 Electron \u5e94\u7528\uff0c\u65e8\u5728\u901a\u8fc7\u5b9a\u65f6\u4f11\u606f\u63d0\u9192\uff0c\u5e2e\u52a9\u7528\u6237\u517b\u6210\u5065\u5eb7\u7684\u5de5\u4f5c\u4e60\u60ef\uff0c\u652f\u6301\u5305\u62ec\u4e2d\u6587\u5728\u5185\u7684\u591a\u79cd\u8bed\u8a00\uff0c\u5e76\u63d0\u4f9b\u81ea\u5b9a\u4e49\u4f11\u606f\u95f4\u9694\u3001\u65f6\u957f\u3001\u63d0\u793a\u97f3\u6548\u7b49\u4e2a\u6027\u5316\u8bbe\u7f6e\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/63014033.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n18\u3001[svgl](https://hellogithub.com/periodical/statistics/click?target=https://github.com/pheralb/svgl)\uff1a\u7cbe\u7f8e\u7684 Logo \u8d44\u6e90\u5e93\u3002\u8be5\u9879\u76ee\u662f\u57fa\u4e8e SvelteKit \u548c Tailwind CSS \u6784\u5efa\u7684\u5728\u7ebf Logo \u5e93\uff0c\u6536\u5f55\u4e86 400 \u591a\u79cd\u6807\u5fd7\u548c\u6587\u5b57\u5546\u6807\uff0c\u8986\u76d6\u6280\u672f\u3001\u7f16\u7a0b\u8bed\u8a00\u3001\u6846\u67b6\u3001\u516c\u53f8\u7b49\u5206\u7c7b\uff0c\u652f\u6301\u4e00\u952e\u4e0b\u8f7d\u548c\u590d\u5236\u4ee3\u7801\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/448688478.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Kotlin \u9879\u76ee\n19\u3001[AndroidEasterEggs](https://hellogithub.com/periodical/statistics/click?target=https://github.com/hushenghao/AndroidEasterEggs)\uff1aAndroid \u7cfb\u7edf\u5f69\u86cb\u5927\u5168\u3002\u8be5\u9879\u76ee\u6536\u96c6\u4e86\u5404\u79cd Android \u7cfb\u7edf\u5f69\u86cb\uff0c\u5305\u542b\u5b8c\u6574\u7684\u4ee3\u7801\u548c\u4f53\u9a8c\u7b49\u529f\u80fd\u3002\u6765\u81ea [@p0ssword](https://hellogithub.com/user/GxAPw47k9KVOyhM) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/306645388.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n20\u3001[Maestro](https://hellogithub.com/periodical/statistics/click?target=https://github.com/mobile-dev-inc/Maestro)\uff1a\u79fb\u52a8\u7aef UI \u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6\u3002\u8fd9\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u79fb\u52a8\u7aef\u548c Web \u5e94\u7528 UI \u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\uff0c\u5b83\u91c7\u7528\u7b80\u5355\u6613\u61c2\u7684 YAML \u8bed\u6cd5\u7f16\u5199\u6d4b\u8bd5\u811a\u672c\uff0c\u5185\u7f6e\u5bb9\u9519\u673a\u5236\u548c\u64cd\u4f5c\u5ef6\u8fdf\u5bb9\u5fcd\u529f\u80fd\uff0c\u652f\u6301 Android\u3001iOS\u3001Flutter \u548c\u684c\u9762\u6d4f\u89c8\u5668\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/476427476.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Python \u9879\u76ee\n21\u3001[chonkie](https://hellogithub.com/periodical/statistics/click?target=https://github.com/chonkie-ai/chonkie)\uff1a\u8f7b\u91cf\u7ea7\u7684\u6587\u672c\u5206\u5757 Python \u5e93\u3002\u8fd9\u662f\u4e00\u4e2a\u4e13\u4e3a RAG \u5e94\u7528\u8bbe\u8ba1\u7684\u8f7b\u91cf\u7ea7\u6587\u672c\u5206\u5757\u5e93\uff0c\u5b83\u7b80\u5355\u6613\u7528\u3001\u901f\u5ea6\u5feb\uff0c\u80fd\u591f\u6309\u56fa\u5b9a\u5927\u5c0f\u5206\u5272\u6587\u672c\uff0c\u652f\u6301\u591a\u79cd\u5206\u8bcd\u5668\u3001\u5411\u91cf\u6a21\u578b\u548c\u7075\u6d3b\u7684\u5206\u5757\u7b56\u7565\uff0c\u9002\u7528\u4e8e\u957f\u6587\u672c\u5904\u7406\u3001\u6784\u5efa RAG \u5e94\u7528\u7b49\u573a\u666f\u3002\n```python\nfrom chonkie import TokenChunker\nfrom tokenizers import Tokenizer\n\ntokenizer = Tokenizer.from_pretrained(\"gpt2\")\nchunker = TokenChunker(tokenizer)\n\nchunks = chunker(\"HelloGitHub! Chonkie, the chunking library is so cool! I love the tiny hippo hehe.\")\n\nfor chunk in chunks:\n    print(f\"Chunk: {chunk.text}\")\n    print(f\"Tokens: {chunk.token_count}\")\n```\n\n22\u3001[fonttools](https://hellogithub.com/periodical/statistics/click?target=https://github.com/fonttools/fonttools)\uff1a\u64cd\u4f5c\u5b57\u4f53\u6587\u4ef6\u7684 Python \u5e93\u3002\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u7f16\u8f91\u548c\u8f6c\u6362\u5b57\u4f53\u6587\u4ef6\u7684 Python \u5e93\uff0c\u652f\u6301 TrueType \u548c OpenType \u5b57\u4f53\u4e0e XML \u683c\u5f0f\uff08TTX\uff09\u4e4b\u95f4\u7684\u76f8\u4e92\u8f6c\u6362\uff0c\u517c\u5bb9\u591a\u79cd\u5b57\u4f53\u683c\u5f0f\uff0c\u9002\u7528\u4e8e\u7f16\u8f91\u3001\u8c03\u8bd5\u548c\u4f18\u5316\u5b57\u4f53\u7b49\u573a\u666f\u3002\n```python\nfrom fontTools.afmLib import AFM\n\nf = AFM(\"Tests/afmLib/data/TestAFM.afm\")\nprint(f[\"A\"])\n# (65, 668, (8, -25, 660, 666))\n\nf.FontName = \"TestFont HelloGitHub\"\nf.write(\"testfont-hellogithub.afm\")\n```\n\n23\u3001[httpdbg](https://hellogithub.com/periodical/statistics/click?target=https://github.com/cle-b/httpdbg)\uff1a\u8f7b\u677e\u6355\u83b7 Python \u7a0b\u5e8f\u4e2d HTTP(S) \u8bf7\u6c42\u7684\u5de5\u5177\u3002\u8be5\u9879\u76ee\u662f\u7528\u4e8e\u5e2e\u52a9\u5f00\u53d1\u8005\u8c03\u8bd5 Python \u7a0b\u5e8f\u4e2d\u7684 HTTP(S) \u8bf7\u6c42\u7684\u5de5\u5177\u3002\u901a\u8fc7 pyhttpdbg \u547d\u4ee4\u8fd0\u884c\u7a0b\u5e8f\uff0c\u5373\u53ef\u5728\u6d4f\u89c8\u5668\u4e2d\u67e5\u770b\u53d1\u51fa\u7684 HTTP \u8bf7\u6c42\uff0c\u652f\u6301\u811a\u672c\u8fd0\u884c\u3001\u4ea4\u4e92\u5f0f\u63a7\u5236\u53f0\u3001\u5355\u5143\u6d4b\u8bd5\u591a\u79cd\u8fd0\u884c\u6a21\u5f0f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/273906263.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n24\u3001[pwndbg](https://hellogithub.com/periodical/statistics/click?target=https://github.com/pwndbg/pwndbg)\uff1a\u4e13\u4e3a\u9006\u5411\u5de5\u7a0b\u8bbe\u8ba1\u7684 GDB/LLDB \u63d2\u4ef6\u3002\u8fd9\u662f\u4e00\u4e2a\u4e13\u4e3a GDB \u548c LLDB \u8c03\u8bd5\u5668\u8bbe\u8ba1\u7684\u63d2\u4ef6\uff0c\u652f\u6301\u5bc4\u5b58\u5668\u72b6\u6001\u663e\u793a\u3001\u5185\u5b58\u641c\u7d22\u3001\u5185\u5b58\u6cc4\u6f0f\u67e5\u627e\u7b49\u529f\u80fd\uff0c\u9002\u7528\u4e8e\u5e95\u5c42\u8f6f\u4ef6\u5f00\u53d1\u3001\u786c\u4ef6\u8c03\u8bd5\u548c\u9006\u5411\u5de5\u7a0b\u7b49\u573a\u666f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/31181767.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n25\u3001[PyPSA](https://hellogithub.com/periodical/statistics/click?target=https://github.com/PyPSA/PyPSA)\uff1a\u7535\u529b\u7cfb\u7edf\u5206\u6790 Python \u5e93\u3002\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u7535\u529b\u7cfb\u7edf\u5206\u6790\u7684 Python \u5e93\uff0c\u4e13\u6ce8\u4e8e\u7535\u529b\u548c\u591a\u80fd\u6e90\u7cfb\u7edf\u7684\u5efa\u6a21\u4e0e\u4f18\u5316\u3002\u5b83\u57fa\u4e8e Pandas\u3001NumPy\u3001GLPK\u3001Cbc \u7b49\u5e93\uff0c\u80fd\u591f\u9ad8\u6548\u8ba1\u7b97\u6700\u4f18\u6f6e\u6d41\u4f18\u5316\uff08OPF\uff09\u3001\u7ebf\u6027\u548c\u975e\u7ebf\u6027\u7535\u529b\u6d41\uff0c\u5e76\u652f\u6301\u6a21\u62df\u5404\u79cd\u7535\u529b\u548c\u80fd\u6e90\u7cfb\u7edf\u7ec4\u4ef6\u7684\u529f\u80fd\u3002\n```python\nimport pypsa\n\n# create a new network\nn = pypsa.Network()\nn.add(\"Bus\", \"mybus\")\nn.add(\"Load\", \"myload\", bus=\"mybus\", p_set=100)\nn.add(\"Generator\", \"mygen\", bus=\"mybus\", p_nom=100, marginal_cost=20)\n\n# load an example network\nn = pypsa.examples.ac_dc_meshed()\n\n# run the optimisation\nn.optimize()\n\n# plot results\nn.generators_t.p.plot()\nn.plot()\n\n# get statistics\nn.statistics()\nn.statistics.energy_balance()\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/49414256.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Rust \u9879\u76ee\n26\u3001[aquascope](https://hellogithub.com/periodical/statistics/click?target=https://github.com/cognitive-engineering-lab/aquascope)\uff1a\u53ef\u89c6\u5316 Rust \u4ee3\u7801\u6267\u884c\u8fc7\u7a0b\u7684\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a Rust \u4ee3\u7801\u53ef\u89c6\u5316\u7684\u5de5\u5177\uff0c\u76f4\u89c2\u5c55\u793a\u4ee3\u7801\u7684\u7f16\u8bd1\u548c\u8fd0\u884c\u7ec6\u8282\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u7406\u89e3 Rust \u8bed\u8a00\u7684\u8fd0\u884c\u673a\u5236\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/537217688.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n27\u3001[code2prompt](https://hellogithub.com/periodical/statistics/click?target=https://github.com/mufeedvh/code2prompt)\uff1a\u5c06\u4ee3\u7801\u5e93\u8f6c\u6362\u4e3a LLM \u63d0\u793a\u7684\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u4e2a Rust \u5199\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u80fd\u591f\u5c06\u4ee3\u7801\u5e93\u5feb\u901f\u8f6c\u6362\u4e3a\u9002\u7528\u4e8e LLM \u7684\u63d0\u793a\u8bcd\uff08Markdown \u6587\u4ef6\uff09\u3002\u5b83\u4f1a\u81ea\u52a8\u904d\u5386\u76ee\u5f55\uff0c\u751f\u6210\u4ee3\u7801\u7ed3\u6784\u6811\u5e76\u6574\u5408\u5230\u63d0\u793a\u8bcd\u4e2d\uff0c\u540c\u65f6\u652f\u6301\u63d0\u793a\u8bcd\u6a21\u677f\u3001Token \u8ba1\u7b97\u3001\u751f\u6210 Git \u63d0\u4ea4\u4fe1\u606f\u3001\u6587\u4ef6\u7b5b\u9009\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/769564277.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n28\u3001[rpg-cli](https://hellogithub.com/periodical/statistics/click?target=https://github.com/facundoolano/rpg-cli)\uff1a\u5c06\u4f60\u7684\u6587\u4ef6\u7cfb\u7edf\u53d8\u6210\u4e00\u4e2a\u5730\u7262\u6e38\u620f\u3002\u8fd9\u662f\u4e00\u6b3e\u7528 Rust \u7f16\u5199\u7684\u547d\u4ee4\u884c RPG \u6e38\u620f\uff0c\u6bcf\u6b21\u6267\u884c cd \u547d\u4ee4\u65f6\uff0c\u90fd\u53ef\u80fd\u906d\u9047\u654c\u4eba\u5e76\u89e6\u53d1\u56de\u5408\u5236\u6218\u6597\uff08\u81ea\u52a8\uff09\uff0c\u6e38\u620f\u652f\u6301\u89d2\u8272\u5347\u7ea7\u3001\u7269\u54c1\u3001\u804c\u4e1a\u548c\u5b9d\u7bb1\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/361019889.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### Swift \u9879\u76ee\n29\u3001[boring.notch](https://hellogithub.com/periodical/statistics/click?target=https://github.com/TheBoredTeam/boring.notch)\uff1a\u5c06 MacBook \u7684\u5218\u6d77\u53d8\u6210\u97f3\u4e50\u63a7\u5236\u4e2d\u5fc3\u3002\u8fd9\u662f\u4e00\u6b3e\u4e13\u4e3a macOS \u8bbe\u8ba1\u7684\u5e94\u7528\uff0c\u53ef\u5c06\u539f\u672c\u5355\u8c03\u7684\u5218\u6d77\u533a\u57df\u53d8\u6210\u4e00\u4e2a\u70ab\u9177\u7684\u97f3\u4e50\u63a7\u5236\u4e2d\u5fc3\uff0c\u652f\u6301\u65e5\u5386\u3001AirDrop \u548c\u97f3\u4e50\u63a7\u5236\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/837073921.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n30\u3001[SwiftUI-Shimmer](https://hellogithub.com/periodical/statistics/click?target=https://github.com/markiv/SwiftUI-Shimmer)\uff1aSwiftUI \u95ea\u70c1\u6548\u679c\u52a8\u6548\u5e93\u3002\u8fd9\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684 SwiftUI \u52a8\u6548\u5e93\uff0c\u53ef\u4ee5\u8f7b\u677e\u4e3a\u4efb\u610f SwiftUI \u89c6\u56fe\u6dfb\u52a0\u95ea\u70c1\u6548\u679c\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u52a8\u753b\u3001\u6e10\u53d8\u6837\u5f0f\u3001\u95ea\u70c1\u901f\u5ea6\u7b49\uff0c\u9002\u7528\u4e8e\u52a0\u8f7d\u72b6\u6001\u3001\u5360\u4f4d\u7b26\u3001\u9aa8\u67b6\u5c4f\u7b49\u573a\u666f\u3002\n```swift\nText(\"Custom Gradient Mode\").bold()\n    .font(.largeTitle)\n    .shimmering(\n        gradient: Gradient(colors: [.clear, .orange, .white, .green, .clear]),\n        bandSize: 0.5,\n        mode: .overlay()\n    )\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/350812836.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u4eba\u5de5\u667a\u80fd\n31\u3001[AI-on-the-edge-device](https://hellogithub.com/periodical/statistics/click?target=https://github.com/jomjol/AI-on-the-edge-device)\uff1a\u5c06\u201c\u65e7\u201d\u8bbe\u5907\u63a5\u5165\u6570\u5b57\u4e16\u754c\u3002\u8be5\u9879\u76ee\u57fa\u4e8e ESP32 \u7b49\u4fbf\u5b9c\u7684\u786c\u4ef6\uff08\u4e0d\u5230 10 \u6b27\uff09\u548c TensorFlow Lite \u6846\u67b6\uff0c\u5b9e\u73b0\u5bf9\u4eea\u8868\u6570\u5b57\u7684\u81ea\u52a8\u8bc6\u522b\u548c\u6570\u636e\u4f20\u8f93\uff0c\u8f7b\u677e\u5c06\u4f20\u7edf\u8bbe\u5907\uff08\u6c34\u8868\u3001\u71c3\u6c14\u8868\u3001\u7535\u8868\uff09\u6539\u9020\u6210\u667a\u80fd\u8bbe\u5907\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/283280154.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n32\u3001[instructor](https://hellogithub.com/periodical/statistics/click?target=https://github.com/instructor-ai/instructor)\uff1a\u8ba9 LLM \u8f93\u51fa\u7ed3\u6784\u5316\u6570\u636e\u7684 Python \u5e93\u3002\u8be5\u9879\u76ee\u662f\u7528\u4e8e\u5904\u7406\u5927\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u7ed3\u6784\u5316\u8f93\u51fa\u7684 Python \u5e93\u3002\u5b83\u57fa\u4e8e Pydantic \u5b9e\u73b0\u4e86\u6570\u636e\u9a8c\u8bc1\u548c\u7c7b\u578b\u6ce8\u91ca\uff0c\u80fd\u591f\u5c06 LLM \u7684\u7ed3\u679c\uff08\u81ea\u7136\u8bed\u8a00\uff09\u8f6c\u6362\u4e3a\u7ed3\u6784\u5316\u6570\u636e\uff0c\u652f\u6301\u591a\u79cd\u5927\u8bed\u8a00\u6a21\u578b\u670d\u52a1\uff0c\u4ee5\u53ca\u81ea\u52a8\u91cd\u8bd5\u3001\u6d41\u5f0f\u54cd\u5e94\u7b49\u529f\u80fd\u3002\n```python\nimport instructor\nfrom pydantic import BaseModel\nfrom openai import OpenAI\n\n\n# Define your desired output structure\nclass UserInfo(BaseModel):\n    name: str\n    age: int\n\n\n# Patch the OpenAI client\nclient = instructor.from_openai(OpenAI())\n\n# Extract structured data from natural language\nuser_info = client.chat.completions.create(\n    model=\"gpt-4o-mini\",\n    response_model=UserInfo,\n    messages=[{\"role\": \"user\", \"content\": \"John Doe is 30 years old.\"}],\n)\n\nprint(user_info.name)\n#> John Doe\nprint(user_info.age)\n#> 30\n```\n\n33\u3001[lite.ai.toolkit](https://hellogithub.com/periodical/statistics/click?target=https://github.com/xlite-dev/lite.ai.toolkit)\uff1a\u8f7b\u91cf\u7ea7\u7684 C++ AI \u5de5\u5177\u5305\u3002\u8fd9\u662f\u4e00\u4e2a\u7528 C++ \u7f16\u5199\u7684 AI \u5de5\u5177\u5305\uff0c\u5185\u7f6e\u8d85\u8fc7 100 \u79cd AI \u6a21\u578b\uff0c\u5305\u62ec\u5bf9\u8c61\u68c0\u6d4b\u3001\u4eba\u8138\u8bc6\u522b\u3001\u5206\u5272\u3001\u62a0\u56fe\u7b49\u9886\u57df\u3002\u5b83\u652f\u6301 ONNXRuntime\u3001MNN\u3001NCNN\u3001TNN \u548c TensorRT \u7b49\u4e3b\u6d41\u63a8\u7406\u5f15\u64ce\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u5feb\u901f\u90e8\u7f72\u548c\u4f7f\u7528 AI \u6a21\u578b\u3002\u6765\u81ea [@wangzijian](https://hellogithub.com/user/1NZpMjQFDvCfaEK) \u7684\u5206\u4eab\n```c++\n#include \"lite/lite.h\"\n\nint main(int argc, char *argv[]) {\n  std::string onnx_path = \"yolov5s.onnx\";\n  std::string test_img_path = \"test_yolov5.jpg\";\n  std::string save_img_path = \"test_results.jpg\";\n\n  auto *yolov5 = new lite::cv::detection::YoloV5(onnx_path); \n  std::vector<lite::types::Boxf> detected_boxes;\n  cv::Mat img_bgr = cv::imread(test_img_path);\n  yolov5->detect(img_bgr, detected_boxes);\n  \n  lite::utils::draw_boxes_inplace(img_bgr, detected_boxes);\n  cv::imwrite(save_img_path, img_bgr);  \n  delete yolov5;\n  return 0;\n}\n```\n\n34\u3001[minimind](https://hellogithub.com/periodical/statistics/click?target=https://github.com/jingyaogong/minimind)\uff1a\u4ece\u96f6\u5f00\u59cb\u8bad\u7ec3\u5c0f\u578b\u8bed\u8a00\u6a21\u578b\u3002\u8fd9\u4e0d\u4ec5\u662f\u4e00\u4e2a\u5fae\u578b\u8bed\u8a00\u6a21\u578b\u7684\u5b9e\u73b0\uff0c\u66f4\u662f\u4e00\u4efd\u5165\u95e8 LLM \u7684\u6559\u7a0b\uff0c\u65e8\u5728\u964d\u4f4e\u5b66\u4e60\u548c\u4e0a\u624b LLM \u7684\u95e8\u69db\u3002\u5b83\u63d0\u4f9b\u4e86\u4ece\u6570\u636e\u9884\u5904\u7406\u5230\u6a21\u578b\u8bad\u7ec3\u3001\u5fae\u8c03\u548c\u63a8\u7406\u7684\u5168\u6d41\u7a0b\u4ee3\u7801\u548c\u6559\u7a0b\u3002\u6700\u5c0f\u6a21\u578b\u4ec5 0.02B \u53c2\u6570\uff0c\u53ef\u5728\u666e\u901a GPU \u4e0a\u8f7b\u677e\u8fd0\u884c\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/834369920.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n### \u5176\u5b83\n35\u3001[flutter_slidable](https://hellogithub.com/periodical/statistics/click?target=https://github.com/letsar/flutter_slidable)\uff1aFlutter \u7684\u6ed1\u52a8\u64cd\u4f5c\u7ec4\u4ef6\u3002\u8fd9\u662f\u4e00\u4e2a Flutter \u7684\u5f00\u6e90\u5e93\uff0c\u53ef\u7528\u4e8e\u5feb\u901f\u5b9e\u73b0\u5217\u8868\u9879\u7684\u6ed1\u52a8\u64cd\u4f5c\uff0c\u652f\u6301\u591a\u65b9\u5411\u3001\u6ed1\u52a8\u52a8\u753b\u3001\u81ea\u52a8\u5173\u95ed\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/141008724.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n36\u3001[inky-dashboard](https://hellogithub.com/periodical/statistics/click?target=https://github.com/jaeheonshim/inky-dashboard)\uff1a\u7535\u5b50\u58a8\u6c34\u5c4f\u7684\u5f85\u529e\u4e8b\u9879\u548c\u65e5\u5386\u7ba1\u7406\u5de5\u5177\u3002\u8fd9\u662f\u4e00\u6b3e\u4f4e\u529f\u8017\u7684\u7535\u5b50\u58a8\u6c34\u5c4f\u5f85\u529e\u4e8b\u9879\u548c\u65e5\u5386\u7ba1\u7406\u5de5\u5177\uff0c\u786c\u4ef6\u91c7\u7528 Raspberry Pi Pico W \u548c Inky Frame 7.3 \u82f1\u5bf8\u4e03\u8272\u7535\u5b50\u58a8\u6c34\u5c4f\uff0c\u540c\u65f6\u4f7f\u7528 LVGL \u5b9e\u73b0\u754c\u9762\u5e03\u5c40\uff0c\u652f\u6301\u591a\u79cd\u989c\u8272\u663e\u793a\u3001\u5f85\u529e\u4e8b\u9879\u3001\u65e5\u5386\u540c\u6b65\u7b49\u529f\u80fd\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/900200373.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n37\u3001[nginx-proxy](https://hellogithub.com/periodical/statistics/click?target=https://github.com/nginx-proxy/nginx-proxy)\uff1a\u4e3a Docker \u5bb9\u5668\u81ea\u52a8\u914d\u7f6e Nginx \u53cd\u5411\u4ee3\u7406\u3002\u8be5\u9879\u76ee\u53ef\u4ee5\u81ea\u52a8\u4e3a Docker \u5bb9\u5668\u63d0\u4f9b Nginx \u53cd\u5411\u4ee3\u7406\u670d\u52a1\u3002\u5b83\u80fd\u591f\u5b9e\u65f6\u76d1\u542c Docker \u5bb9\u5668\u7684\u542f\u52a8\u548c\u505c\u6b62\u4e8b\u4ef6\uff0c\u81ea\u52a8\u4e3a\u6bcf\u4e2a Docker \u5bb9\u5668\u914d\u7f6e Nginx \u53cd\u5411\u4ee3\u7406\uff0c\u65e0\u9700\u624b\u52a8\u5e72\u9884\uff0c\u6781\u5927\u7b80\u5316\u4e86\u5bb9\u5668\u73af\u5883\u4e0b\u7684 Nginx \u914d\u7f6e\u6d41\u7a0b\u3002\n```\n# \u7b2c\u4e00\u6b65\u542f\u52a8 nginx-proxy\ndocker run --detach \\\n    --name nginx-proxy \\\n    --publish 80:80 \\\n    --volume /var/run/docker.sock:/tmp/docker.sock:ro \\\n    nginxproxy/nginx-proxy:1.6\n\n# \u7b2c\u4e8c\u6b65\u542f\u52a8\u5e94\u7528\ndocker run --detach \\\n    --name your-proxied-app \\\n    --env VIRTUAL_HOST=hellogithub.com \\\n    nginx\n```\n\n38\u3001[reference](https://hellogithub.com/periodical/statistics/click?target=https://github.com/Fechin/reference)\uff1a\u4e3a\u5f00\u53d1\u8005\u51c6\u5907\u7684\u901f\u67e5\u8868\u3002\u8fd9\u662f\u4e00\u4efd\u4e13\u4e3a\u5f00\u53d1\u8005\u51c6\u5907\u7684\u5feb\u901f\u53c2\u8003\u624b\u518c\uff08cheat sheet\uff09\u96c6\u5408\uff0c\u65e8\u5728\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u7b80\u6d01\u3001\u76f4\u89c2\u7684\u901f\u67e5\u8868\uff0c\u5185\u5bb9\u6db5\u76d6\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u3001\u6846\u67b6\u3001Linux \u547d\u4ee4\u548c\u6570\u636e\u5e93\u7b49\u3002\u6765\u81ea [@databook](https://hellogithub.com/user/1qC4w2Ey6bu0fgR) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/322855089.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n39\u3001[VoxelSpace](https://hellogithub.com/periodical/statistics/click?target=https://github.com/s-macke/VoxelSpace)\uff1a\u4e0d\u5230 20 \u884c\u7684\u5730\u5f62\u6e32\u67d3\u7b97\u6cd5\u3002\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u5730\u5f62\u6e32\u67d3\u7684\u7b97\u6cd5\uff0c\u6838\u5fc3\u4ee3\u7801\u4e0d\u5230 20 \u884c\u3002\u5b83\u590d\u73b0\u4e86\u7ecf\u5178\u6e38\u620f Comanche \u6240\u91c7\u7528\u7684\u6e32\u67d3\u6280\u672f\uff08Voxel Space\uff09\uff0c\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b66\u4e60\u548c\u53c2\u8003\u7684\u793a\u4f8b\u3002\n```python\ndef Render(p, height, horizon, scale_height, distance, screen_width, screen_height):\n    # Draw from back to the front (high z coordinate to low z coordinate)\n    for z in range(distance, 1, -1):\n        # Find line on map. This calculation corresponds to a field of view of 90\u00b0\n        pleft  = Point(-z + p.x, -z + p.y)\n        pright = Point( z + p.x, -z + p.y)\n        # segment the line\n        dx = (pright.x - pleft.x) / screen_width\n        # Raster line and draw a vertical line for each segment\n        for i in range(0, screen_width):\n            height_on_screen = (height - heightmap[pleft.x, pleft.y]) / z * scale_height. + horizon\n            DrawVerticalLine(i, height_on_screen, screen_height, colormap[pleft.x, pleft.y])\n            pleft.x += dx\n\n# Call the render function with the camera parameters:\n# position, height, horizon line position,\n# scaling factor for the height, the largest distance, \n# screen width and the screen height parameter\nRender( Point(0, 0), 50, 120, 120, 300, 800, 600 )\n```\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/104589662.gif' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n40\u3001[zh-style-guide](https://hellogithub.com/periodical/statistics/click?target=https://github.com/yikeke/zh-style-guide)\uff1a\u4e2d\u6587\u6280\u672f\u6587\u6863\u5199\u4f5c\u98ce\u683c\u6307\u5357\u3002\u8fd9\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u4e2d\u6587\u6280\u672f\u6587\u6863\u5199\u4f5c\u89c4\u8303\u6307\u5357\uff0c\u65e8\u5728\u4e3a\u4e2d\u6587\u6280\u672f\u6587\u6863\u7684\u8bed\u8a00\u98ce\u683c\u3001\u7ed3\u6784\u6837\u5f0f\u3001\u5185\u5bb9\u5143\u7d20\u3001\u6807\u70b9\u7b26\u53f7\u3001\u683c\u5f0f\u6392\u7248\u7b49\u65b9\u9762\u63d0\u4f9b\u53c2\u8003\u89c4\u8303\u3002\n\n### \u5f00\u6e90\u4e66\u7c4d\n41\u3001[Foundations-of-LLMs](https://hellogithub.com/periodical/statistics/click?target=https://github.com/ZJU-LLMs/Foundations-of-LLMs)\uff1a\u300a\u5927\u6a21\u578b\u57fa\u7840\u300b\u3002\u8be5\u4e66\u662f\u7531\u6d59\u6c5f\u5927\u5b66 DAILY \u5b9e\u9a8c\u5ba4\u5f00\u6e90\u7684\u5927\u8bed\u8a00\u6a21\u578b\u6559\u6750\uff0c\u5185\u5bb9\u6db5\u76d6\u4f20\u7edf\u8bed\u8a00\u6a21\u578b\u3001\u5927\u8bed\u8a00\u6a21\u578b\u67b6\u6784\u6f14\u5316\u3001Prompt \u5de5\u7a0b\u3001\u53c2\u6570\u9ad8\u6548\u5fae\u8c03\u3001\u6a21\u578b\u7f16\u8f91\u3001\u68c0\u7d22\u589e\u5f3a\u751f\u6210\u7b49\u65b9\u9762\u3002\u6765\u81ea [@\u65e0\u95f4\u4e4b\u949f](https://hellogithub.com/user/rnlYFdQcyhRm50p) \u7684\u5206\u4eab\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/822044840.png' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n42\u3001[pytorch-deep-learning](https://hellogithub.com/periodical/statistics/click?target=https://github.com/mrdbourke/pytorch-deep-learning)\uff1a\u300a\u5b66\u4e60 PyTorch \u8fdb\u884c\u6df1\u5ea6\u5b66\u4e60\uff1a\u4ece\u96f6\u5230\u7cbe\u901a\u300b\u3002\u8be5\u9879\u76ee\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u56fe\u6587\u6559\u7a0b\u3001\u4ee3\u7801\u793a\u4f8b\u3001\u89c6\u9891\u8bb2\u89e3\u548c\u5b9e\u6218\u9879\u76ee\uff0c\u65e8\u5728\u901a\u8fc7\u5b9e\u8df5\u7684\u65b9\u5f0f\u5e2e\u52a9\u521d\u5b66\u8005\u638c\u63e1 PyTorch \u6846\u67b6\u548c\u6df1\u5ea6\u5b66\u4e60\u6280\u672f\u3002\n\n<p align=\"center\"><img src='https://raw.githubusercontent.com/521xueweihan/img4/master/hellogithub/106/418718534.jpg' style=\"max-width:80%; max-height=80%;\"></img></p>\n\n\n\n<p align=\"center\">\n    <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub105.md\">\u300e\u4e0a\u4e00\u671f\u300f</a> | <a href='https://github.com/521xueweihan/HelloGitHub/issues/899'>\u53cd\u9988\u548c\u5efa\u8bae</a> | <a href=\"https://github.com/521xueweihan/HelloGitHub/blob/master/content/HelloGitHub107.md\">\u300e\u4e0b\u4e00\u671f\u300f</a>\n</p>\n\n---\n<p align=\"center\">\n    \ud83d\udc49 <a href='https://hellogithub.com/periodical'>\u6765\uff01\u63a8\u8350\u5f00\u6e90\u9879\u76ee</a> \ud83d\udc48<br>\n    \u5fae\u4fe1\u4e2d\u641c\uff1a<strong>HelloGitHub</strong> \u5173\u6ce8\u516c\u4f17\u53f7<br>\n    \u4e0d\u4ec5\u80fd\u7b2c\u4e00\u65f6\u95f4\u6536\u5230\u63a8\u9001\uff0c\u8fd8\u6709\u56de\u9988\u7c89\u4e1d\u7684\u6d3b\u52a8<br>\n    \u5982\u679c\u6587\u4e2d\u7684\u56fe\u5237\u4e0d\u51fa\u6765\uff0c\u53ef\u4ee5\u70b9\u51fb <a href='https://hellogithub.com/periodical/volume/106'>\u8fd9\u91cc</a>\u3002\n</p>\n\n## \u8d5e\u52a9\n\n\n<table>\n  <thead>\n    <tr>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.compshare.cn/?utm_term=logo&utm_campaign=hellogithub&utm_source=otherdsp&utm_medium=display&ytag=logo_hellogithub_otherdsp_display\">          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/ucloud.png\" width=\"60px\"><br>\n          <sub>UCloud</sub><br>\n          <sub>\u8d85\u503c\u7684GPU\u4e91\u670d\u52a1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://www.upyun.com/?from=hellogithub\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/upyun.png\" width=\"60px\"><br>\n          <sub>CDN</sub><br>\n          <sub>\u5f00\u542f\u5168\u7f51\u52a0\u901f</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://github.com/OpenIMSDK/Open-IM-Server\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/im.png\" width=\"60px\"><br>\n          <sub>OpenIM</sub><br>\n          <sub>\u5f00\u6e90IM\u529b\u4e89No.1</sub>\n        </a>\n      </th>\n      <th align=\"center\" style=\"width: 80px;\">\n        <a href=\"https://apifox.cn/a103hello\">\n          <img src=\"https://raw.githubusercontent.com/521xueweihan/img_logo/master/logo/apifox.png\" width=\"60px\"><br>\n          <sub>Apifox</sub><br>\n          <sub>\u6bd4 Postman \u66f4\u5f3a\u5927</sub>\n        </a>\n      </th>\n    </tr>\n  </thead>\n</table>\n\n\n## \u58f0\u660e\n<a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width: 0\" src=\"https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png\"></a><br>\u672c\u4f5c\u54c1\u91c7\u7528 <a rel=\"license\" href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\">\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 4.0 \u56fd\u9645</a> \u8fdb\u884c\u8bb8\u53ef\u3002\n"}
{"repo_url": "https://github.com/vinta/awesome-python", "path": ".github/ISSUE_TEMPLATE/add-new-library-to-this-list.md", "size": 130, "license": "NOASSERTION", "content_sha": "eba33ff6259d448f3dda3bce0f739780e2dd8022", "findings": [], "content": "---\nname: Add new library to this list\nabout: ''\ntitle: ''\nlabels: ''\nassignees: ''\n\n---\n\n**Please open a Pull Request instead.**\n"}
{"repo_url": "https://github.com/vinta/awesome-python", "path": ".github/ISSUE_TEMPLATE/add-xxx.md", "size": 131, "license": "NOASSERTION", "content_sha": "585f4919e12123a8173fcbe0af7b55f0ef8b57b6", "findings": [], "content": "---\nname: Add XXX\nabout: Add new item to the list\ntitle: ''\nlabels: ''\nassignees: ''\n\n---\n\n**Please open a Pull Request instead.**\n"}
{"repo_url": "https://github.com/vinta/awesome-python", "path": ".github/PULL_REQUEST_TEMPLATE.md", "size": 234, "license": "NOASSERTION", "content_sha": "fdacb788ae8a1c23622a9bacd8be91460ace8377", "findings": [], "content": "## What is this Python project?\n\nDescribe features.\n\n## What's the difference between this Python project and similar ones?\n\nEnumerate comparisons.\n\n--\n\nAnyone who agrees with this pull request could submit an *Approve* review to it.\n"}
{"repo_url": "https://github.com/vinta/awesome-python", "path": "CONTRIBUTING.md", "size": 843, "license": "NOASSERTION", "content_sha": "943f93cbae22e5babb89a4e8c954149411f71f81", "findings": [], "content": "# Contributing\n\nYour contributions are always welcome!\n\n## Guidelines\n\n* Add one link per Pull Request.\n    * Make sure the PR title is in the format of `Add project-name`.\n    * Write down the reason why the library is awesome.\n* Add the link: `* [project-name](http://example.com/) - A short description ends with a period.`\n    * Keep descriptions concise and **short**.\n* Add a section if needed.\n    * Add the section description.\n    * Add the section title to Table of Contents.\n* Search previous Pull Requests or Issues before making a new one, as yours may be a duplicate.\n* Don't mention `Python` in the description as it's implied.\n* Check your spelling and grammar.\n* Remove any trailing whitespace.\n\nJust a gentle reminder: **Try not to submit your own project. Instead, wait for someone finds it useful and submits it for you.**\n"}
{"repo_url": "https://github.com/vinta/awesome-python", "path": "README.md", "size": 78506, "license": "NOASSERTION", "content_sha": "5a7f5f89dd5a9f52f476a3ecbfedcde918c3d1fe", "findings": [], "content": "# Awesome Python [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n\nAn opinionated list of awesome Python frameworks, libraries, software and resources.\n\nInspired by [awesome-php](https://github.com/ziadoz/awesome-php).\n\n- [Awesome Python](#awesome-python)\n    - [Admin Panels](#admin-panels)\n    - [Algorithms and Design Patterns](#algorithms-and-design-patterns)\n    - [ASGI Servers](#asgi-servers)\n    - [Asynchronous Programming](#asynchronous-programming)\n    - [Audio](#audio)\n    - [Authentication](#authentication)\n    - [Build Tools](#build-tools)\n    - [Built-in Classes Enhancement](#built-in-classes-enhancement)\n    - [Caching](#caching)\n    - [ChatOps Tools](#chatops-tools)\n    - [CMS](#cms)\n    - [Code Analysis](#code-analysis)\n    - [Command-line Interface Development](#command-line-interface-development)\n    - [Command-line Tools](#command-line-tools)\n    - [Computer Vision](#computer-vision)\n    - [Configuration Files](#configuration-files)\n    - [Cryptography](#cryptography)\n    - [Data Analysis](#data-analysis)\n    - [Data Validation](#data-validation)\n    - [Data Visualization](#data-visualization)\n    - [Database Drivers](#database-drivers)\n    - [Database](#database)\n    - [Date and Time](#date-and-time)\n    - [Debugging Tools](#debugging-tools)\n    - [Deep Learning](#deep-learning)\n    - [DevOps Tools](#devops-tools)\n    - [Distributed Computing](#distributed-computing)\n    - [Distribution](#distribution)\n    - [Documentation](#documentation)\n    - [Downloader](#downloader)\n    - [Editor Plugins and IDEs](#editor-plugins-and-ides)\n    - [Email](#email)\n    - [Environment Management](#environment-management)\n    - [File Manipulation](#file-manipulation)\n    - [Functional Programming](#functional-programming)\n    - [Game Development](#game-development)\n    - [Geolocation](#geolocation)\n    - [GUI Development](#gui-development)\n    - [Hardware](#hardware)\n    - [HTML Manipulation](#html-manipulation)\n    - [HTTP Clients](#http-clients)\n    - [Image Processing](#image-processing)\n    - [Implementations](#implementations)\n    - [Interactive Interpreter](#interactive-interpreter)\n    - [Internationalization](#internationalization)\n    - [Job Scheduler](#job-scheduler)\n    - [Logging](#logging)\n    - [Machine Learning](#machine-learning)\n    - [Miscellaneous](#miscellaneous)\n    - [Natural Language Processing](#natural-language-processing)\n    - [Network Virtualization](#network-virtualization)\n    - [News Feed](#news-feed)\n    - [ORM](#orm)\n    - [Package Management](#package-management)\n    - [Package Repositories](#package-repositories)\n    - [Penetration testing](#penetration-testing)\n    - [Permissions](#permissions)\n    - [Processes](#processes)\n    - [Recommender Systems](#recommender-systems)\n    - [Refactoring](#refactoring)\n    - [RESTful API](#restful-api)\n    - [Robotics](#robotics)\n    - [RPC Servers](#rpc-servers)\n    - [Science](#science)\n    - [Search](#search)\n    - [Serialization](#serialization)\n    - [Serverless Frameworks](#serverless-frameworks)\n    - [Shell](#shell)\n    - [Specific Formats Processing](#specific-formats-processing)\n    - [Static Site Generator](#static-site-generator)\n    - [Tagging](#tagging)\n    - [Task Queues](#task-queues)\n    - [Template Engine](#template-engine)\n    - [Testing](#testing)\n    - [Text Processing](#text-processing)\n    - [Third-party APIs](#third-party-apis)\n    - [URL Manipulation](#url-manipulation)\n    - [Video](#video)\n    - [Web Asset Management](#web-asset-management)\n    - [Web Content Extracting](#web-content-extracting)\n    - [Web Crawling](#web-crawling)\n    - [Web Frameworks](#web-frameworks)\n    - [WebSocket](#websocket)\n    - [WSGI Servers](#wsgi-servers)\n- [Resources](#resources)\n    - [Newsletters](#newsletters)\n    - [Podcasts](#podcasts)\n- [Contributing](#contributing)\n\n---\n\n## Admin Panels\n\n*Libraries for administrative interfaces.*\n\n* [ajenti](https://github.com/ajenti/ajenti) - The admin panel your servers deserve.\n* [django-grappelli](https://github.com/sehmaschine/django-grappelli) - A jazzy skin for the Django Admin-Interface.\n* [flask-admin](https://github.com/flask-admin/flask-admin) - Simple and extensible administrative interface framework for Flask.\n* [flower](https://github.com/mher/flower) - Real-time monitor and web admin for Celery.\n* [jet-bridge](https://github.com/jet-admin/jet-bridge) - Admin panel framework for any application with nice UI (ex Jet Django).\n* [wooey](https://github.com/wooey/wooey) - A Django app which creates automatic web UIs for Python scripts.\n* [streamlit](https://github.com/streamlit/streamlit) - A framework which lets you build dashboards, generate reports, or create chat apps in minutes.\n\n## Algorithms and Design Patterns\n\n*Python implementation of data structures, algorithms and design patterns. Also see [awesome-algorithms](https://github.com/tayllan/awesome-algorithms).*\n\n* Algorithms\n    * [algorithms](https://github.com/keon/algorithms) - Minimal examples of data structures and algorithms.\n    * [python-ds](https://github.com/prabhupant/python-ds) - A collection of data structure and algorithms for coding interviews.\n    * [sortedcontainers](https://github.com/grantjenks/python-sortedcontainers) - Fast and pure-Python implementation of sorted collections.\n    * [thealgorithms](https://github.com/TheAlgorithms/Python) - All Algorithms implemented in Python.\n* Design Patterns\n    * [pypattyrn](https://github.com/tylerlaberge/PyPattyrn) - A simple yet effective library for implementing common design patterns.\n    * [python-patterns](https://github.com/faif/python-patterns) - A collection of design patterns in Python.\n    * [transitions](https://github.com/pytransitions/transitions) - A lightweight, object-oriented finite state machine implementation.\n\n## ASGI Servers\n\n*[ASGI](https://asgi.readthedocs.io/en/latest/)-compatible web servers.*\n\n* [daphne](https://github.com/django/daphne) - A HTTP, HTTP2 and WebSocket protocol server for ASGI and ASGI-HTTP.\n* [uvicorn](https://github.com/encode/uvicorn) - A lightning-fast ASGI server implementation, using uvloop and httptools.\n* [hypercorn](https://github.com/pgjones/hypercorn) - An ASGI and WSGI Server based on Hyper libraries and inspired by Gunicorn.\n\n## Asynchronous Programming\n\n*Libraries for asynchronous, concurrent and parallel execution. Also see [awesome-asyncio](https://github.com/timofurrer/awesome-asyncio).*\n\n* [asyncio](https://docs.python.org/3/library/asyncio.html) - (Python standard library) Asynchronous I/O, event loop, coroutines and tasks.\n    - [awesome-asyncio](https://github.com/timofurrer/awesome-asyncio)\n* [concurrent.futures](https://docs.python.org/3/library/concurrent.futures.html) - (Python standard library) A high-level interface for asynchronously executing callables.\n* [multiprocessing](https://docs.python.org/3/library/multiprocessing.html) - (Python standard library) Process-based parallelism.\n* [trio](https://github.com/python-trio/trio) - A friendly library for async concurrency and I/O.\n* [twisted](https://github.com/twisted/twisted) - An event-driven networking engine.\n* [uvloop](https://github.com/MagicStack/uvloop) - Ultra fast asyncio event loop.\n* [eventlet](https://github.com/eventlet/eventlet) - Asynchronous framework with WSGI support.\n* [gevent](https://github.com/gevent/gevent) - A coroutine-based Python networking library that uses [greenlet](https://github.com/python-greenlet/greenlet).\n\n## Audio\n\n*Libraries for manipulating audio and its metadata.*\n\n* Audio\n    * [audioread](https://github.com/beetbox/audioread) - Cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding.\n    * [audioFlux](https://github.com/libAudioFlux/audioFlux) - A library for audio and music analysis, feature extraction.\n    * [dejavu](https://github.com/worldveil/dejavu) - Audio fingerprinting and recognition.\n    * [kapre](https://github.com/keunwoochoi/kapre) - Keras Audio Preprocessors.\n    * [librosa](https://github.com/librosa/librosa) - Python library for audio and music analysis.\n    * [matchering](https://github.com/sergree/matchering) - A library for automated reference audio mastering.\n    * [mingus](http://bspaans.github.io/python-mingus/) - An advanced music theory and notation package with MIDI file and playback support.\n    * [pyaudioanalysis](https://github.com/tyiannak/pyAudioAnalysis) - Audio feature extraction, classification, segmentation and applications.\n    * [pydub](https://github.com/jiaaro/pydub) - Manipulate audio with a simple and easy high level interface.\n    * [timeside](https://github.com/Parisson/TimeSide) - Open web audio processing framework.\n* Metadata\n    * [beets](https://github.com/beetbox/beets) - A music library manager and [MusicBrainz](https://musicbrainz.org/) tagger.\n    * [eyed3](https://github.com/nicfit/eyeD3) - A tool for working with audio files, specifically MP3 files containing ID3 metadata.\n    * [mutagen](https://github.com/quodlibet/mutagen) - A Python module to handle audio metadata.\n    * [tinytag](https://github.com/devsnd/tinytag) - A library for reading music meta data of MP3, OGG, FLAC and Wave files.\n\n## Authentication\n\n*Libraries for implementing authentications schemes.*\n\n* OAuth\n    * [authlib](https://github.com/lepture/authlib) - JavaScript Object Signing and Encryption draft implementation.\n    * [django-allauth](https://github.com/pennersr/django-allauth) - Authentication app for Django that \"just works.\"\n    * [django-oauth-toolkit](https://github.com/jazzband/django-oauth-toolkit) - OAuth 2 goodies for Django.\n    * [oauthlib](https://github.com/oauthlib/oauthlib) - A generic and thorough implementation of the OAuth request-signing logic.\n* JWT\n    * [pyjwt](https://github.com/jpadilla/pyjwt) - JSON Web Token implementation in Python.\n    * [python-jose](https://github.com/mpdavis/python-jose/) - A JOSE implementation in Python.\n\n## Build Tools\n\n*Compile software from source code.*\n\n* [bitbake](https://github.com/openembedded/bitbake) - A make-like build tool for embedded Linux.\n* [buildout](https://github.com/buildout/buildout) - A build system for creating, assembling and deploying applications from multiple parts.\n* [platformio](https://github.com/platformio/platformio-core) - A console tool to build code with different development platforms.\n* [pybuilder](https://github.com/pybuilder/pybuilder) - A continuous build tool written in pure Python.\n* [scons](https://github.com/SCons/scons) - A software construction tool.\n\n## Built-in Classes Enhancement\n\n*Libraries for enhancing Python built-in classes.*\n\n* [attrs](https://github.com/python-attrs/attrs) - Replacement for `__init__`, `__eq__`, `__repr__`, etc. boilerplate in class definitions.\n* [bidict](https://github.com/jab/bidict) - Efficient, Pythonic bidirectional map data structures and related functionality..\n* [box](https://github.com/cdgriffith/Box) - Python dictionaries with advanced dot notation access.\n* [dataclasses](https://docs.python.org/3/library/dataclasses.html) - (Python standard library) Data classes.\n* [dotteddict](https://github.com/carlosescri/DottedDict) - A library that provides a method of accessing lists and dicts with a dotted path notation.\n\n## CMS\n\n*Content Management Systems.*\n\n* [feincms](https://github.com/feincms/feincms) - One of the most advanced Content Management Systems built on Django.\n* [indico](https://github.com/indico/indico) - A feature-rich event management system, made @ [CERN](https://en.wikipedia.org/wiki/CERN).\n* [wagtail](https://github.com/wagtail/wagtail) - A Django content management system.\n\n## Caching\n\n*Libraries for caching data.*\n\n* [beaker](https://github.com/bbangert/beaker) - A WSGI middleware for sessions and caching.\n* [django-cache-machine](https://github.com/django-cache-machine/django-cache-machine) - Automatic caching and invalidation for Django models.\n* [django-cacheops](https://github.com/Suor/django-cacheops) - A slick ORM cache with automatic granular event-driven invalidation.\n* [dogpile.cache](https://github.com/sqlalchemy/dogpile.cache) - dogpile.cache is a next generation replacement for Beaker made by the same authors.\n* [hermescache](https://pypi.org/project/HermesCache/) - Python caching library with tag-based invalidation and dogpile effect prevention.\n* [pylibmc](https://github.com/lericson/pylibmc) - A Python wrapper around the [libmemcached](https://libmemcached.org/libMemcached.html) interface.\n* [python-diskcache](https://github.com/grantjenks/python-diskcache) - SQLite and file backed cache backend with faster lookups than memcached and redis.\n\n## ChatOps Tools\n\n*Libraries for chatbot development.*\n\n* [errbot](https://github.com/errbotio/errbot/) - The easiest and most popular chatbot to implement ChatOps.\n\n## Code Analysis\n\n*Tools of static analysis, linters and code quality checkers. Also see [awesome-static-analysis](https://github.com/mre/awesome-static-analysis).*\n\n* Code Analysis\n    * [code2flow](https://github.com/scottrogowski/code2flow) - Turn your Python and JavaScript code into DOT flowcharts.\n    * [prospector](https://github.com/PyCQA/prospector) - A tool to analyse Python code.\n    * [vulture](https://github.com/jendrikseipp/vulture) - A tool for finding and analysing dead Python code.\n* Code Linters\n    * [flake8](https://github.com/PyCQA/flake8) - A wrapper around `pycodestyle`, `pyflakes` and McCabe.\n        * [awesome-flake8-extensions](https://github.com/DmytroLitvinov/awesome-flake8-extensions)\n    * [pylint](https://github.com/pylint-dev/pylint) - A fully customizable source code analyzer.\n* Code Formatters\n    * [black](https://github.com/psf/black) - The uncompromising Python code formatter.\n    * [isort](https://github.com/timothycrosley/isort) - A Python utility / library to sort imports.\n    * [yapf](https://github.com/google/yapf) - Yet another Python code formatter from Google.\n* Static Type Checkers, also see [awesome-python-typing](https://github.com/typeddjango/awesome-python-typing)\n    * [mypy](https://github.com/python/mypy) - Check variable types during compile time.\n    * [pyre-check](https://github.com/facebook/pyre-check) - Performant type checking.\n    * [typeshed](https://github.com/python/typeshed) - Collection of library stubs for Python, with static types.\n* Static Type Annotations Generators\n    * [monkeytype](https://github.com/Instagram/MonkeyType) - A system for Python that generates static type annotations by collecting runtime types.\n    * [pytype](https://github.com/google/pytype) - Pytype checks and infers types for Python code - without requiring type annotations.\n\n## Command-line Interface Development\n\n*Libraries for building command-line applications.*\n\n* Command-line Application Development\n    * [cement](https://github.com/datafolklabs/cement) - CLI Application Framework for Python.\n    * [click](https://github.com/pallets/click/) - A package for creating beautiful command line interfaces in a composable way.\n    * [cliff](https://github.com/openstack/cliff) - A framework for creating command-line programs with multi-level commands.\n    * [python-fire](https://github.com/google/python-fire) - A library for creating command line interfaces from absolutely any Python object.\n    * [python-prompt-toolkit](https://github.com/prompt-toolkit/python-prompt-toolkit) - A library for building powerful interactive command lines.\n* Terminal Rendering\n    * [alive-progress](https://github.com/rsalmei/alive-progress) - A new kind of Progress Bar, with real-time throughput, eta and very cool animations.\n    * [asciimatics](https://github.com/peterbrittain/asciimatics) - A package to create full-screen text UIs (from interactive forms to ASCII animations).\n    * [bashplotlib](https://github.com/glamp/bashplotlib) - Making basic plots in the terminal.\n    * [colorama](https://github.com/tartley/colorama) - Cross-platform colored terminal text.\n    * [rich](https://github.com/Textualize/rich) - Python library for rich text and beautiful formatting in the terminal. Also provides a great `RichHandler` log handler.\n    * [tqdm](https://github.com/tqdm/tqdm) - Fast, extensible progress bar for loops and CLI.\n\n## Command-line Tools\n\n*Useful CLI-based tools for productivity.*\n\n* Productivity Tools\n    * [copier](https://github.com/copier-org/copier) - A library and command-line utility for rendering projects templates.\n    * [cookiecutter](https://github.com/cookiecutter/cookiecutter) - A command-line utility that creates projects from cookiecutters (project templates).\n    * [doitlive](https://github.com/sloria/doitlive) - A tool for live presentations in the terminal.\n    * [howdoi](https://github.com/gleitz/howdoi) - Instant coding answers via the command line.\n    * [invoke](https://github.com/pyinvoke/invoke) - A tool for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks.\n    * [pathpicker](https://github.com/facebook/PathPicker) - Select files out of bash output.\n    * [thefuck](https://github.com/nvbn/thefuck) - Correcting your previous console command.\n    * [tmuxp](https://github.com/tmux-python/tmuxp) - A [tmux](https://github.com/tmux/tmux) session manager.\n    * [try](https://github.com/timofurrer/try) - A dead simple CLI to try out python packages - it's never been easier.\n* CLI Enhancements\n    * [httpie](https://github.com/httpie/cli) - A command line HTTP client, a user-friendly cURL replacement.\n    * [iredis](https://github.com/laixintao/iredis) - Redis CLI with autocompletion and syntax highlighting.\n    * [litecli](https://github.com/dbcli/litecli) - SQLite CLI with autocompletion and syntax highlighting.\n    * [mycli](https://github.com/dbcli/mycli) - MySQL CLI with autocompletion and syntax highlighting.\n    * [pgcli](https://github.com/dbcli/pgcli) - PostgreSQL CLI with autocompletion and syntax highlighting.\n\n## Computer Vision\n\n*Libraries for Computer Vision.*\n\n* [easyocr](https://github.com/JaidedAI/EasyOCR) - Ready-to-use OCR with 40+ languages supported.\n* [kornia](https://github.com/kornia/kornia/) - Open Source Differentiable Computer Vision Library for PyTorch.\n* [opencv](https://opencv.org/) - Open Source Computer Vision Library.\n* [pytesseract](https://github.com/madmaze/pytesseract) - A wrapper for [Google Tesseract OCR](https://github.com/tesseract-ocr).\n* [tesserocr](https://github.com/sirfz/tesserocr) - Another simple, Pillow-friendly, wrapper around the `tesseract-ocr` API for OCR.\n\n## Configuration Files\n\n*Libraries for storing and parsing configuration options.*\n\n* [configparser](https://docs.python.org/3/library/configparser.html) - (Python standard library) INI file parser.\n* [configobj](https://github.com/DiffSK/configobj) - INI file parser with validation.\n* [hydra](https://github.com/facebookresearch/hydra) - Hydra is a framework for elegantly configuring complex applications.\n* [python-decouple](https://github.com/HBNetwork/python-decouple) - Strict separation of settings from code.\n\n## Cryptography\n\n* [cryptography](https://github.com/pyca/cryptography) - A package designed to expose cryptographic primitives and recipes to Python developers.\n* [paramiko](https://github.com/paramiko/paramiko) - The leading native Python SSHv2 protocol library.\n* [pynacl](https://github.com/pyca/pynacl) - Python binding to the Networking and Cryptography (NaCl) library.\n\n## Data Analysis\n\n*Libraries for data analyzing.*\n\n* [pandas](http://pandas.pydata.org/) - A library providing high-performance, easy-to-use data structures and data analysis tools.\n* [aws-sdk-pandas](https://github.com/aws/aws-sdk-pandas) - Pandas on AWS.\n* [datasette](https://github.com/simonw/datasette) - An open source multi-tool for exploring and publishing data.\n* [optimus](https://github.com/hi-primus/optimus) - Agile Data Science Workflows made easy with PySpark.\n\n## Data Validation\n\n*Libraries for validating data. Used for forms in many cases.*\n\n* [cerberus](https://github.com/pyeve/cerberus) - A lightweight and extensible data validation library.\n* [colander](https://github.com/Pylons/colander) - Validating and deserializing data obtained via XML, JSON, an HTML form post.\n* [jsonschema](https://github.com/python-jsonschema/jsonschema) - An implementation of [JSON Schema](http://json-schema.org/) for Python.\n* [schema](https://github.com/keleshev/schema) - A library for validating Python data structures.\n* [schematics](https://github.com/schematics/schematics) - Data Structure Validation.\n* [voluptuous](https://github.com/alecthomas/voluptuous) - A Python data validation library.\n* [pydantic](https://github.com/pydantic/pydantic) - Data validation using Python type hints.\n\n## Data Visualization\n\n*Libraries for visualizing data. Also see [awesome-javascript](https://github.com/sorrycc/awesome-javascript#data-visualization).*\n\n* [altair](https://github.com/altair-viz/altair) - Declarative statistical visualization library for Python.\n* [bokeh](https://github.com/bokeh/bokeh) - Interactive Web Plotting for Python.\n* [bqplot](https://github.com/bloomberg/bqplot) - Interactive Plotting Library for the Jupyter Notebook.\n* [cartopy](https://github.com/SciTools/cartopy) - A cartographic python library with matplotlib support.\n* [diagrams](https://github.com/mingrammer/diagrams) - Diagram as Code.\n* [matplotlib](https://github.com/matplotlib/matplotlib) - A Python 2D plotting library.\n* [plotnine](https://github.com/has2k1/plotnine) - A grammar of graphics for Python based on ggplot2.\n* [pygal](https://github.com/Kozea/pygal) - A Python SVG Charts Creator.\n* [pygraphviz](https://github.com/pygraphviz/pygraphviz/) - Python interface to [Graphviz](http://www.graphviz.org/).\n* [pyqtgraph](https://github.com/pyqtgraph/pyqtgraph) - Interactive and realtime 2D/3D/Image plotting and science/engineering widgets.\n* [seaborn](https://github.com/mwaskom/seaborn) - Statistical data visualization using Matplotlib.\n* [vispy](https://github.com/vispy/vispy) - High-performance scientific visualization based on OpenGL.\n\n## Database\n\n*Databases implemented in Python.*\n\n* [pickleDB](https://github.com/patx/pickledb) - A simple and lightweight key-value store for Python.\n* [tinydb](https://github.com/msiemens/tinydb) - A tiny, document-oriented database.\n* [zodb](https://github.com/zopefoundation/ZODB) - A native object database for Python. A key-value and object graph database.\n\n## Database Drivers\n\n*Libraries for connecting and operating databases.*\n\n* MySQL - [awesome-mysql](http://shlomi-noach.github.io/awesome-mysql/)\n    * [mysqlclient](https://github.com/PyMySQL/mysqlclient) - MySQL connector with Python 3 support ([mysql-python](https://sourceforge.net/projects/mysql-python/) fork).\n    * [pymysql](https://github.com/PyMySQL/PyMySQL) - A pure Python MySQL driver compatible to mysql-python.\n* PostgreSQL - [awesome-postgres](https://github.com/dhamaniasad/awesome-postgres)\n    * [psycopg](https://github.com/psycopg/psycopg) - The most popular PostgreSQL adapter for Python.\n* SQlite - [awesome-sqlite](https://github.com/planetopendata/awesome-sqlite)\n    * [sqlite3](https://docs.python.org/3/library/sqlite3.html) - (Python standard library) SQlite interface compliant with DB-API 2.0.\n    * [sqlite-utils](https://github.com/simonw/sqlite-utils) - Python CLI utility and library for manipulating SQLite databases.\n* Other Relational Databases\n    * [pymssql](https://github.com/pymssql/pymssql) - A simple database interface to Microsoft SQL Server.\n    * [clickhouse-driver](https://github.com/mymarilyn/clickhouse-driver) - Python driver with native interface for ClickHouse.\n* NoSQL Databases\n    * [cassandra-driver](https://github.com/datastax/python-driver) - The Python Driver for Apache Cassandra.\n    * [happybase](https://github.com/python-happybase/happybase) - A developer-friendly library for Apache HBase.\n    * [kafka-python](https://github.com/dpkp/kafka-python) - The Python client for Apache Kafka.\n    * [pymongo](https://github.com/mongodb/mongo-python-driver) - The official Python client for MongoDB.\n    * [motor](https://github.com/mongodb/motor) - The async Python driver for MongoDB.\n    * [redis-py](https://github.com/redis/redis-py) - The Python client for Redis.\n\n## Date and Time\n\n*Libraries for working with dates and times.*\n\n* [arrow](https://github.com/arrow-py/arrow) - A Python library that offers a sensible and human-friendly approach to creating, manipulating, formatting and converting dates, times and timestamps.\n* [dateutil](https://github.com/dateutil/dateutil) - Extensions to the standard Python [datetime](https://docs.python.org/3/library/datetime.html) module.\n* [pendulum](https://github.com/sdispater/pendulum) - Python datetimes made easy.\n* [pytz](https://pypi.org/project/pytz/) - World timezone definitions, modern and historical. Brings the [tz database](https://en.wikipedia.org/wiki/Tz_database) into Python.\n\n## Debugging Tools\n\n*Libraries for debugging code.*\n\n* pdb-like Debugger\n    * [ipdb](https://github.com/gotcha/ipdb) - IPython-enabled [pdb](https://docs.python.org/3/library/pdb.html).\n    * [pudb](https://github.com/inducer/pudb) - A full-screen, console-based Python debugger.\n* Tracing\n    * [manhole](https://github.com/ionelmc/python-manhole) - Debugging UNIX socket connections and present the stacktraces for all threads and an interactive prompt.\n    * [python-hunter](https://github.com/ionelmc/python-hunter) - A flexible code tracing toolkit.\n* Profiler\n    * [py-spy](https://github.com/benfred/py-spy) - A sampling profiler for Python programs. Written in Rust.\n    * [vprof](https://github.com/nvdv/vprof) - Visual Python profiler.\n* Others\n    * [django-debug-toolbar](https://github.com/jazzband/django-debug-toolbar) - Display various debug information for Django.\n    * [flask-debugtoolbar](https://github.com/pallets-eco/flask-debugtoolbar) - A port of the django-debug-toolbar to flask.\n    * [icecream](https://github.com/gruns/icecream) - Inspect variables, expressions, and program execution with a single, simple function call.\n    * [pyelftools](https://github.com/eliben/pyelftools) - Parsing and analyzing ELF files and DWARF debugging information.\n\n## Deep Learning\n\n*Frameworks for Neural Networks and Deep Learning. Also see [awesome-deep-learning](https://github.com/ChristosChristofidis/awesome-deep-learning).*\n\n* [keras](https://github.com/keras-team/keras) - A high-level neural networks library and capable of running on top of either TensorFlow or Theano.\n* [pytorch](https://github.com/pytorch/pytorch) - Tensors and Dynamic neural networks in Python with strong GPU acceleration.\n* [pytorch-lightning](https://github.com/Lightning-AI/pytorch-lightning) - Deep learning framework to train, deploy, and ship AI products Lightning fast.\n* [stable-baselines3](https://github.com/DLR-RM/stable-baselines3) - PyTorch implementations of Stable Baselines (deep) reinforcement learning algorithms.\n* [tensorflow](https://github.com/tensorflow/tensorflow) - The most popular Deep Learning framework created by Google.\n* [theano](https://github.com/Theano/Theano) - A library for fast numerical computation.\n\n## DevOps Tools\n\n*Software and libraries for DevOps.*\n\n* Configuration Management\n    * [ansible](https://github.com/ansible/ansible) - A radically simple IT automation platform.\n    * [cloudinit](https://github.com/canonical/cloud-init) - A multi-distribution package that handles early initialization of a cloud instance.\n    * [openstack](https://www.openstack.org/) - Open source software for building private and public clouds.\n    * [pyinfra](https://github.com/pyinfra-dev/pyinfra) - A versatile CLI tools and python libraries to automate infrastructure.\n    * [saltstack](https://github.com/saltstack/salt) - Infrastructure automation and management system.\n* SSH-style Deployment\n    * [cuisine](https://github.com/sebastien/cuisine) - Chef-like functionality for Fabric.\n    * [fabric](https://github.com/fabric/fabric) - A simple, Pythonic tool for remote execution and deployment.\n* Process Management\n    * [supervisor](https://github.com/Supervisor/supervisor) - Supervisor process control system for UNIX.\n* Monitoring\n    * [psutil](https://github.com/giampaolo/psutil) - A cross-platform process and system utilities module.\n* Backup\n    * [borg](https://github.com/borgbackup/borg) - A deduplicating archiver with compression and encryption.\n\n## Distributed Computing\n\n*Frameworks and libraries for Distributed Computing.*\n\n* Batch Processing\n    * [dask](https://github.com/dask/dask) - A flexible parallel computing library for analytic computing.\n    * [luigi](https://github.com/spotify/luigi) - A module that helps you build complex pipelines of batch jobs.\n    * [PySpark](https://github.com/apache/spark) - [Apache Spark](https://spark.apache.org/) Python API.\n    * [Ray](https://github.com/ray-project/ray/) - A system for parallel and distributed Python that unifies the machine learning ecosystem.\n* Stream Processing\n    * [faust](https://github.com/robinhood/faust) - A stream processing library, porting the ideas from [Kafka Streams](https://kafka.apache.org/documentation/streams/) to Python.\n    * [streamparse](https://github.com/Parsely/streamparse) - Run Python code against real-time streams of data via [Apache Storm](http://storm.apache.org/).\n\n## Distribution\n\n*Libraries to create packaged executables for release distribution.*\n\n* [py2app](https://github.com/ronaldoussoren/py2app) - Freezes Python scripts (Mac OS X).\n* [py2exe](https://github.com/py2exe/py2exe) - Freezes Python scripts (Windows).\n* [pyarmor](https://github.com/dashingsoft/pyarmor) - A tool used to obfuscate python scripts, bind obfuscated scripts to fixed machine or expire obfuscated scripts.\n* [pyinstaller](https://github.com/pyinstaller/pyinstaller) - Converts Python programs into stand-alone executables (cross-platform).\n* [shiv](https://github.com/linkedin/shiv) - A command line utility for building fully self-contained zipapps (PEP 441), but with all their dependencies included.\n\n## Documentation\n\n*Libraries for generating project documentation.*\n\n* [sphinx](https://github.com/sphinx-doc/sphinx/) - Python Documentation generator.\n    * [awesome-sphinxdoc](https://github.com/yoloseem/awesome-sphinxdoc)\n* [pdoc](https://github.com/mitmproxy/pdoc) - Epydoc replacement to auto generate API documentation for Python libraries.\n\n## Downloader\n\n*Libraries for downloading.*\n\n* [akshare](https://github.com/jindaxiang/akshare) - A financial data interface library, built for human beings!\n* [s3cmd](https://github.com/s3tools/s3cmd) - A command line tool for managing Amazon S3 and CloudFront.\n* [youtube-dl](https://github.com/ytdl-org/youtube-dl/) - A command-line program to download videos from YouTube and other video sites.\n\n## Editor Plugins and IDEs\n\n* Emacs\n    * [elpy](https://github.com/jorgenschaefer/elpy) - Emacs Python Development Environment.\n* Vim\n    * [jedi-vim](https://github.com/davidhalter/jedi-vim) - Vim bindings for the Jedi auto-completion library for Python.\n    * [python-mode](https://github.com/python-mode/python-mode) - An all in one plugin for turning Vim into a Python IDE.\n    * [YouCompleteMe](https://github.com/Valloric/YouCompleteMe) - Includes [Jedi](https://github.com/davidhalter/jedi)-based completion engine for Python.\n* Visual Studio\n    * [PTVS](https://github.com/Microsoft/PTVS) - Python Tools for Visual Studio.\n* Visual Studio Code\n    * [Python](https://marketplace.visualstudio.com/items?itemName=ms-python.python) - The official VSCode extension with rich support for Python.\n* IDE\n    * [PyCharm](https://www.jetbrains.com/pycharm/) - Commercial Python IDE by JetBrains. Has free community edition available.\n    * [spyder](https://github.com/spyder-ide/spyder) - Open Source Python IDE.\n\n## Email\n\n*Libraries for sending and parsing email.*\n\n* Mail Servers\n    * [modoboa](https://github.com/modoboa/modoboa) - A mail hosting and management platform including a modern Web UI.\n    * [salmon](https://github.com/moggers87/salmon) - A Python Mail Server.\n* Clients\n    * [imbox](https://github.com/martinrusev/imbox) - Python IMAP for Humans.\n    * [yagmail](https://github.com/kootenpv/yagmail) - Yet another Gmail/SMTP client.\n* Others\n    * [flanker](https://github.com/mailgun/flanker) - An email address and Mime parsing library.\n    * [mailer](https://github.com/marrow/mailer) - High-performance extensible mail delivery framework.\n\n## Environment Management\n\n*Libraries for Python version and virtual environment management.*\n\n* [pyenv](https://github.com/pyenv/pyenv) - Simple Python version management.\n* [virtualenv](https://github.com/pypa/virtualenv) - A tool to create isolated Python environments.\n\n## File Manipulation\n\n*Libraries for file manipulation.*\n\n* [mimetypes](https://docs.python.org/3/library/mimetypes.html) - (Python standard library) Map filenames to MIME types.\n* [pathlib](https://docs.python.org/3/library/pathlib.html) - (Python standard library) An cross-platform, object-oriented path library.\n* [path.py](https://github.com/jaraco/path.py) - A module wrapper for [os.path](https://docs.python.org/3/library/os.path.html).\n* [python-magic](https://github.com/ahupp/python-magic) - A Python interface to the libmagic file type identification library.\n* [watchdog](https://github.com/gorakhargosh/watchdog) - API and shell utilities to monitor file system events.\n\n## Functional Programming\n\n*Functional Programming with Python.*\n\n* [coconut](https://github.com/evhub/coconut) - A variant of Python built for simple, elegant, Pythonic functional programming.\n* [funcy](https://github.com/Suor/funcy) - A fancy and practical functional tools.\n* [more-itertools](https://github.com/erikrose/more-itertools) - More routines for operating on iterables, beyond `itertools`.\n* [returns](https://github.com/dry-python/returns) - A set of type-safe monads, transformers, and composition utilities.\n* [cytoolz](https://github.com/pytoolz/cytoolz/) - Cython implementation of `Toolz`: High performance functional utilities.\n* [toolz](https://github.com/pytoolz/toolz) - A collection of functional utilities for iterators, functions, and dictionaries.\n\n## GUI Development\n\n*Libraries for working with graphical user interface applications.*\n\n* [curses](https://docs.python.org/3/library/curses.html) - Built-in wrapper for [ncurses](http://www.gnu.org/software/ncurses/) used to create terminal GUI applications.\n* [Eel](https://github.com/ChrisKnott/Eel) - A library for making simple Electron-like offline HTML/JS GUI apps.\n* [enaml](https://github.com/nucleic/enaml) - Creating beautiful user-interfaces with Declarative Syntax like QML.\n* [Flexx](https://github.com/zoofIO/flexx) - Flexx is a pure Python toolkit for creating GUI's, that uses web technology for its rendering.\n* [Gooey](https://github.com/chriskiehl/Gooey) - Turn command line programs into a full GUI application with one line.\n* [kivy](https://kivy.org/) - A library for creating NUI applications, running on Windows, Linux, Mac OS X, Android and iOS.\n* [pyglet](https://github.com/pyglet/pyglet) - A cross-platform windowing and multimedia library for Python.\n* [PyGObject](https://pygobject.readthedocs.io/) - Python Bindings for GLib/GObject/GIO/GTK+ (GTK+3).\n* [PyQt](https://doc.qt.io/qtforpython/) - Python bindings for the [Qt](https://www.qt.io/) cross-platform application and UI framework.\n* [PySimpleGUI](https://github.com/PySimpleGUI/PySimpleGUI) - Wrapper for tkinter, Qt, WxPython and Remi.\n* [pywebview](https://github.com/r0x0r/pywebview/) - A lightweight cross-platform native wrapper around a webview component.\n* [Tkinter](https://wiki.python.org/moin/TkInter) - Tkinter is Python's de-facto standard GUI package.\n* [Toga](https://github.com/pybee/toga) - A Python native, OS native GUI toolkit.\n* [urwid](http://urwid.org/) - A library for creating terminal GUI applications with strong support for widgets, events, rich colors, etc.\n* [wxPython](https://wxpython.org/) - A blending of the wxWidgets C++ class library with the Python.\n* [DearPyGui](https://github.com/RaylockLLC/DearPyGui/) - A Simple GPU accelerated Python GUI framework\n\n## GraphQL\n\n*Libraries for working with GraphQL.*\n\n* [graphene](https://github.com/graphql-python/graphene/) - GraphQL framework for Python.\n\n## Game Development\n\n*Awesome game development libraries.*\n\n* [Arcade](https://api.arcade.academy/en/latest/) - Arcade is a modern Python framework for crafting games with compelling graphics and sound.\n* [Cocos2d](https://www.cocos.com/en/cocos2d-x) - cocos2d is a framework for building 2D games, demos, and other graphical/interactive applications.\n* [Harfang3D](http://www.harfang3d.com) - Python framework for 3D, VR and game development.\n* [Panda3D](https://www.panda3d.org/) - 3D game engine developed by Disney.\n* [Pygame](http://www.pygame.org/news.html) - Pygame is a set of Python modules designed for writing games.\n* [PyOgre](http://www.ogre3d.org/tikiwiki/PyOgre) - Python bindings for the Ogre 3D render engine, can be used for games, simulations, anything 3D.\n* [PyOpenGL](http://pyopengl.sourceforge.net/) - Python ctypes bindings for OpenGL and it's related APIs.\n* [PySDL2](https://pysdl2.readthedocs.io) - A ctypes based wrapper for the SDL2 library.\n* [RenPy](https://www.renpy.org/) - A Visual Novel engine.\n\n## Geolocation\n\n*Libraries for geocoding addresses and working with latitudes and longitudes.*\n\n* [django-countries](https://github.com/SmileyChris/django-countries) - A Django app that provides a country field for models and forms.\n* [geodjango](https://docs.djangoproject.com/en/dev/ref/contrib/gis/) - A world-class geographic web framework.\n* [geojson](https://github.com/jazzband/geojson) - Python bindings and utilities for GeoJSON.\n* [geopy](https://github.com/geopy/geopy) - Python Geocoding Toolbox.\n\n## HTML Manipulation\n\n*Libraries for working with HTML and XML.*\n\n* [beautifulsoup](https://www.crummy.com/software/BeautifulSoup/bs4/doc/) - Providing Pythonic idioms for iterating, searching, and modifying HTML or XML.\n* [bleach](https://github.com/mozilla/bleach) - A whitelist-based HTML sanitization and text linkification library.\n* [cssutils](https://pypi.org/project/cssutils/) - A CSS library for Python.\n* [html5lib](https://github.com/html5lib/html5lib-python) - A standards-compliant library for parsing and serializing HTML documents and fragments.\n* [lxml](http://lxml.de/) - A very fast, easy-to-use and versatile library for handling HTML and XML.\n* [markupsafe](https://github.com/pallets/markupsafe) - Implements a XML/HTML/XHTML Markup safe string for Python.\n* [pyquery](https://github.com/gawel/pyquery) - A jQuery-like library for parsing HTML.\n* [untangle](https://github.com/stchris/untangle) - Converts XML documents to Python objects for easy access.\n* [WeasyPrint](http://weasyprint.org) - A visual rendering engine for HTML and CSS that can export to PDF.\n* [xmldataset](https://xmldataset.readthedocs.io/en/latest/) - Simple XML Parsing.\n* [xmltodict](https://github.com/martinblech/xmltodict) - Working with XML feel like you are working with JSON.\n\n## HTTP Clients\n\n*Libraries for working with HTTP.*\n\n* [httpx](https://github.com/encode/httpx) - A next generation HTTP client for Python.\n* [requests](https://github.com/psf/requests) - HTTP Requests for Humans.\n* [treq](https://github.com/twisted/treq) - Python requests like API built on top of Twisted's HTTP client.\n* [urllib3](https://github.com/urllib3/urllib3) - A HTTP library with thread-safe connection pooling, file post support, sanity friendly.\n\n## Hardware\n\n*Libraries for programming with hardware.*\n\n* [keyboard](https://github.com/boppreh/keyboard) - Hook and simulate global keyboard events on Windows and Linux.\n* [mouse](https://github.com/boppreh/mouse) - Hook and simulate global mouse events on Windows and Linux.\n* [pynput](https://github.com/moses-palmer/pynput) - A library to control and monitor input devices.\n* [scapy](https://github.com/secdev/scapy) - A brilliant packet manipulation library.\n\n## Image Processing\n\n*Libraries for manipulating images.*\n\n* [pillow](https://github.com/python-pillow/Pillow) - Pillow is the friendly [PIL](http://www.pythonware.com/products/pil/) fork.\n* [python-barcode](https://github.com/WhyNotHugo/python-barcode) - Create barcodes in Python with no extra dependencies.\n* [pymatting](http://github.com/pymatting/pymatting) - A library for alpha matting.\n* [python-qrcode](https://github.com/lincolnloop/python-qrcode) - A pure Python QR Code generator.\n* [pywal](https://github.com/dylanaraps/pywal) - A tool that generates color schemes from images.\n* [pyvips](https://github.com/libvips/pyvips) - A fast image processing library with low memory needs.\n* [quads](https://github.com/fogleman/Quads) - Computer art based on quadtrees.\n* [scikit-image](http://scikit-image.org/) - A Python library for (scientific) image processing.\n* [thumbor](https://github.com/thumbor/thumbor) - A smart imaging service. It enables on-demand crop, re-sizing and flipping of images.\n* [wand](https://github.com/emcconville/wand) - Python bindings for [MagickWand](http://www.imagemagick.org/script/magick-wand.php), C API for ImageMagick.\n\n## Implementations\n\n*Implementations of Python.*\n\n* [cpython](https://github.com/python/cpython) - **Default, most widely used implementation of the Python programming language written in C.**\n* [cython](https://github.com/cython/cython) - Optimizing Static Compiler for Python.\n* [clpython](https://github.com/metawilm/cl-python) - Implementation of the Python programming language written in Common Lisp.\n* [ironpython](https://github.com/IronLanguages/ironpython3) - Implementation of the Python programming language written in C#.\n* [micropython](https://github.com/micropython/micropython) - A lean and efficient Python programming language implementation.\n* [numba](https://github.com/numba/numba) - Python JIT compiler to LLVM aimed at scientific Python.\n* [peachpy](https://github.com/Maratyszcza/PeachPy) - x86-64 assembler embedded in Python.\n* [pypy](https://foss.heptapod.net/pypy/pypy) - A very fast and compliant implementation of the Python language.\n* [pyston](https://github.com/pyston/pyston/) - A Python implementation using JIT techniques.\n\n## Interactive Interpreter\n\n*Interactive Python interpreters (REPL).*\n\n* [bpython](https://github.com/bpython/bpython) - A fancy interface to the Python interpreter.\n* [Jupyter Notebook (IPython)](https://jupyter.org) - A rich toolkit to help you make the most out of using Python interactively.\n    * [awesome-jupyter](https://github.com/markusschanta/awesome-jupyter)\n* [ptpython](https://github.com/jonathanslenders/ptpython) - Advanced Python REPL built on top of the [python-prompt-toolkit](https://github.com/jonathanslenders/python-prompt-toolkit).\n\n## Internationalization\n\n*Libraries for working with i18n.*\n\n* [Babel](http://babel.pocoo.org/en/latest/) - An internationalization library for Python.\n* [PyICU](https://github.com/ovalhub/pyicu) - A wrapper of International Components for Unicode C++ library ([ICU](http://site.icu-project.org/)).\n\n## Job Scheduler\n\n*Libraries for scheduling jobs.*\n\n* [Airflow](https://airflow.apache.org/) - Airflow is a platform to programmatically author, schedule and monitor workflows.\n* [APScheduler](http://apscheduler.readthedocs.io/en/latest/) - A light but powerful in-process task scheduler that lets you schedule functions.\n* [django-schedule](https://github.com/thauber/django-schedule) - A calendaring app for Django.\n* [doit](http://pydoit.org/) - A task runner and build tool.\n* [gunnery](https://github.com/gunnery/gunnery) - Multipurpose task execution tool for distributed systems with web-based interface.\n* [Joblib](https://joblib.readthedocs.io/) - A set of tools to provide lightweight pipelining in Python.\n* [Plan](https://github.com/fengsp/plan) - Writing crontab file in Python like a charm.\n* [Prefect](https://github.com/PrefectHQ/prefect) - A modern workflow orchestration framework that makes it easy to build, schedule and monitor robust data pipelines.\n* [schedule](https://github.com/dbader/schedule) - Python job scheduling for humans.\n* [Spiff](https://github.com/knipknap/SpiffWorkflow) - A powerful workflow engine implemented in pure Python.\n* [TaskFlow](https://docs.openstack.org/developer/taskflow/) - A Python library that helps to make task execution easy, consistent and reliable.\n\n## Logging\n\n*Libraries for generating and working with logs.*\n\n* [logbook](http://logbook.readthedocs.io/en/stable/) - Logging replacement for Python.\n* [logging](https://docs.python.org/3/library/logging.html) - (Python standard library) Logging facility for Python.\n* [loguru](https://github.com/Delgan/loguru) - Library which aims to bring enjoyable logging in Python.\n* [sentry-python](https://github.com/getsentry/sentry-python) - Sentry SDK for Python.\n* [structlog](https://www.structlog.org/en/stable/) - Structured logging made easy.\n\n## Machine Learning\n\n*Libraries for Machine Learning. Also see [awesome-machine-learning](https://github.com/josephmisiti/awesome-machine-learning#python).*\n\n* [gym](https://github.com/openai/gym) - A toolkit for developing and comparing reinforcement learning algorithms.\n* [H2O](https://github.com/h2oai/h2o-3) - Open Source Fast Scalable Machine Learning Platform.\n* [Metrics](https://github.com/benhamner/Metrics) - Machine learning evaluation metrics.\n* [NuPIC](https://github.com/numenta/nupic) - Numenta Platform for Intelligent Computing.\n* [scikit-learn](http://scikit-learn.org/) - The most popular Python library for Machine Learning.\n* [Spark ML](http://spark.apache.org/docs/latest/ml-guide.html) - [Apache Spark](http://spark.apache.org/)'s scalable Machine Learning library.\n* [vowpal_porpoise](https://github.com/josephreisinger/vowpal_porpoise) - A lightweight Python wrapper for [Vowpal Wabbit](https://github.com/JohnLangford/vowpal_wabbit/).\n* [xgboost](https://github.com/dmlc/xgboost) - A scalable, portable, and distributed gradient boosting library.\n* [MindsDB](https://github.com/mindsdb/mindsdb) - MindsDB is an open source AI layer for existing databases that allows you to effortlessly develop, train and deploy state-of-the-art machine learning models using standard queries.\n\n## Microsoft Windows\n\n*Python programming on Microsoft Windows.*\n\n* [Python(x,y)](http://python-xy.github.io/) - Scientific-applications-oriented Python Distribution based on Qt and Spyder.\n* [pythonlibs](http://www.lfd.uci.edu/~gohlke/pythonlibs/) - Unofficial Windows binaries for Python extension packages.\n* [PythonNet](https://github.com/pythonnet/pythonnet) - Python Integration with the .NET Common Language Runtime (CLR).\n* [PyWin32](https://github.com/mhammond/pywin32) - Python Extensions for Windows.\n* [WinPython](https://winpython.github.io/) - Portable development environment for Windows 7/8.\n\n## Miscellaneous\n\n*Useful libraries or tools that don't fit in the categories above.*\n\n* [blinker](https://github.com/jek/blinker) - A fast Python in-process signal/event dispatching system.\n* [boltons](https://github.com/mahmoud/boltons) - A set of pure-Python utilities.\n* [itsdangerous](https://github.com/pallets/itsdangerous) - Various helpers to pass trusted data to untrusted environments.\n* [magenta](https://github.com/magenta/magenta) - A tool to generate music and art using artificial intelligence.\n* [pluginbase](https://github.com/mitsuhiko/pluginbase) - A simple but flexible plugin system for Python.\n* [tryton](http://www.tryton.org/) - A general purpose business framework.\n\n## Natural Language Processing\n\n*Libraries for working with human languages.*\n\n- General\n    * [gensim](https://github.com/RaRe-Technologies/gensim) - Topic Modeling for Humans.\n    * [langid.py](https://github.com/saffsd/langid.py) - Stand-alone language identification system.\n    * [nltk](http://www.nltk.org/) - A leading platform for building Python programs to work with human language data.\n    * [pattern](https://github.com/clips/pattern) - A web mining module.\n    * [polyglot](https://github.com/aboSamoor/polyglot) - Natural language pipeline supporting hundreds of languages.\n    * [pytext](https://github.com/facebookresearch/pytext) - A natural language modeling framework based on PyTorch.\n    * [PyTorch-NLP](https://github.com/PetrochukM/PyTorch-NLP) - A toolkit enabling rapid deep learning NLP prototyping for research.\n    * [spacy](https://spacy.io/) - A library for industrial-strength natural language processing in Python and Cython.\n    * [Stanza](https://github.com/stanfordnlp/stanza) - The Stanford NLP Group's official Python library, supporting 60+ languages.\n- Chinese\n    * [funNLP](https://github.com/fighting41love/funNLP) - A collection of tools and datasets for Chinese NLP.\n    * [jieba](https://github.com/fxsjy/jieba) - The most popular Chinese text segmentation library.\n    * [pkuseg-python](https://github.com/lancopku/pkuseg-python) - A toolkit for Chinese word segmentation in various domains.\n    * [snownlp](https://github.com/isnowfy/snownlp) - A library for processing Chinese text.\n\n## Network Virtualization\n\n*Tools and libraries for Virtual Networking and SDN (Software Defined Networking).*\n\n* [mininet](https://github.com/mininet/mininet) - A popular network emulator and API written in Python.\n* [napalm](https://github.com/napalm-automation/napalm) - Cross-vendor API to manipulate network devices.\n* [pox](https://github.com/noxrepo/pox) - A Python-based SDN control applications, such as OpenFlow SDN controllers.\n\n## News Feed\n\n*Libraries for building user's activities.*\n\n* [django-activity-stream](https://github.com/justquick/django-activity-stream) - Generating generic activity streams from the actions on your site.\n* [Stream Framework](https://github.com/tschellenbach/Stream-Framework) - Building news feed and notification systems using Cassandra and Redis.\n\n## ORM\n\n*Libraries that implement Object-Relational Mapping or data mapping techniques.*\n\n* Relational Databases\n    * [Django Models](https://docs.djangoproject.com/en/dev/topics/db/models/) - The Django ORM.\n    * [SQLAlchemy](https://www.sqlalchemy.org/) - The Python SQL Toolkit and Object Relational Mapper.\n        * [awesome-sqlalchemy](https://github.com/dahlia/awesome-sqlalchemy)\n    * [dataset](https://github.com/pudo/dataset) - Store Python dicts in a database - works with SQLite, MySQL, and PostgreSQL.\n    * [orator](https://github.com/sdispater/orator) -  The Orator ORM provides a simple yet beautiful ActiveRecord implementation.\n    * [orm](https://github.com/encode/orm) - An async ORM.\n    * [peewee](https://github.com/coleifer/peewee) - A small, expressive ORM.\n    * [pony](https://github.com/ponyorm/pony/) - ORM that provides a generator-oriented interface to SQL.\n    * [pydal](https://github.com/web2py/pydal/) - A pure Python Database Abstraction Layer.\n* NoSQL Databases\n    * [hot-redis](https://github.com/stephenmcd/hot-redis) - Rich Python data types for Redis.\n    * [mongoengine](https://github.com/MongoEngine/mongoengine) - A Python Object-Document-Mapper for working with MongoDB.\n    * [PynamoDB](https://github.com/pynamodb/PynamoDB) - A Pythonic interface for [Amazon DynamoDB](https://aws.amazon.com/dynamodb/).\n    * [redisco](https://github.com/kiddouk/redisco) - A Python Library for Simple Models and Containers Persisted in Redis.\n\n## Package Management\n\n*Libraries for package and dependency management.*\n\n* [pip](https://pip.pypa.io/en/stable/) - The package installer for Python.\n    * [pip-tools](https://github.com/jazzband/pip-tools) - A set of tools to keep your pinned Python dependencies fresh.\n    * [PyPI](https://pypi.org/)\n* [conda](https://github.com/conda/conda/) - Cross-platform, Python-agnostic binary package manager.\n* [poetry](https://github.com/sdispater/poetry) - Python dependency management and packaging made easy.\n\n## Package Repositories\n\n*Local PyPI repository server and proxies.*\n\n* [bandersnatch](https://github.com/pypa/bandersnatch/) - PyPI mirroring tool provided by Python Packaging Authority (PyPA).\n* [devpi](https://github.com/devpi/devpi) - PyPI server and packaging/testing/release tool.\n* [localshop](https://github.com/jazzband/localshop) - Local PyPI server (custom packages and auto-mirroring of pypi).\n* [warehouse](https://github.com/pypa/warehouse) - Next generation Python Package Repository (PyPI).\n\n## Penetration Testing\n\n*Frameworks and tools for penetration testing.*\n\n* [fsociety](https://github.com/Manisso/fsociety) - A Penetration testing framework.\n* [setoolkit](https://github.com/trustedsec/social-engineer-toolkit) - A toolkit for social engineering.\n* [sqlmap](https://github.com/sqlmapproject/sqlmap) - Automatic SQL injection and database takeover tool.\n\n## Permissions\n\n*Libraries that allow or deny users access to data or functionality.*\n\n* [django-guardian](https://github.com/django-guardian/django-guardian) - Implementation of per object permissions for Django 1.2+\n* [django-rules](https://github.com/dfunckt/django-rules) - A tiny but powerful app providing object-level permissions to Django, without requiring a database.\n\n## Processes\n\n*Libraries for starting and communicating with OS processes.*\n\n* [delegator.py](https://github.com/amitt001/delegator.py) - [Subprocesses](https://docs.python.org/3/library/subprocess.html) for Humans 2.0.\n* [sarge](https://sarge.readthedocs.io/en/latest/) - Yet another wrapper for subprocess.\n* [sh](https://github.com/amoffat/sh) - A full-fledged subprocess replacement for Python.\n\n## Recommender Systems\n\n*Libraries for building recommender systems.*\n\n* [annoy](https://github.com/spotify/annoy) - Approximate Nearest Neighbors in C++/Python optimized for memory usage.\n* [fastFM](https://github.com/ibayer/fastFM) - A library for Factorization Machines.\n* [implicit](https://github.com/benfred/implicit) - A fast Python implementation of collaborative filtering for implicit datasets.\n* [libffm](https://github.com/guestwalk/libffm) - A library for Field-aware Factorization Machine (FFM).\n* [lightfm](https://github.com/lyst/lightfm) - A Python implementation of a number of popular recommendation algorithms.\n* [spotlight](https://github.com/maciejkula/spotlight) - Deep recommender models using PyTorch.\n* [Surprise](https://github.com/NicolasHug/Surprise) - A scikit for building and analyzing recommender systems.\n* [tensorrec](https://github.com/jfkirk/tensorrec) - A Recommendation Engine Framework in TensorFlow.\n\n## Refactoring\n\n*Refactoring tools and libraries for Python*\n\n * [Bicycle Repair Man](http://bicyclerepair.sourceforge.net/) - Bicycle Repair Man, a refactoring tool for Python.\n * [Bowler](https://pybowler.io/) - Safe code refactoring for modern Python.\n * [Rope](https://github.com/python-rope/rope) -  Rope is a python refactoring library.\n\n## RESTful API\n\n*Libraries for building RESTful APIs.*\n\n* Django\n    * [django-rest-framework](https://github.com/encode/django-rest-framework) - A powerful and flexible toolkit to build web APIs.\n    * [django-tastypie](https://github.com/django-tastypie/django-tastypie) - Creating delicious APIs for Django apps.\n* Flask\n    * [eve](https://github.com/pyeve/eve) - REST API framework powered by Flask, MongoDB and good intentions.\n    * [flask-api](https://github.com/flask-api/flask-api) - Browsable Web APIs for Flask.\n    * [flask-restful](https://github.com/flask-restful/flask-restful) - Quickly building REST APIs for Flask.\n* Pyramid\n    * [cornice](https://github.com/Cornices/cornice) - A RESTful framework for Pyramid.\n* Framework agnostic\n    * [falcon](https://github.com/falconry/falcon) - A high-performance framework for building cloud APIs and web app backends.\n    * [fastapi](https://github.com/tiangolo/fastapi) - A modern, fast, web framework for building APIs with Python 3.6+ based on standard Python type hints.\n    * [hug](https://github.com/hugapi/hug) - A Python 3 framework for cleanly exposing APIs.\n    * [sandman2](https://github.com/jeffknupp/sandman2) - Automated REST APIs for existing database-driven systems.\n    * [sanic](https://github.com/sanic-org/sanic) - A Python 3.6+ web server and web framework that's written to go fast.\n\n## Robotics\n\n*Libraries for robotics.*\n\n* [PythonRobotics](https://github.com/AtsushiSakai/PythonRobotics) - This is a compilation of various robotics algorithms with visualizations.\n* [rospy](http://wiki.ros.org/rospy) - This is a library for ROS (Robot Operating System).\n\n## RPC Servers\n\n*RPC-compatible servers.*\n\n* [RPyC](https://github.com/tomerfiliba/rpyc) (Remote Python Call) - A transparent and symmetric RPC library for Python\n* [zeroRPC](https://github.com/0rpc/zerorpc-python) - zerorpc is a flexible RPC implementation based on [ZeroMQ](http://zeromq.org/) and [MessagePack](http://msgpack.org/).\n\n## Science\n\n*Libraries for scientific computing. Also see [Python-for-Scientists](https://github.com/TomNicholas/Python-for-Scientists).*\n\n* [astropy](http://www.astropy.org/) - A community Python library for Astronomy.\n* [bcbio-nextgen](https://github.com/chapmanb/bcbio-nextgen) - Providing best-practice pipelines for fully automated high throughput sequencing analysis.\n* [bccb](https://github.com/chapmanb/bcbb) - Collection of useful code related to biological analysis.\n* [Biopython](http://biopython.org/wiki/Main_Page) - Biopython is a set of freely available tools for biological computation.\n* [cclib](http://cclib.github.io/) - A library for parsing and interpreting the results of computational chemistry packages.\n* [Colour](http://colour-science.org/) - Implementing a comprehensive number of colour theory transformations and algorithms.\n* [Karate Club](https://github.com/benedekrozemberczki/karateclub) - Unsupervised machine learning toolbox for graph structured data.\n* [NetworkX](https://networkx.github.io/) - A high-productivity software for complex networks.\n* [NIPY](http://nipy.org) - A collection of neuroimaging toolkits.\n* [NumPy](http://www.numpy.org/) - A fundamental package for scientific computing with Python.\n* [ObsPy](https://github.com/obspy/obspy/wiki/) - A Python toolbox for seismology.\n* [Open Babel](https://open-babel.readthedocs.io/) - A chemical toolbox designed to speak the many languages of chemical data.\n* [PyDy](http://www.pydy.org/) - Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion.\n* [PyMC](https://github.com/pymc-devs/pymc3) - Markov Chain Monte Carlo sampling toolkit.\n* [QuTiP](http://qutip.org/) - Quantum Toolbox in Python.\n* [RDKit](http://www.rdkit.org/) - Cheminformatics and Machine Learning Software.\n* [SciPy](https://www.scipy.org/) - A Python-based ecosystem of open-source software for mathematics, science, and engineering.\n* [SimPy](https://gitlab.com/team-simpy/simpy) -  A process-based discrete-event simulation framework.\n* [statsmodels](https://github.com/statsmodels/statsmodels) - Statistical modeling and econometrics in Python.\n* [SymPy](https://github.com/sympy/sympy) - A Python library for symbolic mathematics.\n* [Zipline](https://github.com/quantopian/zipline) - A Pythonic algorithmic trading library.\n\n## Search\n\n*Libraries and software for indexing and performing search queries on data.*\n\n* [django-haystack](https://github.com/django-haystack/django-haystack) - Modular search for Django.\n* [elasticsearch-dsl-py](https://github.com/elastic/elasticsearch-dsl-py) - The official high-level Python client for Elasticsearch.\n* [elasticsearch-py](https://www.elastic.co/guide/en/elasticsearch/client/python-api/current/index.html) - The official low-level Python client for [Elasticsearch](https://www.elastic.co/products/elasticsearch).\n* [pysolr](https://github.com/django-haystack/pysolr) - A lightweight Python wrapper for [Apache Solr](https://lucene.apache.org/solr/).\n* [whoosh](http://whoosh.readthedocs.io/en/latest/) - A fast, pure Python search engine library.\n\n## Serialization\n\n*Libraries for serializing complex data types*\n\n* [marshmallow](https://github.com/marshmallow-code/marshmallow) - A lightweight library for converting complex objects to and from simple Python datatypes.\n* [pysimdjson](https://github.com/TkTech/pysimdjson) - A Python bindings for [simdjson](https://github.com/lemire/simdjson).\n* [python-rapidjson](https://github.com/python-rapidjson/python-rapidjson) - A Python wrapper around [RapidJSON](https://github.com/Tencent/rapidjson).\n* [ultrajson](https://github.com/esnme/ultrajson) - A fast JSON decoder and encoder written in C with Python bindings.\n\n## Serverless Frameworks\n\n*Frameworks for developing serverless Python code.*\n\n* [python-lambda](https://github.com/nficano/python-lambda) - A toolkit for developing and deploying Python code in AWS Lambda.\n* [Zappa](https://github.com/zappa/Zappa) - A tool for deploying WSGI applications on AWS Lambda and API Gateway.\n\n## Shell\n\n*Shells based on Python.*\n\n* [xonsh](https://github.com/xonsh/xonsh/) - A Python-powered, cross-platform, Unix-gazing shell language and command prompt.\n\n## Specific Formats Processing\n\n*Libraries for parsing and manipulating specific text formats.*\n\n* General\n    * [tablib](https://github.com/jazzband/tablib) - A module for Tabular Datasets in XLS, CSV, JSON, YAML.\n* Office\n    * [docxtpl](https://github.com/elapouya/python-docx-template) - Editing a docx document by jinja2 template\n    * [openpyxl](https://openpyxl.readthedocs.io/en/stable/) - A library for reading and writing Excel 2010 xlsx/xlsm/xltx/xltm files.\n    * [pyexcel](https://github.com/pyexcel/pyexcel) - Providing one API for reading, manipulating and writing csv, ods, xls, xlsx and xlsm files.\n    * [python-docx](https://github.com/python-openxml/python-docx) - Reads, queries and modifies Microsoft Word 2007/2008 docx files.\n    * [python-pptx](https://github.com/scanny/python-pptx) - Python library for creating and updating PowerPoint (.pptx) files.\n    * [unoconv](https://github.com/unoconv/unoconv) - Convert between any document format supported by LibreOffice/OpenOffice.\n    * [XlsxWriter](https://github.com/jmcnamara/XlsxWriter) - A Python module for creating Excel .xlsx files.\n    * [xlwings](https://github.com/ZoomerAnalytics/xlwings) - A BSD-licensed library that makes it easy to call Python from Excel and vice versa.\n    * [xlwt](https://github.com/python-excel/xlwt) / [xlrd](https://github.com/python-excel/xlrd) - Writing and reading data and formatting information from Excel files.\n* PDF\n    * [pdfminer.six](https://github.com/pdfminer/pdfminer.six) - Pdfminer.six is a community maintained fork of the original PDFMiner.\n    * [PyPDF2](https://github.com/mstamy2/PyPDF2) - A library capable of splitting, merging and transforming PDF pages.\n    * [ReportLab](https://www.reportlab.com/opensource/) - Allowing Rapid creation of rich PDF documents.\n* Markdown\n    * [Mistune](https://github.com/lepture/mistune) - Fastest and full featured pure Python parsers of Markdown.\n    * [Python-Markdown](https://github.com/waylan/Python-Markdown) - A Python implementation of John Gruber\u2019s Markdown.\n* YAML\n    * [PyYAML](http://pyyaml.org/) - YAML implementations for Python.\n* CSV\n    * [csvkit](https://github.com/wireservice/csvkit) - Utilities for converting to and working with CSV.\n* Archive\n    * [unp](https://github.com/mitsuhiko/unp) - A command line tool that can unpack archives easily.\n\n## Static Site Generator\n\n*Static site generator is a software that takes some text + templates as input and produces HTML files on the output.*\n\n* [lektor](https://github.com/lektor/lektor) - An easy to use static CMS and blog engine.\n* [mkdocs](https://github.com/mkdocs/mkdocs/) - Markdown friendly documentation generator.\n* [makesite](https://github.com/sunainapai/makesite) - Simple, lightweight, and magic-free static site/blog generator (< 130 lines).\n* [nikola](https://github.com/getnikola/nikola) - A static website and blog generator.\n* [pelican](https://github.com/getpelican/pelican) - Static site generator that supports Markdown and reST syntax.\n\n## Tagging\n\n*Libraries for tagging items.*\n\n* [django-taggit](https://github.com/jazzband/django-taggit) - Simple tagging for Django.\n\n## Task Queues\n\n*Libraries for working with task queues.*\n\n* [celery](https://docs.celeryproject.org/en/stable/) - An asynchronous task queue/job queue based on distributed message passing.\n* [dramatiq](https://github.com/Bogdanp/dramatiq) - A fast and reliable background task processing library for Python 3.\n* [huey](https://github.com/coleifer/huey) - Little multi-threaded task queue.\n* [mrq](https://github.com/pricingassistant/mrq) - A distributed worker task queue in Python using Redis & gevent.\n* [rq](https://github.com/rq/rq) - Simple job queues for Python.\n\n## Template Engine\n\n*Libraries and tools for templating and lexing.*\n\n* [Genshi](https://genshi.edgewall.org/) - Python templating toolkit for generation of web-aware output.\n* [Jinja2](https://github.com/pallets/jinja) - A modern and designer friendly templating language.\n* [Mako](http://www.makotemplates.org/) - Hyperfast and lightweight templating for the Python platform.\n\n## Testing\n\n*Libraries for testing codebases and generating test data.*\n\n* Testing Frameworks\n    * [hypothesis](https://github.com/HypothesisWorks/hypothesis) - Hypothesis is an advanced Quickcheck style property based testing library.\n    * [nose2](https://github.com/nose-devs/nose2) - The successor to `nose`, based on `unittest2.\n    * [pytest](https://docs.pytest.org/en/latest/) - A mature full-featured Python testing tool.\n    * [Robot Framework](https://github.com/robotframework/robotframework) - A generic test automation framework.\n    * [unittest](https://docs.python.org/3/library/unittest.html) - (Python standard library) Unit testing framework.\n* Test Runners\n    * [green](https://github.com/CleanCut/green) - A clean, colorful test runner.\n    * [mamba](http://nestorsalceda.github.io/mamba/) - The definitive testing tool for Python. Born under the banner of BDD.\n    * [tox](https://tox.readthedocs.io/en/latest/) - Auto builds and tests distributions in multiple Python versions\n* GUI / Web Testing\n    * [locust](https://github.com/locustio/locust) - Scalable user load testing tool written in Python.\n    * [PyAutoGUI](https://github.com/asweigart/pyautogui) - PyAutoGUI is a cross-platform GUI automation Python module for human beings.\n    * [Schemathesis](https://github.com/kiwicom/schemathesis) - A tool for automatic property-based testing of web applications built with Open API / Swagger specifications.\n    * [Selenium](https://pypi.org/project/selenium/) - Python bindings for [Selenium](http://www.seleniumhq.org/) WebDriver.\n    * [sixpack](https://github.com/seatgeek/sixpack) - A language-agnostic A/B Testing framework.\n    * [splinter](https://github.com/cobrateam/splinter) - Open source tool for testing web applications.\n* Mock\n    * [doublex](https://pypi.org/project/doublex/) - Powerful test doubles framework for Python.\n    * [freezegun](https://github.com/spulec/freezegun) - Travel through time by mocking the datetime module.\n    * [httmock](https://github.com/patrys/httmock) - A mocking library for requests for Python 2.6+ and 3.2+.\n    * [httpretty](https://github.com/gabrielfalcao/HTTPretty) - HTTP request mock tool for Python.\n    * [mock](https://docs.python.org/3/library/unittest.mock.html) - (Python standard library) A mocking and patching library.\n    * [mocket](https://github.com/mindflayer/python-mocket) - A socket mock framework with gevent/asyncio/SSL support.\n    * [responses](https://github.com/getsentry/responses) - A utility library for mocking out the requests Python library.\n    * [VCR.py](https://github.com/kevin1024/vcrpy) - Record and replay HTTP interactions on your tests.\n* Object Factories\n    * [factory_boy](https://github.com/FactoryBoy/factory_boy) - A test fixtures replacement for Python.\n    * [mixer](https://github.com/klen/mixer) - Another fixtures replacement. Supports Django, Flask, SQLAlchemy, Peewee and etc.\n    * [model_mommy](https://github.com/vandersonmota/model_mommy) - Creating random fixtures for testing in Django.\n* Code Coverage\n    * [coverage](https://pypi.org/project/coverage/) - Code coverage measurement.\n* Fake Data\n    * [fake2db](https://github.com/emirozer/fake2db) - Fake database generator.\n    * [faker](https://github.com/joke2k/faker) - A Python package that generates fake data.\n    * [mimesis](https://github.com/lk-geimfari/mimesis) - is a Python library that help you generate fake data.\n    * [radar](https://pypi.org/project/radar/) - Generate random datetime / time.\n\n## Text Processing\n\n*Libraries for parsing and manipulating plain texts.*\n\n* General\n    * [chardet](https://github.com/chardet/chardet) - Python 2/3 compatible character encoding detector.\n    * [difflib](https://docs.python.org/3/library/difflib.html) - (Python standard library) Helpers for computing deltas.\n    * [ftfy](https://github.com/LuminosoInsight/python-ftfy) - Makes Unicode text less broken and more consistent automagically.\n    * [fuzzywuzzy](https://github.com/seatgeek/fuzzywuzzy) - Fuzzy String Matching.\n    * [Levenshtein](https://github.com/ztane/python-Levenshtein/) - Fast computation of Levenshtein distance and string similarity.\n    * [pangu.py](https://github.com/vinta/pangu.py) - Paranoid text spacing.\n    * [pyfiglet](https://github.com/pwaller/pyfiglet) - An implementation of figlet written in Python.\n    * [pypinyin](https://github.com/mozillazg/python-pinyin) - Convert Chinese hanzi (\u6f22\u5b57) to pinyin (\u62fc\u97f3).\n    * [textdistance](https://github.com/orsinium/textdistance) - Compute distance between sequences with 30+ algorithms.\n    * [unidecode](https://pypi.org/project/Unidecode/) - ASCII transliterations of Unicode text.\n* Slugify\n    * [awesome-slugify](https://github.com/dimka665/awesome-slugify) - A Python slugify library that can preserve unicode.\n    * [python-slugify](https://github.com/un33k/python-slugify) - A Python slugify library that translates unicode to ASCII.\n    * [unicode-slugify](https://github.com/mozilla/unicode-slugify) - A slugifier that generates unicode slugs with Django as a dependency.\n* Unique identifiers\n    * [hashids](https://github.com/davidaurelio/hashids-python) - Implementation of [hashids](http://hashids.org) in Python.\n    * [shortuuid](https://github.com/skorokithakis/shortuuid) - A generator library for concise, unambiguous and URL-safe UUIDs.\n* Parser\n    * [ply](https://github.com/dabeaz/ply) - Implementation of lex and yacc parsing tools for Python.\n    * [pygments](http://pygments.org/) - A generic syntax highlighter.\n    * [pyparsing](https://github.com/pyparsing/pyparsing) - A general purpose framework for generating parsers.\n    * [python-nameparser](https://github.com/derek73/python-nameparser) - Parsing human names into their individual components.\n    * [python-phonenumbers](https://github.com/daviddrysdale/python-phonenumbers) - Parsing, formatting, storing and validating international phone numbers.\n    * [python-user-agents](https://github.com/selwin/python-user-agents) - Browser user agent parser.\n    * [sqlparse](https://github.com/andialbrecht/sqlparse) - A non-validating SQL parser.\n\n## Third-party APIs\n\n*Libraries for accessing third party services APIs. Also see [List of Python API Wrappers and Libraries](https://github.com/realpython/list-of-python-api-wrappers).*\n\n* [apache-libcloud](https://libcloud.apache.org/) - One Python library for all clouds.\n* [boto3](https://github.com/boto/boto3) - Python interface to Amazon Web Services.\n* [django-wordpress](https://github.com/istrategylabs/django-wordpress) - WordPress models and views for Django.\n* [facebook-sdk](https://github.com/mobolic/facebook-sdk) - Facebook Platform Python SDK.\n* [google-api-python-client](https://github.com/google/google-api-python-client) - Google APIs Client Library for Python.\n* [gspread](https://github.com/burnash/gspread) - Google Spreadsheets Python API.\n* [twython](https://github.com/ryanmcgrath/twython) - A Python wrapper for the Twitter API.\n\n## URL Manipulation\n\n*Libraries for parsing URLs.*\n\n* [furl](https://github.com/gruns/furl) - A small Python library that makes parsing and manipulating URLs easy.\n* [purl](https://github.com/codeinthehole/purl) - A simple, immutable URL class with a clean API for interrogation and manipulation.\n* [pyshorteners](https://github.com/ellisonleao/pyshorteners) - A pure Python URL shortening lib.\n* [webargs](https://github.com/marshmallow-code/webargs) - A friendly library for parsing HTTP request arguments with built-in support for popular web frameworks.\n\n## Video\n\n*Libraries for manipulating video and GIFs.*\n\n* [moviepy](https://zulko.github.io/moviepy/) - A module for script-based movie editing with many formats, including animated GIFs.\n* [scikit-video](https://github.com/aizvorski/scikit-video) - Video processing routines for SciPy.\n* [vidgear](https://github.com/abhiTronix/vidgear) - Most Powerful multi-threaded Video Processing framework.\n\n## Web Asset Management\n\n*Tools for managing, compressing and minifying website assets.*\n\n* [django-compressor](https://github.com/django-compressor/django-compressor) - Compresses linked and inline JavaScript or CSS into a single cached file.\n* [django-pipeline](https://github.com/jazzband/django-pipeline) - An asset packaging library for Django.\n* [django-storages](https://github.com/jschneier/django-storages) - A collection of custom storage back ends for Django.\n* [fanstatic](http://www.fanstatic.org/en/latest/) - Packages, optimizes, and serves static file dependencies as Python packages.\n* [fileconveyor](http://wimleers.com/fileconveyor) - A daemon to detect and sync files to CDNs, S3 and FTP.\n* [flask-assets](https://github.com/miracle2k/flask-assets) - Helps you integrate webassets into your Flask app.\n* [webassets](https://github.com/miracle2k/webassets) - Bundles, optimizes, and manages unique cache-busting URLs for static resources.\n\n## Web Content Extracting\n\n*Libraries for extracting web contents.*\n\n* [html2text](https://github.com/Alir3z4/html2text) - Convert HTML to Markdown-formatted text.\n* [lassie](https://github.com/michaelhelmick/lassie) - Web Content Retrieval for Humans.\n* [micawber](https://github.com/coleifer/micawber) - A small library for extracting rich content from URLs.\n* [newspaper](https://github.com/codelucas/newspaper) - News extraction, article extraction and content curation in Python.\n* [python-readability](https://github.com/buriy/python-readability) - Fast Python port of arc90's readability tool.\n* [requests-html](https://github.com/psf/requests-html) - Pythonic HTML Parsing for Humans.\n* [sumy](https://github.com/miso-belica/sumy) - A module for automatic summarization of text documents and HTML pages.\n* [textract](https://github.com/deanmalmgren/textract) - Extract text from any document, Word, PowerPoint, PDFs, etc.\n* [toapi](https://github.com/gaojiuli/toapi) - Every web site provides APIs.\n\n## Web Crawling\n\n*Libraries to automate web scraping.*\n\n* [feedparser](https://github.com/kurtmckee/feedparser) - Universal feed parser.\n* [grab](https://github.com/lorien/grab) - Site scraping framework.\n* [mechanicalsoup](https://github.com/MechanicalSoup/MechanicalSoup) - A Python library for automating interaction with websites.\n* [scrapy](https://github.com/scrapy/scrapy) - A fast high-level screen scraping and web crawling framework.\n\n## Web Frameworks\n\n*Traditional full stack web frameworks. Also see [RESTful API](https://github.com/vinta/awesome-python#restful-api).*\n\n* Synchronous\n    * [django](https://github.com/django/django) - The most popular web framework in Python.\n        * [awesome-django](https://github.com/shahraizali/awesome-django)\n        * [awesome-django](https://github.com/wsvincent/awesome-django)\n    * [flask](https://github.com/pallets/flask) - A microframework for Python.\n        * [awesome-flask](https://github.com/humiaozuzu/awesome-flask)\n    * [pyramid](https://pylonsproject.org/) - A small, fast, down-to-earth, open source Python web framework.\n        * [awesome-pyramid](https://github.com/uralbash/awesome-pyramid)\n    * [masonite](https://github.com/MasoniteFramework/masonite) - The modern and developer centric Python web framework.\n* Asynchronous\n    * [tornado](https://github.com/tornadoweb/tornado) - A web framework and asynchronous networking library.\n\n## WebSocket\n\n*Libraries for working with WebSocket.*\n\n* [autobahn-python](https://github.com/crossbario/autobahn-python) - WebSocket & WAMP for Python on Twisted and [asyncio](https://docs.python.org/3/library/asyncio.html).\n* [channels](https://github.com/django/channels) - Developer-friendly asynchrony for Django.\n* [websockets](https://github.com/aaugustin/websockets) - A library for building WebSocket servers and clients with a focus on correctness and simplicity.\n\n## WSGI Servers\n\n*WSGI-compatible web servers.*\n\n* [gunicorn](https://github.com/benoitc/gunicorn) - Pre-forked, ported from Ruby's Unicorn project.\n* [uwsgi](https://uwsgi-docs.readthedocs.io/en/latest/) - A project aims at developing a full stack for building hosting services, written in C.\n* [waitress](https://github.com/Pylons/waitress) - Multi-threaded, powers Pyramid.\n* [werkzeug](https://github.com/pallets/werkzeug) - A WSGI utility library for Python that powers Flask and can easily be embedded into your own projects.\n\n# Resources\n\nWhere to discover learning resources or new Python libraries.\n\n## Newsletters\n\n* [Awesome Python Newsletter](http://python.libhunt.com/newsletter)\n* [Pycoder's Weekly](https://pycoders.com/)\n* [Python Tricks](https://realpython.com/python-tricks/)\n* [Python Weekly](https://www.pythonweekly.com/)\n\n## Podcasts\n\n* [Django Chat](https://djangochat.com/)\n* [Python Bytes](https://pythonbytes.fm)\n* [Talk Python To Me](https://talkpython.fm/)\n* [Python Test](https://podcast.pythontest.com/)\n* [The Real Python Podcast](https://realpython.com/podcasts/rpp/)\n\n# Contributing\n\nYour contributions are always welcome! Please take a look at the [contribution guidelines](https://github.com/vinta/awesome-python/blob/master/CONTRIBUTING.md) first.\n\n- - -\n\nIf you have any question about this opinionated list, do not hesitate to contact me [@VintaChen](https://twitter.com/VintaChen) on Twitter or open an issue on GitHub.\n\n"}
{"repo_url": "https://github.com/vinta/awesome-python", "path": "requirements.txt", "size": 37, "license": "NOASSERTION", "content_sha": "89d64c303435e37104825ff1551b645c06252c83", "findings": [], "content": "mkdocs==1.0.4\nmkdocs-material==4.0.2\n"}
{"repo_url": "https://github.com/vinta/awesome-python", "path": "sort.py", "size": 2959, "license": "NOASSERTION", "content_sha": "431bd02b48e6cdc850b147b5fc4e47a4370943a6", "findings": [], "content": "#!/usr/bin/env python\n# coding: utf-8\n\n\"\"\"\n    The approach taken is explained below. I decided to do it simply.\n    Initially I was considering parsing the data into some sort of\n    structure and then generating an appropriate README. I am still\n    considering doing it - but for now this should work. The only issue\n    I see is that it only sorts the entries at the lowest level, and that\n    the order of the top-level contents do not match the order of the actual\n    entries.\n\n    This could be extended by having nested blocks, sorting them recursively\n    and flattening the end structure into a list of lines. Revision 2 maybe ^.^.\n\"\"\"\n\ndef sort_blocks():\n    # First, we load the current README into memory\n    with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.read()\n\n    # Separating the 'table of contents' from the contents (blocks)\n    table_of_contents = ''.join(read_me.split('- - -')[0])\n    blocks = ''.join(read_me.split('- - -')[1]).split('\\n# ')\n    for i in range(len(blocks)):\n        if i == 0:\n            blocks[i] = blocks[i] + '\\n'\n        else:\n            blocks[i] = '# ' + blocks[i] + '\\n'\n\n    # Sorting the libraries\n    inner_blocks = sorted(blocks[0].split('##'))\n    for i in range(1, len(inner_blocks)):\n        if inner_blocks[i][0] != '#':\n            inner_blocks[i] = '##' + inner_blocks[i]\n    inner_blocks = ''.join(inner_blocks)\n\n    # Replacing the non-sorted libraries by the sorted ones and gathering all at the final_README file\n    blocks[0] = inner_blocks\n    final_README = table_of_contents + '- - -' + ''.join(blocks)\n\n    with open('README.md', 'w+') as sorted_file:\n        sorted_file.write(final_README)\n\ndef main():\n    # First, we load the current README into memory as an array of lines\n    with open('README.md', 'r') as read_me_file:\n        read_me = read_me_file.readlines()\n\n    # Then we cluster the lines together as blocks\n    # Each block represents a collection of lines that should be sorted\n    # This was done by assuming only links ([...](...)) are meant to be sorted\n    # Clustering is done by indentation\n    blocks = []\n    last_indent = None\n    for line in read_me:\n        s_line = line.lstrip()\n        indent = len(line) - len(s_line)\n\n        if any([s_line.startswith(s) for s in ['* [', '- [']]):\n            if indent == last_indent:\n                blocks[-1].append(line)\n            else:\n                blocks.append([line])\n            last_indent = indent\n        else:\n            blocks.append([line])\n            last_indent = None\n\n    with open('README.md', 'w+') as sorted_file:\n        # Then all of the blocks are sorted individually\n        blocks = [\n            ''.join(sorted(block, key=str.lower)) for block in blocks\n        ]\n        # And the result is written back to README.md\n        sorted_file.write(''.join(blocks))\n\n    # Then we call the sorting method\n    sort_blocks()\n\n\nif __name__ == \"__main__\":\n    main()\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": ".github/pull_request_template.md", "size": 577, "license": "AGPL-3.0", "content_sha": "c9fcda2e2790861c7bf4aa4cb37e01545c48fb95", "findings": [], "content": "## Description\n\n* a simple description of what you're trying to accomplish\n* a summary of changes in code\n* which issues it fixes, if any\n\n## Screenshots/videos:\n\n\n## Checklist:\n\n- [ ] I have read [contributing wiki page](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Contributing)\n- [ ] I have performed a self-review of my own code\n- [ ] My code follows the [style guidelines](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Contributing#code-style)\n- [ ] My code passes [tests](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Tests)\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "CHANGELOG.md", "size": 97085, "license": "AGPL-3.0", "content_sha": "5f7e59351cba4e39ac894fa1887345e77f4fb787", "findings": [], "content": "## 1.10.1\r\n\r\n### Bug Fixes:\r\n* fix image upscale on cpu ([#16275](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16275))\r\n\r\n\r\n## 1.10.0\r\n\r\n### Features:\r\n* A lot of performance improvements (see below in Performance section)\r\n* Stable Diffusion 3 support ([#16030](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16030), [#16164](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16164), [#16212](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16212))\r\n  * Recommended Euler sampler; DDIM and other timestamp samplers currently not supported\r\n  * T5 text model is disabled by default, enable it in settings\r\n* New schedulers:\r\n  * Align Your Steps ([#15751](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15751))\r\n  * KL Optimal ([#15608](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15608))\r\n  * Normal ([#16149](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16149))\r\n  * DDIM ([#16149](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16149))\r\n  * Simple ([#16142](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16142))\r\n  * Beta ([#16235](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16235))\r\n* New sampler: DDIM CFG++ ([#16035](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16035))\r\n\r\n### Minor:\r\n* Option to skip CFG on early steps ([#15607](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15607))\r\n* Add --models-dir option ([#15742](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15742))\r\n* Allow mobile users to open context menu by using two fingers press ([#15682](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15682))\r\n* Infotext: add Lora name as TI hashes for bundled Textual Inversion ([#15679](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15679))\r\n* Check model's hash after downloading it to prevent corruped downloads ([#15602](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15602))\r\n* More extension tag filtering options ([#15627](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15627))\r\n* When saving AVIF, use JPEG's quality setting ([#15610](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15610))\r\n* Add filename pattern: `[basename]` ([#15978](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15978))\r\n* Add option to enable clip skip for clip L on SDXL ([#15992](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15992))\r\n* Option to prevent screen sleep during generation ([#16001](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16001))\r\n* ToggleLivePriview button in image viewer ([#16065](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16065))\r\n* Remove ui flashing on reloading and fast scrollong ([#16153](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16153))\r\n* option to disable save button log.csv ([#16242](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16242))\r\n\r\n### Extensions and API:\r\n* Add process_before_every_sampling hook ([#15984](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15984))\r\n* Return HTTP 400 instead of 404 on invalid sampler error ([#16140](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16140))\r\n\r\n### Performance:\r\n* [Performance 1/6] use_checkpoint = False ([#15803](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15803))\r\n* [Performance 2/6] Replace einops.rearrange with torch native ops ([#15804](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15804))\r\n* [Performance 4/6] Precompute is_sdxl_inpaint flag ([#15806](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15806))\r\n* [Performance 5/6] Prevent unnecessary extra networks bias backup ([#15816](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15816))\r\n* [Performance 6/6] Add --precision half option to avoid casting during inference ([#15820](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15820))\r\n* [Performance] LDM optimization patches ([#15824](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15824))\r\n* [Performance] Keep sigmas on CPU ([#15823](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15823))\r\n* Check for nans in unet only once, after all steps have been completed\r\n* Added pption to run torch profiler for image generation\r\n\r\n### Bug Fixes:\r\n* Fix for grids without comprehensive infotexts ([#15958](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15958))\r\n* feat: lora partial update precede full update ([#15943](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15943))\r\n* Fix bug where file extension had an extra '.' under some circumstances ([#15893](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15893))\r\n* Fix corrupt model initial load loop ([#15600](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15600))\r\n* Allow old sampler names in API ([#15656](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15656))\r\n* more old sampler scheduler compatibility ([#15681](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15681))\r\n* Fix Hypertile xyz ([#15831](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15831))\r\n* XYZ CSV skipinitialspace ([#15832](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15832))\r\n* fix soft inpainting on mps and xpu, torch_utils.float64 ([#15815](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15815))\r\n* fix extention update when not on main branch ([#15797](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15797))\r\n* update pickle safe filenames\r\n* use relative path for webui-assets css ([#15757](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15757))\r\n* When creating a virtual environment, upgrade pip in webui.bat/webui.sh ([#15750](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15750))\r\n* Fix AttributeError ([#15738](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15738))\r\n* use script_path for webui root in launch_utils ([#15705](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15705))\r\n* fix extra batch mode P Transparency ([#15664](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15664))\r\n* use gradio theme colors in css ([#15680](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15680))\r\n* Fix dragging text within prompt input ([#15657](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15657))\r\n* Add correct mimetype for .mjs files ([#15654](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15654))\r\n* QOL Items - handle metadata issues more cleanly for SD models, Loras and embeddings ([#15632](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15632))\r\n* replace wsl-open with wslpath and explorer.exe ([#15968](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15968))\r\n* Fix SDXL Inpaint ([#15976](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15976))\r\n* multi size grid ([#15988](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15988))\r\n* fix Replace preview ([#16118](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16118))\r\n* Possible fix of wrong scale in weight decomposition ([#16151](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16151))\r\n* Ensure use of python from venv on Mac and Linux ([#16116](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16116))\r\n* Prioritize python3.10 over python3 if both are available on Linux and Mac (with fallback) ([#16092](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16092))\r\n* stoping generation extras ([#16085](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16085))\r\n* Fix SD2 loading ([#16078](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16078), [#16079](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16079))\r\n* fix infotext Lora hashes for hires fix different lora ([#16062](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16062))\r\n* Fix sampler scheduler autocorrection warning ([#16054](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16054))\r\n* fix ui flashing on reloading and fast scrollong ([#16153](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16153))\r\n* fix upscale logic ([#16239](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16239))\r\n* [bug] do not break progressbar on non-job actions (add wrap_gradio_call_no_job) ([#16202](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16202))\r\n* fix OSError: cannot write mode P as JPEG ([#16194](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16194))\r\n\r\n### Other:\r\n* fix changelog #15883 -> #15882 ([#15907](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15907))\r\n* ReloadUI backgroundColor --background-fill-primary ([#15864](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15864))\r\n* Use different torch versions for Intel and ARM Macs ([#15851](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15851))\r\n* XYZ override rework ([#15836](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15836))\r\n* scroll extensions table on overflow ([#15830](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15830))\r\n* img2img batch upload method ([#15817](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15817))\r\n* chore: sync v1.8.0 packages according to changelog ([#15783](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15783))\r\n* Add AVIF MIME type support to mimetype definitions ([#15739](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15739))\r\n* Update imageviewer.js ([#15730](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15730))\r\n* no-referrer ([#15641](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15641))\r\n* .gitignore trace.json ([#15980](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15980))\r\n* Bump spandrel to 0.3.4 ([#16144](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16144))\r\n* Defunct --max-batch-count ([#16119](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16119))\r\n* docs: update bug_report.yml ([#16102](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16102))\r\n* Maintaining Project Compatibility for Python 3.9 Users Without Upgrade Requirements. ([#16088](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16088), [#16169](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16169), [#16192](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16192))\r\n* Update torch for ARM Macs to 2.3.1 ([#16059](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16059))\r\n* remove deprecated setting dont_fix_second_order_samplers_schedule ([#16061](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16061))\r\n* chore: fix typos ([#16060](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16060))\r\n* shlex.join launch args in console log ([#16170](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16170))\r\n* activate venv .bat ([#16231](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16231))\r\n* add ids to the resize tabs in img2img ([#16218](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16218))\r\n* update installation guide linux ([#16178](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16178))\r\n* Robust sysinfo ([#16173](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16173))\r\n* do not send image size on paste inpaint ([#16180](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16180))\r\n* Fix noisy DS_Store files for MacOS ([#16166](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/16166))\r\n\r\n\r\n## 1.9.4\r\n\r\n### Bug Fixes:\r\n*  pin setuptools version to fix the startup error ([#15882](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15882)) \r\n\r\n## 1.9.3\r\n\r\n### Bug Fixes:\r\n*  fix get_crop_region_v2 ([#15594](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15594)) \r\n\r\n## 1.9.2\r\n\r\n### Extensions and API:\r\n* restore 1.8.0-style naming of scripts\r\n\r\n## 1.9.1\r\n\r\n### Minor:\r\n* Add avif support ([#15582](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15582))\r\n* Add filename patterns: `[sampler_scheduler]` and `[scheduler]` ([#15581](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15581))\r\n\r\n### Extensions and API:\r\n* undo adding scripts to sys.modules\r\n* Add schedulers API endpoint ([#15577](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15577))\r\n* Remove API upscaling factor limits ([#15560](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15560))\r\n\r\n### Bug Fixes:\r\n* Fix images do not match / Coordinate 'right' is less than 'left' ([#15534](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15534))\r\n* fix: remove_callbacks_for_function should also remove from the ordered map ([#15533](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15533))\r\n* fix x1 upscalers ([#15555](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15555))\r\n* Fix cls.__module__ value in extension script ([#15532](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15532))\r\n* fix typo in function call (eror -> error) ([#15531](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15531))\r\n\r\n### Other:\r\n* Hide 'No Image data blocks found.' message ([#15567](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15567))\r\n* Allow webui.sh to be runnable from arbitrary directories containing a .git file ([#15561](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15561))\r\n* Compatibility with Debian 11, Fedora 34+ and openSUSE 15.4+ ([#15544](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15544))\r\n* numpy DeprecationWarning product -> prod ([#15547](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15547))\r\n* get_crop_region_v2 ([#15583](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15583), [#15587](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15587))\r\n\r\n\r\n## 1.9.0\r\n\r\n### Features:\r\n* Make refiner switchover based on model timesteps instead of sampling steps ([#14978](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14978))\r\n* add an option to have old-style directory view instead of tree view; stylistic changes for extra network sorting/search controls\r\n* add UI for reordering callbacks, support for specifying callback order in extension metadata ([#15205](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15205))\r\n* Sgm uniform scheduler for SDXL-Lightning models ([#15325](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15325))\r\n* Scheduler selection in main UI ([#15333](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15333), [#15361](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15361), [#15394](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15394))\r\n\r\n### Minor:\r\n* \"open images directory\" button now opens the actual dir ([#14947](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14947))\r\n* Support inference with LyCORIS BOFT networks ([#14871](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14871), [#14973](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14973))\r\n* make extra network card description plaintext by default, with an option to re-enable HTML as it was\r\n* resize handle for extra networks ([#15041](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15041))\r\n* cmd args: `--unix-filenames-sanitization` and `--filenames-max-length` ([#15031](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15031))\r\n* show extra networks parameters in HTML table rather than raw JSON ([#15131](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15131))\r\n* Add DoRA (weight-decompose) support for LoRA/LoHa/LoKr ([#15160](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15160), [#15283](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15283))\r\n* Add '--no-prompt-history' cmd args for disable last generation prompt history ([#15189](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15189))\r\n* update preview on Replace Preview ([#15201](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15201))\r\n* only fetch updates for extensions' active git branches ([#15233](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15233))\r\n* put upscale postprocessing UI into an accordion ([#15223](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15223))\r\n* Support dragdrop for URLs to read infotext ([#15262](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15262))\r\n* use diskcache library for caching ([#15287](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15287), [#15299](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15299))\r\n* Allow PNG-RGBA for Extras Tab ([#15334](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15334))\r\n* Support cover images embedded in safetensors metadata ([#15319](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15319))\r\n* faster interrupt when using NN upscale ([#15380](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15380))\r\n* Extras upscaler: an input field to limit maximul side length for the output image ([#15293](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15293), [#15415](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15415), [#15417](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15417), [#15425](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15425))\r\n* add an option to hide postprocessing options in Extras tab\r\n\r\n### Extensions and API:\r\n* ResizeHandleRow - allow overriden column scale parametr ([#15004](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15004))\r\n* call script_callbacks.ui_settings_callback earlier; fix extra-options-section built-in extension killing the ui if using a setting that doesn't exist\r\n* make it possible to use zoom.js outside webui context ([#15286](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15286), [#15288](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15288))\r\n* allow variants for extension name in metadata.ini ([#15290](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15290))\r\n* make reloading UI scripts optional when doing Reload UI, and off by default\r\n* put request: gr.Request at start of img2img function similar to txt2img\r\n* open_folder as util ([#15442](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15442))\r\n* make it possible to import extensions' script files as `import scripts.<filename>` ([#15423](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15423))\r\n\r\n### Performance:\r\n* performance optimization for extra networks HTML pages\r\n* optimization for extra networks filtering\r\n* optimization for extra networks sorting\r\n\r\n### Bug Fixes:\r\n* prevent escape button causing an interrupt when no generation has been made yet\r\n* [bug] avoid doble upscaling in inpaint ([#14966](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14966))\r\n* possible fix for reload button not appearing in some cases for extra networks.\r\n* fix: the `split_threshold` parameter does not work when running Split oversized images ([#15006](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15006))\r\n* Fix resize-handle visability for vertical layout (mobile) ([#15010](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15010))\r\n* register_tmp_file also for mtime ([#15012](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15012))\r\n* Protect alphas_cumprod during refiner switchover ([#14979](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14979))\r\n* Fix EXIF orientation in API image loading ([#15062](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15062))\r\n* Only override emphasis if actually used in prompt ([#15141](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15141))\r\n* Fix emphasis infotext missing from `params.txt` ([#15142](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15142))\r\n* fix extract_style_text_from_prompt #15132 ([#15135](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15135))\r\n* Fix Soft Inpaint for AnimateDiff ([#15148](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15148))\r\n* edit-attention: deselect surrounding whitespace ([#15178](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15178))\r\n* chore: fix font not loaded ([#15183](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15183))\r\n* use natural sort in extra networks when ordering by path\r\n* Fix built-in lora system bugs caused by torch.nn.MultiheadAttention ([#15190](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15190))\r\n* Avoid error from None in get_learned_conditioning ([#15191](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15191))\r\n* Add entry to MassFileLister after writing metadata ([#15199](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15199))\r\n* fix issue with Styles when Hires prompt is used ([#15269](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15269), [#15276](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15276))\r\n* Strip comments from hires fix prompt ([#15263](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15263))\r\n* Make imageviewer event listeners browser consistent ([#15261](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15261))\r\n* Fix AttributeError in OFT when trying to get MultiheadAttention weight ([#15260](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15260))\r\n* Add missing .mean() back ([#15239](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15239))\r\n* fix \"Restore progress\" button ([#15221](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15221))\r\n* fix ui-config for InputAccordion [custom_script_source] ([#15231](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15231))\r\n* handle 0 wheel deltaY ([#15268](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15268))\r\n* prevent alt menu for firefox ([#15267](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15267))\r\n* fix: fix syntax errors ([#15179](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15179))\r\n* restore outputs path ([#15307](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15307))\r\n* Escape btn_copy_path filename ([#15316](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15316))\r\n* Fix extra networks buttons when filename contains an apostrophe ([#15331](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15331))\r\n* escape brackets in lora random prompt generator ([#15343](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15343))\r\n* fix: Python version check for PyTorch installation compatibility ([#15390](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15390))\r\n* fix typo in call_queue.py ([#15386](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15386))\r\n* fix: when find already_loaded model, remove loaded by array index ([#15382](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15382))\r\n* minor bug fix of sd model memory management ([#15350](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15350))\r\n* Fix CodeFormer weight ([#15414](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15414))\r\n* Fix: Remove script callbacks in ordered_callbacks_map ([#15428](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15428))\r\n* fix limited file write (thanks, Sylwia)\r\n* Fix extra-single-image API not doing upscale failed ([#15465](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15465))\r\n* error handling paste_field callables ([#15470](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15470))\r\n\r\n### Hardware:\r\n* Add training support and change lspci for Ascend NPU ([#14981](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14981))\r\n* Update to ROCm5.7 and PyTorch ([#14820](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14820))\r\n* Better workaround for Navi1, removing --pre for Navi3 ([#15224](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15224))\r\n* Ascend NPU wiki page ([#15228](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15228))\r\n\r\n### Other:\r\n* Update comment for Pad prompt/negative prompt v0 to add a warning about truncation, make it override the v1 implementation\r\n* support resizable columns for touch (tablets) ([#15002](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15002))\r\n* Fix #14591 using translated content to do categories mapping ([#14995](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14995))\r\n* Use `absolute` path for normalized filepath ([#15035](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15035))\r\n* resizeHandle handle double tap ([#15065](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15065))\r\n* --dat-models-path cmd flag ([#15039](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15039))\r\n* Add a direct link to the binary release ([#15059](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15059))\r\n* upscaler_utils: Reduce logging ([#15084](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15084))\r\n* Fix various typos with crate-ci/typos ([#15116](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15116))\r\n* fix_jpeg_live_preview ([#15102](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15102))\r\n* [alternative fix] can't load webui if selected wrong extra option in ui ([#15121](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15121))\r\n* Error handling for unsupported transparency ([#14958](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14958))\r\n* Add model description to searched terms ([#15198](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15198))\r\n* bump action version ([#15272](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15272))\r\n* PEP 604 annotations ([#15259](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15259))\r\n* Automatically Set the Scale by value when user selects an Upscale Model ([#15244](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15244))\r\n* move postprocessing-for-training into builtin extensions ([#15222](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15222))\r\n* type hinting in shared.py ([#15211](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15211))\r\n* update ruff to 0.3.3\r\n* Update pytorch lightning utilities ([#15310](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15310))\r\n* Add Size as an XYZ Grid option ([#15354](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15354))\r\n* Use HF_ENDPOINT variable for HuggingFace domain with default ([#15443](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15443))\r\n* re-add update_file_entry ([#15446](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15446))\r\n* create_infotext allow index and callable, re-work Hires prompt infotext ([#15460](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15460))\r\n* update restricted_opts to include more options for --hide-ui-dir-config ([#15492](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15492))\r\n\r\n\r\n## 1.8.0\r\n\r\n### Features:\r\n* Update torch to version 2.1.2\r\n* Soft Inpainting ([#14208](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14208))\r\n* FP8 support ([#14031](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14031), [#14327](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14327))\r\n* Support for SDXL-Inpaint Model ([#14390](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14390))\r\n* Use Spandrel for upscaling and face restoration architectures ([#14425](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14425), [#14467](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14467), [#14473](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14473), [#14474](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14474), [#14477](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14477), [#14476](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14476), [#14484](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14484), [#14500](https://github.com/AUTOMATIC1111/stable-difusion-webui/pull/14500), [#14501](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14501), [#14504](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14504), [#14524](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14524), [#14809](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14809))\r\n* Automatic backwards version compatibility (when loading infotexts from old images with program version specified, will add compatibility settings)\r\n* Implement zero terminal SNR noise schedule option (**[SEED BREAKING CHANGE](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Seed-breaking-changes#180-dev-170-225-2024-01-01---zero-terminal-snr-noise-schedule-option)**, [#14145](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14145), [#14979](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14979))\r\n* Add a [\u2728] button to run hires fix on selected image in the gallery (with help from [#14598](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14598), [#14626](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14626), [#14728](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14728))\r\n* [Separate assets repository](https://github.com/AUTOMATIC1111/stable-diffusion-webui-assets); serve fonts locally rather than from google's servers\r\n* Official LCM Sampler Support ([#14583](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14583))\r\n* Add support for DAT upscaler models ([#14690](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14690), [#15039](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15039))\r\n* Extra Networks Tree View ([#14588](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14588), [#14900](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14900))\r\n* NPU Support ([#14801](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14801))\r\n* Prompt comments support\r\n\r\n### Minor:\r\n* Allow pasting in WIDTHxHEIGHT strings into the width/height fields ([#14296](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14296))\r\n* add option: Live preview in full page image viewer ([#14230](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14230), [#14307](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14307))\r\n* Add keyboard shortcuts for generate/skip/interrupt ([#14269](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14269))\r\n* Better TCMALLOC support on different platforms ([#14227](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14227), [#14883](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14883), [#14910](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14910))\r\n* Lora not found warning ([#14464](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14464))\r\n* Adding negative prompts to Loras in extra networks ([#14475](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14475))\r\n* xyz_grid: allow varying the seed along an axis separate from axis options ([#12180](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12180))\r\n* option to convert VAE to bfloat16 (implementation of [#9295](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/9295))\r\n* Better IPEX support ([#14229](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14229), [#14353](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14353), [#14559](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14559), [#14562](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14562), [#14597](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14597))\r\n* Option to interrupt after current generation rather than immediately ([#13653](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13653), [#14659](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14659))\r\n* Fullscreen Preview control fading/disable ([#14291](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14291))\r\n* Finer settings freezing control ([#13789](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13789))\r\n* Increase Upscaler Limits ([#14589](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14589))\r\n* Adjust brush size with hotkeys ([#14638](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14638))\r\n* Add checkpoint info to csv log file when saving images ([#14663](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14663))\r\n* Make more columns resizable ([#14740](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14740), [#14884](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14884))\r\n* Add an option to not overlay original image for inpainting for #14727\r\n* Add Pad conds v0 option to support same generation with DDIM as before 1.6.0\r\n* Add \"Interrupting...\" placeholder.\r\n* Button for refresh extensions list ([#14857](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14857))\r\n* Add an option to disable normalization after calculating emphasis. ([#14874](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14874))\r\n* When counting tokens, also include enabled styles (can be disabled in settings to revert to previous behavior)\r\n* Configuration for the [\ud83d\udcc2] button for image gallery ([#14947](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14947))\r\n* Support inference with LyCORIS BOFT networks ([#14871](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14871), [#14973](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14973))\r\n* support resizable columns for touch (tablets) ([#15002](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15002))\r\n\r\n### Extensions and API:\r\n* Removed packages from requirements: basicsr, gfpgan, realesrgan; as well as their dependencies: absl-py, addict, beautifulsoup4, future, gdown, grpcio, importlib-metadata, lmdb, lpips, Markdown, platformdirs, PySocks, soupsieve, tb-nightly, tensorboard-data-server, tomli, Werkzeug, yapf, zipp, soupsieve\r\n* Enable task ids for API ([#14314](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14314))\r\n* add override_settings support for infotext API\r\n* rename generation_parameters_copypaste module to infotext_utils\r\n* prevent crash due to Script __init__ exception ([#14407](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14407))\r\n* Bump numpy to 1.26.2 ([#14471](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14471))\r\n* Add utility to inspect a model's dtype/device ([#14478](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14478))\r\n* Implement general forward method for all method in built-in lora ext ([#14547](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14547))\r\n* Execute model_loaded_callback after moving to target device ([#14563](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14563))\r\n* Add self to CFGDenoiserParams ([#14573](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14573))\r\n* Allow TLS with API only mode (--nowebui) ([#14593](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14593))\r\n* New callback: postprocess_image_after_composite ([#14657](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14657))\r\n* modules/api/api.py: add api endpoint to refresh embeddings list ([#14715](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14715))\r\n* set_named_arg ([#14773](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14773))\r\n* add before_token_counter callback and use it for prompt comments\r\n* ResizeHandleRow - allow overridden column scale parameter ([#15004](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15004))\r\n\r\n### Performance:\r\n* Massive performance improvement for extra networks directories with a huge number of files in them in an attempt to tackle #14507 ([#14528](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14528))\r\n* Reduce unnecessary re-indexing extra networks directory ([#14512](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14512))\r\n* Avoid unnecessary `isfile`/`exists` calls ([#14527](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14527))\r\n\r\n### Bug Fixes:\r\n* fix multiple bugs related to styles multi-file support ([#14203](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14203), [#14276](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14276), [#14707](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14707))\r\n* Lora fixes ([#14300](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14300), [#14237](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14237), [#14546](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14546), [#14726](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14726))\r\n* Re-add setting lost as part of e294e46 ([#14266](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14266))\r\n* fix extras caption BLIP ([#14330](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14330))\r\n* include infotext into saved init image for img2img ([#14452](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14452))\r\n* xyz grid handle axis_type is None ([#14394](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14394))\r\n* Update Added (Fixed) IPV6 Functionality When there is No Webui Argument Passed webui.py ([#14354](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14354))\r\n* fix API thread safe issues of txt2img and img2img ([#14421](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14421))\r\n* handle selectable script_index is None ([#14487](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14487))\r\n* handle config.json failed to load ([#14525](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14525), [#14767](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14767))\r\n* paste infotext cast int as float ([#14523](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14523))\r\n* Ensure GRADIO_ANALYTICS_ENABLED is set early enough ([#14537](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14537))\r\n* Fix logging configuration again ([#14538](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14538))\r\n* Handle CondFunc exception when resolving attributes ([#14560](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14560))\r\n* Fix extras big batch crashes ([#14699](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14699))\r\n* Fix using wrong model caused by alias ([#14655](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14655))\r\n* Add # to the invalid_filename_chars list ([#14640](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14640))\r\n* Fix extension check for requirements ([#14639](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14639))\r\n* Fix tab indexes are reset after restart UI ([#14637](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14637))\r\n* Fix nested manual cast ([#14689](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14689))\r\n* Keep postprocessing upscale selected tab after restart ([#14702](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14702))\r\n* XYZ grid: filter out blank vals when axis is int or float type (like int axis seed) ([#14754](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14754))\r\n* fix CLIP Interrogator topN regex ([#14775](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14775))\r\n* Fix dtype error in MHA layer/change dtype checking mechanism for manual cast ([#14791](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14791))\r\n* catch load style.csv error ([#14814](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14814))\r\n* fix error when editing extra networks card\r\n* fix extra networks metadata failing to work properly when you create the .json file with metadata for the first time.\r\n* util.walk_files extensions case insensitive ([#14879](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14879))\r\n* if extensions page not loaded, prevent apply ([#14873](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14873))\r\n* call the right function for token counter in img2img\r\n* Fix the bugs that search/reload will disappear when using other ExtraNetworks extensions ([#14939](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14939))\r\n* Gracefully handle mtime read exception from cache ([#14933](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14933))\r\n* Only trigger interrupt on `Esc` when interrupt button visible ([#14932](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14932))\r\n* Disable prompt token counters option actually disables token counting rather than just hiding results.\r\n* avoid double upscaling in inpaint ([#14966](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14966))\r\n* Fix #14591 using translated content to do categories mapping ([#14995](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14995))\r\n* fix: the `split_threshold` parameter does not work when running Split oversized images ([#15006](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15006))\r\n* Fix resize-handle for mobile ([#15010](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15010), [#15065](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15065))\r\n\r\n### Other:\r\n* Assign id for \"extra_options\". Replace numeric field with slider. ([#14270](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14270))\r\n* change state dict comparison to ref compare ([#14216](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14216))\r\n* Bump torch-rocm to 5.6/5.7 ([#14293](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14293))\r\n* Base output path off data path ([#14446](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14446))\r\n* reorder training preprocessing modules in extras tab ([#14367](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14367))\r\n* Remove `cleanup_models` code ([#14472](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14472))\r\n* only rewrite ui-config when there is change ([#14352](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14352))\r\n* Fix lint issue from 501993eb ([#14495](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14495))\r\n* Update README.md ([#14548](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14548))\r\n* hires button, fix seeds ()\r\n* Logging: set formatter correctly for fallback logger too ([#14618](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14618))\r\n* Read generation info from infotexts rather than json for internal needs (save, extract seed from generated pic) ([#14645](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14645))\r\n* improve get_crop_region ([#14709](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14709))\r\n* Bump safetensors' version to 0.4.2 ([#14782](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14782))\r\n* add tooltip create_submit_box ([#14803](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14803))\r\n* extensions tab table row hover highlight ([#14885](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14885))\r\n* Always add timestamp to displayed image ([#14890](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14890))\r\n* Added core.filemode=false so doesn't track changes in file permission\u2026 ([#14930](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14930))\r\n* Normalize command-line argument paths ([#14934](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14934), [#15035](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15035))\r\n* Use original App Title in progress bar ([#14916](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14916))\r\n* register_tmp_file also for mtime ([#15012](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/15012))\r\n\r\n## 1.7.0\r\n\r\n### Features:\r\n* settings tab rework: add search field, add categories, split UI settings page into many\r\n* add altdiffusion-m18 support ([#13364](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13364))\r\n* support inference with LyCORIS GLora networks ([#13610](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13610))\r\n* add lora-embedding bundle system ([#13568](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13568))\r\n* option to move prompt from top row into generation parameters\r\n* add support for SSD-1B ([#13865](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13865))\r\n* support inference with OFT networks ([#13692](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13692))\r\n* script metadata and DAG sorting mechanism ([#13944](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13944))\r\n* support HyperTile optimization ([#13948](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13948))\r\n* add support for SD 2.1 Turbo ([#14170](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14170))\r\n* remove Train->Preprocessing tab and put all its functionality into Extras tab\r\n* initial IPEX support for Intel Arc GPU ([#14171](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14171))\r\n\r\n### Minor:\r\n* allow reading model hash from images in img2img batch mode ([#12767](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12767))\r\n* add option to align with sgm repo's sampling implementation ([#12818](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12818))\r\n* extra field for lora metadata viewer: `ss_output_name` ([#12838](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12838))\r\n* add action in settings page to calculate all SD checkpoint hashes ([#12909](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12909))\r\n* add button to copy prompt to style editor ([#12975](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12975))\r\n* add --skip-load-model-at-start option ([#13253](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13253))\r\n* write infotext to gif images\r\n* read infotext from gif images ([#13068](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13068))\r\n* allow configuring the initial state of InputAccordion in ui-config.json ([#13189](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13189))\r\n* allow editing whitespace delimiters for ctrl+up/ctrl+down prompt editing ([#13444](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13444))\r\n* prevent accidentally closing popup dialogs ([#13480](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13480))\r\n* added option to play notification sound or not ([#13631](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13631))\r\n* show the preview image in the full screen image viewer if available ([#13459](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13459))\r\n* support for webui.settings.bat ([#13638](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13638))\r\n* add an option to not print stack traces on ctrl+c\r\n* start/restart generation by Ctrl (Alt) + Enter ([#13644](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13644))\r\n* update prompts_from_file script to allow concatenating entries with the general prompt ([#13733](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13733))\r\n* added a visible checkbox to input accordion\r\n* added an option to hide all txt2img/img2img parameters in an accordion ([#13826](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13826))\r\n* added 'Path' sorting option for Extra network cards ([#13968](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13968))\r\n* enable prompt hotkeys in style editor ([#13931](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13931))\r\n* option to show batch img2img results in UI ([#14009](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14009))\r\n* infotext updates: add option to disregard certain infotext fields, add option to not include VAE in infotext, add explanation to infotext settings page, move some options to infotext settings page\r\n* add FP32 fallback support on sd_vae_approx ([#14046](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14046))\r\n* support XYZ scripts / split hires path from unet ([#14126](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14126))\r\n* allow use of multiple styles csv files ([#14125](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14125))\r\n* make extra network card description plaintext by default, with an option (Treat card description as HTML) to re-enable HTML as it was (originally by [#13241](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13241))\r\n\r\n### Extensions and API:\r\n* update gradio to 3.41.2\r\n* support installed extensions list api ([#12774](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12774))\r\n* update pnginfo API to return dict with parsed values\r\n* add noisy latent to `ExtraNoiseParams` for callback ([#12856](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12856))\r\n* show extension datetime in UTC ([#12864](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12864), [#12865](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12865), [#13281](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13281))\r\n* add an option to choose how to combine hires fix and refiner\r\n* include program version in info response. ([#13135](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13135))\r\n* sd_unet support for SDXL\r\n* patch DDPM.register_betas so that users can put given_betas in model yaml ([#13276](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13276))\r\n* xyz_grid: add prepare ([#13266](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13266))\r\n* allow multiple localization files with same language in extensions ([#13077](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13077))\r\n* add onEdit function for js and rework token-counter.js to use it\r\n* fix the key error exception when processing override_settings keys ([#13567](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13567))\r\n* ability for extensions to return custom data via api in response.images ([#13463](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13463))\r\n* call state.jobnext() before postproces*() ([#13762](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13762))\r\n* add option to set notification sound volume ([#13884](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13884))\r\n* update Ruff to 0.1.6 ([#14059](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14059))\r\n* add Block component creation callback ([#14119](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14119))\r\n* catch uncaught exception with ui creation scripts ([#14120](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14120))\r\n* use extension name for determining an extension is installed in the index ([#14063](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14063))\r\n* update is_installed() from launch_utils.py to fix reinstalling already installed packages ([#14192](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14192))\r\n\r\n### Bug Fixes:\r\n* fix pix2pix producing bad results\r\n* fix defaults settings page breaking when any of main UI tabs are hidden\r\n* fix error that causes some extra networks to be disabled if both <lora:> and <lyco:> are present in the prompt\r\n* fix for Reload UI function: if you reload UI on one tab, other opened tabs will no longer stop working\r\n* prevent duplicate resize handler ([#12795](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12795))\r\n* small typo: vae resolve bug ([#12797](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12797))\r\n* hide broken image crop tool ([#12792](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12792))\r\n* don't show hidden samplers in dropdown for XYZ script ([#12780](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12780))\r\n* fix style editing dialog breaking if it's opened in both img2img and txt2img tabs\r\n* hide --gradio-auth and --api-auth values from /internal/sysinfo report\r\n* add missing infotext for RNG in options ([#12819](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12819))\r\n* fix notification not playing when built-in webui tab is inactive ([#12834](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12834))\r\n* honor `--skip-install` for extension installers ([#12832](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12832))\r\n* don't print blank stdout in extension installers ([#12833](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12833), [#12855](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12855))\r\n* get progressbar to display correctly in extensions tab\r\n* keep order in list of checkpoints when loading model that doesn't have a checksum\r\n* fix inpainting models in txt2img creating black pictures\r\n* fix generation params regex ([#12876](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12876))\r\n* fix batch img2img output dir with script ([#12926](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12926))\r\n* fix #13080 - Hypernetwork/TI preview generation ([#13084](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13084))\r\n* fix bug with sigma min/max overrides. ([#12995](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12995))\r\n* more accurate check for enabling cuDNN benchmark on 16XX cards ([#12924](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12924))\r\n* don't use multicond parser for negative prompt counter ([#13118](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13118))\r\n* fix data-sort-name containing spaces ([#13412](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13412))\r\n* update card on correct tab when editing metadata ([#13411](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13411))\r\n* fix viewing/editing metadata when filename contains an apostrophe ([#13395](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13395))\r\n* fix: --sd_model in \"Prompts from file or textbox\" script is not working ([#13302](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13302))\r\n* better Support for Portable Git ([#13231](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13231))\r\n* fix issues when webui_dir is not work_dir ([#13210](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13210))\r\n* fix: lora-bias-backup don't reset cache ([#13178](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13178))\r\n* account for customizable extra network separators whyen removing extra network text from the prompt ([#12877](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12877))\r\n* re fix batch img2img output dir with script ([#13170](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13170))\r\n* fix `--ckpt-dir` path separator and option use `short name` for checkpoint dropdown ([#13139](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13139))\r\n* consolidated allowed preview formats, Fix extra network `.gif` not woking as preview ([#13121](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13121))\r\n* fix venv_dir=- environment variable not working as expected on linux ([#13469](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13469))\r\n* repair unload sd checkpoint button\r\n* edit-attention fixes ([#13533](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13533))\r\n* fix bug when using --gfpgan-models-path ([#13718](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13718))\r\n* properly apply sort order for extra network cards when selected from dropdown\r\n* fixes generation restart not working for some users when 'Ctrl+Enter' is pressed ([#13962](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13962))\r\n* thread safe extra network list_items ([#13014](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13014))\r\n* fix not able to exit metadata popup when pop up is too big ([#14156](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14156))\r\n* fix auto focal point crop for opencv >= 4.8 ([#14121](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14121))\r\n* make 'use-cpu all' actually apply to 'all' ([#14131](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14131))\r\n* extras tab batch: actually use original filename\r\n* make webui not crash when running with --disable-all-extensions option\r\n\r\n### Other:\r\n* non-local condition ([#12814](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12814))\r\n* fix minor typos ([#12827](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12827))\r\n* remove xformers Python version check ([#12842](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12842))\r\n* style: file-metadata word-break ([#12837](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12837))\r\n* revert SGM noise multiplier change for img2img because it breaks hires fix\r\n* do not change quicksettings dropdown option when value returned is `None` ([#12854](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12854))\r\n* [RC 1.6.0 - zoom is partly hidden] Update style.css ([#12839](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12839))\r\n* chore: change extension time format ([#12851](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12851))\r\n* WEBUI.SH - Use torch 2.1.0 release candidate for Navi 3 ([#12929](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12929))\r\n* add Fallback at images.read_info_from_image if exif data was invalid ([#13028](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13028))\r\n* update cmd arg description ([#12986](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12986))\r\n* fix: update shared.opts.data when add_option ([#12957](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12957), [#13213](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13213))\r\n* restore missing tooltips ([#12976](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12976))\r\n* use default dropdown padding on mobile ([#12880](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12880))\r\n* put enable console prompts option into settings from commandline args ([#13119](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13119))\r\n* fix some deprecated types ([#12846](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12846))\r\n* bump to torchsde==0.2.6 ([#13418](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13418))\r\n* update dragdrop.js ([#13372](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13372))\r\n* use orderdict as lru cache:opt/bug ([#13313](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13313))\r\n* XYZ if not include sub grids do not save sub grid ([#13282](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13282))\r\n* initialize state.time_start befroe state.job_count ([#13229](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13229))\r\n* fix fieldname regex ([#13458](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13458))\r\n* change denoising_strength default to None. ([#13466](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13466))\r\n* fix regression ([#13475](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13475))\r\n* fix IndexError ([#13630](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13630))\r\n* fix: checkpoints_loaded:{checkpoint:state_dict}, model.load_state_dict issue in dict value empty ([#13535](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13535))\r\n* update bug_report.yml ([#12991](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12991))\r\n* requirements_versions httpx==0.24.1 ([#13839](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13839))\r\n* fix parenthesis auto selection ([#13829](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13829))\r\n* fix #13796 ([#13797](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13797))\r\n* corrected a typo in `modules/cmd_args.py` ([#13855](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13855))\r\n* feat: fix randn found element of type float at pos 2 ([#14004](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14004))\r\n* adds tqdm handler to logging_config.py for progress bar integration ([#13996](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13996))\r\n* hotfix: call shared.state.end() after postprocessing done ([#13977](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13977))\r\n* fix dependency address patch 1 ([#13929](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13929))\r\n* save sysinfo as .json ([#14035](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14035))\r\n* move exception_records related methods to errors.py ([#14084](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14084))\r\n* compatibility ([#13936](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13936))\r\n* json.dump(ensure_ascii=False) ([#14108](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14108))\r\n* dir buttons start with / so only the correct dir will be shown and no\u2026 ([#13957](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13957))\r\n* alternate implementation for unet forward replacement that does not depend on hijack being applied\r\n* re-add `keyedit_delimiters_whitespace` setting lost as part of commit e294e46 ([#14178](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14178))\r\n* fix `save_samples` being checked early when saving masked composite ([#14177](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14177))\r\n* slight optimization for mask and mask_composite ([#14181](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14181))\r\n* add import_hook hack to work around basicsr/torchvision incompatibility ([#14186](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/14186))\r\n\r\n## 1.6.1\r\n\r\n### Bug Fixes:\r\n * fix an error causing the webui to fail to start ([#13839](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/13839))\r\n\r\n## 1.6.0\r\n\r\n### Features:\r\n * refiner support [#12371](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12371)\r\n * add NV option for Random number generator source setting, which allows to generate same pictures on CPU/AMD/Mac as on NVidia videocards\r\n * add style editor dialog\r\n * hires fix: add an option to use a different checkpoint for second pass ([#12181](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12181))\r\n * option to keep multiple loaded models in memory ([#12227](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12227))\r\n * new samplers: Restart, DPM++ 2M SDE Exponential, DPM++ 2M SDE Heun, DPM++ 2M SDE Heun Karras, DPM++ 2M SDE Heun Exponential, DPM++ 3M SDE, DPM++ 3M SDE Karras, DPM++ 3M SDE Exponential ([#12300](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12300), [#12519](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12519), [#12542](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12542))\r\n * rework DDIM, PLMS, UniPC to use CFG denoiser same as in k-diffusion samplers:\r\n   * makes all of them work with img2img\r\n   * makes prompt composition possible (AND)\r\n   * makes them available for SDXL\r\n * always show extra networks tabs in the UI ([#11808](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/11808))\r\n * use less RAM when creating models ([#11958](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/11958), [#12599](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12599))\r\n * textual inversion inference support for SDXL\r\n * extra networks UI: show metadata for SD checkpoints\r\n * checkpoint merger: add metadata support \r\n * prompt editing and attention: add support for whitespace after the number ([ red : green : 0.5 ]) (seed breaking change) ([#12177](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12177))\r\n * VAE: allow selecting own VAE for each checkpoint (in user metadata editor)\r\n * VAE: add selected VAE to infotext\r\n * options in main UI: add own separate setting for txt2img and img2img, correctly read values from pasted infotext, add setting for column count ([#12551](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12551))\r\n * add resize handle to txt2img and img2img tabs, allowing to change the amount of horizontable space given to generation parameters and resulting image gallery ([#12687](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12687), [#12723](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12723))\r\n * change default behavior for batching cond/uncond -- now it's on by default, and is disabled by an UI setting (Optimizatios -> Batch cond/uncond) - if you are on lowvram/medvram and are getting OOM exceptions, you will need to enable it\r\n * show current position in queue and make it so that requests are processed in the order of arrival ([#12707](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12707))\r\n * add `--medvram-sdxl` flag that only enables `--medvram` for SDXL models\r\n * prompt editing timeline has separate range for first pass and hires-fix pass (seed breaking change) ([#12457](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12457))\r\n\r\n### Minor:\r\n * img2img batch: RAM savings, VRAM savings, .tif, .tiff in img2img batch ([#12120](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12120), [#12514](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12514), [#12515](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12515))\r\n * postprocessing/extras: RAM savings ([#12479](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12479))\r\n * XYZ: in the axis labels, remove pathnames from model filenames\r\n * XYZ: support hires sampler ([#12298](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12298))\r\n * XYZ: new option: use text inputs instead of dropdowns ([#12491](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12491))\r\n * add gradio version warning\r\n * sort list of VAE checkpoints ([#12297](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12297))\r\n * use transparent white for mask in inpainting, along with an option to select the color ([#12326](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12326))\r\n * move some settings to their own section: img2img, VAE\r\n * add checkbox to show/hide dirs for extra networks\r\n * Add TAESD(or more) options for all the VAE encode/decode operation ([#12311](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12311))\r\n * gradio theme cache, new gradio themes, along with explanation that the user can input his own values ([#12346](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12346), [#12355](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12355))\r\n * sampler fixes/tweaks: s_tmax, s_churn, s_noise, s_tmax ([#12354](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12354), [#12356](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12356), [#12357](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12357), [#12358](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12358), [#12375](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12375), [#12521](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12521))\r\n * update README.md with correct instructions for Linux installation ([#12352](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12352))\r\n * option to not save incomplete images, on by default ([#12338](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12338))\r\n * enable cond cache by default\r\n * git autofix for repos that are corrupted ([#12230](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12230))\r\n * allow to open images in new browser tab by middle mouse button ([#12379](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12379))\r\n * automatically open webui in browser when running \"locally\" ([#12254](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12254))\r\n * put commonly used samplers on top, make DPM++ 2M Karras the default choice\r\n * zoom and pan: option to auto-expand a wide image, improved integration ([#12413](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12413), [#12727](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12727))\r\n * option to cache Lora networks in memory\r\n * rework hires fix UI to use accordion\r\n * face restoration and tiling moved to settings - use \"Options in main UI\" setting if you want them back\r\n * change quicksettings items to have variable width\r\n * Lora: add Norm module, add support for bias ([#12503](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12503))\r\n * Lora: output warnings in UI rather than fail for unfitting loras; switch to logging for error output in console\r\n * support search and display of hashes for all extra network items ([#12510](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12510))\r\n * add extra noise param for img2img operations ([#12564](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12564))\r\n * support for Lora with bias ([#12584](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12584))\r\n * make interrupt quicker ([#12634](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12634))\r\n * configurable gallery height ([#12648](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12648))\r\n * make results column sticky ([#12645](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12645))\r\n * more hash filename patterns ([#12639](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12639))\r\n * make image viewer actually fit the whole page ([#12635](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12635))\r\n * make progress bar work independently from live preview display which results in it being updated a lot more often\r\n * forbid Full live preview method for medvram and add a setting to undo the forbidding\r\n * make it possible to localize tooltips and placeholders\r\n * add option to align with sgm repo's sampling implementation ([#12818](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12818))\r\n * Restore faces and Tiling generation parameters have been moved to settings out of main UI\r\n   * if you want to put them back into main UI, use `Options in main UI` setting on the UI page.\r\n\r\n### Extensions and API:\r\n * gradio 3.41.2\r\n * also bump versions for packages: transformers, GitPython, accelerate, scikit-image, timm, tomesd\r\n * support tooltip kwarg for gradio elements: gr.Textbox(label='hello', tooltip='world')\r\n * properly clear the total console progressbar when using txt2img and img2img from API\r\n * add cmd_arg --disable-extra-extensions and --disable-all-extensions ([#12294](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12294))\r\n * shared.py and webui.py split into many files\r\n * add --loglevel commandline argument for logging\r\n * add a custom UI element that combines accordion and checkbox\r\n * avoid importing gradio in tests because it spams warnings\r\n * put infotext label for setting into OptionInfo definition rather than in a separate list\r\n * make `StableDiffusionProcessingImg2Img.mask_blur` a property, make more inline with PIL `GaussianBlur` ([#12470](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12470))\r\n * option to make scripts UI without gr.Group\r\n * add a way for scripts to register a callback for before/after just a single component's creation\r\n * use dataclass for StableDiffusionProcessing\r\n * store patches for Lora in a specialized module instead of inside torch\r\n * support http/https URLs in API ([#12663](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12663), [#12698](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12698))\r\n * add extra noise callback ([#12616](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12616))\r\n * dump current stack traces when exiting with SIGINT\r\n * add type annotations for extra fields of shared.sd_model\r\n\r\n### Bug Fixes:\r\n * Don't crash if out of local storage quota for javascriot localStorage\r\n * XYZ plot do not fail if an exception occurs\r\n * fix missing TI hash in infotext if generation uses both negative and positive TI ([#12269](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12269))\r\n * localization fixes ([#12307](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12307))\r\n * fix sdxl model invalid configuration after the hijack\r\n * correctly toggle extras checkbox for infotext paste ([#12304](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12304))\r\n * open raw sysinfo link in new page ([#12318](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12318))\r\n * prompt parser: Account for empty field in alternating words syntax ([#12319](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12319))\r\n * add tab and carriage return to invalid filename chars ([#12327](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12327))\r\n * fix api only Lora not working ([#12387](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12387))\r\n * fix options in main UI misbehaving when there's just one element\r\n * make it possible to use a sampler from infotext even if it's hidden in the dropdown\r\n * fix styles missing from the prompt in infotext when making a grid of batch of multiplie images\r\n * prevent bogus progress output in console when calculating hires fix dimensions\r\n * fix --use-textbox-seed\r\n * fix broken `Lora/Networks: use old method` option ([#12466](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12466))\r\n * properly return `None` for VAE hash when using `--no-hashing` ([#12463](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12463))\r\n * MPS/macOS fixes and optimizations ([#12526](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12526))\r\n * add second_order to samplers that mistakenly didn't have it\r\n * when refreshing cards in extra networks UI, do not discard user's custom resolution\r\n * fix processing error that happens if batch_size is not a multiple of how many prompts/negative prompts there are ([#12509](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12509))\r\n * fix inpaint upload for alpha masks ([#12588](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12588))\r\n * fix exception when image sizes are not integers ([#12586](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12586))\r\n * fix incorrect TAESD Latent scale ([#12596](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12596))\r\n * auto add data-dir to gradio-allowed-path ([#12603](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12603))\r\n * fix exception if extensuions dir is missing ([#12607](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12607))\r\n * fix issues with api model-refresh and vae-refresh ([#12638](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12638))\r\n * fix img2img background color for transparent images option not being used ([#12633](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12633))\r\n * attempt to resolve NaN issue with unstable VAEs in fp32 mk2 ([#12630](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12630))\r\n * implement missing undo hijack for SDXL\r\n * fix xyz swap axes ([#12684](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12684))\r\n * fix errors in backup/restore tab if any of config files are broken ([#12689](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12689))\r\n * fix SD VAE switch error after model reuse ([#12685](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12685))\r\n * fix trying to create images too large for the chosen format ([#12667](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12667))\r\n * create Gradio temp directory if necessary ([#12717](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12717))\r\n * prevent possible cache loss if exiting as it's being written by using an atomic operation to replace the cache with the new version\r\n * set devices.dtype_unet correctly\r\n * run RealESRGAN on GPU for non-CUDA devices ([#12737](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12737))\r\n * prevent extra network buttons being obscured by description for very small card sizes ([#12745](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12745))\r\n * fix error that causes some extra networks to be disabled if both <lora:> and <lyco:> are present in the prompt\r\n * fix defaults settings page breaking when any of main UI tabs are hidden\r\n * fix incorrect save/display of new values in Defaults page in settings\r\n * fix for Reload UI function: if you reload UI on one tab, other opened tabs will no longer stop working\r\n * fix an error that prevents VAE being reloaded after an option change if a VAE near the checkpoint exists ([#12797](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12737))\r\n * hide broken image crop tool ([#12792](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12737))\r\n * don't show hidden samplers in dropdown for XYZ script ([#12780](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12737))\r\n * fix style editing dialog breaking if it's opened in both img2img and txt2img tabs\r\n * fix a bug allowing users to bypass gradio and API authentication (reported by vysecurity) \r\n * fix notification not playing when built-in webui tab is inactive ([#12834](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12834))\r\n * honor `--skip-install` for extension installers ([#12832](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12832))\r\n * don't print blank stdout in extension installers ([#12833](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12832), [#12855](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12855))\r\n * do not change quicksettings dropdown option when value returned is `None` ([#12854](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/12854))\r\n * get progressbar to display correctly in extensions tab\r\n\r\n\r\n## 1.5.2\r\n\r\n### Bug Fixes:\r\n * fix memory leak when generation fails\r\n * update doggettx cross attention optimization to not use an unreasonable amount of memory in some edge cases -- suggestion by MorkTheOrk\r\n\r\n\r\n## 1.5.1\r\n\r\n### Minor:\r\n * support parsing text encoder blocks in some new LoRAs\r\n * delete scale checker script due to user demand\r\n\r\n### Extensions and API:\r\n * add postprocess_batch_list script callback\r\n\r\n### Bug Fixes:\r\n * fix TI training for SD1\r\n * fix reload altclip model error\r\n * prepend the pythonpath instead of overriding it\r\n * fix typo in SD_WEBUI_RESTARTING\r\n * if txt2img/img2img raises an exception, finally call state.end()\r\n * fix composable diffusion weight parsing\r\n * restyle Startup profile for black users\r\n * fix webui not launching with --nowebui\r\n * catch exception for non git extensions\r\n * fix some options missing from /sdapi/v1/options\r\n * fix for extension update status always saying \"unknown\"\r\n * fix display of extra network cards that have `<>` in the name\r\n * update lora extension to work with python 3.8\r\n\r\n\r\n## 1.5.0\r\n\r\n### Features:\r\n * SD XL support\r\n * user metadata system for custom networks\r\n * extended Lora metadata editor: set activation text, default weight, view tags, training info\r\n * Lora extension rework to include other types of networks (all that were previously handled by LyCORIS extension)\r\n * show github stars for extensions\r\n * img2img batch mode can read extra stuff from png info\r\n * img2img batch works with subdirectories\r\n * hotkeys to move prompt elements: alt+left/right\r\n * restyle time taken/VRAM display\r\n * add textual inversion hashes to infotext\r\n * optimization: cache git extension repo information\r\n * move generate button next to the generated picture for mobile clients\r\n * hide cards for networks of incompatible Stable Diffusion version in Lora extra networks interface\r\n * skip installing packages with pip if they all are already installed - startup speedup of about 2 seconds\r\n\r\n### Minor:\r\n * checkbox to check/uncheck all extensions in the Installed tab\r\n * add gradio user to infotext and to filename patterns\r\n * allow gif for extra network previews\r\n * add options to change colors in grid\r\n * use natural sort for items in extra networks\r\n * Mac: use empty_cache() from torch 2 to clear VRAM\r\n * added automatic support for installing the right libraries for Navi3 (AMD)\r\n * add option SWIN_torch_compile to accelerate SwinIR upscale\r\n * suppress printing TI embedding info at start to console by default\r\n * speedup extra networks listing\r\n * added `[none]` filename token.\r\n * removed thumbs extra networks view mode (use settings tab to change width/height/scale to get thumbs)\r\n * add always_discard_next_to_last_sigma option to XYZ plot\r\n * automatically switch to 32-bit float VAE if the generated picture has NaNs without the need for `--no-half-vae` commandline flag.\r\n \r\n### Extensions and API:\r\n * api endpoints: /sdapi/v1/server-kill, /sdapi/v1/server-restart, /sdapi/v1/server-stop\r\n * allow Script to have custom metaclass\r\n * add model exists status check /sdapi/v1/options\r\n * rename --add-stop-route to --api-server-stop\r\n * add `before_hr` script callback\r\n * add callback `after_extra_networks_activate`\r\n * disable rich exception output in console for API by default, use WEBUI_RICH_EXCEPTIONS env var to enable\r\n * return http 404 when thumb file not found\r\n * allow replacing extensions index with environment variable\r\n \r\n### Bug Fixes:\r\n * fix for catch errors when retrieving extension index #11290\r\n * fix very slow loading speed of .safetensors files when reading from network drives\r\n * API cache cleanup\r\n * fix UnicodeEncodeError when writing to file CLIP Interrogator batch mode\r\n * fix warning of 'has_mps' deprecated from PyTorch\r\n * fix problem with extra network saving images as previews losing generation info\r\n * fix throwing exception when trying to resize image with I;16 mode\r\n * fix for #11534: canvas zoom and pan extension hijacking shortcut keys\r\n * fixed launch script to be runnable from any directory\r\n * don't add \"Seed Resize: -1x-1\" to API image metadata\r\n * correctly remove end parenthesis with ctrl+up/down\r\n * fixing --subpath on newer gradio version\r\n * fix: check fill size none zero when resize  (fixes #11425)\r\n * use submit and blur for quick settings textbox\r\n * save img2img batch with images.save_image()\r\n * prevent running preload.py for disabled extensions\r\n * fix: previously, model name was added together with directory name to infotext and to [model_name] filename pattern; directory name is now not included\r\n\r\n\r\n## 1.4.1\r\n\r\n### Bug Fixes:\r\n * add queue lock for refresh-checkpoints\r\n\r\n## 1.4.0\r\n\r\n### Features:\r\n * zoom controls for inpainting\r\n * run basic torch calculation at startup in parallel to reduce the performance impact of first generation\r\n * option to pad prompt/neg prompt to be same length\r\n * remove taming_transformers dependency\r\n * custom k-diffusion scheduler settings\r\n * add an option to show selected settings in main txt2img/img2img UI\r\n * sysinfo tab in settings\r\n * infer styles from prompts when pasting params into the UI\r\n * an option to control the behavior of the above\r\n\r\n### Minor:\r\n * bump Gradio to 3.32.0\r\n * bump xformers to 0.0.20\r\n * Add option to disable token counters\r\n * tooltip fixes & optimizations\r\n * make it possible to configure filename for the zip download\r\n * `[vae_filename]` pattern for filenames\r\n * Revert discarding penultimate sigma for DPM-Solver++(2M) SDE\r\n * change UI reorder setting to multiselect\r\n * read version info form CHANGELOG.md if git version info is not available\r\n * link footer API to Wiki when API is not active\r\n * persistent conds cache (opt-in optimization)\r\n \r\n### Extensions:\r\n * After installing extensions, webui properly restarts the process rather than reloads the UI \r\n * Added VAE listing to web API. Via: /sdapi/v1/sd-vae\r\n * custom unet support\r\n * Add onAfterUiUpdate callback\r\n * refactor EmbeddingDatabase.register_embedding() to allow unregistering\r\n * add before_process callback for scripts\r\n * add ability for alwayson scripts to specify section and let user reorder those sections\r\n \r\n### Bug Fixes:\r\n * Fix dragging text to prompt\r\n * fix incorrect quoting for infotext values with colon in them\r\n * fix \"hires. fix\" prompt sharing same labels with txt2img_prompt\r\n * Fix s_min_uncond default type int\r\n * Fix for #10643 (Inpainting mask sometimes not working)\r\n * fix bad styling for thumbs view in extra networks #10639\r\n * fix for empty list of optimizations #10605\r\n * small fixes to prepare_tcmalloc for Debian/Ubuntu compatibility\r\n * fix --ui-debug-mode exit\r\n * patch GitPython to not use leaky persistent processes\r\n * fix duplicate Cross attention optimization after UI reload\r\n * torch.cuda.is_available() check for SdOptimizationXformers\r\n * fix hires fix using wrong conds in second pass if using Loras.\r\n * handle exception when parsing generation parameters from png info\r\n * fix upcast attention dtype error\r\n * forcing Torch Version to 1.13.1 for RX 5000 series GPUs\r\n * split mask blur into X and Y components, patch Outpainting MK2 accordingly\r\n * don't die when a LoRA is a broken symlink\r\n * allow activation of Generate Forever during generation\r\n\r\n\r\n## 1.3.2\r\n\r\n### Bug Fixes:\r\n * fix files served out of tmp directory even if they are saved to disk\r\n * fix postprocessing overwriting parameters\r\n\r\n## 1.3.1\r\n\r\n### Features:\r\n * revert default cross attention optimization to Doggettx\r\n\r\n### Bug Fixes:\r\n * fix bug: LoRA don't apply on dropdown list sd_lora\r\n * fix png info always added even if setting is not enabled\r\n * fix some fields not applying in xyz plot\r\n * fix \"hires. fix\" prompt sharing same labels with txt2img_prompt\r\n * fix lora hashes not being added properly to infotex if there is only one lora\r\n * fix --use-cpu failing to work properly at startup\r\n * make --disable-opt-split-attention command line option work again\r\n\r\n## 1.3.0\r\n\r\n### Features:\r\n * add UI to edit defaults\r\n * token merging (via dbolya/tomesd)\r\n * settings tab rework: add a lot of additional explanations and links\r\n * load extensions' Git metadata in parallel to loading the main program to save a ton of time during startup\r\n * update extensions table: show branch, show date in separate column, and show version from tags if available\r\n * TAESD - another option for cheap live previews\r\n * allow choosing sampler and prompts for second pass of hires fix - hidden by default, enabled in settings\r\n * calculate hashes for Lora\r\n * add lora hashes to infotext\r\n * when pasting infotext, use infotext's lora hashes to find local loras for `<lora:xxx:1>` entries whose hashes match loras the user has\r\n * select cross attention optimization from UI\r\n\r\n### Minor:\r\n * bump Gradio to 3.31.0\r\n * bump PyTorch to 2.0.1 for macOS and Linux AMD\r\n * allow setting defaults for elements in extensions' tabs\r\n * allow selecting file type for live previews\r\n * show \"Loading...\" for extra networks when displaying for the first time\r\n * suppress ENSD infotext for samplers that don't use it\r\n * clientside optimizations\r\n * add options to show/hide hidden files and dirs in extra networks, and to not list models/files in hidden directories\r\n * allow whitespace in styles.csv\r\n * add option to reorder tabs\r\n * move some functionality (swap resolution and set seed to -1) to client\r\n * option to specify editor height for img2img\r\n * button to copy image resolution into img2img width/height sliders\r\n * switch from pyngrok to ngrok-py\r\n * lazy-load images in extra networks UI\r\n * set \"Navigate image viewer with gamepad\" option to false by default, by request\r\n * change upscalers to download models into user-specified directory (from commandline args) rather than the default models/<...>\r\n * allow hiding buttons in ui-config.json\r\n\r\n### Extensions:\r\n * add /sdapi/v1/script-info api\r\n * use Ruff to lint Python code\r\n * use ESlint to lint Javascript code\r\n * add/modify CFG callbacks for Self-Attention Guidance extension\r\n * add command and endpoint for graceful server stopping\r\n * add some locals (prompts/seeds/etc) from processing function into the Processing class as fields\r\n * rework quoting for infotext items that have commas in them to use JSON (should be backwards compatible except for cases where it didn't work previously)\r\n * add /sdapi/v1/refresh-loras api checkpoint post request\r\n * tests overhaul\r\n\r\n### Bug Fixes:\r\n * fix an issue preventing the program from starting if the user specifies a bad Gradio theme\r\n * fix broken prompts from file script\r\n * fix symlink scanning for extra networks\r\n * fix --data-dir ignored when launching via webui-user.bat COMMANDLINE_ARGS\r\n * allow web UI to be ran fully offline\r\n * fix inability to run with --freeze-settings\r\n * fix inability to merge checkpoint without adding metadata\r\n * fix extra networks' save preview image not adding infotext for jpeg/webm\r\n * remove blinking effect from text in hires fix and scale resolution preview\r\n * make links to `http://<...>.git` extensions work in the extension tab\r\n * fix bug with webui hanging at startup due to hanging git process\r\n\r\n\r\n## 1.2.1\r\n\r\n### Features:\r\n * add an option to always refer to LoRA by filenames\r\n\r\n### Bug Fixes:\r\n * never refer to LoRA by an alias if multiple LoRAs have same alias or the alias is called none\r\n * fix upscalers disappearing after the user reloads UI\r\n * allow bf16 in safe unpickler (resolves problems with loading some LoRAs)\r\n * allow web UI to be ran fully offline\r\n * fix localizations not working\r\n * fix error for LoRAs: `'LatentDiffusion' object has no attribute 'lora_layer_mapping'`\r\n\r\n## 1.2.0\r\n\r\n### Features:\r\n * do not wait for Stable Diffusion model to load at startup\r\n * add filename patterns: `[denoising]`\r\n * directory hiding for extra networks: dirs starting with `.` will hide their cards on extra network tabs unless specifically searched for\r\n * LoRA: for the `<...>` text in prompt, use name of LoRA that is in the metadata of the file, if present, instead of filename (both can be used to activate LoRA)\r\n * LoRA: read infotext params from kohya-ss's extension parameters if they are present and if his extension is not active\r\n * LoRA: fix some LoRAs not working (ones that have 3x3 convolution layer)\r\n * LoRA: add an option to use old method of applying LoRAs (producing same results as with kohya-ss)\r\n * add version to infotext, footer and console output when starting\r\n * add links to wiki for filename pattern settings\r\n * add extended info for quicksettings setting and use multiselect input instead of a text field\r\n\r\n### Minor:\r\n * bump Gradio to 3.29.0\r\n * bump PyTorch to 2.0.1\r\n * `--subpath` option for gradio for use with reverse proxy\r\n * Linux/macOS: use existing virtualenv if already active (the VIRTUAL_ENV environment variable)\r\n * do not apply localizations if there are none (possible frontend optimization)\r\n * add extra `None` option for VAE in XYZ plot\r\n * print error to console when batch processing in img2img fails\r\n * create HTML for extra network pages only on demand\r\n * allow directories starting with `.` to still list their models for LoRA, checkpoints, etc\r\n * put infotext options into their own category in settings tab\r\n * do not show licenses page when user selects Show all pages in settings\r\n\r\n### Extensions:\r\n * tooltip localization support\r\n * add API method to get LoRA models with prompt\r\n\r\n### Bug Fixes:\r\n * re-add `/docs` endpoint\r\n * fix gamepad navigation\r\n * make the lightbox fullscreen image function properly\r\n * fix squished thumbnails in extras tab\r\n * keep \"search\" filter for extra networks when user refreshes the tab (previously it showed everything after you refreshed)\r\n * fix webui showing the same image if you configure the generation to always save results into same file\r\n * fix bug with upscalers not working properly\r\n * fix MPS on PyTorch 2.0.1, Intel Macs\r\n * make it so that custom context menu from contextMenu.js only disappears after user's click, ignoring non-user click events\r\n * prevent Reload UI button/link from reloading the page when it's not yet ready\r\n * fix prompts from file script failing to read contents from a drag/drop file\r\n\r\n\r\n## 1.1.1\r\n### Bug Fixes:\r\n * fix an error that prevents running webui on PyTorch<2.0 without --disable-safe-unpickle\r\n\r\n## 1.1.0\r\n### Features:\r\n * switch to PyTorch 2.0.0 (except for AMD GPUs)\r\n * visual improvements to custom code scripts\r\n * add filename patterns: `[clip_skip]`, `[hasprompt<>]`, `[batch_number]`, `[generation_number]`\r\n * add support for saving init images in img2img, and record their hashes in infotext for reproducibility\r\n * automatically select current word when adjusting weight with ctrl+up/down\r\n * add dropdowns for X/Y/Z plot\r\n * add setting: Stable Diffusion/Random number generator source: makes it possible to make images generated from a given manual seed consistent across different GPUs\r\n * support Gradio's theme API\r\n * use TCMalloc on Linux by default; possible fix for memory leaks\r\n * add optimization option to remove negative conditioning at low sigma values #9177\r\n * embed model merge metadata in .safetensors file\r\n * extension settings backup/restore feature #9169\r\n * add \"resize by\" and \"resize to\" tabs to img2img\r\n * add option \"keep original size\" to textual inversion images preprocess\r\n * image viewer scrolling via analog stick\r\n * button to restore the progress from session lost / tab reload\r\n\r\n### Minor:\r\n * bump Gradio to 3.28.1\r\n * change \"scale to\" to sliders in Extras tab\r\n * add labels to tool buttons to make it possible to hide them\r\n * add tiled inference support for ScuNET\r\n * add branch support for extension installation\r\n * change Linux installation script to install into current directory rather than `/home/username`\r\n * sort textual inversion embeddings by name (case-insensitive)\r\n * allow styles.csv to be symlinked or mounted in docker\r\n * remove the \"do not add watermark to images\" option\r\n * make selected tab configurable with UI config\r\n * make the extra networks UI fixed height and scrollable\r\n * add `disable_tls_verify` arg for use with self-signed certs\r\n\r\n### Extensions:\r\n * add reload callback\r\n * add `is_hr_pass` field for processing\r\n\r\n### Bug Fixes:\r\n * fix broken batch image processing on 'Extras/Batch Process' tab\r\n * add \"None\" option to extra networks dropdowns\r\n * fix FileExistsError for CLIP Interrogator\r\n * fix /sdapi/v1/txt2img endpoint not working on Linux #9319\r\n * fix disappearing live previews and progressbar during slow tasks\r\n * fix fullscreen image view not working properly in some cases\r\n * prevent alwayson_scripts args param resizing script_arg list when they are inserted in it\r\n * fix prompt schedule for second order samplers\r\n * fix image mask/composite for weird resolutions #9628\r\n * use correct images for previews when using AND (see #9491)\r\n * one broken image in img2img batch won't stop all processing\r\n * fix image orientation bug in train/preprocess\r\n * fix Ngrok recreating tunnels every reload\r\n * fix `--realesrgan-models-path` and `--ldsr-models-path` not working\r\n * fix `--skip-install` not working\r\n * use SAMPLE file format in Outpainting Mk2 & Poorman\r\n * do not fail all LoRAs if some have failed to load when making a picture\r\n\r\n## 1.0.0\r\n  * everything\r\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "LICENSE.txt", "size": 35240, "license": "AGPL-3.0", "content_sha": "1457754386456039688ccf0f6268dfcc2a94587c", "findings": [], "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\r\n                       Version 3, 19 November 2007\r\n\r\n                    Copyright (c) 2023 AUTOMATIC1111\r\n\r\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\r\n Everyone is permitted to copy and distribute verbatim copies\r\n of this license document, but changing it is not allowed.\r\n\r\n                            Preamble\r\n\r\n  The GNU Affero General Public License is a free, copyleft license for\r\nsoftware and other kinds of works, specifically designed to ensure\r\ncooperation with the community in the case of network server software.\r\n\r\n  The licenses for most software and other practical works are designed\r\nto take away your freedom to share and change the works.  By contrast,\r\nour General Public Licenses are intended to guarantee your freedom to\r\nshare and change all versions of a program--to make sure it remains free\r\nsoftware for all its users.\r\n\r\n  When we speak of free software, we are referring to freedom, not\r\nprice.  Our General Public Licenses are designed to make sure that you\r\nhave the freedom to distribute copies of free software (and charge for\r\nthem if you wish), that you receive source code or can get it if you\r\nwant it, that you can change the software or use pieces of it in new\r\nfree programs, and that you know you can do these things.\r\n\r\n  Developers that use our General Public Licenses protect your rights\r\nwith two steps: (1) assert copyright on the software, and (2) offer\r\nyou this License which gives you legal permission to copy, distribute\r\nand/or modify the software.\r\n\r\n  A secondary benefit of defending all users' freedom is that\r\nimprovements made in alternate versions of the program, if they\r\nreceive widespread use, become available for other developers to\r\nincorporate.  Many developers of free software are heartened and\r\nencouraged by the resulting cooperation.  However, in the case of\r\nsoftware used on network servers, this result may fail to come about.\r\nThe GNU General Public License permits making a modified version and\r\nletting the public access it on a server without ever releasing its\r\nsource code to the public.\r\n\r\n  The GNU Affero General Public License is designed specifically to\r\nensure that, in such cases, the modified source code becomes available\r\nto the community.  It requires the operator of a network server to\r\nprovide the source code of the modified version running there to the\r\nusers of that server.  Therefore, public use of a modified version, on\r\na publicly accessible server, gives the public access to the source\r\ncode of the modified version.\r\n\r\n  An older license, called the Affero General Public License and\r\npublished by Affero, was designed to accomplish similar goals.  This is\r\na different license, not a version of the Affero GPL, but Affero has\r\nreleased a new version of the Affero GPL which permits relicensing under\r\nthis license.\r\n\r\n  The precise terms and conditions for copying, distribution and\r\nmodification follow.\r\n\r\n                       TERMS AND CONDITIONS\r\n\r\n  0. Definitions.\r\n\r\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\r\n\r\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\r\nworks, such as semiconductor masks.\r\n\r\n  \"The Program\" refers to any copyrightable work licensed under this\r\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\r\n\"recipients\" may be individuals or organizations.\r\n\r\n  To \"modify\" a work means to copy from or adapt all or part of the work\r\nin a fashion requiring copyright permission, other than the making of an\r\nexact copy.  The resulting work is called a \"modified version\" of the\r\nearlier work or a work \"based on\" the earlier work.\r\n\r\n  A \"covered work\" means either the unmodified Program or a work based\r\non the Program.\r\n\r\n  To \"propagate\" a work means to do anything with it that, without\r\npermission, would make you directly or secondarily liable for\r\ninfringement under applicable copyright law, except executing it on a\r\ncomputer or modifying a private copy.  Propagation includes copying,\r\ndistribution (with or without modification), making available to the\r\npublic, and in some countries other activities as well.\r\n\r\n  To \"convey\" a work means any kind of propagation that enables other\r\nparties to make or receive copies.  Mere interaction with a user through\r\na computer network, with no transfer of a copy, is not conveying.\r\n\r\n  An interactive user interface displays \"Appropriate Legal Notices\"\r\nto the extent that it includes a convenient and prominently visible\r\nfeature that (1) displays an appropriate copyright notice, and (2)\r\ntells the user that there is no warranty for the work (except to the\r\nextent that warranties are provided), that licensees may convey the\r\nwork under this License, and how to view a copy of this License.  If\r\nthe interface presents a list of user commands or options, such as a\r\nmenu, a prominent item in the list meets this criterion.\r\n\r\n  1. Source Code.\r\n\r\n  The \"source code\" for a work means the preferred form of the work\r\nfor making modifications to it.  \"Object code\" means any non-source\r\nform of a work.\r\n\r\n  A \"Standard Interface\" means an interface that either is an official\r\nstandard defined by a recognized standards body, or, in the case of\r\ninterfaces specified for a particular programming language, one that\r\nis widely used among developers working in that language.\r\n\r\n  The \"System Libraries\" of an executable work include anything, other\r\nthan the work as a whole, that (a) is included in the normal form of\r\npackaging a Major Component, but which is not part of that Major\r\nComponent, and (b) serves only to enable use of the work with that\r\nMajor Component, or to implement a Standard Interface for which an\r\nimplementation is available to the public in source code form.  A\r\n\"Major Component\", in this context, means a major essential component\r\n(kernel, window system, and so on) of the specific operating system\r\n(if any) on which the executable work runs, or a compiler used to\r\nproduce the work, or an object code interpreter used to run it.\r\n\r\n  The \"Corresponding Source\" for a work in object code form means all\r\nthe source code needed to generate, install, and (for an executable\r\nwork) run the object code and to modify the work, including scripts to\r\ncontrol those activities.  However, it does not include the work's\r\nSystem Libraries, or general-purpose tools or generally available free\r\nprograms which are used unmodified in performing those activities but\r\nwhich are not part of the work.  For example, Corresponding Source\r\nincludes interface definition files associated with source files for\r\nthe work, and the source code for shared libraries and dynamically\r\nlinked subprograms that the work is specifically designed to require,\r\nsuch as by intimate data communication or control flow between those\r\nsubprograms and other parts of the work.\r\n\r\n  The Corresponding Source need not include anything that users\r\ncan regenerate automatically from other parts of the Corresponding\r\nSource.\r\n\r\n  The Corresponding Source for a work in source code form is that\r\nsame work.\r\n\r\n  2. Basic Permissions.\r\n\r\n  All rights granted under this License are granted for the term of\r\ncopyright on the Program, and are irrevocable provided the stated\r\nconditions are met.  This License explicitly affirms your unlimited\r\npermission to run the unmodified Program.  The output from running a\r\ncovered work is covered by this License only if the output, given its\r\ncontent, constitutes a covered work.  This License acknowledges your\r\nrights of fair use or other equivalent, as provided by copyright law.\r\n\r\n  You may make, run and propagate covered works that you do not\r\nconvey, without conditions so long as your license otherwise remains\r\nin force.  You may convey covered works to others for the sole purpose\r\nof having them make modifications exclusively for you, or provide you\r\nwith facilities for running those works, provided that you comply with\r\nthe terms of this License in conveying all material for which you do\r\nnot control copyright.  Those thus making or running the covered works\r\nfor you must do so exclusively on your behalf, under your direction\r\nand control, on terms that prohibit them from making any copies of\r\nyour copyrighted material outside their relationship with you.\r\n\r\n  Conveying under any other circumstances is permitted solely under\r\nthe conditions stated below.  Sublicensing is not allowed; section 10\r\nmakes it unnecessary.\r\n\r\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\r\n\r\n  No covered work shall be deemed part of an effective technological\r\nmeasure under any applicable law fulfilling obligations under article\r\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\r\nsimilar laws prohibiting or restricting circumvention of such\r\nmeasures.\r\n\r\n  When you convey a covered work, you waive any legal power to forbid\r\ncircumvention of technological measures to the extent such circumvention\r\nis effected by exercising rights under this License with respect to\r\nthe covered work, and you disclaim any intention to limit operation or\r\nmodification of the work as a means of enforcing, against the work's\r\nusers, your or third parties' legal rights to forbid circumvention of\r\ntechnological measures.\r\n\r\n  4. Conveying Verbatim Copies.\r\n\r\n  You may convey verbatim copies of the Program's source code as you\r\nreceive it, in any medium, provided that you conspicuously and\r\nappropriately publish on each copy an appropriate copyright notice;\r\nkeep intact all notices stating that this License and any\r\nnon-permissive terms added in accord with section 7 apply to the code;\r\nkeep intact all notices of the absence of any warranty; and give all\r\nrecipients a copy of this License along with the Program.\r\n\r\n  You may charge any price or no price for each copy that you convey,\r\nand you may offer support or warranty protection for a fee.\r\n\r\n  5. Conveying Modified Source Versions.\r\n\r\n  You may convey a work based on the Program, or the modifications to\r\nproduce it from the Program, in the form of source code under the\r\nterms of section 4, provided that you also meet all of these conditions:\r\n\r\n    a) The work must carry prominent notices stating that you modified\r\n    it, and giving a relevant date.\r\n\r\n    b) The work must carry prominent notices stating that it is\r\n    released under this License and any conditions added under section\r\n    7.  This requirement modifies the requirement in section 4 to\r\n    \"keep intact all notices\".\r\n\r\n    c) You must license the entire work, as a whole, under this\r\n    License to anyone who comes into possession of a copy.  This\r\n    License will therefore apply, along with any applicable section 7\r\n    additional terms, to the whole of the work, and all its parts,\r\n    regardless of how they are packaged.  This License gives no\r\n    permission to license the work in any other way, but it does not\r\n    invalidate such permission if you have separately received it.\r\n\r\n    d) If the work has interactive user interfaces, each must display\r\n    Appropriate Legal Notices; however, if the Program has interactive\r\n    interfaces that do not display Appropriate Legal Notices, your\r\n    work need not make them do so.\r\n\r\n  A compilation of a covered work with other separate and independent\r\nworks, which are not by their nature extensions of the covered work,\r\nand which are not combined with it such as to form a larger program,\r\nin or on a volume of a storage or distribution medium, is called an\r\n\"aggregate\" if the compilation and its resulting copyright are not\r\nused to limit the access or legal rights of the compilation's users\r\nbeyond what the individual works permit.  Inclusion of a covered work\r\nin an aggregate does not cause this License to apply to the other\r\nparts of the aggregate.\r\n\r\n  6. Conveying Non-Source Forms.\r\n\r\n  You may convey a covered work in object code form under the terms\r\nof sections 4 and 5, provided that you also convey the\r\nmachine-readable Corresponding Source under the terms of this License,\r\nin one of these ways:\r\n\r\n    a) Convey the object code in, or embodied in, a physical product\r\n    (including a physical distribution medium), accompanied by the\r\n    Corresponding Source fixed on a durable physical medium\r\n    customarily used for software interchange.\r\n\r\n    b) Convey the object code in, or embodied in, a physical product\r\n    (including a physical distribution medium), accompanied by a\r\n    written offer, valid for at least three years and valid for as\r\n    long as you offer spare parts or customer support for that product\r\n    model, to give anyone who possesses the object code either (1) a\r\n    copy of the Corresponding Source for all the software in the\r\n    product that is covered by this License, on a durable physical\r\n    medium customarily used for software interchange, for a price no\r\n    more than your reasonable cost of physically performing this\r\n    conveying of source, or (2) access to copy the\r\n    Corresponding Source from a network server at no charge.\r\n\r\n    c) Convey individual copies of the object code with a copy of the\r\n    written offer to provide the Corresponding Source.  This\r\n    alternative is allowed only occasionally and noncommercially, and\r\n    only if you received the object code with such an offer, in accord\r\n    with subsection 6b.\r\n\r\n    d) Convey the object code by offering access from a designated\r\n    place (gratis or for a charge), and offer equivalent access to the\r\n    Corresponding Source in the same way through the same place at no\r\n    further charge.  You need not require recipients to copy the\r\n    Corresponding Source along with the object code.  If the place to\r\n    copy the object code is a network server, the Corresponding Source\r\n    may be on a different server (operated by you or a third party)\r\n    that supports equivalent copying facilities, provided you maintain\r\n    clear directions next to the object code saying where to find the\r\n    Corresponding Source.  Regardless of what server hosts the\r\n    Corresponding Source, you remain obligated to ensure that it is\r\n    available for as long as needed to satisfy these requirements.\r\n\r\n    e) Convey the object code using peer-to-peer transmission, provided\r\n    you inform other peers where the object code and Corresponding\r\n    Source of the work are being offered to the general public at no\r\n    charge under subsection 6d.\r\n\r\n  A separable portion of the object code, whose source code is excluded\r\nfrom the Corresponding Source as a System Library, need not be\r\nincluded in conveying the object code work.\r\n\r\n  A \"User Product\" is either (1) a \"consumer product\", which means any\r\ntangible personal property which is normally used for personal, family,\r\nor household purposes, or (2) anything designed or sold for incorporation\r\ninto a dwelling.  In determining whether a product is a consumer product,\r\ndoubtful cases shall be resolved in favor of coverage.  For a particular\r\nproduct received by a particular user, \"normally used\" refers to a\r\ntypical or common use of that class of product, regardless of the status\r\nof the particular user or of the way in which the particular user\r\nactually uses, or expects or is expected to use, the product.  A product\r\nis a consumer product regardless of whether the product has substantial\r\ncommercial, industrial or non-consumer uses, unless such uses represent\r\nthe only significant mode of use of the product.\r\n\r\n  \"Installation Information\" for a User Product means any methods,\r\nprocedures, authorization keys, or other information required to install\r\nand execute modified versions of a covered work in that User Product from\r\na modified version of its Corresponding Source.  The information must\r\nsuffice to ensure that the continued functioning of the modified object\r\ncode is in no case prevented or interfered with solely because\r\nmodification has been made.\r\n\r\n  If you convey an object code work under this section in, or with, or\r\nspecifically for use in, a User Product, and the conveying occurs as\r\npart of a transaction in which the right of possession and use of the\r\nUser Product is transferred to the recipient in perpetuity or for a\r\nfixed term (regardless of how the transaction is characterized), the\r\nCorresponding Source conveyed under this section must be accompanied\r\nby the Installation Information.  But this requirement does not apply\r\nif neither you nor any third party retains the ability to install\r\nmodified object code on the User Product (for example, the work has\r\nbeen installed in ROM).\r\n\r\n  The requirement to provide Installation Information does not include a\r\nrequirement to continue to provide support service, warranty, or updates\r\nfor a work that has been modified or installed by the recipient, or for\r\nthe User Product in which it has been modified or installed.  Access to a\r\nnetwork may be denied when the modification itself materially and\r\nadversely affects the operation of the network or violates the rules and\r\nprotocols for communication across the network.\r\n\r\n  Corresponding Source conveyed, and Installation Information provided,\r\nin accord with this section must be in a format that is publicly\r\ndocumented (and with an implementation available to the public in\r\nsource code form), and must require no special password or key for\r\nunpacking, reading or copying.\r\n\r\n  7. Additional Terms.\r\n\r\n  \"Additional permissions\" are terms that supplement the terms of this\r\nLicense by making exceptions from one or more of its conditions.\r\nAdditional permissions that are applicable to the entire Program shall\r\nbe treated as though they were included in this License, to the extent\r\nthat they are valid under applicable law.  If additional permissions\r\napply only to part of the Program, that part may be used separately\r\nunder those permissions, but the entire Program remains governed by\r\nthis License without regard to the additional permissions.\r\n\r\n  When you convey a copy of a covered work, you may at your option\r\nremove any additional permissions from that copy, or from any part of\r\nit.  (Additional permissions may be written to require their own\r\nremoval in certain cases when you modify the work.)  You may place\r\nadditional permissions on material, added by you to a covered work,\r\nfor which you have or can give appropriate copyright permission.\r\n\r\n  Notwithstanding any other provision of this License, for material you\r\nadd to a covered work, you may (if authorized by the copyright holders of\r\nthat material) supplement the terms of this License with terms:\r\n\r\n    a) Disclaiming warranty or limiting liability differently from the\r\n    terms of sections 15 and 16 of this License; or\r\n\r\n    b) Requiring preservation of specified reasonable legal notices or\r\n    author attributions in that material or in the Appropriate Legal\r\n    Notices displayed by works containing it; or\r\n\r\n    c) Prohibiting misrepresentation of the origin of that material, or\r\n    requiring that modified versions of such material be marked in\r\n    reasonable ways as different from the original version; or\r\n\r\n    d) Limiting the use for publicity purposes of names of licensors or\r\n    authors of the material; or\r\n\r\n    e) Declining to grant rights under trademark law for use of some\r\n    trade names, trademarks, or service marks; or\r\n\r\n    f) Requiring indemnification of licensors and authors of that\r\n    material by anyone who conveys the material (or modified versions of\r\n    it) with contractual assumptions of liability to the recipient, for\r\n    any liability that these contractual assumptions directly impose on\r\n    those licensors and authors.\r\n\r\n  All other non-permissive additional terms are considered \"further\r\nrestrictions\" within the meaning of section 10.  If the Program as you\r\nreceived it, or any part of it, contains a notice stating that it is\r\ngoverned by this License along with a term that is a further\r\nrestriction, you may remove that term.  If a license document contains\r\na further restriction but permits relicensing or conveying under this\r\nLicense, you may add to a covered work material governed by the terms\r\nof that license document, provided that the further restriction does\r\nnot survive such relicensing or conveying.\r\n\r\n  If you add terms to a covered work in accord with this section, you\r\nmust place, in the relevant source files, a statement of the\r\nadditional terms that apply to those files, or a notice indicating\r\nwhere to find the applicable terms.\r\n\r\n  Additional terms, permissive or non-permissive, may be stated in the\r\nform of a separately written license, or stated as exceptions;\r\nthe above requirements apply either way.\r\n\r\n  8. Termination.\r\n\r\n  You may not propagate or modify a covered work except as expressly\r\nprovided under this License.  Any attempt otherwise to propagate or\r\nmodify it is void, and will automatically terminate your rights under\r\nthis License (including any patent licenses granted under the third\r\nparagraph of section 11).\r\n\r\n  However, if you cease all violation of this License, then your\r\nlicense from a particular copyright holder is reinstated (a)\r\nprovisionally, unless and until the copyright holder explicitly and\r\nfinally terminates your license, and (b) permanently, if the copyright\r\nholder fails to notify you of the violation by some reasonable means\r\nprior to 60 days after the cessation.\r\n\r\n  Moreover, your license from a particular copyright holder is\r\nreinstated permanently if the copyright holder notifies you of the\r\nviolation by some reasonable means, this is the first time you have\r\nreceived notice of violation of this License (for any work) from that\r\ncopyright holder, and you cure the violation prior to 30 days after\r\nyour receipt of the notice.\r\n\r\n  Termination of your rights under this section does not terminate the\r\nlicenses of parties who have received copies or rights from you under\r\nthis License.  If your rights have been terminated and not permanently\r\nreinstated, you do not qualify to receive new licenses for the same\r\nmaterial under section 10.\r\n\r\n  9. Acceptance Not Required for Having Copies.\r\n\r\n  You are not required to accept this License in order to receive or\r\nrun a copy of the Program.  Ancillary propagation of a covered work\r\noccurring solely as a consequence of using peer-to-peer transmission\r\nto receive a copy likewise does not require acceptance.  However,\r\nnothing other than this License grants you permission to propagate or\r\nmodify any covered work.  These actions infringe copyright if you do\r\nnot accept this License.  Therefore, by modifying or propagating a\r\ncovered work, you indicate your acceptance of this License to do so.\r\n\r\n  10. Automatic Licensing of Downstream Recipients.\r\n\r\n  Each time you convey a covered work, the recipient automatically\r\nreceives a license from the original licensors, to run, modify and\r\npropagate that work, subject to this License.  You are not responsible\r\nfor enforcing compliance by third parties with this License.\r\n\r\n  An \"entity transaction\" is a transaction transferring control of an\r\norganization, or substantially all assets of one, or subdividing an\r\norganization, or merging organizations.  If propagation of a covered\r\nwork results from an entity transaction, each party to that\r\ntransaction who receives a copy of the work also receives whatever\r\nlicenses to the work the party's predecessor in interest had or could\r\ngive under the previous paragraph, plus a right to possession of the\r\nCorresponding Source of the work from the predecessor in interest, if\r\nthe predecessor has it or can get it with reasonable efforts.\r\n\r\n  You may not impose any further restrictions on the exercise of the\r\nrights granted or affirmed under this License.  For example, you may\r\nnot impose a license fee, royalty, or other charge for exercise of\r\nrights granted under this License, and you may not initiate litigation\r\n(including a cross-claim or counterclaim in a lawsuit) alleging that\r\nany patent claim is infringed by making, using, selling, offering for\r\nsale, or importing the Program or any portion of it.\r\n\r\n  11. Patents.\r\n\r\n  A \"contributor\" is a copyright holder who authorizes use under this\r\nLicense of the Program or a work on which the Program is based.  The\r\nwork thus licensed is called the contributor's \"contributor version\".\r\n\r\n  A contributor's \"essential patent claims\" are all patent claims\r\nowned or controlled by the contributor, whether already acquired or\r\nhereafter acquired, that would be infringed by some manner, permitted\r\nby this License, of making, using, or selling its contributor version,\r\nbut do not include claims that would be infringed only as a\r\nconsequence of further modification of the contributor version.  For\r\npurposes of this definition, \"control\" includes the right to grant\r\npatent sublicenses in a manner consistent with the requirements of\r\nthis License.\r\n\r\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\r\npatent license under the contributor's essential patent claims, to\r\nmake, use, sell, offer for sale, import and otherwise run, modify and\r\npropagate the contents of its contributor version.\r\n\r\n  In the following three paragraphs, a \"patent license\" is any express\r\nagreement or commitment, however denominated, not to enforce a patent\r\n(such as an express permission to practice a patent or covenant not to\r\nsue for patent infringement).  To \"grant\" such a patent license to a\r\nparty means to make such an agreement or commitment not to enforce a\r\npatent against the party.\r\n\r\n  If you convey a covered work, knowingly relying on a patent license,\r\nand the Corresponding Source of the work is not available for anyone\r\nto copy, free of charge and under the terms of this License, through a\r\npublicly available network server or other readily accessible means,\r\nthen you must either (1) cause the Corresponding Source to be so\r\navailable, or (2) arrange to deprive yourself of the benefit of the\r\npatent license for this particular work, or (3) arrange, in a manner\r\nconsistent with the requirements of this License, to extend the patent\r\nlicense to downstream recipients.  \"Knowingly relying\" means you have\r\nactual knowledge that, but for the patent license, your conveying the\r\ncovered work in a country, or your recipient's use of the covered work\r\nin a country, would infringe one or more identifiable patents in that\r\ncountry that you have reason to believe are valid.\r\n\r\n  If, pursuant to or in connection with a single transaction or\r\narrangement, you convey, or propagate by procuring conveyance of, a\r\ncovered work, and grant a patent license to some of the parties\r\nreceiving the covered work authorizing them to use, propagate, modify\r\nor convey a specific copy of the covered work, then the patent license\r\nyou grant is automatically extended to all recipients of the covered\r\nwork and works based on it.\r\n\r\n  A patent license is \"discriminatory\" if it does not include within\r\nthe scope of its coverage, prohibits the exercise of, or is\r\nconditioned on the non-exercise of one or more of the rights that are\r\nspecifically granted under this License.  You may not convey a covered\r\nwork if you are a party to an arrangement with a third party that is\r\nin the business of distributing software, under which you make payment\r\nto the third party based on the extent of your activity of conveying\r\nthe work, and under which the third party grants, to any of the\r\nparties who would receive the covered work from you, a discriminatory\r\npatent license (a) in connection with copies of the covered work\r\nconveyed by you (or copies made from those copies), or (b) primarily\r\nfor and in connection with specific products or compilations that\r\ncontain the covered work, unless you entered into that arrangement,\r\nor that patent license was granted, prior to 28 March 2007.\r\n\r\n  Nothing in this License shall be construed as excluding or limiting\r\nany implied license or other defenses to infringement that may\r\notherwise be available to you under applicable patent law.\r\n\r\n  12. No Surrender of Others' Freedom.\r\n\r\n  If conditions are imposed on you (whether by court order, agreement or\r\notherwise) that contradict the conditions of this License, they do not\r\nexcuse you from the conditions of this License.  If you cannot convey a\r\ncovered work so as to satisfy simultaneously your obligations under this\r\nLicense and any other pertinent obligations, then as a consequence you may\r\nnot convey it at all.  For example, if you agree to terms that obligate you\r\nto collect a royalty for further conveying from those to whom you convey\r\nthe Program, the only way you could satisfy both those terms and this\r\nLicense would be to refrain entirely from conveying the Program.\r\n\r\n  13. Remote Network Interaction; Use with the GNU General Public License.\r\n\r\n  Notwithstanding any other provision of this License, if you modify the\r\nProgram, your modified version must prominently offer all users\r\ninteracting with it remotely through a computer network (if your version\r\nsupports such interaction) an opportunity to receive the Corresponding\r\nSource of your version by providing access to the Corresponding Source\r\nfrom a network server at no charge, through some standard or customary\r\nmeans of facilitating copying of software.  This Corresponding Source\r\nshall include the Corresponding Source for any work covered by version 3\r\nof the GNU General Public License that is incorporated pursuant to the\r\nfollowing paragraph.\r\n\r\n  Notwithstanding any other provision of this License, you have\r\npermission to link or combine any covered work with a work licensed\r\nunder version 3 of the GNU General Public License into a single\r\ncombined work, and to convey the resulting work.  The terms of this\r\nLicense will continue to apply to the part which is the covered work,\r\nbut the work with which it is combined will remain governed by version\r\n3 of the GNU General Public License.\r\n\r\n  14. Revised Versions of this License.\r\n\r\n  The Free Software Foundation may publish revised and/or new versions of\r\nthe GNU Affero General Public License from time to time.  Such new versions\r\nwill be similar in spirit to the present version, but may differ in detail to\r\naddress new problems or concerns.\r\n\r\n  Each version is given a distinguishing version number.  If the\r\nProgram specifies that a certain numbered version of the GNU Affero General\r\nPublic License \"or any later version\" applies to it, you have the\r\noption of following the terms and conditions either of that numbered\r\nversion or of any later version published by the Free Software\r\nFoundation.  If the Program does not specify a version number of the\r\nGNU Affero General Public License, you may choose any version ever published\r\nby the Free Software Foundation.\r\n\r\n  If the Program specifies that a proxy can decide which future\r\nversions of the GNU Affero General Public License can be used, that proxy's\r\npublic statement of acceptance of a version permanently authorizes you\r\nto choose that version for the Program.\r\n\r\n  Later license versions may give you additional or different\r\npermissions.  However, no additional obligations are imposed on any\r\nauthor or copyright holder as a result of your choosing to follow a\r\nlater version.\r\n\r\n  15. Disclaimer of Warranty.\r\n\r\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\r\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\r\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\r\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\r\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\r\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\r\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\r\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\r\n\r\n  16. Limitation of Liability.\r\n\r\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\r\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\r\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\r\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\r\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\r\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\r\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\r\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\r\nSUCH DAMAGES.\r\n\r\n  17. Interpretation of Sections 15 and 16.\r\n\r\n  If the disclaimer of warranty and limitation of liability provided\r\nabove cannot be given local legal effect according to their terms,\r\nreviewing courts shall apply local law that most closely approximates\r\nan absolute waiver of all civil liability in connection with the\r\nProgram, unless a warranty or assumption of liability accompanies a\r\ncopy of the Program in return for a fee.\r\n\r\n                     END OF TERMS AND CONDITIONS\r\n\r\n            How to Apply These Terms to Your New Programs\r\n\r\n  If you develop a new program, and you want it to be of the greatest\r\npossible use to the public, the best way to achieve this is to make it\r\nfree software which everyone can redistribute and change under these terms.\r\n\r\n  To do so, attach the following notices to the program.  It is safest\r\nto attach them to the start of each source file to most effectively\r\nstate the exclusion of warranty; and each file should have at least\r\nthe \"copyright\" line and a pointer to where the full notice is found.\r\n\r\n    <one line to give the program's name and a brief idea of what it does.>\r\n    Copyright (C) <year>  <name of author>\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Affero General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Affero General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Affero General Public License\r\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nAlso add information on how to contact you by electronic and paper mail.\r\n\r\n  If your software can interact with users remotely through a computer\r\nnetwork, you should also make sure that it provides a way for users to\r\nget its source.  For example, if your program is a web application, its\r\ninterface could display a \"Source\" link that leads users to an archive\r\nof the code.  There are many ways you could offer source, and different\r\nsolutions will be better for different programs; see section 13 for the\r\nspecific requirements.\r\n\r\n  You should also get your employer (if you work as a programmer) or school,\r\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\r\nFor more information on this, and how to apply and follow the GNU AGPL, see\r\n<https://www.gnu.org/licenses/>.\r\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "README.md", "size": 12924, "license": "AGPL-3.0", "content_sha": "bc62945c0c566f85c30434fd482fde9ee6116c26", "findings": [], "content": "# Stable Diffusion web UI\r\nA web interface for Stable Diffusion, implemented using Gradio library.\r\n\r\n![](screenshot.png)\r\n\r\n## Features\r\n[Detailed feature showcase with images](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Features):\r\n- Original txt2img and img2img modes\r\n- One click install and run script (but you still must install python and git)\r\n- Outpainting\r\n- Inpainting\r\n- Color Sketch\r\n- Prompt Matrix\r\n- Stable Diffusion Upscale\r\n- Attention, specify parts of text that the model should pay more attention to\r\n    - a man in a `((tuxedo))` - will pay more attention to tuxedo\r\n    - a man in a `(tuxedo:1.21)` - alternative syntax\r\n    - select text and press `Ctrl+Up` or `Ctrl+Down` (or `Command+Up` or `Command+Down` if you're on a MacOS) to automatically adjust attention to selected text (code contributed by anonymous user)\r\n- Loopback, run img2img processing multiple times\r\n- X/Y/Z plot, a way to draw a 3 dimensional plot of images with different parameters\r\n- Textual Inversion\r\n    - have as many embeddings as you want and use any names you like for them\r\n    - use multiple embeddings with different numbers of vectors per token\r\n    - works with half precision floating point numbers\r\n    - train embeddings on 8GB (also reports of 6GB working)\r\n- Extras tab with:\r\n    - GFPGAN, neural network that fixes faces\r\n    - CodeFormer, face restoration tool as an alternative to GFPGAN\r\n    - RealESRGAN, neural network upscaler\r\n    - ESRGAN, neural network upscaler with a lot of third party models\r\n    - SwinIR and Swin2SR ([see here](https://github.com/AUTOMATIC1111/stable-diffusion-webui/pull/2092)), neural network upscalers\r\n    - LDSR, Latent diffusion super resolution upscaling\r\n- Resizing aspect ratio options\r\n- Sampling method selection\r\n    - Adjust sampler eta values (noise multiplier)\r\n    - More advanced noise setting options\r\n- Interrupt processing at any time\r\n- 4GB video card support (also reports of 2GB working)\r\n- Correct seeds for batches\r\n- Live prompt token length validation\r\n- Generation parameters\r\n     - parameters you used to generate images are saved with that image\r\n     - in PNG chunks for PNG, in EXIF for JPEG\r\n     - can drag the image to PNG info tab to restore generation parameters and automatically copy them into UI\r\n     - can be disabled in settings\r\n     - drag and drop an image/text-parameters to promptbox\r\n- Read Generation Parameters Button, loads parameters in promptbox to UI\r\n- Settings page\r\n- Running arbitrary python code from UI (must run with `--allow-code` to enable)\r\n- Mouseover hints for most UI elements\r\n- Possible to change defaults/mix/max/step values for UI elements via text config\r\n- Tiling support, a checkbox to create images that can be tiled like textures\r\n- Progress bar and live image generation preview\r\n    - Can use a separate neural network to produce previews with almost none VRAM or compute requirement\r\n- Negative prompt, an extra text field that allows you to list what you don't want to see in generated image\r\n- Styles, a way to save part of prompt and easily apply them via dropdown later\r\n- Variations, a way to generate same image but with tiny differences\r\n- Seed resizing, a way to generate same image but at slightly different resolution\r\n- CLIP interrogator, a button that tries to guess prompt from an image\r\n- Prompt Editing, a way to change prompt mid-generation, say to start making a watermelon and switch to anime girl midway\r\n- Batch Processing, process a group of files using img2img\r\n- Img2img Alternative, reverse Euler method of cross attention control\r\n- Highres Fix, a convenience option to produce high resolution pictures in one click without usual distortions\r\n- Reloading checkpoints on the fly\r\n- Checkpoint Merger, a tab that allows you to merge up to 3 checkpoints into one\r\n- [Custom scripts](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Custom-Scripts) with many extensions from community\r\n- [Composable-Diffusion](https://energy-based-model.github.io/Compositional-Visual-Generation-with-Composable-Diffusion-Models/), a way to use multiple prompts at once\r\n     - separate prompts using uppercase `AND`\r\n     - also supports weights for prompts: `a cat :1.2 AND a dog AND a penguin :2.2`\r\n- No token limit for prompts (original stable diffusion lets you use up to 75 tokens)\r\n- DeepDanbooru integration, creates danbooru style tags for anime prompts\r\n- [xformers](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Xformers), major speed increase for select cards: (add `--xformers` to commandline args)\r\n- via extension: [History tab](https://github.com/yfszzx/stable-diffusion-webui-images-browser): view, direct and delete images conveniently within the UI\r\n- Generate forever option\r\n- Training tab\r\n     - hypernetworks and embeddings options\r\n     - Preprocessing images: cropping, mirroring, autotagging using BLIP or deepdanbooru (for anime)\r\n- Clip skip\r\n- Hypernetworks\r\n- Loras (same as Hypernetworks but more pretty)\r\n- A separate UI where you can choose, with preview, which embeddings, hypernetworks or Loras to add to your prompt\r\n- Can select to load a different VAE from settings screen\r\n- Estimated completion time in progress bar\r\n- API\r\n- Support for dedicated [inpainting model](https://github.com/runwayml/stable-diffusion#inpainting-with-stable-diffusion) by RunwayML\r\n- via extension: [Aesthetic Gradients](https://github.com/AUTOMATIC1111/stable-diffusion-webui-aesthetic-gradients), a way to generate images with a specific aesthetic by using clip images embeds (implementation of [https://github.com/vicgalle/stable-diffusion-aesthetic-gradients](https://github.com/vicgalle/stable-diffusion-aesthetic-gradients))\r\n- [Stable Diffusion 2.0](https://github.com/Stability-AI/stablediffusion) support - see [wiki](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Features#stable-diffusion-20) for instructions\r\n- [Alt-Diffusion](https://arxiv.org/abs/2211.06679) support - see [wiki](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Features#alt-diffusion) for instructions\r\n- Now without any bad letters!\r\n- Load checkpoints in safetensors format\r\n- Eased resolution restriction: generated image's dimensions must be a multiple of 8 rather than 64\r\n- Now with a license!\r\n- Reorder elements in the UI from settings screen\r\n- [Segmind Stable Diffusion](https://huggingface.co/segmind/SSD-1B) support\r\n\r\n## Installation and Running\r\nMake sure the required [dependencies](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Dependencies) are met and follow the instructions available for:\r\n- [NVidia](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Install-and-Run-on-NVidia-GPUs) (recommended)\r\n- [AMD](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Install-and-Run-on-AMD-GPUs) GPUs.\r\n- [Intel CPUs, Intel GPUs (both integrated and discrete)](https://github.com/openvinotoolkit/stable-diffusion-webui/wiki/Installation-on-Intel-Silicon) (external wiki page)\r\n- [Ascend NPUs](https://github.com/wangshuai09/stable-diffusion-webui/wiki/Install-and-run-on-Ascend-NPUs) (external wiki page)\r\n\r\nAlternatively, use online services (like Google Colab):\r\n\r\n- [List of Online Services](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Online-Services)\r\n\r\n### Installation on Windows 10/11 with NVidia-GPUs using release package\r\n1. Download `sd.webui.zip` from [v1.0.0-pre](https://github.com/AUTOMATIC1111/stable-diffusion-webui/releases/tag/v1.0.0-pre) and extract its contents.\r\n2. Run `update.bat`.\r\n3. Run `run.bat`.\r\n> For more details see [Install-and-Run-on-NVidia-GPUs](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Install-and-Run-on-NVidia-GPUs)\r\n\r\n### Automatic Installation on Windows\r\n1. Install [Python 3.10.6](https://www.python.org/downloads/release/python-3106/) (Newer version of Python does not support torch), checking \"Add Python to PATH\".\r\n2. Install [git](https://git-scm.com/download/win).\r\n3. Download the stable-diffusion-webui repository, for example by running `git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git`.\r\n4. Run `webui-user.bat` from Windows Explorer as normal, non-administrator, user.\r\n\r\n### Automatic Installation on Linux\r\n1. Install the dependencies:\r\n```bash\r\n# Debian-based:\r\nsudo apt install wget git python3 python3-venv libgl1 libglib2.0-0\r\n# Red Hat-based:\r\nsudo dnf install wget git python3 gperftools-libs libglvnd-glx\r\n# openSUSE-based:\r\nsudo zypper install wget git python3 libtcmalloc4 libglvnd\r\n# Arch-based:\r\nsudo pacman -S wget git python3\r\n```\r\nIf your system is very new, you need to install python3.11 or python3.10:\r\n```bash\r\n# Ubuntu 24.04\r\nsudo add-apt-repository ppa:deadsnakes/ppa\r\nsudo apt update\r\nsudo apt install python3.11\r\n\r\n# Manjaro/Arch\r\nsudo pacman -S yay\r\nyay -S python311 # do not confuse with python3.11 package\r\n\r\n# Only for 3.11\r\n# Then set up env variable in launch script\r\nexport python_cmd=\"python3.11\"\r\n# or in webui-user.sh\r\npython_cmd=\"python3.11\"\r\n```\r\n2. Navigate to the directory you would like the webui to be installed and execute the following command:\r\n```bash\r\nwget -q https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/webui.sh\r\n```\r\nOr just clone the repo wherever you want:\r\n```bash\r\ngit clone https://github.com/AUTOMATIC1111/stable-diffusion-webui\r\n```\r\n\r\n3. Run `webui.sh`.\r\n4. Check `webui-user.sh` for options.\r\n### Installation on Apple Silicon\r\n\r\nFind the instructions [here](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Installation-on-Apple-Silicon).\r\n\r\n## Contributing\r\nHere's how to add code to this repo: [Contributing](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Contributing)\r\n\r\n## Documentation\r\n\r\nThe documentation was moved from this README over to the project's [wiki](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki).\r\n\r\nFor the purposes of getting Google and other search engines to crawl the wiki, here's a link to the (not for humans) [crawlable wiki](https://github-wiki-see.page/m/AUTOMATIC1111/stable-diffusion-webui/wiki).\r\n\r\n## Credits\r\nLicenses for borrowed code can be found in `Settings -> Licenses` screen, and also in `html/licenses.html` file.\r\n\r\n- Stable Diffusion - https://github.com/Stability-AI/stablediffusion, https://github.com/CompVis/taming-transformers, https://github.com/mcmonkey4eva/sd3-ref\r\n- k-diffusion - https://github.com/crowsonkb/k-diffusion.git\r\n- Spandrel - https://github.com/chaiNNer-org/spandrel implementing\r\n  - GFPGAN - https://github.com/TencentARC/GFPGAN.git\r\n  - CodeFormer - https://github.com/sczhou/CodeFormer\r\n  - ESRGAN - https://github.com/xinntao/ESRGAN\r\n  - SwinIR - https://github.com/JingyunLiang/SwinIR\r\n  - Swin2SR - https://github.com/mv-lab/swin2sr\r\n- LDSR - https://github.com/Hafiidz/latent-diffusion\r\n- MiDaS - https://github.com/isl-org/MiDaS\r\n- Ideas for optimizations - https://github.com/basujindal/stable-diffusion\r\n- Cross Attention layer optimization - Doggettx - https://github.com/Doggettx/stable-diffusion, original idea for prompt editing.\r\n- Cross Attention layer optimization - InvokeAI, lstein - https://github.com/invoke-ai/InvokeAI (originally http://github.com/lstein/stable-diffusion)\r\n- Sub-quadratic Cross Attention layer optimization - Alex Birch (https://github.com/Birch-san/diffusers/pull/1), Amin Rezaei (https://github.com/AminRezaei0x443/memory-efficient-attention)\r\n- Textual Inversion - Rinon Gal - https://github.com/rinongal/textual_inversion (we're not using his code, but we are using his ideas).\r\n- Idea for SD upscale - https://github.com/jquesnelle/txt2imghd\r\n- Noise generation for outpainting mk2 - https://github.com/parlance-zz/g-diffuser-bot\r\n- CLIP interrogator idea and borrowing some code - https://github.com/pharmapsychotic/clip-interrogator\r\n- Idea for Composable Diffusion - https://github.com/energy-based-model/Compositional-Visual-Generation-with-Composable-Diffusion-Models-PyTorch\r\n- xformers - https://github.com/facebookresearch/xformers\r\n- DeepDanbooru - interrogator for anime diffusers https://github.com/KichangKim/DeepDanbooru\r\n- Sampling in float32 precision from a float16 UNet - marunine for the idea, Birch-san for the example Diffusers implementation (https://github.com/Birch-san/diffusers-play/tree/92feee6)\r\n- Instruct pix2pix - Tim Brooks (star), Aleksander Holynski (star), Alexei A. Efros (no star) - https://github.com/timothybrooks/instruct-pix2pix\r\n- Security advice - RyotaK\r\n- UniPC sampler - Wenliang Zhao - https://github.com/wl-zhao/UniPC\r\n- TAESD - Ollin Boer Bohan - https://github.com/madebyollin/taesd\r\n- LyCORIS - KohakuBlueleaf\r\n- Restart sampling - lambertae - https://github.com/Newbeeer/diffusion_restart_sampling\r\n- Hypertile - tfernd - https://github.com/tfernd/HyperTile\r\n- Initial Gradio script - posted on 4chan by an Anonymous user. Thank you Anonymous user.\r\n- (You)\r\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "extensions-builtin/LDSR/ldsr_model_arch.py", "size": 9759, "license": "AGPL-3.0", "content_sha": "7cac36ce55ae295c6d0e444a93ea12bf8cfe893c", "findings": [], "content": "import os\nimport gc\nimport time\n\nimport numpy as np\nimport torch\nimport torchvision\nfrom PIL import Image\nfrom einops import rearrange, repeat\nfrom omegaconf import OmegaConf\nimport safetensors.torch\n\nfrom ldm.models.diffusion.ddim import DDIMSampler\nfrom ldm.util import instantiate_from_config, ismap\nfrom modules import shared, sd_hijack, devices\n\ncached_ldsr_model: torch.nn.Module = None\n\n\n# Create LDSR Class\nclass LDSR:\n    def load_model_from_config(self, half_attention):\n        global cached_ldsr_model\n\n        if shared.opts.ldsr_cached and cached_ldsr_model is not None:\n            print(\"Loading model from cache\")\n            model: torch.nn.Module = cached_ldsr_model\n        else:\n            print(f\"Loading model from {self.modelPath}\")\n            _, extension = os.path.splitext(self.modelPath)\n            if extension.lower() == \".safetensors\":\n                pl_sd = safetensors.torch.load_file(self.modelPath, device=\"cpu\")\n            else:\n                pl_sd = torch.load(self.modelPath, map_location=\"cpu\")\n            sd = pl_sd[\"state_dict\"] if \"state_dict\" in pl_sd else pl_sd\n            config = OmegaConf.load(self.yamlPath)\n            config.model.target = \"ldm.models.diffusion.ddpm.LatentDiffusionV1\"\n            model: torch.nn.Module = instantiate_from_config(config.model)\n            model.load_state_dict(sd, strict=False)\n            model = model.to(shared.device)\n            if half_attention:\n                model = model.half()\n            if shared.cmd_opts.opt_channelslast:\n                model = model.to(memory_format=torch.channels_last)\n\n            sd_hijack.model_hijack.hijack(model) # apply optimization\n            model.eval()\n\n            if shared.opts.ldsr_cached:\n                cached_ldsr_model = model\n\n        return {\"model\": model}\n\n    def __init__(self, model_path, yaml_path):\n        self.modelPath = model_path\n        self.yamlPath = yaml_path\n\n    @staticmethod\n    def run(model, selected_path, custom_steps, eta):\n        example = get_cond(selected_path)\n\n        n_runs = 1\n        guider = None\n        ckwargs = None\n        ddim_use_x0_pred = False\n        temperature = 1.\n        eta = eta\n        custom_shape = None\n\n        height, width = example[\"image\"].shape[1:3]\n        split_input = height >= 128 and width >= 128\n\n        if split_input:\n            ks = 128\n            stride = 64\n            vqf = 4  #\n            model.split_input_params = {\"ks\": (ks, ks), \"stride\": (stride, stride),\n                                        \"vqf\": vqf,\n                                        \"patch_distributed_vq\": True,\n                                        \"tie_braker\": False,\n                                        \"clip_max_weight\": 0.5,\n                                        \"clip_min_weight\": 0.01,\n                                        \"clip_max_tie_weight\": 0.5,\n                                        \"clip_min_tie_weight\": 0.01}\n        else:\n            if hasattr(model, \"split_input_params\"):\n                delattr(model, \"split_input_params\")\n\n        x_t = None\n        logs = None\n        for _ in range(n_runs):\n            if custom_shape is not None:\n                x_t = torch.randn(1, custom_shape[1], custom_shape[2], custom_shape[3]).to(model.device)\n                x_t = repeat(x_t, '1 c h w -> b c h w', b=custom_shape[0])\n\n            logs = make_convolutional_sample(example, model,\n                                             custom_steps=custom_steps,\n                                             eta=eta, quantize_x0=False,\n                                             custom_shape=custom_shape,\n                                             temperature=temperature, noise_dropout=0.,\n                                             corrector=guider, corrector_kwargs=ckwargs, x_T=x_t,\n                                             ddim_use_x0_pred=ddim_use_x0_pred\n                                             )\n        return logs\n\n    def super_resolution(self, image, steps=100, target_scale=2, half_attention=False):\n        model = self.load_model_from_config(half_attention)\n\n        # Run settings\n        diffusion_steps = int(steps)\n        eta = 1.0\n\n\n        gc.collect()\n        devices.torch_gc()\n\n        im_og = image\n        width_og, height_og = im_og.size\n        # If we can adjust the max upscale size, then the 4 below should be our variable\n        down_sample_rate = target_scale / 4\n        wd = width_og * down_sample_rate\n        hd = height_og * down_sample_rate\n        width_downsampled_pre = int(np.ceil(wd))\n        height_downsampled_pre = int(np.ceil(hd))\n\n        if down_sample_rate != 1:\n            print(\n                f'Downsampling from [{width_og}, {height_og}] to [{width_downsampled_pre}, {height_downsampled_pre}]')\n            im_og = im_og.resize((width_downsampled_pre, height_downsampled_pre), Image.LANCZOS)\n        else:\n            print(f\"Down sample rate is 1 from {target_scale} / 4 (Not downsampling)\")\n\n        # pad width and height to multiples of 64, pads with the edge values of image to avoid artifacts\n        pad_w, pad_h = np.max(((2, 2), np.ceil(np.array(im_og.size) / 64).astype(int)), axis=0) * 64 - im_og.size\n        im_padded = Image.fromarray(np.pad(np.array(im_og), ((0, pad_h), (0, pad_w), (0, 0)), mode='edge'))\n\n        logs = self.run(model[\"model\"], im_padded, diffusion_steps, eta)\n\n        sample = logs[\"sample\"]\n        sample = sample.detach().cpu()\n        sample = torch.clamp(sample, -1., 1.)\n        sample = (sample + 1.) / 2. * 255\n        sample = sample.numpy().astype(np.uint8)\n        sample = np.transpose(sample, (0, 2, 3, 1))\n        a = Image.fromarray(sample[0])\n\n        # remove padding\n        a = a.crop((0, 0) + tuple(np.array(im_og.size) * 4))\n\n        del model\n        gc.collect()\n        devices.torch_gc()\n\n        return a\n\n\ndef get_cond(selected_path):\n    example = {}\n    up_f = 4\n    c = selected_path.convert('RGB')\n    c = torch.unsqueeze(torchvision.transforms.ToTensor()(c), 0)\n    c_up = torchvision.transforms.functional.resize(c, size=[up_f * c.shape[2], up_f * c.shape[3]],\n                                                    antialias=True)\n    c_up = rearrange(c_up, '1 c h w -> 1 h w c')\n    c = rearrange(c, '1 c h w -> 1 h w c')\n    c = 2. * c - 1.\n\n    c = c.to(shared.device)\n    example[\"LR_image\"] = c\n    example[\"image\"] = c_up\n\n    return example\n\n\n@torch.no_grad()\ndef convsample_ddim(model, cond, steps, shape, eta=1.0, callback=None, normals_sequence=None,\n                    mask=None, x0=None, quantize_x0=False, temperature=1., score_corrector=None,\n                    corrector_kwargs=None, x_t=None\n                    ):\n    ddim = DDIMSampler(model)\n    bs = shape[0]\n    shape = shape[1:]\n    print(f\"Sampling with eta = {eta}; steps: {steps}\")\n    samples, intermediates = ddim.sample(steps, batch_size=bs, shape=shape, conditioning=cond, callback=callback,\n                                         normals_sequence=normals_sequence, quantize_x0=quantize_x0, eta=eta,\n                                         mask=mask, x0=x0, temperature=temperature, verbose=False,\n                                         score_corrector=score_corrector,\n                                         corrector_kwargs=corrector_kwargs, x_t=x_t)\n\n    return samples, intermediates\n\n\n@torch.no_grad()\ndef make_convolutional_sample(batch, model, custom_steps=None, eta=1.0, quantize_x0=False, custom_shape=None, temperature=1., noise_dropout=0., corrector=None,\n                              corrector_kwargs=None, x_T=None, ddim_use_x0_pred=False):\n    log = {}\n\n    z, c, x, xrec, xc = model.get_input(batch, model.first_stage_key,\n                                        return_first_stage_outputs=True,\n                                        force_c_encode=not (hasattr(model, 'split_input_params')\n                                                            and model.cond_stage_key == 'coordinates_bbox'),\n                                        return_original_cond=True)\n\n    if custom_shape is not None:\n        z = torch.randn(custom_shape)\n        print(f\"Generating {custom_shape[0]} samples of shape {custom_shape[1:]}\")\n\n    z0 = None\n\n    log[\"input\"] = x\n    log[\"reconstruction\"] = xrec\n\n    if ismap(xc):\n        log[\"original_conditioning\"] = model.to_rgb(xc)\n        if hasattr(model, 'cond_stage_key'):\n            log[model.cond_stage_key] = model.to_rgb(xc)\n\n    else:\n        log[\"original_conditioning\"] = xc if xc is not None else torch.zeros_like(x)\n        if model.cond_stage_model:\n            log[model.cond_stage_key] = xc if xc is not None else torch.zeros_like(x)\n            if model.cond_stage_key == 'class_label':\n                log[model.cond_stage_key] = xc[model.cond_stage_key]\n\n    with model.ema_scope(\"Plotting\"):\n        t0 = time.time()\n\n        sample, intermediates = convsample_ddim(model, c, steps=custom_steps, shape=z.shape,\n                                                eta=eta,\n                                                quantize_x0=quantize_x0, mask=None, x0=z0,\n                                                temperature=temperature, score_corrector=corrector, corrector_kwargs=corrector_kwargs,\n                                                x_t=x_T)\n        t1 = time.time()\n\n        if ddim_use_x0_pred:\n            sample = intermediates['pred_x0'][-1]\n\n    x_sample = model.decode_first_stage(sample)\n\n    try:\n        x_sample_noquant = model.decode_first_stage(sample, force_not_quantize=True)\n        log[\"sample_noquant\"] = x_sample_noquant\n        log[\"sample_diff\"] = torch.abs(x_sample_noquant - x_sample)\n    except Exception:\n        pass\n\n    log[\"sample\"] = x_sample\n    log[\"time\"] = t1 - t0\n\n    return log\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "extensions-builtin/LDSR/preload.py", "size": 221, "license": "AGPL-3.0", "content_sha": "d746007c7cc83b037b6ae82b766475b56c3fd778", "findings": [], "content": "import os\r\nfrom modules import paths\r\n\r\n\r\ndef preload(parser):\r\n    parser.add_argument(\"--ldsr-models-path\", type=str, help=\"Path to directory with LDSR model file(s).\", default=os.path.join(paths.models_path, 'LDSR'))\r\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "extensions-builtin/LDSR/scripts/ldsr_model.py", "size": 3128, "license": "AGPL-3.0", "content_sha": "bd78decea1ec9fc66d61d66ee64457458a290f72", "findings": [], "content": "import os\n\nfrom modules.modelloader import load_file_from_url\nfrom modules.upscaler import Upscaler, UpscalerData\nfrom ldsr_model_arch import LDSR\nfrom modules import shared, script_callbacks, errors\nimport sd_hijack_autoencoder  # noqa: F401\nimport sd_hijack_ddpm_v1  # noqa: F401\n\n\nclass UpscalerLDSR(Upscaler):\n    def __init__(self, user_path):\n        self.name = \"LDSR\"\n        self.user_path = user_path\n        self.model_url = \"https://heibox.uni-heidelberg.de/f/578df07c8fc04ffbadf3/?dl=1\"\n        self.yaml_url = \"https://heibox.uni-heidelberg.de/f/31a76b13ea27482981b4/?dl=1\"\n        super().__init__()\n        scaler_data = UpscalerData(\"LDSR\", None, self)\n        self.scalers = [scaler_data]\n\n    def load_model(self, path: str):\n        # Remove incorrect project.yaml file if too big\n        yaml_path = os.path.join(self.model_path, \"project.yaml\")\n        old_model_path = os.path.join(self.model_path, \"model.pth\")\n        new_model_path = os.path.join(self.model_path, \"model.ckpt\")\n\n        local_model_paths = self.find_models(ext_filter=[\".ckpt\", \".safetensors\"])\n        local_ckpt_path = next(iter([local_model for local_model in local_model_paths if local_model.endswith(\"model.ckpt\")]), None)\n        local_safetensors_path = next(iter([local_model for local_model in local_model_paths if local_model.endswith(\"model.safetensors\")]), None)\n        local_yaml_path = next(iter([local_model for local_model in local_model_paths if local_model.endswith(\"project.yaml\")]), None)\n\n        if os.path.exists(yaml_path):\n            statinfo = os.stat(yaml_path)\n            if statinfo.st_size >= 10485760:\n                print(\"Removing invalid LDSR YAML file.\")\n                os.remove(yaml_path)\n\n        if os.path.exists(old_model_path):\n            print(\"Renaming model from model.pth to model.ckpt\")\n            os.rename(old_model_path, new_model_path)\n\n        if local_safetensors_path is not None and os.path.exists(local_safetensors_path):\n            model = local_safetensors_path\n        else:\n            model = local_ckpt_path or load_file_from_url(self.model_url, model_dir=self.model_download_path, file_name=\"model.ckpt\")\n\n        yaml = local_yaml_path or load_file_from_url(self.yaml_url, model_dir=self.model_download_path, file_name=\"project.yaml\")\n\n        return LDSR(model, yaml)\n\n    def do_upscale(self, img, path):\n        try:\n            ldsr = self.load_model(path)\n        except Exception:\n            errors.report(f\"Failed loading LDSR model {path}\", exc_info=True)\n            return img\n        ddim_steps = shared.opts.ldsr_steps\n        return ldsr.super_resolution(img, ddim_steps, self.scale)\n\n\ndef on_ui_settings():\n    import gradio as gr\n\n    shared.opts.add_option(\"ldsr_steps\", shared.OptionInfo(100, \"LDSR processing steps. Lower = faster\", gr.Slider, {\"minimum\": 1, \"maximum\": 200, \"step\": 1}, section=('upscaling', \"Upscaling\")))\n    shared.opts.add_option(\"ldsr_cached\", shared.OptionInfo(False, \"Cache LDSR model in memory\", gr.Checkbox, {\"interactive\": True}, section=('upscaling', \"Upscaling\")))\n\n\nscript_callbacks.on_ui_settings(on_ui_settings)\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "extensions-builtin/LDSR/sd_hijack_autoencoder.py", "size": 11836, "license": "AGPL-3.0", "content_sha": "c29d274da825d2500b77a2022db3421b40b18886", "findings": [], "content": "# The content of this file comes from the ldm/models/autoencoder.py file of the compvis/stable-diffusion repo\n# The VQModel & VQModelInterface were subsequently removed from ldm/models/autoencoder.py when we moved to the stability-ai/stablediffusion repo\n# As the LDSR upscaler relies on VQModel & VQModelInterface, the hijack aims to put them back into the ldm.models.autoencoder\nimport numpy as np\nimport torch\nimport pytorch_lightning as pl\nimport torch.nn.functional as F\nfrom contextlib import contextmanager\n\nfrom torch.optim.lr_scheduler import LambdaLR\n\nfrom ldm.modules.ema import LitEma\nfrom vqvae_quantize import VectorQuantizer2 as VectorQuantizer\nfrom ldm.modules.diffusionmodules.model import Encoder, Decoder\nfrom ldm.util import instantiate_from_config\n\nimport ldm.models.autoencoder\nfrom packaging import version\n\nclass VQModel(pl.LightningModule):\n    def __init__(self,\n                 ddconfig,\n                 lossconfig,\n                 n_embed,\n                 embed_dim,\n                 ckpt_path=None,\n                 ignore_keys=None,\n                 image_key=\"image\",\n                 colorize_nlabels=None,\n                 monitor=None,\n                 batch_resize_range=None,\n                 scheduler_config=None,\n                 lr_g_factor=1.0,\n                 remap=None,\n                 sane_index_shape=False, # tell vector quantizer to return indices as bhw\n                 use_ema=False\n                 ):\n        super().__init__()\n        self.embed_dim = embed_dim\n        self.n_embed = n_embed\n        self.image_key = image_key\n        self.encoder = Encoder(**ddconfig)\n        self.decoder = Decoder(**ddconfig)\n        self.loss = instantiate_from_config(lossconfig)\n        self.quantize = VectorQuantizer(n_embed, embed_dim, beta=0.25,\n                                        remap=remap,\n                                        sane_index_shape=sane_index_shape)\n        self.quant_conv = torch.nn.Conv2d(ddconfig[\"z_channels\"], embed_dim, 1)\n        self.post_quant_conv = torch.nn.Conv2d(embed_dim, ddconfig[\"z_channels\"], 1)\n        if colorize_nlabels is not None:\n            assert type(colorize_nlabels)==int\n            self.register_buffer(\"colorize\", torch.randn(3, colorize_nlabels, 1, 1))\n        if monitor is not None:\n            self.monitor = monitor\n        self.batch_resize_range = batch_resize_range\n        if self.batch_resize_range is not None:\n            print(f\"{self.__class__.__name__}: Using per-batch resizing in range {batch_resize_range}.\")\n\n        self.use_ema = use_ema\n        if self.use_ema:\n            self.model_ema = LitEma(self)\n            print(f\"Keeping EMAs of {len(list(self.model_ema.buffers()))}.\")\n\n        if ckpt_path is not None:\n            self.init_from_ckpt(ckpt_path, ignore_keys=ignore_keys or [])\n        self.scheduler_config = scheduler_config\n        self.lr_g_factor = lr_g_factor\n\n    @contextmanager\n    def ema_scope(self, context=None):\n        if self.use_ema:\n            self.model_ema.store(self.parameters())\n            self.model_ema.copy_to(self)\n            if context is not None:\n                print(f\"{context}: Switched to EMA weights\")\n        try:\n            yield None\n        finally:\n            if self.use_ema:\n                self.model_ema.restore(self.parameters())\n                if context is not None:\n                    print(f\"{context}: Restored training weights\")\n\n    def init_from_ckpt(self, path, ignore_keys=None):\n        sd = torch.load(path, map_location=\"cpu\")[\"state_dict\"]\n        keys = list(sd.keys())\n        for k in keys:\n            for ik in ignore_keys or []:\n                if k.startswith(ik):\n                    print(\"Deleting key {} from state_dict.\".format(k))\n                    del sd[k]\n        missing, unexpected = self.load_state_dict(sd, strict=False)\n        print(f\"Restored from {path} with {len(missing)} missing and {len(unexpected)} unexpected keys\")\n        if missing:\n            print(f\"Missing Keys: {missing}\")\n        if unexpected:\n            print(f\"Unexpected Keys: {unexpected}\")\n\n    def on_train_batch_end(self, *args, **kwargs):\n        if self.use_ema:\n            self.model_ema(self)\n\n    def encode(self, x):\n        h = self.encoder(x)\n        h = self.quant_conv(h)\n        quant, emb_loss, info = self.quantize(h)\n        return quant, emb_loss, info\n\n    def encode_to_prequant(self, x):\n        h = self.encoder(x)\n        h = self.quant_conv(h)\n        return h\n\n    def decode(self, quant):\n        quant = self.post_quant_conv(quant)\n        dec = self.decoder(quant)\n        return dec\n\n    def decode_code(self, code_b):\n        quant_b = self.quantize.embed_code(code_b)\n        dec = self.decode(quant_b)\n        return dec\n\n    def forward(self, input, return_pred_indices=False):\n        quant, diff, (_,_,ind) = self.encode(input)\n        dec = self.decode(quant)\n        if return_pred_indices:\n            return dec, diff, ind\n        return dec, diff\n\n    def get_input(self, batch, k):\n        x = batch[k]\n        if len(x.shape) == 3:\n            x = x[..., None]\n        x = x.permute(0, 3, 1, 2).to(memory_format=torch.contiguous_format).float()\n        if self.batch_resize_range is not None:\n            lower_size = self.batch_resize_range[0]\n            upper_size = self.batch_resize_range[1]\n            if self.global_step <= 4:\n                # do the first few batches with max size to avoid later oom\n                new_resize = upper_size\n            else:\n                new_resize = np.random.choice(np.arange(lower_size, upper_size+16, 16))\n            if new_resize != x.shape[2]:\n                x = F.interpolate(x, size=new_resize, mode=\"bicubic\")\n            x = x.detach()\n        return x\n\n    def training_step(self, batch, batch_idx, optimizer_idx):\n        # https://github.com/pytorch/pytorch/issues/37142\n        # try not to fool the heuristics\n        x = self.get_input(batch, self.image_key)\n        xrec, qloss, ind = self(x, return_pred_indices=True)\n\n        if optimizer_idx == 0:\n            # autoencode\n            aeloss, log_dict_ae = self.loss(qloss, x, xrec, optimizer_idx, self.global_step,\n                                            last_layer=self.get_last_layer(), split=\"train\",\n                                            predicted_indices=ind)\n\n            self.log_dict(log_dict_ae, prog_bar=False, logger=True, on_step=True, on_epoch=True)\n            return aeloss\n\n        if optimizer_idx == 1:\n            # discriminator\n            discloss, log_dict_disc = self.loss(qloss, x, xrec, optimizer_idx, self.global_step,\n                                            last_layer=self.get_last_layer(), split=\"train\")\n            self.log_dict(log_dict_disc, prog_bar=False, logger=True, on_step=True, on_epoch=True)\n            return discloss\n\n    def validation_step(self, batch, batch_idx):\n        log_dict = self._validation_step(batch, batch_idx)\n        with self.ema_scope():\n            self._validation_step(batch, batch_idx, suffix=\"_ema\")\n        return log_dict\n\n    def _validation_step(self, batch, batch_idx, suffix=\"\"):\n        x = self.get_input(batch, self.image_key)\n        xrec, qloss, ind = self(x, return_pred_indices=True)\n        aeloss, log_dict_ae = self.loss(qloss, x, xrec, 0,\n                                        self.global_step,\n                                        last_layer=self.get_last_layer(),\n                                        split=\"val\"+suffix,\n                                        predicted_indices=ind\n                                        )\n\n        discloss, log_dict_disc = self.loss(qloss, x, xrec, 1,\n                                            self.global_step,\n                                            last_layer=self.get_last_layer(),\n                                            split=\"val\"+suffix,\n                                            predicted_indices=ind\n                                            )\n        rec_loss = log_dict_ae[f\"val{suffix}/rec_loss\"]\n        self.log(f\"val{suffix}/rec_loss\", rec_loss,\n                   prog_bar=True, logger=True, on_step=False, on_epoch=True, sync_dist=True)\n        self.log(f\"val{suffix}/aeloss\", aeloss,\n                   prog_bar=True, logger=True, on_step=False, on_epoch=True, sync_dist=True)\n        if version.parse(pl.__version__) >= version.parse('1.4.0'):\n            del log_dict_ae[f\"val{suffix}/rec_loss\"]\n        self.log_dict(log_dict_ae)\n        self.log_dict(log_dict_disc)\n        return self.log_dict\n\n    def configure_optimizers(self):\n        lr_d = self.learning_rate\n        lr_g = self.lr_g_factor*self.learning_rate\n        print(\"lr_d\", lr_d)\n        print(\"lr_g\", lr_g)\n        opt_ae = torch.optim.Adam(list(self.encoder.parameters())+\n                                  list(self.decoder.parameters())+\n                                  list(self.quantize.parameters())+\n                                  list(self.quant_conv.parameters())+\n                                  list(self.post_quant_conv.parameters()),\n                                  lr=lr_g, betas=(0.5, 0.9))\n        opt_disc = torch.optim.Adam(self.loss.discriminator.parameters(),\n                                    lr=lr_d, betas=(0.5, 0.9))\n\n        if self.scheduler_config is not None:\n            scheduler = instantiate_from_config(self.scheduler_config)\n\n            print(\"Setting up LambdaLR scheduler...\")\n            scheduler = [\n                {\n                    'scheduler': LambdaLR(opt_ae, lr_lambda=scheduler.schedule),\n                    'interval': 'step',\n                    'frequency': 1\n                },\n                {\n                    'scheduler': LambdaLR(opt_disc, lr_lambda=scheduler.schedule),\n                    'interval': 'step',\n                    'frequency': 1\n                },\n            ]\n            return [opt_ae, opt_disc], scheduler\n        return [opt_ae, opt_disc], []\n\n    def get_last_layer(self):\n        return self.decoder.conv_out.weight\n\n    def log_images(self, batch, only_inputs=False, plot_ema=False, **kwargs):\n        log = {}\n        x = self.get_input(batch, self.image_key)\n        x = x.to(self.device)\n        if only_inputs:\n            log[\"inputs\"] = x\n            return log\n        xrec, _ = self(x)\n        if x.shape[1] > 3:\n            # colorize with random projection\n            assert xrec.shape[1] > 3\n            x = self.to_rgb(x)\n            xrec = self.to_rgb(xrec)\n        log[\"inputs\"] = x\n        log[\"reconstructions\"] = xrec\n        if plot_ema:\n            with self.ema_scope():\n                xrec_ema, _ = self(x)\n                if x.shape[1] > 3:\n                    xrec_ema = self.to_rgb(xrec_ema)\n                log[\"reconstructions_ema\"] = xrec_ema\n        return log\n\n    def to_rgb(self, x):\n        assert self.image_key == \"segmentation\"\n        if not hasattr(self, \"colorize\"):\n            self.register_buffer(\"colorize\", torch.randn(3, x.shape[1], 1, 1).to(x))\n        x = F.conv2d(x, weight=self.colorize)\n        x = 2.*(x-x.min())/(x.max()-x.min()) - 1.\n        return x\n\n\nclass VQModelInterface(VQModel):\n    def __init__(self, embed_dim, *args, **kwargs):\n        super().__init__(*args, embed_dim=embed_dim, **kwargs)\n        self.embed_dim = embed_dim\n\n    def encode(self, x):\n        h = self.encoder(x)\n        h = self.quant_conv(h)\n        return h\n\n    def decode(self, h, force_not_quantize=False):\n        # also go through quantization layer\n        if not force_not_quantize:\n            quant, emb_loss, info = self.quantize(h)\n        else:\n            quant = h\n        quant = self.post_quant_conv(quant)\n        dec = self.decoder(quant)\n        return dec\n\nldm.models.autoencoder.VQModel = VQModel\nldm.models.autoencoder.VQModelInterface = VQModelInterface\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "extensions-builtin/LDSR/sd_hijack_ddpm_v1.py", "size": 67254, "license": "AGPL-3.0", "content_sha": "51ab182128256ba8595fefd6288374642ad72a84", "findings": [], "content": "# This script is copied from the compvis/stable-diffusion repo (aka the SD V1 repo)\n# Original filename: ldm/models/diffusion/ddpm.py\n# The purpose to reinstate the old DDPM logic which works with VQ, whereas the V2 one doesn't\n# Some models such as LDSR require VQ to work correctly\n# The classes are suffixed with \"V1\" and added back to the \"ldm.models.diffusion.ddpm\" module\n\nimport torch\nimport torch.nn as nn\nimport numpy as np\nimport pytorch_lightning as pl\nfrom torch.optim.lr_scheduler import LambdaLR\nfrom einops import rearrange, repeat\nfrom contextlib import contextmanager\nfrom functools import partial\nfrom tqdm import tqdm\nfrom torchvision.utils import make_grid\nfrom pytorch_lightning.utilities.distributed import rank_zero_only\n\nfrom ldm.util import log_txt_as_img, exists, default, ismap, isimage, mean_flat, count_params, instantiate_from_config\nfrom ldm.modules.ema import LitEma\nfrom ldm.modules.distributions.distributions import normal_kl, DiagonalGaussianDistribution\nfrom ldm.models.autoencoder import VQModelInterface, IdentityFirstStage, AutoencoderKL\nfrom ldm.modules.diffusionmodules.util import make_beta_schedule, extract_into_tensor, noise_like\nfrom ldm.models.diffusion.ddim import DDIMSampler\n\nimport ldm.models.diffusion.ddpm\n\n__conditioning_keys__ = {'concat': 'c_concat',\n                         'crossattn': 'c_crossattn',\n                         'adm': 'y'}\n\n\ndef disabled_train(self, mode=True):\n    \"\"\"Overwrite model.train with this function to make sure train/eval mode\n    does not change anymore.\"\"\"\n    return self\n\n\ndef uniform_on_device(r1, r2, shape, device):\n    return (r1 - r2) * torch.rand(*shape, device=device) + r2\n\n\nclass DDPMV1(pl.LightningModule):\n    # classic DDPM with Gaussian diffusion, in image space\n    def __init__(self,\n                 unet_config,\n                 timesteps=1000,\n                 beta_schedule=\"linear\",\n                 loss_type=\"l2\",\n                 ckpt_path=None,\n                 ignore_keys=None,\n                 load_only_unet=False,\n                 monitor=\"val/loss\",\n                 use_ema=True,\n                 first_stage_key=\"image\",\n                 image_size=256,\n                 channels=3,\n                 log_every_t=100,\n                 clip_denoised=True,\n                 linear_start=1e-4,\n                 linear_end=2e-2,\n                 cosine_s=8e-3,\n                 given_betas=None,\n                 original_elbo_weight=0.,\n                 v_posterior=0.,  # weight for choosing posterior variance as sigma = (1-v) * beta_tilde + v * beta\n                 l_simple_weight=1.,\n                 conditioning_key=None,\n                 parameterization=\"eps\",  # all assuming fixed variance schedules\n                 scheduler_config=None,\n                 use_positional_encodings=False,\n                 learn_logvar=False,\n                 logvar_init=0.,\n                 ):\n        super().__init__()\n        assert parameterization in [\"eps\", \"x0\"], 'currently only supporting \"eps\" and \"x0\"'\n        self.parameterization = parameterization\n        print(f\"{self.__class__.__name__}: Running in {self.parameterization}-prediction mode\")\n        self.cond_stage_model = None\n        self.clip_denoised = clip_denoised\n        self.log_every_t = log_every_t\n        self.first_stage_key = first_stage_key\n        self.image_size = image_size  # try conv?\n        self.channels = channels\n        self.use_positional_encodings = use_positional_encodings\n        self.model = DiffusionWrapperV1(unet_config, conditioning_key)\n        count_params(self.model, verbose=True)\n        self.use_ema = use_ema\n        if self.use_ema:\n            self.model_ema = LitEma(self.model)\n            print(f\"Keeping EMAs of {len(list(self.model_ema.buffers()))}.\")\n\n        self.use_scheduler = scheduler_config is not None\n        if self.use_scheduler:\n            self.scheduler_config = scheduler_config\n\n        self.v_posterior = v_posterior\n        self.original_elbo_weight = original_elbo_weight\n        self.l_simple_weight = l_simple_weight\n\n        if monitor is not None:\n            self.monitor = monitor\n        if ckpt_path is not None:\n            self.init_from_ckpt(ckpt_path, ignore_keys=ignore_keys or [], only_model=load_only_unet)\n\n        self.register_schedule(given_betas=given_betas, beta_schedule=beta_schedule, timesteps=timesteps,\n                               linear_start=linear_start, linear_end=linear_end, cosine_s=cosine_s)\n\n        self.loss_type = loss_type\n\n        self.learn_logvar = learn_logvar\n        self.logvar = torch.full(fill_value=logvar_init, size=(self.num_timesteps,))\n        if self.learn_logvar:\n            self.logvar = nn.Parameter(self.logvar, requires_grad=True)\n\n\n    def register_schedule(self, given_betas=None, beta_schedule=\"linear\", timesteps=1000,\n                          linear_start=1e-4, linear_end=2e-2, cosine_s=8e-3):\n        if exists(given_betas):\n            betas = given_betas\n        else:\n            betas = make_beta_schedule(beta_schedule, timesteps, linear_start=linear_start, linear_end=linear_end,\n                                       cosine_s=cosine_s)\n        alphas = 1. - betas\n        alphas_cumprod = np.cumprod(alphas, axis=0)\n        alphas_cumprod_prev = np.append(1., alphas_cumprod[:-1])\n\n        timesteps, = betas.shape\n        self.num_timesteps = int(timesteps)\n        self.linear_start = linear_start\n        self.linear_end = linear_end\n        assert alphas_cumprod.shape[0] == self.num_timesteps, 'alphas have to be defined for each timestep'\n\n        to_torch = partial(torch.tensor, dtype=torch.float32)\n\n        self.register_buffer('betas', to_torch(betas))\n        self.register_buffer('alphas_cumprod', to_torch(alphas_cumprod))\n        self.register_buffer('alphas_cumprod_prev', to_torch(alphas_cumprod_prev))\n\n        # calculations for diffusion q(x_t | x_{t-1}) and others\n        self.register_buffer('sqrt_alphas_cumprod', to_torch(np.sqrt(alphas_cumprod)))\n        self.register_buffer('sqrt_one_minus_alphas_cumprod', to_torch(np.sqrt(1. - alphas_cumprod)))\n        self.register_buffer('log_one_minus_alphas_cumprod', to_torch(np.log(1. - alphas_cumprod)))\n        self.register_buffer('sqrt_recip_alphas_cumprod', to_torch(np.sqrt(1. / alphas_cumprod)))\n        self.register_buffer('sqrt_recipm1_alphas_cumprod', to_torch(np.sqrt(1. / alphas_cumprod - 1)))\n\n        # calculations for posterior q(x_{t-1} | x_t, x_0)\n        posterior_variance = (1 - self.v_posterior) * betas * (1. - alphas_cumprod_prev) / (\n                    1. - alphas_cumprod) + self.v_posterior * betas\n        # above: equal to 1. / (1. / (1. - alpha_cumprod_tm1) + alpha_t / beta_t)\n        self.register_buffer('posterior_variance', to_torch(posterior_variance))\n        # below: log calculation clipped because the posterior variance is 0 at the beginning of the diffusion chain\n        self.register_buffer('posterior_log_variance_clipped', to_torch(np.log(np.maximum(posterior_variance, 1e-20))))\n        self.register_buffer('posterior_mean_coef1', to_torch(\n            betas * np.sqrt(alphas_cumprod_prev) / (1. - alphas_cumprod)))\n        self.register_buffer('posterior_mean_coef2', to_torch(\n            (1. - alphas_cumprod_prev) * np.sqrt(alphas) / (1. - alphas_cumprod)))\n\n        if self.parameterization == \"eps\":\n            lvlb_weights = self.betas ** 2 / (\n                        2 * self.posterior_variance * to_torch(alphas) * (1 - self.alphas_cumprod))\n        elif self.parameterization == \"x0\":\n            lvlb_weights = 0.5 * np.sqrt(torch.Tensor(alphas_cumprod)) / (2. * 1 - torch.Tensor(alphas_cumprod))\n        else:\n            raise NotImplementedError(\"mu not supported\")\n        # TODO how to choose this term\n        lvlb_weights[0] = lvlb_weights[1]\n        self.register_buffer('lvlb_weights', lvlb_weights, persistent=False)\n        assert not torch.isnan(self.lvlb_weights).all()\n\n    @contextmanager\n    def ema_scope(self, context=None):\n        if self.use_ema:\n            self.model_ema.store(self.model.parameters())\n            self.model_ema.copy_to(self.model)\n            if context is not None:\n                print(f\"{context}: Switched to EMA weights\")\n        try:\n            yield None\n        finally:\n            if self.use_ema:\n                self.model_ema.restore(self.model.parameters())\n                if context is not None:\n                    print(f\"{context}: Restored training weights\")\n\n    def init_from_ckpt(self, path, ignore_keys=None, only_model=False):\n        sd = torch.load(path, map_location=\"cpu\")\n        if \"state_dict\" in list(sd.keys()):\n            sd = sd[\"state_dict\"]\n        keys = list(sd.keys())\n        for k in keys:\n            for ik in ignore_keys or []:\n                if k.startswith(ik):\n                    print(\"Deleting key {} from state_dict.\".format(k))\n                    del sd[k]\n        missing, unexpected = self.load_state_dict(sd, strict=False) if not only_model else self.model.load_state_dict(\n            sd, strict=False)\n        print(f\"Restored from {path} with {len(missing)} missing and {len(unexpected)} unexpected keys\")\n        if missing:\n            print(f\"Missing Keys: {missing}\")\n        if unexpected:\n            print(f\"Unexpected Keys: {unexpected}\")\n\n    def q_mean_variance(self, x_start, t):\n        \"\"\"\n        Get the distribution q(x_t | x_0).\n        :param x_start: the [N x C x ...] tensor of noiseless inputs.\n        :param t: the number of diffusion steps (minus 1). Here, 0 means one step.\n        :return: A tuple (mean, variance, log_variance), all of x_start's shape.\n        \"\"\"\n        mean = (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start)\n        variance = extract_into_tensor(1.0 - self.alphas_cumprod, t, x_start.shape)\n        log_variance = extract_into_tensor(self.log_one_minus_alphas_cumprod, t, x_start.shape)\n        return mean, variance, log_variance\n\n    def predict_start_from_noise(self, x_t, t, noise):\n        return (\n                extract_into_tensor(self.sqrt_recip_alphas_cumprod, t, x_t.shape) * x_t -\n                extract_into_tensor(self.sqrt_recipm1_alphas_cumprod, t, x_t.shape) * noise\n        )\n\n    def q_posterior(self, x_start, x_t, t):\n        posterior_mean = (\n                extract_into_tensor(self.posterior_mean_coef1, t, x_t.shape) * x_start +\n                extract_into_tensor(self.posterior_mean_coef2, t, x_t.shape) * x_t\n        )\n        posterior_variance = extract_into_tensor(self.posterior_variance, t, x_t.shape)\n        posterior_log_variance_clipped = extract_into_tensor(self.posterior_log_variance_clipped, t, x_t.shape)\n        return posterior_mean, posterior_variance, posterior_log_variance_clipped\n\n    def p_mean_variance(self, x, t, clip_denoised: bool):\n        model_out = self.model(x, t)\n        if self.parameterization == \"eps\":\n            x_recon = self.predict_start_from_noise(x, t=t, noise=model_out)\n        elif self.parameterization == \"x0\":\n            x_recon = model_out\n        if clip_denoised:\n            x_recon.clamp_(-1., 1.)\n\n        model_mean, posterior_variance, posterior_log_variance = self.q_posterior(x_start=x_recon, x_t=x, t=t)\n        return model_mean, posterior_variance, posterior_log_variance\n\n    @torch.no_grad()\n    def p_sample(self, x, t, clip_denoised=True, repeat_noise=False):\n        b, *_, device = *x.shape, x.device\n        model_mean, _, model_log_variance = self.p_mean_variance(x=x, t=t, clip_denoised=clip_denoised)\n        noise = noise_like(x.shape, device, repeat_noise)\n        # no noise when t == 0\n        nonzero_mask = (1 - (t == 0).float()).reshape(b, *((1,) * (len(x.shape) - 1)))\n        return model_mean + nonzero_mask * (0.5 * model_log_variance).exp() * noise\n\n    @torch.no_grad()\n    def p_sample_loop(self, shape, return_intermediates=False):\n        device = self.betas.device\n        b = shape[0]\n        img = torch.randn(shape, device=device)\n        intermediates = [img]\n        for i in tqdm(reversed(range(0, self.num_timesteps)), desc='Sampling t', total=self.num_timesteps):\n            img = self.p_sample(img, torch.full((b,), i, device=device, dtype=torch.long),\n                                clip_denoised=self.clip_denoised)\n            if i % self.log_every_t == 0 or i == self.num_timesteps - 1:\n                intermediates.append(img)\n        if return_intermediates:\n            return img, intermediates\n        return img\n\n    @torch.no_grad()\n    def sample(self, batch_size=16, return_intermediates=False):\n        image_size = self.image_size\n        channels = self.channels\n        return self.p_sample_loop((batch_size, channels, image_size, image_size),\n                                  return_intermediates=return_intermediates)\n\n    def q_sample(self, x_start, t, noise=None):\n        noise = default(noise, lambda: torch.randn_like(x_start))\n        return (extract_into_tensor(self.sqrt_alphas_cumprod, t, x_start.shape) * x_start +\n                extract_into_tensor(self.sqrt_one_minus_alphas_cumprod, t, x_start.shape) * noise)\n\n    def get_loss(self, pred, target, mean=True):\n        if self.loss_type == 'l1':\n            loss = (target - pred).abs()\n            if mean:\n                loss = loss.mean()\n        elif self.loss_type == 'l2':\n            if mean:\n                loss = torch.nn.functional.mse_loss(target, pred)\n            else:\n                loss = torch.nn.functional.mse_loss(target, pred, reduction='none')\n        else:\n            raise NotImplementedError(\"unknown loss type '{loss_type}'\")\n\n        return loss\n\n    def p_losses(self, x_start, t, noise=None):\n        noise = default(noise, lambda: torch.randn_like(x_start))\n        x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)\n        model_out = self.model(x_noisy, t)\n\n        loss_dict = {}\n        if self.parameterization == \"eps\":\n            target = noise\n        elif self.parameterization == \"x0\":\n            target = x_start\n        else:\n            raise NotImplementedError(f\"Parameterization {self.parameterization} not yet supported\")\n\n        loss = self.get_loss(model_out, target, mean=False).mean(dim=[1, 2, 3])\n\n        log_prefix = 'train' if self.training else 'val'\n\n        loss_dict.update({f'{log_prefix}/loss_simple': loss.mean()})\n        loss_simple = loss.mean() * self.l_simple_weight\n\n        loss_vlb = (self.lvlb_weights[t] * loss).mean()\n        loss_dict.update({f'{log_prefix}/loss_vlb': loss_vlb})\n\n        loss = loss_simple + self.original_elbo_weight * loss_vlb\n\n        loss_dict.update({f'{log_prefix}/loss': loss})\n\n        return loss, loss_dict\n\n    def forward(self, x, *args, **kwargs):\n        # b, c, h, w, device, img_size, = *x.shape, x.device, self.image_size\n        # assert h == img_size and w == img_size, f'height and width of image must be {img_size}'\n        t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()\n        return self.p_losses(x, t, *args, **kwargs)\n\n    def get_input(self, batch, k):\n        x = batch[k]\n        if len(x.shape) == 3:\n            x = x[..., None]\n        x = rearrange(x, 'b h w c -> b c h w')\n        x = x.to(memory_format=torch.contiguous_format).float()\n        return x\n\n    def shared_step(self, batch):\n        x = self.get_input(batch, self.first_stage_key)\n        loss, loss_dict = self(x)\n        return loss, loss_dict\n\n    def training_step(self, batch, batch_idx):\n        loss, loss_dict = self.shared_step(batch)\n\n        self.log_dict(loss_dict, prog_bar=True,\n                      logger=True, on_step=True, on_epoch=True)\n\n        self.log(\"global_step\", self.global_step,\n                 prog_bar=True, logger=True, on_step=True, on_epoch=False)\n\n        if self.use_scheduler:\n            lr = self.optimizers().param_groups[0]['lr']\n            self.log('lr_abs', lr, prog_bar=True, logger=True, on_step=True, on_epoch=False)\n\n        return loss\n\n    @torch.no_grad()\n    def validation_step(self, batch, batch_idx):\n        _, loss_dict_no_ema = self.shared_step(batch)\n        with self.ema_scope():\n            _, loss_dict_ema = self.shared_step(batch)\n            loss_dict_ema = {key + '_ema': loss_dict_ema[key] for key in loss_dict_ema}\n        self.log_dict(loss_dict_no_ema, prog_bar=False, logger=True, on_step=False, on_epoch=True)\n        self.log_dict(loss_dict_ema, prog_bar=False, logger=True, on_step=False, on_epoch=True)\n\n    def on_train_batch_end(self, *args, **kwargs):\n        if self.use_ema:\n            self.model_ema(self.model)\n\n    def _get_rows_from_list(self, samples):\n        n_imgs_per_row = len(samples)\n        denoise_grid = rearrange(samples, 'n b c h w -> b n c h w')\n        denoise_grid = rearrange(denoise_grid, 'b n c h w -> (b n) c h w')\n        denoise_grid = make_grid(denoise_grid, nrow=n_imgs_per_row)\n        return denoise_grid\n\n    @torch.no_grad()\n    def log_images(self, batch, N=8, n_row=2, sample=True, return_keys=None, **kwargs):\n        log = {}\n        x = self.get_input(batch, self.first_stage_key)\n        N = min(x.shape[0], N)\n        n_row = min(x.shape[0], n_row)\n        x = x.to(self.device)[:N]\n        log[\"inputs\"] = x\n\n        # get diffusion row\n        diffusion_row = []\n        x_start = x[:n_row]\n\n        for t in range(self.num_timesteps):\n            if t % self.log_every_t == 0 or t == self.num_timesteps - 1:\n                t = repeat(torch.tensor([t]), '1 -> b', b=n_row)\n                t = t.to(self.device).long()\n                noise = torch.randn_like(x_start)\n                x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)\n                diffusion_row.append(x_noisy)\n\n        log[\"diffusion_row\"] = self._get_rows_from_list(diffusion_row)\n\n        if sample:\n            # get denoise row\n            with self.ema_scope(\"Plotting\"):\n                samples, denoise_row = self.sample(batch_size=N, return_intermediates=True)\n\n            log[\"samples\"] = samples\n            log[\"denoise_row\"] = self._get_rows_from_list(denoise_row)\n\n        if return_keys:\n            if np.intersect1d(list(log.keys()), return_keys).shape[0] == 0:\n                return log\n            else:\n                return {key: log[key] for key in return_keys}\n        return log\n\n    def configure_optimizers(self):\n        lr = self.learning_rate\n        params = list(self.model.parameters())\n        if self.learn_logvar:\n            params = params + [self.logvar]\n        opt = torch.optim.AdamW(params, lr=lr)\n        return opt\n\n\nclass LatentDiffusionV1(DDPMV1):\n    \"\"\"main class\"\"\"\n    def __init__(self,\n                 first_stage_config,\n                 cond_stage_config,\n                 num_timesteps_cond=None,\n                 cond_stage_key=\"image\",\n                 cond_stage_trainable=False,\n                 concat_mode=True,\n                 cond_stage_forward=None,\n                 conditioning_key=None,\n                 scale_factor=1.0,\n                 scale_by_std=False,\n                 *args, **kwargs):\n        self.num_timesteps_cond = default(num_timesteps_cond, 1)\n        self.scale_by_std = scale_by_std\n        assert self.num_timesteps_cond <= kwargs['timesteps']\n        # for backwards compatibility after implementation of DiffusionWrapper\n        if conditioning_key is None:\n            conditioning_key = 'concat' if concat_mode else 'crossattn'\n        if cond_stage_config == '__is_unconditional__':\n            conditioning_key = None\n        ckpt_path = kwargs.pop(\"ckpt_path\", None)\n        ignore_keys = kwargs.pop(\"ignore_keys\", [])\n        super().__init__(*args, conditioning_key=conditioning_key, **kwargs)\n        self.concat_mode = concat_mode\n        self.cond_stage_trainable = cond_stage_trainable\n        self.cond_stage_key = cond_stage_key\n        try:\n            self.num_downs = len(first_stage_config.params.ddconfig.ch_mult) - 1\n        except Exception:\n            self.num_downs = 0\n        if not scale_by_std:\n            self.scale_factor = scale_factor\n        else:\n            self.register_buffer('scale_factor', torch.tensor(scale_factor))\n        self.instantiate_first_stage(first_stage_config)\n        self.instantiate_cond_stage(cond_stage_config)\n        self.cond_stage_forward = cond_stage_forward\n        self.clip_denoised = False\n        self.bbox_tokenizer = None\n\n        self.restarted_from_ckpt = False\n        if ckpt_path is not None:\n            self.init_from_ckpt(ckpt_path, ignore_keys)\n            self.restarted_from_ckpt = True\n\n    def make_cond_schedule(self, ):\n        self.cond_ids = torch.full(size=(self.num_timesteps,), fill_value=self.num_timesteps - 1, dtype=torch.long)\n        ids = torch.round(torch.linspace(0, self.num_timesteps - 1, self.num_timesteps_cond)).long()\n        self.cond_ids[:self.num_timesteps_cond] = ids\n\n    @rank_zero_only\n    @torch.no_grad()\n    def on_train_batch_start(self, batch, batch_idx, dataloader_idx):\n        # only for very first batch\n        if self.scale_by_std and self.current_epoch == 0 and self.global_step == 0 and batch_idx == 0 and not self.restarted_from_ckpt:\n            assert self.scale_factor == 1., 'rather not use custom rescaling and std-rescaling simultaneously'\n            # set rescale weight to 1./std of encodings\n            print(\"### USING STD-RESCALING ###\")\n            x = super().get_input(batch, self.first_stage_key)\n            x = x.to(self.device)\n            encoder_posterior = self.encode_first_stage(x)\n            z = self.get_first_stage_encoding(encoder_posterior).detach()\n            del self.scale_factor\n            self.register_buffer('scale_factor', 1. / z.flatten().std())\n            print(f\"setting self.scale_factor to {self.scale_factor}\")\n            print(\"### USING STD-RESCALING ###\")\n\n    def register_schedule(self,\n                          given_betas=None, beta_schedule=\"linear\", timesteps=1000,\n                          linear_start=1e-4, linear_end=2e-2, cosine_s=8e-3):\n        super().register_schedule(given_betas, beta_schedule, timesteps, linear_start, linear_end, cosine_s)\n\n        self.shorten_cond_schedule = self.num_timesteps_cond > 1\n        if self.shorten_cond_schedule:\n            self.make_cond_schedule()\n\n    def instantiate_first_stage(self, config):\n        model = instantiate_from_config(config)\n        self.first_stage_model = model.eval()\n        self.first_stage_model.train = disabled_train\n        for param in self.first_stage_model.parameters():\n            param.requires_grad = False\n\n    def instantiate_cond_stage(self, config):\n        if not self.cond_stage_trainable:\n            if config == \"__is_first_stage__\":\n                print(\"Using first stage also as cond stage.\")\n                self.cond_stage_model = self.first_stage_model\n            elif config == \"__is_unconditional__\":\n                print(f\"Training {self.__class__.__name__} as an unconditional model.\")\n                self.cond_stage_model = None\n                # self.be_unconditional = True\n            else:\n                model = instantiate_from_config(config)\n                self.cond_stage_model = model.eval()\n                self.cond_stage_model.train = disabled_train\n                for param in self.cond_stage_model.parameters():\n                    param.requires_grad = False\n        else:\n            assert config != '__is_first_stage__'\n            assert config != '__is_unconditional__'\n            model = instantiate_from_config(config)\n            self.cond_stage_model = model\n\n    def _get_denoise_row_from_list(self, samples, desc='', force_no_decoder_quantization=False):\n        denoise_row = []\n        for zd in tqdm(samples, desc=desc):\n            denoise_row.append(self.decode_first_stage(zd.to(self.device),\n                                                            force_not_quantize=force_no_decoder_quantization))\n        n_imgs_per_row = len(denoise_row)\n        denoise_row = torch.stack(denoise_row)  # n_log_step, n_row, C, H, W\n        denoise_grid = rearrange(denoise_row, 'n b c h w -> b n c h w')\n        denoise_grid = rearrange(denoise_grid, 'b n c h w -> (b n) c h w')\n        denoise_grid = make_grid(denoise_grid, nrow=n_imgs_per_row)\n        return denoise_grid\n\n    def get_first_stage_encoding(self, encoder_posterior):\n        if isinstance(encoder_posterior, DiagonalGaussianDistribution):\n            z = encoder_posterior.sample()\n        elif isinstance(encoder_posterior, torch.Tensor):\n            z = encoder_posterior\n        else:\n            raise NotImplementedError(f\"encoder_posterior of type '{type(encoder_posterior)}' not yet implemented\")\n        return self.scale_factor * z\n\n    def get_learned_conditioning(self, c):\n        if self.cond_stage_forward is None:\n            if hasattr(self.cond_stage_model, 'encode') and callable(self.cond_stage_model.encode):\n                c = self.cond_stage_model.encode(c)\n                if isinstance(c, DiagonalGaussianDistribution):\n                    c = c.mode()\n            else:\n                c = self.cond_stage_model(c)\n        else:\n            assert hasattr(self.cond_stage_model, self.cond_stage_forward)\n            c = getattr(self.cond_stage_model, self.cond_stage_forward)(c)\n        return c\n\n    def meshgrid(self, h, w):\n        y = torch.arange(0, h).view(h, 1, 1).repeat(1, w, 1)\n        x = torch.arange(0, w).view(1, w, 1).repeat(h, 1, 1)\n\n        arr = torch.cat([y, x], dim=-1)\n        return arr\n\n    def delta_border(self, h, w):\n        \"\"\"\n        :param h: height\n        :param w: width\n        :return: normalized distance to image border,\n         with min distance = 0 at border and max dist = 0.5 at image center\n        \"\"\"\n        lower_right_corner = torch.tensor([h - 1, w - 1]).view(1, 1, 2)\n        arr = self.meshgrid(h, w) / lower_right_corner\n        dist_left_up = torch.min(arr, dim=-1, keepdims=True)[0]\n        dist_right_down = torch.min(1 - arr, dim=-1, keepdims=True)[0]\n        edge_dist = torch.min(torch.cat([dist_left_up, dist_right_down], dim=-1), dim=-1)[0]\n        return edge_dist\n\n    def get_weighting(self, h, w, Ly, Lx, device):\n        weighting = self.delta_border(h, w)\n        weighting = torch.clip(weighting, self.split_input_params[\"clip_min_weight\"],\n                               self.split_input_params[\"clip_max_weight\"], )\n        weighting = weighting.view(1, h * w, 1).repeat(1, 1, Ly * Lx).to(device)\n\n        if self.split_input_params[\"tie_braker\"]:\n            L_weighting = self.delta_border(Ly, Lx)\n            L_weighting = torch.clip(L_weighting,\n                                     self.split_input_params[\"clip_min_tie_weight\"],\n                                     self.split_input_params[\"clip_max_tie_weight\"])\n\n            L_weighting = L_weighting.view(1, 1, Ly * Lx).to(device)\n            weighting = weighting * L_weighting\n        return weighting\n\n    def get_fold_unfold(self, x, kernel_size, stride, uf=1, df=1):  # todo load once not every time, shorten code\n        \"\"\"\n        :param x: img of size (bs, c, h, w)\n        :return: n img crops of size (n, bs, c, kernel_size[0], kernel_size[1])\n        \"\"\"\n        bs, nc, h, w = x.shape\n\n        # number of crops in image\n        Ly = (h - kernel_size[0]) // stride[0] + 1\n        Lx = (w - kernel_size[1]) // stride[1] + 1\n\n        if uf == 1 and df == 1:\n            fold_params = dict(kernel_size=kernel_size, dilation=1, padding=0, stride=stride)\n            unfold = torch.nn.Unfold(**fold_params)\n\n            fold = torch.nn.Fold(output_size=x.shape[2:], **fold_params)\n\n            weighting = self.get_weighting(kernel_size[0], kernel_size[1], Ly, Lx, x.device).to(x.dtype)\n            normalization = fold(weighting).view(1, 1, h, w)  # normalizes the overlap\n            weighting = weighting.view((1, 1, kernel_size[0], kernel_size[1], Ly * Lx))\n\n        elif uf > 1 and df == 1:\n            fold_params = dict(kernel_size=kernel_size, dilation=1, padding=0, stride=stride)\n            unfold = torch.nn.Unfold(**fold_params)\n\n            fold_params2 = dict(kernel_size=(kernel_size[0] * uf, kernel_size[0] * uf),\n                                dilation=1, padding=0,\n                                stride=(stride[0] * uf, stride[1] * uf))\n            fold = torch.nn.Fold(output_size=(x.shape[2] * uf, x.shape[3] * uf), **fold_params2)\n\n            weighting = self.get_weighting(kernel_size[0] * uf, kernel_size[1] * uf, Ly, Lx, x.device).to(x.dtype)\n            normalization = fold(weighting).view(1, 1, h * uf, w * uf)  # normalizes the overlap\n            weighting = weighting.view((1, 1, kernel_size[0] * uf, kernel_size[1] * uf, Ly * Lx))\n\n        elif df > 1 and uf == 1:\n            fold_params = dict(kernel_size=kernel_size, dilation=1, padding=0, stride=stride)\n            unfold = torch.nn.Unfold(**fold_params)\n\n            fold_params2 = dict(kernel_size=(kernel_size[0] // df, kernel_size[0] // df),\n                                dilation=1, padding=0,\n                                stride=(stride[0] // df, stride[1] // df))\n            fold = torch.nn.Fold(output_size=(x.shape[2] // df, x.shape[3] // df), **fold_params2)\n\n            weighting = self.get_weighting(kernel_size[0] // df, kernel_size[1] // df, Ly, Lx, x.device).to(x.dtype)\n            normalization = fold(weighting).view(1, 1, h // df, w // df)  # normalizes the overlap\n            weighting = weighting.view((1, 1, kernel_size[0] // df, kernel_size[1] // df, Ly * Lx))\n\n        else:\n            raise NotImplementedError\n\n        return fold, unfold, normalization, weighting\n\n    @torch.no_grad()\n    def get_input(self, batch, k, return_first_stage_outputs=False, force_c_encode=False,\n                  cond_key=None, return_original_cond=False, bs=None):\n        x = super().get_input(batch, k)\n        if bs is not None:\n            x = x[:bs]\n        x = x.to(self.device)\n        encoder_posterior = self.encode_first_stage(x)\n        z = self.get_first_stage_encoding(encoder_posterior).detach()\n\n        if self.model.conditioning_key is not None:\n            if cond_key is None:\n                cond_key = self.cond_stage_key\n            if cond_key != self.first_stage_key:\n                if cond_key in ['caption', 'coordinates_bbox']:\n                    xc = batch[cond_key]\n                elif cond_key == 'class_label':\n                    xc = batch\n                else:\n                    xc = super().get_input(batch, cond_key).to(self.device)\n            else:\n                xc = x\n            if not self.cond_stage_trainable or force_c_encode:\n                if isinstance(xc, dict) or isinstance(xc, list):\n                    # import pudb; pudb.set_trace()\n                    c = self.get_learned_conditioning(xc)\n                else:\n                    c = self.get_learned_conditioning(xc.to(self.device))\n            else:\n                c = xc\n            if bs is not None:\n                c = c[:bs]\n\n            if self.use_positional_encodings:\n                pos_x, pos_y = self.compute_latent_shifts(batch)\n                ckey = __conditioning_keys__[self.model.conditioning_key]\n                c = {ckey: c, 'pos_x': pos_x, 'pos_y': pos_y}\n\n        else:\n            c = None\n            xc = None\n            if self.use_positional_encodings:\n                pos_x, pos_y = self.compute_latent_shifts(batch)\n                c = {'pos_x': pos_x, 'pos_y': pos_y}\n        out = [z, c]\n        if return_first_stage_outputs:\n            xrec = self.decode_first_stage(z)\n            out.extend([x, xrec])\n        if return_original_cond:\n            out.append(xc)\n        return out\n\n    @torch.no_grad()\n    def decode_first_stage(self, z, predict_cids=False, force_not_quantize=False):\n        if predict_cids:\n            if z.dim() == 4:\n                z = torch.argmax(z.exp(), dim=1).long()\n            z = self.first_stage_model.quantize.get_codebook_entry(z, shape=None)\n            z = rearrange(z, 'b h w c -> b c h w').contiguous()\n\n        z = 1. / self.scale_factor * z\n\n        if hasattr(self, \"split_input_params\"):\n            if self.split_input_params[\"patch_distributed_vq\"]:\n                ks = self.split_input_params[\"ks\"]  # eg. (128, 128)\n                stride = self.split_input_params[\"stride\"]  # eg. (64, 64)\n                uf = self.split_input_params[\"vqf\"]\n                bs, nc, h, w = z.shape\n                if ks[0] > h or ks[1] > w:\n                    ks = (min(ks[0], h), min(ks[1], w))\n                    print(\"reducing Kernel\")\n\n                if stride[0] > h or stride[1] > w:\n                    stride = (min(stride[0], h), min(stride[1], w))\n                    print(\"reducing stride\")\n\n                fold, unfold, normalization, weighting = self.get_fold_unfold(z, ks, stride, uf=uf)\n\n                z = unfold(z)  # (bn, nc * prod(**ks), L)\n                # 1. Reshape to img shape\n                z = z.view((z.shape[0], -1, ks[0], ks[1], z.shape[-1]))  # (bn, nc, ks[0], ks[1], L )\n\n                # 2. apply model loop over last dim\n                if isinstance(self.first_stage_model, VQModelInterface):\n                    output_list = [self.first_stage_model.decode(z[:, :, :, :, i],\n                                                                 force_not_quantize=predict_cids or force_not_quantize)\n                                   for i in range(z.shape[-1])]\n                else:\n\n                    output_list = [self.first_stage_model.decode(z[:, :, :, :, i])\n                                   for i in range(z.shape[-1])]\n\n                o = torch.stack(output_list, axis=-1)  # # (bn, nc, ks[0], ks[1], L)\n                o = o * weighting\n                # Reverse 1. reshape to img shape\n                o = o.view((o.shape[0], -1, o.shape[-1]))  # (bn, nc * ks[0] * ks[1], L)\n                # stitch crops together\n                decoded = fold(o)\n                decoded = decoded / normalization  # norm is shape (1, 1, h, w)\n                return decoded\n            else:\n                if isinstance(self.first_stage_model, VQModelInterface):\n                    return self.first_stage_model.decode(z, force_not_quantize=predict_cids or force_not_quantize)\n                else:\n                    return self.first_stage_model.decode(z)\n\n        else:\n            if isinstance(self.first_stage_model, VQModelInterface):\n                return self.first_stage_model.decode(z, force_not_quantize=predict_cids or force_not_quantize)\n            else:\n                return self.first_stage_model.decode(z)\n\n    # same as above but without decorator\n    def differentiable_decode_first_stage(self, z, predict_cids=False, force_not_quantize=False):\n        if predict_cids:\n            if z.dim() == 4:\n                z = torch.argmax(z.exp(), dim=1).long()\n            z = self.first_stage_model.quantize.get_codebook_entry(z, shape=None)\n            z = rearrange(z, 'b h w c -> b c h w').contiguous()\n\n        z = 1. / self.scale_factor * z\n\n        if hasattr(self, \"split_input_params\"):\n            if self.split_input_params[\"patch_distributed_vq\"]:\n                ks = self.split_input_params[\"ks\"]  # eg. (128, 128)\n                stride = self.split_input_params[\"stride\"]  # eg. (64, 64)\n                uf = self.split_input_params[\"vqf\"]\n                bs, nc, h, w = z.shape\n                if ks[0] > h or ks[1] > w:\n                    ks = (min(ks[0], h), min(ks[1], w))\n                    print(\"reducing Kernel\")\n\n                if stride[0] > h or stride[1] > w:\n                    stride = (min(stride[0], h), min(stride[1], w))\n                    print(\"reducing stride\")\n\n                fold, unfold, normalization, weighting = self.get_fold_unfold(z, ks, stride, uf=uf)\n\n                z = unfold(z)  # (bn, nc * prod(**ks), L)\n                # 1. Reshape to img shape\n                z = z.view((z.shape[0], -1, ks[0], ks[1], z.shape[-1]))  # (bn, nc, ks[0], ks[1], L )\n\n                # 2. apply model loop over last dim\n                if isinstance(self.first_stage_model, VQModelInterface):\n                    output_list = [self.first_stage_model.decode(z[:, :, :, :, i],\n                                                                 force_not_quantize=predict_cids or force_not_quantize)\n                                   for i in range(z.shape[-1])]\n                else:\n\n                    output_list = [self.first_stage_model.decode(z[:, :, :, :, i])\n                                   for i in range(z.shape[-1])]\n\n                o = torch.stack(output_list, axis=-1)  # # (bn, nc, ks[0], ks[1], L)\n                o = o * weighting\n                # Reverse 1. reshape to img shape\n                o = o.view((o.shape[0], -1, o.shape[-1]))  # (bn, nc * ks[0] * ks[1], L)\n                # stitch crops together\n                decoded = fold(o)\n                decoded = decoded / normalization  # norm is shape (1, 1, h, w)\n                return decoded\n            else:\n                if isinstance(self.first_stage_model, VQModelInterface):\n                    return self.first_stage_model.decode(z, force_not_quantize=predict_cids or force_not_quantize)\n                else:\n                    return self.first_stage_model.decode(z)\n\n        else:\n            if isinstance(self.first_stage_model, VQModelInterface):\n                return self.first_stage_model.decode(z, force_not_quantize=predict_cids or force_not_quantize)\n            else:\n                return self.first_stage_model.decode(z)\n\n    @torch.no_grad()\n    def encode_first_stage(self, x):\n        if hasattr(self, \"split_input_params\"):\n            if self.split_input_params[\"patch_distributed_vq\"]:\n                ks = self.split_input_params[\"ks\"]  # eg. (128, 128)\n                stride = self.split_input_params[\"stride\"]  # eg. (64, 64)\n                df = self.split_input_params[\"vqf\"]\n                self.split_input_params['original_image_size'] = x.shape[-2:]\n                bs, nc, h, w = x.shape\n                if ks[0] > h or ks[1] > w:\n                    ks = (min(ks[0], h), min(ks[1], w))\n                    print(\"reducing Kernel\")\n\n                if stride[0] > h or stride[1] > w:\n                    stride = (min(stride[0], h), min(stride[1], w))\n                    print(\"reducing stride\")\n\n                fold, unfold, normalization, weighting = self.get_fold_unfold(x, ks, stride, df=df)\n                z = unfold(x)  # (bn, nc * prod(**ks), L)\n                # Reshape to img shape\n                z = z.view((z.shape[0], -1, ks[0], ks[1], z.shape[-1]))  # (bn, nc, ks[0], ks[1], L )\n\n                output_list = [self.first_stage_model.encode(z[:, :, :, :, i])\n                               for i in range(z.shape[-1])]\n\n                o = torch.stack(output_list, axis=-1)\n                o = o * weighting\n\n                # Reverse reshape to img shape\n                o = o.view((o.shape[0], -1, o.shape[-1]))  # (bn, nc * ks[0] * ks[1], L)\n                # stitch crops together\n                decoded = fold(o)\n                decoded = decoded / normalization\n                return decoded\n\n            else:\n                return self.first_stage_model.encode(x)\n        else:\n            return self.first_stage_model.encode(x)\n\n    def shared_step(self, batch, **kwargs):\n        x, c = self.get_input(batch, self.first_stage_key)\n        loss = self(x, c)\n        return loss\n\n    def forward(self, x, c, *args, **kwargs):\n        t = torch.randint(0, self.num_timesteps, (x.shape[0],), device=self.device).long()\n        if self.model.conditioning_key is not None:\n            assert c is not None\n            if self.cond_stage_trainable:\n                c = self.get_learned_conditioning(c)\n            if self.shorten_cond_schedule:  # TODO: drop this option\n                tc = self.cond_ids[t].to(self.device)\n                c = self.q_sample(x_start=c, t=tc, noise=torch.randn_like(c.float()))\n        return self.p_losses(x, c, t, *args, **kwargs)\n\n    def apply_model(self, x_noisy, t, cond, return_ids=False):\n\n        if isinstance(cond, dict):\n            # hybrid case, cond is expected to be a dict\n            pass\n        else:\n            if not isinstance(cond, list):\n                cond = [cond]\n            key = 'c_concat' if self.model.conditioning_key == 'concat' else 'c_crossattn'\n            cond = {key: cond}\n\n        if hasattr(self, \"split_input_params\"):\n            assert len(cond) == 1  # todo can only deal with one conditioning atm\n            assert not return_ids\n            ks = self.split_input_params[\"ks\"]  # eg. (128, 128)\n            stride = self.split_input_params[\"stride\"]  # eg. (64, 64)\n\n            h, w = x_noisy.shape[-2:]\n\n            fold, unfold, normalization, weighting = self.get_fold_unfold(x_noisy, ks, stride)\n\n            z = unfold(x_noisy)  # (bn, nc * prod(**ks), L)\n            # Reshape to img shape\n            z = z.view((z.shape[0], -1, ks[0], ks[1], z.shape[-1]))  # (bn, nc, ks[0], ks[1], L )\n            z_list = [z[:, :, :, :, i] for i in range(z.shape[-1])]\n\n            if self.cond_stage_key in [\"image\", \"LR_image\", \"segmentation\",\n                                       'bbox_img'] and self.model.conditioning_key:  # todo check for completeness\n                c_key = next(iter(cond.keys()))  # get key\n                c = next(iter(cond.values()))  # get value\n                assert (len(c) == 1)  # todo extend to list with more than one elem\n                c = c[0]  # get element\n\n                c = unfold(c)\n                c = c.view((c.shape[0], -1, ks[0], ks[1], c.shape[-1]))  # (bn, nc, ks[0], ks[1], L )\n\n                cond_list = [{c_key: [c[:, :, :, :, i]]} for i in range(c.shape[-1])]\n\n            elif self.cond_stage_key == 'coordinates_bbox':\n                assert 'original_image_size' in self.split_input_params, 'BoundingBoxRescaling is missing original_image_size'\n\n                # assuming padding of unfold is always 0 and its dilation is always 1\n                n_patches_per_row = int((w - ks[0]) / stride[0] + 1)\n                full_img_h, full_img_w = self.split_input_params['original_image_size']\n                # as we are operating on latents, we need the factor from the original image size to the\n                # spatial latent size to properly rescale the crops for regenerating the bbox annotations\n                num_downs = self.first_stage_model.encoder.num_resolutions - 1\n                rescale_latent = 2 ** (num_downs)\n\n                # get top left positions of patches as conforming for the bbbox tokenizer, therefore we\n                # need to rescale the tl patch coordinates to be in between (0,1)\n                tl_patch_coordinates = [(rescale_latent * stride[0] * (patch_nr % n_patches_per_row) / full_img_w,\n                                         rescale_latent * stride[1] * (patch_nr // n_patches_per_row) / full_img_h)\n                                        for patch_nr in range(z.shape[-1])]\n\n                # patch_limits are tl_coord, width and height coordinates as (x_tl, y_tl, h, w)\n                patch_limits = [(x_tl, y_tl,\n                                 rescale_latent * ks[0] / full_img_w,\n                                 rescale_latent * ks[1] / full_img_h) for x_tl, y_tl in tl_patch_coordinates]\n                # patch_values = [(np.arange(x_tl,min(x_tl+ks, 1.)),np.arange(y_tl,min(y_tl+ks, 1.))) for x_tl, y_tl in tl_patch_coordinates]\n\n                # tokenize crop coordinates for the bounding boxes of the respective patches\n                patch_limits_tknzd = [torch.LongTensor(self.bbox_tokenizer._crop_encoder(bbox))[None].to(self.device)\n                                      for bbox in patch_limits]  # list of length l with tensors of shape (1, 2)\n                print(patch_limits_tknzd[0].shape)\n                # cut tknzd crop position from conditioning\n                assert isinstance(cond, dict), 'cond must be dict to be fed into model'\n                cut_cond = cond['c_crossattn'][0][..., :-2].to(self.device)\n                print(cut_cond.shape)\n\n                adapted_cond = torch.stack([torch.cat([cut_cond, p], dim=1) for p in patch_limits_tknzd])\n                adapted_cond = rearrange(adapted_cond, 'l b n -> (l b) n')\n                print(adapted_cond.shape)\n                adapted_cond = self.get_learned_conditioning(adapted_cond)\n                print(adapted_cond.shape)\n                adapted_cond = rearrange(adapted_cond, '(l b) n d -> l b n d', l=z.shape[-1])\n                print(adapted_cond.shape)\n\n                cond_list = [{'c_crossattn': [e]} for e in adapted_cond]\n\n            else:\n                cond_list = [cond for i in range(z.shape[-1])]  # Todo make this more efficient\n\n            # apply model by loop over crops\n            output_list = [self.model(z_list[i], t, **cond_list[i]) for i in range(z.shape[-1])]\n            assert not isinstance(output_list[0],\n                                  tuple)  # todo cant deal with multiple model outputs check this never happens\n\n            o = torch.stack(output_list, axis=-1)\n            o = o * weighting\n            # Reverse reshape to img shape\n            o = o.view((o.shape[0], -1, o.shape[-1]))  # (bn, nc * ks[0] * ks[1], L)\n            # stitch crops together\n            x_recon = fold(o) / normalization\n\n        else:\n            x_recon = self.model(x_noisy, t, **cond)\n\n        if isinstance(x_recon, tuple) and not return_ids:\n            return x_recon[0]\n        else:\n            return x_recon\n\n    def _predict_eps_from_xstart(self, x_t, t, pred_xstart):\n        return (extract_into_tensor(self.sqrt_recip_alphas_cumprod, t, x_t.shape) * x_t - pred_xstart) / \\\n               extract_into_tensor(self.sqrt_recipm1_alphas_cumprod, t, x_t.shape)\n\n    def _prior_bpd(self, x_start):\n        \"\"\"\n        Get the prior KL term for the variational lower-bound, measured in\n        bits-per-dim.\n        This term can't be optimized, as it only depends on the encoder.\n        :param x_start: the [N x C x ...] tensor of inputs.\n        :return: a batch of [N] KL values (in bits), one per batch element.\n        \"\"\"\n        batch_size = x_start.shape[0]\n        t = torch.tensor([self.num_timesteps - 1] * batch_size, device=x_start.device)\n        qt_mean, _, qt_log_variance = self.q_mean_variance(x_start, t)\n        kl_prior = normal_kl(mean1=qt_mean, logvar1=qt_log_variance, mean2=0.0, logvar2=0.0)\n        return mean_flat(kl_prior) / np.log(2.0)\n\n    def p_losses(self, x_start, cond, t, noise=None):\n        noise = default(noise, lambda: torch.randn_like(x_start))\n        x_noisy = self.q_sample(x_start=x_start, t=t, noise=noise)\n        model_output = self.apply_model(x_noisy, t, cond)\n\n        loss_dict = {}\n        prefix = 'train' if self.training else 'val'\n\n        if self.parameterization == \"x0\":\n            target = x_start\n        elif self.parameterization == \"eps\":\n            target = noise\n        else:\n            raise NotImplementedError()\n\n        loss_simple = self.get_loss(model_output, target, mean=False).mean([1, 2, 3])\n        loss_dict.update({f'{prefix}/loss_simple': loss_simple.mean()})\n\n        logvar_t = self.logvar[t].to(self.device)\n        loss = loss_simple / torch.exp(logvar_t) + logvar_t\n        # loss = loss_simple / torch.exp(self.logvar) + self.logvar\n        if self.learn_logvar:\n            loss_dict.update({f'{prefix}/loss_gamma': loss.mean()})\n            loss_dict.update({'logvar': self.logvar.data.mean()})\n\n        loss = self.l_simple_weight * loss.mean()\n\n        loss_vlb = self.get_loss(model_output, target, mean=False).mean(dim=(1, 2, 3))\n        loss_vlb = (self.lvlb_weights[t] * loss_vlb).mean()\n        loss_dict.update({f'{prefix}/loss_vlb': loss_vlb})\n        loss += (self.original_elbo_weight * loss_vlb)\n        loss_dict.update({f'{prefix}/loss': loss})\n\n        return loss, loss_dict\n\n    def p_mean_variance(self, x, c, t, clip_denoised: bool, return_codebook_ids=False, quantize_denoised=False,\n                        return_x0=False, score_corrector=None, corrector_kwargs=None):\n        t_in = t\n        model_out = self.apply_model(x, t_in, c, return_ids=return_codebook_ids)\n\n        if score_corrector is not None:\n            assert self.parameterization == \"eps\"\n            model_out = score_corrector.modify_score(self, model_out, x, t, c, **corrector_kwargs)\n\n        if return_codebook_ids:\n            model_out, logits = model_out\n\n        if self.parameterization == \"eps\":\n            x_recon = self.predict_start_from_noise(x, t=t, noise=model_out)\n        elif self.parameterization == \"x0\":\n            x_recon = model_out\n        else:\n            raise NotImplementedError()\n\n        if clip_denoised:\n            x_recon.clamp_(-1., 1.)\n        if quantize_denoised:\n            x_recon, _, [_, _, indices] = self.first_stage_model.quantize(x_recon)\n        model_mean, posterior_variance, posterior_log_variance = self.q_posterior(x_start=x_recon, x_t=x, t=t)\n        if return_codebook_ids:\n            return model_mean, posterior_variance, posterior_log_variance, logits\n        elif return_x0:\n            return model_mean, posterior_variance, posterior_log_variance, x_recon\n        else:\n            return model_mean, posterior_variance, posterior_log_variance\n\n    @torch.no_grad()\n    def p_sample(self, x, c, t, clip_denoised=False, repeat_noise=False,\n                 return_codebook_ids=False, quantize_denoised=False, return_x0=False,\n                 temperature=1., noise_dropout=0., score_corrector=None, corrector_kwargs=None):\n        b, *_, device = *x.shape, x.device\n        outputs = self.p_mean_variance(x=x, c=c, t=t, clip_denoised=clip_denoised,\n                                       return_codebook_ids=return_codebook_ids,\n                                       quantize_denoised=quantize_denoised,\n                                       return_x0=return_x0,\n                                       score_corrector=score_corrector, corrector_kwargs=corrector_kwargs)\n        if return_codebook_ids:\n            raise DeprecationWarning(\"Support dropped.\")\n            model_mean, _, model_log_variance, logits = outputs\n        elif return_x0:\n            model_mean, _, model_log_variance, x0 = outputs\n        else:\n            model_mean, _, model_log_variance = outputs\n\n        noise = noise_like(x.shape, device, repeat_noise) * temperature\n        if noise_dropout > 0.:\n            noise = torch.nn.functional.dropout(noise, p=noise_dropout)\n        # no noise when t == 0\n        nonzero_mask = (1 - (t == 0).float()).reshape(b, *((1,) * (len(x.shape) - 1)))\n\n        if return_codebook_ids:\n            return model_mean + nonzero_mask * (0.5 * model_log_variance).exp() * noise, logits.argmax(dim=1)\n        if return_x0:\n            return model_mean + nonzero_mask * (0.5 * model_log_variance).exp() * noise, x0\n        else:\n            return model_mean + nonzero_mask * (0.5 * model_log_variance).exp() * noise\n\n    @torch.no_grad()\n    def progressive_denoising(self, cond, shape, verbose=True, callback=None, quantize_denoised=False,\n                              img_callback=None, mask=None, x0=None, temperature=1., noise_dropout=0.,\n                              score_corrector=None, corrector_kwargs=None, batch_size=None, x_T=None, start_T=None,\n                              log_every_t=None):\n        if not log_every_t:\n            log_every_t = self.log_every_t\n        timesteps = self.num_timesteps\n        if batch_size is not None:\n            b = batch_size if batch_size is not None else shape[0]\n            shape = [batch_size] + list(shape)\n        else:\n            b = batch_size = shape[0]\n        if x_T is None:\n            img = torch.randn(shape, device=self.device)\n        else:\n            img = x_T\n        intermediates = []\n        if cond is not None:\n            if isinstance(cond, dict):\n                cond = {key: cond[key][:batch_size] if not isinstance(cond[key], list) else\n                [x[:batch_size] for x in cond[key]] for key in cond}\n            else:\n                cond = [c[:batch_size] for c in cond] if isinstance(cond, list) else cond[:batch_size]\n\n        if start_T is not None:\n            timesteps = min(timesteps, start_T)\n        iterator = tqdm(reversed(range(0, timesteps)), desc='Progressive Generation',\n                        total=timesteps) if verbose else reversed(\n            range(0, timesteps))\n        if type(temperature) == float:\n            temperature = [temperature] * timesteps\n\n        for i in iterator:\n            ts = torch.full((b,), i, device=self.device, dtype=torch.long)\n            if self.shorten_cond_schedule:\n                assert self.model.conditioning_key != 'hybrid'\n                tc = self.cond_ids[ts].to(cond.device)\n                cond = self.q_sample(x_start=cond, t=tc, noise=torch.randn_like(cond))\n\n            img, x0_partial = self.p_sample(img, cond, ts,\n                                            clip_denoised=self.clip_denoised,\n                                            quantize_denoised=quantize_denoised, return_x0=True,\n                                            temperature=temperature[i], noise_dropout=noise_dropout,\n                                            score_corrector=score_corrector, corrector_kwargs=corrector_kwargs)\n            if mask is not None:\n                assert x0 is not None\n                img_orig = self.q_sample(x0, ts)\n                img = img_orig * mask + (1. - mask) * img\n\n            if i % log_every_t == 0 or i == timesteps - 1:\n                intermediates.append(x0_partial)\n            if callback:\n                callback(i)\n            if img_callback:\n                img_callback(img, i)\n        return img, intermediates\n\n    @torch.no_grad()\n    def p_sample_loop(self, cond, shape, return_intermediates=False,\n                      x_T=None, verbose=True, callback=None, timesteps=None, quantize_denoised=False,\n                      mask=None, x0=None, img_callback=None, start_T=None,\n                      log_every_t=None):\n\n        if not log_every_t:\n            log_every_t = self.log_every_t\n        device = self.betas.device\n        b = shape[0]\n        if x_T is None:\n            img = torch.randn(shape, device=device)\n        else:\n            img = x_T\n\n        intermediates = [img]\n        if timesteps is None:\n            timesteps = self.num_timesteps\n\n        if start_T is not None:\n            timesteps = min(timesteps, start_T)\n        iterator = tqdm(reversed(range(0, timesteps)), desc='Sampling t', total=timesteps) if verbose else reversed(\n            range(0, timesteps))\n\n        if mask is not None:\n            assert x0 is not None\n            assert x0.shape[2:3] == mask.shape[2:3]  # spatial size has to match\n\n        for i in iterator:\n            ts = torch.full((b,), i, device=device, dtype=torch.long)\n            if self.shorten_cond_schedule:\n                assert self.model.conditioning_key != 'hybrid'\n                tc = self.cond_ids[ts].to(cond.device)\n                cond = self.q_sample(x_start=cond, t=tc, noise=torch.randn_like(cond))\n\n            img = self.p_sample(img, cond, ts,\n                                clip_denoised=self.clip_denoised,\n                                quantize_denoised=quantize_denoised)\n            if mask is not None:\n                img_orig = self.q_sample(x0, ts)\n                img = img_orig * mask + (1. - mask) * img\n\n            if i % log_every_t == 0 or i == timesteps - 1:\n                intermediates.append(img)\n            if callback:\n                callback(i)\n            if img_callback:\n                img_callback(img, i)\n\n        if return_intermediates:\n            return img, intermediates\n        return img\n\n    @torch.no_grad()\n    def sample(self, cond, batch_size=16, return_intermediates=False, x_T=None,\n               verbose=True, timesteps=None, quantize_denoised=False,\n               mask=None, x0=None, shape=None,**kwargs):\n        if shape is None:\n            shape = (batch_size, self.channels, self.image_size, self.image_size)\n        if cond is not None:\n            if isinstance(cond, dict):\n                cond = {key: cond[key][:batch_size] if not isinstance(cond[key], list) else\n                [x[:batch_size] for x in cond[key]] for key in cond}\n            else:\n                cond = [c[:batch_size] for c in cond] if isinstance(cond, list) else cond[:batch_size]\n        return self.p_sample_loop(cond,\n                                  shape,\n                                  return_intermediates=return_intermediates, x_T=x_T,\n                                  verbose=verbose, timesteps=timesteps, quantize_denoised=quantize_denoised,\n                                  mask=mask, x0=x0)\n\n    @torch.no_grad()\n    def sample_log(self,cond,batch_size,ddim, ddim_steps,**kwargs):\n\n        if ddim:\n            ddim_sampler = DDIMSampler(self)\n            shape = (self.channels, self.image_size, self.image_size)\n            samples, intermediates =ddim_sampler.sample(ddim_steps,batch_size,\n                                                        shape,cond,verbose=False,**kwargs)\n\n        else:\n            samples, intermediates = self.sample(cond=cond, batch_size=batch_size,\n                                                 return_intermediates=True,**kwargs)\n\n        return samples, intermediates\n\n\n    @torch.no_grad()\n    def log_images(self, batch, N=8, n_row=4, sample=True, ddim_steps=200, ddim_eta=1., return_keys=None,\n                   quantize_denoised=True, inpaint=True, plot_denoise_rows=False, plot_progressive_rows=True,\n                   plot_diffusion_rows=True, **kwargs):\n\n        use_ddim = ddim_steps is not None\n\n        log = {}\n        z, c, x, xrec, xc = self.get_input(batch, self.first_stage_key,\n                                           return_first_stage_outputs=True,\n                                           force_c_encode=True,\n                                           return_original_cond=True,\n                                           bs=N)\n        N = min(x.shape[0], N)\n        n_row = min(x.shape[0], n_row)\n        log[\"inputs\"] = x\n        log[\"reconstruction\"] = xrec\n        if self.model.conditioning_key is not None:\n            if hasattr(self.cond_stage_model, \"decode\"):\n                xc = self.cond_stage_model.decode(c)\n                log[\"conditioning\"] = xc\n            elif self.cond_stage_key in [\"caption\"]:\n                xc = log_txt_as_img((x.shape[2], x.shape[3]), batch[\"caption\"])\n                log[\"conditioning\"] = xc\n            elif self.cond_stage_key == 'class_label':\n                xc = log_txt_as_img((x.shape[2], x.shape[3]), batch[\"human_label\"])\n                log['conditioning'] = xc\n            elif isimage(xc):\n                log[\"conditioning\"] = xc\n            if ismap(xc):\n                log[\"original_conditioning\"] = self.to_rgb(xc)\n\n        if plot_diffusion_rows:\n            # get diffusion row\n            diffusion_row = []\n            z_start = z[:n_row]\n            for t in range(self.num_timesteps):\n                if t % self.log_every_t == 0 or t == self.num_timesteps - 1:\n                    t = repeat(torch.tensor([t]), '1 -> b', b=n_row)\n                    t = t.to(self.device).long()\n                    noise = torch.randn_like(z_start)\n                    z_noisy = self.q_sample(x_start=z_start, t=t, noise=noise)\n                    diffusion_row.append(self.decode_first_stage(z_noisy))\n\n            diffusion_row = torch.stack(diffusion_row)  # n_log_step, n_row, C, H, W\n            diffusion_grid = rearrange(diffusion_row, 'n b c h w -> b n c h w')\n            diffusion_grid = rearrange(diffusion_grid, 'b n c h w -> (b n) c h w')\n            diffusion_grid = make_grid(diffusion_grid, nrow=diffusion_row.shape[0])\n            log[\"diffusion_row\"] = diffusion_grid\n\n        if sample:\n            # get denoise row\n            with self.ema_scope(\"Plotting\"):\n                samples, z_denoise_row = self.sample_log(cond=c,batch_size=N,ddim=use_ddim,\n                                                         ddim_steps=ddim_steps,eta=ddim_eta)\n                # samples, z_denoise_row = self.sample(cond=c, batch_size=N, return_intermediates=True)\n            x_samples = self.decode_first_stage(samples)\n            log[\"samples\"] = x_samples\n            if plot_denoise_rows:\n                denoise_grid = self._get_denoise_row_from_list(z_denoise_row)\n                log[\"denoise_row\"] = denoise_grid\n\n            if quantize_denoised and not isinstance(self.first_stage_model, AutoencoderKL) and not isinstance(\n                    self.first_stage_model, IdentityFirstStage):\n                # also display when quantizing x0 while sampling\n                with self.ema_scope(\"Plotting Quantized Denoised\"):\n                    samples, z_denoise_row = self.sample_log(cond=c,batch_size=N,ddim=use_ddim,\n                                                             ddim_steps=ddim_steps,eta=ddim_eta,\n                                                             quantize_denoised=True)\n                    # samples, z_denoise_row = self.sample(cond=c, batch_size=N, return_intermediates=True,\n                    #                                      quantize_denoised=True)\n                x_samples = self.decode_first_stage(samples.to(self.device))\n                log[\"samples_x0_quantized\"] = x_samples\n\n            if inpaint:\n                # make a simple center square\n                h, w = z.shape[2], z.shape[3]\n                mask = torch.ones(N, h, w).to(self.device)\n                # zeros will be filled in\n                mask[:, h // 4:3 * h // 4, w // 4:3 * w // 4] = 0.\n                mask = mask[:, None, ...]\n                with self.ema_scope(\"Plotting Inpaint\"):\n\n                    samples, _ = self.sample_log(cond=c,batch_size=N,ddim=use_ddim, eta=ddim_eta,\n                                                ddim_steps=ddim_steps, x0=z[:N], mask=mask)\n                x_samples = self.decode_first_stage(samples.to(self.device))\n                log[\"samples_inpainting\"] = x_samples\n                log[\"mask\"] = mask\n\n                # outpaint\n                with self.ema_scope(\"Plotting Outpaint\"):\n                    samples, _ = self.sample_log(cond=c, batch_size=N, ddim=use_ddim,eta=ddim_eta,\n                                                ddim_steps=ddim_steps, x0=z[:N], mask=mask)\n                x_samples = self.decode_first_stage(samples.to(self.device))\n                log[\"samples_outpainting\"] = x_samples\n\n        if plot_progressive_rows:\n            with self.ema_scope(\"Plotting Progressives\"):\n                img, progressives = self.progressive_denoising(c,\n                                                               shape=(self.channels, self.image_size, self.image_size),\n                                                               batch_size=N)\n            prog_row = self._get_denoise_row_from_list(progressives, desc=\"Progressive Generation\")\n            log[\"progressive_row\"] = prog_row\n\n        if return_keys:\n            if np.intersect1d(list(log.keys()), return_keys).shape[0] == 0:\n                return log\n            else:\n                return {key: log[key] for key in return_keys}\n        return log\n\n    def configure_optimizers(self):\n        lr = self.learning_rate\n        params = list(self.model.parameters())\n        if self.cond_stage_trainable:\n            print(f\"{self.__class__.__name__}: Also optimizing conditioner params!\")\n            params = params + list(self.cond_stage_model.parameters())\n        if self.learn_logvar:\n            print('Diffusion model optimizing logvar')\n            params.append(self.logvar)\n        opt = torch.optim.AdamW(params, lr=lr)\n        if self.use_scheduler:\n            assert 'target' in self.scheduler_config\n            scheduler = instantiate_from_config(self.scheduler_config)\n\n            print(\"Setting up LambdaLR scheduler...\")\n            scheduler = [\n                {\n                    'scheduler': LambdaLR(opt, lr_lambda=scheduler.schedule),\n                    'interval': 'step',\n                    'frequency': 1\n                }]\n            return [opt], scheduler\n        return opt\n\n    @torch.no_grad()\n    def to_rgb(self, x):\n        x = x.float()\n        if not hasattr(self, \"colorize\"):\n            self.colorize = torch.randn(3, x.shape[1], 1, 1).to(x)\n        x = nn.functional.conv2d(x, weight=self.colorize)\n        x = 2. * (x - x.min()) / (x.max() - x.min()) - 1.\n        return x\n\n\nclass DiffusionWrapperV1(pl.LightningModule):\n    def __init__(self, diff_model_config, conditioning_key):\n        super().__init__()\n        self.diffusion_model = instantiate_from_config(diff_model_config)\n        self.conditioning_key = conditioning_key\n        assert self.conditioning_key in [None, 'concat', 'crossattn', 'hybrid', 'adm']\n\n    def forward(self, x, t, c_concat: list = None, c_crossattn: list = None):\n        if self.conditioning_key is None:\n            out = self.diffusion_model(x, t)\n        elif self.conditioning_key == 'concat':\n            xc = torch.cat([x] + c_concat, dim=1)\n            out = self.diffusion_model(xc, t)\n        elif self.conditioning_key == 'crossattn':\n            cc = torch.cat(c_crossattn, 1)\n            out = self.diffusion_model(x, t, context=cc)\n        elif self.conditioning_key == 'hybrid':\n            xc = torch.cat([x] + c_concat, dim=1)\n            cc = torch.cat(c_crossattn, 1)\n            out = self.diffusion_model(xc, t, context=cc)\n        elif self.conditioning_key == 'adm':\n            cc = c_crossattn[0]\n            out = self.diffusion_model(x, t, y=cc)\n        else:\n            raise NotImplementedError()\n\n        return out\n\n\nclass Layout2ImgDiffusionV1(LatentDiffusionV1):\n    # TODO: move all layout-specific hacks to this class\n    def __init__(self, cond_stage_key, *args, **kwargs):\n        assert cond_stage_key == 'coordinates_bbox', 'Layout2ImgDiffusion only for cond_stage_key=\"coordinates_bbox\"'\n        super().__init__(*args, cond_stage_key=cond_stage_key, **kwargs)\n\n    def log_images(self, batch, N=8, *args, **kwargs):\n        logs = super().log_images(*args, batch=batch, N=N, **kwargs)\n\n        key = 'train' if self.training else 'validation'\n        dset = self.trainer.datamodule.datasets[key]\n        mapper = dset.conditional_builders[self.cond_stage_key]\n\n        bbox_imgs = []\n        map_fn = lambda catno: dset.get_textual_label(dset.get_category_id(catno))\n        for tknzd_bbox in batch[self.cond_stage_key][:N]:\n            bboximg = mapper.plot(tknzd_bbox.detach().cpu(), map_fn, (256, 256))\n            bbox_imgs.append(bboximg)\n\n        cond_img = torch.stack(bbox_imgs, dim=0)\n        logs['bbox_image'] = cond_img\n        return logs\n\nldm.models.diffusion.ddpm.DDPMV1 = DDPMV1\nldm.models.diffusion.ddpm.LatentDiffusionV1 = LatentDiffusionV1\nldm.models.diffusion.ddpm.DiffusionWrapperV1 = DiffusionWrapperV1\nldm.models.diffusion.ddpm.Layout2ImgDiffusionV1 = Layout2ImgDiffusionV1\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "extensions-builtin/LDSR/vqvae_quantize.py", "size": 6479, "license": "AGPL-3.0", "content_sha": "dd14b8fda5ce25a8cea8b70eb1d387b9c46c80d8", "findings": [], "content": "# Vendored from https://raw.githubusercontent.com/CompVis/taming-transformers/24268930bf1dce879235a7fddd0b2355b84d7ea6/taming/modules/vqvae/quantize.py,\n# where the license is as follows:\n#\n# Copyright (c) 2020 Patrick Esser and Robin Rombach and Bj\u00f6rn Ommer\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\n# OR OTHER DEALINGS IN THE SOFTWARE./\n\nimport torch\nimport torch.nn as nn\nimport numpy as np\nfrom einops import rearrange\n\n\nclass VectorQuantizer2(nn.Module):\n    \"\"\"\n    Improved version over VectorQuantizer, can be used as a drop-in replacement. Mostly\n    avoids costly matrix multiplications and allows for post-hoc remapping of indices.\n    \"\"\"\n\n    # NOTE: due to a bug the beta term was applied to the wrong term. for\n    # backwards compatibility we use the buggy version by default, but you can\n    # specify legacy=False to fix it.\n    def __init__(self, n_e, e_dim, beta, remap=None, unknown_index=\"random\",\n                 sane_index_shape=False, legacy=True):\n        super().__init__()\n        self.n_e = n_e\n        self.e_dim = e_dim\n        self.beta = beta\n        self.legacy = legacy\n\n        self.embedding = nn.Embedding(self.n_e, self.e_dim)\n        self.embedding.weight.data.uniform_(-1.0 / self.n_e, 1.0 / self.n_e)\n\n        self.remap = remap\n        if self.remap is not None:\n            self.register_buffer(\"used\", torch.tensor(np.load(self.remap)))\n            self.re_embed = self.used.shape[0]\n            self.unknown_index = unknown_index  # \"random\" or \"extra\" or integer\n            if self.unknown_index == \"extra\":\n                self.unknown_index = self.re_embed\n                self.re_embed = self.re_embed + 1\n            print(f\"Remapping {self.n_e} indices to {self.re_embed} indices. \"\n                  f\"Using {self.unknown_index} for unknown indices.\")\n        else:\n            self.re_embed = n_e\n\n        self.sane_index_shape = sane_index_shape\n\n    def remap_to_used(self, inds):\n        ishape = inds.shape\n        assert len(ishape) > 1\n        inds = inds.reshape(ishape[0], -1)\n        used = self.used.to(inds)\n        match = (inds[:, :, None] == used[None, None, ...]).long()\n        new = match.argmax(-1)\n        unknown = match.sum(2) < 1\n        if self.unknown_index == \"random\":\n            new[unknown] = torch.randint(0, self.re_embed, size=new[unknown].shape).to(device=new.device)\n        else:\n            new[unknown] = self.unknown_index\n        return new.reshape(ishape)\n\n    def unmap_to_all(self, inds):\n        ishape = inds.shape\n        assert len(ishape) > 1\n        inds = inds.reshape(ishape[0], -1)\n        used = self.used.to(inds)\n        if self.re_embed > self.used.shape[0]:  # extra token\n            inds[inds >= self.used.shape[0]] = 0  # simply set to zero\n        back = torch.gather(used[None, :][inds.shape[0] * [0], :], 1, inds)\n        return back.reshape(ishape)\n\n    def forward(self, z, temp=None, rescale_logits=False, return_logits=False):\n        assert temp is None or temp == 1.0, \"Only for interface compatible with Gumbel\"\n        assert rescale_logits is False, \"Only for interface compatible with Gumbel\"\n        assert return_logits is False, \"Only for interface compatible with Gumbel\"\n        # reshape z -> (batch, height, width, channel) and flatten\n        z = rearrange(z, 'b c h w -> b h w c').contiguous()\n        z_flattened = z.view(-1, self.e_dim)\n        # distances from z to embeddings e_j (z - e)^2 = z^2 + e^2 - 2 e * z\n\n        d = torch.sum(z_flattened ** 2, dim=1, keepdim=True) + \\\n            torch.sum(self.embedding.weight ** 2, dim=1) - 2 * \\\n            torch.einsum('bd,dn->bn', z_flattened, rearrange(self.embedding.weight, 'n d -> d n'))\n\n        min_encoding_indices = torch.argmin(d, dim=1)\n        z_q = self.embedding(min_encoding_indices).view(z.shape)\n        perplexity = None\n        min_encodings = None\n\n        # compute loss for embedding\n        if not self.legacy:\n            loss = self.beta * torch.mean((z_q.detach() - z) ** 2) + \\\n                   torch.mean((z_q - z.detach()) ** 2)\n        else:\n            loss = torch.mean((z_q.detach() - z) ** 2) + self.beta * \\\n                   torch.mean((z_q - z.detach()) ** 2)\n\n        # preserve gradients\n        z_q = z + (z_q - z).detach()\n\n        # reshape back to match original input shape\n        z_q = rearrange(z_q, 'b h w c -> b c h w').contiguous()\n\n        if self.remap is not None:\n            min_encoding_indices = min_encoding_indices.reshape(z.shape[0], -1)  # add batch axis\n            min_encoding_indices = self.remap_to_used(min_encoding_indices)\n            min_encoding_indices = min_encoding_indices.reshape(-1, 1)  # flatten\n\n        if self.sane_index_shape:\n            min_encoding_indices = min_encoding_indices.reshape(\n                z_q.shape[0], z_q.shape[2], z_q.shape[3])\n\n        return z_q, loss, (perplexity, min_encodings, min_encoding_indices)\n\n    def get_codebook_entry(self, indices, shape):\n        # shape specifying (batch, height, width, channel)\n        if self.remap is not None:\n            indices = indices.reshape(shape[0], -1)  # add batch axis\n            indices = self.unmap_to_all(indices)\n            indices = indices.reshape(-1)  # flatten again\n\n        # get quantized latent vectors\n        z_q = self.embedding(indices)\n\n        if shape is not None:\n            z_q = z_q.view(shape)\n            # reshape back to match original input shape\n            z_q = z_q.permute(0, 3, 1, 2).contiguous()\n\n        return z_q\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "extensions-builtin/Lora/extra_networks_lora.py", "size": 2647, "license": "AGPL-3.0", "content_sha": "17a620f77e384ce682ad132db0c1570d172e590a", "findings": [], "content": "from modules import extra_networks, shared\r\nimport networks\r\n\r\n\r\nclass ExtraNetworkLora(extra_networks.ExtraNetwork):\r\n    def __init__(self):\r\n        super().__init__('lora')\r\n\r\n        self.errors = {}\r\n        \"\"\"mapping of network names to the number of errors the network had during operation\"\"\"\r\n\r\n    remove_symbols = str.maketrans('', '', \":,\")\r\n\r\n    def activate(self, p, params_list):\r\n        additional = shared.opts.sd_lora\r\n\r\n        self.errors.clear()\r\n\r\n        if additional != \"None\" and additional in networks.available_networks and not any(x for x in params_list if x.items[0] == additional):\r\n            p.all_prompts = [x + f\"<lora:{additional}:{shared.opts.extra_networks_default_multiplier}>\" for x in p.all_prompts]\r\n            params_list.append(extra_networks.ExtraNetworkParams(items=[additional, shared.opts.extra_networks_default_multiplier]))\r\n\r\n        names = []\r\n        te_multipliers = []\r\n        unet_multipliers = []\r\n        dyn_dims = []\r\n        for params in params_list:\r\n            assert params.items\r\n\r\n            names.append(params.positional[0])\r\n\r\n            te_multiplier = float(params.positional[1]) if len(params.positional) > 1 else 1.0\r\n            te_multiplier = float(params.named.get(\"te\", te_multiplier))\r\n\r\n            unet_multiplier = float(params.positional[2]) if len(params.positional) > 2 else te_multiplier\r\n            unet_multiplier = float(params.named.get(\"unet\", unet_multiplier))\r\n\r\n            dyn_dim = int(params.positional[3]) if len(params.positional) > 3 else None\r\n            dyn_dim = int(params.named[\"dyn\"]) if \"dyn\" in params.named else dyn_dim\r\n\r\n            te_multipliers.append(te_multiplier)\r\n            unet_multipliers.append(unet_multiplier)\r\n            dyn_dims.append(dyn_dim)\r\n\r\n        networks.load_networks(names, te_multipliers, unet_multipliers, dyn_dims)\r\n\r\n        if shared.opts.lora_add_hashes_to_infotext:\r\n            if not getattr(p, \"is_hr_pass\", False) or not hasattr(p, \"lora_hashes\"):\r\n                p.lora_hashes = {}\r\n\r\n            for item in networks.loaded_networks:\r\n                if item.network_on_disk.shorthash and item.mentioned_name:\r\n                    p.lora_hashes[item.mentioned_name.translate(self.remove_symbols)] = item.network_on_disk.shorthash\r\n\r\n            if p.lora_hashes:\r\n                p.extra_generation_params[\"Lora hashes\"] = ', '.join(f'{k}: {v}' for k, v in p.lora_hashes.items())\r\n\r\n    def deactivate(self, p):\r\n        if self.errors:\r\n            p.comment(\"Networks with errors: \" + \", \".join(f\"{k} ({v})\" for k, v in self.errors.items()))\r\n\r\n            self.errors.clear()\r\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "extensions-builtin/Lora/lora.py", "size": 357, "license": "AGPL-3.0", "content_sha": "9365aa74b4fe30afbb27fa08284ccd6bcb094fe7", "findings": [], "content": "import networks\r\n\r\nlist_available_loras = networks.list_available_networks\r\n\r\navailable_loras = networks.available_networks\r\navailable_lora_aliases = networks.available_network_aliases\r\navailable_lora_hash_lookup = networks.available_network_hash_lookup\r\nforbidden_lora_aliases = networks.forbidden_network_aliases\r\nloaded_loras = networks.loaded_networks\r\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "extensions-builtin/Lora/lora_logger.py", "size": 929, "license": "AGPL-3.0", "content_sha": "d51de29704f72b80958dbabda021c6648aef8177", "findings": [], "content": "import sys\nimport copy\nimport logging\n\n\nclass ColoredFormatter(logging.Formatter):\n    COLORS = {\n        \"DEBUG\": \"\\033[0;36m\",  # CYAN\n        \"INFO\": \"\\033[0;32m\",  # GREEN\n        \"WARNING\": \"\\033[0;33m\",  # YELLOW\n        \"ERROR\": \"\\033[0;31m\",  # RED\n        \"CRITICAL\": \"\\033[0;37;41m\",  # WHITE ON RED\n        \"RESET\": \"\\033[0m\",  # RESET COLOR\n    }\n\n    def format(self, record):\n        colored_record = copy.copy(record)\n        levelname = colored_record.levelname\n        seq = self.COLORS.get(levelname, self.COLORS[\"RESET\"])\n        colored_record.levelname = f\"{seq}{levelname}{self.COLORS['RESET']}\"\n        return super().format(colored_record)\n\n\nlogger = logging.getLogger(\"lora\")\nlogger.propagate = False\n\n\nif not logger.handlers:\n    handler = logging.StreamHandler(sys.stdout)\n    handler.setFormatter(\n        ColoredFormatter(\"[%(name)s]-%(levelname)s: %(message)s\")\n    )\n    logger.addHandler(handler)\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "extensions-builtin/Lora/lora_patches.py", "size": 2556, "license": "AGPL-3.0", "content_sha": "b394d8e9ed41ff2fc56de03d6e6194aa50b5f2b2", "findings": [], "content": "import torch\r\n\r\nimport networks\r\nfrom modules import patches\r\n\r\n\r\nclass LoraPatches:\r\n    def __init__(self):\r\n        self.Linear_forward = patches.patch(__name__, torch.nn.Linear, 'forward', networks.network_Linear_forward)\r\n        self.Linear_load_state_dict = patches.patch(__name__, torch.nn.Linear, '_load_from_state_dict', networks.network_Linear_load_state_dict)\r\n        self.Conv2d_forward = patches.patch(__name__, torch.nn.Conv2d, 'forward', networks.network_Conv2d_forward)\r\n        self.Conv2d_load_state_dict = patches.patch(__name__, torch.nn.Conv2d, '_load_from_state_dict', networks.network_Conv2d_load_state_dict)\r\n        self.GroupNorm_forward = patches.patch(__name__, torch.nn.GroupNorm, 'forward', networks.network_GroupNorm_forward)\r\n        self.GroupNorm_load_state_dict = patches.patch(__name__, torch.nn.GroupNorm, '_load_from_state_dict', networks.network_GroupNorm_load_state_dict)\r\n        self.LayerNorm_forward = patches.patch(__name__, torch.nn.LayerNorm, 'forward', networks.network_LayerNorm_forward)\r\n        self.LayerNorm_load_state_dict = patches.patch(__name__, torch.nn.LayerNorm, '_load_from_state_dict', networks.network_LayerNorm_load_state_dict)\r\n        self.MultiheadAttention_forward = patches.patch(__name__, torch.nn.MultiheadAttention, 'forward', networks.network_MultiheadAttention_forward)\r\n        self.MultiheadAttention_load_state_dict = patches.patch(__name__, torch.nn.MultiheadAttention, '_load_from_state_dict', networks.network_MultiheadAttention_load_state_dict)\r\n\r\n    def undo(self):\r\n        self.Linear_forward = patches.undo(__name__, torch.nn.Linear, 'forward')\r\n        self.Linear_load_state_dict = patches.undo(__name__, torch.nn.Linear, '_load_from_state_dict')\r\n        self.Conv2d_forward = patches.undo(__name__, torch.nn.Conv2d, 'forward')\r\n        self.Conv2d_load_state_dict = patches.undo(__name__, torch.nn.Conv2d, '_load_from_state_dict')\r\n        self.GroupNorm_forward = patches.undo(__name__, torch.nn.GroupNorm, 'forward')\r\n        self.GroupNorm_load_state_dict = patches.undo(__name__, torch.nn.GroupNorm, '_load_from_state_dict')\r\n        self.LayerNorm_forward = patches.undo(__name__, torch.nn.LayerNorm, 'forward')\r\n        self.LayerNorm_load_state_dict = patches.undo(__name__, torch.nn.LayerNorm, '_load_from_state_dict')\r\n        self.MultiheadAttention_forward = patches.undo(__name__, torch.nn.MultiheadAttention, 'forward')\r\n        self.MultiheadAttention_load_state_dict = patches.undo(__name__, torch.nn.MultiheadAttention, '_load_from_state_dict')\r\n\r\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "extensions-builtin/Lora/lyco_helpers.py", "size": 2409, "license": "AGPL-3.0", "content_sha": "6f134d54eb19d2ba575137d4271b4a12f0f275ce", "findings": [], "content": "import torch\r\n\r\n\r\ndef make_weight_cp(t, wa, wb):\r\n    temp = torch.einsum('i j k l, j r -> i r k l', t, wb)\r\n    return torch.einsum('i j k l, i r -> r j k l', temp, wa)\r\n\r\n\r\ndef rebuild_conventional(up, down, shape, dyn_dim=None):\r\n    up = up.reshape(up.size(0), -1)\r\n    down = down.reshape(down.size(0), -1)\r\n    if dyn_dim is not None:\r\n        up = up[:, :dyn_dim]\r\n        down = down[:dyn_dim, :]\r\n    return (up @ down).reshape(shape)\r\n\r\n\r\ndef rebuild_cp_decomposition(up, down, mid):\r\n    up = up.reshape(up.size(0), -1)\r\n    down = down.reshape(down.size(0), -1)\r\n    return torch.einsum('n m k l, i n, m j -> i j k l', mid, up, down)\r\n\r\n\r\n# copied from https://github.com/KohakuBlueleaf/LyCORIS/blob/dev/lycoris/modules/lokr.py\r\ndef factorization(dimension: int, factor:int=-1) -> tuple[int, int]:\r\n    '''\r\n    return a tuple of two value of input dimension decomposed by the number closest to factor\r\n    second value is higher or equal than first value.\r\n\r\n    In LoRA with Kroneckor Product, first value is a value for weight scale.\r\n    secon value is a value for weight.\r\n\r\n    Because of non-commutative property, A\u2297B \u2260 B\u2297A. Meaning of two matrices is slightly different.\r\n\r\n    examples)\r\n    factor\r\n        -1               2                4               8               16               ...\r\n    127 -> 1, 127   127 -> 1, 127    127 -> 1, 127   127 -> 1, 127   127 -> 1, 127\r\n    128 -> 8, 16    128 -> 2, 64     128 -> 4, 32    128 -> 8, 16    128 -> 8, 16\r\n    250 -> 10, 25   250 -> 2, 125    250 -> 2, 125   250 -> 5, 50    250 -> 10, 25\r\n    360 -> 8, 45    360 -> 2, 180    360 -> 4, 90    360 -> 8, 45    360 -> 12, 30\r\n    512 -> 16, 32   512 -> 2, 256    512 -> 4, 128   512 -> 8, 64    512 -> 16, 32\r\n    1024 -> 32, 32  1024 -> 2, 512   1024 -> 4, 256  1024 -> 8, 128  1024 -> 16, 64\r\n    '''\r\n\r\n    if factor > 0 and (dimension % factor) == 0:\r\n        m = factor\r\n        n = dimension // factor\r\n        if m > n:\r\n            n, m = m, n\r\n        return m, n\r\n    if factor < 0:\r\n        factor = dimension\r\n    m, n = 1, dimension\r\n    length = m + n\r\n    while m<n:\r\n        new_m = m + 1\r\n        while dimension%new_m != 0:\r\n            new_m += 1\r\n        new_n = dimension // new_m\r\n        if new_m + new_n > length or new_m>factor:\r\n            break\r\n        else:\r\n            m, n = new_m, new_n\r\n    if m > n:\r\n        n, m = m, n\r\n    return m, n\r\n\r\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "extensions-builtin/Lora/network.py", "size": 7944, "license": "AGPL-3.0", "content_sha": "98ff367fd8a22f379bd588d149754ce640700222", "findings": [], "content": "from __future__ import annotations\r\nimport os\r\nfrom collections import namedtuple\r\nimport enum\r\n\r\nimport torch.nn as nn\r\nimport torch.nn.functional as F\r\n\r\nfrom modules import sd_models, cache, errors, hashes, shared\r\nimport modules.models.sd3.mmdit\r\n\r\nNetworkWeights = namedtuple('NetworkWeights', ['network_key', 'sd_key', 'w', 'sd_module'])\r\n\r\nmetadata_tags_order = {\"ss_sd_model_name\": 1, \"ss_resolution\": 2, \"ss_clip_skip\": 3, \"ss_num_train_images\": 10, \"ss_tag_frequency\": 20}\r\n\r\n\r\nclass SdVersion(enum.Enum):\r\n    Unknown = 1\r\n    SD1 = 2\r\n    SD2 = 3\r\n    SDXL = 4\r\n\r\n\r\nclass NetworkOnDisk:\r\n    def __init__(self, name, filename):\r\n        self.name = name\r\n        self.filename = filename\r\n        self.metadata = {}\r\n        self.is_safetensors = os.path.splitext(filename)[1].lower() == \".safetensors\"\r\n\r\n        def read_metadata():\r\n            metadata = sd_models.read_metadata_from_safetensors(filename)\r\n\r\n            return metadata\r\n\r\n        if self.is_safetensors:\r\n            try:\r\n                self.metadata = cache.cached_data_for_file('safetensors-metadata', \"lora/\" + self.name, filename, read_metadata)\r\n            except Exception as e:\r\n                errors.display(e, f\"reading lora {filename}\")\r\n\r\n        if self.metadata:\r\n            m = {}\r\n            for k, v in sorted(self.metadata.items(), key=lambda x: metadata_tags_order.get(x[0], 999)):\r\n                m[k] = v\r\n\r\n            self.metadata = m\r\n\r\n        self.alias = self.metadata.get('ss_output_name', self.name)\r\n\r\n        self.hash = None\r\n        self.shorthash = None\r\n        self.set_hash(\r\n            self.metadata.get('sshs_model_hash') or\r\n            hashes.sha256_from_cache(self.filename, \"lora/\" + self.name, use_addnet_hash=self.is_safetensors) or\r\n            ''\r\n        )\r\n\r\n        self.sd_version = self.detect_version()\r\n\r\n    def detect_version(self):\r\n        if str(self.metadata.get('ss_base_model_version', \"\")).startswith(\"sdxl_\"):\r\n            return SdVersion.SDXL\r\n        elif str(self.metadata.get('ss_v2', \"\")) == \"True\":\r\n            return SdVersion.SD2\r\n        elif len(self.metadata):\r\n            return SdVersion.SD1\r\n\r\n        return SdVersion.Unknown\r\n\r\n    def set_hash(self, v):\r\n        self.hash = v\r\n        self.shorthash = self.hash[0:12]\r\n\r\n        if self.shorthash:\r\n            import networks\r\n            networks.available_network_hash_lookup[self.shorthash] = self\r\n\r\n    def read_hash(self):\r\n        if not self.hash:\r\n            self.set_hash(hashes.sha256(self.filename, \"lora/\" + self.name, use_addnet_hash=self.is_safetensors) or '')\r\n\r\n    def get_alias(self):\r\n        import networks\r\n        if shared.opts.lora_preferred_name == \"Filename\" or self.alias.lower() in networks.forbidden_network_aliases:\r\n            return self.name\r\n        else:\r\n            return self.alias\r\n\r\n\r\nclass Network:  # LoraModule\r\n    def __init__(self, name, network_on_disk: NetworkOnDisk):\r\n        self.name = name\r\n        self.network_on_disk = network_on_disk\r\n        self.te_multiplier = 1.0\r\n        self.unet_multiplier = 1.0\r\n        self.dyn_dim = None\r\n        self.modules = {}\r\n        self.bundle_embeddings = {}\r\n        self.mtime = None\r\n\r\n        self.mentioned_name = None\r\n        \"\"\"the text that was used to add the network to prompt - can be either name or an alias\"\"\"\r\n\r\n\r\nclass ModuleType:\r\n    def create_module(self, net: Network, weights: NetworkWeights) -> Network | None:\r\n        return None\r\n\r\n\r\nclass NetworkModule:\r\n    def __init__(self, net: Network, weights: NetworkWeights):\r\n        self.network = net\r\n        self.network_key = weights.network_key\r\n        self.sd_key = weights.sd_key\r\n        self.sd_module = weights.sd_module\r\n\r\n        if isinstance(self.sd_module, modules.models.sd3.mmdit.QkvLinear):\r\n            s = self.sd_module.weight.shape\r\n            self.shape = (s[0] // 3, s[1])\r\n        elif hasattr(self.sd_module, 'weight'):\r\n            self.shape = self.sd_module.weight.shape\r\n        elif isinstance(self.sd_module, nn.MultiheadAttention):\r\n            # For now, only self-attn use Pytorch's MHA\r\n            # So assume all qkvo proj have same shape\r\n            self.shape = self.sd_module.out_proj.weight.shape\r\n        else:\r\n            self.shape = None\r\n\r\n        self.ops = None\r\n        self.extra_kwargs = {}\r\n        if isinstance(self.sd_module, nn.Conv2d):\r\n            self.ops = F.conv2d\r\n            self.extra_kwargs = {\r\n                'stride': self.sd_module.stride,\r\n                'padding': self.sd_module.padding\r\n            }\r\n        elif isinstance(self.sd_module, nn.Linear):\r\n            self.ops = F.linear\r\n        elif isinstance(self.sd_module, nn.LayerNorm):\r\n            self.ops = F.layer_norm\r\n            self.extra_kwargs = {\r\n                'normalized_shape': self.sd_module.normalized_shape,\r\n                'eps': self.sd_module.eps\r\n            }\r\n        elif isinstance(self.sd_module, nn.GroupNorm):\r\n            self.ops = F.group_norm\r\n            self.extra_kwargs = {\r\n                'num_groups': self.sd_module.num_groups,\r\n                'eps': self.sd_module.eps\r\n            }\r\n\r\n        self.dim = None\r\n        self.bias = weights.w.get(\"bias\")\r\n        self.alpha = weights.w[\"alpha\"].item() if \"alpha\" in weights.w else None\r\n        self.scale = weights.w[\"scale\"].item() if \"scale\" in weights.w else None\r\n\r\n        self.dora_scale = weights.w.get(\"dora_scale\", None)\r\n        self.dora_norm_dims = len(self.shape) - 1\r\n\r\n    def multiplier(self):\r\n        if 'transformer' in self.sd_key[:20]:\r\n            return self.network.te_multiplier\r\n        else:\r\n            return self.network.unet_multiplier\r\n\r\n    def calc_scale(self):\r\n        if self.scale is not None:\r\n            return self.scale\r\n        if self.dim is not None and self.alpha is not None:\r\n            return self.alpha / self.dim\r\n\r\n        return 1.0\r\n\r\n    def apply_weight_decompose(self, updown, orig_weight):\r\n        # Match the device/dtype\r\n        orig_weight = orig_weight.to(updown.dtype)\r\n        dora_scale = self.dora_scale.to(device=orig_weight.device, dtype=updown.dtype)\r\n        updown = updown.to(orig_weight.device)\r\n\r\n        merged_scale1 = updown + orig_weight\r\n        merged_scale1_norm = (\r\n            merged_scale1.transpose(0, 1)\r\n            .reshape(merged_scale1.shape[1], -1)\r\n            .norm(dim=1, keepdim=True)\r\n            .reshape(merged_scale1.shape[1], *[1] * self.dora_norm_dims)\r\n            .transpose(0, 1)\r\n        )\r\n\r\n        dora_merged = (\r\n            merged_scale1 * (dora_scale / merged_scale1_norm)\r\n        )\r\n        final_updown = dora_merged - orig_weight\r\n        return final_updown\r\n\r\n    def finalize_updown(self, updown, orig_weight, output_shape, ex_bias=None):\r\n        if self.bias is not None:\r\n            updown = updown.reshape(self.bias.shape)\r\n            updown += self.bias.to(orig_weight.device, dtype=updown.dtype)\r\n            updown = updown.reshape(output_shape)\r\n\r\n        if len(output_shape) == 4:\r\n            updown = updown.reshape(output_shape)\r\n\r\n        if orig_weight.size().numel() == updown.size().numel():\r\n            updown = updown.reshape(orig_weight.shape)\r\n\r\n        if ex_bias is not None:\r\n            ex_bias = ex_bias * self.multiplier()\r\n\r\n        updown = updown * self.calc_scale()\r\n\r\n        if self.dora_scale is not None:\r\n            updown = self.apply_weight_decompose(updown, orig_weight)\r\n\r\n        return updown * self.multiplier(), ex_bias\r\n\r\n    def calc_updown(self, target):\r\n        raise NotImplementedError()\r\n\r\n    def forward(self, x, y):\r\n        \"\"\"A general forward implementation for all modules\"\"\"\r\n        if self.ops is None:\r\n            raise NotImplementedError()\r\n        else:\r\n            updown, ex_bias = self.calc_updown(self.sd_module.weight)\r\n            return y + self.ops(x, weight=updown, bias=ex_bias, **self.extra_kwargs)\r\n\r\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "extensions-builtin/Lora/network_full.py", "size": 904, "license": "AGPL-3.0", "content_sha": "f221c95f3b557bd994cbaa2bd8cd15160dbb8df3", "findings": [], "content": "import network\r\n\r\n\r\nclass ModuleTypeFull(network.ModuleType):\r\n    def create_module(self, net: network.Network, weights: network.NetworkWeights):\r\n        if all(x in weights.w for x in [\"diff\"]):\r\n            return NetworkModuleFull(net, weights)\r\n\r\n        return None\r\n\r\n\r\nclass NetworkModuleFull(network.NetworkModule):\r\n    def __init__(self,  net: network.Network, weights: network.NetworkWeights):\r\n        super().__init__(net, weights)\r\n\r\n        self.weight = weights.w.get(\"diff\")\r\n        self.ex_bias = weights.w.get(\"diff_b\")\r\n\r\n    def calc_updown(self, orig_weight):\r\n        output_shape = self.weight.shape\r\n        updown = self.weight.to(orig_weight.device)\r\n        if self.ex_bias is not None:\r\n            ex_bias = self.ex_bias.to(orig_weight.device)\r\n        else:\r\n            ex_bias = None\r\n\r\n        return self.finalize_updown(updown, orig_weight, output_shape, ex_bias)\r\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "extensions-builtin/Lora/network_glora.py", "size": 1246, "license": "AGPL-3.0", "content_sha": "efe5c6814fa5c327e0db7ca3a8f5e7b21ccda8fe", "findings": [], "content": "\nimport network\n\nclass ModuleTypeGLora(network.ModuleType):\n    def create_module(self, net: network.Network, weights: network.NetworkWeights):\n        if all(x in weights.w for x in [\"a1.weight\", \"a2.weight\", \"alpha\", \"b1.weight\", \"b2.weight\"]):\n            return NetworkModuleGLora(net, weights)\n\n        return None\n\n# adapted from https://github.com/KohakuBlueleaf/LyCORIS\nclass NetworkModuleGLora(network.NetworkModule):\n    def __init__(self,  net: network.Network, weights: network.NetworkWeights):\n        super().__init__(net, weights)\n\n        if hasattr(self.sd_module, 'weight'):\n            self.shape = self.sd_module.weight.shape\n\n        self.w1a = weights.w[\"a1.weight\"]\n        self.w1b = weights.w[\"b1.weight\"]\n        self.w2a = weights.w[\"a2.weight\"]\n        self.w2b = weights.w[\"b2.weight\"]\n\n    def calc_updown(self, orig_weight):\n        w1a = self.w1a.to(orig_weight.device)\n        w1b = self.w1b.to(orig_weight.device)\n        w2a = self.w2a.to(orig_weight.device)\n        w2b = self.w2b.to(orig_weight.device)\n\n        output_shape = [w1a.size(0), w1b.size(1)]\n        updown = ((w2b @ w1b) + ((orig_weight.to(dtype = w1a.dtype) @ w2a) @ w1a))\n\n        return self.finalize_updown(updown, orig_weight, output_shape)\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "extensions-builtin/Lora/network_hada.py", "size": 1985, "license": "AGPL-3.0", "content_sha": "d95a0fd18e3734aeeb041f9b00bc390d7b4fb699", "findings": [], "content": "import lyco_helpers\r\nimport network\r\n\r\n\r\nclass ModuleTypeHada(network.ModuleType):\r\n    def create_module(self, net: network.Network, weights: network.NetworkWeights):\r\n        if all(x in weights.w for x in [\"hada_w1_a\", \"hada_w1_b\", \"hada_w2_a\", \"hada_w2_b\"]):\r\n            return NetworkModuleHada(net, weights)\r\n\r\n        return None\r\n\r\n\r\nclass NetworkModuleHada(network.NetworkModule):\r\n    def __init__(self,  net: network.Network, weights: network.NetworkWeights):\r\n        super().__init__(net, weights)\r\n\r\n        if hasattr(self.sd_module, 'weight'):\r\n            self.shape = self.sd_module.weight.shape\r\n\r\n        self.w1a = weights.w[\"hada_w1_a\"]\r\n        self.w1b = weights.w[\"hada_w1_b\"]\r\n        self.dim = self.w1b.shape[0]\r\n        self.w2a = weights.w[\"hada_w2_a\"]\r\n        self.w2b = weights.w[\"hada_w2_b\"]\r\n\r\n        self.t1 = weights.w.get(\"hada_t1\")\r\n        self.t2 = weights.w.get(\"hada_t2\")\r\n\r\n    def calc_updown(self, orig_weight):\r\n        w1a = self.w1a.to(orig_weight.device)\r\n        w1b = self.w1b.to(orig_weight.device)\r\n        w2a = self.w2a.to(orig_weight.device)\r\n        w2b = self.w2b.to(orig_weight.device)\r\n\r\n        output_shape = [w1a.size(0), w1b.size(1)]\r\n\r\n        if self.t1 is not None:\r\n            output_shape = [w1a.size(1), w1b.size(1)]\r\n            t1 = self.t1.to(orig_weight.device)\r\n            updown1 = lyco_helpers.make_weight_cp(t1, w1a, w1b)\r\n            output_shape += t1.shape[2:]\r\n        else:\r\n            if len(w1b.shape) == 4:\r\n                output_shape += w1b.shape[2:]\r\n            updown1 = lyco_helpers.rebuild_conventional(w1a, w1b, output_shape)\r\n\r\n        if self.t2 is not None:\r\n            t2 = self.t2.to(orig_weight.device)\r\n            updown2 = lyco_helpers.make_weight_cp(t2, w2a, w2b)\r\n        else:\r\n            updown2 = lyco_helpers.rebuild_conventional(w2a, w2b, output_shape)\r\n\r\n        updown = updown1 * updown2\r\n\r\n        return self.finalize_updown(updown, orig_weight, output_shape)\r\n"}
{"repo_url": "https://github.com/AUTOMATIC1111/stable-diffusion-webui", "path": "extensions-builtin/Lora/network_ia3.py", "size": 908, "license": "AGPL-3.0", "content_sha": "96faeaf3ede2f172a8452e3396ac2c07ecbbcb49", "findings": [], "content": "import network\r\n\r\n\r\nclass ModuleTypeIa3(network.ModuleType):\r\n    def create_module(self, net: network.Network, weights: network.NetworkWeights):\r\n        if all(x in weights.w for x in [\"weight\"]):\r\n            return NetworkModuleIa3(net, weights)\r\n\r\n        return None\r\n\r\n\r\nclass NetworkModuleIa3(network.NetworkModule):\r\n    def __init__(self,  net: network.Network, weights: network.NetworkWeights):\r\n        super().__init__(net, weights)\r\n\r\n        self.w = weights.w[\"weight\"]\r\n        self.on_input = weights.w[\"on_input\"].item()\r\n\r\n    def calc_updown(self, orig_weight):\r\n        w = self.w.to(orig_weight.device)\r\n\r\n        output_shape = [w.size(0), orig_weight.size(1)]\r\n        if self.on_input:\r\n            output_shape.reverse()\r\n        else:\r\n            w = w.reshape(-1, 1)\r\n\r\n        updown = orig_weight * w\r\n\r\n        return self.finalize_updown(updown, orig_weight, output_shape)\r\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": ".github/PULL_REQUEST_TEMPLATE.md", "size": 560, "license": "NOASSERTION", "content_sha": "ca9bd9795c8839d9e205671f1fff74c44a8245eb", "findings": [], "content": "## Review the Contributing Guidelines\n\nBefore submitting a pull request, verify it meets all requirements in the [Contributing Guidelines](https://github.com/donnemartin/system-design-primer/blob/master/CONTRIBUTING.md).\n\n### Translations\n\nSee the [Contributing Guidelines](https://github.com/donnemartin/system-design-primer/blob/master/CONTRIBUTING.md).  Verify you've:\n\n* Tagged the [language maintainer](https://github.com/donnemartin/system-design-primer/blob/master/TRANSLATIONS.md)\n* Prefixed the title with a language code\n    * Example: \"ja: Fix ...\"\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "CONTRIBUTING.md", "size": 5377, "license": "NOASSERTION", "content_sha": "c220a52db20fd33345dd4e3772f1bf539ee9609f", "findings": [{"type": "pii_email", "matches": ["git@github.com"]}], "content": "Contributing\n============\n\nContributions are welcome!\n\n**Please carefully read this page to make the code review process go as smoothly as possible and to maximize the likelihood of your contribution being merged.**\n\n## Bug Reports\n\nFor bug reports or requests [submit an issue](https://github.com/donnemartin/system-design-primer/issues).\n\n## Pull Requests\n\nThe preferred way to contribute is to fork the\n[main repository](https://github.com/donnemartin/system-design-primer) on GitHub.\n\n1. Fork the [main repository](https://github.com/donnemartin/system-design-primer).  Click on the 'Fork' button near the top of the page.  This creates a copy of the code under your account on the GitHub server.\n\n2. Clone this copy to your local disk:\n\n        $ git clone git@github.com:YourLogin/system-design-primer.git\n        $ cd system-design-primer\n\n3. Create a branch to hold your changes and start making changes. Don't work in the `master` branch!\n\n        $ git checkout -b my-feature\n\n4. Work on this copy on your computer using Git to do the version control. When you're done editing, run the following to record your changes in Git:\n\n        $ git add modified_files\n        $ git commit\n\n5. Push your changes to GitHub with:\n\n        $ git push -u origin my-feature\n\n6. Finally, go to the web page of your fork of the `system-design-primer` repo and click 'Pull Request' to send your changes for review.\n\n### GitHub Pull Requests Docs\n\nIf you are not familiar with pull requests, review the [pull request docs](https://help.github.com/articles/using-pull-requests/).\n\n## Translations\n\nWe'd like for the guide to be available in many languages. Here is the process for maintaining translations:\n\n* This original version and content of the guide is maintained in English.\n* Translations follow the content of the original. Contributors must speak at least some English, so that translations do not diverge.\n* Each translation has a maintainer to update the translation as the original evolves and to review others' changes. This doesn't require a lot of time, but a review by the maintainer is important to maintain quality.\n\nSee [Translations](TRANSLATIONS.md).\n\n### Changes to translations\n\n* Changes to content should be made to the English version first, and then translated to each other language.\n* Changes that improve translations should be made directly on the file for that language. Pull requests should only modify one language at a time.\n* Submit a pull request with changes to the file in that language. Each language has a maintainer, who reviews changes in that language. Then the primary maintainer [@donnemartin](https://github.com/donnemartin) merges it in.\n* Prefix pull requests and issues with language codes if they are for that translation only, e.g. \"es: Improve grammar\", so maintainers can find them easily.\n* Tag the translation maintainer for a code review, see the list of [translation maintainers](TRANSLATIONS.md).\n    * You will need to get a review from a native speaker (preferably the language maintainer) before your pull request is merged.\n\n### Adding translations to new languages\n\nTranslations to new languages are always welcome! Keep in mind a translation must be maintained.\n\n* Do you have time to be a maintainer for a new language? Please see the list of [translations](TRANSLATIONS.md) and tell us so we know we can count on you in the future.\n* Check the [translations](TRANSLATIONS.md), issues, and pull requests to see if a translation is in progress or stalled. If it's in progress, offer to help.  If it's stalled, consider becoming the maintainer if you can commit to it.\n* If a translation has not yet been started, file an issue for your language so people know you are working on it and we'll coordinate. Confirm you are native level in the language and are willing to maintain the translation, so it's not orphaned.\n* To get started, fork the repo, then submit a pull request to the main repo with the single file README-xx.md added, where xx is the language code. Use standard [IETF language tags](https://www.w3.org/International/articles/language-tags/), i.e. the same as is used by Wikipedia, *not* the code for a single country. These are usually just the two-letter lowercase code, for example, `fr` for French and `uk` for Ukrainian (not `ua`, which is for the country). For languages that have variations, use the shortest tag, such as `zh-Hant`.\n* Feel free to invite friends to help your original translation by having them fork your repo, then merging their pull requests to your forked repo. Translations are difficult and usually have errors that others need to find.\n* Add links to your translation at the top of every README-XX.md file. For consistency, the link should be added in alphabetical order by ISO code, and the anchor text should be in the native language.\n* When you've fully translated the English README.md, comment on the pull request in the main repo that it's ready to be merged.\n    * You'll need to have a complete and reviewed translation of the English README.md before your translation will be merged into the `master` branch.\n    * Once accepted, your pull request will be squashed into a single commit into the `master` branch.\n\n### Translation template credits\n\nThanks to [The Art of Command Line](https://github.com/jlevy/the-art-of-command-line) for the translation template.\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "LICENSE.txt", "size": 365, "license": "NOASSERTION", "content_sha": "5a04d642d61db37868f7485fa0fbcc96d8916919", "findings": [], "content": "I am providing code and resources in this repository to you under an open source\nlicense.  Because this is my personal repository, the license you receive to my\ncode and resources is from me and not my employer (Facebook).\n\nCopyright 2017 Donne Martin\n\nCreative Commons Attribution 4.0 International License (CC BY 4.0)\n\nhttp://creativecommons.org/licenses/by/4.0/\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "README-ja.md", "size": 137167, "license": "NOASSERTION", "content_sha": "e8f4719d30448d8c93326c7a6c7926fd19a12b43", "findings": [], "content": "*[English](README.md) \u2219 [\u65e5\u672c\u8a9e](README-ja.md) \u2219 [\u7b80\u4f53\u4e2d\u6587](README-zh-Hans.md) \u2219 [\u7e41\u9ad4\u4e2d\u6587](README-zh-TW.md) | [\u0627\u0644\u0639\u064e\u0631\u064e\u0628\u0650\u064a\u064e\u0651\u0629\u200e](https://github.com/donnemartin/system-design-primer/issues/170) \u2219 [\u09ac\u09be\u0982\u09b2\u09be](https://github.com/donnemartin/system-design-primer/issues/220) \u2219 [Portugu\u00eas do Brasil](https://github.com/donnemartin/system-design-primer/issues/40) \u2219 [Deutsch](https://github.com/donnemartin/system-design-primer/issues/186) \u2219 [\u03b5\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac](https://github.com/donnemartin/system-design-primer/issues/130) \u2219 [\u05e2\u05d1\u05e8\u05d9\u05ea](https://github.com/donnemartin/system-design-primer/issues/272) \u2219 [Italiano](https://github.com/donnemartin/system-design-primer/issues/104) \u2219 [\ud55c\uad6d\uc5b4](https://github.com/donnemartin/system-design-primer/issues/102) \u2219 [\u0641\u0627\u0631\u0633\u06cc](https://github.com/donnemartin/system-design-primer/issues/110) \u2219 [Polski](https://github.com/donnemartin/system-design-primer/issues/68) \u2219 [\u0440\u0443\u0441\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a](https://github.com/donnemartin/system-design-primer/issues/87) \u2219 [Espa\u00f1ol](https://github.com/donnemartin/system-design-primer/issues/136) \u2219 [\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22](https://github.com/donnemartin/system-design-primer/issues/187) \u2219 [T\u00fcrk\u00e7e](https://github.com/donnemartin/system-design-primer/issues/39) \u2219 [ti\u1ebfng Vi\u1ec7t](https://github.com/donnemartin/system-design-primer/issues/127) \u2219 [Fran\u00e7ais](https://github.com/donnemartin/system-design-primer/issues/250) | [Add Translation](https://github.com/donnemartin/system-design-primer/issues/28)*\n\n# \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u5165\u9580\n\n<p align=\"center\">\n  <img src=\"images/jj3A5N8.png\">\n  <br/>\n</p>\n\n## \u52d5\u6a5f\u30fb\u76ee\u7684\n\n> \u5927\u898f\u6a21\u30b7\u30b9\u30c6\u30e0\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u3092\u5b66\u3076\n>\n> \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u306b\u5099\u3048\u308b\n\n### \u5927\u898f\u6a21\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08\u3092\u5b66\u3076\n\n\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30b7\u30b9\u30c6\u30e0\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u3092\u5b66\u3076\u3053\u3068\u306f\u3001\u3088\u308a\u826f\u3044\u30a8\u30f3\u30b8\u30cb\u30a2\u306b\u306a\u308b\u3053\u3068\u306b\u8cc7\u3059\u308b\u3067\u3057\u3087\u3046\u3002\n\n\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306f\u3068\u3066\u3082\u5e83\u7bc4\u306a\u30c8\u30d4\u30c3\u30af\u3092\u542b\u307f\u307e\u3059\u3002\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u539f\u7406\u306b\u3064\u3044\u3066\u306f **\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u4e0a\u306b\u306f\u81a8\u5927\u306a\u91cf\u306e\u6587\u732e\u304c\u6563\u3089\u3070\u3063\u3066\u3044\u307e\u3059\u3002**\n\n\u3053\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u5927\u898f\u6a21\u30b7\u30b9\u30c6\u30e0\u69cb\u7bc9\u306b\u5fc5\u8981\u306a\u77e5\u8b58\u3092\u5b66\u3076\u3053\u3068\u304c\u3067\u304d\u308b **\u6587\u732e\u30ea\u30b9\u30c8\u3092\u4f53\u7cfb\u7684\u306b\u307e\u3068\u3081\u305f\u3082\u306e** \u3067\u3059\u3002\n\n### \u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u304b\u3089\u5b66\u3076\n\n\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3001\u3053\u308c\u304b\u3089\u3082\u305a\u3063\u3068\u66f4\u65b0\u3055\u308c\u3066\u3044\u304f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u521d\u671f\u6bb5\u968e\u306b\u3059\u304e\u307e\u305b\u3093\u3002\n\n[Contributions](#contributing) \u306f\u5927\u6b53\u8fce\u3067\u3059\uff01\n\n### \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u306b\u5099\u3048\u308b\n\n\u30b3\u30fc\u30c9\u6280\u8853\u9762\u63a5\u306b\u52a0\u3048\u3066\u3001\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306b\u95a2\u3059\u308b\u77e5\u8b58\u306f\u3001\u591a\u304f\u306e\u30c6\u30c3\u30af\u4f01\u696d\u306b\u304a\u3051\u308b **\u6280\u8853\u63a1\u7528\u9762\u63a5\u30d7\u30ed\u30bb\u30b9** \u3067 **\u5fc5\u8981\u4e0d\u53ef\u6b20\u306a\u8981\u7d20** \u3067\u3059\u3002\n\n**\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u3067\u306e\u983b\u51fa\u8cea\u554f\u306b\u5099\u3048**\u3001\u81ea\u5206\u306e\u89e3\u7b54\u3068*\u6a21\u7bc4\u89e3\u7b54*:\u30c7\u30a3\u30b9\u30ab\u30c3\u30b7\u30e7\u30f3\u3001\u30b3\u30fc\u30c9\u305d\u3057\u3066\u56f3\u8868\u306a\u3069\u3092*\u6bd4\u8f03*\u3057\u3066\u5b66\u3073\u307e\u3057\u3087\u3046\u3002\n\n\u9762\u63a5\u6e96\u5099\u306b\u5f79\u7acb\u3064\u305d\u306e\u4ed6\u306e\u30c8\u30d4\u30c3\u30af:\n\n* [\u5b66\u7fd2\u6307\u91dd](#\u5b66\u7fd2\u6307\u91dd)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u306b\u3069\u306e\u3088\u3046\u306b\u6e96\u5099\u3059\u308b\u304b](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u306b\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u81e8\u3081\u3070\u3044\u3044\u304b)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b **\u3068\u305d\u306e\u89e3\u7b54**](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3068\u305d\u306e\u89e3\u7b54)\n* [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3001 **\u3068\u305d\u306e\u89e3\u7b54**](#\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u554f\u984c\u3068\u89e3\u7b54)\n* [\u305d\u306e\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u4f8b](#\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c)\n\n## \u6697\u8a18\u30ab\u30fc\u30c9\n\n<p align=\"center\">\n  <img src=\"images/zdCAkB3.png\">\n  <br/>\n</p>\n\n\u3053\u306e[Anki\u7528\u30d5\u30e9\u30c3\u30b7\u30e5\u30ab\u30fc\u30c9\u30c7\u30c3\u30ad](https://apps.ankiweb.net/) \u306f\u3001\u9593\u9694\u53cd\u5fa9\u3092\u6d3b\u7528\u3057\u3066\u3001\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u30ad\u30fc\u30b3\u30f3\u30bb\u30d7\u30c8\u306e\u5b66\u7fd2\u3092\u652f\u63f4\u3057\u307e\u3059\u3002\n\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c7\u30c3\u30ad](resources/flash_cards/System%20Design.apkg)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u7df4\u7fd2\u8ab2\u984c\u30c7\u30c3\u30ad](resources/flash_cards/System%20Design%20Exercises.apkg)\n* [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u7df4\u7fd2\u8ab2\u984c\u30c7\u30c3\u30ad](resources/flash_cards/OO%20Design.apkg)\n\n\u5916\u51fa\u5148\u3084\u79fb\u52d5\u4e2d\u306e\u52c9\u5f37\u306b\u5f79\u7acb\u3064\u3067\u3057\u3087\u3046\u3002\n\n### \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u6280\u8853\u8ab2\u984c\u7528\u306e\u554f\u984c: \u7df4\u7fd2\u7528\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n\u30b3\u30fc\u30c9\u6280\u8853\u9762\u63a5\u7528\u306e\u554f\u984c\u3092\u63a2\u3057\u3066\u3044\u308b\u5834\u5408\u306f[**\u3053\u3061\u3089**](https://github.com/donnemartin/interactive-coding-challenges)\n\n<p align=\"center\">\n  <img src=\"images/b4YtAEN.png\">\n  <br/>\n</p>\n\n\u59c9\u59b9\u30ea\u30dd\u30b8\u30c8\u30ea\u306e [**Interactive Coding Challenges**](https://github.com/donnemartin/interactive-coding-challenges)\u3082\u898b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u8ffd\u52a0\u306e\u6697\u8a18\u30c7\u30c3\u30ad\u30ab\u30fc\u30c9\u3082\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\n* [Coding deck](https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg)\n\n## \u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\n\n> \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u304b\u3089\u5b66\u3076\n\n\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u7b49\u306e\u8ca2\u732e\u306f\u7a4d\u6975\u7684\u306b\u304a\u9858\u3044\u3057\u307e\u3059:\n\n* \u30a8\u30e9\u30fc\u4fee\u6b63\n* \u30bb\u30af\u30b7\u30e7\u30f3\u5185\u5bb9\u6539\u5584\n* \u65b0\u898f\u30bb\u30af\u30b7\u30e7\u30f3\u8ffd\u52a0\n* [\u7ffb\u8a33\u3059\u308b](https://github.com/donnemartin/system-design-primer/issues/28)\n\n\u73fe\u5728\u3001\u5185\u5bb9\u306e\u6539\u5584\u304c\u5fc5\u8981\u306a\u4f5c\u696d\u4e2d\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306f[\u3053\u3061\u3089](#\u9032\u884c\u4e2d\u306e\u4f5c\u696d)\u3067\u3059\u3002\n\n\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u306e\u524d\u306b[Contributing Guidelines](CONTRIBUTING.md)\u3092\u8aad\u307f\u307e\u3057\u3087\u3046\u3002\n\n## \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u76ee\u6b21\n\n> \u8cdb\u5426\u3082\u542b\u3081\u305f\u69d8\u3005\u306a\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u5404\u30c8\u30d4\u30c3\u30af\u306e\u6982\u8981\u3002 **\u5168\u3066\u306f\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u95a2\u4fc2\u306b\u3042\u308a\u307e\u3059\u3002**\n>\n> \u305d\u308c\u305e\u308c\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3088\u308a\u5b66\u3073\u3092\u6df1\u3081\u308b\u3088\u3046\u306a\u4ed6\u306e\u6587\u732e\u3078\u306e\u30ea\u30f3\u30af\u304c\u8cbc\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n<p align=\"center\">\n  <img src=\"images/jrUBAF7.png\">\n  <br/>\n</p>\n\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af: \u307e\u305a\u306f\u3053\u3053\u304b\u3089](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u30b9-\u307e\u305a\u306f\u3053\u3053\u304b\u3089)\n    * [Step 1: \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u52d5\u753b\u3092\u898b\u308b](#\u30b9\u30c6\u30c3\u30d7-1-\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u52d5\u753b\u3092\u89b3\u3066\u5fa9\u7fd2\u3059\u308b)\n    * [Step 2: \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u8a18\u4e8b\u3092\u8aad\u3080](#\u30b9\u30c6\u30c3\u30d7-2-\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u8cc7\u6599\u3092\u8aad\u3093\u3067\u5fa9\u7fd2\u3059\u308b)\n    * [\u6b21\u306e\u30b9\u30c6\u30c3\u30d7](#\u6b21\u306e\u30b9\u30c6\u30c3\u30d7)\n* [\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9 vs \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](#\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9-vs-\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3)\n* [\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc vs \u30b9\u30eb\u30fc\u30d7\u30c3\u30c8](#\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc-vs-\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8)\n* [\u53ef\u7528\u6027 vs \u4e00\u8cab\u6027](#\u53ef\u7528\u6027-vs-\u4e00\u8cab\u6027)\n    * [CAP\u7406\u8ad6](#cap-\u7406\u8ad6)\n        * [CP - \u4e00\u8cab\u6027(consistency)\u3068\u5206\u5272\u6027(partition)\u8010\u6027](#cp---\u4e00\u8cab\u6027\u3068\u5206\u65ad\u8010\u6027consistency-and-partition-tolerance)\n        * [AP - \u53ef\u7528\u6027(availability)\u3068\u5206\u5272\u6027(partition)\u8010\u6027](#ap---\u53ef\u7528\u6027\u3068\u5206\u65ad\u8010\u6027availability-and-partition-tolerance)\n* [\u4e00\u8cab\u6027 \u30d1\u30bf\u30fc\u30f3](#\u4e00\u8cab\u6027\u30d1\u30bf\u30fc\u30f3)\n    * [\u5f31\u3044\u4e00\u8cab\u6027](#\u5f31\u3044\u4e00\u8cab\u6027)\n    * [\u7d50\u679c\u6574\u5408\u6027](#\u7d50\u679c\u6574\u5408\u6027)\n    * [\u5f37\u3044\u4e00\u8cab\u6027](#\u5f37\u3044\u4e00\u8cab\u6027)\n* [\u53ef\u7528\u6027 \u30d1\u30bf\u30fc\u30f3](#\u53ef\u7528\u6027\u30d1\u30bf\u30fc\u30f3)\n    * [\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc](#\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc)\n    * [\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n* [\u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u30b7\u30b9\u30c6\u30e0(DNS)](#\u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u30b7\u30b9\u30c6\u30e0)\n* [\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(CDN)](#\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30afcontent-delivery-network)\n    * [\u30d7\u30c3\u30b7\u30e5CDN](#\u30d7\u30c3\u30b7\u30e5cdn)\n    * [\u30d7\u30ebCDN](#\u30d7\u30ebcdn)\n* [\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc](#\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc)\n    * [\u30a2\u30af\u30c6\u30a3\u30d6/\u30d1\u30c3\u30b7\u30d6\u69cb\u6210](#\u30a2\u30af\u30c6\u30a3\u30d6\u30d1\u30c3\u30b7\u30d6)\n    * [\u30a2\u30af\u30c6\u30a3\u30d6/\u30a2\u30af\u30c6\u30a3\u30d6\u69cb\u6210](#\u30a2\u30af\u30c6\u30a3\u30d6\u30a2\u30af\u30c6\u30a3\u30d6)\n    * [Layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0](#layer-4-\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0)\n    * [Layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0](#layer-7-\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0)\n    * [\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0](#\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0)\n* [\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7 (WEB\u30b5\u30fc\u30d0\u30fc)](#\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7web\u30b5\u30fc\u30d0\u30fc)\n    * [\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc vs \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7](#\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc-vs-\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7)\n* [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc](#\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64)\n    * [\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9](#\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9)\n    * [\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u30fc](#service-discovery)\n* [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9)\n    * [\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0 (RDBMS)](#\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0-rdbms)\n        * [\u30de\u30b9\u30bf\u30fc/\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n        * [\u30de\u30b9\u30bf\u30fc/\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n        * [\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3](#federation)\n        * [\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0](#\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0)\n        * [\u30c7\u30ce\u30fc\u30de\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3](#\u975e\u6b63\u898f\u5316)\n        * [SQL \u30c1\u30e5\u30fc\u30cb\u30f3\u30b0](#sql\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0)\n    * [NoSQL](#nosql)\n        * [\u30ad\u30fc/\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2](#\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2)\n        * [\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2](#\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2)\n        * [\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2](#\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2)\n        * [\u30b0\u30e9\u30d5 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](#\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9)\n    * [SQL or NoSQL](#sql\u304bnosql\u304b)\n* [\u30ad\u30e3\u30c3\u30b7\u30e5](#\u30ad\u30e3\u30c3\u30b7\u30e5)\n    * [\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [CDN\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#cdn\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [Web\u30b5\u30fc\u30d0\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#web\u30b5\u30fc\u30d0\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30a8\u30ea\u30ec\u30d9\u30eb\u3067\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u3059\u308b](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30a8\u30ea\u30ec\u30d9\u30eb\u3067\u306e\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ec\u30d9\u30eb\u3067\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u3059\u308b](#\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ec\u30d9\u30eb\u3067\u306e\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u3044\u3064\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u66f4\u65b0\u3059\u308b\u306e\u304b](#\u3044\u3064\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u66f4\u65b0\u3059\u308b\u304b)\n        * [\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9](#\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9)\n        * [\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc](#\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc)\n        * [\u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9 (\u30e9\u30a4\u30c8\u30d0\u30c3\u30af)](#\u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9-\u30e9\u30a4\u30c8\u30d0\u30c3\u30af)\n        * [\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9](#\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9)\n* [\u975e\u540c\u671f\u51e6\u7406](#\u975e\u540c\u671f\u51e6\u7406)\n    * [\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc](#\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc)\n    * [\u30bf\u30b9\u30af\u30ad\u30e5\u30fc](#\u30bf\u30b9\u30af\u30ad\u30e5\u30fc)\n    * [\u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc](#\u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc)\n* [\u901a\u4fe1](#\u901a\u4fe1)\n    * [\u4f1d\u9001\u5236\u5fa1\u30d7\u30ed\u30c8\u30b3\u30eb (TCP)](#\u4f1d\u9001\u5236\u5fa1\u30d7\u30ed\u30c8\u30b3\u30eb-tcp)\n    * [\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30d7\u30ed\u30c8\u30b3\u30eb (UDP)](#\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30d7\u30ed\u30c8\u30b3\u30eb-udp)\n    * [\u9060\u9694\u624b\u7d9a\u547c\u51fa (RPC)](#\u9060\u9694\u624b\u7d9a\u547c\u51fa-rpc)\n    * [Representational state transfer (REST)](#representational-state-transfer-rest)\n* [\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3](#\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3)\n* [\u88dc\u907a](#\u88dc\u907a)\n    * [2\u306e\u4e57\u6570\u8868](#2\u306e\u4e57\u6570\u8868)\n    * [\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024](#\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024)\n    * [\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c](#\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c)\n    * [\u5b9f\u4e16\u754c\u3067\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](#\u5b9f\u4e16\u754c\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3)\n    * [\u5404\u4f01\u696d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](#\u5404\u4f01\u696d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3)\n    * [\u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0](#\u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0)\n* [\u4f5c\u696d\u4e2d](#\u9032\u884c\u4e2d\u306e\u4f5c\u696d)\n* [\u30af\u30ec\u30b8\u30c3\u30c8](#\u30af\u30ec\u30b8\u30c3\u30c8)\n* [\u9023\u7d61\u60c5\u5831](#contact-info)\n* [\u30e9\u30a4\u30bb\u30f3\u30b9](#license)\n\n## \u5b66\u7fd2\u6307\u91dd\n\n> \u5b66\u7fd2\u30b9\u30d1\u30f3\u306b\u5fdc\u3058\u3066\u307f\u308b\u3079\u304d\u30c8\u30d4\u30c3\u30af\u30b9 (short, medium, long)\n\n![Imgur](images/OfVllex.png)\n\n**Q: \u9762\u63a5\u306e\u305f\u3081\u306b\u306f\u3001\u3053\u3053\u306b\u3042\u308b\u3082\u306e\u3059\u3079\u3066\u3092\u3084\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b\uff1f**\n\n**A: \u3044\u3048\u3001\u3053\u3053\u306b\u3042\u308b\u3059\u3079\u3066\u3092\u3084\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002**\n\n\u9762\u63a5\u3067\u4f55\u3092\u805e\u304b\u308c\u308b\u304b\u306f\u4ee5\u4e0b\u306e\u6761\u4ef6\u306b\u3088\u3063\u3066\u5909\u308f\u3063\u3066\u304d\u307e\u3059:\n\n* \u3069\u308c\u3060\u3051\u306e\u6280\u8853\u7d4c\u9a13\u304c\u3042\u308b\u304b\n* \u3042\u306a\u305f\u306e\u6280\u8853\u80cc\u666f\u304c\u4f55\u3067\u3042\u308b\u304b\n* \u3069\u306e\u30dd\u30b8\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306b\u9762\u63a5\u3092\u53d7\u3051\u3066\u3044\u308b\u304b\n* \u3069\u306e\u4f01\u696d\u306e\u9762\u63a5\u3092\u53d7\u3051\u3066\u3044\u308b\u304b\n* \u904b\n\n\u3088\u308a\u7d4c\u9a13\u306e\u3042\u308b\u5019\u88dc\u8005\u306f\u4e00\u822c\u7684\u306b\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306b\u3064\u3044\u3066\u3088\u308a\u6df1\u3044\u77e5\u8b58\u3092\u6709\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u8981\u6c42\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u3002\u30b7\u30b9\u30c6\u30e0\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u3084\u30c1\u30fc\u30e0\u30ea\u30fc\u30c0\u30fc\u306f\u5404\u30e1\u30f3\u30d0\u30fc\u306e\u6301\u3064\u3088\u3046\u306a\u77e5\u8b58\u3088\u308a\u306f\u6df1\u3044\u898b\u8b58\u3092\u6301\u3063\u3066\u3044\u308b\u3079\u304d\u3067\u3057\u3087\u3046\u3002\u4e00\u6d41\u30c6\u30c3\u30af\u4f01\u696d\u3067\u306f\u8907\u6570\u56de\u306e\u8a2d\u8a08\u9762\u63a5\u3092\u8ab2\u3055\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\n\n\u307e\u305a\u306f\u5e83\u304f\u59cb\u3081\u3066\u3001\u305d\u3053\u304b\u3089\u3044\u304f\u3064\u304b\u306e\u5206\u91ce\u306b\u7d5e\u3063\u3066\u6df1\u3081\u3066\u3044\u304f\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u69d8\u3005\u306a\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u30c8\u30d4\u30c3\u30af\u306b\u3064\u3044\u3066\u5c11\u3057\u305a\u3064\u77e5\u3063\u3066\u304a\u304f\u3053\u3068\u306f\u3044\u3044\u3053\u3068\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u5b66\u7fd2\u30ac\u30a4\u30c9\u3092\u81ea\u5206\u306e\u5b66\u7fd2\u306b\u5f53\u3066\u3089\u308c\u308b\u6642\u9593\u3001\u6280\u8853\u7d4c\u9a13\u3001\u3069\u306e\u8077\u4f4d\u3001\u3069\u306e\u4f1a\u793e\u306b\u5fdc\u52df\u3057\u3066\u3044\u308b\u304b\u306a\u3069\u3092\u52a0\u5473\u3057\u3066\u81ea\u5206\u7528\u306b\u8abf\u6574\u3057\u3066\u4f7f\u3046\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n* **\u77ed\u671f\u9593** - **\u5e45\u5e83\u304f** \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u3092\u5b66\u3076\u3002**\u3044\u304f\u3064\u304b\u306e** \u9762\u63a5\u8ab2\u984c\u3092\u89e3\u304f\u3053\u3068\u3067\u5bfe\u7b56\u3059\u308b\u3002\n* **\u4e2d\u671f\u9593** - **\u5e45\u5e83\u304f** \u305d\u3057\u3066 **\u305d\u308c\u306a\u308a\u306b\u6df1\u304f**\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u3092\u5b66\u3076\u3002**\u591a\u304f\u306e** \u9762\u63a5\u8ab2\u984c\u3092\u89e3\u304f\u3053\u3068\u3067\u5bfe\u7b56\u3059\u308b\u3002\n* **\u9577\u671f\u9593** - **\u5e45\u5e83\u304f** \u305d\u3057\u3066 **\u3082\u3063\u3068\u6df1\u304f**\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u3092\u5b66\u3076\u3002**\u307b\u307c\u5168\u3066\u306e** \u9762\u63a5\u8ab2\u984c\u3092\u89e3\u304f\u3053\u3068\u3067\u5bfe\u7b56\u3059\u308b\u3002\n\n| | \u77ed\u671f\u9593 | \u4e2d\u671f\u9593 | \u9577\u671f\u9593 |\n|---|---|---|---|\n| [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u76ee\u6b21) \u3092\u8aad\u307f\u3001\u30b7\u30b9\u30c6\u30e0\u52d5\u4f5c\u6a5f\u5e8f\u306b\u3064\u3044\u3066\u5e83\u304f\u77e5\u308b | :+1: | :+1: | :+1: |\n| \u6b21\u306e\u30ea\u30f3\u30af\u5148\u306e\u3044\u304f\u3064\u304b\u306e\u30da\u30fc\u30b8\u3092\u8aad\u3093\u3067 [\u5404\u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u30d6\u30ed\u30b0](#\u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0) \u5fdc\u52df\u3059\u308b\u4f1a\u793e\u306b\u3064\u3044\u3066\u77e5\u308b | :+1: | :+1: | :+1: |\n| \u6b21\u306e\u30ea\u30f3\u30af\u5148\u306e\u3044\u304f\u3064\u304b\u306e\u30da\u30fc\u30b8\u3092\u8aad\u3080 [\u5b9f\u4e16\u754c\u3067\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](#\u5b9f\u4e16\u754c\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3) | :+1: | :+1: | :+1: |\n| \u5fa9\u7fd2\u3059\u308b [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u306b\u3069\u306e\u3088\u3046\u306b\u6e96\u5099\u3059\u308b\u304b](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u306b\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u81e8\u3081\u3070\u3044\u3044\u304b) | :+1: | :+1: | :+1: |\n| \u3068\u308a\u3042\u3048\u305a\u4e00\u5468\u3059\u308b [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3068\u305d\u306e\u89e3\u7b54) | Some | Many | Most |\n| \u3068\u308a\u3042\u3048\u305a\u4e00\u5468\u3059\u308b [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u554f\u984c\u3068\u89e3\u7b54](#\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u554f\u984c\u3068\u89e3\u7b54) | Some | Many | Most |\n| \u5fa9\u7fd2\u3059\u308b [\u305d\u306e\u4ed6\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u3067\u306e\u8cea\u554f\u4f8b](#\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c) | Some | Many | Most |\n\n## \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u306b\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u81e8\u3081\u3070\u3044\u3044\u304b\n\n> \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8a66\u9a13\u554f\u984c\u306b\u3069\u306e\u3088\u3046\u306b\u53d6\u308a\u7d44\u3080\u304b\n\n\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u306f **open-ended conversation(Yes/No\u3067\u306f\u7b54\u3048\u3089\u308c\u306a\u3044\u53e3\u982d\u8cea\u554f)\u3067\u3059**\u3002 \u81ea\u5206\u3067\u4f1a\u8a71\u3092\u7d44\u307f\u7acb\u3066\u308b\u3053\u3068\u3092\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u5f93\u3063\u3066\u8b70\u8ad6\u3092\u7d44\u307f\u7acb\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\u3053\u306e\u904e\u7a0b\u3092\u78ba\u304b\u306a\u3082\u306e\u306b\u3059\u308b\u305f\u3081\u306b\u3001\u6b21\u306e\u30bb\u30af\u30b7\u30e7\u30f3[\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3068\u305d\u306e\u89e3\u7b54](#system-design-interview-questions-with-solutions) \u3092\u4ee5\u4e0b\u306e\u6307\u91dd\u306b\u5f93\u3063\u3066\u8aad\u307f\u8fbc\u3080\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u30b9\u30c6\u30c3\u30d7 1: \u305d\u306e\u30b7\u30b9\u30c6\u30e0\u4f7f\u7528\u4f8b\u306e\u6982\u8981\u3001\u5236\u7d04\u3001\u63a8\u8a08\u5024\u7b49\u3092\u805e\u304d\u51fa\u3057\u3001\u307e\u3068\u3081\u308b\n\n\u30b7\u30b9\u30c6\u30e0\u4ed5\u69d8\u306e\u8981\u6c42\u4e8b\u9805\u3092\u805e\u304d\u51fa\u3057\u3001\u554f\u984c\u7b87\u6240\u3092\u7279\u5b9a\u3057\u307e\u3057\u3087\u3046\u3002\u4f7f\u7528\u4f8b\u3068\u5236\u7d04\u3092\u660e\u78ba\u306b\u3059\u308b\u305f\u3081\u306e\u8cea\u554f\u3092\u6295\u3052\u304b\u3051\u307e\u3057\u3087\u3046\u3002\u8981\u6c42\u3059\u308b\u63a8\u8a08\u5024\u306b\u3064\u3044\u3066\u3082\u8b70\u8ad6\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n* \u8ab0\u304c\u305d\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3046\u306e\u304b\uff1f\n* \u3069\u306e\u3088\u3046\u306b\u4f7f\u3046\u306e\u304b\uff1f\n* \u4f55\u4eba\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u3044\u308b\u306e\u304b\uff1f\n* \u30b7\u30b9\u30c6\u30e0\u306f\u3069\u306e\u3088\u3046\u306a\u6a5f\u80fd\u3092\u679c\u305f\u3059\u306e\u304b\uff1f\n* \u30b7\u30b9\u30c6\u30e0\u3078\u306e\u5165\u529b\u3068\u51fa\u529b\u306f\uff1f\n* \u3069\u308c\u3060\u3051\u306e\u5bb9\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u634c\u304f\u5fc5\u8981\u304c\u3042\u308b\u306e\u304b\uff1f\n* \u4e00\u79d2\u9593\u306b\u4f55\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u9001\u4fe1\u304c\u60f3\u5b9a\u3055\u308c\u308b\u304b\uff1f\n* \u8aad\u307f\u66f8\u304d\u6bd4\u7387\u306e\u63a8\u5b9a\u5024\u306f\u3044\u304f\u3089\u7a0b\u5ea6\u304b\uff1f\n\n### \u30b9\u30c6\u30c3\u30d7 2: \u3088\u308a\u9ad8\u30ec\u30d9\u30eb\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u3092\u7d44\u307f\u7acb\u3066\u308b\n\n\u91cd\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5168\u3066\u8003\u616e\u3057\u305f\u9ad8\u30ec\u30d9\u30eb\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u6982\u8981\u3092\u7d44\u307f\u7acb\u3066\u308b\u3002\n\n* \u4e3b\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u63a5\u7d9a\u3092\u30b9\u30b1\u30c3\u30c1\u3057\u3066\u66f8\u304d\u51fa\u3059\n* \u8003\u3048\u306e\u88cf\u4ed8\u3051\u3092\u3059\u308b\n\n### \u30b9\u30c6\u30c3\u30d7 3: \u6838\u3068\u306a\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u8a2d\u8a08\u3059\u308b\n\n\u305d\u308c\u305e\u308c\u306e\u4e3b\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u3064\u3044\u3066\u306e\u8a73\u7d30\u3092\u5b66\u3076\u3002\u4f8b\u3048\u3070\u3001[url\u77ed\u7e2e\u30b5\u30fc\u30d3\u30b9](solutions/system_design/pastebin/README.md)\u306e\u8a2d\u8a08\u3092\u554f\u308f\u308c\u305f\u969b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046:\n\n* \u5143\u306eURL\u306e\u30cf\u30c3\u30b7\u30e5\u5316\u3057\u305f\u3082\u306e\u3092\u4f5c\u308a\u3001\u305d\u308c\u3092\u4fdd\u5b58\u3059\u308b\n    * [MD5](solutions/system_design/pastebin/README.md) \u3068 [Base62](solutions/system_design/pastebin/README.md)\n    * \u30cf\u30c3\u30b7\u30e5\u885d\u7a81\n    * SQL \u3082\u3057\u304f\u306f NoSQL\n    * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b9\u30ad\u30fc\u30de\n* \u30cf\u30c3\u30b7\u30e5\u5316\u3055\u308c\u305fURL\u3092\u5143\u306eURL\u306b\u518d\u7ffb\u8a33\u3059\u308b\n    * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u53c2\u7167\n* API & \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306e\u8a2d\u8a08\n\n### \u30b9\u30c6\u30c3\u30d7 4: \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u30b9\u30b1\u30fc\u30eb\n\n\u4e0e\u3048\u3089\u308c\u305f\u5236\u7d04\u6761\u4ef6\u304b\u3089\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u3068\u306a\u308a\u305d\u3046\u306a\u3068\u3053\u308d\u3092\u5272\u308a\u51fa\u3057\u3001\u660e\u78ba\u5316\u3059\u308b\u3002  \u4f8b\u3048\u3070\u3001\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306e\u554f\u984c\u89e3\u6c7a\u306e\u305f\u3081\u306b\u4ee5\u4e0b\u306e\u8981\u7d20\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3060\u308d\u3046\u304b\uff1f\n\n* \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\n* \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n* \u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n* \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\n\n\u53d6\u308a\u3046\u308b\u89e3\u6c7a\u7b56\u3068\u305d\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306b\u3064\u3044\u3066\u8b70\u8ad6\u3092\u3057\u3088\u3046\u3002\u5168\u3066\u306e\u3053\u3068\u306f\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u95a2\u4fc2\u306b\u3042\u308b\u3002\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u3064\u3044\u3066\u306f[\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u539f\u7406](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u76ee\u6b21)\u3092\u8aad\u3080\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u3061\u3087\u3063\u3068\u3057\u305f\u6697\u7b97\u554f\u984c\n\n\u3061\u3087\u3063\u3068\u3057\u305f\u63a8\u8a08\u5024\u3092\u624b\u8a08\u7b97\u3067\u3059\u308b\u3053\u3068\u3092\u6c42\u3081\u3089\u308c\u308b\u3053\u3068\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002[\u88dc\u907a](#\u88dc\u907a)\u306e\u4ee5\u4e0b\u306e\u9805\u76ee\u304c\u5f79\u306b\u7acb\u3064\u3067\u3057\u3087\u3046:\n\n* [\u30c1\u30e9\u88cf\u8a08\u7b97\u3067\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u3059\u308b](http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)\n* [2\u306e\u4e57\u6570\u8868](#2\u306e\u4e57\u6570\u8868)\n* [\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u3063\u3066\u304a\u304f\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u306e\u53c2\u8003\u5024](#\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024)\n\n### \u6587\u732e\u3068\u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\n\n\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u5148\u30da\u30fc\u30b8\u3092\u898b\u3066\u3069\u306e\u3088\u3046\u306a\u8cea\u554f\u3092\u6295\u3052\u304b\u3051\u3089\u308c\u308b\u304b\u6982\u8981\u3092\u982d\u306b\u5165\u308c\u3066\u304a\u304d\u307e\u3057\u3087\u3046:\n\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u3067\u6210\u529f\u3059\u308b\u306b\u306f\uff1f](https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5](http://www.hiredintech.com/system-design)\n* [\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3001\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u3078\u306e\u5c0e\u5165](https://www.youtube.com/watch?v=ZgdS0EUmn70)\n\n## \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3068\u305d\u306e\u89e3\u7b54\n\n> \u983b\u51fa\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u3068\u53c2\u8003\u89e3\u7b54\u3001\u30b3\u30fc\u30c9\u53ca\u3073\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\n>\n> \u89e3\u7b54\u306f `solutions/` \u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306b\u30ea\u30f3\u30af\u304c\u8cbc\u3089\u308c\u3066\u3044\u308b\n\n| \u554f\u984c | |\n|---|---|\n| Pastebin.com (\u3082\u3057\u304f\u306f Bit.ly) \u3092\u8a2d\u8a08\u3059\u308b| [\u89e3\u7b54](solutions/system_design/pastebin/README.md) |\n| Twitter\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3 (\u3082\u3057\u304f\u306fFacebook\u30d5\u30a3\u30fc\u30c9)\u3092\u8a2d\u8a08\u3059\u308b<br/>Twitter\u691c\u7d22(\u3082\u3057\u304f\u306fFacebook\u691c\u7d22)\u6a5f\u80fd\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions/system_design/twitter/README.md) |\n| \u30a6\u30a7\u30d6\u30af\u30ed\u30fc\u30e9\u30fc\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions/system_design/web_crawler/README.md) |\n| Mint.com\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions/system_design/mint/README.md) |\n| SNS\u30b5\u30fc\u30d3\u30b9\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions/system_design/social_graph/README.md) |\n| \u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u306e\u30ad\u30fc/\u30d0\u30ea\u30e5\u30fc\u69cb\u9020\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions/system_design/query_cache/README.md) |\n| Amazon\u306e\u30ab\u30c6\u30b4\u30ea\u6bce\u306e\u58f2\u308a\u4e0a\u3052\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions/system_design/sales_rank/README.md) |\n| AWS\u4e0a\u3067100\u4e07\u4eba\u898f\u6a21\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u634c\u304f\u30b5\u30fc\u30d3\u30b9\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions/system_design/scaling_aws/README.md) |\n| \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u554f\u984c\u3092\u8ffd\u52a0\u3059\u308b | [Contribute](#contributing) |\n\n### Pastebin.com (\u3082\u3057\u304f\u306f Bit.ly) \u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions/system_design/pastebin/README.md)\n\n![Imgur](images/4edXG0T.png)\n\n### Twitter\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3&\u691c\u7d22 (\u3082\u3057\u304f\u306fFacebook\u30d5\u30a3\u30fc\u30c9&\u691c\u7d22)\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions/system_design/twitter/README.md)\n\n![Imgur](images/jrUBAF7.png)\n\n### \u30a6\u30a7\u30d6\u30af\u30ed\u30fc\u30e9\u30fc\u306e\u8a2d\u8a08\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions/system_design/web_crawler/README.md)\n\n![Imgur](images/bWxPtQA.png)\n\n### Mint.com\u306e\u8a2d\u8a08\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions/system_design/mint/README.md)\n\n![Imgur](images/V5q57vU.png)\n\n### SNS\u30b5\u30fc\u30d3\u30b9\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions/system_design/social_graph/README.md)\n\n![Imgur](images/cdCv5g7.png)\n\n### \u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u306e\u30ad\u30fc/\u30d0\u30ea\u30e5\u30fc\u69cb\u9020\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions/system_design/query_cache/README.md)\n\n![Imgur](images/4j99mhe.png)\n\n### Amazon\u306e\u30ab\u30c6\u30b4\u30ea\u6bce\u306e\u58f2\u308a\u4e0a\u3052\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions/system_design/sales_rank/README.md)\n\n![Imgur](images/MzExP06.png)\n\n### AWS\u4e0a\u3067100\u4e07\u4eba\u898f\u6a21\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u634c\u304f\u30b5\u30fc\u30d3\u30b9\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions/system_design/scaling_aws/README.md)\n\n![Imgur](images/jj3A5N8.png)\n\n## \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u554f\u984c\u3068\u89e3\u7b54\n\n> \u983b\u51fa\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u3068\u53c2\u8003\u89e3\u7b54\u3001\u30b3\u30fc\u30c9\u53ca\u3073\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\n>\n> \u89e3\u7b54\u306f `solutions/` \u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306b\u30ea\u30f3\u30af\u304c\u8cbc\u3089\u308c\u3066\u3044\u308b\n\n>**\u5099\u8003: \u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u4f5c\u696d\u4e2d\u3067\u3059**\n\n| \u554f\u984c | |\n|---|---|\n| \u30cf\u30c3\u30b7\u30e5\u30de\u30c3\u30d7\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions/object_oriented_design/hash_table/hash_map.ipynb)  |\n| LRU\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions/object_oriented_design/lru_cache/lru_cache.ipynb)  |\n| \u30b3\u30fc\u30eb\u30bb\u30f3\u30bf\u30fc\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions/object_oriented_design/call_center/call_center.ipynb)  |\n| \u30ab\u30fc\u30c9\u306e\u30c7\u30c3\u30ad\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb)  |\n| \u99d0\u8eca\u5834\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions/object_oriented_design/parking_lot/parking_lot.ipynb)  |\n| \u30c1\u30e3\u30c3\u30c8\u30b5\u30fc\u30d0\u30fc\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions/object_oriented_design/online_chat/online_chat.ipynb)  |\n| \u5186\u5f62\u914d\u5217\u306e\u8a2d\u8a08 | [Contribute](#contributing)  |\n| \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u554f\u984c\u3092\u8ffd\u52a0\u3059\u308b | [Contribute](#contributing) |\n\n## \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u30b9: \u307e\u305a\u306f\u3053\u3053\u304b\u3089\n\n\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u52c9\u5f37\u306f\u521d\u3081\u3066\uff1f\n\n\u307e\u305a\u521d\u3081\u306b\u3001\u3088\u304f\u4f7f\u308f\u308c\u308b\u8a2d\u8a08\u539f\u7406\u306b\u3064\u3044\u3066\u3001\u305d\u308c\u3089\u304c\u4f55\u3067\u3042\u308b\u304b\u3001\u3069\u306e\u3088\u3046\u306b\u7528\u3044\u3089\u308c\u308b\u304b\u3001\u9577\u6240\u77ed\u6240\u306b\u3064\u3044\u3066\u57fa\u672c\u7684\u306a\u77e5\u8b58\u3092\u5f97\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n\n### \u30b9\u30c6\u30c3\u30d7 1: \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u52d5\u753b\u3092\u89b3\u3066\u5fa9\u7fd2\u3059\u308b\n\n[Harvard\u3067\u306e\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306e\u8b1b\u7fa9](https://www.youtube.com/watch?v=-W9F__D3oY4)\n\n* \u3053\u3053\u3067\u89e6\u308c\u3089\u308c\u3066\u3044\u308b\u30c8\u30d4\u30c3\u30af\u30b9:\n    * \u5782\u76f4\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n    * \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n    * \u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n    * \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\n    * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n    * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\n\n### \u30b9\u30c6\u30c3\u30d7 2: \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u8cc7\u6599\u3092\u8aad\u3093\u3067\u5fa9\u7fd2\u3059\u308b\n\n[\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](http://www.lecloud.net/tagged/scalability/chrono)\n\n* \u3053\u3053\u3067\u89e6\u308c\u3089\u308c\u3066\u3044\u308b\u30c8\u30d4\u30c3\u30af\u30b9:\n    * [\u30af\u30ed\u30fc\u30f3](http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n    * [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n    * [\u30ad\u30e3\u30c3\u30b7\u30e5](http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n    * [\u975e\u540c\u671f](http://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism)\n\n### \u6b21\u306e\u30b9\u30c6\u30c3\u30d7\n\n\u6b21\u306b\u3001\u30cf\u30a4\u30ec\u30d9\u30eb\u3067\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306b\u3064\u3044\u3066\u307f\u3066\u3044\u304f:\n\n* **\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9** vs **\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3**\n* **\u30ec\u30a4\u30c6\u30f3\u30b7** vs **\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8**\n* **\u53ef\u7528\u6027** vs **\u4e00\u8cab\u6027**\n\n**\u5168\u3066\u306f\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u95a2\u4fc2\u306b\u3042\u308b**\u3068\u3044\u3046\u306e\u3092\u809d\u306b\u547d\u3058\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u305d\u308c\u304b\u3089\u3001\u3088\u308a\u6df1\u3044\u5185\u5bb9\u3001DNS\u3084CDN\u305d\u3057\u3066\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306a\u3069\u306b\u3064\u3044\u3066\u5b66\u7fd2\u3092\u9032\u3081\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n## \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9 vs \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\n\n\u30ea\u30bd\u30fc\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u308b\u306e\u306b\u3064\u308c\u3066 **\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9** \u304c\u5411\u4e0a\u3059\u308b\u5834\u5408\u305d\u306e\u30b5\u30fc\u30d3\u30b9\u306f **\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb** \u3067\u3042\u308b\u3068\u8a00\u3048\u308b\u3067\u3057\u3087\u3046\u3002\u4e00\u822c\u7684\u306b\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u3068\u3044\u3046\u306e\u306f\u3059\u306a\u308f\u3061\u8a08\u7b97\u51e6\u7406\u3092\u5897\u3084\u3059\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u304c\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u5897\u3048\u305f\u6642\u306a\u3069\u3088\u308a\u5927\u304d\u306a\u51e6\u7406\u3092\u634c\u3051\u308b\u3088\u3046\u306b\u306a\u308b\u3053\u3068\u3067\u3082\u3042\u308a\u307e\u3059\u3002<sup><a href=http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html>1</a></sup>\n\n\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9vs\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3092\u3068\u3089\u3048\u308b\u4ed6\u306e\u8003\u3048\u65b9:\n\n* **\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9** \u3067\u306e\u554f\u984c\u3092\u62b1\u3048\u3066\u3044\u308b\u6642\u3001\u3042\u306a\u305f\u306e\u30b7\u30b9\u30c6\u30e0\u306f\u4e00\u4eba\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u3068\u3063\u3066\u9045\u3044\u3068\u8a00\u3048\u308b\u3067\u3057\u3087\u3046\u3002\n* **\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3** \u3067\u306e\u554f\u984c\u3092\u62b1\u3048\u3066\u3044\u308b\u3068\u304d\u3001\u4e00\u4eba\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u3068\u3063\u3066\u306f\u901f\u3044\u3067\u3059\u304c\u3001\u591a\u304f\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u308b\u6642\u306b\u306f\u9045\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u3067\u3057\u3087\u3046\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u3064\u3044\u3066](http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3001\u53ef\u7528\u6027\u3001\u5b89\u5b9a\u6027\u3001\u30d1\u30bf\u30fc\u30f3](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n\n## \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc vs \u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\n\n**\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc** \u3068\u306f\u306a\u306b\u304c\u3057\u304b\u306e\u52d5\u4f5c\u3092\u884c\u3046\u3001\u3082\u3057\u304f\u306f\u7d50\u679c\u3092\u7b97\u51fa\u3059\u308b\u306e\u306b\u8981\u3059\u308b\u6642\u9593\n\n**\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8** \u3068\u306f\u305d\u306e\u3088\u3046\u306a\u52d5\u4f5c\u3084\u7d50\u679c\u7b97\u51fa\u304c\u5358\u4f4d\u6642\u9593\u306b\u884c\u308f\u308c\u308b\u56de\u6570\n\n\u4e00\u822c\u7684\u306b\u3001 **\u6700\u5927\u9650\u306e\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8** \u3092 **\u8a31\u5bb9\u7bc4\u56f2\u5185\u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc** \u3067\u5b9f\u73fe\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3059\u306e\u304c\u666e\u901a\u3060\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc vs \u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u7406\u89e3\u3059\u308b](https://community.cadence.com/cadence_blogs_8/b/sd/archive/2010/09/13/understanding-latency-vs-throughput)\n\n## \u53ef\u7528\u6027 vs \u4e00\u8cab\u6027\n\n### CAP \u7406\u8ad6\n\n<p align=\"center\">\n  <img src=\"images/bgLMI2u.png\">\n  <br/>\n  <i><a href=http://robertgreiner.com/2014/08/cap-theorem-revisited>Source: CAP theorem revisited</a></i>\n</p>\n\n\u5206\u6563\u578b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b7\u30b9\u30c6\u30e0\u306b\u304a\u3044\u3066\u306f\u4e0b\u306e\u4e09\u3064\u306e\u3046\u3061\u4e8c\u3064\u307e\u3067\u3057\u304b\u540c\u6642\u306b\u4fdd\u8a3c\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002:\n\n* **\u4e00\u8cab\u6027** - \u5168\u3066\u306e\u8aad\u307f\u8fbc\u307f\u306f\u6700\u65b0\u306e\u66f8\u304d\u8fbc\u307f\u3082\u3057\u304f\u306f\u30a8\u30e9\u30fc\u3092\u53d7\u3051\u53d6\u308b\n* **\u53ef\u7528\u6027** - \u53d7\u3051\u53d6\u308b\u60c5\u5831\u304c\u6700\u65b0\u306e\u3082\u306e\u3060\u3068\u3044\u3046\u4fdd\u8a3c\u306f\u306a\u3044\u304c\u3001\u5168\u3066\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5fc5\u305a\u53d7\u3051\u53d6\u308b\n* **\u5206\u65ad\u8010\u6027** - \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u554f\u984c\u306b\u3088\u3063\u3066\u9806\u4e0d\u540c\u306e\u5206\u65ad\u304c\u8d77\u304d\u3066\u3082\u30b7\u30b9\u30c6\u30e0\u304c\u52d5\u4f5c\u3092\u7d9a\u3051\u308b\n\n*\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u4fe1\u983c\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u5206\u65ad\u8010\u6027\u306f\u5fc5\u305a\u4fdd\u8a3c\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u3064\u307e\u308a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306f\u3001\u4e00\u8cab\u6027\u3092\u53d6\u308b\u304b\u3001\u53ef\u7528\u6027\u3092\u53d6\u308b\u304b\u3092\u8003\u3048\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002*\n\n#### CP - \u4e00\u8cab\u6027\u3068\u5206\u65ad\u8010\u6027(consistency and partition tolerance)\n\n\u5206\u65ad\u3055\u308c\u305f\u30ce\u30fc\u30c9\u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5f85\u3061\u7d9a\u3051\u3066\u3044\u308b\u3068\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u30a8\u30e9\u30fc\u306b\u9665\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002CP\u306f\u3042\u306a\u305f\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u30a2\u30c8\u30df\u30c3\u30af\u306a\u8aad\u307f\u66f8\u304d\uff08\u4e0d\u53ef\u5206\u64cd\u4f5c\uff09\u3092\u5fc5\u8981\u3068\u3059\u308b\u969b\u306b\u306f\u3044\u3044\u9078\u629e\u80a2\u3067\u3057\u3087\u3046\u3002\n\n#### AP - \u53ef\u7528\u6027\u3068\u5206\u65ad\u8010\u6027(availability and partition tolerance)\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u30ce\u30fc\u30c9\u4e0a\u306b\u3042\u308b\u30c7\u30fc\u30bf\u3067\u6700\u65b0\u306e\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u6700\u65b0\u7248\u306e\u30c7\u30fc\u30bf\u304c\u8fd4\u3055\u308c\u308b\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u3002\u5206\u65ad\u304c\u89e3\u6d88\u3055\u308c\u305f\u5f8c\u3082\u3001\u66f8\u304d\u8fbc\u307f\u304c\u53cd\u6620\u3055\u308c\u308b\u306e\u306b\u306f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\n\n[\u7d50\u679c\u6574\u5408\u6027](#\u7d50\u679c\u6574\u5408\u6027)\u3000\u3092\u6c42\u3081\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u969b\u306b\u306fAP\u3092\u63a1\u7528\u3059\u308b\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u3082\u3057\u304f\u306f\u3001\u5916\u90e8\u30a8\u30e9\u30fc\u306b\u95a2\u308f\u3089\u305a\u30b7\u30b9\u30c6\u30e0\u304c\u7a3c\u50cd\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u969b\u306b\u3082\u540c\u69d8\u3067\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [CAP \u7406\u8ad6\u3092\u632f\u308a\u8fd4\u308b](http://robertgreiner.com/2014/08/cap-theorem-revisited/)\n* [\u5e73\u6613\u306a\u82f1\u8a9e\u3067\u306eCAP \u7406\u8ad6\u306e\u30a4\u30f3\u30c8\u30ed](http://ksat.me/a-plain-english-introduction-to-cap-theorem/)\n* [CAP FAQ](https://github.com/henryr/cap-faq)\n\n## \u4e00\u8cab\u6027\u30d1\u30bf\u30fc\u30f3\n\n\u540c\u3058\u30c7\u30fc\u30bf\u306e\u8907\u88fd\u304c\u8907\u6570\u3042\u308b\u72b6\u614b\u3067\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u4e00\u8cab\u3057\u305f\u30c7\u30fc\u30bf\u8868\u793a\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306b\u3001\u3069\u306e\u3088\u3046\u306b\u305d\u308c\u3089\u3092\u540c\u671f\u3059\u308c\u3070\u3044\u3044\u306e\u304b\u3068\u3044\u3046\u8ab2\u984c\u304c\u3042\u308a\u307e\u3059\u3002 [CAP \u7406\u8ad6](#cap-\u7406\u8ad6) \u306b\u304a\u3051\u308b\u4e00\u8cab\u6027\u306e\u5b9a\u7fa9\u3092\u601d\u3044\u51fa\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u5168\u3066\u306e\u8aad\u307f\u53d6\u308a\u306f\u6700\u65b0\u306e\u66f8\u304d\u8fbc\u307f\u30c7\u30fc\u30bf\u3082\u3057\u304f\u306f\u30a8\u30e9\u30fc\u3092\u53d7\u3051\u53d6\u308b\u306f\u305a\u3067\u3059\u3002\n\n### \u5f31\u3044\u4e00\u8cab\u6027\n\n\u66f8\u304d\u8fbc\u307f\u5f8c\u306e\u8aad\u307f\u53d6\u308a\u3067\u306f\u3001\u305d\u306e\u6700\u65b0\u306e\u66f8\u304d\u8fbc\u307f\u3092\u8aad\u3081\u305f\u308a\u8aad\u3081\u306a\u304b\u3063\u305f\u308a\u3059\u308b\u3002\u30d9\u30b9\u30c8\u30a8\u30d5\u30a9\u30fc\u30c8\u578b\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306b\u57fa\u3065\u304f\u3002\n\n\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306fmemcached\u306a\u3069\u306e\u30b7\u30b9\u30c6\u30e0\u306b\u898b\u3089\u308c\u307e\u3059\u3002\u5f31\u3044\u4e00\u8cab\u6027\u306f\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u6027\u304c\u5fc5\u8981\u306a\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3001\u4f8b\u3048\u3070VoIP\u3001\u30d3\u30c7\u30aa\u30c1\u30e3\u30c3\u30c8\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30de\u30eb\u30c1\u30d7\u30ec\u30a4\u30e4\u30fc\u30b2\u30fc\u30e0\u306a\u3069\u3068\u76f8\u6027\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u4f8b\u3048\u3070\u3001\u96fb\u8a71\u306b\u51fa\u3066\u3044\u308b\u3068\u304d\u306b\u6570\u79d2\u9593\u97f3\u58f0\u304c\u53d7\u3051\u53d6\u308c\u306a\u304f\u306a\u3063\u305f\u3068\u3057\u305f\u3089\u3001\u305d\u306e\u5f8c\u306b\u63a5\u7d9a\u304c\u56de\u5fa9\u3057\u3066\u3082\u305d\u306e\u63a5\u7d9a\u304c\u5207\u65ad\u3055\u308c\u3066\u3044\u305f\u9593\u306b\u8a71\u3055\u308c\u3066\u3044\u305f\u3053\u3068\u306f\u805e\u304d\u53d6\u308c\u306a\u3044\u3068\u3044\u3046\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n### \u7d50\u679c\u6574\u5408\u6027\n\n\u66f8\u304d\u8fbc\u307f\u306e\u5f8c\u3001\u8aad\u307f\u53d6\u308a\u306f\u6700\u7d42\u7684\u306b\u306f\u305d\u306e\u7d50\u679c\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b(\u30df\u30ea\u79d2\u307b\u3069\u9045\u308c\u3066\u3068\u3044\u3046\u306e\u304c\u4e00\u822c\u7684\u3067\u3059)\u3002\u30c7\u30fc\u30bf\u306f\u975e\u540c\u671f\u7684\u306b\u8907\u88fd\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306fDNS\u3084\u30e1\u30fc\u30eb\u30b7\u30b9\u30c6\u30e0\u306a\u3069\u306b\u63a1\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u7d50\u679c\u6574\u5408\u6027\u306f\u591a\u304f\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u634c\u304f\u30b5\u30fc\u30d3\u30b9\u3068\u76f8\u6027\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u5f37\u3044\u4e00\u8cab\u6027\n\n\u66f8\u304d\u8fbc\u307f\u306e\u5f8c\u3001\u8aad\u307f\u53d6\u308a\u306f\u305d\u308c\u3092\u5fc5\u305a\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30c7\u30fc\u30bf\u306f\u540c\u671f\u7684\u306b\u8907\u88fd\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3084RDBMS\u306a\u3069\u3067\u63a1\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u6271\u3046\u30b5\u30fc\u30d3\u30b9\u3067\u306f\u5f37\u3044\u4e00\u8cab\u6027\u304c\u5fc5\u8981\u3067\u3057\u3087\u3046\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u9593\u3067\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3](http://snarfed.org/transactions_across_datacenters_io.html)\n\n## \u53ef\u7528\u6027\u30d1\u30bf\u30fc\u30f3\n\n\u9ad8\u3044\u53ef\u7528\u6027\u3092\u62c5\u4fdd\u3059\u308b\u306b\u306f\u4e3b\u306b\u6b21\u306e\u4e8c\u3064\u306e\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u308a\u307e\u3059: **\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc** \u3068 **\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3** \u3067\u3059\u3002\n\n### \u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\n\n#### \u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30d1\u30c3\u30b7\u30d6\n\n\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30d1\u30c3\u30b7\u30d6\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u306b\u304a\u3044\u3066\u306f\u3001\u5468\u671f\u4fe1\u53f7\u306f\u30a2\u30af\u30c6\u30a3\u30d6\u3082\u3057\u304f\u306f\u30b9\u30bf\u30f3\u30d0\u30a4\u4e2d\u306e\u30d1\u30c3\u30b7\u30d6\u306a\u30b5\u30fc\u30d0\u30fc\u306b\u9001\u3089\u308c\u307e\u3059\u3002\u5468\u671f\u4fe1\u53f7\u304c\u4e2d\u65ad\u3055\u308c\u305f\u6642\u306b\u306f\u3001\u30d1\u30c3\u30b7\u30d6\u3060\u3063\u305f\u30b5\u30fc\u30d0\u30fc\u304c\u30a2\u30af\u30c6\u30a3\u30d6\u30b5\u30fc\u30d0\u30fc\u306eIP\u30a2\u30c9\u30ec\u30b9\u3092\u5f15\u304d\u7d99\u3044\u3067\u30b5\u30fc\u30d3\u30b9\u3092\u518d\u958b\u3057\u307e\u3059\u3002\n\n\u8d77\u52d5\u307e\u3067\u306e\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u306f\u30d1\u30c3\u30b7\u30d6\u30b5\u30fc\u30d0\u30fc\u304c\u300c\u30db\u30c3\u30c8\u300d\u306a\u30b9\u30bf\u30f3\u30d0\u30a4\u72b6\u614b\u306b\u3042\u308b\u304b\u3001\u300c\u30b3\u30fc\u30eb\u30c9\u300d\u306a\u30b9\u30bf\u30f3\u30d0\u30a4\u72b6\u614b\u306b\u3042\u308b\u304b\u3067\u5909\u308f\u308a\u307e\u3059\u3002\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30b5\u30fc\u30d0\u30fc\u306e\u307f\u304c\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u634c\u304d\u307e\u3059\u3002\n\n\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30d1\u30c3\u30b7\u30d6\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u306f\u30de\u30b9\u30bf\u30fc\u30fb\u30b9\u30ec\u30fc\u30d6\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\n\n#### \u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30a2\u30af\u30c6\u30a3\u30d6\n\n\u30a2\u30af\u30c6\u30a3\u30d6\u30a2\u30af\u30c6\u30a3\u30d6\u69cb\u6210\u3067\u306f\u4e21\u65b9\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u634c\u304f\u3053\u3068\u3067\u8ca0\u8377\u3092\u5206\u6563\u3057\u307e\u3059\u3002\n\n\u3053\u308c\u3089\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u30d1\u30d6\u30ea\u30c3\u30af\u306a\u3082\u306e\u306e\u5834\u5408\u3001DNS\u306f\u4e21\u65b9\u306e\u30b5\u30fc\u30d0\u30fc\u306e\u30d1\u30d6\u30ea\u30c3\u30afIP\u3092\u77e5\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3082\u3057\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306a\u3082\u306e\u306a\u5834\u5408\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u304c\u4e21\u65b9\u306e\u30b5\u30fc\u30d0\u30fc\u306e\u60c5\u5831\u306b\u3064\u3044\u3066\u77e5\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u306f\u30de\u30b9\u30bf\u30fc\u30fb\u30de\u30b9\u30bf\u30fc\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\n\n### \u77ed\u6240: \u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\n\n* \u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u3067\u306f\u3088\u308a\u591a\u304f\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u8981\u3057\u3001\u8907\u96d1\u3055\u304c\u5897\u3057\u307e\u3059\u3002\n* \u6700\u65b0\u306e\u66f8\u304d\u8fbc\u307f\u304c\u30d1\u30c3\u30b7\u30d6\u30b5\u30fc\u30d0\u30fc\u306b\u8907\u88fd\u3055\u308c\u308b\u524d\u306b\u30a2\u30af\u30c6\u30a3\u30d6\u304c\u843d\u3061\u308b\u3068\u3001\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u8d77\u304d\u308b\u6f5c\u5728\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n#### \u30de\u30b9\u30bf\u30fc\u30fb\u30b9\u30ec\u30fc\u30d6\u3000\u3068\u3000\u30de\u30b9\u30bf\u30fc\u30fb\u30de\u30b9\u30bf\u30fc\n\n\u3053\u306e\u30c8\u30d4\u30c3\u30af\u306f [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9) \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u304a\u3044\u3066\u3088\u308a\u8a73\u7d30\u306b\u89e3\u8aac\u3055\u308c\u3066\u3044\u307e\u3059:\n\n* [\u30de\u30b9\u30bf\u30fc\u30fb\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n* [\u30de\u30b9\u30bf\u30fc\u30fb\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n\n## \u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u30b7\u30b9\u30c6\u30e0\n\n<p align=\"center\">\n  <img src=\"images/IOyLj4i.jpg\">\n  <br/>\n  <i><a href=http://www.slideshare.net/srikrupa5/dns-security-presentation-issa>Source: DNS security presentation</a></i>\n</p>\n\n\u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u30b7\u30b9\u30c6\u30e0 (DNS) \u306f www.example.com \u306a\u3069\u306e\u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u3092IP\u30a2\u30c9\u30ec\u30b9\u3078\u3068\u7ffb\u8a33\u3057\u307e\u3059\u3002\n\nDNS\u306f\u5c11\u6570\u306e\u30aa\u30fc\u30bd\u30e9\u30a4\u30ba\u3055\u308c\u305f\u30b5\u30fc\u30d0\u30fc\u304c\u4e0a\u4f4d\u306b\u4f4d\u7f6e\u3059\u308b\u968e\u5c64\u7684\u69cb\u9020\u3067\u3059\u3002\u3042\u306a\u305f\u306e\u30eb\u30fc\u30bf\u30fc\u3082\u3057\u304f\u306fISP\u306f\u691c\u7d22\u3092\u3059\u308b\u969b\u306b\u3069\u306eDNS\u30b5\u30fc\u30d0\u30fc\u306b\u63a5\u7d9a\u3059\u308b\u304b\u3068\u3044\u3046\u60c5\u5831\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u4f4e\u3044\u968e\u5c64\u306eDNS\u30b5\u30fc\u30d0\u30fc\u306f\u305d\u306e\u7d4c\u8def\u30de\u30c3\u30d7\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002\u305f\u3060\u3001\u3053\u306e\u60c5\u5831\u306f\u4f1d\u642c\u9045\u5ef6\u306b\u3088\u3063\u3066\u9673\u8150\u5316\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002DNS\u306e\u7d50\u679c\u306f\u3042\u306a\u305f\u306e\u30d6\u30e9\u30a6\u30b6\u3082\u3057\u304f\u306fOS\u306b\u4e00\u5b9a\u671f\u9593\uff08[time to live (TTL)](https://en.wikipedia.org/wiki/Time_to_live)\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u671f\u9593\uff09\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002\n\n* **NS record (name server)** - \u3042\u306a\u305f\u306e\u30c9\u30e1\u30a4\u30f3\u30fb\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u3067\u306eDNS\u30b5\u30fc\u30d0\u30fc\u3092\u7279\u5b9a\u3057\u307e\u3059\u3002\n* **MX record (mail exchange)** - \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308b\u30e1\u30fc\u30eb\u30b5\u30fc\u30d0\u30fc\u3092\u7279\u5b9a\u3057\u307e\u3059\u3002\n* **A record (address)** - IP\u30a2\u30c9\u30ec\u30b9\u306b\u540d\u524d\u3092\u3064\u3051\u307e\u3059\u3002\n* **CNAME (canonical)** - \u4ed6\u306e\u540d\u524d\u3082\u3057\u304f\u306f\u3000`CNAME` (example.com \u3092 www.example.com) \u3082\u3057\u304f\u306f `A` record\u3078\u3068\u540d\u524d\u3092\u6307\u3057\u793a\u3059\u3002\n\n[CloudFlare](https://www.cloudflare.com/dns/) \u3084 [Route 53](https://aws.amazon.com/route53/) \u306a\u3069\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u30de\u30cd\u30fc\u30b8\u30c9DNS\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u3044\u304f\u3064\u304b\u306eDNS\u30b5\u30fc\u30d3\u30b9\u3067\u306f\u69d8\u3005\u306a\u624b\u6cd5\u3092\u4f7f\u3063\u3066\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u634c\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059:\n\n* [\u52a0\u91cd\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3](http://g33kinfo.com/info/archives/2657)\n    * \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u304c\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u4e2d\u306e\u30b5\u30fc\u30d0\u30fc\u306b\u884c\u304f\u306e\u3092\u9632\u304e\u307e\u3059\n    * \u69d8\u3005\u306a\u30af\u30e9\u30b9\u30bf\u30fc\u30b5\u30a4\u30ba\u306b\u5fdc\u3058\u3066\u8abf\u6574\u3057\u307e\u3059\n    * A/B \u30c6\u30b9\u30c8\n* \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u30d9\u30fc\u30b9\n* \u5730\u7406\u30d9\u30fc\u30b9\n\n### \u6b20\u70b9: DNS\n\n* \u4e0a\u8a18\u3067\u793a\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306b\u3088\u3063\u3066\u7de9\u548c\u3055\u308c\u3066\u3044\u308b\u3068\u306f\u3044\u3048\u3001DNS\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u63a5\u7d9a\u306b\u306f\u5c11\u3057\u9045\u5ef6\u304c\u751f\u3058\u308b\u3002\n* DNS\u30b5\u30fc\u30d0\u30fc\u306f\u3001[\u653f\u5e9c\u3001ISP\u4f01\u696d,\u305d\u3057\u3066\u5927\u4f01\u696d](http://superuser.com/questions/472695/who-controls-the-dns-servers/472729)\u306b\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u304c\u3001\u305d\u308c\u3089\u306e\u7ba1\u7406\u306f\u8907\u96d1\u3067\u3042\u308b\u3002\n* DNS\u30b5\u30fc\u30d3\u30b9\u306f[DDoS attack](http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/)\u306e\u4f8b\u3067\u3001IP\u30a2\u30c9\u30ec\u30b9\u306a\u3057\u306b\u30e6\u30fc\u30b6\u30fc\u304cTwitter\u306a\u3069\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u3088\u3046\u306b\u3001\u653b\u6483\u3092\u53d7\u3051\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [DNS \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx)\n* [Wikipedia](https://en.wikipedia.org/wiki/Domain_Name_System)\n* [DNS \u8a18\u4e8b](https://support.dnsimple.com/categories/dns/)\n\n## \u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(Content delivery network)\n\n<p align=\"center\">\n  <img src=\"images/h9TAuGI.jpg\">\n  <br/>\n  <i><a href=https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/>Source: Why use a CDN</a></i>\n</p>\n\n\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(CDN)\u306f\u4e16\u754c\u4e2d\u306b\u914d\u7f6e\u3055\u308c\u305f\u30d7\u30ed\u30ad\u30b7\u30b5\u30fc\u30d0\u30fc\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u30e6\u30fc\u30b6\u30fc\u306b\u4e00\u756a\u5730\u7406\u7684\u306b\u8fd1\u3044\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u914d\u4fe1\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u306e\u3053\u3068\u3067\u3059\u3002Amazon\u306eCloudFront\u306a\u3069\u306f\u4f8b\u5916\u7684\u306b\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u306a\u30b3\u30f3\u30c6\u30f3\u30c4\u3082\u914d\u4fe1\u3057\u307e\u3059\u304c\u3001\u4e00\u822c\u7684\u306b\u3001HTML/CSS/JS\u3001\u5199\u771f\u3001\u305d\u3057\u3066\u52d5\u753b\u306a\u3069\u306e\u9759\u7684\u30d5\u30a1\u30a4\u30eb\u304cCDN\u3092\u901a\u3058\u3066\u914d\u4fe1\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u30b5\u30a4\u30c8\u306eDNS\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u3069\u306e\u30b5\u30fc\u30d0\u30fc\u3068\u4ea4\u4fe1\u3059\u308b\u304b\u3068\u3044\u3046\u60c5\u5831\u3092\u4f1d\u3048\u307e\u3059\u3002\n\nCDN\u3092\u7528\u3044\u3066\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u914d\u4fe1\u3059\u308b\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u4e8c\u3064\u306e\u7406\u7531\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u5287\u7684\u306b\u5411\u4e0a\u3057\u307e\u3059:\n\n* \u30e6\u30fc\u30b6\u30fc\u306f\u8fd1\u304f\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u304b\u3089\u53d7\u4fe1\u3067\u304d\u308b\n* \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b5\u30fc\u30d0\u30fc\u306fCDN\u304c\u51e6\u7406\u3057\u3066\u304f\u308c\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u95a2\u3057\u3066\u306f\u51e6\u7406\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\n\n### \u30d7\u30c3\u30b7\u30e5CDN\n\n\u30d7\u30c3\u30b7\u30e5CDN\u3067\u306f\u30b5\u30fc\u30d0\u30fc\u30c7\u30fc\u30bf\u306b\u66f4\u65b0\u304c\u3042\u3063\u305f\u6642\u306b\u306f\u5fc5\u305a\u3001\u65b0\u3057\u3044\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u53d7\u3051\u53d6\u308b\u65b9\u5f0f\u3067\u3059\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7528\u610f\u3057\u3001CDN\u306b\u76f4\u63a5\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3001URL\u3092CDN\u3092\u6307\u3059\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u3001\u5168\u3066\u81ea\u5206\u3067\u8cac\u4efb\u3092\u8ca0\u3046\u5f62\u3067\u3059\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u3044\u3064\u671f\u9650\u5207\u308c\u306b\u306a\u308b\u306e\u304b\u66f4\u65b0\u3055\u308c\u308b\u306e\u304b\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u65b0\u898f\u4f5c\u6210\u6642\u3001\u66f4\u65b0\u6642\u306e\u307f\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3053\u3068\u3067\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306f\u6700\u5c0f\u5316\u3055\u308c\u308b\u4e00\u65b9\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u306f\u6700\u5927\u9650\u6d88\u8cbb\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u5c11\u306a\u3044\u3001\u3082\u3057\u304f\u306f\u983b\u7e41\u306b\u306f\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u66f4\u65b0\u3055\u308c\u306a\u3044\u30b5\u30a4\u30c8\u306e\u5834\u5408\u306b\u306f\u30d7\u30c3\u30b7\u30e5CDN\u3068\u76f8\u6027\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u5b9a\u671f\u7684\u306b\u518d\u3073\u30d7\u30eb\u3055\u308c\u308b\u306e\u3067\u306f\u306a\u304f\u3001CDN\u306b\u4e00\u5ea6\u306e\u307f\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002\n\n### \u30d7\u30ebCDN\n\n\u30d7\u30ebCDN\u3067\u306f\u4e00\u4eba\u76ee\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u305f\u6642\u306b\u3001\u65b0\u3057\u3044\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30b5\u30fc\u30d3\u30b9\u306e\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u53d6\u5f97\u3057\u307e\u3059\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u81ea\u5206\u306e\u30b5\u30fc\u30d0\u30fc\u306b\u4fdd\u5b58\u3057\u3066\u3001CDN\u3092\u6307\u3059URL\u3092\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\u7d50\u679c\u3068\u3057\u3066\u3001CDN\u306b\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u308b\u307e\u3067\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u51e6\u7406\u304c\u9045\u304f\u306a\u308a\u307e\u3059\u3002\n\n[time-to-live (TTL)](https://en.wikipedia.org/wiki/Time_to_live) \u306f\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u3069\u308c\u3060\u3051\u306e\u671f\u9593\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u308b\u304b\u3092\u898f\u5b9a\u3057\u307e\u3059\u3002\u30d7\u30ebCDN\u306fCDN \u4e0a\u3067\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30b9\u30da\u30fc\u30b9\u3092\u6700\u5c0f\u5316\u3057\u307e\u3059\u304c\u3001\u6709\u52b9\u671f\u9650\u304c\u5207\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u66f4\u65b0\u524d\u306b\u30d7\u30eb\u3055\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u3067\u5197\u9577\u306a\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306b\u7e4b\u304c\u3063\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u5927\u898f\u6a21\u306a\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u3042\u308b\u30b5\u30a4\u30c8\u3067\u306f\u30d7\u30ebCDN\u304c\u76f8\u6027\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u5927\u90e8\u5206\u306f\u6700\u8fd1\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u3001CDN\u306b\u6b8b\u3063\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30f3\u30c4\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3082\u306e\u3067\u3042\u308b\u3053\u3068\u304c\u591a\u3044\u304b\u3089\u3067\u3059\u3002\n\n### \u6b20\u70b9: CDN\n\n* CDN\u306e\u30b3\u30b9\u30c8\u306f\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u91cf\u306b\u3088\u3063\u3066\u5909\u308f\u308a\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001CDN\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u306e\u30b3\u30b9\u30c8\u3068\u6bd4\u8f03\u3059\u308b\u3079\u304d\u3067\u3057\u3087\u3046\u3002\n* TTL\u304c\u5207\u308c\u308b\u524d\u306b\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u66f4\u65b0\u3055\u308c\u308b\u3068\u9673\u8150\u5316\u3059\u308b\u6050\u308c\u304c\u3042\u308a\u307e\u3059\u3002\n* CDN\u3067\u306f\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u304cCDN\u3092\u6307\u3059\u3088\u3046\u306bURL\u3092\u66f4\u65b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u5206\u6563\u3055\u308c\u305f\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af](http://repository.cmu.edu/cgi/viewcontent.cgi?article=2112&context=compsci)\n* [\u30d7\u30c3\u30b7\u30e5CDN\u3068\u30d7\u30ebCDN\u306e\u9055\u3044](http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/)\n* [Wikipedia](https://en.wikipedia.org/wiki/Content_delivery_network)\n\n## \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\n\n<p align=\"center\">\n  <img src=\"images/h81n9iK.png\">\n  <br/>\n  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Source: Scalable system design patterns</a></i>\n</p>\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u5165\u529b\u3055\u308c\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u3068\u5206\u6563\u3055\u305b\u308b\u3002\u3069\u306e\u30b1\u30fc\u30b9\u3067\u3082\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30b5\u30fc\u30d0\u30fc\u7b49\u8a08\u7b97\u30ea\u30bd\u30fc\u30b9\u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u9069\u5207\u306a\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3059\u3002\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u4ee5\u4e0b\u306e\u3053\u3068\u306b\u52b9\u679c\u7684\u3067\u3059:\n\n* \u30ea\u30af\u30a8\u30b9\u30c8\u304c\u72b6\u614b\u306e\u826f\u304f\u306a\u3044\u30b5\u30fc\u30d0\u30fc\u306b\u884c\u304f\u306e\u3092\u9632\u3050\n* \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u904e\u5270\u306b\u9001\u308b\u306e\u3092\u9632\u3050\n* \u7279\u5b9a\u7b87\u6240\u306e\u6b20\u9665\u3067\u30b5\u30fc\u30d3\u30b9\u304c\u843d\u3061\u308b\u3053\u3068\u3092\u9632\u3050\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f (\u8cbb\u7528\u306e\u9ad8\u3044) \u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3082\u3057\u304f\u306fHAProxy\u306a\u3069\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3067\u5b9f\u73fe\u3067\u304d\u308b\u3002\n\n\u4ed6\u306e\u5229\u70b9\u3068\u3057\u3066\u306f:\n\n* **SSL termination** - \u5165\u529b\u3055\u308c\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u89e3\u8aad\u3059\u308b\u3001\u307e\u305f\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u6697\u53f7\u5316\u3059\u308b\u3053\u3068\u3067\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u3053\u306e\u30b3\u30b9\u30c8\u304c\u9ad8\u304f\u3064\u304d\u304c\u3061\u306a\u51e6\u7406\u3092\u8acb\u3051\u8ca0\u308f\u306a\u304f\u3066\u3044\u3044\u3088\u3046\u306b\u80a9\u4ee3\u308f\u308a\u3057\u307e\u3059\u3002\n    * [X.509 certificates](https://en.wikipedia.org/wiki/X.509) \u3092\u305d\u308c\u305e\u308c\u306e\u30b5\u30fc\u30d0\u30fc\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u3092\u306a\u304f\u3057\u307e\u3059\n* **\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406** - \u30af\u30c3\u30ad\u30fc\u3092\u53d6\u308a\u6271\u3046\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u304c\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u4fdd\u6301\u3057\u3066\u3044\u306a\u3044\u6642\u306a\u3069\u306b\u3001\u7279\u5b9a\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u540c\u3058\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3078\u3068\u6d41\u3057\u307e\u3059\u3002\n\n\u969c\u5bb3\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306b\u3001[\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30d1\u30c3\u30b7\u30d6](#\u30a2\u30af\u30c6\u30a3\u30d6\u30d1\u30c3\u30b7\u30d6) \u3082\u3057\u304f\u306f [\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30a2\u30af\u30c6\u30a3\u30d6](#\u30a2\u30af\u30c6\u30a3\u30d6\u30a2\u30af\u30c6\u30a3\u30d6) \u30e2\u30fc\u30c9\u306e\u3069\u3061\u3089\u306b\u304a\u3044\u3066\u3082\u3001\u8907\u6570\u306e\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u914d\u7f6e\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7a2e\u3005\u306e\u30e1\u30c8\u30ea\u30c3\u30af\u3092\u7528\u3044\u3066\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059:\n\n* \u30e9\u30f3\u30c0\u30e0\n* Least loaded\n* \u30bb\u30c3\u30b7\u30e7\u30f3/\u30af\u30c3\u30ad\u30fc\n* [\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3\u3082\u3057\u304f\u306f\u52a0\u91cd\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3](http://g33kinfo.com/info/archives/2657)\n* [Layer 4](#layer-4-\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0)\n* [Layer 7](#layer-7-\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0)\n\n### Layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\n\nLayer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f [\u30c8\u30e9\u30f3\u30b9\u30dd\u30fc\u30c8\u30ec\u30a4\u30e4\u30fc](#\u901a\u4fe1) \u3092\u53c2\u7167\u3057\u3066\u3069\u306e\u3088\u3046\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u914d\u5206\u3059\u308b\u304b\u5224\u65ad\u3057\u307e\u3059\u3002\u4e00\u822c\u7684\u306b\u3001\u30c8\u30e9\u30f3\u30b9\u30dd\u30fc\u30c8\u30ec\u30a4\u30e4\u30fc\u3068\u3057\u3066\u306f\u3001\u30bd\u30fc\u30b9\u3001\u9001\u4fe1\u5148IP\u30a2\u30c9\u30ec\u30b9\u3001\u30d8\u30c3\u30c0\u30fc\u306b\u8a18\u8ff0\u3055\u308c\u305f\u30dd\u30fc\u30c8\u756a\u53f7\u304c\u542b\u307e\u308c\u307e\u3059\u304c\u3001\u30d1\u30b1\u30c3\u30c8\u306e\u4e2d\u8eab\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u542b\u307f\u307e\u305b\u3093\u3002 Layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30d1\u30b1\u30c3\u30c8\u3092\u4e0a\u6d41\u30b5\u30fc\u30d0\u30fc\u3078\u5c4a\u3051\u3001\u4e0a\u6d41\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u914d\u4fe1\u3059\u308b\u3053\u3068\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a2\u30c9\u30ec\u30b9\u5909\u63db [Network Address Translation (NAT)](https://www.nginx.com/resources/glossary/layer-4-load-balancing/) \u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002\n\n### Layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\n\nLayer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc](#\u901a\u4fe1) \u3092\u53c2\u7167\u3057\u3066\u3069\u306e\u3088\u3046\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u914d\u5206\u3059\u308b\u304b\u5224\u65ad\u3057\u307e\u3059\u3002\u30d8\u30c3\u30c0\u30fc\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3001\u30af\u30c3\u30ad\u30fc\u306a\u3069\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u3053\u3068\u3067\u3059\u3002Layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u7d42\u7aef\u3092\u53d7\u3051\u6301\u3061 \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8aad\u307f\u8fbc\u307f\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u306e\u5224\u65ad\u3092\u3057\u3001\u9078\u629e\u3057\u305f\u30b5\u30fc\u30d0\u30fc\u3068\u306e\u63a5\u7d9a\u3092\u7e4b\u304e\u307e\u3059\u3002\u4f8b\u3048\u3070 layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u52d5\u753b\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u76f4\u63a5\u3001\u305d\u306e\u30c7\u30fc\u30bf\u3092\u30db\u30b9\u30c8\u3057\u3066\u3044\u308b\u30b5\u30fc\u30d0\u30fc\u306b\u3064\u306a\u3050\u3068\u540c\u6642\u306b\u3001\u6c7a\u6e08\u51e6\u7406\u306a\u3069\u306e\u3088\u308a\u7e4a\u7d30\u306a\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316\u3055\u308c\u305f\u30b5\u30fc\u30d0\u30fc\u306b\u6d41\u3059\u3068\u3044\u3046\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n\u67d4\u8edf\u6027\u3068\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306b\u306a\u308a\u307e\u3059\u304c\u3001 layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3067\u306fLayer 7\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3088\u308a\u3082\u6240\u8981\u6642\u9593\u3001\u8a08\u7b97\u30ea\u30bd\u30fc\u30b9\u3092\u5c11\u306a\u304f\u6e08\u307e\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u6628\u4eca\u306e\u6c4e\u7528\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3067\u306f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306f\u6700\u5c0f\u9650\u306e\u307f\u3057\u304b\u767a\u63ee\u3067\u304d\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3067\u306f\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306b\u3088\u3063\u3066\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3068\u53ef\u7528\u6027\u3092\u5411\u4e0a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u624b\u9803\u306a\u6c4e\u7528\u30de\u30b7\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3055\u305b\u308b\u65b9\u304c\u3001\u4e00\u3064\u306e\u30b5\u30fc\u30d0\u30fc\u3092\u3088\u308a\u9ad8\u4fa1\u306a\u30de\u30b7\u30f3\u306b\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u3059\u308b\uff08**\u5782\u76f4\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0**\uff09\u3088\u308a\u8cbb\u7528\u5bfe\u52b9\u679c\u3082\u9ad8\u304f\u306a\u308a\u3001\u7d50\u679c\u7684\u306b\u53ef\u7528\u6027\u3082\u9ad8\u304f\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u6c4e\u7528\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u6271\u3048\u308b\u4eba\u6750\u3092\u96c7\u3046\u65b9\u304c\u3001\u7279\u5316\u578b\u306e\u5546\u7528\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u6271\u3048\u308b\u4eba\u6750\u3092\u96c7\u3046\u3088\u308a\u3082\u7c21\u5358\u3067\u3057\u3087\u3046\u3002\n\n#### \u6b20\u70b9: \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n\n* \u6c34\u5e73\u7684\u306b\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3057\u3066\u3044\u304f\u3068\u3001\u8907\u96d1\u3055\u304c\u5897\u3059\u4e0a\u306b\u3001\u30b5\u30fc\u30d0\u30fc\u306e\u30af\u30ed\u30fc\u30cb\u30f3\u30b0\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\n    * \u30b5\u30fc\u30d0\u30fc\u306f\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b: \u30e6\u30fc\u30b6\u30fc\u306b\u95a2\u9023\u3059\u308b\u30bb\u30c3\u30b7\u30e7\u30f3\u3084\u3001\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u5199\u771f\u306a\u3069\u306e\u30c7\u30fc\u30bf\u3092\u6301\u3063\u3066\u306f\u3044\u3051\u306a\u3044\n    * \u30bb\u30c3\u30b7\u30e7\u30f3\u306f\u4e00\u5143\u7684\u306a[\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9) (SQL\u3001 NoSQL)\u306a\u3069\u306e\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306b\u30b9\u30c8\u30a2\u3055\u308c\u308b\u304b [\u30ad\u30e3\u30c3\u30b7\u30e5](#\u30ad\u30e3\u30c3\u30b7\u30e5) (Redis\u3001 Memcached)\u306b\u6b8b\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u4e0b\u6d41\u30b5\u30fc\u30d0\u30fc\u306f\u4e0a\u6d41\u30b5\u30fc\u30d0\u30fc\u304c\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3059\u308b\u306b\u3064\u308c\u3066\u3088\u308a\u591a\u304f\u306e\u540c\u6642\u63a5\u7d9a\u3092\u4fdd\u305f\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n### \u6b20\u70b9: \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\n\n* \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30ea\u30bd\u30fc\u30b9\u304c\u4e0d\u8db3\u3057\u3066\u3044\u305f\u308a\u3001\u8a2d\u5b9a\u304c\u9069\u5207\u3067\u306a\u3044\u5834\u5408\u3001\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u306e\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n* \u5358\u4e00\u969c\u5bb3\u70b9\u3092\u9664\u3053\u3046\u3068\u3057\u3066\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u5c0e\u5165\u3057\u305f\u7d50\u679c\u3001\u8907\u96d1\u3055\u304c\u5897\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n* \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u304c\u4e00\u3064\u3060\u3051\u3060\u3068\u305d\u3053\u304c\u5358\u4e00\u969c\u5bb3\u70b9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u4e00\u65b9\u3067\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u8907\u6570\u306b\u3059\u308b\u3068\u3001\u3055\u3089\u306b\u8907\u96d1\u3055\u304c\u5897\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [NGINX \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n* [HAProxy \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30ac\u30a4\u30c9](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n* [Wikipedia](https://en.wikipedia.org/wiki/Load_balancing_(computing))\n* [Layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0](https://www.nginx.com/resources/glossary/layer-4-load-balancing/)\n* [Layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0](https://www.nginx.com/resources/glossary/layer-7-load-balancing/)\n* [ELB listener config](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)\n\n## \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7(web\u30b5\u30fc\u30d0\u30fc)\n\n<p align=\"center\">\n  <img src=\"images/n41Azff.png\">\n  <br/>\n  <i><a href=https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg>Source: Wikipedia</a></i>\n  <br/>\n</p>\n\n\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u30b5\u30fc\u30d0\u30fc\u306f\u5185\u90e8\u30b5\u30fc\u30d3\u30b9\u3092\u307e\u3068\u3081\u3066\u5916\u90e8\u306b\u7d71\u4e00\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3067\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308b\u30b5\u30fc\u30d0\u30fc\u306b\u9001\u3089\u308c\u3066\u3001\u305d\u306e\u5f8c\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3057\u307e\u3059\u3002\n\n\u4ed6\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5229\u70b9\u304c\u3042\u308a\u307e\u3059:\n\n* **\u3088\u308a\u5805\u7262\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3** - \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b5\u30fc\u30d0\u30fc\u306e\u60c5\u5831\u3092\u96a0\u3057\u305f\u308a\u3001IP\u30a2\u30c9\u30ec\u30b9\u3092\u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8\u5316\u3057\u305f\u308a\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3054\u3068\u306e\u63a5\u7d9a\u6570\u3092\u5236\u9650\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002\n* **\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3084\u67d4\u8edf\u6027\u304c\u5897\u3057\u307e\u3059** - \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u306eIP\u3057\u304b\u898b\u306a\u3044\u306e\u3067\u3001\u88cf\u3067\u30b5\u30fc\u30d0\u30fc\u3092\u30b9\u30b1\u30fc\u30eb\u3057\u305f\u308a\u3001\u8a2d\u5b9a\u3092\u5909\u3048\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n* **SSL termination** - \u5165\u529b\u3055\u308c\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u89e3\u8aad\u3057\u3001\u30b5\u30fc\u30d0\u30fc\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u6697\u53f7\u5316\u3059\u308b\u3053\u3068\u3067\u30b5\u30fc\u30d0\u30fc\u304c\u3053\u306e\u30b3\u30b9\u30c8\u306e\u304b\u304b\u308a\u3046\u308b\u51e6\u7406\u3092\u3057\u306a\u304f\u3066\u6e08\u3080\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n    * [X.509 \u8a3c\u660e\u66f8](https://en.wikipedia.org/wiki/X.509) \u3092\u5404\u30b5\u30fc\u30d0\u30fc\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n* **\u5727\u7e2e** - \u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5727\u7e2e\u3067\u304d\u307e\u3059\n* **\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0** - \u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\n* **\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4** - \u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u76f4\u63a5\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n    * HTML/CSS/JS\n    * \u5199\u771f\n    * \u52d5\u753b\n    * \u306a\u3069\u306a\u3069\n\n### \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc vs \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\n\n* \u8907\u6570\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u3042\u308b\u6642\u306b\u306f\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u5f79\u306b\u7acb\u3064\u3067\u3057\u3087\u3046\u3002 \u3057\u3070\u3057\u3070\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u540c\u3058\u6a5f\u80fd\u3092\u679c\u305f\u3059\u30b5\u30fc\u30d0\u30fc\u7fa4\u3078\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u634c\u304d\u307e\u3059\u3002\n* \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3067\u306f\u3001\u4e0a\u8a18\u306b\u8ff0\u3079\u305f\u3088\u3046\u306a\u5229\u70b9\u3092\u3001\u5358\u4e00\u306e\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3084\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306b\u5bfe\u3057\u3066\u3082\u793a\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n* NGINX \u3084 HAProxy \u306a\u3069\u306e\u6280\u8853\u306flayer 7 \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3068\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u4e21\u65b9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n### \u6b20\u70b9: \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\n\n* \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3092\u5c0e\u5165\u3059\u308b\u3068\u30b7\u30b9\u30c6\u30e0\u306e\u8907\u96d1\u6027\u304c\u5897\u3057\u307e\u3059\u3002\n* \u5358\u4e00\u306e\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u306f\u5358\u4e00\u969c\u5bb3\u70b9\u306b\u306a\u308a\u3048\u307e\u3059\u3002\u4e00\u65b9\u3067\u3001\u8907\u6570\u306e\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3092\u5c0e\u5165\u3059\u308b\u3068(\u4f8b: [\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc](https://en.wikipedia.org/wiki/Failover)) \u8907\u96d1\u6027\u306f\u3088\u308a\u5897\u3057\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7 vs \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc](https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/)\n* [NGINX \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n* [HAProxy \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u30ac\u30a4\u30c9](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n* [Wikipedia](https://en.wikipedia.org/wiki/Reverse_proxy)\n\n## \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\n\n<p align=\"center\">\n  <img src=\"images/yB5SYwm.png\">\n  <br/>\n  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Source: Intro to architecting systems for scale</a></i>\n</p>\n\n\u30a6\u30a7\u30d6\u30ec\u30a4\u30e4\u30fc\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64 (\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5c64\u3068\u3082\u8a00\u308f\u308c\u308b) \u3068\u5206\u96e2\u3059\u308b\u3053\u3068\u3067\u305d\u308c\u305e\u308c\u306e\u5c64\u3092\u72ec\u7acb\u306b\u30b9\u30b1\u30fc\u30eb\u3001\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u65b0\u3057\u3044API\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306b\u8ffd\u52a0\u3059\u308b\u969b\u306b\u3001\u4e0d\u5fc5\u8981\u306b\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n **\u5358\u4e00\u8cac\u4efb\u306e\u539f\u5247** \u3067\u306f\u3001\u5c0f\u3055\u3044\u81ea\u5f8b\u7684\u306a\u30b5\u30fc\u30d3\u30b9\u304c\u5354\u8abf\u3057\u3066\u52d5\u304f\u3088\u3046\u306b\u63d0\u5531\u3057\u3066\u3044\u307e\u3059\u3002\u5c0f\u3055\u3044\u30b5\u30fc\u30d3\u30b9\u306e\u5c0f\u3055\u3044\u30c1\u30fc\u30e0\u304c\u6025\u6210\u9577\u306e\u305f\u3081\u306b\u3088\u308a\u7a4d\u6975\u7684\u306a\u8a08\u753b\u3092\u7acb\u3066\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306f[\u975e\u540c\u671f\u51e6\u7406](#\u975e\u540c\u671f\u51e6\u7406)\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n### \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\n\n\u72ec\u7acb\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3001\u5c0f\u898f\u6a21\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u69d8\u5f0f\u3067\u3042\u308b[\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9](https://en.wikipedia.org/wiki/Microservices)\u3082\u3053\u306e\u8b70\u8ad6\u306b\u95a2\u4fc2\u3057\u3066\u304f\u308b\u6280\u8853\u3067\u3057\u3087\u3046\u3002\u305d\u308c\u305e\u308c\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u72ec\u81ea\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u51e6\u7406\u3057\u3001\u660e\u78ba\u3067\u8efd\u91cf\u306a\u30e1\u30ab\u30cb\u30ba\u30e0\u3067\u901a\u4fe1\u3057\u3066\u3001\u305d\u306e\u76ee\u7684\u3068\u3059\u308b\u6a5f\u80fd\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002<sup><a href=https://smartbear.com/learn/api-design/what-are-microservices>1</a></sup>\n\n\u4f8b\u3048\u3070Pinterest\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306b\u5206\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u3001\u30d5\u30a9\u30ed\u30ef\u30fc\u3001\u30d5\u30a3\u30fc\u30c9\u3001\u691c\u7d22\u3001\u5199\u771f\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306a\u3069\u3067\u3059\u3002\n\n### \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u30fc\n\n[Consul](https://www.consul.io/docs/index.html)\u3001 [Etcd](https://coreos.com/etcd/docs/latest)\u3001 [Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) \u306a\u3069\u306e\u30b7\u30b9\u30c6\u30e0\u3067\u306f\u3001\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u540d\u524d\u3001\u30a2\u30c9\u30ec\u30b9\u3001\u30dd\u30fc\u30c8\u306e\u60c5\u5831\u3092\u76e3\u8996\u3059\u308b\u3053\u3068\u3067\u3001\u30b5\u30fc\u30d3\u30b9\u540c\u58eb\u304c\u4e92\u3044\u3092\u898b\u3064\u3051\u3084\u3059\u304f\u3057\u3066\u3044\u307e\u3059\u3002\u30b5\u30fc\u30d3\u30b9\u306e\u5b8c\u5168\u6027\u306e\u78ba\u8a8d\u306b\u306f [Health checks](https://www.consul.io/intro/getting-started/checks.html) \u304c\u4fbf\u5229\u3067\u3001\u3053\u308c\u306b\u306f [HTTP](#hypertext-transfer-protocol-http) \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3002 Consul \u3068 Etcd \u306e\u3044\u305a\u308c\u3082\u7d44\u307f\u8fbc\u307f\u306e [key-value store](#\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2) \u3092\u6301\u3063\u3066\u304a\u308a\u3001\u8a2d\u5b9a\u30c7\u30fc\u30bf\u3084\u5171\u6709\u30c7\u30fc\u30bf\u306a\u3069\u306e\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\n\n### \u6b20\u70b9: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\n\n* \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3001\u904b\u7528\u3001\u305d\u3057\u3066\u30d7\u30ed\u30bb\u30b9\u3092\u8003\u616e\u3059\u308b\u3068\u3001\u7de9\u304f\u7d50\u3073\u4ed8\u3051\u3089\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\u3001\u30e2\u30ce\u30ea\u30b7\u30c3\u30af\u306a\u30b7\u30b9\u30c6\u30e0\u3068\u306f\u7570\u306a\u308b\u30a2\u30d7\u30ed\u30fc\u30c1\u304c\u5fc5\u8981\u3067\u3059\u3002\n* \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306f\u30c7\u30d7\u30ed\u30a4\u3068\u904b\u7528\u306e\u70b9\u304b\u3089\u898b\u308b\u3068\u8907\u96d1\u6027\u304c\u5897\u3059\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u8a2d\u8a08\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30c8\u30ed](http://lethain.com/introduction-to-architecting-systems-for-scale)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30a4\u30f3\u30bf\u30d3\u30e5\u30fc\u3092\u7d10\u89e3\u304f](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n* [\u30b5\u30fc\u30d3\u30b9\u6307\u5411\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://en.wikipedia.org/wiki/Service-oriented_architecture)\n* [Zookeeper\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper)\n* [\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u305f\u3081\u306b\u77e5\u3063\u3066\u304a\u304d\u305f\u3044\u3053\u3068](https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/)\n\n## \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\n<p align=\"center\">\n  <img src=\"images/Xkm5CXz.png\">\n  <br/>\n  <i><a href=https://www.youtube.com/watch?v=w95murBkYmU>Source: Scaling up to your first 10 million users</a></i>\n</p>\n\n### \u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0 (RDBMS)\n\nSQL\u306a\u3069\u306e\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u30c6\u30fc\u30d6\u30eb\u306b\u6574\u7406\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u96c6\u5408\u3067\u3042\u308b\u3002\n\n**ACID** \u306f\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u304a\u3051\u308b[\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3](https://en.wikipedia.org/wiki/Database_transaction)\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u96c6\u5408\u3067\u3042\u308b\n\n* **\u4e0d\u53ef\u5206\u6027** - \u305d\u308c\u305e\u308c\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u3042\u308b\u304b\u306a\u3044\u304b\u306e\u3044\u305a\u308c\u304b\u3067\u3042\u308b\n* **\u4e00\u8cab\u6027** - \u3069\u3093\u306a\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3082\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u3042\u308b\u78ba\u304b\u306a\u72b6\u614b\u304b\u3089\u6b21\u306e\u72b6\u614b\u306b\u9077\u79fb\u3055\u305b\u308b\u3002\n* **\u72ec\u7acb\u6027** - \u540c\u6642\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u306f\u3001\u9023\u7d9a\u7684\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b\u306e\u3068\u540c\u3058\u7d50\u679c\u3092\u3082\u305f\u3089\u3059\u3002\n* **\u6c38\u7d9a\u6027** - \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u51e6\u7406\u3055\u308c\u305f\u3089\u3001\u305d\u306e\u3088\u3046\u306b\u4fdd\u5b58\u3055\u308c\u308b\n\n\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30b9\u30b1\u30fc\u30eb\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u305f\u304f\u3055\u3093\u306e\u6280\u8853\u304c\u3042\u308b: **\u30de\u30b9\u30bf\u30fc\u30fb\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3**\u3001 **\u30de\u30b9\u30bf\u30fc\u30fb\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3**\u3001 **federation**\u3001 **\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0**\u3001 **\u975e\u6b63\u898f\u5316**\u3001 \u305d\u3057\u3066 **SQL \u30c1\u30e5\u30fc\u30cb\u30f3\u30b0**\n\n#### \u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n\u30de\u30b9\u30bf\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u8aad\u307f\u53d6\u308a\u3068\u66f8\u304d\u8fbc\u307f\u3092\u51e6\u7406\u3057\u3001\u66f8\u304d\u8fbc\u307f\u3092\u4e00\u3064\u4ee5\u4e0a\u306e\u30b9\u30ec\u30fc\u30d6\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u8907\u88fd\u3057\u307e\u3059\u3002\u30b9\u30ec\u30fc\u30d6\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u8aad\u307f\u53d6\u308a\u306e\u307f\u3092\u51e6\u7406\u3057\u307e\u3059\u3002\u30b9\u30ec\u30fc\u30d6\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u6728\u69cb\u9020\u306e\u3088\u3046\u306b\u8ffd\u52a0\u306e\u30b9\u30ec\u30fc\u30d6\u306b\u30c7\u30fc\u30bf\u3092\u8907\u88fd\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30de\u30b9\u30bf\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u30aa\u30d5\u30e9\u30a4\u30f3\u306b\u306a\u3063\u305f\u5834\u5408\u306b\u306f\u3001\u3044\u305a\u308c\u304b\u306e\u30b9\u30ec\u30fc\u30d6\u304c\u30de\u30b9\u30bf\u30fc\u306b\u6607\u683c\u3059\u308b\u304b\u3001\u65b0\u3057\u3044\u30de\u30b9\u30bf\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u308b\u307e\u3067\u306f\u8aad\u307f\u53d6\u308a\u5c02\u7528\u30e2\u30fc\u30c9\u3067\u7a3c\u50cd\u3057\u307e\u3059\u3002\n\n<p align=\"center\">\n  <img src=\"images/C9ioGtn.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\n##### \u6b20\u70b9: \u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n* \u30b9\u30ec\u30fc\u30d6\u3092\u30de\u30b9\u30bf\u30fc\u306b\u6607\u683c\u3055\u305b\u308b\u306b\u306f\u8ffd\u52a0\u306e\u30ed\u30b8\u30c3\u30af\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\n* \u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3001\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e **\u4e21\u65b9** \u306e\u6b20\u70b9\u306f[\u6b20\u70b9: \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u6b20\u70b9-\u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\u3092\u53c2\u7167\n\n#### \u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n\u3044\u305a\u308c\u306e\u30de\u30b9\u30bf\u30fc\u3082\u8aad\u307f\u53d6\u308a\u66f8\u304d\u8fbc\u307f\u306e\u4e21\u65b9\u306b\u5bfe\u5fdc\u3059\u308b\u3002\u66f8\u304d\u8fbc\u307f\u306b\u95a2\u3057\u3066\u306f\u305d\u308c\u305e\u308c\u5354\u8abf\u3059\u308b\u3002\u3044\u305a\u308c\u304b\u306e\u30de\u30b9\u30bf\u30fc\u304c\u843d\u3061\u3066\u3082\u3001\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u3068\u3057\u3066\u306f\u8aad\u307f\u66f8\u304d\u4e21\u65b9\u306b\u5bfe\u5fdc\u3057\u305f\u307e\u307e\u904b\u7528\u3067\u304d\u308b\u3002\n\n<p align=\"center\">\n  <img src=\"images/krAHLGg.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\n##### \u6b20\u70b9: \u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n* \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u5c0e\u5165\u3059\u308b\u304b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3069\u3053\u306b\u66f8\u304d\u8fbc\u3080\u304b\u3092\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n* \u5927\u4f53\u306e\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc\u30b7\u30b9\u30c6\u30e0\u306f\u3001\u4e00\u8cab\u6027\u304c\u7de9\u3044\uff08ACID\u539f\u7406\u3092\u5b88\u3063\u3066\u3044\u306a\u3044\uff09\u3082\u3057\u304f\u306f\u3001\u540c\u671f\u3059\u308b\u6642\u9593\u304c\u304b\u304b\u308b\u305f\u3081\u306b\u66f8\u304d\u8fbc\u307f\u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u304c\u5897\u52a0\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u3002\n* \u66f8\u304d\u8fbc\u307f\u30ce\u30fc\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u3001\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u304c\u5897\u52a0\u3059\u308b\u306b\u3064\u308c\u66f8\u304d\u8fbc\u307f\u306e\u885d\u7a81\u306e\u53ef\u80fd\u6027\u304c\u5897\u3048\u308b\u3002\n* \u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3001\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e **\u4e21\u65b9** \u306e\u6b20\u70b9\u306f[\u6b20\u70b9: \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u6b20\u70b9-\u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3) \u3092\u53c2\u7167\n\n##### \u6b20\u70b9: \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n* \u65b0\u3057\u3044\u30c7\u30fc\u30bf\u66f8\u304d\u8fbc\u307f\u3092\u8907\u88fd\u3059\u308b\u524d\u306b\u30de\u30b9\u30bf\u30fc\u304c\u843d\u3061\u305f\u5834\u5408\u306b\u306f\u305d\u306e\u30c7\u30fc\u30bf\u304c\u5931\u308f\u308c\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n* \u66f8\u304d\u8fbc\u307f\u306f\u8aad\u307f\u53d6\u308a\u30ec\u30d7\u30ea\u30ab\u306b\u304a\u3044\u3066\u30ea\u30d7\u30ec\u30a4\u3055\u308c\u308b\u3002\u66f8\u304d\u8fbc\u307f\u304c\u591a\u3044\u5834\u5408\u3001\u8907\u88fd\u30ce\u30fc\u30c9\u304c\u66f8\u304d\u8fbc\u307f\u306e\u51e6\u7406\u306e\u307f\u3067\u884c\u304d\u8a70\u307e\u3063\u3066\u3001\u8aad\u307f\u53d6\u308a\u306e\u51e6\u7406\u3092\u6e80\u8db3\u306b\u884c\u3048\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n* \u8aad\u307f\u53d6\u308a\u30b9\u30ec\u30fc\u30d6\u30ce\u30fc\u30c9\u306e\u6570\u304c\u591a\u3051\u308c\u3070\u591a\u3044\u307b\u3069\u3001\u8907\u88fd\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u6570\u3082\u5897\u3048\u3001\u8907\u88fd\u6642\u9593\u304c\u4f38\u3073\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n* \u30b7\u30b9\u30c6\u30e0\u306b\u3088\u3063\u3066\u306f\u3001\u30de\u30b9\u30bf\u30fc\u3078\u306e\u66f8\u304d\u8fbc\u307f\u306f\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3067\u4e26\u5217\u51e6\u7406\u3067\u304d\u308b\u4e00\u65b9\u3001\u30b9\u30ec\u30fc\u30d6\u3078\u306e\u8907\u88fd\u306f\u5358\u4e00\u30b9\u30ec\u30c3\u30c9\u3067\u9023\u7d9a\u7684\u306b\u51e6\u7406\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n* \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u8ffd\u52a0\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304c\u5fc5\u8981\u306b\u306a\u308a\u3001\u8907\u96d1\u6027\u3082\u5897\u3057\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3001 \u53ef\u7528\u6027\u3001 \u30b9\u30bf\u30d3\u30ea\u30c6\u30a3 \u30d1\u30bf\u30fc\u30f3](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n* [\u30de\u30eb\u30c1\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](https://en.wikipedia.org/wiki/Multi-master_replication)\n\n#### Federation\n\n<p align=\"center\">\n  <img src=\"images/U3qV33e.png\">\n  <br/>\n  <i><a href=https://www.youtube.com/watch?v=w95murBkYmU>Source: Scaling up to your first 10 million users</a></i>\n</p>\n\n\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3 (\u3082\u3057\u304f\u306f\u6a5f\u80fd\u5206\u5272\u5316\u3068\u3082\u8a00\u3046) \u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u6a5f\u80fd\u3054\u3068\u306b\u5206\u5272\u3059\u308b\u3002\u4f8b\u3048\u3070\u3001\u30e2\u30ce\u30ea\u30b7\u30c3\u30af\u306a\u5358\u4e00\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u4ee3\u308f\u308a\u306b\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092 **\u30d5\u30a9\u30fc\u30e9\u30e0**\u3001 **\u30e6\u30fc\u30b6\u30fc**\u3001 **\u30d7\u30ed\u30c0\u30af\u30c8** \u306e\u3088\u3046\u306b\u4e09\u3064\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u4e00\u3064\u3042\u305f\u308a\u306e\u66f8\u304d\u8fbc\u307f\u30fb\u8aad\u307f\u53d6\u308a\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u304c\u6e1b\u308a\u3001\u305d\u306e\u7d50\u679c\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e9\u30b0\u3082\u77ed\u304f\u306a\u308a\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u5c0f\u3055\u304f\u306a\u308b\u3053\u3068\u3067\u3001\u30e1\u30e2\u30ea\u30fc\u306b\u53ce\u307e\u308b\u30c7\u30fc\u30bf\u304c\u5897\u3048\u307e\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u5c40\u6240\u6027\u304c\u9ad8\u307e\u308b\u305f\u3081\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8\u7387\u3082\u4e0a\u304c\u308a\u307e\u3059\u3002\u5358\u4e00\u306e\u4e2d\u592e\u30de\u30b9\u30bf\u30fc\u3067\u66f8\u304d\u8fbc\u307f\u3092\u76f4\u5217\u5316\u3057\u305f\u308a\u3057\u306a\u3044\u305f\u3081\u3001\u4e26\u5217\u3067\u66f8\u304d\u8fbc\u307f\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u306e\u5411\u4e0a\u304c\u671f\u5f85\u3067\u304d\u307e\u3059\u3002\n\n##### \u6b20\u70b9: federation\n\n* \u5927\u898f\u6a21\u306a\u51e6\u7406\u3084\u30c6\u30fc\u30d6\u30eb\u3092\u8981\u3059\u308b\u30b9\u30ad\u30fc\u30de\u306e\u5834\u5408\u3001\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3\u306f\u52b9\u679c\u7684\u3068\u306f\u8a00\u3048\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n* \u3069\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u8aad\u307f\u66f8\u304d\u3092\u3059\u308b\u306e\u304b\u3092\u6307\u5b9a\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u3092\u66f4\u65b0\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n* [server link](http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers)\u3067\u4e8c\u3064\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u9023\u7d50\u3059\u308b\u306e\u306f\u3088\u308a\u8907\u96d1\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n* \u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u8ffd\u52a0\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304c\u5fc5\u8981\u306b\u306a\u308a\u3001\u8907\u96d1\u6027\u3082\u5897\u3057\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: federation\n\n* [Scaling up to your first 10 million users](https://www.youtube.com/watch?v=w95murBkYmU)\n\n#### \u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\n\n<p align=\"center\">\n  <img src=\"images/wU8x5Id.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\n\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u7570\u306a\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u305d\u308c\u305e\u308c\u304c\u30c7\u30fc\u30bf\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u65ad\u7247\u306e\u307f\u3092\u6301\u3064\u3088\u3046\u306b\u30c7\u30fc\u30bf\u3092\u5206\u5272\u3057\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f8b\u306b\u3068\u308b\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u6570\u304c\u5897\u3048\u308b\u306b\u3064\u308c\u3066\u30af\u30e9\u30b9\u30bf\u30fc\u306b\u306f\u3088\u308a\u591a\u304f\u306e\u65ad\u7247\u304c\u52a0\u3048\u3089\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n[federation](#federation)\u306e\u5229\u70b9\u306b\u4f3c\u3066\u3044\u3066\u3001\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u8aad\u307f\u66f8\u304d\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u6e1b\u3089\u3057\u3001\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u6e1b\u3089\u3057\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8\u3092\u5897\u3084\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30b5\u30a4\u30ba\u3082\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4e00\u822c\u7684\u306b\u306f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30b5\u30a4\u30ba\u3092\u6e1b\u3089\u3059\u3068\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u5411\u4e0a\u3057\u30af\u30a8\u30ea\u901f\u5ea6\u304c\u901f\u304f\u306a\u308a\u307e\u3059\u3002\u306a\u306b\u304c\u3057\u304b\u306e\u30c7\u30fc\u30bf\u3092\u8907\u88fd\u3059\u308b\u6a5f\u80fd\u304c\u306a\u3051\u308c\u3070\u30c7\u30fc\u30bf\u30ed\u30b9\u306b\u3064\u306a\u304c\u308a\u307e\u3059\u304c\u3001\u3082\u3057\u3001\u4e00\u3064\u306e\u30b7\u30e3\u30fc\u30c9\u304c\u843d\u3061\u3066\u3082\u3001\u4ed6\u306e\u30b7\u30e3\u30fc\u30c9\u304c\u52d5\u3044\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3\u3068\u540c\u3058\u304f\u3001\u5358\u4e00\u306e\u4e2d\u592e\u30de\u30b9\u30bf\u30fc\u304c\u66f8\u304d\u8fbc\u307f\u306e\u51e6\u7406\u3092\u3057\u306a\u304f\u3066\u3082\u3001\u4e26\u5217\u3067\u66f8\u304d\u8fbc\u307f\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u306e\u5411\u4e0a\u304c\u671f\u5f85\u3067\u304d\u307e\u3059\u3002\n\n\u30e6\u30fc\u30b6\u30fc\u30c6\u30fc\u30d6\u30eb\u3092\u30b7\u30e3\u30fc\u30c9\u3059\u308b\u4e00\u822c\u7684\u306a\u65b9\u6cd5\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u30e9\u30b9\u30c8\u30cd\u30fc\u30e0\u30a4\u30cb\u30b7\u30e3\u30eb\u3067\u30b7\u30e3\u30fc\u30c9\u3059\u308b\u304b\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u5730\u7406\u7684\u914d\u7f6e\u3067\u30b7\u30e3\u30fc\u30c9\u3059\u308b\u306a\u3069\u3067\u3059\u3002\n\n##### \u6b20\u70b9: \u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\n\n* \u30b7\u30e3\u30fc\u30c9\u306b\u5bfe\u5fdc\u3059\u308b\u3088\u3046\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u3092\u5909\u66f4\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u7d50\u679c\u3068\u3057\u3066SQL\u30af\u30a8\u30ea\u304c\u8907\u96d1\u306b\u306a\u308a\u307e\u3059\u3002\n* \u30b7\u30e3\u30fc\u30c9\u3067\u306f\u30c7\u30fc\u30bf\u914d\u5206\u304c\u3044\u3073\u3064\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u6a19\u6e96\u30e6\u30fc\u30b6\u30fc\u306e\u96c6\u5408\u3092\u6301\u3064\u30b7\u30e3\u30fc\u30c9\u304c\u3042\u308b\u5834\u5408\u3001\u305d\u306e\u30b7\u30e3\u30fc\u30c9\u304c\u4ed6\u306e\u30b7\u30e3\u30fc\u30c9\u3088\u308a\u3082\u91cd\u3044\u8ca0\u8377\u3092\u8ca0\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n    * \u30ea\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u3092\u3059\u308b\u3068\u8907\u96d1\u6027\u304c\u3088\u308a\u5897\u3057\u307e\u3059\u3002[consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html) \u306b\u57fa\u3065\u3044\u305f\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u3001\u901a\u4fe1\u30c7\u30fc\u30bf\u3092\u524a\u6e1b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n* \u8907\u6570\u306e\u30b7\u30e3\u30fc\u30c9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u9023\u7d50\u3059\u308b\u306e\u306f\u3088\u308a\u8907\u96d1\u3067\u3059\u3002\n* \u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u8ffd\u52a0\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304c\u5fc5\u8981\u306b\u306a\u308a\u3001\u8907\u96d1\u6027\u3082\u5897\u3057\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: \u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\n\n* [\u30b7\u30e3\u30fc\u30c9\u306e\u767b\u5834](http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html)\n* [\u30b7\u30e3\u30fc\u30c9\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://en.wikipedia.org/wiki/Shard_(database_architecture))\n* [Consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html)\n\n#### \u975e\u6b63\u898f\u5316\n\n\u975e\u6b63\u898f\u5316\u3067\u306f\u3001\u66f8\u304d\u8fbc\u307f\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u3044\u304f\u3089\u304b\u72a0\u7272\u306b\u3057\u3066\u8aad\u307f\u8fbc\u307f\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u3088\u3046\u3068\u3057\u307e\u3059\u3002\u8a08\u7b97\u7684\u306b\u91cd\u3044\u30c6\u30fc\u30d6\u30eb\u306e\u7d50\u5408\u306a\u3069\u3092\u305b\u305a\u306b\u3001\u8907\u6570\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u5197\u9577\u306a\u30c7\u30fc\u30bf\u306e\u30b3\u30d4\u30fc\u304c\u66f8\u304d\u8fbc\u307e\u308c\u308b\u306e\u3092\u8a31\u5bb9\u3057\u307e\u3059\u3002\u3044\u304f\u3064\u304b\u306eRDBMS\u4f8b\u3048\u3070\u3001[PostgreSQL](https://en.wikipedia.org/wiki/PostgreSQL) \u3084Oracle\u306f\u3053\u306e\u5197\u9577\u306a\u60c5\u5831\u3092\u53d6\u308a\u6271\u3044\u3001\u4e00\u8cab\u6027\u3092\u4fdd\u3064\u305f\u3081\u306e[materialized views](https://en.wikipedia.org/wiki/Materialized_view) \u3068\u3044\u3046\u6a5f\u80fd\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n[\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3](#federation) \u3084 [\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0](#\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0)\u306a\u3069\u306e\u30c6\u30af\u30cb\u30c3\u30af\u306b\u3088\u3063\u3066\u305d\u308c\u305e\u308c\u306e\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u306b\u5206\u914d\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u5408\u4e00\u3055\u305b\u308b\u3053\u3068\u306f\u3068\u3066\u3082\u8907\u96d1\u306a\u4f5c\u696d\u3067\u3059\u3002\u975e\u6b63\u898f\u5316\u306b\u3088\u3063\u3066\u305d\u306e\u3088\u3046\u306a\u8907\u96d1\u306a\u51e6\u7406\u3092\u3057\u306a\u304f\u3066\u6e08\u3080\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u591a\u304f\u306e\u30b7\u30b9\u30c6\u30e0\u3067\u3001100\u5bfe1\u3042\u308b\u3044\u306f1000\u5bfe1\u304f\u3089\u3044\u306b\u306a\u308b\u304f\u3089\u3044\u8aad\u307f\u53d6\u308a\u306e\u65b9\u304c\u3001\u66f8\u304d\u8fbc\u307f\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3088\u308a\u3082\u591a\u3044\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u8aad\u307f\u8fbc\u307f\u3092\u884c\u3046\u305f\u3081\u306b\u3001\u8907\u96d1\u306a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30b8\u30e7\u30a4\u30f3\u51e6\u7406\u304c\u542b\u307e\u308c\u308b\u3082\u306e\u306f\u8a08\u7b97\u7684\u306b\u9ad8\u4fa1\u306b\u3064\u304d\u307e\u3059\u3057\u3001\u30c7\u30a3\u30b9\u30af\u306e\u51e6\u7406\u6642\u9593\u3067\u81a8\u5927\u306a\u6642\u9593\u3092\u8cbb\u6d88\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u975e\u6b63\u898f\u5316\n\n* \u30c7\u30fc\u30bf\u304c\u8907\u88fd\u3055\u308c\u308b\u3002\n* \u5197\u9577\u306a\u30c7\u30fc\u30bf\u306e\u8907\u88fd\u304c\u540c\u671f\u3055\u308c\u308b\u3088\u3046\u306b\u5236\u7d04\u304c\u5b58\u5728\u3057\u3001\u305d\u306e\u3053\u3068\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5168\u4f53\u306e\u8a2d\u8a08\u304c\u8907\u96d1\u5316\u3059\u308b\u3002\n* \u975e\u6b63\u898f\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u904e\u5927\u306a\u66f8\u304d\u8fbc\u307f\u3092\u51e6\u7406\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u5834\u5408\u3001\u6b63\u898f\u5316\u3055\u308c\u3066\u3044\u308b\u305d\u308c\u3088\u308a\u3082\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u304a\u3044\u3066\u52a3\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n\n###### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: \u975e\u6b63\u898f\u5316\n\n* [Denormalization](https://en.wikipedia.org/wiki/Denormalization)\n\n#### SQL\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\n\nSQL\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306f\u5e83\u7bc4\u306a\u77e5\u8b58\u3092\u5fc5\u8981\u3068\u3059\u308b\u5206\u91ce\u3067\u591a\u304f\u306e [\u672c](https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning) \u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u3092\u660e\u3089\u304b\u306b\u3057\u3001\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u4e0a\u3067\u3001 **\u30d9\u30f3\u30c1\u30de\u30fc\u30af** \u3092\u5b9a\u3081\u3001 **\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb** \u3059\u308b\u3053\u3068\u306f\u3068\u3066\u3082\u91cd\u8981\u3067\u3059\u3002\n\n* **\u30d9\u30f3\u30c1\u30de\u30fc\u30af** - [ab](http://httpd.apache.org/docs/2.2/programs/ab.html)\u306a\u3069\u306e\u30c4\u30fc\u30eb\u3092\u7528\u3044\u3066\u3001\u9ad8\u8ca0\u8377\u306e\u72b6\u6cc1\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n* **\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb** - [slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html) \u306a\u3069\u306e\u30c4\u30fc\u30eb\u3092\u7528\u3044\u3066\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u72b6\u6cc1\u306e\u78ba\u8a8d\u3092\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3068\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u3068\u308b\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u52b9\u7387\u5316\u306e\u9078\u629e\u80a2\u3092\u3068\u308b\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n##### \u30b9\u30ad\u30fc\u30de\u3092\u7d5e\u308b\n\n* MySQL\u306f\u30a2\u30af\u30bb\u30b9\u901f\u5ea6\u5411\u4e0a\u306e\u305f\u3081\u3001\u30c7\u30a3\u30b9\u30af\u4e0a\u306e\u9023\u7d9a\u3057\u305f\u30d6\u30ed\u30c3\u30af\u3078\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3057\u3066\u3044\u307e\u3059\u3002\n* \u9577\u3055\u306e\u6c7a\u307e\u3063\u305f\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5bfe\u3057\u3066\u306f `VARCHAR` \u3088\u308a\u3082 `CHAR` \u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n    * `CHAR` \u306e\u65b9\u304c\u52b9\u7387\u7684\u306b\u901f\u304f\u30e9\u30f3\u30c0\u30e0\u306b\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 \u4e00\u65b9\u3001 `VARCHAR` \u3067\u306f\u6b21\u306e\u30c7\u30fc\u30bf\u306b\u79fb\u308b\u524d\u306b\u30c7\u30fc\u30bf\u306e\u672b\u5c3e\u3092\u691c\u77e5\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u305f\u3081\u306b\u901f\u5ea6\u304c\u72a0\u7272\u306b\u306a\u308a\u307e\u3059\u3002\n* \u30d6\u30ed\u30b0\u306e\u6295\u7a3f\u306a\u3069\u3001\u5927\u304d\u306a\u30c6\u30ad\u30b9\u30c8\u306b\u306f TEXT \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002 TEXT \u3067\u306f\u30d6\u30fc\u30ea\u30a2\u30f3\u578b\u306e\u691c\u7d22\u3082\u53ef\u80fd\u3067\u3059\u3002 TEXT \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u30d6\u30ed\u30c3\u30af\u304c\u914d\u7f6e\u3055\u308c\u3066\u3044\u308b\u3001\u30c7\u30a3\u30b9\u30af\u4e0a\u306e\u5834\u6240\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u30fc\u304c\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\n* 2\u306e32\u4e57\u308440\u5104\u4ee5\u4e0b\u3092\u8d85\u3048\u306a\u3044\u7a0b\u5ea6\u306e\u5927\u304d\u306a\u6570\u306b\u306f INT \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n* \u901a\u8ca8\u306b\u95a2\u3057\u3066\u306f\u5c0f\u6570\u70b9\u8868\u793a\u4e0a\u306e\u30a8\u30e9\u30fc\u3092\u907f\u3051\u308b\u305f\u3081\u306b `DECIMAL` \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n* \u5927\u304d\u306a `BLOBS` \u3092\u4fdd\u5b58\u3059\u308b\u306e\u306f\u907f\u3051\u307e\u3057\u3087\u3046\u3002\u3069\u3053\u304b\u3089\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u3063\u3066\u304f\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306e\u60c5\u5831\u3092\u4fdd\u5b58\u3057\u307e\u3057\u3087\u3046\u3002\n* `VARCHAR(255)` \u306f8\u30d3\u30c3\u30c8\u3067\u6570\u3048\u3089\u308c\u308b\u6700\u5927\u306e\u6587\u5b57\u6570\u3067\u3059\u3002\u4e00\u90e8\u306eDBMS\u3067\u306f\u30011\u30d0\u30a4\u30c8\u306e\u5229\u7528\u52b9\u7387\u3092\u6700\u5927\u5316\u3059\u308b\u305f\u3081\u306b\u3053\u306e\u6587\u5b57\u6570\u304c\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3002\n* [\u691c\u7d22\u6027\u80fd\u5411\u4e0a\u306e\u305f\u3081](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search) \u3001\u53ef\u80fd\u3067\u3042\u308c\u3070 `NOT NULL` \u5236\u7d04\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u3087\u3046\u3002\n\n##### \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u52b9\u679c\u7684\u306b\u7528\u3044\u308b\n\n* \u30af\u30a8\u30ea(`SELECT`\u3001 `GROUP BY`\u3001 `ORDER BY`\u3001 `JOIN`) \u306e\u5bfe\u8c61\u3068\u306a\u308b\u5217\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4f7f\u3046\u3053\u3068\u3067\u901f\u5ea6\u3092\u5411\u4e0a\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n* \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f\u901a\u5e38\u3001\u5e73\u8861\u63a2\u7d22\u6728\u3067\u3042\u308b[B\u6728](https://en.wikipedia.org/wiki/B-tree)\u306e\u5f62\u3067\u8868\u3055\u308c\u307e\u3059\u3002B\u6728\u306b\u3088\u308a\u30c7\u30fc\u30bf\u306f\u5e38\u306b\u30bd\u30fc\u30c8\u3055\u308c\u305f\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u691c\u7d22\u3001\u9806\u6b21\u30a2\u30af\u30bb\u30b9\u3001\u633f\u5165\u3001\u524a\u9664\u3092\u5bfe\u6570\u6642\u9593\u3067\u884c\u3048\u307e\u3059\u3002\n* \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u914d\u7f6e\u3059\u308b\u3053\u3068\u306f\u30c7\u30fc\u30bf\u3092\u30e1\u30e2\u30ea\u30fc\u306b\u6b8b\u3059\u3053\u3068\u306b\u3064\u306a\u304c\u308a\u3088\u308a\u5bb9\u91cf\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002\n* \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u66f4\u65b0\u3082\u5fc5\u8981\u306b\u306a\u308b\u305f\u3081\u66f8\u304d\u8fbc\u307f\u3082\u9045\u304f\u306a\u308a\u307e\u3059\u3002\n* \u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3059\u308b\u969b\u306b\u306f\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5207\u3063\u3066\u304b\u3089\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3057\u3066\u518d\u3073\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u30d3\u30eb\u30c9\u3057\u305f\u65b9\u304c\u901f\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\n##### \u9ad8\u8ca0\u8377\u306a\u30b8\u30e7\u30a4\u30f3\u3092\u907f\u3051\u308b\n\n* \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u4e0a\u5fc5\u8981\u306a\u3068\u3053\u308d\u306b\u306f[\u975e\u6b63\u898f\u5316](#\u975e\u6b63\u898f\u5316)\u3092\u9069\u7528\u3059\u308b\n\n##### \u30c6\u30fc\u30d6\u30eb\u306e\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\n\n* \u30c6\u30fc\u30d6\u30eb\u3092\u5206\u5272\u3057\u3001\u30db\u30c3\u30c8\u30b9\u30dd\u30c3\u30c8\u3092\u72ec\u7acb\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u306b\u5206\u96e2\u3057\u3066\u30e1\u30e2\u30ea\u30fc\u306b\u4e57\u305b\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n##### \u30af\u30a8\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u8abf\u6574\u3059\u308b\n\n* \u5834\u5408\u306b\u3088\u3063\u3066\u306f[\u30af\u30a8\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5](http://dev.mysql.com/doc/refman/5.7/en/query-cache) \u304c[\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u554f\u984c](https://www.percona.com/blog/2014/01/28/10-mysql-performance-tuning-settings-after-installation/) \u3092\u5f15\u304d\u8d77\u3053\u3059\u53ef\u80fd\u6027\u304c\u3042\u308b\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: SQL\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\n\n* [MySQL\u30af\u30a8\u30ea\u3092\u6700\u9069\u5316\u3059\u308b\u305f\u3081\u306eTips](http://20bits.com/article/10-tips-for-optimizing-mysql-queries-that-dont-suck)\n* [VARCHAR(255)\u3092\u3084\u305f\u3089\u3088\u304f\u898b\u304b\u3051\u308b\u306e\u306f\u306a\u3093\u3067\uff1f](http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l)\n* [null\u5024\u306f\u3069\u306e\u3088\u3046\u306b\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u5f71\u97ff\u3059\u308b\u306e\u304b\uff1f](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)\n* [Slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html)\n\n### NoSQL\n\nNoSQL \u306f **key-value store**\u3001 **document-store**\u3001 **wide column store**\u3001 \u3082\u3057\u304f\u306f **graph database**\u306b\u3088\u3063\u3066\u8868\u73fe\u3055\u308c\u308b\u30c7\u30fc\u30bf\u30a2\u30a4\u30c6\u30e0\u306e\u96c6\u5408\u3067\u3059\u3002\u30c7\u30fc\u30bf\u306f\u4e00\u822c\u7684\u306b\u6b63\u898f\u5316\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067\u30b8\u30e7\u30a4\u30f3\u304c\u884c\u308f\u308c\u307e\u3059\u3002\u5927\u90e8\u5206\u306eNoSQL\u306f\u771f\u306eACID\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u6301\u305f\u305a\u3001 [\u7d50\u679c\u6574\u5408\u6027](#\u7d50\u679c\u6574\u5408\u6027) \u7684\u306a\u632f\u308b\u821e\u3044\u306e\u65b9\u3092\u597d\u307f\u307e\u3059\u3002\n\n**BASE** \u306f\u3057\u3070\u3057\u3070NoSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8aac\u660e\u3059\u308b\u305f\u3081\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002[CAP Theorem](#cap-\u7406\u8ad6) \u3068\u5bfe\u7167\u7684\u306b\u3001BASE\u306f\u4e00\u8cab\u6027\u3088\u308a\u3082\u53ef\u7528\u6027\u3092\u512a\u5148\u3057\u307e\u3059\u3002\n\n* **Basically available** - \u30b7\u30b9\u30c6\u30e0\u306f\u53ef\u7528\u6027\u3092\u4fdd\u8a3c\u3057\u307e\u3059\u3002\n* **Soft state** - \u30b7\u30b9\u30c6\u30e0\u306e\u72b6\u614b\u306f\u5165\u529b\u304c\u306a\u304f\u3066\u3082\u6642\u9593\u7d4c\u904e\u3068\u3068\u3082\u306b\u5909\u5316\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n* **\u7d50\u679c\u6574\u5408\u6027** - \u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u306f\u6642\u9593\u7d4c\u904e\u3068\u3068\u3082\u306b\u305d\u306e\u9593\u306b\u5165\u529b\u304c\u306a\u3044\u3068\u3044\u3046\u524d\u63d0\u306e\u3082\u3068\u3001\u4e00\u8cab\u6027\u304c\u9054\u6210\u3055\u308c\u307e\u3059\u3002\n\n[SQL\u304b\uff1fNoSQL\u304b\uff1f](#sql\u304bnosql\u304b) \u3092\u9078\u629e\u3059\u308b\u306e\u306b\u52a0\u3048\u3066\u3001\u3069\u306e\u30bf\u30a4\u30d7\u306eNoSQL\u304c\u3069\u306e\u4f7f\u7528\u4f8b\u306b\u6700\u3082\u9069\u3059\u308b\u304b\u3092\u7406\u89e3\u3059\u308b\u306e\u306f\u3068\u3066\u3082\u6709\u76ca\u3067\u3059\u3002\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f **\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2**\u3001 **\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2**\u3001 **\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2**\u3001 \u3068 **\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9** \u306b\u3064\u3044\u3066\u89e6\u308c\u3066\u3044\u304d\u307e\u3059\u3002\n\n#### \u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\n\n> \u6982\u8981: \u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\n\n\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3067\u306f\u4e00\u822c\u7684\u306bO(1)\u306e\u8aad\u307f\u66f8\u304d\u304c\u3067\u304d\u3001\u305d\u308c\u3089\u306f\u30e1\u30e2\u30ea\u306a\u3044\u3057SSD\u3067\u88cf\u4ed8\u3051\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306f\u30ad\u30fc\u3092 [\u8f9e\u66f8\u7684\u9806\u5e8f](https://en.wikipedia.org/wiki/Lexicographical_order) \u3067\u4fdd\u6301\u3059\u308b\u3053\u3068\u3067\u30ad\u30fc\u306e\u52b9\u7387\u7684\u306a\u53d6\u5f97\u3092\u53ef\u80fd\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3067\u306f\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u5024\u3068\u3068\u3082\u306b\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306f\u30cf\u30a4\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306a\u6319\u52d5\u304c\u53ef\u80fd\u3067\u3001\u5358\u7d14\u306a\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\u3084\u30a4\u30f3\u30e1\u30e2\u30ea\u30fc\u30ad\u30e3\u30c3\u30b7\u30e5\u30ec\u30a4\u30e4\u30fc\u306a\u3069\u306e\u30c7\u30fc\u30bf\u304c\u6025\u901f\u306b\u5909\u308f\u308b\u5834\u5408\u306a\u3069\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\u5358\u7d14\u306a\u51e6\u7406\u306e\u307f\u306b\u6a5f\u80fd\u304c\u5236\u9650\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u8ffd\u52a0\u306e\u51e6\u7406\u6a5f\u80fd\u304c\u5fc5\u8981\u306a\u5834\u5408\u306b\u306f\u305d\u306e\u8907\u96d1\u6027\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306b\u8f09\u305b\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306f\u3082\u3063\u3068\u8907\u96d1\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u3084\u3001\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u57fa\u672c\u3067\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: \u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\n\n* [\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](https://en.wikipedia.org/wiki/Key-value_database)\n* [\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306e\u6b20\u70b9](http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or)\n* [Redis\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](http://qnimate.com/overview-of-redis-architecture/)\n* [\u30e1\u30e0\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://adayinthelifeof.nl/2011/02/06/memcache-internals/)\n\n#### \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\n\n> \u6982\u8981: \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u30d0\u30ea\u30e5\u30fc\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u305f\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u95a2\u3059\u308b\u5168\u3066\u306e\u60c5\u5831\u3092\u6301\u3064\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8(XML\u3001 JSON\u3001 binary\u306a\u3069)\u3092\u4e2d\u5fc3\u306b\u636e\u3048\u305f\u30b7\u30b9\u30c6\u30e0\u3067\u3059\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u3067\u306f\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u81ea\u8eab\u306e\u5185\u90e8\u69cb\u9020\u306b\u57fa\u3065\u3044\u305f\u3001API\u3082\u3057\u304f\u306f\u30af\u30a8\u30ea\u8a00\u8a9e\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 *\u30e1\u30e2\uff1a\u591a\u304f\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3067\u306f\u3001\u5024\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u6271\u3046\u6a5f\u80fd\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u3053\u3068\u306b\u3088\u3063\u3066\u4e8c\u3064\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u3068\u306e\u5883\u754c\u7dda\u304c\u66d6\u6627\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002*\n\n\u4ee5\u4e0a\u306e\u3053\u3068\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3001\u30bf\u30b0\u3001\u30e1\u30bf\u30c7\u30fc\u30bf\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306a\u3069\u3068\u3057\u3066\u6574\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u540c\u58eb\u306f\u307e\u3068\u3081\u3066\u30b0\u30eb\u30fc\u30d7\u306b\u3067\u304d\u308b\u3082\u306e\u306e\u3001\u305d\u308c\u305e\u308c\u3067\u5168\u304f\u7570\u306a\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6301\u3064\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n[MongoDB](https://www.mongodb.com/mongodb-architecture) \u3084 [CouchDB](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/) \u306a\u3069\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u3082\u3001\u8907\u96d1\u306a\u30af\u30a8\u30ea\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306eSQL\u306e\u3088\u3046\u306a\u8a00\u8a9e\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002[DynamoDB](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) \u306f\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u3068\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4e21\u65b9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u306f\u9ad8\u3044\u67d4\u8edf\u6027\u3092\u62c5\u4fdd\u3059\u308b\u306e\u3067\u3001\u983b\u7e41\u306b\u5909\u5316\u3059\u308b\u30c7\u30fc\u30bf\u3092\u6271\u3046\u6642\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\n\n* [\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u6307\u5411 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](https://en.wikipedia.org/wiki/Document-oriented_database)\n* [MongoDB \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://www.mongodb.com/mongodb-architecture)\n* [CouchDB \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/)\n* [Elasticsearch \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up)\n\n#### \u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\n\n<p align=\"center\">\n  <img src=\"images/n16iOGk.png\">\n  <br/>\n  <i><a href=http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html>Source: SQL & NoSQL, a brief history</a></i>\n</p>\n\n> \u6982\u8981: \u30cd\u30b9\u30c8\u3055\u308c\u305f\u30de\u30c3\u30d7 `\u30ab\u30e9\u30e0\u30d5\u30a1\u30df\u30ea\u30fc<\u884c\u30ad\u30fc\u3001 \u30ab\u30e9\u30e0<ColKey\u3001 Value\u3001 Timestamp>>`\n\n\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\u306e\u30c7\u30fc\u30bf\u306e\u57fa\u672c\u5358\u4f4d\u306f\u30ab\u30e9\u30e0\uff08\u30cd\u30fc\u30e0\u30fb\u30d0\u30ea\u30e5\u30fc\u306e\u30da\u30a2\uff09\u3067\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u30ab\u30e9\u30e0\u306f\u30ab\u30e9\u30e0\u30d5\u30a1\u30df\u30ea\u30fc\u3068\u3057\u3066\uff08SQL\u30c6\u30fc\u30d6\u30eb\u306e\u3088\u3046\u306b\uff09\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b9\u30fc\u30d1\u30fc\u30ab\u30e9\u30e0\u30d5\u30a1\u30df\u30ea\u30fc\u306f\u30ab\u30e9\u30e0\u30d5\u30a1\u30df\u30ea\u30fc\u306e\u96c6\u5408\u3067\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u30ab\u30e9\u30e0\u306b\u306f\u884c\u30ad\u30fc\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u540c\u3058\u884c\u30ad\u30fc\u3092\u6301\u3064\u30ab\u30e9\u30e0\u306f\u540c\u3058\u884c\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u5024\u306f\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3068\u30b3\u30f3\u30d5\u30ea\u30af\u30c8\u304c\u8d77\u304d\u305f\u6642\u306e\u305f\u3081\u306b\u3001\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u542b\u307f\u307e\u3059\u3002\n\nGoogle\u306f[Bigtable](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)\u3092\u521d\u306e\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\u3068\u3057\u3066\u767a\u8868\u3057\u307e\u3057\u305f\u3002\u305d\u308c\u304c\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u3067Hadoop\u306a\u3069\u3067\u3088\u304f\u4f7f\u308f\u308c\u308b[HBase](https://www.mapr.com/blog/in-depth-look-hbase-architecture) \u3084Facebook\u306b\u3088\u308b[Cassandra](http://docs.datastax.com/en/archived/cassandra/2.0/cassandra/architecture/architectureIntro_c.html) \u306a\u3069\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u307e\u3057\u305f\u3002BigTable\u3001HBase\u3084Cassandra\u306a\u3069\u306e\u30b9\u30c8\u30a2\u306f\u30ad\u30fc\u3092\u8f9e\u66f8\u5f62\u5f0f\u3067\u4fdd\u6301\u3059\u308b\u3053\u3068\u3067\u9078\u629e\u3057\u305f\u30ad\u30fc\u30ec\u30f3\u30b8\u3067\u306e\u30c7\u30fc\u30bf\u53d6\u5f97\u3092\u52b9\u7387\u7684\u306b\u3057\u307e\u3059\u3002\n\n\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\u306f\u9ad8\u3044\u53ef\u7528\u6027\u3068\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3092\u62c5\u4fdd\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u3068\u3066\u3082\u5927\u898f\u6a21\u306a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u6271\u3046\u3053\u3068\u306b\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  \u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\n\n* [SQL & NoSQL\u7c21\u5358\u306b\u6b74\u53f2\u3092\u3055\u3089\u3046](http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html)\n* [Bigtable \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)\n* [HBase \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://www.mapr.com/blog/in-depth-look-hbase-architecture)\n* [Cassandra \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](http://docs.datastax.com/en/archived/cassandra/2.0/cassandra/architecture/architectureIntro_c.html)\n\n#### \u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\n<p align=\"center\">\n  <img src=\"images/fNcl65g.png\">\n  <br/>\n  <i><a href=https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png>Source: Graph database</a></i>\n</p>\n\n> \u6982\u8981: \u30b0\u30e9\u30d5\n\n\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3067\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u30ce\u30fc\u30c9\u304c\u30ec\u30b3\u30fc\u30c9\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u30a2\u30fc\u30af\u306f\u4e8c\u3064\u306e\u30ce\u30fc\u30c9\u3092\u7e4b\u3050\u95a2\u4fc2\u6027\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u591a\u6570\u306e\u5916\u90e8\u30ad\u30fc\u3084\u591a\u5bfe\u591a\u306a\u3069\u306e\u8907\u96d1\u306a\u95a2\u4fc2\u6027\u3092\u8868\u3059\u306e\u306b\u6700\u9069\u3067\u3059\u3002\n\n\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306fSNS\u306a\u3069\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u8907\u96d1\u306a\u95a2\u4fc2\u6027\u30e2\u30c7\u30eb\u306a\u3069\u306b\u3064\u3044\u3066\u9ad8\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u767a\u63ee\u3057\u307e\u3059\u3002\u6bd4\u8f03\u7684\u65b0\u3057\u304f\u3001\u307e\u3060\u4e00\u822c\u7684\u306b\u306f\u7528\u3044\u3089\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u958b\u767a\u30c4\u30fc\u30eb\u3084\u30ea\u30bd\u30fc\u30b9\u3092\u63a2\u3059\u306e\u304c\u4ed6\u306e\u65b9\u6cd5\u306b\u6bd4\u3079\u3066\u96e3\u3057\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u591a\u304f\u306e\u30b0\u30e9\u30d5\u306f[REST APIs](#representational-state-transfer-rest)\u3092\u901a\u3058\u3066\u306e\u307f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  \u30b0\u30e9\u30d5\n\n* [Graph\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](https://en.wikipedia.org/wiki/Graph_database)\n* [Neo4j](https://neo4j.com/)\n* [FlockDB](https://blog.twitter.com/2010/introducing-flockdb)\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  NoSQL\n\n* [\u57fa\u672c\u7528\u8a9e\u306e\u8aac\u660e](http://stackoverflow.com/questions/3342497/explanation-of-base-terminology)\n* [NoSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u3064\u3044\u3066\u8abf\u67fb\u3068\u9078\u629e\u30ac\u30a4\u30c9](https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n* [NoSQL\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3](https://www.youtube.com/watch?v=qI_g07C_Q5I)\n* [NoSQL\u30d1\u30bf\u30fc\u30f3](http://horicky.blogspot.com/2009/11/nosql-patterns.html)\n\n### SQL\u304b\uff1fNoSQL\u304b\uff1f\n\n<p align=\"center\">\n  <img src=\"images/wXGqG5f.png\">\n  <br/>\n  <i><a href=https://www.infoq.com/articles/Transition-RDBMS-NoSQL/>Source: Transitioning from RDBMS to NoSQL</a></i>\n</p>\n\n**SQL** \u3092\u9078\u3076\u7406\u7531:\n\n* \u69cb\u9020\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf\n* \u53b3\u683c\u306a\u30b9\u30ad\u30fc\u30de\n* \u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\n* \u8907\u96d1\u306a\u30b8\u30e7\u30a4\u30f3\u3092\u3059\u308b\u5fc5\u8981\u6027\n* \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\n* \u30b9\u30b1\u30fc\u30eb\u3059\u308b\u969b\u306e\u30d1\u30bf\u30fc\u30f3\u304c\u660e\u78ba\u306a\u3068\u304d\n* \u958b\u767a\u8005\u306e\u6570\u3001\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3001\u30b3\u30fc\u30c9\u7b49\u304c\u3088\u308a\u5145\u5b9f\u3057\u3066\u3044\u308b\n* \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u3088\u308b\u30c7\u30fc\u30bf\u63a2\u7d22\u306f\u3068\u3066\u3082\u901f\u3044\n\n**NoSQL** \u3092\u9078\u3076\u7406\u7531:\n\n* \u6e96\u69cb\u9020\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf\n* \u30c0\u30a4\u30ca\u30df\u30c3\u30af\u306a\u3044\u3057\u3001\u30d5\u30ec\u30ad\u30b7\u30d6\u30eb\u306a\u30b9\u30ad\u30fc\u30de\n* \u30ce\u30f3\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u306a\u30c7\u30fc\u30bf\n* \u8907\u96d1\u306a\u30b8\u30e7\u30a4\u30f3\u3092\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\n* \u30c7\u30fc\u30bf\u306e\u591a\u304f\u306eTB (\u3082\u3057\u304f\u306f PB) \u3092\u4fdd\u5b58\u3059\u308b\n* \u96c6\u4e2d\u7684\u3001\u5927\u898f\u6a21\u306a\u30c7\u30fc\u30bf\u8ca0\u8377\u306b\u8010\u3048\u3089\u308c\u308b\n* IOPS\u306b\u3064\u3044\u3066\u306f\u6975\u3081\u3066\u9ad8\u3044\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u793a\u3059\n\nNoSQL\u306b\u9069\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf:\n\n* \u6025\u6fc0\u306a\u30af\u30ea\u30c3\u30af\u30b9\u30c8\u30ea\u30fc\u30e0\u3084\u30ed\u30b0\u30c7\u30fc\u30bf\u306e\u53ce\u96c6\n* \u30ea\u30fc\u30c0\u30fc\u30dc\u30fc\u30c9\u3084\u30b9\u30b3\u30a2\u30ea\u30f3\u30b0\u30c7\u30fc\u30bf\n* \u30b7\u30e7\u30c3\u30d4\u30f3\u30b0\u30ab\u30fc\u30c8\u306a\u3069\u306e\u4e00\u6642\u7684\u60c5\u5831\n* \u983b\u7e41\u306b\u30a2\u30af\u30bb\u30b9\u3055\u308c\u308b ('\u30db\u30c3\u30c8\u306a') \u30c6\u30fc\u30d6\u30eb\n* \u30e1\u30bf\u30c7\u30fc\u30bf\u3084\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30c6\u30fc\u30d6\u30eb\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  \u3000SQL\u3082\u3057\u304f\u306fNoSQL\n\n* [\u6700\u521d\u306e1000\u4e07\u30e6\u30fc\u30b6\u30fc\u306b\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u3059\u308b\u305f\u3081\u306b](https://www.youtube.com/watch?v=w95murBkYmU)\n* [SQL\u3068NoSQL\u306e\u9055\u3044](https://www.sitepoint.com/sql-vs-nosql-differences/)\n\n## \u30ad\u30e3\u30c3\u30b7\u30e5\n\n<p align=\"center\">\n  <img src=\"images/Q6z24La.png\">\n  <br/>\n  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Source: Scalable system design patterns</a></i>\n</p>\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u30da\u30fc\u30b8\u306e\u8aad\u307f\u8fbc\u307f\u6642\u9593\u3092\u524a\u6e1b\u3057\u3001\u30b5\u30fc\u30d0\u30fc\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u8ca0\u8377\u3092\u4f4e\u6e1b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f\u3001\u5b9f\u969b\u306e\u51e6\u7406\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306b\u3001\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u30e3\u30fc\u304c\u307e\u305a\u4ee5\u524d\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u9001\u4fe1\u3055\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3001\u76f4\u524d\u306e\u7d50\u679c\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u305d\u306e\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u306b\u6e21\u3063\u3066\u7d71\u5408\u3055\u308c\u305f\u8aad\u307f\u53d6\u308a\u66f8\u304d\u8fbc\u307f\u306e\u5206\u914d\u3092\u8981\u6c42\u3057\u307e\u3059\u304c\u3001\u4eba\u6c17\u30a2\u30a4\u30c6\u30e0\u306f\u305d\u306e\u5206\u914d\u3092\u6b6a\u3081\u3066\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u306e\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u524d\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u5dee\u3057\u8fbc\u3080\u3053\u3068\u3067\u3053\u306e\u3088\u3046\u306b\u3001\u5747\u4e00\u3067\u306a\u3044\u8ca0\u8377\u3084\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u6025\u6fc0\u306a\u5897\u52a0\u3092\u5438\u53ce\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306fOS\u3084\u30d6\u30e9\u30a6\u30b6\u30fc\u306a\u3069\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3001[\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9](#\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7web\u30b5\u30fc\u30d0\u30fc) \u3082\u3057\u304f\u306f\u72ec\u7acb\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30ec\u30a4\u30e4\u30fc\u306b\u8a2d\u7f6e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### CDN\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n[CDN](#\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30afcontent-delivery-network) \u3082\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u4e00\u3064\u3068\u3057\u3066\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### Web\u30b5\u30fc\u30d0\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n[\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7](#\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7web\u30b5\u30fc\u30d0\u30fc) \u3084 [Varnish](https://www.varnish-cache.org/) \u306a\u3069\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u9759\u7684\u305d\u3057\u3066\u52d5\u7684\u306a\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u76f4\u63a5\u914d\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 web\u30b5\u30fc\u30d0\u30fc\u3082\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u306b\u63a5\u7d9a\u3059\u308b\u3053\u3068\u306a\u3057\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u666e\u901a\u3001\u4e00\u822c\u7684\u306a\u4f7f\u7528\u72b6\u6cc1\u306b\u9069\u3059\u308b\u3088\u3046\u306a\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306e\u8a2d\u5b9a\u3092\u521d\u671f\u72b6\u614b\u3067\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u8a2d\u5b9a\u3092\u7279\u5b9a\u306e\u4ed5\u69d8\u306b\u5408\u308f\u305b\u3066\u8abf\u6574\u3059\u308b\u3053\u3068\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30e1\u30e0\u30ad\u30e3\u30c3\u30b7\u30e5\u306a\u3069\u306eIn-memory\u30ad\u30e3\u30c3\u30b7\u30e5\u3084Redis\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u30c7\u30fc\u30bf\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u9593\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3067\u3059\u3002\u30c7\u30fc\u30bf\u306fRAM\u3067\u4fdd\u6301\u3055\u308c\u308b\u305f\u3081\u3001\u30c7\u30fc\u30bf\u304c\u30c7\u30a3\u30b9\u30af\u3067\u4fdd\u5b58\u3055\u308c\u308b\u4e00\u822c\u7684\u306a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3088\u308a\u3082\u3060\u3044\u3076\u901f\u3044\u3067\u3059\u3002RAM\u5bb9\u91cf\u306f\u30c7\u30a3\u30b9\u30af\u3088\u308a\u3082\u9650\u3089\u308c\u3066\u3044\u308b\u306e\u3067\u3001[least recently used (LRU)](https://en.wikipedia.org/wiki/Cache_algorithms#Least_Recently_Used)\u306a\u3069\u306e[cache invalidation](https://en.wikipedia.org/wiki/Cache_algorithms) \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c '\u30b3\u30fc\u30eb\u30c9' \u306a\u30a8\u30f3\u30c8\u30ea\u3092\u5f3e\u304d\u3001'\u30db\u30c3\u30c8' \u306a\u30c7\u30fc\u30bf\u3092RAM\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\nRedis\u306f\u3055\u3089\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6a5f\u80fd\u3092\u5099\u3048\u3066\u3044\u307e\u3059:\n\n* \u30d1\u30fc\u30b8\u30b9\u30c6\u30f3\u30b9\u8a2d\u5b9a\n* \u30bd\u30fc\u30c8\u6e08\u307f\u30bb\u30c3\u30c8\u3001\u30ea\u30b9\u30c8\u306a\u3069\u306e\u7d44\u307f\u8fbc\u307f\u30c7\u30fc\u30bf\u69cb\u9020\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u306f\u69d8\u3005\u306a\u30ec\u30d9\u30eb\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3044\u305a\u308c\u3082\u5927\u304d\u304f\u4e8c\u3064\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u3044\u305a\u308c\u304b\u306b\u5206\u985e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059: **\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30a8\u30ea** \u3068 **\u30aa\u30d6\u30b8\u30a7\u30af\u30c8** \u3067\u3059:\n\n* \u884c\u30ec\u30d9\u30eb\n* \u30af\u30a8\u30ea\u30ec\u30d9\u30eb\n* Fully-formed serializable objects\n* Fully-rendered HTML\n\n\u4e00\u822c\u7684\u306b\u3001\u30d5\u30a1\u30a4\u30eb\u30d9\u30fc\u30b9\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306f\u30af\u30ed\u30fc\u30f3\u3092\u4f5c\u308a\u51fa\u3057\u3066\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u96e3\u3057\u304f\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u907f\u3051\u308b\u3079\u304d\u3067\u3059\u3002\n\n### \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30a8\u30ea\u30ec\u30d9\u30eb\u3067\u306e\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30af\u30a8\u30ea\u3059\u308b\u969b\u306b\u306f\u5fc5\u305a\u30af\u30a8\u30ea\u3092\u30ad\u30fc\u3068\u3057\u3066\u30cf\u30c3\u30b7\u30e5\u3057\u3066\u7d50\u679c\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u4fdd\u5b58\u3057\u307e\u3057\u3087\u3046\u3002\u3053\u306e\u624b\u6cd5\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u671f\u9650\u5207\u308c\u554f\u984c\u306b\u60a9\u3080\u3053\u3068\u306b\u306a\u308a\u307e\u3059:\n\n* \u8907\u96d1\u306a\u30af\u30a8\u30ea\u306b\u3088\u308a\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u7d50\u679c\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u56f0\u96e3\n* \u30c6\u30fc\u30d6\u30eb\u30bb\u30eb\u306a\u3069\u306e\u30c7\u30fc\u30bf\u65ad\u7247\u304c\u5909\u5316\u3057\u305f\u6642\u306b\u3001\u305d\u306e\u5909\u5316\u3057\u305f\u30bb\u30eb\u3092\u542b\u3080\u304b\u3082\u3057\u308c\u306a\u3044\u5168\u3066\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30af\u30a8\u30ea\u3092\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n### \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ec\u30d9\u30eb\u3067\u306e\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30c7\u30fc\u30bf\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9\u3067\u305d\u3046\u3059\u308b\u3088\u3046\u306b\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u6349\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u30af\u30e9\u30b9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3084\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3057\u3066\u7d44\u307f\u7acb\u3066\u3055\u305b\u307e\u3059\u3002:\n\n* \u305d\u306e\u30c7\u30fc\u30bf\u304c\u5909\u66f4\u3055\u308c\u305f\u3089\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u304b\u3089\u524a\u9664\u3059\u308b\u3053\u3068\n* \u975e\u540c\u671f\u51e6\u7406\u3092\u8a31\u5bb9\u3057\u307e\u3059: \u30ef\u30fc\u30ab\u30fc\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u3067\u6700\u65b0\u306e\u3082\u306e\u3092\u96c6\u3081\u3066\u304d\u307e\u3059\n\n\u4f55\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u304b:\n\n* \u30e6\u30fc\u30b6\u30fc\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\n* \u5b8c\u5168\u306b\u30ec\u30f3\u30c0\u30fc\u3055\u308c\u305f\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\n* \u30a2\u30af\u30c6\u30d3\u30c6\u30a3\u30b9\u30c8\u30ea\u30fc\u30e0\n* \u30e6\u30fc\u30b6\u30fc\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\n\n### \u3044\u3064\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u66f4\u65b0\u3059\u308b\u304b\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u4fdd\u5b58\u3067\u304d\u308b\u5bb9\u91cf\u306f\u9650\u3089\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u81ea\u5206\u306e\u30b1\u30fc\u30b9\u3067\u306f\u3069\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u624b\u6cd5\u304c\u4e00\u756a\u3044\u3044\u304b\u306f\u691c\u8a0e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n#### \u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\n\n<p align=\"center\">\n  <img src=\"images/ONjORqk.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid</a></i>\n</p>\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30b9\u30c8\u30ec\u30fc\u30b8\u3078\u306e\u8aad\u307f\u66f8\u304d\u306e\u51e6\u7406\u3092\u3057\u307e\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u30b9\u30c8\u30ec\u30fc\u30b8\u3068\u306f\u76f4\u63a5\u3084\u308a\u3068\u308a\u3092\u3057\u307e\u305b\u3093\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u3057\u307e\u3059:\n\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u4e2d\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u53c2\u7167\u3057\u307e\u3059\u304c\u3001\u7d50\u679c\u3068\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\u306b\u306a\u308a\u307e\u3059\n* \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u30a8\u30f3\u30c8\u30ea\u3092\u53d6\u5f97\u3057\u307e\u3059\n* \u30a8\u30f3\u30c8\u30ea\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u8ffd\u52a0\u3057\u307e\u3059\n* \u30a8\u30f3\u30c8\u30ea\u3092\u8fd4\u3057\u307e\u3059\n\n```python\ndef get_user(self, user_id):\n    user = cache.get(\"user.{0}\", user_id)\n    if user is None:\n        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)\n        if user is not None:\n            key = \"user.{0}\".format(user_id)\n            cache.set(key, json.dumps(user))\n    return user\n```\n\n[Memcached](https://memcached.org/) \u306f\u901a\u5e38\u3053\u306e\u3088\u3046\u306b\u4f7f\u308f\u308c\u308b\u3002\n\n\u305d\u306e\u5f8c\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u306f\u901f\u3044\u3067\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\u306f\u30ec\u30fc\u30b8\u30fc\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u3042\u308b\u3068\u3082\u8a00\u308f\u308c\u307e\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u307f\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u30c7\u30fc\u30bf\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u6ea2\u308c\u308b\u306e\u3092\u9632\u6b62\u3057\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\n\n* \u5404\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\u306f\u4e09\u3064\u306e\u30c8\u30ea\u30c3\u30d7\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u306b\u306a\u308a\u3001\u4f53\u611f\u3067\u304d\u308b\u307b\u3069\u306e\u9045\u5ef6\u304c\u8d77\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n* \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30c7\u30fc\u30bf\u304c\u66f4\u65b0\u3055\u308c\u308b\u3068\u30ad\u30e3\u30c3\u30b7\u30e5\u30c7\u30fc\u30bf\u306f\u53e4\u3044\u3082\u306e\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002time-to-live (TTL)\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u30a8\u30f3\u30c8\u30ea\u306e\u66f4\u65b0\u3092\u5f37\u5236\u7684\u306b\u884c\u3046\u3001\u3082\u3057\u304f\u306f\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\u3092\u63a1\u7528\u3059\u308b\u3053\u3068\u3067\u3053\u306e\u554f\u984c\u306f\u7de9\u548c\u3067\u304d\u307e\u3059\u3002\n* \u30ce\u30fc\u30c9\u304c\u843d\u3061\u308b\u3068\u3001\u65b0\u898f\u306e\u7a7a\u306e\u30ce\u30fc\u30c9\u3067\u4ee3\u66ff\u3055\u308c\u308b\u3053\u3068\u3067\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u304c\u5897\u52a0\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### \u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\n\n<p align=\"center\">\n  <img src=\"images/0vBc0hN.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u30e1\u30a4\u30f3\u306e\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u3068\u3057\u3066\u4f7f\u3044\u3001\u305d\u3053\u306b\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u66f8\u304d\u3092\u884c\u3044\u307e\u3059\u3002\u4e00\u65b9\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u8aad\u307f\u66f8\u304d\u3092\u62c5\u5f53\u3057\u307e\u3059\u3002\n\n* \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u3042\u308b\u30a8\u30f3\u30c8\u30ea\u3092\u8ffd\u52a0\u30fb\u66f4\u65b0\u3057\u307e\u3059\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u540c\u671f\u7684\u306b\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306b\u66f8\u304d\u8fbc\u307f\u3092\u884c\u3044\u307e\u3059\n* \u30a8\u30f3\u30c8\u30ea\u3092\u8fd4\u3057\u307e\u3059\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9:\n\n```\nset_user(12345, {\"foo\":\"bar\"})\n```\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30b3\u30fc\u30c9:\n\n```python\ndef set_user(user_id, values):\n    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)\n    cache.set(user_id, user)\n```\n\n\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\u306f\u66f8\u304d\u8fbc\u307f\u51e6\u7406\u306e\u305b\u3044\u3067\u5168\u4f53\u3068\u3057\u3066\u306f\u9045\u3044\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u304c\u3001\u66f8\u304d\u8fbc\u307e\u308c\u305f\u3070\u304b\u308a\u306e\u30c7\u30fc\u30bf\u306b\u95a2\u3059\u308b\u8aad\u307f\u8fbc\u307f\u306f\u901f\u3044\u3067\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u5074\u306f\u4e00\u822c\u7684\u306b\u30c7\u30fc\u30bf\u66f4\u65b0\u6642\u306e\u65b9\u304c\u8aad\u307f\u8fbc\u307f\u6642\u3088\u308a\u3082\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u306b\u8a31\u5bb9\u7684\u3067\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306e\u30c7\u30fc\u30bf\u306f\u6700\u65b0\u7248\u3067\u4fdd\u305f\u308c\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\n\n* \u30ce\u30fc\u30c9\u304c\u843d\u3061\u305f\u3053\u3068\u3001\u3082\u3057\u304f\u306f\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306b\u3088\u3063\u3066\u65b0\u3057\u3044\u30ce\u30fc\u30c9\u304c\u4f5c\u6210\u3055\u308c\u305f\u6642\u306b\u3001\u65b0\u3057\u3044\u30ce\u30fc\u30c9\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u304c\u66f4\u65b0\u3055\u308c\u308b\u307e\u3067\u306f\u30a8\u30f3\u30c8\u30ea\u30fc\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u307e\u305b\u3093\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\u3068\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\u3092\u4f75\u7528\u3059\u308b\u3053\u3068\u3067\u3053\u306e\u554f\u984c\u3092\u7de9\u548c\u3067\u304d\u307e\u3059\u3002\n* \u66f8\u304d\u8fbc\u307e\u308c\u305f\u30c7\u30fc\u30bf\u306e\u5927\u90e8\u5206\u306f\u4e00\u5ea6\u3082\u8aad\u307f\u8fbc\u307e\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u306e\u30c7\u30fc\u30bf\u306fTTL\u306b\u3088\u3063\u3066\u5727\u7e2e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n#### \u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9 (\u30e9\u30a4\u30c8\u30d0\u30c3\u30af)\n\n<p align=\"center\">\n  <img src=\"images/rgSrvjG.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\n\u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9\u3067\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u3057\u307e\u3059:\n\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u3092\u8ffd\u52a0\u30fb\u66f4\u65b0\u3057\u307e\u3059\n* \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u3078\u306e\u66f8\u304d\u8fbc\u307f\u3092\u975e\u540c\u671f\u7684\u306b\u884c\u3046\u3053\u3068\u3067\u3001\u66f8\u304d\u8fbc\u307f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9\n\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u5185\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306b\u30d2\u30c3\u30c8\u3059\u308b\u524d\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u843d\u3061\u308b\u3068\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u8d77\u304d\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\u3084\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\u3088\u308a\u3082\u5b9f\u88c5\u304c\u8907\u96d1\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9\n\n<p align=\"center\">\n  <img src=\"images/kxtjqgE.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid</a></i>\n</p>\n\n\u671f\u9650\u5207\u308c\u3088\u308a\u3082\u524d\u306b\u3001\u76f4\u8fd1\u3067\u30a2\u30af\u30bb\u30b9\u3055\u308c\u305f\u5168\u3066\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30a8\u30f3\u30c8\u30ea\u3092\u81ea\u52d5\u7684\u306b\u66f4\u65b0\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3082\u3057\u3069\u306e\u30a2\u30a4\u30c6\u30e0\u304c\u5c06\u6765\u5fc5\u8981\u306b\u306a\u308b\u306e\u304b\u3092\u6b63\u78ba\u306b\u4e88\u6e2c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u306a\u3089\u3070\u3001\u30ea\u30fc\u30c9\u30b9\u30eb\u30fc\u3088\u308a\u3082\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u3092\u524a\u6e1b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9\n\n* \u3069\u306e\u30a2\u30a4\u30c6\u30e0\u304c\u5fc5\u8981\u306b\u306a\u308b\u304b\u306e\u4e88\u6e2c\u304c\u6b63\u78ba\u3067\u306a\u3044\u5834\u5408\u306b\u306f\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9\u304c\u306a\u3044\u65b9\u304c\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u306f\u826f\u3044\u3068\u3044\u3046\u7d50\u679c\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n### \u6b20\u70b9: \u30ad\u30e3\u30c3\u30b7\u30e5\n\n* [cache invalidation](https://en.wikipedia.org/wiki/Cache_algorithms)\u306a\u3069\u3092\u7528\u3044\u3066\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u771f\u306e\u30c7\u30fc\u30bf\u3068\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u9593\u306e\u4e00\u8cab\u6027\u3092\u4fdd\u3064\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n* Redis\u3084memcached\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u69cb\u6210\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n* Cache invalidation\u3082\u96e3\u3057\u3044\u3067\u3059\u304c\u305d\u308c\u306b\u52a0\u3048\u3066\u3001\u3044\u3064\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u66f4\u65b0\u3059\u308b\u304b\u3068\u3044\u3046\u8907\u96d1\u306a\u554f\u984c\u306b\u3082\u60a9\u307e\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [From cache to in-memory data grid](http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast)\n* [\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30b7\u30b9\u30c6\u30e0\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3](http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html)\n* [\u30b9\u30b1\u30fc\u30eb\u3067\u304d\u308b\u30b7\u30b9\u30c6\u30e0\u3092\u8a2d\u8a08\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3](http://lethain.com/introduction-to-architecting-systems-for-scale/)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3001\u53ef\u7528\u6027\u3001\u5b89\u5b9a\u6027\u3001\u30d1\u30bf\u30fc\u30f3](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n* [AWS ElastiCache\u306e\u30b9\u30c8\u30e9\u30c6\u30b8\u30fc](http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html)\n* [Wikipedia](https://en.wikipedia.org/wiki/Cache_(computing))\n\n## \u975e\u540c\u671f\u51e6\u7406\n\n<p align=\"center\">\n  <img src=\"images/54GYsSx.png\">\n  <br/>\n  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Source: Intro to architecting systems for scale</a></i>\n</p>\n\n\u975e\u540c\u671f\u306e\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306f\u3082\u3057\u3001\u9023\u7d9a\u7684\u306b\u884c\u308f\u308c\u308b\u3068\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u9593\u3092\u5727\u8feb\u3057\u3066\u3057\u307e\u3046\u3088\u3046\u306a\u91cd\u3044\u51e6\u7406\u3092\u5225\u3067\u51e6\u7406\u3059\u308b\u624b\u6cd5\u3067\u3059\u3002\u307e\u305f\u3001\u5b9a\u671f\u7684\u306b\u30c7\u30fc\u30bf\u3092\u96c6\u5408\u3055\u305b\u308b\u306a\u3069\u306e\u6642\u9593\u304c\u304b\u304b\u308b\u3088\u3046\u306a\u51e6\u7406\u3092\u524d\u3082\u3063\u3066\u51e6\u7406\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3082\u5f79\u7acb\u3061\u307e\u3059\u3002\n\n### \u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308a\u3001\u4fdd\u5b58\u3057\u3001\u914d\u4fe1\u3057\u307e\u3059\u3002\u3082\u3057\u3001\u51e6\u7406\u304c\u30a4\u30f3\u30e9\u30a4\u30f3\u3067\u884c\u3046\u306b\u306f\u9045\u3059\u304e\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u3092\u7528\u3044\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046:\n\n* \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30b8\u30e7\u30d6\u3092\u30ad\u30e5\u30fc\u306b\u914d\u4fe1\u3057\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u30b8\u30e7\u30d6\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u4f1d\u3048\u307e\u3059\u3002\n* \u30ef\u30fc\u30ab\u30fc\u304c\u30b8\u30e7\u30d6\u30ad\u30e5\u30fc\u304b\u3089\u53d7\u3051\u53d6\u3063\u3066\u3001\u51e6\u7406\u3092\u884c\u3044\u3001\u7d42\u4e86\u3057\u305f\u3089\u305d\u306e\u30b7\u30b0\u30ca\u30eb\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u30e6\u30fc\u30b6\u30fc\u306e\u51e6\u7406\u304c\u6b62\u307e\u308b\u3053\u3068\u306f\u306a\u304f\u3001\u30b8\u30e7\u30d6\u306f\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u51e6\u7406\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u9593\u306b\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001\u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3057\u305f\u304b\u306e\u3088\u3046\u306b\u898b\u305b\u308b\u305f\u3081\u306b\u5c0f\u898f\u6a21\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30c4\u30a4\u30fc\u30c8\u3092\u6295\u7a3f\u3059\u308b\u3068\u304d\u306b\u3001\u30c4\u30a4\u30fc\u30c8\u306f\u3059\u3050\u306b\u3042\u306a\u305f\u306e\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306b\u53cd\u6620\u3055\u308c\u305f\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u305d\u306e\u30c4\u30a4\u30fc\u30c8\u304c\u5b9f\u969b\u306b\u5168\u3066\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u306b\u914d\u4fe1\u3055\u308c\u308b\u307e\u3067\u306b\u306f\u3082\u3046\u5c11\u3057\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002\n\n**Redis** \u306f\u30b7\u30f3\u30d7\u30eb\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u4ef2\u4ecb\u3068\u3057\u3066\u306f\u3044\u3044\u3067\u3059\u304c\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5931\u308f\u308c\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n**RabbitMQ** \u306f\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u304c\u3001'AMQP'\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u5bfe\u5fdc\u3057\u3066\u3001\u81ea\u524d\u306e\u30ce\u30fc\u30c9\u3092\u7acb\u3066\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n**Amazon SQS** \u3068\u3044\u3046\u9078\u629e\u80a2\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u304c\u9ad8\u304f\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u91cd\u8907\u3057\u3066\u914d\u4fe1\u3055\u308c\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u30bf\u30b9\u30af\u30ad\u30e5\u30fc\n\n\u30bf\u30b9\u30af\u30ad\u30e5\u30fc\u306f\u30bf\u30b9\u30af\u3068\u305d\u306e\u95a2\u9023\u3059\u308b\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308a\u3001\u51e6\u7406\u3057\u305f\u4e0a\u3067\u305d\u306e\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u7ba1\u7406\u3092\u3067\u304d\u308b\u307b\u304b\u3001\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u3068\u3066\u3082\u91cd\u3044\u30b8\u30e7\u30d6\u3092\u3053\u306a\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n**Celery** \u306f\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3068python\u306e\u30b5\u30dd\u30fc\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc\n\n\u3082\u3057\u3001\u30ad\u30e5\u30fc\u304c\u62e1\u5927\u3057\u3059\u304e\u308b\u3068\u3001\u30e1\u30e2\u30ea\u30fc\u3088\u308a\u3082\u30ad\u30e5\u30fc\u306e\u65b9\u304c\u5927\u304d\u304f\u306a\u308a\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\u304c\u8d77\u3053\u308a\u3001\u30c7\u30a3\u30b9\u30af\u8aad\u307f\u51fa\u3057\u306b\u3064\u306a\u304c\u308a\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u4f4e\u4e0b\u3059\u308b\u3053\u3068\u306b\u3064\u306a\u304c\u308a\u307e\u3059\u3002[\u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)\u306f\u30ad\u30e5\u30fc\u30b5\u30a4\u30ba\u3092\u5236\u9650\u3059\u308b\u3053\u3068\u3067\u56de\u907f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u9ad8\u3044\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u78ba\u4fdd\u3057\u30ad\u30e5\u30fc\u306b\u3059\u3067\u306b\u3042\u308b\u30b8\u30e7\u30d6\u306b\u3064\u3044\u3066\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u6642\u9593\u3092\u77ed\u7e2e\u3067\u304d\u307e\u3059\u3002\u30ad\u30e5\u30fc\u304c\u3044\u3063\u3071\u3044\u306b\u306a\u308b\u3068\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u30b5\u30fc\u30d0\u30fc\u30d3\u30b8\u30fc\u3082\u3057\u304f\u306fHTTP 503\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u53d7\u3051\u53d6\u308a\u307e\u305f\u5f8c\u3067\u6642\u9593\u3092\u304a\u3044\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f[exponential backoff](https://en.wikipedia.org/wiki/Exponential_backoff)\u306a\u3069\u306b\u3088\u3063\u3066\u5f8c\u307b\u3069\u518d\u5ea6\u6642\u9593\u3092\u7f6e\u3044\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u6b20\u70b9: \u975e\u540c\u671f\u51e6\u7406\n\n* \u30ad\u30e5\u30fc\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u9045\u5ef6\u304c\u8d77\u3053\u308a\u3001\u8907\u96d1\u3055\u3082\u5897\u3059\u305f\u3081\u3001\u3042\u307e\u308a\u91cd\u304f\u306a\u3044\u8a08\u7b97\u51e6\u7406\u3084\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306b\u304a\u3044\u3066\u306f\u540c\u671f\u51e6\u7406\u306e\u65b9\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [It's all a numbers game](https://www.youtube.com/watch?v=1KRYH75wgy4)\n* [\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3057\u305f\u6642\u306b\u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc\u3092\u9069\u7528\u3059\u308b](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)\n* [Little's law](https://en.wikipedia.org/wiki/Little%27s_law)\n* [\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u3068\u30bf\u30b9\u30af\u30ad\u30e5\u30fc\u306e\u9055\u3044\u3068\u306f\uff1f](https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function)\n\n## \u901a\u4fe1\n\n<p align=\"center\">\n  <img src=\"images/5KeocQs.jpg\">\n  <br/>\n  <i><a href=http://www.escotal.com/osilayer.html>Source: OSI 7 layer model</a></i>\n</p>\n\n### Hypertext transfer protocol (HTTP)\n\nHTTP \u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b5\u30fc\u30d0\u30fc\u9593\u3067\u306e\u30c7\u30fc\u30bf\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3066\u8ee2\u9001\u3059\u308b\u305f\u3081\u306e\u624b\u6cd5\u3067\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u30fb\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u95a2\u308f\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30b5\u30fc\u30d0\u30fc\u306b\u6295\u3052\u3001\u30b5\u30fc\u30d0\u30fc\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u95a2\u4fc2\u3059\u308b\u30b3\u30f3\u30c6\u30f3\u30c4\u3068\u5b8c\u4e86\u30b9\u30c6\u30fc\u30bf\u30b9\u60c5\u5831\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002HTTP\u306f\u81ea\u5df1\u5b8c\u7d50\u3059\u308b\u306e\u3067\u3001\u9593\u306b\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3001\u30a8\u30f3\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3001\u5727\u7e2e\u306a\u3069\u306e\u3069\u3093\u306a\u4e2d\u9593\u30eb\u30fc\u30bf\u30fc\u304c\u5165\u3063\u3066\u3082\u52d5\u304f\u3088\u3046\u306b\u3067\u304d\u3066\u3044\u307e\u3059\u3002\n\n\u57fa\u672c\u7684\u306aHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u306fHTTP\u52d5\u8a5e(\u30e1\u30bd\u30c3\u30c9)\u3068\u30ea\u30bd\u30fc\u30b9(\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8)\u3067\u6210\u308a\u7acb\u3063\u3066\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u304c\u3088\u304f\u3042\u308bHTTP\u52d5\u8a5e\u3067\u3059\u3002:\n\n| \u52d5\u8a5e | \u8a73\u7d30 | \u51aa\u7b49\u6027* | \u30bb\u30fc\u30d5 | \u30ad\u30e3\u30c3\u30b7\u30e5\u3067\u304d\u308b\u304b |\n|---|---|---|---|---|\n| GET | \u30ea\u30bd\u30fc\u30b9\u3092\u8aad\u307f\u53d6\u308b | Yes | Yes | Yes |\n| POST | \u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3082\u3057\u304f\u306f\u30c7\u30fc\u30bf\u3092\u51e6\u7406\u3059\u308b\u30c8\u30ea\u30ac\u30fc | No | No | Yes \u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u65b0\u3057\u3044\u60c5\u5831\u3092\u542b\u3080\u5834\u5408 |\n| PUT | \u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\u3082\u3057\u304f\u306f\u5165\u308c\u66ff\u3048\u308b | Yes | No | No |\n| PATCH | \u30ea\u30bd\u30fc\u30b9\u3092\u90e8\u5206\u7684\u306b\u66f4\u65b0\u3059\u308b | No | No | Yes \u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u65b0\u3057\u3044\u60c5\u5831\u3092\u542b\u3080\u5834\u5408 |\n| DELETE | \u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3059\u308b | Yes | No | No |\n\n*\u4f55\u5ea6\u547c\u3093\u3067\u3082\u540c\u3058\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304f\u308b\u3053\u3068*\n\nHTTP\u306f**TCP** \u3084 **UDP** \u306a\u3069\u306e\u4f4e\u7d1a\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3042\u308b\u3002\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: HTTP\n\n* [HTTP\u3063\u3066\u306a\u306b?](https://www.nginx.com/resources/glossary/http/)\n* [HTTP \u3068 TCP\u306e\u9055\u3044](https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)\n* [PUT \u3068 PATCH\u306e\u9055\u3044](https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1)\n\n### \u4f1d\u9001\u5236\u5fa1\u30d7\u30ed\u30c8\u30b3\u30eb (TCP)\n\n<p align=\"center\">\n  <img src=\"images/JdAsdvG.jpg\">\n  <br/>\n  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Source: How to make a multiplayer game</a></i>\n</p>\n\nTCP\u306f[IP network](https://en.wikipedia.org/wiki/Internet_Protocol)\u306e\u4e0a\u3067\u6210\u308a\u7acb\u3064\u63a5\u7d9a\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\u63a5\u7d9a\u306f[handshake](https://en.wikipedia.org/wiki/Handshaking)\u306b\u3088\u3063\u3066\u958b\u59cb\u3001\u89e3\u9664\u3055\u308c\u307e\u3059\u3002\u5168\u3066\u306e\u9001\u4fe1\u3055\u308c\u305f\u30d1\u30b1\u30c3\u30c8\u306f\u6b20\u640d\u306a\u3057\u3067\u9001\u4fe1\u5148\u306b\u9001\u4fe1\u3055\u308c\u305f\u9806\u756a\u3067\u5230\u9054\u3059\u308b\u3088\u3046\u306b\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u307e\u3059:\n\n* \u30b7\u30fc\u30b1\u30f3\u30b9\u756a\u53f7\u3068[checksum fields](https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation)\u304c\u5168\u3066\u306e\u30d1\u30b1\u30c3\u30c8\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\n* [Acknowledgement](https://en.wikipedia.org/wiki/Acknowledgement_(data_networks))\u30d1\u30b1\u30c3\u30c8\u3068\u81ea\u52d5\u518d\u9001\u4fe1\n\n\u3082\u3057\u9001\u4fe1\u8005\u304c\u6b63\u3057\u3044\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u53d7\u3051\u53d6\u3089\u306a\u304b\u3063\u305f\u3068\u304d\u3001\u30d1\u30b1\u30c3\u30c8\u3092\u518d\u9001\u4fe1\u3057\u307e\u3059\u3002\u8907\u6570\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u304c\u3042\u3063\u305f\u3068\u304d\u3001\u63a5\u7d9a\u306f\u89e3\u9664\u3055\u308c\u307e\u3059\u3002TCP \u306f[\u30d5\u30ed\u30fc\u5236\u5fa1](https://en.wikipedia.org/wiki/Flow_control_(data)) \u3068 [\u8f3b\u8f33\u5236\u5fa1](https://en.wikipedia.org/wiki/Network_congestion#Congestion_control)\u3082\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u6a5f\u80fd\u306b\u3088\u3063\u3066\u901f\u5ea6\u306f\u4f4e\u4e0b\u3057\u3001\u4e00\u822c\u7684\u306bUDP\u3088\u308a\u3082\u975e\u52b9\u7387\u306a\u8ee2\u9001\u624b\u6bb5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30cf\u30a4\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u3001\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u306f\u304b\u306a\u308a\u5927\u304d\u306a\u6570\u306eTCP\u63a5\u7d9a\u3092\u958b\u3044\u3066\u304a\u304f\u3053\u3068\u304c\u3042\u308a\u3001\u305d\u306e\u3053\u3068\u3067\u30e1\u30e2\u30ea\u30fc\u4f7f\u7528\u304c\u5727\u8feb\u3055\u308c\u307e\u3059\u3002\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30b9\u30ec\u30c3\u30c9\u3068\u4f8b\u3048\u3070[memcached](#memcached) \u30b5\u30fc\u30d0\u30fc\u306e\u9593\u3067\u591a\u6570\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u4fdd\u3063\u3066\u304a\u304f\u3053\u3068\u306f\u9ad8\u304f\u3064\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u53ef\u80fd\u306a\u3068\u3053\u308d\u3067\u306fUDP\u306b\u5207\u308a\u66ff\u3048\u308b\u3060\u3051\u3067\u306a\u304f[\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30d7\u30fc\u30ea\u30f3\u30b0](https://en.wikipedia.org/wiki/Connection_pool)\u306a\u3069\u3082\u5f79\u7acb\u3064\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nTCP\u306f\u9ad8\u3044\u4f9d\u5b58\u6027\u3092\u8981\u3057\u3001\u6642\u9593\u5236\u7d04\u304c\u53b3\u3057\u304f\u306a\u3044\u3082\u306e\u306b\u9069\u3057\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u60c5\u5831\u3001SMTP\u3001FTP\u3084SSH\u306a\u3069\u306e\u4f8b\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u6642\u306bUDP\u3088\u308a\u3082TCP\u3092\u4f7f\u3046\u3068\u3044\u3044\u3067\u3057\u3087\u3046:\n\n* \u5168\u3066\u306e\u30c7\u30fc\u30bf\u304c\u6b20\u640d\u3059\u308b\u3053\u3068\u306a\u3057\u306b\u5c4a\u3044\u3066\u307b\u3057\u3044\n* \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u306e\u6700\u9069\u306a\u81ea\u52d5\u63a8\u6e2c\u3092\u3057\u3066\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u305f\u3044\n\n### \u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30d7\u30ed\u30c8\u30b3\u30eb (UDP)\n\n<p align=\"center\">\n  <img src=\"images/yzDrJtA.jpg\">\n  <br/>\n  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Source: How to make a multiplayer game</a></i>\n</p>\n\nUDP\u306f\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30ec\u30b9\u3067\u3059\u3002\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\uff08\u30d1\u30b1\u30c3\u30c8\u306e\u3088\u3046\u306a\u3082\u306e\uff09\u306f\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30ec\u30d9\u30eb\u3067\u306e\u4fdd\u8a3c\u3057\u304b\u3055\u308c\u307e\u305b\u3093\u3002\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u306f\u9806\u4e0d\u540c\u3067\u53d7\u3051\u53d6\u308a\u5148\u306b\u5230\u7740\u3057\u305f\u308a\u305d\u3082\u305d\u3082\u7740\u304b\u306a\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u3002UDP\u306f\u8f3b\u8f33\u5236\u5fa1\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u305b\u3093\u3002TCP\u306b\u304a\u3044\u3066\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3053\u308c\u3089\u306e\u4fdd\u8a3c\u304c\u306a\u3044\u305f\u3081\u3001UDP\u306f\u4e00\u822c\u7684\u306b\u3001TCP\u3088\u308a\u3082\u52b9\u7387\u7684\u3067\u3059\u3002\n\nUDP\u306f\u30b5\u30d6\u30cd\u30c3\u30c8\u4e0a\u306e\u3059\u3079\u3066\u306e\u6a5f\u5668\u306b\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f[DHCP](https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol) \u306b\u304a\u3044\u3066\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u307e\u3060IP\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001IP\u30a2\u30c9\u30ec\u30b9\u3092\u5fc5\u8981\u3068\u3059\u308bTCP\u306b\u3088\u308b\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u3067\u304d\u306a\u3044\u304b\u3089\u3067\u3059\u3002\n\nUDP\u306f\u4fe1\u983c\u6027\u306e\u9762\u3067\u306f\u52a3\u308a\u307e\u3059\u304c\u3001VoIP\u3001\u30d3\u30c7\u30aa\u30c1\u30e3\u30c3\u30c8\u3001\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u3084\u540c\u6642\u901a\u4fe1\u30de\u30eb\u30c1\u30d7\u30ec\u30a4\u30e4\u30fc\u30b2\u30fc\u30e0\u306a\u3069\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u6027\u304c\u91cd\u8996\u3055\u308c\u308b\u6642\u306b\u306f\u3068\u3066\u3082\u52b9\u679c\u7684\u3067\u3059\u3002\n\nTCP\u3088\u308a\u3082UDP\u3092\u4f7f\u3046\u306e\u306f:\n\n* \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u3092\u6700\u4f4e\u9650\u306b\u6291\u3048\u305f\u3044\u6642\n* \u30c7\u30fc\u30bf\u6b20\u640d\u3088\u308a\u3082\u3001\u30c7\u30fc\u30bf\u9045\u5ef6\u3092\u91cd\u8996\u3059\u308b\u3068\u304d\n* \u30a8\u30e9\u30fc\u4fee\u6b63\u3092\u81ea\u524d\u3067\u5b9f\u88c5\u3057\u305f\u3044\u3068\u304d\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: TCP \u3068 UDP\n\n* [\u30b2\u30fc\u30e0\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u305f\u3081\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af](http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/)\n* [TCP \u3068 UDP \u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u4e3b\u306a\u9055\u3044](http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/)\n* [TCP \u3068 UDP\u306e\u9055\u3044](http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp)\n* [Transmission control protocol](https://en.wikipedia.org/wiki/Transmission_Control_Protocol)\n* [User datagram protocol](https://en.wikipedia.org/wiki/User_Datagram_Protocol)\n* [Facebook\u306e\u30e1\u30e0\u30ad\u30e3\u30c3\u30b7\u30e5\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0](http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf)\n\n### \u9060\u9694\u624b\u7d9a\u547c\u51fa (RPC)\n\n<p align=\"center\">\n  <img src=\"images/iF4Mkb5.png\">\n  <br/>\n  <i><a href=http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview>Source: Crack the system design interview</a></i>\n</p>\n\nRPC\u3067\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30ea\u30e2\u30fc\u30c8\u30b5\u30fc\u30d0\u30fc\u306a\u3069\u306e\u7570\u306a\u308b\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u3067\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u304c\u51e6\u7406\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u30b3\u30fc\u30eb\u306e\u3088\u3046\u306b\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u30b5\u30fc\u30d0\u30fc\u306b\u3069\u306e\u3088\u3046\u306b\u901a\u4fe1\u3059\u308b\u304b\u3068\u3044\u3046\u8a73\u7d30\u3092\u7701\u3044\u305f\u72b6\u614b\u3067\u30b3\u30fc\u30c9\u304c\u66f8\u304b\u308c\u307e\u3059\u3002\u30ea\u30e2\u30fc\u30c8\u306e\u30b3\u30fc\u30eb\u306f\u666e\u901a\u3001\u30ed\u30fc\u30ab\u30eb\u306e\u30b3\u30fc\u30eb\u3088\u308a\u3082\u9045\u304f\u3001\u4fe1\u983c\u6027\u306b\u6b20\u3051\u308b\u305f\u3081\u3001RPC\u30b3\u30fc\u30eb\u3092\u30ed\u30fc\u30ab\u30eb\u30b3\u30fc\u30eb\u3068\u533a\u5225\u3055\u305b\u3066\u304a\u304f\u3053\u3068\u304c\u597d\u307e\u3057\u3044\u3067\u3057\u3087\u3046\u3002\u4eba\u6c17\u306eRPC\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u4ee5\u4e0b\u3067\u3059\u3002[Protobuf](https://developers.google.com/protocol-buffers/)\u3001 [Thrift](https://thrift.apache.org/)\u3001[Avro](https://avro.apache.org/docs/current/)\n\nRPC \u306f \u30ea\u30af\u30a8\u30b9\u30c8\u30ec\u30b9\u30dd\u30f3\u30b9\u30d7\u30ed\u30c8\u30b3\u30eb:\n\n* **\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0** - \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b9\u30bf\u30d6\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u30b3\u30fc\u30eb\u306e\u3088\u3046\u306b\u30b9\u30bf\u30c3\u30af\u3078\u3068\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\n* **\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b9\u30bf\u30d6\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc** - \u30d7\u30ed\u30b7\u30fc\u30b8\u30e3ID\u3068\u30a2\u30fc\u30ae\u30e5\u30e1\u30f3\u30c8\u3092\u30d1\u30c3\u30af\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u3057\u307e\u3059\u3002\n* **\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u901a\u4fe1\u30e2\u30b8\u30e5\u30fc\u30eb** - OS\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u30b5\u30fc\u30d0\u30fc\u3078\u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u307e\u3059\u3002\n* **\u30b5\u30fc\u30d0\u30fc\u901a\u4fe1\u30e2\u30b8\u30e5\u30fc\u30eb** - OS\u304c\u53d7\u3051\u53d6\u3063\u305f\u30d1\u30b1\u30c3\u30c8\u3092\u30b5\u30fc\u30d0\u30fc\u30b9\u30bf\u30d6\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u306b\u53d7\u3051\u6e21\u3057\u307e\u3059\u3002\n* **\u30b5\u30fc\u30d0\u30fc\u30b9\u30bf\u30d6\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc** -  \u7d50\u679c\u3092\u5c55\u958b\u3057\u3001\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fcID\u306b\u30de\u30c3\u30c1\u3059\u308b\u30b5\u30fc\u30d0\u30fc\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u3092\u547c\u3073\u51fa\u3057\u3001\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002\n* \u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u4e0a\u8a18\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u9006\u9806\u3067\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002\n\nSample RPC calls:\n\n```\nGET /someoperation?data=anId\n\nPOST /anotheroperation\n{\n  \"data\":\"anId\";\n  \"anotherdata\": \"another value\"\n}\n```\n\nRPC\u306f\u632f\u308b\u821e\u3044\u3092\u516c\u958b\u3059\u308b\u3053\u3068\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u307e\u3059\u3002RPC\u306f\u5185\u90e8\u901a\u4fe1\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u7406\u7531\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u4f7f\u7528\u3059\u308b\u72b6\u6cc1\u306b\u5408\u308f\u305b\u3066\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30eb\u3092\u81ea\u4f5c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u3089\u3067\u3059\u3002\n\n\u30cd\u30a4\u30c6\u30a3\u30d6\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc (aka SDK) \u3092\u547c\u3076\u306e\u306f\u4ee5\u4e0b\u306e\u6642:\n\n* \u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u77e5\u3063\u3066\u3044\u308b\u6642\n* \u30ed\u30b8\u30c3\u30af\u304c\u3069\u306e\u3088\u3046\u306b\u30a2\u30af\u30bb\u30b9\u3055\u308c\u308b\u306e\u304b\u3092\u7ba1\u7406\u3057\u305f\u3044\u3068\u304d\n* \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u5916\u3067\u30a8\u30e9\u30fc\u304c\u3069\u306e\u3088\u3046\u306b\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3055\u308c\u308b\u304b\u3092\u7ba1\u7406\u3057\u305f\u3044\u6642\n* \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3068\u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u30fc\u30a8\u30af\u30b9\u30da\u30ea\u30a8\u30f3\u30b9\u304c\u6700\u512a\u5148\u306e\u6642\n\n**REST** \u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u5f93\u3046HTTP API\u306f\u30d1\u30d6\u30ea\u30c3\u30afAPI\u306b\u304a\u3044\u3066\u3088\u304f\u7528\u3044\u3089\u308c\u307e\u3059\u3002\n\n#### \u6b20\u70b9: RPC\n\n* RPC\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u306f\u30b5\u30fc\u30d3\u30b9\u5b9f\u88c5\u306b\u3088\u308a\u53b3\u5bc6\u306b\u5de6\u53f3\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n* \u65b0\u3057\u3044\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3001\u4f7f\u7528\u4f8b\u304c\u3042\u308b\u305f\u3073\u306b\u65b0\u3057\u304fAPI\u304c\u5b9a\u7fa9\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n* RPC\u3092\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n* \u65e2\u5b58\u306e\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u3092\u305d\u306e\u307e\u307e\u4f7f\u3063\u3066\u30b5\u30fc\u30d3\u30b9\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u3001[Squid](http://www.squid-cache.org/)\u306a\u3069\u306e\u30b5\u30fc\u30d0\u30fc\u306b[RPC\u30b3\u30fc\u30eb\u304c\u6b63\u3057\u304f\u30ad\u30e3\u30c3\u30b7\u30e5](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/) \u3055\u308c\u308b\u3088\u3046\u306b\u8ffd\u52a0\u3067\u9aa8\u3092\u6298\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n### Representational state transfer (REST)\n\nREST\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30b5\u30fc\u30d0\u30fc\u306b\u3088\u3063\u3066\u30de\u30cd\u30fc\u30b8\u3055\u308c\u308b\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u51e6\u7406\u3092\u884c\u3046\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30fb\u30b5\u30fc\u30d0\u30fc\u30e2\u30c7\u30eb\u3092\u652f\u6301\u3059\u308b\u30a2\u30fc\u30ad\u30c6\u30ad\u30c1\u30e3\u30b9\u30bf\u30a4\u30eb\u3067\u3059\u3002\u30b5\u30fc\u30d0\u30fc\u306f\u64cd\u4f5c\u3067\u304d\u308b\u3082\u3057\u304f\u306f\u65b0\u3057\u3044\u30ea\u30bd\u30fc\u30b9\u30ec\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306a\u30ea\u30bd\u30fc\u30b9\u3084\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u30ec\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u901a\u4fe1\u306f\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u53ef\u80fd\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\nRESTful \u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u306f\u6b21\u306e\u56db\u3064\u306e\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059:\n\n* **\u7279\u5fb4\u7684\u306a\u30ea\u30bd\u30fc\u30b9 (URI in HTTP)** - \u3069\u306e\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u3042\u3063\u3066\u3082\u540c\u3058URI\u3092\u4f7f\u3046\u3002\n* **HTTP\u52d5\u8a5e\u306b\u3088\u3063\u3066\u5909\u308f\u308b (Verbs in HTTP)** - \u52d5\u8a5e\u3001\u30d8\u30c3\u30c0\u30fc\u3001\u30dc\u30c7\u30a3\u3092\u4f7f\u3046\n* **\u81ea\u5df1\u8aac\u660e\u7684\u306a\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8 (status response in HTTP)** - \u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u4f7f\u3044\u3001\u65b0\u3057\u304f\u4f5c\u3063\u305f\u308a\u3057\u306a\u3044\u3053\u3068\u3002\n* **[HATEOAS](http://restcookbook.com/Basics/hateoas/) (HTML interface for HTTP)** - \u81ea\u5206\u306eweb\u30b5\u30fc\u30d3\u30b9\u304c\u30d6\u30e9\u30a6\u30b6\u3067\u5b8c\u5168\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3053\u3068\u3002\n\n\u30b5\u30f3\u30d7\u30eb REST \u30b3\u30fc\u30eb:\n\n```\nGET /someresources/anId\n\nPUT /someresources/anId\n{\"anotherdata\": \"another value\"}\n```\n\nREST\u306f\u30c7\u30fc\u30bf\u3092\u516c\u958b\u3059\u308b\u3053\u3068\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u307e\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b5\u30fc\u30d0\u30fc\u306e\u30ab\u30c3\u30d7\u30ea\u30f3\u30b0\u3092\u6700\u5c0f\u9650\u306b\u3059\u308b\u3082\u306e\u3067\u3001\u30d1\u30d6\u30ea\u30c3\u30afAPI\u306a\u3069\u306b\u3088\u304f\u7528\u3044\u3089\u308c\u307e\u3059\u3002REST\u306fURI\u3001 [representation through headers](https://github.com/for-GET/know-your-http-well/blob/master/headers.md)\u3001\u305d\u3057\u3066\u3001GET\u3001POST\u3001PUT\u3001 DELETE\u3001PATCH\u306a\u3069\u306eHTTP\u52d5\u8a5e\u7b49\u306e\u3088\u308a\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u3067\u7d71\u4e00\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u307e\u3059\u3002\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3067\u3042\u308b\u306e\u3067REST\u306f\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3084\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30cb\u30f3\u30b0\u306b\u6700\u9069\u3067\u3059\u3002\n\n#### \u6b20\u70b9: REST\n\n* REST\u306f\u30c7\u30fc\u30bf\u516c\u958b\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u308b\u306e\u3067\u3001\u30ea\u30bd\u30fc\u30b9\u304c\u81ea\u7136\u306b\u6574\u7406\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u308a\u3001\u30b7\u30f3\u30d7\u30eb\u306a\u30d2\u30a8\u30e9\u30eb\u30ad\u30fc\u3067\u8868\u305b\u3089\u308c\u306a\u3044\u6642\u306b\u306f\u3088\u3044\u9078\u629e\u80a2\u3068\u306f\u8a00\u3048\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u3001\u3068\u3042\u308b\u30a4\u30d9\u30f3\u30c8\u306e\u30bb\u30c3\u30c8\u306b\u30de\u30c3\u30c1\u3059\u308b\u3059\u3079\u3066\u306e\u66f4\u65b0\u60c5\u5831\u3092\u8fd4\u3059\u3068\u8a00\u3063\u305f\u51e6\u7406\u306f\u7c21\u5358\u306b\u306f\u30d1\u30b9\u3067\u8868\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002REST\u3067\u306f\u3001URI\u30d1\u30b9\u3001\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u3001\u305d\u3057\u3066\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306a\u3069\u306b\u3088\u3063\u3066\u5b9f\u88c5\u3055\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3057\u3087\u3046\u3002\n* REST\u306f\u5c11\u6570\u306e\u52d5\u8a5e\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059(GET\u3001POST\u3001PUT\u3001DELETE\u3001\u305d\u3057\u3066 PATCH) \u304c\u6642\u306b\u306f\u4f7f\u3044\u305f\u3044\u4e8b\u4f8b\u306b\u5408\u308f\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u671f\u9650\u306e\u5207\u308c\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30a2\u30fc\u30ab\u30a4\u30d6\u306b\u79fb\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u306f\u3053\u308c\u3089\u306e\u52d5\u8a5e\u306e\u4e2d\u306b\u306f\u7dba\u9e97\u306b\u306f\u30d5\u30a3\u30c3\u30c8\u3057\u307e\u305b\u3093\u3002\n* \u30cd\u30b9\u30c8\u3055\u308c\u305f\u30d2\u30a8\u30e9\u30eb\u30ad\u30fc\u306e\u4e2d\u306b\u3042\u308b\u30ea\u30bd\u30fc\u30b9\u3092\u3068\u3063\u3066\u304f\u308b\u306e\u306f\u30b7\u30f3\u30b0\u30eb\u30d3\u30e5\u30fc\u3092\u63cf\u753b\u3059\u308b\u306e\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b5\u30fc\u30d0\u30fc\u9593\u3067\u6570\u56de\u3084\u308a\u3068\u308a\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u4f8b\u3068\u3057\u3066\u3001\u30d6\u30ed\u30b0\u30a8\u30f3\u30c8\u30ea\u30fc\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3068\u305d\u308c\u306b\u5bfe\u3059\u308b\u30b3\u30e1\u30f3\u30c8\u3092\u8868\u793a\u3059\u308b\u5834\u5408\u306a\u3069\u3067\u3059\u3002\u69d8\u3005\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u74b0\u5883\u3067\u52d5\u4f5c\u3059\u308b\u53ef\u80fd\u6027\u304c\u8003\u3048\u3089\u308c\u308b\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3044\u3066\u306f\u3053\u306e\u3088\u3046\u306a\u8907\u6570\u306e\u3084\u308a\u53d6\u308a\u306f\u597d\u307e\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\n* \u6642\u304c\u7d4c\u3064\u306b\u3064\u308c\u3066\u3001API\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u3088\u308a\u591a\u304f\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u4e0e\u3048\u3089\u308c\u3066\u3001\u53e4\u3044\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u3059\u3067\u306b\u3044\u3089\u306a\u3044\u3082\u306e\u3082\u542b\u3081\u3066\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u3053\u3068\u3067\u3001\u30da\u30a4\u30ed\u30fc\u30c9\u304c\u5927\u304d\u304f\u306a\u308a\u3059\u304e\u3066\u3001\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u3082\u62e1\u5927\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n### RPC\u3068REST\u6bd4\u8f03\n\n| Operation | RPC | REST |\n|---|---|---|\n| \u30b5\u30a4\u30f3\u30a2\u30c3\u30d7\t| **POST** /signup | **POST** /persons |\n| \u30ea\u30b6\u30a4\u30f3\t| **POST** /resign<br/>{<br/>\"personid\": \"1234\"<br/>} | **DELETE** /persons/1234 |\n| Person\u8aad\u307f\u8fbc\u307f | **GET** /readPerson?personid=1234 | **GET** /persons/1234 |\n| Person\u306e\u30a2\u30a4\u30c6\u30e0\u30ea\u30b9\u30c8\u8aad\u307f\u8fbc\u307f | **GET** /readUsersItemsList?personid=1234 | **GET** /persons/1234/items |\n| Person\u306e\u30a2\u30a4\u30c6\u30e0\u3078\u306e\u30a2\u30a4\u30c6\u30e0\u8ffd\u52a0 | **POST** /addItemToUsersItemsList<br/>{<br/>\"personid\": \"1234\";<br/>\"itemid\": \"456\"<br/>} | **POST** /persons/1234/items<br/>{<br/>\"itemid\": \"456\"<br/>} |\n| \u30a2\u30a4\u30c6\u30e0\u66f4\u65b0\t| **POST** /modifyItem<br/>{<br/>\"itemid\": \"456\";<br/>\"key\": \"value\"<br/>} | **PUT** /items/456<br/>{<br/>\"key\": \"value\"<br/>} |\n| \u30a2\u30a4\u30c6\u30e0\u524a\u9664 | **POST** /removeItem<br/>{<br/>\"itemid\": \"456\"<br/>} | **DELETE** /items/456 |\n\n<p align=\"center\">\n  <i><a href=https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/>Source: Do you really know why you prefer REST over RPC</a></i>\n</p>\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: REST \u3068 RPC\n\n* [Do you really know why you prefer REST over RPC](https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/)\n* [When are RPC-ish approaches more appropriate than REST?](http://programmers.stackexchange.com/a/181186)\n* [REST vs JSON-RPC](http://stackoverflow.com/questions/15056878/rest-vs-json-rpc)\n* [Debunking the myths of RPC and REST](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/)\n* [What are the drawbacks of using REST](https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs)\n* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n* [Thrift](https://code.facebook.com/posts/1468950976659943/)\n* [Why REST for internal use and not RPC](http://arstechnica.com/civis/viewtopic.php?t=1190508)\n\n## \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\n\n\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u66f4\u65b0\u304c\u5fc5\u8981\u3067\u3059\u3002[contributing](#contributing)\u3057\u3066\u304f\u3060\u3055\u3044\uff01\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306f\u5e45\u5e83\u3044\u30c8\u30d4\u30c3\u30af\u3067\u3059\u3002\u5341\u5206\u306a\u7d4c\u9a13\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5206\u91ce\u306e\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u304c\u306a\u304f\u3066\u3082\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u77e5\u8b58\u3092\u8981\u3059\u308b\u8077\u306b\u5fdc\u52df\u3059\u308b\u306e\u3067\u306a\u3044\u9650\u308a\u3001\u57fa\u672c\u4ee5\u4e0a\u306e\u3053\u3068\u3092\u77e5\u308b\u5fc5\u8981\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n* \u60c5\u5831\u4f1d\u9054\u3001\u4fdd\u5b58\u306b\u304a\u3051\u308b\u6697\u53f7\u5316\n* [XSS](https://en.wikipedia.org/wiki/Cross-site_scripting) \u3084 [SQL injection](https://en.wikipedia.org/wiki/SQL_injection)\u3092\u9632\u3050\u305f\u3081\u306b\u3001\u5168\u3066\u306e\u30e6\u30fc\u30b6\u30fc\u5165\u529b\u3082\u3057\u304f\u306f\u30e6\u30fc\u30b6\u30fc\u306b\u9732\u51fa\u3055\u308c\u308b\u5165\u529b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u30b5\u30cb\u30bf\u30a4\u30ba\u3059\u308b\n* SQL injection\u3092\u9632\u3050\u305f\u3081\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3055\u308c\u305f\u30af\u30a8\u30ea\u3092\u7528\u3044\u308b\u3002\n* [least privilege](https://en.wikipedia.org/wiki/Principle_of_least_privilege)\u306e\u539f\u7406\u3092\u7528\u3044\u308b\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:\n\n* [\u958b\u767a\u8005\u306e\u305f\u3081\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ac\u30a4\u30c9](https://github.com/FallibleInc/security-guide-for-developers)\n* [OWASP top ten](https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet)\n\n## \u88dc\u907a\n\n\u6697\u7b97\u3067\u3001\u63a8\u8a08\u5024\u3092\u6c42\u3081\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u3082\u6642\u306b\u306f\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30c7\u30a3\u30b9\u30af\u304b\u3089100\u679a\u30a4\u30e1\u30fc\u30b8\u5206\u306e\u30b5\u30e0\u30cd\u30a4\u30eb\u3092\u4f5c\u308b\u6642\u9593\u3092\u6c42\u3081\u305f\u308a\u3001\u305d\u306e\u6642\u306b\u3069\u308c\u3060\u3051\u30c7\u30a3\u30b9\u30af\u30e1\u30e2\u30ea\u30fc\u304c\u6d88\u8cbb\u3055\u308c\u308b\u304b\u306a\u3069\u306e\u5024\u3067\u3059\u3002**2\u306e\u4e57\u6570\u8868** \u3068 **\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024** \u306f\u826f\u3044\u53c2\u8003\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n### 2\u306e\u4e57\u6570\u8868\n\n```\n\u4e57\u6570           \u53b3\u5bc6\u306a\u5024         \u7d04        Bytes\n---------------------------------------------------------------\n7                             128\n8                             256\n10                           1024   1 thousand           1 KB\n16                         65,536                       64 KB\n20                      1,048,576   1 million            1 MB\n30                  1,073,741,824   1 billion            1 GB\n32                  4,294,967,296                        4 GB\n40              1,099,511,627,776   1 trillion           1 TB\n```\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:\n\n* [2\u306e\u4e57\u6570\u8868](https://en.wikipedia.org/wiki/Power_of_two)\n\n### \u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024\n\n```\nLatency Comparison Numbers\n--------------------------\nL1 cache reference                           0.5 ns\nBranch mispredict                            5   ns\nL2 cache reference                           7   ns                      14x L1 cache\nMutex lock/unlock                           25   ns\nMain memory reference                      100   ns                      20x L2 cache, 200x L1 cache\nCompress 1K bytes with Zippy            10,000   ns       10 us\nSend 1 KB bytes over 1 Gbps network     10,000   ns       10 us\nRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD\nRead 1 MB sequentially from memory     250,000   ns      250 us\nRound trip within same datacenter      500,000   ns      500 us\nRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory\nDisk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip\nRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD\nRead 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD\nSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms\n\nNotes\n-----\n1 ns = 10^-9 seconds\n1 us = 10^-6 seconds = 1,000 ns\n1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns\n```\n\n\u4e0a\u8a18\u8868\u306b\u57fa\u3065\u3044\u305f\u5f79\u306b\u7acb\u3064\u6570\u5024:\n\n* \u30c7\u30a3\u30b9\u30af\u304b\u3089\u306e\u9023\u7d9a\u8aad\u307f\u53d6\u308a\u901f\u5ea6 30 MB/s\n* 1 Gbps Ethernet\u304b\u3089\u306e\u9023\u7d9a\u8aad\u307f\u53d6\u308a\u901f\u5ea6\u3000100 MB/s\n* SSD\u304b\u3089\u306e\u9023\u7d9a\u8aad\u307f\u53d6\u308a\u901f\u5ea6 1 GB/s\n* main memory\u304b\u3089\u306e\u9023\u7d9a\u8aad\u307f\u53d6\u308a\u901f\u5ea6 4 GB/s\n* 1\u79d2\u3067\u5730\u74036-7\u5468\u3067\u304d\u308b\n* 1\u79d2\u3067\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u30682000\u5468\u3084\u308a\u3068\u308a\u3067\u304d\u308b\n\n#### \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u306e\u8996\u899a\u7684\u8868\n\n![](https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67)\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:\n\n* [\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024 - 1](https://gist.github.com/jboner/2841832)\n* [\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024 - 2](https://gist.github.com/hellerbarde/2843375)\n* [Designs, lessons, and advice from building large distributed systems](http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf)\n* [Software Engineering Advice from Building Large-Scale Distributed Systems](https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf)\n\n### \u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c\n\n> \u983b\u51fa\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u3068\u305d\u306e\u89e3\u7b54\u3078\u306e\u30ea\u30f3\u30af\n\n| \u8cea\u554f | \u89e3\u7b54 |\n|---|---|\n| Dropbox\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u540c\u671f\u30b5\u30fc\u30d3\u30b9\u3092\u8a2d\u8a08\u3059\u308b | [youtube.com](https://www.youtube.com/watch?v=PE4gwstWhmc) |\n| Google\u306e\u3088\u3046\u306a\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u306e\u8a2d\u8a08 | [queue.acm.org](http://queue.acm.org/detail.cfm?id=988407)<br/>[stackexchange.com](http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search)<br/>[ardendertat.com](http://www.ardendertat.com/2012/01/11/implementing-search-engines/)<br/>[stanford.edu](http://infolab.stanford.edu/~backrub/google.html) |\n| Google\u306e\u3088\u3046\u306a\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306aweb\u30af\u30ed\u30fc\u30e9\u30fc\u306e\u8a2d\u8a08 | [quora.com](https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch) |\n| Google docs\u306e\u8a2d\u8a08 | [code.google.com](https://code.google.com/p/google-mobwrite/)<br/>[neil.fraser.name](https://neil.fraser.name/writing/sync/) |\n| Redis\u306e\u3088\u3046\u306a\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306e\u8a2d\u8a08 | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |\n| Memcached\u306e\u3088\u3046\u306a\u30ad\u30e3\u30c3\u30b7\u30e5\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08 | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |\n| Amazon\u306e\u3088\u3046\u306a\u30ec\u30b3\u30e1\u30f3\u30c7\u30fc\u30b7\u30e7\u30f3\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08 | [hulu.com](http://tech.hulu.com/blog/2011/09/19/recommendation-system.html)<br/>[ijcai13.org](http://ijcai13.org/files/tutorial_slides/td3.pdf) |\n| Bitly\u306e\u3088\u3046\u306aURL\u77ed\u7e2e\u30b5\u30fc\u30d3\u30b9\u306e\u8a2d\u8a08 | [n00tc0d3r.blogspot.com](http://n00tc0d3r.blogspot.com/) |\n| WhatsApp\u306e\u3088\u3046\u306a\u30c1\u30e3\u30c3\u30c8\u30a2\u30d7\u30ea\u306e\u8a2d\u8a08 | [highscalability.com](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html)\n| Instagram\u306e\u3088\u3046\u306a\u5199\u771f\u5171\u6709\u30b5\u30fc\u30d3\u30b9\u306e\u8a2d\u8a08 | [highscalability.com](http://highscalability.com/flickr-architecture)<br/>[highscalability.com](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html) |\n| Facebook\u30cb\u30e5\u30fc\u30b9\u30d5\u30a3\u30fc\u30c9\u306e\u8a2d\u8a08 | [quora.com](http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed)<br/>[quora.com](http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed)<br/>[slideshare.net](http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture) |\n| Facebook\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306e\u8a2d\u8a08 | [facebook.com](https://www.facebook.com/note.php?note_id=10150468255628920)<br/>[highscalability.com](http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html) |\n| Facebook\u30c1\u30e3\u30c3\u30c8\u306e\u8a2d\u8a08 | [erlang-factory.com](http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf)<br/>[facebook.com](https://www.facebook.com/note.php?note_id=14218138919&id=9445547199&index=0) |\n| Facebook\u306e\u3088\u3046\u306agraph\u691c\u7d22\u306e\u8a2d\u8a08 | [facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920) |\n| CloudFlare\u306e\u3088\u3046\u306aCDN\u306e\u8a2d\u8a08 | [cmu.edu](http://repository.cmu.edu/cgi/viewcontent.cgi?article=2112&context=compsci) |\n| Twitter\u306e\u30c8\u30ec\u30f3\u30c9\u6a5f\u80fd\u306e\u8a2d\u8a08 | [michael-noll.com](http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/)<br/>[snikolov .wordpress.com](http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/) |\n| \u30e9\u30f3\u30c0\u30e0ID\u767a\u884c\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08 | [blog.twitter.com](https://blog.twitter.com/2010/announcing-snowflake)<br/>[github.com](https://github.com/twitter/snowflake/) |\n| \u4e00\u5b9a\u306e\u30a4\u30f3\u30bf\u30fc\u30d0\u30eb\u6642\u9593\u3067\u306e\u4e0a\u4f4dk\u4ef6\u3092\u8fd4\u3059 | [ucsb.edu](https://icmi.cs.ucsb.edu/research/tech_reports/reports/2005-23.pdf)<br/>[wpi.edu](http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf) |\n| \u8907\u6570\u306e\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u304b\u3089\u30c7\u30fc\u30bf\u3092\u914d\u4fe1\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u8a2d\u8a08 | [highscalability.com](http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html) |\n| \u30aa\u30f3\u30e9\u30a4\u30f3\u306e\u8907\u6570\u30d7\u30ec\u30a4\u30e4\u30fc\u30ab\u30fc\u30c9\u30b2\u30fc\u30e0\u306e\u8a2d\u8a08 | [indieflashblog.com](https://web.archive.org/web/20180929181117/http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html)<br/>[buildnewgames.com](http://buildnewgames.com/real-time-multiplayer/) |\n| \u30ac\u30fc\u30d9\u30c3\u30b8\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08 | [stuffwithstuff.com](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)<br/>[washington.edu](http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf) |\n| \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u4f8b\u984c\u3092\u8ffd\u52a0\u3059\u308b | [Contribute](#contributing) |\n\n### \u5b9f\u4e16\u754c\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n\n> \u4e16\u306e\u4e2d\u306e\u30b7\u30b9\u30c6\u30e0\u304c\u3069\u306e\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u308b\u304b\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\n\n<p align=\"center\">\n  <img src=\"images/TcUo2fw.png\">\n  <br/>\n  <i><a href=https://www.infoq.com/presentations/Twitter-Timeline-Scalability>Source: Twitter timelines at scale</a></i>\n</p>\n\n**\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306e\u91cd\u7bb1\u306e\u9685\u3092\u3064\u3064\u304f\u3088\u3046\u306a\u7d30\u304b\u3044\u8a73\u7d30\u306b\u3053\u3060\u308f\u3089\u306a\u3044\u3053\u3068\u3002\u3080\u3057\u308d**\n\n* \u5171\u901a\u306e\u539f\u7406\u3001\u6280\u8853\u3001\u30d1\u30bf\u30fc\u30f3\u3092\u63a2\u308b\u3053\u3068\n* \u305d\u308c\u305e\u308c\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3069\u3093\u306a\u554f\u984c\u304c\u89e3\u6c7a\u3055\u308c\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3069\u3053\u3067\u3046\u307e\u304f\u4f7f\u3048\u3082\u3057\u304f\u306f\u4f7f\u3048\u306a\u3044\u304b\u3092\u77e5\u308b\u3053\u3068\n* \u5b66\u3093\u3060\u3053\u3068\u3092\u5fa9\u7fd2\u3059\u308b\u3053\u3068\n\n|\u7a2e\u985e | \u30b7\u30b9\u30c6\u30e0 | \u53c2\u8003\u30da\u30fc\u30b8 |\n|---|---|---|\n| \u30c7\u30fc\u30bf\u51e6\u7406 | **MapReduce** - Google\u306e\u5206\u6563\u30c7\u30fc\u30bf\u51e6\u7406\u30b7\u30b9\u30c6\u30e0 | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf) |\n| \u30c7\u30fc\u30bf\u51e6\u7406 | **Spark** - Databricks\u306e\u5206\u6563\u30c7\u30fc\u30bf\u51e6\u7406\u30b7\u30b9\u30c6\u30e0 | [slideshare.net](http://www.slideshare.net/AGrishchenko/apache-spark-architecture) |\n| \u30c7\u30fc\u30bf\u51e6\u7406 | **Storm** - Twitter\u306e\u5206\u6563\u30c7\u30fc\u30bf\u51e6\u7406\u30b7\u30b9\u30c6\u30e0 | [slideshare.net](http://www.slideshare.net/previa/storm-16094009) |\n| | | |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Bigtable** - Google\u306e\u30ab\u30e9\u30e0\u6307\u5411\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **HBase** - Bigtable\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u5b9f\u88c5 | [slideshare.net](http://www.slideshare.net/alexbaranau/intro-to-hbase) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Cassandra** - Facebook\u306e\u30ab\u30e9\u30e0\u6307\u5411\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [slideshare.net](http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666)\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **DynamoDB** - Amazon\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u6307\u5411\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **MongoDB** - \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u6307\u5411\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [slideshare.net](http://www.slideshare.net/mdirolf/introduction-to-mongodb) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Spanner** - Google\u306e\u30b0\u30ed\u30fc\u30d0\u30eb\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [research.google.com](http://research.google.com/archive/spanner-osdi2012.pdf) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Memcached** - \u5206\u6563\u30e1\u30e2\u30ea\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0 | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Redis** - \u6c38\u7d9a\u6027\u3068\u30d0\u30ea\u30e5\u30fc\u30bf\u30a4\u30d7\u3092\u517c\u306d\u5099\u3048\u305f\u5206\u6563\u30e1\u30e2\u30ea\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0 | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |\n| | | |\n| \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 | **Google File System (GFS)** - \u5206\u6563\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf) |\n| \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 | **Hadoop File System (HDFS)** - GFS\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u5b9f\u88c5 | [apache.org](https://hadoop.apache.org/docs/r1.2.1/hdfs_design.html) |\n| | | |\n| Misc | **Chubby** - \u758e\u7d50\u5408\u306e\u5206\u6563\u30b7\u30b9\u30c6\u30e0\u3092\u30ed\u30c3\u30af\u3059\u308bGoogle\u306e\u30b5\u30fc\u30d3\u30b9 | [research.google.com](http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf) |\n| Misc | **Dapper** - \u5206\u6563\u30b7\u30b9\u30c6\u30e0\u3092\u8ffd\u8de1\u3059\u308b\u30a4\u30f3\u30d5\u30e9 | [research.google.com](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf)\n| Misc | **Kafka** - LinkedIn\u306b\u3088\u308bPub/sub\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc | [slideshare.net](http://www.slideshare.net/mumrah/kafka-talk-tri-hug) |\n| Misc | **Zookeeper** - \u540c\u671f\u3092\u53ef\u80fd\u306b\u3059\u308b\u4e2d\u592e\u96c6\u6a29\u30a4\u30f3\u30d5\u30e9\u3068\u30b5\u30fc\u30d3\u30b9 | [slideshare.net](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) |\n| | \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u8ffd\u52a0\u3059\u308b | [Contribute](#contributing) |\n\n### \u5404\u4f01\u696d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n\n| \u4f01\u696d | \u53c2\u8003\u30da\u30fc\u30b8 |\n|---|---|\n| Amazon | [Amazon architecture](http://highscalability.com/amazon-architecture) |\n| Cinchcast | [Producing 1,500 hours of audio every day](http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html) |\n| DataSift | [Realtime datamining At 120,000 tweets per second](http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html) |\n| DropBox | [How we've scaled Dropbox](https://www.youtube.com/watch?v=PE4gwstWhmc) |\n| ESPN | [Operating At 100,000 duh nuh nuhs per second](http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html) |\n| Google | [Google architecture](http://highscalability.com/google-architecture) |\n| Instagram | [14 million users, terabytes of photos](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)<br/>[What powers Instagram](http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances) |\n| Justin.tv | [Justin.Tv's live video broadcasting architecture](http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html) |\n| Facebook | [Scaling memcached at Facebook](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf)<br/>[TAO: Facebook\u2019s distributed data store for the social graph](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf)<br/>[Facebook\u2019s photo storage](https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf) |\n| Flickr | [Flickr architecture](http://highscalability.com/flickr-architecture) |\n| Mailbox | [From 0 to one million users in 6 weeks](http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html) |\n| Pinterest | [From 0 To 10s of billions of page views a month](http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html)<br/>[18 million visitors, 10x growth, 12 employees](http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html) |\n| Playfish | [50 million monthly users and growing](http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html) |\n| PlentyOfFish | [PlentyOfFish architecture](http://highscalability.com/plentyoffish-architecture) |\n| Salesforce | [How they handle 1.3 billion transactions a day](http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html) |\n| Stack Overflow | [Stack Overflow architecture](http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html) |\n| TripAdvisor | [40M visitors, 200M dynamic page views, 30TB data](http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html) |\n| Tumblr | [15 billion page views a month](http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html) |\n| Twitter | [Making Twitter 10000 percent faster](http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster)<br/>[Storing 250 million tweets a day using MySQL](http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html)<br/>[150M active users, 300K QPS, a 22 MB/S firehose](http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html)<br/>[Timelines at scale](https://www.infoq.com/presentations/Twitter-Timeline-Scalability)<br/>[Big and small data at Twitter](https://www.youtube.com/watch?v=5cKTP36HVgI)<br/>[Operations at Twitter: scaling beyond 100 million users](https://www.youtube.com/watch?v=z8LU0Cj6BOU) |\n| Uber | [How Uber scales their real-time market platform](http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html) |\n| WhatsApp | [The WhatsApp architecture Facebook bought for $19 billion](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html) |\n| YouTube | [YouTube scalability](https://www.youtube.com/watch?v=w5WVu624fY8)<br/>[YouTube architecture](http://highscalability.com/youtube-architecture) |\n\n### \u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0\n\n> \u9762\u63a5\u3092\u53d7\u3051\u308b\u4f01\u696d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n>\n> \u6295\u3052\u3089\u308c\u308b\u8cea\u554f\u306f\u540c\u3058\u5206\u91ce\u304b\u3089\u6765\u308b\u3053\u3068\u3082\u3042\u308b\u3067\u3057\u3087\u3046\n\n* [Airbnb Engineering](http://nerds.airbnb.com/)\n* [Atlassian Developers](https://developer.atlassian.com/blog/)\n* [Autodesk Engineering](http://cloudengineering.autodesk.com/blog/)\n* [AWS Blog](https://aws.amazon.com/blogs/aws/)\n* [Bitly Engineering Blog](http://word.bitly.com/)\n* [Box Blogs](https://www.box.com/blog/engineering/)\n* [Cloudera Developer Blog](http://blog.cloudera.com/blog/)\n* [Dropbox Tech Blog](https://tech.dropbox.com/)\n* [Engineering at Quora](http://engineering.quora.com/)\n* [Ebay Tech Blog](http://www.ebaytechblog.com/)\n* [Evernote Tech Blog](https://blog.evernote.com/tech/)\n* [Etsy Code as Craft](http://codeascraft.com/)\n* [Facebook Engineering](https://www.facebook.com/Engineering)\n* [Flickr Code](http://code.flickr.net/)\n* [Foursquare Engineering Blog](http://engineering.foursquare.com/)\n* [GitHub Engineering Blog](https://github.blog/category/engineering)\n* [Google Research Blog](http://googleresearch.blogspot.com/)\n* [Groupon Engineering Blog](https://engineering.groupon.com/)\n* [Heroku Engineering Blog](https://engineering.heroku.com/)\n* [Hubspot Engineering Blog](http://product.hubspot.com/blog/topic/engineering)\n* [High Scalability](http://highscalability.com/)\n* [Instagram Engineering](http://instagram-engineering.tumblr.com/)\n* [Intel Software Blog](https://software.intel.com/en-us/blogs/)\n* [Jane Street Tech Blog](https://blogs.janestreet.com/category/ocaml/)\n* [LinkedIn Engineering](http://engineering.linkedin.com/blog)\n* [Microsoft Engineering](https://engineering.microsoft.com/)\n* [Microsoft Python Engineering](https://blogs.msdn.microsoft.com/pythonengineering/)\n* [Netflix Tech Blog](http://techblog.netflix.com/)\n* [Paypal Developer Blog](https://devblog.paypal.com/category/engineering/)\n* [Pinterest Engineering Blog](http://engineering.pinterest.com/)\n* [Quora Engineering](https://engineering.quora.com/)\n* [Reddit Blog](http://www.redditblog.com/)\n* [Salesforce Engineering Blog](https://developer.salesforce.com/blogs/engineering/)\n* [Slack Engineering Blog](https://slack.engineering/)\n* [Spotify Labs](https://labs.spotify.com/)\n* [Stripe Engineering Blog](https://stripe.com/blog/engineering)\n* [Twilio Engineering Blog](http://www.twilio.com/engineering)\n* [Twitter Engineering](https://engineering.twitter.com/)\n* [Uber Engineering Blog](http://eng.uber.com/)\n* [Yahoo Engineering Blog](http://yahooeng.tumblr.com/)\n* [Yelp Engineering Blog](http://engineeringblog.yelp.com/)\n* [Zynga Engineering Blog](https://www.zynga.com/blogs/engineering)\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:\n\n* [kilimchoi/engineering-blogs](https://github.com/kilimchoi/engineering-blogs)\n\n\u3053\u3053\u306b\u3042\u308b\u30ea\u30b9\u30c8\u306f\u6bd4\u8f03\u7684\u5c0f\u898f\u6a21\u306a\u3082\u306e\u306b\u3068\u3069\u3081\u3001[kilimchoi/engineering-blogs](https://github.com/kilimchoi/engineering-blogs)\u306b\u3088\u308a\u8a73\u7d30\u306b\u8a18\u3059\u3053\u3068\u3067\u91cd\u8907\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3059\u308b\u3002\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0\u3078\u306e\u30ea\u30f3\u30af\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408\u306f\u3053\u3053\u3067\u306f\u306a\u304f\u3001engineering-blogs\u30ec\u30dc\u30b8\u30c8\u30ea\u306b\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## \u9032\u884c\u4e2d\u306e\u4f5c\u696d\n\n\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u8ffd\u52a0\u3084\u3001\u9032\u884c\u4e2d\u306e\u4f5c\u696d\u3092\u624b\u4f1d\u3063\u3066\u3044\u305f\u3060\u3051\u308b\u5834\u5408\u306f[\u3053\u3061\u3089](#contributing)!\n\n* MapReduce\u306b\u3088\u308b\u5206\u6563\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\n* Consistent hashing\n* Scatter gather\n* [Contribute](#contributing)\n\n## \u30af\u30ec\u30b8\u30c3\u30c8\n\n\u30af\u30ec\u30b8\u30c3\u30c8\u53ca\u3073\u3001\u53c2\u7167\u30da\u30fc\u30b8\u306f\u9069\u6642\u3053\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u5185\u306b\u8a18\u8f09\u3057\u3066\u3042\u308a\u307e\u3059\n\nSpecial thanks to:\n\n* [Hired in tech](http://www.hiredintech.com/system-design/the-system-design-process/)\n* [Cracking the coding interview](https://www.amazon.com/dp/0984782850/)\n* [High scalability](http://highscalability.com/)\n* [checkcheckzz/system-design-interview](https://github.com/checkcheckzz/system-design-interview)\n* [shashank88/system_design](https://github.com/shashank88/system_design)\n* [mmcgrana/services-engineering](https://github.com/mmcgrana/services-engineering)\n* [System design cheat sheet](https://gist.github.com/vasanthk/485d1c25737e8e72759f)\n* [A distributed systems reading list](http://dancres.github.io/Pages/)\n* [Cracking the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n\n## Contact info\n\nFeel free to contact me to discuss any issues, questions, or comments.\n\nMy contact info can be found on my [GitHub page](https://github.com/donnemartin).\n\n## License\n\n*I am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).*\n\n    Copyright 2017 Donne Martin\n\n    Creative Commons Attribution 4.0 International License (CC BY 4.0)\n\n    http://creativecommons.org/licenses/by/4.0/\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "README-zh-Hans.md", "size": 101109, "license": "NOASSERTION", "content_sha": "87898dc47323154a4a3b1c0b384d98b2f684972a", "findings": [], "content": "> * \u539f\u6587\u5730\u5740\uff1a[github.com/donnemartin/system-design-primer](https://github.com/donnemartin/system-design-primer)\n> * \u8bd1\u6587\u51fa\u81ea\uff1a[\u6398\u91d1\u7ffb\u8bd1\u8ba1\u5212](https://github.com/xitu/gold-miner)\n> * \u8bd1\u8005\uff1a[XatMassacrE](https://github.com/XatMassacrE)\u3001[L9m](https://github.com/L9m)\u3001[Airmacho](https://github.com/Airmacho)\u3001[xiaoyusilen](https://github.com/xiaoyusilen)\u3001[jifaxu](https://github.com/jifaxu)\u3001[\u6839\u53f7\u4e09](https://github.com/sqrthree)\n> * \u8fd9\u4e2a [\u94fe\u63a5](https://github.com/xitu/system-design-primer/compare/master...donnemartin:master) \u7528\u6765\u67e5\u770b\u672c\u7ffb\u8bd1\u4e0e\u82f1\u6587\u7248\u662f\u5426\u6709\u5dee\u522b\uff08\u5982\u679c\u4f60\u6ca1\u6709\u770b\u5230 README.md \u53d1\u751f\u53d8\u5316\uff0c\u90a3\u5c31\u610f\u5473\u7740\u8fd9\u4efd\u7ffb\u8bd1\u6587\u6863\u662f\u6700\u65b0\u7684\uff09\u3002\n\n*[English](README.md) \u2219 [\u65e5\u672c\u8a9e](README-ja.md) \u2219 [\u7b80\u4f53\u4e2d\u6587](README-zh-Hans.md) \u2219 [\u7e41\u9ad4\u4e2d\u6587](README-zh-TW.md) | [\u0627\u0644\u0639\u064e\u0631\u064e\u0628\u0650\u064a\u064e\u0651\u0629\u200e](https://github.com/donnemartin/system-design-primer/issues/170) \u2219 [\u09ac\u09be\u0982\u09b2\u09be](https://github.com/donnemartin/system-design-primer/issues/220) \u2219 [Portugu\u00eas do Brasil](https://github.com/donnemartin/system-design-primer/issues/40) \u2219 [Deutsch](https://github.com/donnemartin/system-design-primer/issues/186) \u2219 [\u03b5\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac](https://github.com/donnemartin/system-design-primer/issues/130) \u2219 [\u05e2\u05d1\u05e8\u05d9\u05ea](https://github.com/donnemartin/system-design-primer/issues/272) \u2219 [Italiano](https://github.com/donnemartin/system-design-primer/issues/104) \u2219 [\ud55c\uad6d\uc5b4](https://github.com/donnemartin/system-design-primer/issues/102) \u2219 [\u0641\u0627\u0631\u0633\u06cc](https://github.com/donnemartin/system-design-primer/issues/110) \u2219 [Polski](https://github.com/donnemartin/system-design-primer/issues/68) \u2219 [\u0440\u0443\u0441\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a](https://github.com/donnemartin/system-design-primer/issues/87) \u2219 [Espa\u00f1ol](https://github.com/donnemartin/system-design-primer/issues/136) \u2219 [\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22](https://github.com/donnemartin/system-design-primer/issues/187) \u2219 [T\u00fcrk\u00e7e](https://github.com/donnemartin/system-design-primer/issues/39) \u2219 [ti\u1ebfng Vi\u1ec7t](https://github.com/donnemartin/system-design-primer/issues/127) \u2219 [Fran\u00e7ais](https://github.com/donnemartin/system-design-primer/issues/250) | [Add Translation](https://github.com/donnemartin/system-design-primer/issues/28)*\n\n# \u7cfb\u7edf\u8bbe\u8ba1\u5165\u95e8\n\n<p align=\"center\">\n  <img src=\"images/jj3A5N8.png\">\n  <br/>\n</p>\n\n## \u76ee\u7684\n\n> \u5b66\u4e60\u5982\u4f55\u8bbe\u8ba1\u5927\u578b\u7cfb\u7edf\u3002\n>\n> \u4e3a\u7cfb\u7edf\u8bbe\u8ba1\u7684\u9762\u8bd5\u505a\u51c6\u5907\u3002\n\n### \u5b66\u4e60\u5982\u4f55\u8bbe\u8ba1\u5927\u578b\u7cfb\u7edf\n\n\u5b66\u4e60\u5982\u4f55\u8bbe\u8ba1\u53ef\u6269\u5c55\u7684\u7cfb\u7edf\u5c06\u4f1a\u6709\u52a9\u4e8e\u4f60\u6210\u4e3a\u4e00\u4e2a\u66f4\u597d\u7684\u5de5\u7a0b\u5e08\u3002\n\n\u7cfb\u7edf\u8bbe\u8ba1\u662f\u4e00\u4e2a\u5f88\u5bbd\u6cdb\u7684\u8bdd\u9898\u3002\u5728\u4e92\u8054\u7f51\u4e0a\uff0c**\u5173\u4e8e\u7cfb\u7edf\u8bbe\u8ba1\u539f\u5219\u7684\u8d44\u6e90\u4e5f\u662f\u591a\u5982\u725b\u6bdb\u3002**\n\n\u8fd9\u4e2a\u4ed3\u5e93\u5c31\u662f\u8fd9\u4e9b\u8d44\u6e90\u7684**\u7ec4\u7ec7\u6536\u96c6**\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5b66\u4e60\u5982\u4f55\u6784\u5efa\u53ef\u6269\u5c55\u7684\u7cfb\u7edf\u3002\n\n### \u4ece\u5f00\u6e90\u793e\u533a\u5b66\u4e60\n\n\u8fd9\u662f\u4e00\u4e2a\u4e0d\u65ad\u66f4\u65b0\u7684\u5f00\u6e90\u9879\u76ee\u7684\u521d\u671f\u7684\u7248\u672c\u3002\n\n\u6b22\u8fce[\u8d21\u732e](#\u8d21\u732e)\uff01\n\n### \u4e3a\u7cfb\u7edf\u8bbe\u8ba1\u7684\u9762\u8bd5\u505a\u51c6\u5907\n\n\u5728\u5f88\u591a\u79d1\u6280\u516c\u53f8\u4e2d\uff0c\u9664\u4e86\u4ee3\u7801\u9762\u8bd5\uff0c\u7cfb\u7edf\u8bbe\u8ba1\u4e5f\u662f**\u6280\u672f\u9762\u8bd5\u8fc7\u7a0b**\u4e2d\u7684\u4e00\u4e2a**\u5fc5\u8981\u73af\u8282**\u3002\n\n**\u5b9e\u8df5\u5e38\u89c1\u7684\u7cfb\u7edf\u8bbe\u8ba1\u9762\u8bd5\u9898**\u5e76\u4e14\u628a\u4f60\u7684\u7b54\u6848\u548c**\u4f8b\u5b50\u7684\u89e3\u7b54**\u8fdb\u884c**\u5bf9\u7167**\uff1a\u8ba8\u8bba\uff0c\u4ee3\u7801\u548c\u56fe\u8868\u3002\n\n\u9762\u8bd5\u51c6\u5907\u7684\u5176\u4ed6\u4e3b\u9898\uff1a\n\n* [\u5b66\u4e60\u6307\u5f15](#\u5b66\u4e60\u6307\u5f15)\n* [\u5982\u4f55\u5904\u7406\u4e00\u4e2a\u7cfb\u7edf\u8bbe\u8ba1\u7684\u9762\u8bd5\u9898](#\u5982\u4f55\u5904\u7406\u4e00\u4e2a\u7cfb\u7edf\u8bbe\u8ba1\u7684\u9762\u8bd5\u9898)\n* [\u7cfb\u7edf\u8bbe\u8ba1\u7684\u9762\u8bd5\u9898\uff0c**\u542b\u89e3\u7b54**](#\u7cfb\u7edf\u8bbe\u8ba1\u7684\u9762\u8bd5\u9898\u548c\u89e3\u7b54)\n* [\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7684\u9762\u8bd5\u9898\uff0c**\u542b\u89e3\u7b54**](#\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7684\u9762\u8bd5\u95ee\u9898\u53ca\u89e3\u7b54)\n* [\u5176\u5b83\u7684\u7cfb\u7edf\u8bbe\u8ba1\u9762\u8bd5\u9898](#\u5176\u5b83\u7684\u7cfb\u7edf\u8bbe\u8ba1\u9762\u8bd5\u9898)\n\n## \u62bd\u8ba4\u5361\n\n<p align=\"center\">\n  <img src=\"images/zdCAkB3.png\">\n  <br/>\n</p>\n\n\u8fd9\u91cc\u63d0\u4f9b\u7684[\u62bd\u8ba4\u5361\u5806](https://apps.ankiweb.net/)\u4f7f\u7528\u95f4\u9694\u91cd\u590d\u7684\u65b9\u6cd5\uff0c\u5e2e\u52a9\u4f60\u8bb0\u5fc6\u5173\u952e\u7684\u7cfb\u7edf\u8bbe\u8ba1\u6982\u5ff5\u3002\n\n* [\u7cfb\u7edf\u8bbe\u8ba1\u7684\u5361\u5806](resources/flash_cards/System%20Design.apkg)\n* [\u7cfb\u7edf\u8bbe\u8ba1\u7684\u7ec3\u4e60\u5361\u5806](resources/flash_cards/System%20Design%20Exercises.apkg)\n* [\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7684\u7ec3\u4e60\u5361\u5806](resources/flash_cards/OO%20Design.apkg)\n\n\u968f\u65f6\u968f\u5730\u90fd\u53ef\u4f7f\u7528\u3002\n\n### \u4ee3\u7801\u8d44\u6e90\uff1a\u4e92\u52a8\u5f0f\u7f16\u7a0b\u6311\u6218\n\n\u4f60\u6b63\u5728\u5bfb\u627e\u8d44\u6e90\u4ee5\u51c6\u5907[**\u7f16\u7a0b\u9762\u8bd5**](https://github.com/donnemartin/interactive-coding-challenges)\u5417\uff1f\n\n<p align=\"center\">\n  <img src=\"images/b4YtAEN.png\">\n  <br/>\n</p>\n\n\u8bf7\u67e5\u770b\u6211\u4eec\u7684\u59d0\u59b9\u4ed3\u5e93[**\u4e92\u52a8\u5f0f\u7f16\u7a0b\u6311\u6218**](https://github.com/donnemartin/interactive-coding-challenges)\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u62bd\u8ba4\u5361\u5806\uff1a\n\n* [\u4ee3\u7801\u5361\u5806](https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg)\n\n## \u8d21\u732e\n\n> \u4ece\u793e\u533a\u4e2d\u5b66\u4e60\u3002\n\n\u6b22\u8fce\u63d0\u4ea4 PR \u63d0\u4f9b\u5e2e\u52a9\uff1a\n\n* \u4fee\u590d\u9519\u8bef\n* \u5b8c\u5584\u7ae0\u8282\n* \u6dfb\u52a0\u7ae0\u8282\n* [\u5e2e\u52a9\u7ffb\u8bd1](https://github.com/donnemartin/system-design-primer/issues/28)\n\n\u4e00\u4e9b\u8fd8\u9700\u8981\u5b8c\u5584\u7684\u5185\u5bb9\u653e\u5728\u4e86[\u6b63\u5728\u5b8c\u5584\u4e2d](#\u6b63\u5728\u5b8c\u5584\u4e2d)\u3002\n\n\u8bf7\u67e5\u770b[\u8d21\u732e\u6307\u5357](CONTRIBUTING.md)\u3002\n\n## \u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898\u7684\u7d22\u5f15\n\n> \u5404\u79cd\u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898\u7684\u6458\u8981\uff0c\u5305\u62ec\u4f18\u70b9\u548c\u7f3a\u70b9\u3002**\u6bcf\u4e00\u4e2a\u4e3b\u9898\u90fd\u9762\u4e34\u7740\u53d6\u820d\u548c\u6743\u8861**\u3002\n>\n> \u6bcf\u4e2a\u7ae0\u8282\u90fd\u5305\u542b\u7740\u66f4\u591a\u7684\u8d44\u6e90\u7684\u94fe\u63a5\u3002\n\n\n<p align=\"center\">\n  <img src=\"images/jrUBAF7.png\">\n  <br/>\n</p>\n\n* [\u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898\uff1a\u4ece\u8fd9\u91cc\u5f00\u59cb](#\u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898\u4ece\u8fd9\u91cc\u5f00\u59cb)\n    * [\u7b2c\u4e00\u6b65\uff1a\u56de\u987e\u53ef\u6269\u5c55\u6027\u7684\u89c6\u9891\u8bb2\u5ea7](#\u7b2c\u4e00\u6b65\u56de\u987e\u53ef\u6269\u5c55\u6027scalability\u7684\u89c6\u9891\u8bb2\u5ea7)\n    * [\u7b2c\u4e8c\u6b65\uff1a\u56de\u987e\u53ef\u6269\u5c55\u6027\u7684\u6587\u7ae0](#\u7b2c\u4e8c\u6b65\u56de\u987e\u53ef\u6269\u5c55\u6027\u6587\u7ae0)\n    * [\u63a5\u4e0b\u6765\u7684\u6b65\u9aa4](#\u63a5\u4e0b\u6765\u7684\u6b65\u9aa4)\n* [\u6027\u80fd\u4e0e\u62d3\u5c55\u6027](#\u6027\u80fd\u4e0e\u53ef\u6269\u5c55\u6027)\n* [\u5ef6\u8fdf\u4e0e\u541e\u5410\u91cf](#\u5ef6\u8fdf\u4e0e\u541e\u5410\u91cf)\n* [\u53ef\u7528\u6027\u4e0e\u4e00\u81f4\u6027](#\u53ef\u7528\u6027\u4e0e\u4e00\u81f4\u6027)\n    * [CAP \u7406\u8bba](#cap-\u7406\u8bba)\n        * [CP - \u4e00\u81f4\u6027\u548c\u5206\u533a\u5bb9\u9519\u6027](#cp--\u4e00\u81f4\u6027\u548c\u5206\u533a\u5bb9\u9519\u6027)\n        * [AP - \u53ef\u7528\u6027\u548c\u5206\u533a\u5bb9\u9519\u6027](#ap--\u53ef\u7528\u6027\u4e0e\u5206\u533a\u5bb9\u9519\u6027)\n* [\u4e00\u81f4\u6a21\u5f0f](#\u4e00\u81f4\u6027\u6a21\u5f0f)\n    * [\u5f31\u4e00\u81f4\u6027](#\u5f31\u4e00\u81f4\u6027)\n    * [\u6700\u7ec8\u4e00\u81f4\u6027](#\u6700\u7ec8\u4e00\u81f4\u6027)\n    * [\u5f3a\u4e00\u81f4\u6027](#\u5f3a\u4e00\u81f4\u6027)\n* [\u53ef\u7528\u6a21\u5f0f](#\u53ef\u7528\u6027\u6a21\u5f0f)\n    * [\u6545\u969c\u5207\u6362](#\u6545\u969c\u5207\u6362)\n    * [\u590d\u5236](#\u590d\u5236)\n* [\u57df\u540d\u7cfb\u7edf](#\u57df\u540d\u7cfb\u7edf)\n* [CDN](#\u5185\u5bb9\u5206\u53d1\u7f51\u7edccdn)\n    * [CDN \u63a8\u9001](#cdn-\u63a8\u9001push)\n    * [CDN \u62c9\u53d6](#cdn-\u62c9\u53d6pull)\n* [\u8d1f\u8f7d\u5747\u8861\u5668](#\u8d1f\u8f7d\u5747\u8861\u5668)\n    * [\u5de5\u4f5c\u5230\u5907\u7528\u5207\u6362\uff08Active-passive\uff09](#\u5de5\u4f5c\u5230\u5907\u7528\u5207\u6362active-passive)\n    * [\u53cc\u5de5\u4f5c\u5207\u6362\uff08Active-active\uff09](#\u53cc\u5de5\u4f5c\u5207\u6362active-active)\n    * [\u56db\u5c42\u8d1f\u8f7d\u5747\u8861](#\u56db\u5c42\u8d1f\u8f7d\u5747\u8861)\n    * [\u4e03\u5c42\u8d1f\u8f7d\u5747\u8861](#\u4e03\u5c42\u8d1f\u8f7d\u5747\u8861\u5668)\n    * [\u6c34\u5e73\u6269\u5c55](#\u6c34\u5e73\u6269\u5c55)\n* [\u53cd\u5411\u4ee3\u7406\uff08web \u670d\u52a1\u5668\uff09](#\u53cd\u5411\u4ee3\u7406web-\u670d\u52a1\u5668)\n    * [\u8d1f\u8f7d\u5747\u8861\u4e0e\u53cd\u5411\u4ee3\u7406](#\u8d1f\u8f7d\u5747\u8861\u5668\u4e0e\u53cd\u5411\u4ee3\u7406)\n* [\u5e94\u7528\u5c42](#\u5e94\u7528\u5c42)\n    * [\u5fae\u670d\u52a1](#\u5fae\u670d\u52a1)\n    * [\u670d\u52a1\u53d1\u73b0](#\u670d\u52a1\u53d1\u73b0)\n* [\u6570\u636e\u5e93](#\u6570\u636e\u5e93)\n    * [\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff08RDBMS\uff09](#\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edfrdbms)\n        * [Master-slave \u590d\u5236\u96c6](#\u4e3b\u4ece\u590d\u5236)\n        * [Master-master \u590d\u5236\u96c6](#\u4e3b\u4e3b\u590d\u5236)\n        * [\u8054\u5408](#\u8054\u5408)\n        * [\u5206\u7247](#\u5206\u7247)\n        * [\u975e\u89c4\u8303\u5316](#\u975e\u89c4\u8303\u5316)\n        * [SQL \u8c03\u4f18](#sql-\u8c03\u4f18)\n    * [NoSQL](#nosql)\n        * [Key-value \u5b58\u50a8](#\u952e-\u503c\u5b58\u50a8)\n        * [\u6587\u6863\u5b58\u50a8](#\u6587\u6863\u7c7b\u578b\u5b58\u50a8)\n        * [\u5bbd\u5217\u5b58\u50a8](#\u5217\u578b\u5b58\u50a8)\n        * [\u56fe\u6570\u636e\u5e93](#\u56fe\u6570\u636e\u5e93)\n    * [SQL \u8fd8\u662f NoSQL](#sql-\u8fd8\u662f-nosql)\n* [\u7f13\u5b58](#\u7f13\u5b58)\n    * [\u5ba2\u6237\u7aef\u7f13\u5b58](#\u5ba2\u6237\u7aef\u7f13\u5b58)\n    * [CDN \u7f13\u5b58](#cdn-\u7f13\u5b58)\n    * [Web \u670d\u52a1\u5668\u7f13\u5b58](#web-\u670d\u52a1\u5668\u7f13\u5b58)\n    * [\u6570\u636e\u5e93\u7f13\u5b58](#\u6570\u636e\u5e93\u7f13\u5b58)\n    * [\u5e94\u7528\u7f13\u5b58](#\u5e94\u7528\u7f13\u5b58)\n    * [\u6570\u636e\u5e93\u67e5\u8be2\u7ea7\u522b\u7684\u7f13\u5b58](#\u6570\u636e\u5e93\u67e5\u8be2\u7ea7\u522b\u7684\u7f13\u5b58)\n    * [\u5bf9\u8c61\u7ea7\u522b\u7684\u7f13\u5b58](#\u5bf9\u8c61\u7ea7\u522b\u7684\u7f13\u5b58)\n    * [\u4f55\u65f6\u66f4\u65b0\u7f13\u5b58](#\u4f55\u65f6\u66f4\u65b0\u7f13\u5b58)\n        * [\u7f13\u5b58\u6a21\u5f0f](#\u7f13\u5b58\u6a21\u5f0f)\n        * [\u76f4\u5199\u6a21\u5f0f](#\u76f4\u5199\u6a21\u5f0f)\n        * [\u56de\u5199\u6a21\u5f0f](#\u56de\u5199\u6a21\u5f0f)\n        * [\u5237\u65b0](#\u5237\u65b0)\n* [\u5f02\u6b65](#\u5f02\u6b65)\n    * [\u6d88\u606f\u961f\u5217](#\u6d88\u606f\u961f\u5217)\n    * [\u4efb\u52a1\u961f\u5217](#\u4efb\u52a1\u961f\u5217)\n    * [\u80cc\u538b\u673a\u5236](#\u80cc\u538b)\n* [\u901a\u8baf](#\u901a\u8baf)\n    * [\u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff08TCP\uff09](#\u4f20\u8f93\u63a7\u5236\u534f\u8baetcp)\n    * [\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff08UDP\uff09](#\u7528\u6237\u6570\u636e\u62a5\u534f\u8baeudp)\n    * [\u8fdc\u7a0b\u63a7\u5236\u8c03\u7528\u534f\u8bae\uff08RPC\uff09](#\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\u534f\u8baerpc)\n    * [\u8868\u8ff0\u6027\u72b6\u6001\u8f6c\u79fb\uff08REST\uff09](#\u8868\u8ff0\u6027\u72b6\u6001\u8f6c\u79fbrest)\n* [\u5b89\u5168](#\u5b89\u5168)\n* [\u9644\u5f55](#\u9644\u5f55)\n    * [2 \u7684\u6b21\u65b9\u8868](#2-\u7684\u6b21\u65b9\u8868)\n    * [\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u77e5\u9053\u7684\u5ef6\u8fdf\u6570](#\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u77e5\u9053\u7684\u5ef6\u8fdf\u6570)\n    * [\u5176\u5b83\u7684\u7cfb\u7edf\u8bbe\u8ba1\u9762\u8bd5\u9898](#\u5176\u5b83\u7684\u7cfb\u7edf\u8bbe\u8ba1\u9762\u8bd5\u9898)\n    * [\u771f\u5b9e\u67b6\u6784](#\u771f\u5b9e\u67b6\u6784)\n    * [\u516c\u53f8\u7684\u7cfb\u7edf\u67b6\u6784](#\u516c\u53f8\u7684\u7cfb\u7edf\u67b6\u6784)\n    * [\u516c\u53f8\u5de5\u7a0b\u535a\u5ba2](#\u516c\u53f8\u5de5\u7a0b\u535a\u5ba2)\n* [\u6b63\u5728\u5b8c\u5584\u4e2d](#\u6b63\u5728\u5b8c\u5584\u4e2d)\n* [\u81f4\u8c22](#\u81f4\u8c22)\n* [\u8054\u7cfb\u65b9\u5f0f](#\u8054\u7cfb\u65b9\u5f0f)\n* [\u8bb8\u53ef](#\u8bb8\u53ef)\n\n## \u5b66\u4e60\u6307\u5f15\n\n> \u57fa\u4e8e\u4f60\u9762\u8bd5\u7684\u65f6\u95f4\u7ebf\uff08\u77ed\u3001\u4e2d\u3001\u957f\uff09\u53bb\u590d\u4e60\u90a3\u4e9b\u63a8\u8350\u7684\u4e3b\u9898\u3002\n\n![Imgur](images/OfVllex.png)\n\n**\u95ee\uff1a\u5bf9\u4e8e\u9762\u8bd5\u6765\u8bf4\uff0c\u6211\u9700\u8981\u77e5\u9053\u8fd9\u91cc\u7684\u6240\u6709\u77e5\u8bc6\u70b9\u5417\uff1f**\n\n**\u7b54\uff1a\u4e0d\uff0c\u5982\u679c\u53ea\u662f\u4e3a\u4e86\u51c6\u5907\u9762\u8bd5\u7684\u8bdd\uff0c\u4f60\u5e76\u4e0d\u9700\u8981\u77e5\u9053\u6240\u6709\u7684\u77e5\u8bc6\u70b9\u3002**\n\n\u5728\u4e00\u573a\u9762\u8bd5\u4e2d\u4f60\u4f1a\u88ab\u95ee\u5230\u4ec0\u4e48\u53d6\u51b3\u4e8e\u4e0b\u9762\u8fd9\u4e9b\u56e0\u7d20\uff1a\n\n* \u4f60\u7684\u7ecf\u9a8c\n* \u4f60\u7684\u6280\u672f\u80cc\u666f\n* \u4f60\u9762\u8bd5\u7684\u804c\u4f4d\n* \u4f60\u9762\u8bd5\u7684\u516c\u53f8\n* \u8fd0\u6c14\n\n\u90a3\u4e9b\u6709\u7ecf\u9a8c\u7684\u5019\u9009\u4eba\u901a\u5e38\u4f1a\u88ab\u671f\u671b\u4e86\u89e3\u66f4\u591a\u7684\u7cfb\u7edf\u8bbe\u8ba1\u7684\u77e5\u8bc6\u3002\u67b6\u6784\u5e08\u6216\u8005\u56e2\u961f\u8d1f\u8d23\u4eba\u5219\u4f1a\u88ab\u671f\u671b\u4e86\u89e3\u66f4\u591a\u9664\u4e86\u4e2a\u4eba\u8d21\u732e\u4e4b\u5916\u7684\u77e5\u8bc6\u3002\u9876\u7ea7\u7684\u79d1\u6280\u516c\u53f8\u901a\u5e38\u4e5f\u4f1a\u6709\u4e00\u6b21\u6216\u8005\u66f4\u591a\u7684\u7cfb\u7edf\u8bbe\u8ba1\u9762\u8bd5\u3002\n\n\u9762\u8bd5\u4f1a\u5f88\u5bbd\u6cdb\u7684\u5c55\u5f00\u5e76\u5728\u51e0\u4e2a\u9886\u57df\u6df1\u5165\u3002\u8fd9\u4f1a\u5e2e\u52a9\u4f60\u4e86\u89e3\u4e00\u4e9b\u5173\u4e8e\u7cfb\u7edf\u8bbe\u8ba1\u7684\u4e0d\u540c\u7684\u4e3b\u9898\u3002\u57fa\u4e8e\u4f60\u7684\u65f6\u95f4\u7ebf\uff0c\u7ecf\u9a8c\uff0c\u9762\u8bd5\u7684\u804c\u4f4d\u548c\u9762\u8bd5\u7684\u516c\u53f8\u5bf9\u4e0b\u9762\u7684\u6307\u5bfc\u505a\u51fa\u9002\u5f53\u7684\u8c03\u6574\u3002\n\n* **\u77ed\u671f** - \u4ee5\u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898\u7684**\u5e7f\u5ea6**\u4e3a\u76ee\u6807\u3002\u901a\u8fc7\u89e3\u51b3**\u4e00\u4e9b**\u9762\u8bd5\u9898\u6765\u7ec3\u4e60\u3002\n* **\u4e2d\u671f** - \u4ee5\u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898\u7684**\u5e7f\u5ea6**\u548c**\u521d\u7ea7\u6df1\u5ea6**\u4e3a\u76ee\u6807\u3002\u901a\u8fc7\u89e3\u51b3**\u5f88\u591a**\u9762\u8bd5\u9898\u6765\u7ec3\u4e60\u3002\n* **\u957f\u671f** - \u4ee5\u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898\u7684**\u5e7f\u5ea6**\u548c**\u9ad8\u7ea7\u6df1\u5ea6**\u4e3a\u76ee\u6807\u3002\u901a\u8fc7\u89e3\u51b3**\u5927\u90e8\u5206**\u9762\u8bd5\u9898\u6765\u7ec3\u4e60\u3002\n\n|                                          | \u77ed\u671f   | \u4e2d\u671f   | \u957f\u671f   |\n| ---------------------------------------- | ---- | ---- | ---- |\n| \u9605\u8bfb [\u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898](#\u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898\u7684\u7d22\u5f15) \u4ee5\u83b7\u5f97\u4e00\u4e2a\u5173\u4e8e\u7cfb\u7edf\u5982\u4f55\u5de5\u4f5c\u7684\u5bbd\u6cdb\u7684\u8ba4\u8bc6 | :+1: | :+1: | :+1: |\n| \u9605\u8bfb\u4e00\u4e9b\u4f60\u8981\u9762\u8bd5\u7684[\u516c\u53f8\u5de5\u7a0b\u535a\u5ba2](#\u516c\u53f8\u5de5\u7a0b\u535a\u5ba2)\u7684\u6587\u7ae0            | :+1: | :+1: | :+1: |\n| \u9605\u8bfb [\u771f\u5b9e\u67b6\u6784](#\u771f\u5b9e\u67b6\u6784)                   | :+1: | :+1: | :+1: |\n| \u590d\u4e60 [\u5982\u4f55\u5904\u7406\u4e00\u4e2a\u7cfb\u7edf\u8bbe\u8ba1\u9762\u8bd5\u9898](#\u5982\u4f55\u5904\u7406\u4e00\u4e2a\u7cfb\u7edf\u8bbe\u8ba1\u9762\u8bd5\u9898)       | :+1: | :+1: | :+1: |\n| \u5b8c\u6210 [\u7cfb\u7edf\u8bbe\u8ba1\u7684\u9762\u8bd5\u9898\u548c\u89e3\u7b54](#\u7cfb\u7edf\u8bbe\u8ba1\u7684\u9762\u8bd5\u9898\u548c\u89e3\u7b54)             | \u4e00\u4e9b   | \u5f88\u591a   | \u5927\u90e8\u5206  |\n| \u5b8c\u6210 [\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7684\u9762\u8bd5\u9898\u548c\u89e3\u7b54](#\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7684\u9762\u8bd5\u95ee\u9898\u53ca\u89e3\u7b54)        | \u4e00\u4e9b   | \u5f88\u591a   | \u5927\u90e8\u5206  |\n| \u590d\u4e60 [\u5176\u5b83\u7684\u7cfb\u7edf\u8bbe\u8ba1\u9762\u8bd5\u9898](#\u5176\u5b83\u7684\u7cfb\u7edf\u8bbe\u8ba1\u9762\u8bd5\u9898)          | \u4e00\u4e9b   | \u5f88\u591a   | \u5927\u90e8\u5206  |\n\n## \u5982\u4f55\u5904\u7406\u4e00\u4e2a\u7cfb\u7edf\u8bbe\u8ba1\u7684\u9762\u8bd5\u9898\n\n\u7cfb\u7edf\u8bbe\u8ba1\u9762\u8bd5\u662f\u4e00\u4e2a**\u5f00\u653e\u5f0f\u7684\u5bf9\u8bdd**\u3002\u4ed6\u4eec\u671f\u671b\u4f60\u53bb\u4e3b\u5bfc\u8fd9\u4e2a\u5bf9\u8bdd\u3002\n\n\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u6b65\u9aa4\u6765\u6307\u5f15\u8ba8\u8bba\u3002\u4e3a\u4e86\u5de9\u56fa\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u8bf7\u4f7f\u7528\u4e0b\u9762\u7684\u6b65\u9aa4\u5b8c\u6210[\u7cfb\u7edf\u8bbe\u8ba1\u7684\u9762\u8bd5\u9898\u548c\u89e3\u7b54](#\u7cfb\u7edf\u8bbe\u8ba1\u7684\u9762\u8bd5\u9898\u548c\u89e3\u7b54)\u8fd9\u4e2a\u7ae0\u8282\u3002\n\n### \u7b2c\u4e00\u6b65\uff1a\u63cf\u8ff0\u4f7f\u7528\u573a\u666f\uff0c\u7ea6\u675f\u548c\u5047\u8bbe\n\n\u628a\u6240\u6709\u9700\u8981\u7684\u4e1c\u897f\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u5ba1\u89c6\u95ee\u9898\u3002\u4e0d\u505c\u7684\u63d0\u95ee\uff0c\u4ee5\u81f3\u4e8e\u6211\u4eec\u53ef\u4ee5\u660e\u786e\u4f7f\u7528\u573a\u666f\u548c\u7ea6\u675f\u3002\u8ba8\u8bba\u5047\u8bbe\u3002\n\n* \u8c01\u4f1a\u4f7f\u7528\u5b83\uff1f\n* \u4ed6\u4eec\u4f1a\u600e\u6837\u4f7f\u7528\u5b83\uff1f\n* \u6709\u591a\u5c11\u7528\u6237\uff1f\n* \u7cfb\u7edf\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f\n* \u7cfb\u7edf\u7684\u8f93\u5165\u8f93\u51fa\u5206\u522b\u662f\u4ec0\u4e48\uff1f\n* \u6211\u4eec\u5e0c\u671b\u5904\u7406\u591a\u5c11\u6570\u636e\uff1f\n* \u6211\u4eec\u5e0c\u671b\u6bcf\u79d2\u949f\u5904\u7406\u591a\u5c11\u8bf7\u6c42\uff1f\n* \u6211\u4eec\u5e0c\u671b\u7684\u8bfb\u5199\u6bd4\u7387\uff1f\n\n### \u7b2c\u4e8c\u6b65\uff1a\u521b\u9020\u4e00\u4e2a\u9ad8\u5c42\u7ea7\u7684\u8bbe\u8ba1\n\n\u4f7f\u7528\u6240\u6709\u91cd\u8981\u7684\u7ec4\u4ef6\u6765\u63cf\u7ed8\u51fa\u4e00\u4e2a\u9ad8\u5c42\u7ea7\u7684\u8bbe\u8ba1\u3002\n\n* \u753b\u51fa\u4e3b\u8981\u7684\u7ec4\u4ef6\u548c\u8fde\u63a5\n* \u8bc1\u660e\u4f60\u7684\u60f3\u6cd5\n\n### \u7b2c\u4e09\u6b65\uff1a\u8bbe\u8ba1\u6838\u5fc3\u7ec4\u4ef6\n\n\u5bf9\u6bcf\u4e00\u4e2a\u6838\u5fc3\u7ec4\u4ef6\u8fdb\u884c\u8be6\u7ec6\u6df1\u5165\u7684\u5206\u6790\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5982\u679c\u4f60\u88ab\u95ee\u5230[\u8bbe\u8ba1\u4e00\u4e2a url \u7f29\u5199\u670d\u52a1](solutions/system_design/pastebin/README.md)\uff0c\u5f00\u59cb\u8ba8\u8bba\uff1a\n\n* \u751f\u6210\u5e76\u50a8\u5b58\u4e00\u4e2a\u5b8c\u6574 url \u7684 hash\n    * [MD5](solutions/system_design/pastebin/README.md) \u548c [Base62](solutions/system_design/pastebin/README.md)\n    * Hash \u78b0\u649e\n    * SQL \u8fd8\u662f NoSQL\n    * \u6570\u636e\u5e93\u6a21\u578b\n* \u5c06\u4e00\u4e2a hashed url \u7ffb\u8bd1\u6210\u5b8c\u6574\u7684 url\n    * \u6570\u636e\u5e93\u67e5\u627e\n* API \u548c\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\n\n### \u7b2c\u56db\u6b65\uff1a\u6269\u5c55\u8bbe\u8ba1\n\n\u786e\u8ba4\u548c\u5904\u7406\u74f6\u9888\u4ee5\u53ca\u4e00\u4e9b\u9650\u5236\u3002\u4e3e\u4f8b\u6765\u8bf4\u5c31\u662f\u4f60\u9700\u8981\u4e0b\u9762\u7684\u8fd9\u4e9b\u6765\u5b8c\u6210\u6269\u5c55\u6027\u7684\u8bae\u9898\u5417\uff1f\n\n* \u8d1f\u8f7d\u5747\u8861\n* \u6c34\u5e73\u6269\u5c55\n* \u7f13\u5b58\n* \u6570\u636e\u5e93\u5206\u7247\n\n\u8bba\u8ff0\u53ef\u80fd\u7684\u89e3\u51b3\u529e\u6cd5\u548c\u4ee3\u4ef7\u3002\u6bcf\u4ef6\u4e8b\u60c5\u9700\u8981\u53d6\u820d\u3002\u53ef\u4ee5\u4f7f\u7528[\u53ef\u6269\u5c55\u7cfb\u7edf\u7684\u8bbe\u8ba1\u539f\u5219](#\u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898\u7684\u7d22\u5f15)\u6765\u5904\u7406\u74f6\u9888\u3002\n\n### \u9884\u4f30\u8ba1\u7b97\u91cf\n\n\u4f60\u6216\u8bb8\u4f1a\u88ab\u8981\u6c42\u901a\u8fc7\u624b\u7b97\u8fdb\u884c\u4e00\u4e9b\u4f30\u7b97\u3002[\u9644\u5f55](#\u9644\u5f55)\u6d89\u53ca\u5230\u7684\u662f\u4e0b\u9762\u7684\u8fd9\u4e9b\u8d44\u6e90\uff1a\n\n* [\u4f7f\u7528\u9884\u4f30\u8ba1\u7b97\u91cf](http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)\n* [2 \u7684\u6b21\u65b9\u8868](#2-\u7684\u6b21\u65b9\u8868)\n* [\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u77e5\u9053\u7684\u5ef6\u8fdf\u6570](#\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u77e5\u9053\u7684\u5ef6\u8fdf\u6570)\n\n### \u76f8\u5173\u8d44\u6e90\u548c\u5ef6\u4f38\u9605\u8bfb\n\n\u67e5\u770b\u4e0b\u9762\u7684\u94fe\u63a5\u4ee5\u83b7\u5f97\u6211\u4eec\u671f\u671b\u7684\u66f4\u597d\u7684\u60f3\u6cd5\uff1a\n\n* [\u600e\u6837\u901a\u8fc7\u4e00\u4e2a\u7cfb\u7edf\u8bbe\u8ba1\u7684\u9762\u8bd5](https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)\n* [\u7cfb\u7edf\u8bbe\u8ba1\u7684\u9762\u8bd5](http://www.hiredintech.com/system-design)\n* [\u7cfb\u7edf\u67b6\u6784\u4e0e\u8bbe\u8ba1\u7684\u9762\u8bd5\u7b80\u4ecb](https://www.youtube.com/watch?v=ZgdS0EUmn70)\n\n## \u7cfb\u7edf\u8bbe\u8ba1\u7684\u9762\u8bd5\u9898\u548c\u89e3\u7b54\n\n> \u666e\u901a\u7684\u7cfb\u7edf\u8bbe\u8ba1\u9762\u8bd5\u9898\u548c\u76f8\u5173\u4e8b\u4f8b\u7684\u8bba\u8ff0\uff0c\u4ee3\u7801\u548c\u56fe\u8868\u3002\n>\n\n> \u4e0e\u5185\u5bb9\u6709\u5173\u7684\u89e3\u7b54\u5728 `solutions/` \u6587\u4ef6\u5939\u4e2d\u3002\n\n| \u95ee\u9898                                       |                                          |\n| ---------------------------------------- | ---------------------------------------- |\n| \u8bbe\u8ba1 Pastebin.com (\u6216\u8005 Bit.ly)              | [\u89e3\u7b54](solutions/system_design/pastebin/README-zh-Hans.md) |\n| \u8bbe\u8ba1 Twitter \u65f6\u95f4\u7ebf\u548c\u641c\u7d22 (\u6216\u8005 Facebook feed \u548c\u641c\u7d22) | [\u89e3\u7b54](solutions/system_design/twitter/README.md) |\n| \u8bbe\u8ba1\u4e00\u4e2a\u7f51\u9875\u722c\u866b                                 | [\u89e3\u7b54](solutions/system_design/web_crawler/README.md) |\n| \u8bbe\u8ba1 Mint.com                              | [\u89e3\u7b54](solutions/system_design/mint/README.md) |\n| \u4e3a\u4e00\u4e2a\u793e\u4ea4\u7f51\u7edc\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784                            | [\u89e3\u7b54](solutions/system_design/social_graph/README.md) |\n| \u4e3a\u641c\u7d22\u5f15\u64ce\u8bbe\u8ba1\u4e00\u4e2a key-value \u50a8\u5b58                   | [\u89e3\u7b54](solutions/system_design/query_cache/README.md) |\n| \u901a\u8fc7\u5206\u7c7b\u7279\u6027\u8bbe\u8ba1 Amazon \u7684\u9500\u552e\u6392\u540d                    | [\u89e3\u7b54](solutions/system_design/sales_rank/README.md) |\n| \u5728 AWS \u4e0a\u8bbe\u8ba1\u4e00\u4e2a\u767e\u4e07\u7528\u6237\u7ea7\u522b\u7684\u7cfb\u7edf                     | [\u89e3\u7b54](solutions/system_design/scaling_aws/README.md) |\n| \u6dfb\u52a0\u4e00\u4e2a\u7cfb\u7edf\u8bbe\u8ba1\u95ee\u9898                               | [\u8d21\u732e](#\u8d21\u732e)                                |\n\n### \u8bbe\u8ba1 Pastebin.com (\u6216\u8005 Bit.ly)\n\n[\u67e5\u770b\u5b9e\u8df5\u4e0e\u89e3\u7b54](solutions/system_design/pastebin/README.md)\n\n![Imgur](images/4edXG0T.png)\n\n### \u8bbe\u8ba1 Twitter \u65f6\u95f4\u7ebf\u548c\u641c\u7d22 (\u6216\u8005 Facebook feed \u548c\u641c\u7d22)\n\n[\u67e5\u770b\u5b9e\u8df5\u4e0e\u89e3\u7b54](solutions/system_design/twitter/README.md)\n\n![Imgur](images/jrUBAF7.png)\n\n### \u8bbe\u8ba1\u4e00\u4e2a\u7f51\u9875\u722c\u866b\n\n[\u67e5\u770b\u5b9e\u8df5\u4e0e\u89e3\u7b54](solutions/system_design/web_crawler/README.md)\n\n![Imgur](images/bWxPtQA.png)\n\n### \u8bbe\u8ba1 Mint.com\n\n[\u67e5\u770b\u5b9e\u8df5\u4e0e\u89e3\u7b54](solutions/system_design/mint/README.md)\n\n![Imgur](images/V5q57vU.png)\n\n### \u4e3a\u4e00\u4e2a\u793e\u4ea4\u7f51\u7edc\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784\n\n[\u67e5\u770b\u5b9e\u8df5\u4e0e\u89e3\u7b54](solutions/system_design/social_graph/README.md)\n\n![Imgur](images/cdCv5g7.png)\n\n### \u4e3a\u641c\u7d22\u5f15\u64ce\u8bbe\u8ba1\u4e00\u4e2a key-value \u50a8\u5b58\n\n[\u67e5\u770b\u5b9e\u8df5\u4e0e\u89e3\u7b54](solutions/system_design/query_cache/README.md)\n\n![Imgur](images/4j99mhe.png)\n\n### \u8bbe\u8ba1\u6309\u7c7b\u522b\u5206\u7c7b\u7684 Amazon \u9500\u552e\u6392\u540d\n\n[\u67e5\u770b\u5b9e\u8df5\u4e0e\u89e3\u7b54](solutions/system_design/sales_rank/README.md)\n\n![Imgur](images/MzExP06.png)\n\n### \u5728 AWS \u4e0a\u8bbe\u8ba1\u4e00\u4e2a\u767e\u4e07\u7528\u6237\u7ea7\u522b\u7684\u7cfb\u7edf\n\n[\u67e5\u770b\u5b9e\u8df5\u4e0e\u89e3\u7b54](solutions/system_design/scaling_aws/README.md)\n\n![Imgur](images/jj3A5N8.png)\n\n## \u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7684\u9762\u8bd5\u95ee\u9898\u53ca\u89e3\u7b54\n\n> \u5e38\u89c1\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u9762\u8bd5\u95ee\u9898\u53ca\u5b9e\u4f8b\u8ba8\u8bba\uff0c\u4ee3\u7801\u548c\u56fe\u8868\u6f14\u793a\u3002\n>\n> \u4e0e\u5185\u5bb9\u76f8\u5173\u7684\u89e3\u51b3\u65b9\u6848\u5728 `solutions/` \u6587\u4ef6\u5939\u4e2d\u3002\n\n>**\u6ce8\uff1a\u6b64\u8282\u8fd8\u5728\u5b8c\u5584\u4e2d**\n\n| \u95ee\u9898           |                                          |\n| ------------ | ---------------------------------------- |\n| \u8bbe\u8ba1 hash map  | [\u89e3\u51b3\u65b9\u6848](solutions/object_oriented_design/hash_table/hash_map.ipynb) |\n| \u8bbe\u8ba1 LRU \u7f13\u5b58    | [\u89e3\u51b3\u65b9\u6848](solutions/object_oriented_design/lru_cache/lru_cache.ipynb) |\n| \u8bbe\u8ba1\u4e00\u4e2a\u547c\u53eb\u4e2d\u5fc3     | [\u89e3\u51b3\u65b9\u6848](solutions/object_oriented_design/call_center/call_center.ipynb) |\n| \u8bbe\u8ba1\u4e00\u526f\u724c        | [\u89e3\u51b3\u65b9\u6848](solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb) |\n| \u8bbe\u8ba1\u4e00\u4e2a\u505c\u8f66\u573a      | [\u89e3\u51b3\u65b9\u6848](solutions/object_oriented_design/parking_lot/parking_lot.ipynb) |\n| \u8bbe\u8ba1\u4e00\u4e2a\u804a\u5929\u670d\u52a1     | [\u89e3\u51b3\u65b9\u6848](solutions/object_oriented_design/online_chat/online_chat.ipynb) |\n| \u8bbe\u8ba1\u4e00\u4e2a\u73af\u5f62\u6570\u7ec4     | [\u5f85\u89e3\u51b3](#\u8d21\u732e)                     |\n| \u6dfb\u52a0\u4e00\u4e2a\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u95ee\u9898 | [\u5f85\u89e3\u51b3](#\u8d21\u732e)                     |\n\n## \u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898\uff1a\u4ece\u8fd9\u91cc\u5f00\u59cb\n\n\u4e0d\u719f\u6089\u7cfb\u7edf\u8bbe\u8ba1\uff1f\n\n\u9996\u5148\uff0c\u4f60\u9700\u8981\u5bf9\u4e00\u822c\u6027\u539f\u5219\u6709\u4e00\u4e2a\u57fa\u672c\u7684\u8ba4\u8bc6\uff0c\u77e5\u9053\u5b83\u4eec\u662f\u4ec0\u4e48\uff0c\u600e\u6837\u4f7f\u7528\u4ee5\u53ca\u5229\u5f0a\u3002\n\n### \u7b2c\u4e00\u6b65\uff1a\u56de\u987e\u53ef\u6269\u5c55\u6027\uff08scalability\uff09\u7684\u89c6\u9891\u8bb2\u5ea7\n\n[\u54c8\u4f5b\u5927\u5b66\u53ef\u6269\u5c55\u6027\u8bb2\u5ea7](https://www.youtube.com/watch?v=-W9F__D3oY4)\n\n* \u4e3b\u9898\u6db5\u76d6\n    * \u5782\u76f4\u6269\u5c55\uff08Vertical scaling\uff09\n    * \u6c34\u5e73\u6269\u5c55\uff08Horizontal scaling\uff09\n    * \u7f13\u5b58\n    * \u8d1f\u8f7d\u5747\u8861\n    * \u6570\u636e\u5e93\u590d\u5236\n    * \u6570\u636e\u5e93\u5206\u533a\n\n### \u7b2c\u4e8c\u6b65\uff1a\u56de\u987e\u53ef\u6269\u5c55\u6027\u6587\u7ae0\n\n[\u53ef\u6269\u5c55\u6027](http://www.lecloud.net/tagged/scalability/chrono)\n\n* \u4e3b\u9898\u6db5\u76d6\uff1a\n    * [Clones](http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n    * [\u6570\u636e\u5e93](http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n    * [\u7f13\u5b58](http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n    * [\u5f02\u6b65](http://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism)\n\n### \u63a5\u4e0b\u6765\u7684\u6b65\u9aa4\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u770b\u770b\u9ad8\u9636\u7684\u6743\u8861\u548c\u53d6\u820d:\n\n* **\u6027\u80fd**\u4e0e**\u53ef\u6269\u5c55\u6027**\n* **\u5ef6\u8fdf**\u4e0e**\u541e\u5410\u91cf**\n* **\u53ef\u7528\u6027**\u4e0e**\u4e00\u81f4\u6027**\n\n\u8bb0\u4f4f**\u6bcf\u4e2a\u65b9\u9762\u90fd\u9762\u4e34\u53d6\u820d\u548c\u6743\u8861**\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u5c06\u6df1\u5165\u66f4\u5177\u4f53\u7684\u4e3b\u9898\uff0c\u5982 DNS\u3001CDN \u548c\u8d1f\u8f7d\u5747\u8861\u5668\u3002\n\n## \u6027\u80fd\u4e0e\u53ef\u6269\u5c55\u6027\n\n\u5982\u679c\u670d\u52a1**\u6027\u80fd**\u7684\u589e\u957f\u4e0e\u8d44\u6e90\u7684\u589e\u52a0\u662f\u6210\u6bd4\u4f8b\u7684\uff0c\u670d\u52a1\u5c31\u662f\u53ef\u6269\u5c55\u7684\u3002\u901a\u5e38\uff0c\u63d0\u9ad8\u6027\u80fd\u610f\u5473\u7740\u670d\u52a1\u4e8e\u66f4\u591a\u7684\u5de5\u4f5c\u5355\u5143\uff0c\u53e6\u4e00\u65b9\u9762\uff0c\u5f53\u6570\u636e\u96c6\u589e\u957f\u65f6\uff0c\u540c\u6837\u4e5f\u53ef\u4ee5\u5904\u7406\u66f4\u5927\u7684\u5de5\u4f5c\u5355\u4f4d\u3002<sup><a href=\"http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html\">1</a></sup>\n\n\u53e6\u4e00\u4e2a\u89d2\u5ea6\u6765\u770b\u5f85\u6027\u80fd\u4e0e\u53ef\u6269\u5c55\u6027:\n\n* \u5982\u679c\u4f60\u7684\u7cfb\u7edf\u6709**\u6027\u80fd**\u95ee\u9898\uff0c\u5bf9\u4e8e\u5355\u4e2a\u7528\u6237\u6765\u8bf4\u662f\u7f13\u6162\u7684\u3002\n* \u5982\u679c\u4f60\u7684\u7cfb\u7edf\u6709**\u53ef\u6269\u5c55\u6027**\u95ee\u9898\uff0c\u5355\u4e2a\u7528\u6237\u8f83\u5feb\u4f46\u5728\u9ad8\u8d1f\u8f7d\u4e0b\u4f1a\u53d8\u6162\u3002\n\n### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\n\n* [\u7b80\u5355\u8c08\u8c08\u53ef\u6269\u5c55\u6027](http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html)\n* [\u53ef\u6269\u5c55\u6027\uff0c\u53ef\u7528\u6027\uff0c\u7a33\u5b9a\u6027\u548c\u6a21\u5f0f](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n\n## \u5ef6\u8fdf\u4e0e\u541e\u5410\u91cf\n\n**\u5ef6\u8fdf**\u662f\u6267\u884c\u64cd\u4f5c\u6216\u8fd0\u7b97\u7ed3\u679c\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u3002\n\n**\u541e\u5410\u91cf**\u662f\u5355\u4f4d\u65f6\u95f4\u5185\uff08\u6267\u884c\uff09\u6b64\u7c7b\u64cd\u4f5c\u6216\u8fd0\u7b97\u7684\u6570\u91cf\u3002\n\n\u901a\u5e38\uff0c\u4f60\u5e94\u8be5\u4ee5**\u53ef\u63a5\u53d7\u7ea7\u5ef6\u8fdf**\u4e0b**\u6700\u5927\u5316\u541e\u5410\u91cf**\u4e3a\u76ee\u6807\u3002\n\n### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\n\n* [\u7406\u89e3\u5ef6\u8fdf\u4e0e\u541e\u5410\u91cf](https://community.cadence.com/cadence_blogs_8/b/sd/archive/2010/09/13/understanding-latency-vs-throughput)\n\n## \u53ef\u7528\u6027\u4e0e\u4e00\u81f4\u6027\n\n### CAP \u7406\u8bba\n\n<p align=\"center\">\n  <img src=\"images/bgLMI2u.png\">\n  <br/>\n  <strong><a href=\"http://robertgreiner.com/2014/08/cap-theorem-revisited\">\u6765\u6e90\uff1a\u518d\u770b CAP \u7406\u8bba</a></strong>\n</p>\n\n\u5728\u4e00\u4e2a\u5206\u5e03\u5f0f\u8ba1\u7b97\u7cfb\u7edf\u4e2d\uff0c\u53ea\u80fd\u540c\u65f6\u6ee1\u8db3\u4e0b\u5217\u7684\u4e24\u70b9:\n\n* **\u4e00\u81f4\u6027** \u2500 \u6bcf\u6b21\u8bbf\u95ee\u90fd\u80fd\u83b7\u5f97\u6700\u65b0\u6570\u636e\u4f46\u53ef\u80fd\u4f1a\u6536\u5230\u9519\u8bef\u54cd\u5e94\n* **\u53ef\u7528\u6027** \u2500 \u6bcf\u6b21\u8bbf\u95ee\u90fd\u80fd\u6536\u5230\u975e\u9519\u54cd\u5e94\uff0c\u4f46\u4e0d\u4fdd\u8bc1\u83b7\u53d6\u5230\u6700\u65b0\u6570\u636e\n* **\u5206\u533a\u5bb9\u9519\u6027** \u2500 \u5728\u4efb\u610f\u5206\u533a\u7f51\u7edc\u6545\u969c\u7684\u60c5\u51b5\u4e0b\u7cfb\u7edf\u4ecd\u80fd\u7ee7\u7eed\u8fd0\u884c\n\n**\u7f51\u7edc\u5e76\u4e0d\u53ef\u9760\uff0c\u6240\u4ee5\u4f60\u5e94\u8981\u652f\u6301\u5206\u533a\u5bb9\u9519\u6027\uff0c\u5e76\u9700\u8981\u5728\u8f6f\u4ef6\u53ef\u7528\u6027\u548c\u4e00\u81f4\u6027\u95f4\u505a\u51fa\u53d6\u820d\u3002**\n\n#### CP \u2500 \u4e00\u81f4\u6027\u548c\u5206\u533a\u5bb9\u9519\u6027\n\n\u7b49\u5f85\u5206\u533a\u8282\u70b9\u7684\u54cd\u5e94\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5ef6\u65f6\u9519\u8bef\u3002\u5982\u679c\u4f60\u7684\u4e1a\u52a1\u9700\u6c42\u9700\u8981\u539f\u5b50\u8bfb\u5199\uff0cCP \u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\n\n#### AP \u2500 \u53ef\u7528\u6027\u4e0e\u5206\u533a\u5bb9\u9519\u6027\n\n\u54cd\u5e94\u8282\u70b9\u4e0a\u53ef\u7528\u6570\u636e\u7684\u6700\u8fd1\u7248\u672c\u53ef\u80fd\u5e76\u4e0d\u662f\u6700\u65b0\u7684\u3002\u5f53\u5206\u533a\u89e3\u6790\u5b8c\u540e\uff0c\u5199\u5165\uff08\u64cd\u4f5c\uff09\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u6765\u4f20\u64ad\u3002\n\n\u5982\u679c\u4e1a\u52a1\u9700\u6c42\u5141\u8bb8[\u6700\u7ec8\u4e00\u81f4\u6027](#\u6700\u7ec8\u4e00\u81f4\u6027)\uff0c\u6216\u5f53\u6709\u5916\u90e8\u6545\u969c\u65f6\u8981\u6c42\u7cfb\u7edf\u7ee7\u7eed\u8fd0\u884c\uff0cAP \u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\n\n### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\n\n* [\u518d\u770b CAP \u7406\u8bba](http://robertgreiner.com/2014/08/cap-theorem-revisited/)\n* [\u901a\u4fd7\u6613\u61c2\u5730\u4ecb\u7ecd CAP \u7406\u8bba](http://ksat.me/a-plain-english-introduction-to-cap-theorem/)\n* [CAP FAQ](https://github.com/henryr/cap-faq)\n\n## \u4e00\u81f4\u6027\u6a21\u5f0f\n\n\u6709\u540c\u4e00\u4efd\u6570\u636e\u7684\u591a\u4efd\u526f\u672c\uff0c\u6211\u4eec\u9762\u4e34\u7740\u600e\u6837\u540c\u6b65\u5b83\u4eec\u7684\u9009\u62e9\uff0c\u4ee5\u4fbf\u8ba9\u5ba2\u6237\u7aef\u6709\u4e00\u81f4\u7684\u663e\u793a\u6570\u636e\u3002\u56de\u60f3 [CAP \u7406\u8bba](#cap-\u7406\u8bba)\u4e2d\u7684\u4e00\u81f4\u6027\u5b9a\u4e49 \u2500 \u6bcf\u6b21\u8bbf\u95ee\u90fd\u80fd\u83b7\u5f97\u6700\u65b0\u6570\u636e\u4f46\u53ef\u80fd\u4f1a\u6536\u5230\u9519\u8bef\u54cd\u5e94\n\n\n### \u5f31\u4e00\u81f4\u6027\n\n\u5728\u5199\u5165\u4e4b\u540e\uff0c\u8bbf\u95ee\u53ef\u80fd\u770b\u5230\uff0c\u4e5f\u53ef\u80fd\u770b\u4e0d\u5230\uff08\u5199\u5165\u6570\u636e\uff09\u3002\u5c3d\u529b\u4f18\u5316\u4e4b\u8ba9\u5176\u80fd\u8bbf\u95ee\u6700\u65b0\u6570\u636e\u3002\n\n\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5 memcached \u7b49\u7cfb\u7edf\u4e2d\u770b\u5230\u3002\u5f31\u4e00\u81f4\u6027\u5728 VoIP\uff0c\u89c6\u9891\u804a\u5929\u548c\u5b9e\u65f6\u591a\u4eba\u6e38\u620f\u7b49\u771f\u5b9e\u7528\u4f8b\u4e2d\u8868\u73b0\u4e0d\u9519\u3002\u6253\u4e2a\u6bd4\u65b9\uff0c\u5982\u679c\u4f60\u5728\u901a\u8bdd\u4e2d\u4e22\u5931\u4fe1\u53f7\u51e0\u79d2\u949f\u65f6\u95f4\uff0c\u5f53\u91cd\u65b0\u8fde\u63a5\u65f6\u4f60\u662f\u542c\u4e0d\u5230\u8fd9\u51e0\u79d2\u949f\u6240\u8bf4\u7684\u8bdd\u7684\u3002\n\n### \u6700\u7ec8\u4e00\u81f4\u6027\n\n\u5728\u5199\u5165\u540e\uff0c\u8bbf\u95ee\u6700\u7ec8\u80fd\u770b\u5230\u5199\u5165\u6570\u636e\uff08\u901a\u5e38\u5728\u6570\u6beb\u79d2\u5185\uff09\u3002\u6570\u636e\u88ab\u5f02\u6b65\u590d\u5236\u3002\n\nDNS \u548c email \u7b49\u7cfb\u7edf\u4f7f\u7528\u7684\u662f\u6b64\u79cd\u65b9\u5f0f\u3002\u6700\u7ec8\u4e00\u81f4\u6027\u5728\u9ad8\u53ef\u7528\u6027\u7cfb\u7edf\u4e2d\u6548\u679c\u4e0d\u9519\u3002\n\n### \u5f3a\u4e00\u81f4\u6027\n\n\u5728\u5199\u5165\u540e\uff0c\u8bbf\u95ee\u7acb\u5373\u53ef\u89c1\u3002\u6570\u636e\u88ab\u540c\u6b65\u590d\u5236\u3002\n\n\u6587\u4ef6\u7cfb\u7edf\u548c\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff08RDBMS\uff09\u4e2d\u4f7f\u7528\u7684\u662f\u6b64\u79cd\u65b9\u5f0f\u3002\u5f3a\u4e00\u81f4\u6027\u5728\u9700\u8981\u8bb0\u5f55\u7684\u7cfb\u7edf\u4e2d\u8fd0\u4f5c\u826f\u597d\u3002\n\n### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\n\n* [Transactions across data centers](http://snarfed.org/transactions_across_datacenters_io.html)\n\n## \u53ef\u7528\u6027\u6a21\u5f0f\n\n\u6709\u4e24\u79cd\u652f\u6301\u9ad8\u53ef\u7528\u6027\u7684\u6a21\u5f0f: **\u6545\u969c\u5207\u6362\uff08fail-over\uff09**\u548c**\u590d\u5236\uff08replication\uff09**\u3002\n\n### \u6545\u969c\u5207\u6362\n\n#### \u5de5\u4f5c\u5230\u5907\u7528\u5207\u6362\uff08Active-passive\uff09\n\n\u5173\u4e8e\u5de5\u4f5c\u5230\u5907\u7528\u7684\u6545\u969c\u5207\u6362\u6d41\u7a0b\u662f\uff0c\u5de5\u4f5c\u670d\u52a1\u5668\u53d1\u9001\u5468\u671f\u4fe1\u53f7\u7ed9\u5f85\u673a\u4e2d\u7684\u5907\u7528\u670d\u52a1\u5668\u3002\u5982\u679c\u5468\u671f\u4fe1\u53f7\u4e2d\u65ad\uff0c\u5907\u7528\u670d\u52a1\u5668\u5207\u6362\u6210\u5de5\u4f5c\u670d\u52a1\u5668\u7684 IP \u5730\u5740\u5e76\u6062\u590d\u670d\u52a1\u3002\n\n\u5b95\u673a\u65f6\u95f4\u53d6\u51b3\u4e8e\u5907\u7528\u670d\u52a1\u5668\u5904\u4e8e\u201c\u70ed\u201d\u5f85\u673a\u72b6\u6001\u8fd8\u662f\u9700\u8981\u4ece\u201c\u51b7\u201d\u5f85\u673a\u72b6\u6001\u8fdb\u884c\u542f\u52a8\u3002\u53ea\u6709\u5de5\u4f5c\u670d\u52a1\u5668\u5904\u7406\u6d41\u91cf\u3002\n\n\u5de5\u4f5c\u5230\u5907\u7528\u7684\u6545\u969c\u5207\u6362\u4e5f\u88ab\u79f0\u4e3a\u4e3b\u4ece\u5207\u6362\u3002\n\n#### \u53cc\u5de5\u4f5c\u5207\u6362\uff08Active-active\uff09\n\n\u5728\u53cc\u5de5\u4f5c\u5207\u6362\u4e2d\uff0c\u53cc\u65b9\u90fd\u5728\u7ba1\u63a7\u6d41\u91cf\uff0c\u5728\u5b83\u4eec\u4e4b\u95f4\u5206\u6563\u8d1f\u8f7d\u3002\n\n\u5982\u679c\u662f\u5916\u7f51\u670d\u52a1\u5668\uff0cDNS \u5c06\u9700\u8981\u5bf9\u4e24\u65b9\u90fd\u4e86\u89e3\u3002\u5982\u679c\u662f\u5185\u7f51\u670d\u52a1\u5668\uff0c\u5e94\u7528\u7a0b\u5e8f\u903b\u8f91\u5c06\u9700\u8981\u5bf9\u4e24\u65b9\u90fd\u4e86\u89e3\u3002\n\n\u53cc\u5de5\u4f5c\u5207\u6362\u4e5f\u53ef\u4ee5\u79f0\u4e3a\u4e3b\u4e3b\u5207\u6362\u3002\n\n### \u7f3a\u9677\uff1a\u6545\u969c\u5207\u6362\n\n* \u6545\u969c\u5207\u6362\u9700\u8981\u6dfb\u52a0\u989d\u5916\u786c\u4ef6\u5e76\u589e\u52a0\u590d\u6742\u6027\u3002\n* \u5982\u679c\u65b0\u5199\u5165\u6570\u636e\u5728\u80fd\u88ab\u590d\u5236\u5230\u5907\u7528\u7cfb\u7edf\u4e4b\u524d\uff0c\u5de5\u4f5c\u7cfb\u7edf\u51fa\u73b0\u4e86\u6545\u969c\uff0c\u5219\u6709\u53ef\u80fd\u4f1a\u4e22\u5931\u6570\u636e\u3002\n\n### \u590d\u5236\n\n#### \u4e3b\u2500\u4ece\u590d\u5236\u548c\u4e3b\u2500\u4e3b\u590d\u5236\n\n\u8fd9\u4e2a\u4e3b\u9898\u8fdb\u4e00\u6b65\u63a2\u8ba8\u4e86[\u6570\u636e\u5e93](#\u6570\u636e\u5e93)\u90e8\u5206:\n\n* [\u4e3b\u2500\u4ece\u590d\u5236](#\u4e3b\u4ece\u590d\u5236)\n* [\u4e3b\u2500\u4e3b\u590d\u5236](#\u4e3b\u4e3b\u590d\u5236)\n\n## \u57df\u540d\u7cfb\u7edf\n\n<p align=\"center\">\n  <img src=\"images/IOyLj4i.jpg\">\n  <br/>\n  <strong><a href=\"http://www.slideshare.net/srikrupa5/dns-security-presentation-issa\">\u6765\u6e90\uff1aDNS \u5b89\u5168\u4ecb\u7ecd</a></strong>\n</p>\n\n\u57df\u540d\u7cfb\u7edf\u662f\u628a www.example.com \u7b49\u57df\u540d\u8f6c\u6362\u6210 IP \u5730\u5740\u3002\n\n\u57df\u540d\u7cfb\u7edf\u662f\u5206\u5c42\u6b21\u7684\uff0c\u4e00\u4e9b DNS \u670d\u52a1\u5668\u4f4d\u4e8e\u9876\u5c42\u3002\u5f53\u67e5\u8be2\uff08\u57df\u540d\uff09 IP \u65f6\uff0c\u8def\u7531\u6216 ISP \u63d0\u4f9b\u8fde\u63a5 DNS \u670d\u52a1\u5668\u7684\u4fe1\u606f\u3002\u8f83\u5e95\u5c42\u7684 DNS \u670d\u52a1\u5668\u7f13\u5b58\u6620\u5c04\uff0c\u5b83\u53ef\u80fd\u4f1a\u56e0\u4e3a DNS \u4f20\u64ad\u5ef6\u65f6\u800c\u5931\u6548\u3002DNS \u7ed3\u679c\u53ef\u4ee5\u7f13\u5b58\u5728\u6d4f\u89c8\u5668\u6216\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4e00\u6bb5\u65f6\u95f4\uff0c\u65f6\u95f4\u957f\u77ed\u53d6\u51b3\u4e8e[\u5b58\u6d3b\u65f6\u95f4 TTL](https://en.wikipedia.org/wiki/Time_to_live)\u3002\n\n* **NS \u8bb0\u5f55\uff08\u57df\u540d\u670d\u52a1\uff09** \u2500 \u6307\u5b9a\u89e3\u6790\u57df\u540d\u6216\u5b50\u57df\u540d\u7684 DNS \u670d\u52a1\u5668\u3002\n* **MX \u8bb0\u5f55\uff08\u90ae\u4ef6\u4ea4\u6362\uff09** \u2500 \u6307\u5b9a\u63a5\u6536\u4fe1\u606f\u7684\u90ae\u4ef6\u670d\u52a1\u5668\u3002\n* **A \u8bb0\u5f55\uff08\u5730\u5740\uff09** \u2500 \u6307\u5b9a\u57df\u540d\u5bf9\u5e94\u7684 IP \u5730\u5740\u8bb0\u5f55\u3002\n* **CNAME\uff08\u89c4\u8303\uff09** \u2500 \u4e00\u4e2a\u57df\u540d\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u57df\u540d\u6216 `CNAME` \u8bb0\u5f55\uff08 example.com \u6307\u5411 www.example.com \uff09\u6216\u6620\u5c04\u5230\u4e00\u4e2a `A` \u8bb0\u5f55\u3002\n\n[CloudFlare](https://www.cloudflare.com/dns/) \u548c [Route 53](https://aws.amazon.com/route53/) \u7b49\u5e73\u53f0\u63d0\u4f9b\u7ba1\u7406 DNS \u7684\u529f\u80fd\u3002\u67d0\u4e9b DNS \u670d\u52a1\u901a\u8fc7\u96c6\u4e2d\u65b9\u5f0f\u6765\u8def\u7531\u6d41\u91cf:\n\n* [\u52a0\u6743\u8f6e\u8be2\u8c03\u5ea6](http://g33kinfo.com/info/archives/2657)\n    * \u9632\u6b62\u6d41\u91cf\u8fdb\u5165\u7ef4\u62a4\u4e2d\u7684\u670d\u52a1\u5668\n    * \u5728\u4e0d\u540c\u5927\u5c0f\u96c6\u7fa4\u95f4\u8d1f\u8f7d\u5747\u8861\n    * A/B \u6d4b\u8bd5\n* \u57fa\u4e8e\u5ef6\u8fdf\u8def\u7531\n* \u57fa\u4e8e\u5730\u7406\u4f4d\u7f6e\u8def\u7531\n\n### \u7f3a\u9677:DNS\n\n* \u867d\u8bf4\u7f13\u5b58\u53ef\u4ee5\u51cf\u8f7b DNS \u5ef6\u8fdf\uff0c\u4f46\u8fde\u63a5 DNS \u670d\u52a1\u5668\u8fd8\u662f\u5e26\u6765\u4e86\u8f7b\u5fae\u7684\u5ef6\u8fdf\u3002\n* \u867d\u7136\u5b83\u4eec\u901a\u5e38\u7531[\u653f\u5e9c\uff0c\u7f51\u7edc\u670d\u52a1\u63d0\u4f9b\u5546\u548c\u5927\u516c\u53f8](http://superuser.com/questions/472695/who-controls-the-dns-servers/472729)\u7ba1\u7406\uff0c\u4f46 DNS \u670d\u52a1\u7ba1\u7406\u4ecd\u53ef\u80fd\u662f\u590d\u6742\u7684\u3002\n* DNS \u670d\u52a1\u6700\u8fd1\u906d\u53d7 [DDoS \u653b\u51fb](http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/)\uff0c\u963b\u6b62\u4e0d\u77e5\u9053 Twitter IP \u5730\u5740\u7684\u7528\u6237\u8bbf\u95ee Twitter\u3002\n\n### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\n\n* [DNS \u67b6\u6784](https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx)\n* [Wikipedia](https://en.wikipedia.org/wiki/Domain_Name_System)\n* [\u5173\u4e8e DNS \u7684\u6587\u7ae0](https://support.dnsimple.com/categories/dns/)\n\n## \u5185\u5bb9\u5206\u53d1\u7f51\u7edc\uff08CDN\uff09\n\n<p align=\"center\">\n  <img src=\"images/h9TAuGI.jpg\">\n  <br/>\n  <strong><a href=\"https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/\">\u6765\u6e90\uff1a\u4e3a\u4ec0\u4e48\u4f7f\u7528 CDN</a></strong>\n</p>\n\n\u5185\u5bb9\u5206\u53d1\u7f51\u7edc\uff08CDN\uff09\u662f\u4e00\u4e2a\u5168\u7403\u6027\u7684\u4ee3\u7406\u670d\u52a1\u5668\u5206\u5e03\u5f0f\u7f51\u7edc\uff0c\u5b83\u4ece\u9760\u8fd1\u7528\u6237\u7684\u4f4d\u7f6e\u63d0\u4f9b\u5185\u5bb9\u3002\u901a\u5e38\uff0cHTML/CSS/JS\uff0c\u56fe\u7247\u548c\u89c6\u9891\u7b49\u9759\u6001\u5185\u5bb9\u7531 CDN \u63d0\u4f9b\uff0c\u867d\u7136\u4e9a\u9a6c\u900a CloudFront \u7b49\u4e5f\u652f\u6301\u52a8\u6001\u5185\u5bb9\u3002CDN \u7684 DNS \u89e3\u6790\u4f1a\u544a\u77e5\u5ba2\u6237\u7aef\u8fde\u63a5\u54ea\u53f0\u670d\u52a1\u5668\u3002\n\n\u5c06\u5185\u5bb9\u5b58\u50a8\u5728 CDN \u4e0a\u53ef\u4ee5\u4ece\u4e24\u4e2a\u65b9\u9762\u6765\u63d0\u4f9b\u6027\u80fd:\n\n* \u4ece\u9760\u8fd1\u7528\u6237\u7684\u6570\u636e\u4e2d\u5fc3\u63d0\u4f9b\u8d44\u6e90\n* \u901a\u8fc7 CDN \u4f60\u7684\u670d\u52a1\u5668\u4e0d\u5fc5\u771f\u7684\u5904\u7406\u8bf7\u6c42\n\n### CDN \u63a8\u9001\uff08push\uff09\n\n\u5f53\u4f60\u670d\u52a1\u5668\u4e0a\u5185\u5bb9\u53d1\u751f\u53d8\u52a8\u65f6\uff0c\u63a8\u9001 CDN \u63a5\u53d7\u65b0\u5185\u5bb9\u3002\u76f4\u63a5\u63a8\u9001\u7ed9 CDN \u5e76\u91cd\u5199 URL \u5730\u5740\u4ee5\u6307\u5411\u4f60\u7684\u5185\u5bb9\u7684 CDN \u5730\u5740\u3002\u4f60\u53ef\u4ee5\u914d\u7f6e\u5185\u5bb9\u5230\u671f\u65f6\u95f4\u53ca\u4f55\u65f6\u66f4\u65b0\u3002\u5185\u5bb9\u53ea\u6709\u5728\u66f4\u6539\u6216\u65b0\u589e\u662f\u624d\u63a8\u9001\uff0c\u6d41\u91cf\u6700\u5c0f\u5316\uff0c\u4f46\u50a8\u5b58\u6700\u5927\u5316\u3002\n\n### CDN \u62c9\u53d6\uff08pull\uff09\n\nCDN \u62c9\u53d6\u662f\u5f53\u7b2c\u4e00\u4e2a\u7528\u6237\u8bf7\u6c42\u8be5\u8d44\u6e90\u65f6\uff0c\u4ece\u670d\u52a1\u5668\u4e0a\u62c9\u53d6\u8d44\u6e90\u3002\u4f60\u5c06\u5185\u5bb9\u7559\u5728\u81ea\u5df1\u7684\u670d\u52a1\u5668\u4e0a\u5e76\u91cd\u5199 URL \u6307\u5411 CDN \u5730\u5740\u3002\u76f4\u5230\u5185\u5bb9\u88ab\u7f13\u5b58\u5728 CDN \u4e0a\u4e3a\u6b62\uff0c\u8fd9\u6837\u8bf7\u6c42\u53ea\u4f1a\u66f4\u6162\uff0c\n\n[\u5b58\u6d3b\u65f6\u95f4\uff08TTL\uff09](https://en.wikipedia.org/wiki/Time_to_live)\u51b3\u5b9a\u7f13\u5b58\u591a\u4e45\u65f6\u95f4\u3002CDN \u62c9\u53d6\u65b9\u5f0f\u6700\u5c0f\u5316 CDN \u4e0a\u7684\u50a8\u5b58\u7a7a\u95f4\uff0c\u4f46\u5982\u679c\u8fc7\u671f\u6587\u4ef6\u5e76\u5728\u5b9e\u9645\u66f4\u6539\u4e4b\u524d\u88ab\u62c9\u53d6\uff0c\u5219\u4f1a\u5bfc\u81f4\u5197\u4f59\u7684\u6d41\u91cf\u3002\n\n\u9ad8\u6d41\u91cf\u7ad9\u70b9\u4f7f\u7528 CDN \u62c9\u53d6\u6548\u679c\u4e0d\u9519\uff0c\u56e0\u4e3a\u53ea\u6709\u6700\u8fd1\u8bf7\u6c42\u7684\u5185\u5bb9\u4fdd\u5b58\u5728 CDN \u4e2d\uff0c\u6d41\u91cf\u624d\u80fd\u66f4\u5e73\u8861\u5730\u5206\u6563\u3002\n\n### \u7f3a\u9677\uff1aCDN\n\n* CDN \u6210\u672c\u53ef\u80fd\u56e0\u6d41\u91cf\u800c\u5f02\uff0c\u53ef\u80fd\u5728\u6743\u8861\u4e4b\u540e\u4f60\u5c06\u4e0d\u4f1a\u4f7f\u7528 CDN\u3002\n* \u5982\u679c\u5728 TTL \u8fc7\u671f\u4e4b\u524d\u66f4\u65b0\u5185\u5bb9\uff0cCDN \u7f13\u5b58\u5185\u5bb9\u53ef\u80fd\u4f1a\u8fc7\u65f6\u3002\n* CDN \u9700\u8981\u66f4\u6539\u9759\u6001\u5185\u5bb9\u7684 URL \u5730\u5740\u4ee5\u6307\u5411 CDN\u3002\n\n### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\n\n* [\u5168\u7403\u6027\u5185\u5bb9\u5206\u53d1\u7f51\u7edc](http://repository.cmu.edu/cgi/viewcontent.cgi?article=2112&context=compsci)\n* [CDN \u62c9\u53d6\u548c CDN \u63a8\u9001\u7684\u533a\u522b](http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/)\n* [Wikipedia](https://en.wikipedia.org/wiki/Content_delivery_network)\n\n## \u8d1f\u8f7d\u5747\u8861\u5668\n\n<p align=\"center\">\n  <img src=\"images/h81n9iK.png\">\n  <br/>\n  <strong><a href=\"http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html\">\u6765\u6e90\uff1a\u53ef\u6269\u5c55\u7684\u7cfb\u7edf\u8bbe\u8ba1\u6a21\u5f0f</a></strong>\n</p>\n\n\u8d1f\u8f7d\u5747\u8861\u5668\u5c06\u4f20\u5165\u7684\u8bf7\u6c42\u5206\u53d1\u5230\u5e94\u7528\u670d\u52a1\u5668\u548c\u6570\u636e\u5e93\u7b49\u8ba1\u7b97\u8d44\u6e90\u3002\u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\uff0c\u8d1f\u8f7d\u5747\u8861\u5668\u5c06\u4ece\u8ba1\u7b97\u8d44\u6e90\u6765\u7684\u54cd\u5e94\u8fd4\u56de\u7ed9\u6070\u5f53\u7684\u5ba2\u6237\u7aef\u3002\u8d1f\u8f7d\u5747\u8861\u5668\u7684\u6548\u7528\u5728\u4e8e:\n\n* \u9632\u6b62\u8bf7\u6c42\u8fdb\u5165\u4e0d\u597d\u7684\u670d\u52a1\u5668\n* \u9632\u6b62\u8d44\u6e90\u8fc7\u8f7d\n* \u5e2e\u52a9\u6d88\u9664\u5355\u4e00\u7684\u6545\u969c\u70b9\n\n\u8d1f\u8f7d\u5747\u8861\u5668\u53ef\u4ee5\u901a\u8fc7\u786c\u4ef6\uff08\u6602\u8d35\uff09\u6216 HAProxy \u7b49\u8f6f\u4ef6\u6765\u5b9e\u73b0\u3002\n\u589e\u52a0\u7684\u597d\u5904\u5305\u62ec:\n\n* **SSL \u7ec8\u7ed3** \u2500 \u89e3\u5bc6\u4f20\u5165\u7684\u8bf7\u6c42\u5e76\u52a0\u5bc6\u670d\u52a1\u5668\u54cd\u5e94\uff0c\u8fd9\u6837\u7684\u8bdd\u540e\u7aef\u670d\u52a1\u5668\u5c31\u4e0d\u5fc5\u518d\u6267\u884c\u8fd9\u4e9b\u6f5c\u5728\u9ad8\u6d88\u8017\u8fd0\u7b97\u4e86\u3002\n    * \u4e0d\u9700\u8981\u518d\u6bcf\u53f0\u670d\u52a1\u5668\u4e0a\u5b89\u88c5 [X.509 \u8bc1\u4e66](https://en.wikipedia.org/wiki/X.509)\u3002\n* **Session \u7559\u5b58** \u2500 \u5982\u679c Web \u5e94\u7528\u7a0b\u5e8f\u4e0d\u8ffd\u8e2a\u4f1a\u8bdd\uff0c\u53d1\u51fa cookie \u5e76\u5c06\u7279\u5b9a\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u8def\u7531\u5230\u540c\u4e00\u5b9e\u4f8b\u3002\n\n\u901a\u5e38\u4f1a\u8bbe\u7f6e\u91c7\u7528[\u5de5\u4f5c\u2500\u5907\u7528](#\u5de5\u4f5c\u5230\u5907\u7528\u5207\u6362active-passive) \u6216 [\u53cc\u5de5\u4f5c](#\u53cc\u5de5\u4f5c\u5207\u6362active-active) \u6a21\u5f0f\u7684\u591a\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u4ee5\u514d\u53d1\u751f\u6545\u969c\u3002\n\n\u8d1f\u8f7d\u5747\u8861\u5668\u80fd\u57fa\u4e8e\u591a\u79cd\u65b9\u5f0f\u6765\u8def\u7531\u6d41\u91cf:\n\n* \u968f\u673a\n* \u6700\u5c11\u8d1f\u8f7d\n* Session/cookie\n* [\u8f6e\u8be2\u8c03\u5ea6\u6216\u52a0\u6743\u8f6e\u8be2\u8c03\u5ea6\u7b97\u6cd5](http://g33kinfo.com/info/archives/2657)\n* [\u56db\u5c42\u8d1f\u8f7d\u5747\u8861](#\u56db\u5c42\u8d1f\u8f7d\u5747\u8861)\n* [\u4e03\u5c42\u8d1f\u8f7d\u5747\u8861](#\u4e03\u5c42\u8d1f\u8f7d\u5747\u8861)\n\n### \u56db\u5c42\u8d1f\u8f7d\u5747\u8861\n\n\u56db\u5c42\u8d1f\u8f7d\u5747\u8861\u6839\u636e\u76d1\u770b[\u4f20\u8f93\u5c42](#\u901a\u8baf)\u7684\u4fe1\u606f\u6765\u51b3\u5b9a\u5982\u4f55\u5206\u53d1\u8bf7\u6c42\u3002\u901a\u5e38\uff0c\u8fd9\u4f1a\u6d89\u53ca\u6765\u6e90\uff0c\u76ee\u6807 IP \u5730\u5740\u548c\u8bf7\u6c42\u5934\u4e2d\u7684\u7aef\u53e3\uff0c\u4f46\u4e0d\u5305\u62ec\u6570\u636e\u5305\uff08\u62a5\u6587\uff09\u5185\u5bb9\u3002\u56db\u5c42\u8d1f\u8f7d\u5747\u8861\u6267\u884c[\u7f51\u7edc\u5730\u5740\u8f6c\u6362\uff08NAT\uff09](https://www.nginx.com/resources/glossary/layer-4-load-balancing/)\u6765\u5411\u4e0a\u6e38\u670d\u52a1\u5668\u8f6c\u53d1\u7f51\u7edc\u6570\u636e\u5305\u3002\n\n### \u4e03\u5c42\u8d1f\u8f7d\u5747\u8861\u5668\n\n\u4e03\u5c42\u8d1f\u8f7d\u5747\u8861\u5668\u6839\u636e\u76d1\u63a7[\u5e94\u7528\u5c42](#\u901a\u8baf)\u6765\u51b3\u5b9a\u600e\u6837\u5206\u53d1\u8bf7\u6c42\u3002\u8fd9\u4f1a\u6d89\u53ca\u8bf7\u6c42\u5934\u7684\u5185\u5bb9\uff0c\u6d88\u606f\u548c cookie\u3002\u4e03\u5c42\u8d1f\u8f7d\u5747\u8861\u5668\u7ec8\u7ed3\u7f51\u7edc\u6d41\u91cf\uff0c\u8bfb\u53d6\u6d88\u606f\uff0c\u505a\u51fa\u8d1f\u8f7d\u5747\u8861\u5224\u5b9a\uff0c\u7136\u540e\u4f20\u9001\u7ed9\u7279\u5b9a\u670d\u52a1\u5668\u3002\u6bd4\u5982\uff0c\u4e00\u4e2a\u4e03\u5c42\u8d1f\u8f7d\u5747\u8861\u5668\u80fd\u76f4\u63a5\u5c06\u89c6\u9891\u6d41\u91cf\u8fde\u63a5\u5230\u6258\u7ba1\u89c6\u9891\u7684\u670d\u52a1\u5668\uff0c\u540c\u65f6\u5c06\u66f4\u654f\u611f\u7684\u7528\u6237\u8d26\u5355\u6d41\u91cf\u5f15\u5bfc\u5230\u5b89\u5168\u6027\u66f4\u5f3a\u7684\u670d\u52a1\u5668\u3002\n\n\u4ee5\u635f\u5931\u7075\u6d3b\u6027\u4e3a\u4ee3\u4ef7\uff0c\u56db\u5c42\u8d1f\u8f7d\u5747\u8861\u6bd4\u4e03\u5c42\u8d1f\u8f7d\u5747\u8861\u82b1\u8d39\u66f4\u5c11\u65f6\u95f4\u548c\u8ba1\u7b97\u8d44\u6e90\uff0c\u867d\u7136\u8fd9\u5bf9\u73b0\u4ee3\u5546\u7528\u786c\u4ef6\u7684\u6027\u80fd\u5f71\u54cd\u751a\u5fae\u3002\n\n### \u6c34\u5e73\u6269\u5c55\n\n\u8d1f\u8f7d\u5747\u8861\u5668\u8fd8\u80fd\u5e2e\u52a9\u6c34\u5e73\u6269\u5c55\uff0c\u63d0\u9ad8\u6027\u80fd\u548c\u53ef\u7528\u6027\u3002\u4f7f\u7528\u5546\u4e1a\u786c\u4ef6\u7684\u6027\u4ef7\u6bd4\u66f4\u9ad8\uff0c\u5e76\u4e14\u6bd4\u5728\u5355\u53f0\u786c\u4ef6\u4e0a**\u5782\u76f4\u6269\u5c55**\u66f4\u8d35\u7684\u786c\u4ef6\u5177\u6709\u66f4\u9ad8\u7684\u53ef\u7528\u6027\u3002\u76f8\u6bd4\u62db\u8058\u7279\u5b9a\u4f01\u4e1a\u7cfb\u7edf\u4eba\u624d\uff0c\u62db\u8058\u5546\u4e1a\u786c\u4ef6\u65b9\u9762\u7684\u4eba\u624d\u66f4\u52a0\u5bb9\u6613\u3002\n\n#### \u7f3a\u9677\uff1a\u6c34\u5e73\u6269\u5c55\n\n* \u6c34\u5e73\u6269\u5c55\u5f15\u5165\u4e86\u590d\u6742\u5ea6\u5e76\u6d89\u53ca\u670d\u52a1\u5668\u590d\u5236\n    * \u670d\u52a1\u5668\u5e94\u8be5\u662f\u65e0\u72b6\u6001\u7684:\u5b83\u4eec\u4e5f\u4e0d\u8be5\u5305\u542b\u50cf session \u6216\u8d44\u6599\u56fe\u7247\u7b49\u4e0e\u7528\u6237\u5173\u8054\u7684\u6570\u636e\u3002\n    * session \u53ef\u4ee5\u96c6\u4e2d\u5b58\u50a8\u5728\u6570\u636e\u5e93\u6216\u6301\u4e45\u5316[\u7f13\u5b58](#\u7f13\u5b58)\uff08Redis\u3001Memcached\uff09\u7684\u6570\u636e\u5b58\u50a8\u533a\u4e2d\u3002\n* \u7f13\u5b58\u548c\u6570\u636e\u5e93\u7b49\u4e0b\u6e38\u670d\u52a1\u5668\u9700\u8981\u968f\u7740\u4e0a\u6e38\u670d\u52a1\u5668\u8fdb\u884c\u6269\u5c55\uff0c\u4ee5\u5904\u7406\u66f4\u591a\u7684\u5e76\u53d1\u8fde\u63a5\u3002\n\n### \u7f3a\u9677\uff1a\u8d1f\u8f7d\u5747\u8861\u5668\n\n* \u5982\u679c\u6ca1\u6709\u8db3\u591f\u7684\u8d44\u6e90\u914d\u7f6e\u6216\u914d\u7f6e\u9519\u8bef\uff0c\u8d1f\u8f7d\u5747\u8861\u5668\u4f1a\u53d8\u6210\u4e00\u4e2a\u6027\u80fd\u74f6\u9888\u3002\n* \u5f15\u5165\u8d1f\u8f7d\u5747\u8861\u5668\u4ee5\u5e2e\u52a9\u6d88\u9664\u5355\u70b9\u6545\u969c\u4f46\u5bfc\u81f4\u4e86\u989d\u5916\u7684\u590d\u6742\u6027\u3002\n* \u5355\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\u4f1a\u5bfc\u81f4\u5355\u70b9\u6545\u969c\uff0c\u4f46\u914d\u7f6e\u591a\u4e2a\u8d1f\u8f7d\u5747\u8861\u5668\u4f1a\u8fdb\u4e00\u6b65\u589e\u52a0\u590d\u6742\u6027\u3002\n\n### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\n\n* [NGINX \u67b6\u6784](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n* [HAProxy \u67b6\u6784\u6307\u5357](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n* [\u53ef\u6269\u5c55\u6027](http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n* [Wikipedia](https://en.wikipedia.org/wiki/Load_balancing_(computing))\n* [\u56db\u5c42\u8d1f\u8f7d\u5e73\u8861](https://www.nginx.com/resources/glossary/layer-4-load-balancing/)\n* [\u4e03\u5c42\u8d1f\u8f7d\u5e73\u8861](https://www.nginx.com/resources/glossary/layer-7-load-balancing/)\n* [ELB \u76d1\u542c\u5668\u914d\u7f6e](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)\n\n## \u53cd\u5411\u4ee3\u7406\uff08web \u670d\u52a1\u5668\uff09\n\n<p align=\"center\">\n  <img src=\"images/n41Azff.png\">\n  <br/>\n  <strong><a href=\"https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg\">\u8d44\u6599\u6765\u6e90\uff1a\u7ef4\u57fa\u767e\u79d1</a></strong>\n  <br/>\n</p>\n\n\u53cd\u5411\u4ee3\u7406\u662f\u4e00\u79cd\u53ef\u4ee5\u96c6\u4e2d\u5730\u8c03\u7528\u5185\u90e8\u670d\u52a1\uff0c\u5e76\u63d0\u4f9b\u7edf\u4e00\u63a5\u53e3\u7ed9\u516c\u5171\u5ba2\u6237\u7684 web \u670d\u52a1\u5668\u3002\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u5148\u88ab\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u8f6c\u53d1\u5230\u53ef\u54cd\u5e94\u8bf7\u6c42\u7684\u670d\u52a1\u5668\uff0c\u7136\u540e\u4ee3\u7406\u518d\u628a\u670d\u52a1\u5668\u7684\u54cd\u5e94\u7ed3\u679c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002\n\n\u5e26\u6765\u7684\u597d\u5904\u5305\u62ec\uff1a\n\n- **\u589e\u52a0\u5b89\u5168\u6027** - \u9690\u85cf\u540e\u7aef\u670d\u52a1\u5668\u7684\u4fe1\u606f\uff0c\u5c4f\u853d\u9ed1\u540d\u5355\u4e2d\u7684 IP\uff0c\u9650\u5236\u6bcf\u4e2a\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u6570\u3002\n- **\u63d0\u9ad8\u53ef\u6269\u5c55\u6027\u548c\u7075\u6d3b\u6027** - \u5ba2\u6237\u7aef\u53ea\u80fd\u770b\u5230\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u7684 IP\uff0c\u8fd9\u4f7f\u4f60\u53ef\u4ee5\u589e\u51cf\u670d\u52a1\u5668\u6216\u8005\u4fee\u6539\u5b83\u4eec\u7684\u914d\u7f6e\u3002\n- **\u672c\u5730\u7ec8\u7ed3 SSL \u4f1a\u8bdd** - \u89e3\u5bc6\u4f20\u5165\u8bf7\u6c42\uff0c\u52a0\u5bc6\u670d\u52a1\u5668\u54cd\u5e94\uff0c\u8fd9\u6837\u540e\u7aef\u670d\u52a1\u5668\u5c31\u4e0d\u5fc5\u5b8c\u6210\u8fd9\u4e9b\u6f5c\u5728\u7684\u9ad8\u6210\u672c\u7684\u64cd\u4f5c\u3002\n  - \u514d\u9664\u4e86\u5728\u6bcf\u4e2a\u670d\u52a1\u5668\u4e0a\u5b89\u88c5 [X.509](https://en.wikipedia.org/wiki/X.509) \u8bc1\u4e66\u7684\u9700\u8981\n- **\u538b\u7f29** - \u538b\u7f29\u670d\u52a1\u5668\u54cd\u5e94\n- **\u7f13\u5b58** - \u76f4\u63a5\u8fd4\u56de\u547d\u4e2d\u7684\u7f13\u5b58\u7ed3\u679c\n- **\u9759\u6001\u5185\u5bb9** - \u76f4\u63a5\u63d0\u4f9b\u9759\u6001\u5185\u5bb9\n  - HTML/CSS/JS\n  - \u56fe\u7247\n  - \u89c6\u9891\n  - \u7b49\u7b49\n\n### \u8d1f\u8f7d\u5747\u8861\u5668\u4e0e\u53cd\u5411\u4ee3\u7406\n\n- \u5f53\u4f60\u6709\u591a\u4e2a\u670d\u52a1\u5668\u65f6\uff0c\u90e8\u7f72\u8d1f\u8f7d\u5747\u8861\u5668\u975e\u5e38\u6709\u7528\u3002\u901a\u5e38\uff0c\u8d1f\u8f7d\u5747\u8861\u5668\u5c06\u6d41\u91cf\u8def\u7531\u7ed9\u4e00\u7ec4\u529f\u80fd\u76f8\u540c\u7684\u670d\u52a1\u5668\u4e0a\u3002\n- \u5373\u4f7f\u53ea\u6709\u4e00\u53f0 web \u670d\u52a1\u5668\u6216\u8005\u5e94\u7528\u670d\u52a1\u5668\u65f6\uff0c\u53cd\u5411\u4ee3\u7406\u4e5f\u6709\u7528\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0a\u4e00\u8282\u4ecb\u7ecd\u7684\u597d\u5904\u3002\n- NGINX \u548c HAProxy \u7b49\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u540c\u65f6\u652f\u6301\u7b2c\u4e03\u5c42\u53cd\u5411\u4ee3\u7406\u548c\u8d1f\u8f7d\u5747\u8861\u3002\n\n### \u4e0d\u5229\u4e4b\u5904\uff1a\u53cd\u5411\u4ee3\u7406\n\n- \u5f15\u5165\u53cd\u5411\u4ee3\u7406\u4f1a\u589e\u52a0\u7cfb\u7edf\u7684\u590d\u6742\u5ea6\u3002\n- \u5355\u72ec\u4e00\u4e2a\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u4ecd\u53ef\u80fd\u53d1\u751f\u5355\u70b9\u6545\u969c\uff0c\u914d\u7f6e\u591a\u53f0\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\uff08\u5982[\u6545\u969c\u8f6c\u79fb](https://en.wikipedia.org/wiki/Failover)\uff09\u4f1a\u8fdb\u4e00\u6b65\u589e\u52a0\u590d\u6742\u5ea6\u3002\n\n### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\n\n\n- [\u53cd\u5411\u4ee3\u7406\u4e0e\u8d1f\u8f7d\u5747\u8861](https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/)\n- [NGINX \u67b6\u6784](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n- [HAProxy \u67b6\u6784\u6307\u5357](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n- [Wikipedia](https://en.wikipedia.org/wiki/Reverse_proxy)\n\n## \u5e94\u7528\u5c42\n\n<p align=\"center\">\n  <img src=\"images/yB5SYwm.png\">\n  <br/>\n  <strong><a href=\"http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer\">\u8d44\u6599\u6765\u6e90\uff1a\u53ef\u7f29\u653e\u7cfb\u7edf\u6784\u67b6\u4ecb\u7ecd</a></strong>\n</p>\n\n\u5c06 Web \u670d\u52a1\u5c42\u4e0e\u5e94\u7528\u5c42\uff08\u4e5f\u88ab\u79f0\u4f5c\u5e73\u53f0\u5c42\uff09\u5206\u79bb\uff0c\u53ef\u4ee5\u72ec\u7acb\u7f29\u653e\u548c\u914d\u7f6e\u8fd9\u4e24\u5c42\u3002\u6dfb\u52a0\u65b0\u7684 API \u53ea\u9700\u8981\u6dfb\u52a0\u5e94\u7528\u670d\u52a1\u5668\uff0c\u800c\u4e0d\u5fc5\u6dfb\u52a0\u989d\u5916\u7684 web \u670d\u52a1\u5668\u3002\n\n**\u5355\u4e00\u804c\u8d23\u539f\u5219**\u63d0\u5021\u5c0f\u578b\u7684\uff0c\u81ea\u6cbb\u7684\u670d\u52a1\u5171\u540c\u5408\u4f5c\u3002\u5c0f\u56e2\u961f\u901a\u8fc7\u63d0\u4f9b\u5c0f\u578b\u7684\u670d\u52a1\uff0c\u53ef\u4ee5\u66f4\u6fc0\u8fdb\u5730\u8ba1\u5212\u589e\u957f\u3002\n\n\u5e94\u7528\u5c42\u4e2d\u7684\u5de5\u4f5c\u8fdb\u7a0b\u4e5f\u6709\u53ef\u4ee5\u5b9e\u73b0[\u5f02\u6b65\u5316](#\u5f02\u6b65)\u3002\n\n### \u5fae\u670d\u52a1\n\n\u4e0e\u6b64\u8ba8\u8bba\u76f8\u5173\u7684\u8bdd\u9898\u662f [\u5fae\u670d\u52a1](https://en.wikipedia.org/wiki/Microservices)\uff0c\u53ef\u4ee5\u88ab\u63cf\u8ff0\u4e3a\u4e00\u7cfb\u5217\u53ef\u4ee5\u72ec\u7acb\u90e8\u7f72\u7684\u5c0f\u578b\u7684\uff0c\u6a21\u5757\u5316\u670d\u52a1\u3002\u6bcf\u4e2a\u670d\u52a1\u8fd0\u884c\u5728\u4e00\u4e2a\u72ec\u7acb\u7684\u7ebf\u7a0b\u4e2d\uff0c\u901a\u8fc7\u660e\u786e\u5b9a\u4e49\u7684\u8f7b\u91cf\u7ea7\u673a\u5236\u901a\u8baf\uff0c\u5171\u540c\u5b9e\u73b0\u4e1a\u52a1\u76ee\u6807\u3002<sup><a href=https://smartbear.com/learn/api-design/what-are-microservices>1</a></sup>\n\n\u4f8b\u5982\uff0cPinterest \u53ef\u80fd\u6709\u8fd9\u4e9b\u5fae\u670d\u52a1\uff1a \u7528\u6237\u8d44\u6599\u3001\u5173\u6ce8\u8005\u3001Feed \u6d41\u3001\u641c\u7d22\u3001\u7167\u7247\u4e0a\u4f20\u7b49\u3002\n\n### \u670d\u52a1\u53d1\u73b0\n\n\u50cf [Consul](https://www.consul.io/docs/index.html)\uff0c[Etcd](https://coreos.com/etcd/docs/latest) \u548c [Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) \u8fd9\u6837\u7684\u7cfb\u7edf\u53ef\u4ee5\u901a\u8fc7\u8ffd\u8e2a\u6ce8\u518c\u540d\u3001\u5730\u5740\u3001\u7aef\u53e3\u7b49\u4fe1\u606f\u6765\u5e2e\u52a9\u670d\u52a1\u4e92\u76f8\u53d1\u73b0\u5bf9\u65b9\u3002[Health checks](https://www.consul.io/intro/getting-started/checks.html) \u53ef\u4ee5\u5e2e\u52a9\u786e\u8ba4\u670d\u52a1\u7684\u5b8c\u6574\u6027\u548c\u662f\u5426\u7ecf\u5e38\u4f7f\u7528\u4e00\u4e2a [HTTP](#\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8baehttp) \u8def\u5f84\u3002Consul \u548c Etcd \u90fd\u6709\u4e00\u4e2a\u5185\u5efa\u7684 [key-value \u5b58\u50a8](#\u952e-\u503c\u5b58\u50a8) \u7528\u6765\u5b58\u50a8\u914d\u7f6e\u4fe1\u606f\u548c\u5176\u4ed6\u7684\u5171\u4eab\u4fe1\u606f\u3002\n\n### \u4e0d\u5229\u4e4b\u5904\uff1a\u5e94\u7528\u5c42\n\n- \u6dfb\u52a0\u7531\u591a\u4e2a\u677e\u8026\u5408\u670d\u52a1\u7ec4\u6210\u7684\u5e94\u7528\u5c42\uff0c\u4ece\u67b6\u6784\u3001\u8fd0\u8425\u3001\u6d41\u7a0b\u7b49\u5c42\u9762\u6765\u8bb2\u5c06\u975e\u5e38\u4e0d\u540c\uff08\u76f8\u5bf9\u4e8e\u5355\u4f53\u7cfb\u7edf\uff09\u3002\n- \u5fae\u670d\u52a1\u4f1a\u589e\u52a0\u90e8\u7f72\u548c\u8fd0\u8425\u7684\u590d\u6742\u5ea6\u3002\n\n\n### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\n\n- [\u53ef\u7f29\u653e\u7cfb\u7edf\u6784\u67b6\u4ecb\u7ecd](http://lethain.com/introduction-to-architecting-systems-for-scale)\n- [\u7834\u89e3\u7cfb\u7edf\u8bbe\u8ba1\u9762\u8bd5](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n- [\u9762\u5411\u670d\u52a1\u67b6\u6784](https://en.wikipedia.org/wiki/Service-oriented_architecture)\n- [Zookeeper \u4ecb\u7ecd](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper)\n- [\u6784\u5efa\u5fae\u670d\u52a1\uff0c\u4f60\u6240\u9700\u8981\u77e5\u9053\u7684\u4e00\u5207](https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/)\n\n## \u6570\u636e\u5e93\n\n<p align=\"center\">\n  <img src=\"images/Xkm5CXz.png\">\n  <br/>\n  <strong><a href=\"https://www.youtube.com/watch?v=w95murBkYmU\">\u8d44\u6599\u6765\u6e90\uff1a\u6269\u5c55\u4f60\u7684\u7528\u6237\u6570\u5230\u7b2c\u4e00\u4e2a\u4e00\u5343\u4e07</a></strong>\n</p>\n\n### \u5173\u7cfb\u578b\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff08RDBMS\uff09\n\n\u50cf SQL \u8fd9\u6837\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\u662f\u4e00\u7cfb\u5217\u4ee5\u8868\u7684\u5f62\u5f0f\u7ec4\u7ec7\u7684\u6570\u636e\u9879\u96c6\u5408\u3002\n\n> \u6821\u5bf9\u6ce8\uff1a\u8fd9\u91cc\u4f5c\u8005 SQL \u53ef\u80fd\u6307\u7684\u662f MySQL\n\n**ACID** \u7528\u6765\u63cf\u8ff0\u5173\u7cfb\u578b\u6570\u636e\u5e93[\u4e8b\u52a1](https://en.wikipedia.org/wiki/Database_transaction)\u7684\u7279\u6027\u3002\n\n- **\u539f\u5b50\u6027** - \u6bcf\u4e2a\u4e8b\u52a1\u5185\u90e8\u6240\u6709\u64cd\u4f5c\u8981\u4e48\u5168\u90e8\u5b8c\u6210\uff0c\u8981\u4e48\u5168\u90e8\u4e0d\u5b8c\u6210\u3002\n- **\u4e00\u81f4\u6027** - \u4efb\u4f55\u4e8b\u52a1\u90fd\u4f7f\u6570\u636e\u5e93\u4ece\u4e00\u4e2a\u6709\u6548\u7684\u72b6\u6001\u8f6c\u6362\u5230\u53e6\u4e00\u4e2a\u6709\u6548\u72b6\u6001\u3002\n- **\u9694\u79bb\u6027** - \u5e76\u53d1\u6267\u884c\u4e8b\u52a1\u7684\u7ed3\u679c\u4e0e\u987a\u5e8f\u6267\u884c\u4e8b\u52a1\u7684\u7ed3\u679c\u76f8\u540c\u3002\n- **\u6301\u4e45\u6027** - \u4e8b\u52a1\u63d0\u4ea4\u540e\uff0c\u5bf9\u7cfb\u7edf\u7684\u5f71\u54cd\u662f\u6c38\u4e45\u7684\u3002\n\n\u5173\u7cfb\u578b\u6570\u636e\u5e93\u6269\u5c55\u5305\u62ec\u8bb8\u591a\u6280\u672f\uff1a**\u4e3b\u4ece\u590d\u5236**\u3001**\u4e3b\u4e3b\u590d\u5236**\u3001**\u8054\u5408**\u3001**\u5206\u7247**\u3001**\u975e\u89c4\u8303\u5316**\u548c **SQL\u8c03\u4f18**\u3002\n\n<p align=\"center\">\n  <img src=\"images/C9ioGtn.png\">\n  <br/>\n  <strong><a href=\"http://www.slideshare.net/jboner/scalability-availability-stability-patterns/\">\u8d44\u6599\u6765\u6e90\uff1a\u53ef\u6269\u5c55\u6027\u3001\u53ef\u7528\u6027\u3001\u7a33\u5b9a\u6027\u3001\u6a21\u5f0f</a></strong>\n</p>\n\n#### \u4e3b\u4ece\u590d\u5236\n\n\u4e3b\u5e93\u540c\u65f6\u8d1f\u8d23\u8bfb\u53d6\u548c\u5199\u5165\u64cd\u4f5c\uff0c\u5e76\u590d\u5236\u5199\u5165\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u4ece\u5e93\u4e2d\uff0c\u4ece\u5e93\u53ea\u8d1f\u8d23\u8bfb\u64cd\u4f5c\u3002\u6811\u72b6\u5f62\u5f0f\u7684\u4ece\u5e93\u518d\u5c06\u5199\u5165\u590d\u5236\u5230\u66f4\u591a\u7684\u4ece\u5e93\u4e2d\u53bb\u3002\u5982\u679c\u4e3b\u5e93\u79bb\u7ebf\uff0c\u7cfb\u7edf\u53ef\u4ee5\u4ee5\u53ea\u8bfb\u6a21\u5f0f\u8fd0\u884c\uff0c\u76f4\u5230\u67d0\u4e2a\u4ece\u5e93\u88ab\u63d0\u5347\u4e3a\u4e3b\u5e93\u6216\u6709\u65b0\u7684\u4e3b\u5e93\u51fa\u73b0\u3002\n\n##### \u4e0d\u5229\u4e4b\u5904\uff1a\u4e3b\u4ece\u590d\u5236\n\n- \u5c06\u4ece\u5e93\u63d0\u5347\u4e3a\u4e3b\u5e93\u9700\u8981\u989d\u5916\u7684\u903b\u8f91\u3002\n- \u53c2\u8003[\u4e0d\u5229\u4e4b\u5904\uff1a\u590d\u5236](#\u4e0d\u5229\u4e4b\u5904\u590d\u5236)\u4e2d\uff0c\u4e3b\u4ece\u590d\u5236\u548c\u4e3b\u4e3b\u590d\u5236**\u5171\u540c**\u7684\u95ee\u9898\u3002\n\n<p align=\"center\">\n  <img src=\"images/krAHLGg.png\">\n  <br/>\n  <strong><a href=\"http://www.slideshare.net/jboner/scalability-availability-stability-patterns/\">\u8d44\u6599\u6765\u6e90\uff1a\u53ef\u6269\u5c55\u6027\u3001\u53ef\u7528\u6027\u3001\u7a33\u5b9a\u6027\u3001\u6a21\u5f0f</a></strong>\n</p>\n\n#### \u4e3b\u4e3b\u590d\u5236\n\n\u4e24\u4e2a\u4e3b\u5e93\u90fd\u8d1f\u8d23\u8bfb\u64cd\u4f5c\u548c\u5199\u64cd\u4f5c\uff0c\u5199\u5165\u64cd\u4f5c\u65f6\u4e92\u76f8\u534f\u8c03\u3002\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u4e3b\u5e93\u6302\u673a\uff0c\u7cfb\u7edf\u53ef\u4ee5\u7ee7\u7eed\u8bfb\u53d6\u548c\u5199\u5165\u3002\n\n##### \u4e0d\u5229\u4e4b\u5904\uff1a \u4e3b\u4e3b\u590d\u5236\n\n- \u4f60\u9700\u8981\u6dfb\u52a0\u8d1f\u8f7d\u5747\u8861\u5668\u6216\u8005\u5728\u5e94\u7528\u903b\u8f91\u4e2d\u505a\u6539\u52a8\uff0c\u6765\u786e\u5b9a\u5199\u5165\u54ea\u4e00\u4e2a\u6570\u636e\u5e93\u3002\n- \u591a\u6570\u4e3b-\u4e3b\u7cfb\u7edf\u8981\u4e48\u4e0d\u80fd\u4fdd\u8bc1\u4e00\u81f4\u6027\uff08\u8fdd\u53cd ACID\uff09\uff0c\u8981\u4e48\u56e0\u4e3a\u540c\u6b65\u4ea7\u751f\u4e86\u5199\u5165\u5ef6\u8fdf\u3002\n- \u968f\u7740\u66f4\u591a\u5199\u5165\u8282\u70b9\u7684\u52a0\u5165\u548c\u5ef6\u8fdf\u7684\u63d0\u9ad8\uff0c\u5982\u4f55\u89e3\u51b3\u51b2\u7a81\u663e\u5f97\u8d8a\u53d1\u91cd\u8981\u3002\n- \u53c2\u8003[\u4e0d\u5229\u4e4b\u5904\uff1a\u590d\u5236](#\u4e0d\u5229\u4e4b\u5904\u590d\u5236)\u4e2d\uff0c\u4e3b\u4ece\u590d\u5236\u548c\u4e3b\u4e3b\u590d\u5236**\u5171\u540c**\u7684\u95ee\u9898\u3002\n\n##### \u4e0d\u5229\u4e4b\u5904\uff1a\u590d\u5236\n\n\n- \u5982\u679c\u4e3b\u5e93\u5728\u5c06\u65b0\u5199\u5165\u7684\u6570\u636e\u590d\u5236\u5230\u5176\u4ed6\u8282\u70b9\u524d\u6302\u6389\uff0c\u5219\u6709\u6570\u636e\u4e22\u5931\u7684\u53ef\u80fd\u3002\n- \u5199\u5165\u4f1a\u88ab\u91cd\u653e\u5230\u8d1f\u8d23\u8bfb\u53d6\u64cd\u4f5c\u7684\u526f\u672c\u3002\u526f\u672c\u53ef\u80fd\u56e0\u4e3a\u8fc7\u591a\u5199\u64cd\u4f5c\u963b\u585e\u4f4f\uff0c\u5bfc\u81f4\u8bfb\u53d6\u529f\u80fd\u5f02\u5e38\u3002\n- \u8bfb\u53d6\u4ece\u5e93\u8d8a\u591a\uff0c\u9700\u8981\u590d\u5236\u7684\u5199\u5165\u6570\u636e\u5c31\u8d8a\u591a\uff0c\u5bfc\u81f4\u66f4\u4e25\u91cd\u7684\u590d\u5236\u5ef6\u8fdf\u3002\n- \u5728\u67d0\u4e9b\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\uff0c\u5199\u5165\u4e3b\u5e93\u7684\u64cd\u4f5c\u53ef\u4ee5\u7528\u591a\u4e2a\u7ebf\u7a0b\u5e76\u884c\u5199\u5165\uff0c\u4f46\u8bfb\u53d6\u526f\u672c\u53ea\u652f\u6301\u5355\u7ebf\u7a0b\u987a\u5e8f\u5730\u5199\u5165\u3002\n- \u590d\u5236\u610f\u5473\u7740\u66f4\u591a\u7684\u786c\u4ef6\u548c\u989d\u5916\u7684\u590d\u6742\u5ea6\u3002\n\n\n##### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\n\n\n- [\u6269\u5c55\u6027\uff0c\u53ef\u7528\u6027\uff0c\u7a33\u5b9a\u6027\u6a21\u5f0f](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n- [\u591a\u4e3b\u590d\u5236](https://en.wikipedia.org/wiki/Multi-master_replication)\n\n#### \u8054\u5408\n\n<p align=\"center\">\n  <img src=\"images/U3qV33e.png\">\n  <br/>\n  <strong><a href=\"https://www.youtube.com/watch?v=w95murBkYmU\">\u8d44\u6599\u6765\u6e90\uff1a\u6269\u5c55\u4f60\u7684\u7528\u6237\u6570\u5230\u7b2c\u4e00\u4e2a\u4e00\u5343\u4e07</a></strong>\n</p>\n\n\u8054\u5408\uff08\u6216\u6309\u529f\u80fd\u5212\u5206\uff09\u5c06\u6570\u636e\u5e93\u6309\u5bf9\u5e94\u529f\u80fd\u5206\u5272\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u6709\u4e09\u4e2a\u6570\u636e\u5e93\uff1a**\u8bba\u575b**\u3001**\u7528\u6237**\u548c**\u4ea7\u54c1**\uff0c\u800c\u4e0d\u4ec5\u662f\u4e00\u4e2a\u5355\u4f53\u6570\u636e\u5e93\uff0c\u4ece\u800c\u51cf\u5c11\u6bcf\u4e2a\u6570\u636e\u5e93\u7684\u8bfb\u53d6\u548c\u5199\u5165\u6d41\u91cf\uff0c\u51cf\u5c11\u590d\u5236\u5ef6\u8fdf\u3002\u8f83\u5c0f\u7684\u6570\u636e\u5e93\u610f\u5473\u7740\u66f4\u591a\u9002\u5408\u653e\u5165\u5185\u5b58\u7684\u6570\u636e\uff0c\u8fdb\u800c\u610f\u5473\u7740\u66f4\u9ad8\u7684\u7f13\u5b58\u547d\u4e2d\u51e0\u7387\u3002\u6ca1\u6709\u53ea\u80fd\u4e32\u884c\u5199\u5165\u7684\u4e2d\u5fc3\u5316\u4e3b\u5e93\uff0c\u4f60\u53ef\u4ee5\u5e76\u884c\u5199\u5165\uff0c\u63d0\u9ad8\u8d1f\u8f7d\u80fd\u529b\u3002\n\n##### \u4e0d\u5229\u4e4b\u5904\uff1a\u8054\u5408\n\n\n- \u5982\u679c\u4f60\u7684\u6570\u636e\u5e93\u6a21\u5f0f\u9700\u8981\u5927\u91cf\u7684\u529f\u80fd\u548c\u6570\u636e\u8868\uff0c\u8054\u5408\u7684\u6548\u7387\u5e76\u4e0d\u597d\u3002\n- \u4f60\u9700\u8981\u66f4\u65b0\u5e94\u7528\u7a0b\u5e8f\u7684\u903b\u8f91\u6765\u786e\u5b9a\u8981\u8bfb\u53d6\u548c\u5199\u5165\u54ea\u4e2a\u6570\u636e\u5e93\u3002\n- \u7528 [server link](http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers) \u4ece\u4e24\u4e2a\u5e93\u8054\u7ed3\u6570\u636e\u66f4\u590d\u6742\u3002\n- \u8054\u5408\u9700\u8981\u66f4\u591a\u7684\u786c\u4ef6\u548c\u989d\u5916\u7684\u590d\u6742\u5ea6\u3002\n\n##### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\uff1a\u8054\u5408\n\n- [\u6269\u5c55\u4f60\u7684\u7528\u6237\u6570\u5230\u7b2c\u4e00\u4e2a\u4e00\u5343\u4e07](https://www.youtube.com/watch?v=w95murBkYmU)\n\n#### \u5206\u7247\n\n<p align=\"center\">\n  <img src=\"images/wU8x5Id.png\">\n  <br/>\n  <strong><a href=\"http://www.slideshare.net/jboner/scalability-availability-stability-patterns/\">\u8d44\u6599\u6765\u6e90\uff1a\u53ef\u6269\u5c55\u6027\u3001\u53ef\u7528\u6027\u3001\u7a33\u5b9a\u6027\u3001\u6a21\u5f0f</a></strong>\n</p>\n\n\u5206\u7247\u5c06\u6570\u636e\u5206\u914d\u5728\u4e0d\u540c\u7684\u6570\u636e\u5e93\u4e0a\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u6570\u636e\u5e93\u4ec5\u7ba1\u7406\u6574\u4e2a\u6570\u636e\u96c6\u7684\u4e00\u4e2a\u5b50\u96c6\u3002\u4ee5\u7528\u6237\u6570\u636e\u5e93\u4e3a\u4f8b\uff0c\u968f\u7740\u7528\u6237\u6570\u91cf\u7684\u589e\u52a0\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u5206\u7247\u4f1a\u88ab\u6dfb\u52a0\u5230\u96c6\u7fa4\u4e2d\u3002\n\n\u7c7b\u4f3c[\u8054\u5408](#\u8054\u5408)\u7684\u4f18\u70b9\uff0c\u5206\u7247\u53ef\u4ee5\u51cf\u5c11\u8bfb\u53d6\u548c\u5199\u5165\u6d41\u91cf\uff0c\u51cf\u5c11\u590d\u5236\u5e76\u63d0\u9ad8\u7f13\u5b58\u547d\u4e2d\u7387\u3002\u4e5f\u51cf\u5c11\u4e86\u7d22\u5f15\uff0c\u901a\u5e38\u610f\u5473\u7740\u67e5\u8be2\u66f4\u5feb\uff0c\u6027\u80fd\u66f4\u597d\u3002\u5982\u679c\u4e00\u4e2a\u5206\u7247\u51fa\u95ee\u9898\uff0c\u5176\u4ed6\u7684\u4ecd\u80fd\u8fd0\u884c\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u67d0\u79cd\u5f62\u5f0f\u7684\u5197\u4f59\u6765\u9632\u6b62\u6570\u636e\u4e22\u5931\u3002\u7c7b\u4f3c\u8054\u5408\uff0c\u6ca1\u6709\u53ea\u80fd\u4e32\u884c\u5199\u5165\u7684\u4e2d\u5fc3\u5316\u4e3b\u5e93\uff0c\u4f60\u53ef\u4ee5\u5e76\u884c\u5199\u5165\uff0c\u63d0\u9ad8\u8d1f\u8f7d\u80fd\u529b\u3002\n\n\u5e38\u89c1\u7684\u505a\u6cd5\u662f\u7528\u6237\u59d3\u6c0f\u7684\u9996\u5b57\u6bcd\u6216\u8005\u7528\u6237\u7684\u5730\u7406\u4f4d\u7f6e\u6765\u5206\u9694\u7528\u6237\u8868\u3002\n\n##### \u4e0d\u5229\u4e4b\u5904\uff1a\u5206\u7247\n\n- \u4f60\u9700\u8981\u4fee\u6539\u5e94\u7528\u7a0b\u5e8f\u7684\u903b\u8f91\u6765\u5b9e\u73b0\u5206\u7247\uff0c\u8fd9\u4f1a\u5e26\u6765\u590d\u6742\u7684 SQL \u67e5\u8be2\u3002\n- \u5206\u7247\u4e0d\u5408\u7406\u53ef\u80fd\u5bfc\u81f4\u6570\u636e\u8d1f\u8f7d\u4e0d\u5747\u8861\u3002\u4f8b\u5982\uff0c\u88ab\u9891\u7e41\u8bbf\u95ee\u7684\u7528\u6237\u6570\u636e\u4f1a\u5bfc\u81f4\u5176\u6240\u5728\u5206\u7247\u7684\u8d1f\u8f7d\u76f8\u5bf9\u5176\u4ed6\u5206\u7247\u9ad8\u3002\n  - \u518d\u5e73\u8861\u4f1a\u5f15\u5165\u989d\u5916\u7684\u590d\u6742\u5ea6\u3002\u57fa\u4e8e[\u4e00\u81f4\u6027\u54c8\u5e0c](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html)\u7684\u5206\u7247\u7b97\u6cd5\u53ef\u4ee5\u51cf\u5c11\u8fd9\u79cd\u60c5\u51b5\u3002\n- \u8054\u7ed3\u591a\u4e2a\u5206\u7247\u7684\u6570\u636e\u64cd\u4f5c\u66f4\u590d\u6742\u3002\n- \u5206\u7247\u9700\u8981\u66f4\u591a\u7684\u786c\u4ef6\u548c\u989d\u5916\u7684\u590d\u6742\u5ea6\u3002\n\n#### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\uff1a\u5206\u7247\n\n- [\u5206\u7247\u65f6\u4ee3\u6765\u4e34](http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html)\n- [\u6570\u636e\u5e93\u5206\u7247\u67b6\u6784](https://en.wikipedia.org/wiki/Shard_(database_architecture))\n- [\u4e00\u81f4\u6027\u54c8\u5e0c](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html)\n\n#### \u975e\u89c4\u8303\u5316\n\n\u975e\u89c4\u8303\u5316\u8bd5\u56fe\u4ee5\u5199\u5165\u6027\u80fd\u4e3a\u4ee3\u4ef7\u6765\u6362\u53d6\u8bfb\u53d6\u6027\u80fd\u3002\u5728\u591a\u4e2a\u8868\u4e2d\u5197\u4f59\u6570\u636e\u526f\u672c\uff0c\u4ee5\u907f\u514d\u9ad8\u6210\u672c\u7684\u8054\u7ed3\u64cd\u4f5c\u3002\u4e00\u4e9b\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u6bd4\u5982 [PostgreSQL](https://en.wikipedia.org/wiki/PostgreSQL) \u548c Oracle \u652f\u6301[\u7269\u5316\u89c6\u56fe](https://en.wikipedia.org/wiki/Materialized_view)\uff0c\u53ef\u4ee5\u5904\u7406\u5197\u4f59\u4fe1\u606f\u5b58\u50a8\u548c\u4fdd\u8bc1\u5197\u4f59\u526f\u672c\u4e00\u81f4\u3002\n\n\u5f53\u6570\u636e\u4f7f\u7528\u8bf8\u5982[\u8054\u5408](#\u8054\u5408)\u548c[\u5206\u7247](#\u5206\u7247)\u7b49\u6280\u672f\u88ab\u5206\u5272\uff0c\u8fdb\u4e00\u6b65\u63d0\u9ad8\u4e86\u5904\u7406\u8de8\u6570\u636e\u4e2d\u5fc3\u7684\u8054\u7ed3\u64cd\u4f5c\u590d\u6742\u5ea6\u3002\u975e\u89c4\u8303\u5316\u53ef\u4ee5\u89c4\u907f\u8fd9\u79cd\u590d\u6742\u7684\u8054\u7ed3\u64cd\u4f5c\u3002\n\n\u5728\u591a\u6570\u7cfb\u7edf\u4e2d\uff0c\u8bfb\u53d6\u64cd\u4f5c\u7684\u9891\u7387\u8fdc\u9ad8\u4e8e\u5199\u5165\u64cd\u4f5c\uff0c\u6bd4\u4f8b\u53ef\u8fbe\u5230 100:1\uff0c\u751a\u81f3 1000:1\u3002\u9700\u8981\u590d\u6742\u7684\u6570\u636e\u5e93\u8054\u7ed3\u7684\u8bfb\u53d6\u64cd\u4f5c\u6210\u672c\u975e\u5e38\u9ad8\uff0c\u5728\u78c1\u76d8\u64cd\u4f5c\u4e0a\u6d88\u8017\u4e86\u5927\u91cf\u65f6\u95f4\u3002\n\n##### \u4e0d\u5229\u4e4b\u5904\uff1a\u975e\u89c4\u8303\u5316\n\n- \u6570\u636e\u4f1a\u5197\u4f59\u3002\n- \u7ea6\u675f\u53ef\u4ee5\u5e2e\u52a9\u5197\u4f59\u7684\u4fe1\u606f\u526f\u672c\u4fdd\u6301\u540c\u6b65\uff0c\u4f46\u8fd9\u6837\u4f1a\u589e\u52a0\u6570\u636e\u5e93\u8bbe\u8ba1\u7684\u590d\u6742\u5ea6\u3002\n- \u975e\u89c4\u8303\u5316\u7684\u6570\u636e\u5e93\u5728\u9ad8\u5199\u5165\u8d1f\u8f7d\u4e0b\u6027\u80fd\u53ef\u80fd\u6bd4\u89c4\u8303\u5316\u7684\u6570\u636e\u5e93\u5dee\u3002\n\n##### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\uff1a\u975e\u89c4\u8303\u5316\n\n- [\u975e\u89c4\u8303\u5316](https://en.wikipedia.org/wiki/Denormalization)\n\n#### SQL \u8c03\u4f18\n\nSQL \u8c03\u4f18\u662f\u4e00\u4e2a\u8303\u56f4\u5f88\u5e7f\u7684\u8bdd\u9898\uff0c\u6709\u5f88\u591a\u76f8\u5173\u7684[\u4e66](https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning)\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u8003\u3002\n\n\u5229\u7528**\u57fa\u51c6\u6d4b\u8bd5**\u548c**\u6027\u80fd\u5206\u6790**\u6765\u6a21\u62df\u548c\u53d1\u73b0\u7cfb\u7edf\u74f6\u9888\u5f88\u91cd\u8981\u3002\n\n- **\u57fa\u51c6\u6d4b\u8bd5** - \u7528 [ab](http://httpd.apache.org/docs/2.2/programs/ab.html) \u7b49\u5de5\u5177\u6a21\u62df\u9ad8\u8d1f\u8f7d\u60c5\u51b5\u3002\n- **\u6027\u80fd\u5206\u6790** - \u901a\u8fc7\u542f\u7528\u5982[\u6162\u67e5\u8be2\u65e5\u5fd7](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html)\u7b49\u5de5\u5177\u6765\u8f85\u52a9\u8ffd\u8e2a\u6027\u80fd\u95ee\u9898\u3002\n\n\u57fa\u51c6\u6d4b\u8bd5\u548c\u6027\u80fd\u5206\u6790\u53ef\u80fd\u4f1a\u6307\u5f15\u4f60\u5230\u4ee5\u4e0b\u4f18\u5316\u65b9\u6848\u3002\n\n##### \u6539\u8fdb\u6a21\u5f0f\n\n- \u4e3a\u4e86\u5b9e\u73b0\u5feb\u901f\u8bbf\u95ee\uff0cMySQL \u5728\u78c1\u76d8\u4e0a\u7528\u8fde\u7eed\u7684\u5757\u5b58\u50a8\u6570\u636e\u3002\n- \u4f7f\u7528 `CHAR` \u7c7b\u578b\u5b58\u50a8\u56fa\u5b9a\u957f\u5ea6\u7684\u5b57\u6bb5\uff0c\u4e0d\u8981\u7528 `VARCHAR`\u3002\n  - `CHAR` \u5728\u5feb\u901f\u3001\u968f\u673a\u8bbf\u95ee\u65f6\u6548\u7387\u5f88\u9ad8\u3002\u5982\u679c\u4f7f\u7528 `VARCHAR`\uff0c\u5982\u679c\u4f60\u60f3\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e0d\u5f97\u4e0d\u5148\u8bfb\u53d6\u5230\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u3002\n- \u4f7f\u7528 `TEXT` \u7c7b\u578b\u5b58\u50a8\u5927\u5757\u7684\u6587\u672c\uff0c\u4f8b\u5982\u535a\u5ba2\u6b63\u6587\u3002`TEXT` \u8fd8\u5141\u8bb8\u5e03\u5c14\u641c\u7d22\u3002\u4f7f\u7528 `TEXT` \u5b57\u6bb5\u9700\u8981\u5728\u78c1\u76d8\u4e0a\u5b58\u50a8\u4e00\u4e2a\u7528\u4e8e\u5b9a\u4f4d\u6587\u672c\u5757\u7684\u6307\u9488\u3002\n- \u4f7f\u7528 `INT` \u7c7b\u578b\u5b58\u50a8\u9ad8\u8fbe 2^32 \u6216 40 \u4ebf\u7684\u8f83\u5927\u6570\u5b57\u3002\n- \u4f7f\u7528 `DECIMAL` \u7c7b\u578b\u5b58\u50a8\u8d27\u5e01\u53ef\u4ee5\u907f\u514d\u6d6e\u70b9\u6570\u8868\u793a\u9519\u8bef\u3002\n- \u907f\u514d\u4f7f\u7528 `BLOBS` \u5b58\u50a8\u5b9e\u9645\u5bf9\u8c61\uff0c\u800c\u662f\u7528\u6765\u5b58\u50a8\u5b58\u653e\u5bf9\u8c61\u7684\u4f4d\u7f6e\u3002\n- `VARCHAR(255)` \u662f\u4ee5 8 \u4f4d\u6570\u5b57\u5b58\u50a8\u7684\u6700\u5927\u5b57\u7b26\u6570\uff0c\u5728\u67d0\u4e9b\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\uff0c\u6700\u5927\u9650\u5ea6\u5730\u5229\u7528\u5b57\u8282\u3002\n- \u5728\u9002\u7528\u573a\u666f\u4e2d\u8bbe\u7f6e `NOT NULL` \u7ea6\u675f\u6765[\u63d0\u9ad8\u641c\u7d22\u6027\u80fd](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)\u3002\n\n##### \u4f7f\u7528\u6b63\u786e\u7684\u7d22\u5f15\n\n- \u4f60\u6b63\u67e5\u8be2\uff08`SELECT`\u3001`GROUP BY`\u3001`ORDER BY`\u3001`JOIN`\uff09\u7684\u5217\u5982\u679c\u7528\u4e86\u7d22\u5f15\u4f1a\u66f4\u5feb\u3002\n- \u7d22\u5f15\u901a\u5e38\u8868\u793a\u4e3a\u81ea\u5e73\u8861\u7684 [B \u6811](https://en.wikipedia.org/wiki/B-tree)\uff0c\u53ef\u4ee5\u4fdd\u6301\u6570\u636e\u6709\u5e8f\uff0c\u5e76\u5141\u8bb8\u5728\u5bf9\u6570\u65f6\u95f4\u5185\u8fdb\u884c\u641c\u7d22\uff0c\u987a\u5e8f\u8bbf\u95ee\uff0c\u63d2\u5165\uff0c\u5220\u9664\u64cd\u4f5c\u3002\n- \u8bbe\u7f6e\u7d22\u5f15\uff0c\u4f1a\u5c06\u6570\u636e\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u5360\u7528\u4e86\u66f4\u591a\u5185\u5b58\u7a7a\u95f4\u3002\n- \u5199\u5165\u64cd\u4f5c\u4f1a\u53d8\u6162\uff0c\u56e0\u4e3a\u7d22\u5f15\u9700\u8981\u88ab\u66f4\u65b0\u3002\n- \u52a0\u8f7d\u5927\u91cf\u6570\u636e\u65f6\uff0c\u7981\u7528\u7d22\u5f15\u518d\u52a0\u8f7d\u6570\u636e\uff0c\u7136\u540e\u91cd\u5efa\u7d22\u5f15\uff0c\u8fd9\u6837\u4e5f\u8bb8\u4f1a\u66f4\u5feb\u3002\n\n##### \u907f\u514d\u9ad8\u6210\u672c\u7684\u8054\u7ed3\u64cd\u4f5c\n\n- \u6709\u6027\u80fd\u9700\u8981\uff0c\u53ef\u4ee5\u8fdb\u884c\u975e\u89c4\u8303\u5316\u3002\n\n##### \u5206\u5272\u6570\u636e\u8868\n\n- \u5c06\u70ed\u70b9\u6570\u636e\u62c6\u5206\u5230\u5355\u72ec\u7684\u6570\u636e\u8868\u4e2d\uff0c\u53ef\u4ee5\u6709\u52a9\u4e8e\u7f13\u5b58\u3002\n\n##### \u8c03\u4f18\u67e5\u8be2\u7f13\u5b58\n\n- \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c[\u67e5\u8be2\u7f13\u5b58](http://dev.mysql.com/doc/refman/5.7/en/query-cache)\u53ef\u80fd\u4f1a\u5bfc\u81f4[\u6027\u80fd\u95ee\u9898](https://www.percona.com/blog/2014/01/28/10-mysql-performance-tuning-settings-after-installation/)\u3002\n\n##### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\n\n- [MySQL \u67e5\u8be2\u4f18\u5316\u5c0f\u8d34\u58eb](http://20bits.com/article/10-tips-for-optimizing-mysql-queries-that-dont-suck)\n- [\u4e3a\u4ec0\u4e48 VARCHAR(255) \u5f88\u5e38\u89c1\uff1f](http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l)\n- [Null \u503c\u662f\u5982\u4f55\u5f71\u54cd\u6570\u636e\u5e93\u6027\u80fd\u7684\uff1f](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)\n- [\u6162\u67e5\u8be2\u65e5\u5fd7](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html)\n\n### NoSQL\n\nNoSQL \u662f**\u952e-\u503c\u6570\u636e\u5e93**\u3001**\u6587\u6863\u578b\u6570\u636e\u5e93**\u3001**\u5217\u578b\u6570\u636e\u5e93**\u6216**\u56fe\u6570\u636e\u5e93**\u7684\u7edf\u79f0\u3002\u6570\u636e\u5e93\u662f\u975e\u89c4\u8303\u5316\u7684\uff0c\u8868\u8054\u7ed3\u5927\u591a\u5728\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u5b8c\u6210\u3002\u5927\u591a\u6570 NoSQL \u65e0\u6cd5\u5b9e\u73b0\u771f\u6b63\u7b26\u5408 ACID \u7684\u4e8b\u52a1\uff0c\u652f\u6301[\u6700\u7ec8\u4e00\u81f4](#\u6700\u7ec8\u4e00\u81f4\u6027)\u3002\n\n**BASE** \u901a\u5e38\u88ab\u7528\u4e8e\u63cf\u8ff0 NoSQL \u6570\u636e\u5e93\u7684\u7279\u6027\u3002\u76f8\u6bd4 [CAP \u7406\u8bba](#cap-\u7406\u8bba)\uff0cBASE \u5f3a\u8c03\u53ef\u7528\u6027\u8d85\u8fc7\u4e00\u81f4\u6027\u3002\n\n- **\u57fa\u672c\u53ef\u7528** - \u7cfb\u7edf\u4fdd\u8bc1\u53ef\u7528\u6027\u3002\n- **\u8f6f\u72b6\u6001** - \u5373\u4f7f\u6ca1\u6709\u8f93\u5165\uff0c\u7cfb\u7edf\u72b6\u6001\u4e5f\u53ef\u80fd\u968f\u7740\u65f6\u95f4\u53d8\u5316\u3002\n- **\u6700\u7ec8\u4e00\u81f4\u6027** - \u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\uff0c\u7cfb\u7edf\u6700\u7ec8\u4f1a\u53d8\u4e00\u81f4\uff0c\u56e0\u4e3a\u7cfb\u7edf\u5728\u6b64\u671f\u95f4\u6ca1\u6709\u6536\u5230\u4efb\u4f55\u8f93\u5165\u3002\n\n\u9664\u4e86\u5728 [SQL \u8fd8\u662f NoSQL](#sql-\u8fd8\u662f-nosql) \u4e4b\u95f4\u505a\u9009\u62e9\uff0c\u4e86\u89e3\u54ea\u79cd\u7c7b\u578b\u7684 NoSQL \u6570\u636e\u5e93\u6700\u9002\u5408\u4f60\u7684\u7528\u4f8b\u4e5f\u662f\u975e\u5e38\u6709\u5e2e\u52a9\u7684\u3002\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u8282\u4e2d\u5feb\u901f\u4e86\u89e3\u4e0b **\u952e-\u503c\u5b58\u50a8**\u3001**\u6587\u6863\u578b\u5b58\u50a8**\u3001**\u5217\u578b\u5b58\u50a8**\u548c**\u56fe\u5b58\u50a8**\u6570\u636e\u5e93\u3002\n\n#### \u952e-\u503c\u5b58\u50a8\n\n> \u62bd\u8c61\u6a21\u578b\uff1a\u54c8\u5e0c\u8868\n\n\u952e-\u503c\u5b58\u50a8\u901a\u5e38\u53ef\u4ee5\u5b9e\u73b0 O(1) \u65f6\u95f4\u8bfb\u5199\uff0c\u7528\u5185\u5b58\u6216 SSD \u5b58\u50a8\u6570\u636e\u3002\u6570\u636e\u5b58\u50a8\u53ef\u4ee5\u6309[\u5b57\u5178\u987a\u5e8f](https://en.wikipedia.org/wiki/Lexicographical_order)\u7ef4\u62a4\u952e\uff0c\u4ece\u800c\u5b9e\u73b0\u952e\u7684\u9ad8\u6548\u68c0\u7d22\u3002\u952e-\u503c\u5b58\u50a8\u53ef\u4ee5\u7528\u4e8e\u5b58\u50a8\u5143\u6570\u636e\u3002\n\n\u952e-\u503c\u5b58\u50a8\u6027\u80fd\u5f88\u9ad8\uff0c\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u7b80\u5355\u6570\u636e\u6a21\u578b\u6216\u9891\u7e41\u4fee\u6539\u7684\u6570\u636e\uff0c\u5982\u5b58\u653e\u5728\u5185\u5b58\u4e2d\u7684\u7f13\u5b58\u3002\u952e-\u503c\u5b58\u50a8\u63d0\u4f9b\u7684\u64cd\u4f5c\u6709\u9650\uff0c\u5982\u679c\u9700\u8981\u66f4\u591a\u64cd\u4f5c\uff0c\u590d\u6742\u5ea6\u5c06\u8f6c\u5ac1\u5230\u5e94\u7528\u7a0b\u5e8f\u5c42\u9762\u3002\n\n\u952e-\u503c\u5b58\u50a8\u662f\u5982\u6587\u6863\u5b58\u50a8\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u751a\u81f3\u662f\u56fe\u5b58\u50a8\u7b49\u66f4\u590d\u6742\u7684\u5b58\u50a8\u7cfb\u7edf\u7684\u57fa\u7840\u3002\n\n#### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\n\n- [\u952e-\u503c\u6570\u636e\u5e93](https://en.wikipedia.org/wiki/Key-value_database)\n- [\u952e-\u503c\u5b58\u50a8\u7684\u52a3\u52bf](http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or)\n- [Redis \u67b6\u6784](http://qnimate.com/overview-of-redis-architecture/)\n- [Memcached \u67b6\u6784](https://adayinthelifeof.nl/2011/02/06/memcache-internals/)\n\n#### \u6587\u6863\u7c7b\u578b\u5b58\u50a8\n\n> \u62bd\u8c61\u6a21\u578b\uff1a\u5c06\u6587\u6863\u4f5c\u4e3a\u503c\u7684\u952e-\u503c\u5b58\u50a8\n\n\u6587\u6863\u7c7b\u578b\u5b58\u50a8\u4ee5\u6587\u6863\uff08XML\u3001JSON\u3001\u4e8c\u8fdb\u5236\u6587\u4ef6\u7b49\uff09\u4e3a\u4e2d\u5fc3\uff0c\u6587\u6863\u5b58\u50a8\u4e86\u6307\u5b9a\u5bf9\u8c61\u7684\u5168\u90e8\u4fe1\u606f\u3002\u6587\u6863\u5b58\u50a8\u6839\u636e\u6587\u6863\u81ea\u8eab\u7684\u5185\u90e8\u7ed3\u6784\u63d0\u4f9b API \u6216\u67e5\u8be2\u8bed\u53e5\u6765\u5b9e\u73b0\u67e5\u8be2\u3002\u8bf7\u6ce8\u610f\uff0c\u8bb8\u591a\u952e-\u503c\u5b58\u50a8\u6570\u636e\u5e93\u6709\u7528\u503c\u5b58\u50a8\u5143\u6570\u636e\u7684\u7279\u6027\uff0c\u8fd9\u4e5f\u6a21\u7cca\u4e86\u8fd9\u4e24\u79cd\u5b58\u50a8\u7c7b\u578b\u7684\u754c\u9650\u3002\n\n\u57fa\u4e8e\u5e95\u5c42\u5b9e\u73b0\uff0c\u6587\u6863\u53ef\u4ee5\u6839\u636e\u96c6\u5408\u3001\u6807\u7b7e\u3001\u5143\u6570\u636e\u6216\u8005\u6587\u4ef6\u5939\u7ec4\u7ec7\u3002\u5c3d\u7ba1\u4e0d\u540c\u6587\u6863\u53ef\u4ee5\u88ab\u7ec4\u7ec7\u5728\u4e00\u8d77\u6216\u8005\u5206\u6210\u4e00\u7ec4\uff0c\u4f46\u76f8\u4e92\u4e4b\u95f4\u53ef\u80fd\u5177\u6709\u5b8c\u5168\u4e0d\u540c\u7684\u5b57\u6bb5\u3002\n\nMongoDB \u548c CouchDB \u7b49\u4e00\u4e9b\u6587\u6863\u7c7b\u578b\u5b58\u50a8\u8fd8\u63d0\u4f9b\u4e86\u7c7b\u4f3c SQL \u8bed\u8a00\u7684\u67e5\u8be2\u8bed\u53e5\u6765\u5b9e\u73b0\u590d\u6742\u67e5\u8be2\u3002DynamoDB \u540c\u65f6\u652f\u6301\u952e-\u503c\u5b58\u50a8\u548c\u6587\u6863\u7c7b\u578b\u5b58\u50a8\u3002\n\n\u6587\u6863\u7c7b\u578b\u5b58\u50a8\u5177\u5907\u9ad8\u5ea6\u7684\u7075\u6d3b\u6027\uff0c\u5e38\u7528\u4e8e\u5904\u7406\u5076\u5c14\u53d8\u5316\u7684\u6570\u636e\u3002\n\n#### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\uff1a\u6587\u6863\u7c7b\u578b\u5b58\u50a8\n\n- [\u9762\u5411\u6587\u6863\u7684\u6570\u636e\u5e93](https://en.wikipedia.org/wiki/Document-oriented_database)\n- [MongoDB \u67b6\u6784](https://www.mongodb.com/mongodb-architecture)\n- [CouchDB \u67b6\u6784](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/)\n- [Elasticsearch \u67b6\u6784](https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up)\n\n#### \u5217\u578b\u5b58\u50a8\n\n<p align=\"center\">\n  <img src=\"images/n16iOGk.png\">\n  <br/>\n  <strong><a href=\"http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html\">\u8d44\u6599\u6765\u6e90: SQL \u548c NoSQL\uff0c\u4e00\u4e2a\u7b80\u77ed\u7684\u5386\u53f2</a></strong>\n</p>\n\n> \u62bd\u8c61\u6a21\u578b\uff1a\u5d4c\u5957\u7684 `ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>` \u6620\u5c04\n\n\u7c7b\u578b\u5b58\u50a8\u7684\u57fa\u672c\u6570\u636e\u5355\u5143\u662f\u5217\uff08\u540d\uff0f\u503c\u5bf9\uff09\u3002\u5217\u53ef\u4ee5\u5728\u5217\u65cf\uff08\u7c7b\u4f3c\u4e8e SQL \u7684\u6570\u636e\u8868\uff09\u4e2d\u88ab\u5206\u7ec4\u3002\u8d85\u7ea7\u5217\u65cf\u518d\u5206\u7ec4\u666e\u901a\u5217\u65cf\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u884c\u952e\u72ec\u7acb\u8bbf\u95ee\u6bcf\u4e00\u5217\uff0c\u5177\u6709\u76f8\u540c\u884c\u952e\u503c\u7684\u5217\u7ec4\u6210\u4e00\u884c\u3002\u6bcf\u4e2a\u503c\u90fd\u5305\u542b\u7248\u672c\u7684\u65f6\u95f4\u6233\u7528\u4e8e\u89e3\u51b3\u7248\u672c\u51b2\u7a81\u3002\n\nGoogle \u53d1\u5e03\u4e86\u7b2c\u4e00\u4e2a\u5217\u578b\u5b58\u50a8\u6570\u636e\u5e93 [Bigtable](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)\uff0c\u5b83\u5f71\u54cd\u4e86 Hadoop \u751f\u6001\u7cfb\u7edf\u4e2d\u6d3b\u8dc3\u7684\u5f00\u6e90\u6570\u636e\u5e93 [HBase](https://www.mapr.com/blog/in-depth-look-hbase-architecture) \u548c Facebook \u7684 [Cassandra](http://docs.datastax.com/en/archived/cassandra/2.0/cassandra/architecture/architectureIntro_c.html)\u3002\u50cf BigTable\uff0cHBase \u548c Cassandra \u8fd9\u6837\u7684\u5b58\u50a8\u7cfb\u7edf\u5c06\u952e\u4ee5\u5b57\u6bcd\u987a\u5e8f\u5b58\u50a8\uff0c\u53ef\u4ee5\u9ad8\u6548\u5730\u8bfb\u53d6\u952e\u5217\u3002\n\n\u5217\u578b\u5b58\u50a8\u5177\u5907\u9ad8\u53ef\u7528\u6027\u548c\u9ad8\u53ef\u6269\u5c55\u6027\u3002\u901a\u5e38\u88ab\u7528\u4e8e\u5927\u6570\u636e\u76f8\u5173\u5b58\u50a8\u3002\n\n##### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\uff1a\u5217\u578b\u5b58\u50a8\n\n- [SQL \u4e0e NoSQL \u7b80\u53f2](http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html)\n- [BigTable \u67b6\u6784](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)\n- [Hbase \u67b6\u6784](https://www.mapr.com/blog/in-depth-look-hbase-architecture)\n- [Cassandra \u67b6\u6784](http://docs.datastax.com/en/archived/cassandra/2.0/cassandra/architecture/architectureIntro_c.html)\n\n#### \u56fe\u6570\u636e\u5e93\n\n<p align=\"center\">\n  <img src=\"images/fNcl65g.png\">\n  <br/>\n  <strong><a href=\"https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png\"/>\u8d44\u6599\u6765\u6e90\uff1a\u56fe\u6570\u636e\u5e93</a></strong>\n</p>\n\n> \u62bd\u8c61\u6a21\u578b\uff1a \u56fe\n\n\u5728\u56fe\u6570\u636e\u5e93\u4e2d\uff0c\u4e00\u4e2a\u8282\u70b9\u5bf9\u5e94\u4e00\u6761\u8bb0\u5f55\uff0c\u4e00\u4e2a\u5f27\u5bf9\u5e94\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u56fe\u6570\u636e\u5e93\u88ab\u4f18\u5316\u7528\u4e8e\u8868\u793a\u5916\u952e\u7e41\u591a\u7684\u590d\u6742\u5173\u7cfb\u6216\u591a\u5bf9\u591a\u5173\u7cfb\u3002\n\n\u56fe\u6570\u636e\u5e93\u4e3a\u5b58\u50a8\u590d\u6742\u5173\u7cfb\u7684\u6570\u636e\u6a21\u578b\uff0c\u5982\u793e\u4ea4\u7f51\u7edc\uff0c\u63d0\u4f9b\u4e86\u5f88\u9ad8\u7684\u6027\u80fd\u3002\u5b83\u4eec\u76f8\u5bf9\u8f83\u65b0\uff0c\u5c1a\u672a\u5e7f\u6cdb\u5e94\u7528\uff0c\u67e5\u627e\u5f00\u53d1\u5de5\u5177\u6216\u8005\u8d44\u6e90\u76f8\u5bf9\u8f83\u96be\u3002\u8bb8\u591a\u56fe\u53ea\u80fd\u901a\u8fc7 [REST API](#\u8868\u8ff0\u6027\u72b6\u6001\u8f6c\u79fbrest) \u8bbf\u95ee\u3002\n\n##### \u76f8\u5173\u8d44\u6e90\u548c\u5ef6\u4f38\u9605\u8bfb\uff1a\u56fe\n- [\u56fe\u6570\u636e\u5e93](https://en.wikipedia.org/wiki/Graph_database)\n- [Neo4j](https://neo4j.com/)\n- [FlockDB](https://blog.twitter.com/2010/introducing-flockdb)\n\n#### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\uff1aNoSQL\n\n- [\u6570\u636e\u5e93\u672f\u8bed\u89e3\u91ca](http://stackoverflow.com/questions/3342497/explanation-of-base-terminology)\n- [NoSQL \u6570\u636e\u5e93 - \u8c03\u67e5\u53ca\u51b3\u7b56\u6307\u5357](https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq)\n- [\u53ef\u6269\u5c55\u6027](http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n- [NoSQL \u4ecb\u7ecd](https://www.youtube.com/watch?v=qI_g07C_Q5I)\n- [NoSQL \u6a21\u5f0f](http://horicky.blogspot.com/2009/11/nosql-patterns.html)\n\n### SQL \u8fd8\u662f NoSQL\n\n<p align=\"center\">\n  <img src=\"images/wXGqG5f.png\">\n  <br/>\n  <strong><a href=\"https://www.infoq.com/articles/Transition-RDBMS-NoSQL/\">\u8d44\u6599\u6765\u6e90\uff1a\u4ece RDBMS \u8f6c\u6362\u5230 NoSQL</a></strong>\n</p>\n\n\u9009\u53d6 **SQL** \u7684\u539f\u56e0:\n\n- \u7ed3\u6784\u5316\u6570\u636e\n- \u4e25\u683c\u7684\u6a21\u5f0f\n- \u5173\u7cfb\u578b\u6570\u636e\n- \u9700\u8981\u590d\u6742\u7684\u8054\u7ed3\u64cd\u4f5c\n- \u4e8b\u52a1\n- \u6e05\u6670\u7684\u6269\u5c55\u6a21\u5f0f\n- \u65e2\u6709\u8d44\u6e90\u66f4\u4e30\u5bcc\uff1a\u5f00\u53d1\u8005\u3001\u793e\u533a\u3001\u4ee3\u7801\u5e93\u3001\u5de5\u5177\u7b49\n- \u901a\u8fc7\u7d22\u5f15\u8fdb\u884c\u67e5\u8be2\u975e\u5e38\u5feb\n\n\u9009\u53d6 **NoSQL** \u7684\u539f\u56e0\uff1a\n\n- \u534a\u7ed3\u6784\u5316\u6570\u636e\n- \u52a8\u6001\u6216\u7075\u6d3b\u7684\u6a21\u5f0f\n- \u975e\u5173\u7cfb\u578b\u6570\u636e\n- \u4e0d\u9700\u8981\u590d\u6742\u7684\u8054\u7ed3\u64cd\u4f5c\n- \u5b58\u50a8 TB \uff08\u751a\u81f3 PB\uff09\u7ea7\u522b\u7684\u6570\u636e\n- \u9ad8\u6570\u636e\u5bc6\u96c6\u7684\u5de5\u4f5c\u8d1f\u8f7d\n- IOPS \u9ad8\u541e\u5410\u91cf\n\n\u9002\u5408 NoSQL \u7684\u793a\u4f8b\u6570\u636e\uff1a\n\n- \u57cb\u70b9\u6570\u636e\u548c\u65e5\u5fd7\u6570\u636e\n- \u6392\u884c\u699c\u6216\u8005\u5f97\u5206\u6570\u636e\n- \u4e34\u65f6\u6570\u636e\uff0c\u5982\u8d2d\u7269\u8f66\n- \u9891\u7e41\u8bbf\u95ee\u7684\uff08\u201c\u70ed\u201d\uff09\u8868\n- \u5143\u6570\u636e\uff0f\u67e5\u627e\u8868\n\n##### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\uff1aSQL \u6216 NoSQL\n\n- [\u6269\u5c55\u4f60\u7684\u7528\u6237\u6570\u5230\u7b2c\u4e00\u4e2a\u5343\u4e07](https://www.youtube.com/watch?v=w95murBkYmU)\n- [SQL \u548c NoSQL \u7684\u4e0d\u540c](https://www.sitepoint.com/sql-vs-nosql-differences/)\n## \u7f13\u5b58\n\n<p align=\"center\">\n  <img src=\"images/Q6z24La.png\">\n  <br/>\n  <strong><a href=\"http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html\">\u8d44\u6599\u6765\u6e90\uff1a\u53ef\u6269\u5c55\u7684\u7cfb\u7edf\u8bbe\u8ba1\u6a21\u5f0f</a></strong>\n</p>\n\n\u7f13\u5b58\u53ef\u4ee5\u63d0\u9ad8\u9875\u9762\u52a0\u8f7d\u901f\u5ea6\uff0c\u5e76\u53ef\u4ee5\u51cf\u5c11\u670d\u52a1\u5668\u548c\u6570\u636e\u5e93\u7684\u8d1f\u8f7d\u3002\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u5206\u53d1\u5668\u5148\u67e5\u770b\u8bf7\u6c42\u4e4b\u524d\u662f\u5426\u88ab\u54cd\u5e94\u8fc7\uff0c\u5982\u679c\u6709\u5219\u5c06\u4e4b\u524d\u7684\u7ed3\u679c\u76f4\u63a5\u8fd4\u56de\uff0c\u6765\u7701\u6389\u771f\u6b63\u7684\u5904\u7406\u3002\n\n\u6570\u636e\u5e93\u5206\u7247\u5747\u5300\u5206\u5e03\u7684\u8bfb\u53d6\u662f\u6700\u597d\u7684\u3002\u4f46\u662f\u70ed\u95e8\u6570\u636e\u4f1a\u8ba9\u8bfb\u53d6\u5206\u5e03\u4e0d\u5747\u5300\uff0c\u8fd9\u6837\u5c31\u4f1a\u9020\u6210\u74f6\u9888\uff0c\u5982\u679c\u5728\u6570\u636e\u5e93\u524d\u52a0\u4e2a\u7f13\u5b58\uff0c\u5c31\u4f1a\u62b9\u5e73\u4e0d\u5747\u5300\u7684\u8d1f\u8f7d\u548c\u7a81\u53d1\u6d41\u91cf\u5bf9\u6570\u636e\u5e93\u7684\u5f71\u54cd\u3002\n\n### \u5ba2\u6237\u7aef\u7f13\u5b58\n\n\u7f13\u5b58\u53ef\u4ee5\u4f4d\u4e8e\u5ba2\u6237\u7aef\uff08\u64cd\u4f5c\u7cfb\u7edf\u6216\u8005\u6d4f\u89c8\u5668\uff09\uff0c[\u670d\u52a1\u7aef](#\u53cd\u5411\u4ee3\u7406web-\u670d\u52a1\u5668)\u6216\u8005\u4e0d\u540c\u7684\u7f13\u5b58\u5c42\u3002\n\n### CDN \u7f13\u5b58\n\n[CDN](#\u5185\u5bb9\u5206\u53d1\u7f51\u7edccdn) \u4e5f\u88ab\u89c6\u4e3a\u4e00\u79cd\u7f13\u5b58\u3002\n\n### Web \u670d\u52a1\u5668\u7f13\u5b58\n\n[\u53cd\u5411\u4ee3\u7406](#\u53cd\u5411\u4ee3\u7406web-\u670d\u52a1\u5668)\u548c\u7f13\u5b58\uff08\u6bd4\u5982 [Varnish](https://www.varnish-cache.org/)\uff09\u53ef\u4ee5\u76f4\u63a5\u63d0\u4f9b\u9759\u6001\u548c\u52a8\u6001\u5185\u5bb9\u3002Web \u670d\u52a1\u5668\u540c\u6837\u4e5f\u53ef\u4ee5\u7f13\u5b58\u8bf7\u6c42\uff0c\u8fd4\u56de\u76f8\u5e94\u7ed3\u679c\u800c\u4e0d\u5fc5\u8fde\u63a5\u5e94\u7528\u670d\u52a1\u5668\u3002\n\n### \u6570\u636e\u5e93\u7f13\u5b58\n\n\u6570\u636e\u5e93\u7684\u9ed8\u8ba4\u914d\u7f6e\u4e2d\u901a\u5e38\u5305\u542b\u7f13\u5b58\u7ea7\u522b\uff0c\u9488\u5bf9\u4e00\u822c\u7528\u4f8b\u8fdb\u884c\u4e86\u4f18\u5316\u3002\u8c03\u6574\u914d\u7f6e\uff0c\u5728\u4e0d\u540c\u60c5\u51b5\u4e0b\u4f7f\u7528\u4e0d\u540c\u7684\u6a21\u5f0f\u53ef\u4ee5\u8fdb\u4e00\u6b65\u63d0\u9ad8\u6027\u80fd\u3002\n\n### \u5e94\u7528\u7f13\u5b58\n\n\u57fa\u4e8e\u5185\u5b58\u7684\u7f13\u5b58\u6bd4\u5982 Memcached \u548c Redis \u662f\u5e94\u7528\u7a0b\u5e8f\u548c\u6570\u636e\u5b58\u50a8\u4e4b\u95f4\u7684\u4e00\u79cd\u952e\u503c\u5b58\u50a8\u3002\u7531\u4e8e\u6570\u636e\u4fdd\u5b58\u5728 RAM \u4e2d\uff0c\u5b83\u6bd4\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\u7684\u5178\u578b\u6570\u636e\u5e93\u8981\u5feb\u591a\u4e86\u3002RAM \u6bd4\u78c1\u76d8\u9650\u5236\u66f4\u591a\uff0c\u6240\u4ee5\u4f8b\u5982 [least recently used (LRU)](https://en.wikipedia.org/wiki/Cache_algorithms#Least_Recently_Used) \u7684[\u7f13\u5b58\u65e0\u6548\u7b97\u6cd5](https://en.wikipedia.org/wiki/Cache_algorithms)\u53ef\u4ee5\u5c06\u300c\u70ed\u95e8\u6570\u636e\u300d\u653e\u5728 RAM \u4e2d\uff0c\u800c\u5bf9\u4e00\u4e9b\u6bd4\u8f83\u300c\u51b7\u95e8\u300d\u7684\u6570\u636e\u4e0d\u505a\u5904\u7406\u3002\n\nRedis \u6709\u4e0b\u5217\u9644\u52a0\u529f\u80fd\uff1a\n\n- \u6301\u4e45\u6027\u9009\u9879\n- \u5185\u7f6e\u6570\u636e\u7ed3\u6784\u6bd4\u5982\u6709\u5e8f\u96c6\u5408\u548c\u5217\u8868\n\n\u6709\u591a\u4e2a\u7f13\u5b58\u7ea7\u522b\uff0c\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a**\u6570\u636e\u5e93\u67e5\u8be2**\u548c**\u5bf9\u8c61**\uff1a\n\n- \u884c\u7ea7\u522b\n- \u67e5\u8be2\u7ea7\u522b\n- \u5b8c\u6574\u7684\u53ef\u5e8f\u5217\u5316\u5bf9\u8c61\n- \u5b8c\u5168\u6e32\u67d3\u7684 HTML\n\n\u4e00\u822c\u6765\u8bf4\uff0c\u4f60\u5e94\u8be5\u5c3d\u91cf\u907f\u514d\u57fa\u4e8e\u6587\u4ef6\u7684\u7f13\u5b58\uff0c\u56e0\u4e3a\u8fd9\u4f7f\u5f97\u590d\u5236\u548c\u81ea\u52a8\u7f29\u653e\u5f88\u56f0\u96be\u3002\n\n### \u6570\u636e\u5e93\u67e5\u8be2\u7ea7\u522b\u7684\u7f13\u5b58\n\n\u5f53\u4f60\u67e5\u8be2\u6570\u636e\u5e93\u7684\u65f6\u5019\uff0c\u5c06\u67e5\u8be2\u8bed\u53e5\u7684\u54c8\u5e0c\u503c\u4e0e\u67e5\u8be2\u7ed3\u679c\u5b58\u50a8\u5230\u7f13\u5b58\u4e2d\u3002\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u9047\u5230\u4ee5\u4e0b\u95ee\u9898\uff1a\n\n- \u5f88\u96be\u7528\u590d\u6742\u7684\u67e5\u8be2\u5220\u9664\u5df2\u7f13\u5b58\u7ed3\u679c\u3002\n- \u5982\u679c\u4e00\u6761\u6570\u636e\u6bd4\u5982\u8868\u4e2d\u67d0\u6761\u6570\u636e\u7684\u4e00\u9879\u88ab\u6539\u53d8\uff0c\u5219\u9700\u8981\u5220\u9664\u6240\u6709\u53ef\u80fd\u5305\u542b\u5df2\u66f4\u6539\u9879\u7684\u7f13\u5b58\u7ed3\u679c\u3002\n\n### \u5bf9\u8c61\u7ea7\u522b\u7684\u7f13\u5b58\n\n\u5c06\u60a8\u7684\u6570\u636e\u89c6\u4e3a\u5bf9\u8c61\uff0c\u5c31\u50cf\u5bf9\u5f85\u4f60\u7684\u5e94\u7528\u4ee3\u7801\u4e00\u6837\u3002\u8ba9\u5e94\u7528\u7a0b\u5e8f\u5c06\u6570\u636e\u4ece\u6570\u636e\u5e93\u4e2d\u7ec4\u5408\u5230\u7c7b\u5b9e\u4f8b\u6216\u6570\u636e\u7ed3\u6784\u4e2d\uff1a\n\n- \u5982\u679c\u5bf9\u8c61\u7684\u57fa\u7840\u6570\u636e\u5df2\u7ecf\u66f4\u6539\u4e86\uff0c\u90a3\u4e48\u4ece\u7f13\u5b58\u4e2d\u5220\u6389\u8fd9\u4e2a\u5bf9\u8c61\u3002\n- \u5141\u8bb8\u5f02\u6b65\u5904\u7406\uff1aworkers \u901a\u8fc7\u4f7f\u7528\u6700\u65b0\u7684\u7f13\u5b58\u5bf9\u8c61\u6765\u7ec4\u88c5\u5bf9\u8c61\u3002\n\n\u5efa\u8bae\u7f13\u5b58\u7684\u5185\u5bb9\uff1a\n\n- \u7528\u6237\u4f1a\u8bdd\n- \u5b8c\u5168\u6e32\u67d3\u7684 Web \u9875\u9762\n- \u6d3b\u52a8\u6d41\n- \u7528\u6237\u56fe\u6570\u636e\n\n### \u4f55\u65f6\u66f4\u65b0\u7f13\u5b58\n\n\u7531\u4e8e\u4f60\u53ea\u80fd\u5728\u7f13\u5b58\u4e2d\u5b58\u50a8\u6709\u9650\u7684\u6570\u636e\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u9002\u7528\u4e8e\u4f60\u7528\u4f8b\u7684\u7f13\u5b58\u66f4\u65b0\u7b56\u7565\u3002\n\n#### \u7f13\u5b58\u6a21\u5f0f\n\n<p align=\"center\">\n  <img src=\"images/ONjORqk.png\">\n  <br/>\n  <strong><a href=\"http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast\">\u8d44\u6599\u6765\u6e90\uff1a\u4ece\u7f13\u5b58\u5230\u5185\u5b58\u6570\u636e\u7f51\u683c</a></strong>\n</p>\n\n\u5e94\u7528\u4ece\u5b58\u50a8\u5668\u8bfb\u5199\u3002\u7f13\u5b58\u4e0d\u548c\u5b58\u50a8\u5668\u76f4\u63a5\u4ea4\u4e92\uff0c\u5e94\u7528\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n- \u5728\u7f13\u5b58\u4e2d\u67e5\u627e\u8bb0\u5f55\uff0c\u5982\u679c\u6240\u9700\u6570\u636e\u4e0d\u5728\u7f13\u5b58\u4e2d\n- \u4ece\u6570\u636e\u5e93\u4e2d\u52a0\u8f7d\u6240\u9700\u5185\u5bb9\n- \u5c06\u67e5\u627e\u5230\u7684\u7ed3\u679c\u5b58\u50a8\u5230\u7f13\u5b58\u4e2d\n- \u8fd4\u56de\u6240\u9700\u5185\u5bb9\n\n```python\ndef get_user(self, user_id):\n    user = cache.get(\"user.{0}\", user_id)\n    if user is None:\n        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)\n        if user is not None:\n            key = \"user.{0}\".format(user_id)\n            cache.set(key, json.dumps(user))\n    return user\n```\n\n[Memcached](https://memcached.org/) \u901a\u5e38\u7528\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u7528\u3002\n\n\u6dfb\u52a0\u5230\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u8bfb\u53d6\u901f\u5ea6\u5f88\u5feb\u3002\u7f13\u5b58\u6a21\u5f0f\u4e5f\u79f0\u4e3a\u5ef6\u8fdf\u52a0\u8f7d\u3002\u53ea\u7f13\u5b58\u6240\u8bf7\u6c42\u7684\u6570\u636e\uff0c\u8fd9\u907f\u514d\u4e86\u6ca1\u6709\u88ab\u8bf7\u6c42\u7684\u6570\u636e\u5360\u6ee1\u4e86\u7f13\u5b58\u7a7a\u95f4\u3002\n\n##### \u7f13\u5b58\u7684\u7f3a\u70b9\uff1a\n\n- \u8bf7\u6c42\u7684\u6570\u636e\u5982\u679c\u4e0d\u5728\u7f13\u5b58\u4e2d\u5c31\u9700\u8981\u7ecf\u8fc7\u4e09\u4e2a\u6b65\u9aa4\u6765\u83b7\u53d6\u6570\u636e\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u660e\u663e\u7684\u5ef6\u8fdf\u3002\n- \u5982\u679c\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u66f4\u65b0\u4e86\u4f1a\u5bfc\u81f4\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u8fc7\u65f6\u3002\u8fd9\u4e2a\u95ee\u9898\u9700\u8981\u901a\u8fc7\u8bbe\u7f6e\b TTL \u5f3a\u5236\u66f4\u65b0\u7f13\u5b58\u6216\u8005\u76f4\u5199\u6a21\u5f0f\u6765\u7f13\u89e3\u8fd9\u79cd\u60c5\u51b5\u3002\n- \u5f53\u4e00\u4e2a\u8282\u70b9\u51fa\u73b0\u6545\u969c\u7684\u65f6\u5019\uff0c\u5b83\u5c06\u4f1a\u88ab\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\u66ff\u4ee3\uff0c\u8fd9\u589e\u52a0\u4e86\u5ef6\u8fdf\u7684\u65f6\u95f4\u3002\n\n#### \u76f4\u5199\u6a21\u5f0f\n\n<p align=\"center\">\n  <img src=\"images/0vBc0hN.png\">\n  <br/>\n  <strong><a href=\"http://www.slideshare.net/jboner/scalability-availability-stability-patterns/\">\u8d44\u6599\u6765\u6e90\uff1a\u53ef\u6269\u5c55\u6027\u3001\u53ef\u7528\u6027\u3001\u7a33\u5b9a\u6027\u3001\u6a21\u5f0f</a></strong>\n</p>\n\n\u5e94\u7528\u4f7f\u7528\u7f13\u5b58\u4f5c\u4e3a\u4e3b\u8981\u7684\u6570\u636e\u5b58\u50a8\uff0c\u5c06\u6570\u636e\u8bfb\u5199\u5230\u7f13\u5b58\u4e2d\uff0c\u800c\u7f13\u5b58\u8d1f\u8d23\u4ece\u6570\u636e\u5e93\u4e2d\u8bfb\u5199\u6570\u636e\u3002\n\n- \u5e94\u7528\u5411\u7f13\u5b58\u4e2d\u6dfb\u52a0/\u66f4\u65b0\u6570\u636e\n- \u7f13\u5b58\u540c\u6b65\u5730\u5199\u5165\u6570\u636e\u5b58\u50a8\n- \u8fd4\u56de\u6240\u9700\u5185\u5bb9\n\n\u5e94\u7528\u4ee3\u7801\uff1a\n\n```\nset_user(12345, {\"foo\":\"bar\"})\n```\n\n\u7f13\u5b58\u4ee3\u7801\uff1a\n\n```python\ndef set_user(user_id, values):\n    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)\n    cache.set(user_id, user)\n```\n\n\u7531\u4e8e\u5b58\u5199\u64cd\u4f5c\u6240\u4ee5\u76f4\u5199\u6a21\u5f0f\u6574\u4f53\u662f\u4e00\u79cd\u5f88\u6162\u7684\u64cd\u4f5c\uff0c\u4f46\u662f\u8bfb\u53d6\u521a\u5199\u5165\u7684\u6570\u636e\u5f88\u5feb\u3002\u76f8\u6bd4\u8bfb\u53d6\u6570\u636e\uff0c\u7528\u6237\u901a\u5e38\u6bd4\u8f83\u80fd\u63a5\u53d7\u66f4\u65b0\u6570\u636e\u65f6\u901f\u5ea6\u8f83\u6162\u3002\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u4e0d\u4f1a\u8fc7\u65f6\u3002\n\n##### \u76f4\u5199\u6a21\u5f0f\u7684\u7f3a\u70b9\uff1a\n\n- \u7531\u4e8e\u6545\u969c\u6216\u8005\u7f29\u653e\u800c\u521b\u5efa\u7684\u65b0\u7684\u8282\u70b9\uff0c\u65b0\u7684\u8282\u70b9\u4e0d\u4f1a\u7f13\u5b58\uff0c\u76f4\u5230\u6570\u636e\u5e93\u66f4\u65b0\u4e3a\u6b62\u3002\u7f13\u5b58\u5e94\u7528\u76f4\u5199\u6a21\u5f0f\u53ef\u4ee5\u7f13\u89e3\u8fd9\u4e2a\u95ee\u9898\u3002\n- \u5199\u5165\u7684\u5927\u591a\u6570\u6570\u636e\u53ef\u80fd\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u88ab\u8bfb\u53d6\uff0c\u7528 TTL \u53ef\u4ee5\u6700\u5c0f\u5316\u8fd9\u79cd\u60c5\u51b5\u7684\u51fa\u73b0\u3002\n\n#### \u56de\u5199\u6a21\u5f0f\n\n<p align=\"center\">\n  <img src=\"images/rgSrvjG.png\">\n  <br/>\n  <strong><a href=\"http://www.slideshare.net/jboner/scalability-availability-stability-patterns/\">\u8d44\u6599\u6765\u6e90\uff1a\u53ef\u6269\u5c55\u6027\u3001\u53ef\u7528\u6027\u3001\u7a33\u5b9a\u6027\u3001\u6a21\u5f0f</a></strong>\n</p>\n\n\u5728\u56de\u5199\u6a21\u5f0f\u4e2d\uff0c\u5e94\u7528\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n- \u5728\u7f13\u5b58\u4e2d\u589e\u52a0\u6216\u8005\u66f4\u65b0\u6761\u76ee\n- \u5f02\u6b65\u5199\u5165\u6570\u636e\uff0c\u63d0\u9ad8\u5199\u5165\u6027\u80fd\u3002\n\n##### \u56de\u5199\u6a21\u5f0f\u7684\u7f3a\u70b9\uff1a\n\n- \u7f13\u5b58\u53ef\u80fd\u5728\u5176\u5185\u5bb9\u6210\u529f\u5b58\u50a8\u4e4b\u524d\u4e22\u5931\u6570\u636e\u3002\n- \u6267\u884c\u76f4\u5199\u6a21\u5f0f\u6bd4\u7f13\u5b58\u6216\u8005\u56de\u5199\u6a21\u5f0f\u66f4\u590d\u6742\u3002\n\n#### \u5237\u65b0\n\n<p align=\"center\">\n  <img src=\"images/kxtjqgE.png\">\n  <br/>\n  <strong><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>\u8d44\u6599\u6765\u6e90\uff1a\u4ece\u7f13\u5b58\u5230\u5185\u5b58\u6570\u636e\u7f51\u683c</a></strong>\n</p>\n\n\u4f60\u53ef\u4ee5\u5c06\u7f13\u5b58\u914d\u7f6e\u6210\u5728\u5230\u671f\u4e4b\u524d\u81ea\u52a8\u5237\u65b0\u6700\u8fd1\u8bbf\u95ee\u8fc7\u7684\u5185\u5bb9\u3002\n\n\u5982\u679c\u7f13\u5b58\u53ef\u4ee5\u51c6\u786e\u9884\u6d4b\u5c06\u6765\u53ef\u80fd\u8bf7\u6c42\u54ea\u4e9b\u6570\u636e\uff0c\u90a3\u4e48\u5237\u65b0\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5ef6\u8fdf\u4e0e\u8bfb\u53d6\u65f6\u95f4\u7684\u964d\u4f4e\u3002\n\n##### \u5237\u65b0\u7684\u7f3a\u70b9\uff1a\n\n- \u4e0d\u80fd\u51c6\u786e\u9884\u6d4b\u5230\u672a\u6765\u9700\u8981\u7528\u5230\u7684\u6570\u636e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6027\u80fd\u4e0d\u5982\u4e0d\u4f7f\u7528\u5237\u65b0\u3002\n\n### \u7f13\u5b58\u7684\u7f3a\u70b9\uff1a\n\n- \u9700\u8981\u4fdd\u6301\u7f13\u5b58\u548c\u771f\u5b9e\u6570\u636e\u6e90\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\uff0c\u6bd4\u5982\u6570\u636e\u5e93\u6839\u636e[\u7f13\u5b58\u65e0\u6548](https://en.wikipedia.org/wiki/Cache_algorithms)\u3002\n- \u9700\u8981\u6539\u53d8\u5e94\u7528\u7a0b\u5e8f\u6bd4\u5982\u589e\u52a0 Redis \u6216\u8005 memcached\u3002\n- \u65e0\u6548\u7f13\u5b58\u662f\u4e2a\u96be\u9898\uff0c\u4ec0\u4e48\u65f6\u5019\u66f4\u65b0\u7f13\u5b58\u662f\u4e0e\u4e4b\u76f8\u5173\u7684\u590d\u6742\u95ee\u9898\u3002\n\n### \u76f8\u5173\u8d44\u6e90\u548c\u5ef6\u4f38\u9605\u8bfb\n\n- [\u4ece\u7f13\u5b58\u5230\u5185\u5b58\u6570\u636e](http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast)\n- [\u53ef\u6269\u5c55\u7cfb\u7edf\u8bbe\u8ba1\u6a21\u5f0f](http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html)\n- [\u53ef\u7f29\u653e\u7cfb\u7edf\u6784\u67b6\u4ecb\u7ecd](http://lethain.com/introduction-to-architecting-systems-for-scale/)\n- [\u53ef\u6269\u5c55\u6027\uff0c\u53ef\u7528\u6027\uff0c\u7a33\u5b9a\u6027\u548c\u6a21\u5f0f](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n- [\u53ef\u6269\u5c55\u6027](http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n- [AWS ElastiCache \u7b56\u7565](http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html)\n- [\u7ef4\u57fa\u767e\u79d1](https://en.wikipedia.org/wiki/Cache_(computing))\n\n## \u5f02\u6b65\n\n<p align=\"center\">\n  <img src=\"images/54GYsSx.png\">\n  <br/>\n  <strong><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>\u8d44\u6599\u6765\u6e90\uff1a\u53ef\u7f29\u653e\u7cfb\u7edf\u6784\u67b6\u4ecb\u7ecd</a></strong>\n</p>\n\n\u5f02\u6b65\u5de5\u4f5c\u6d41\u6709\u52a9\u4e8e\u51cf\u5c11\u90a3\u4e9b\u539f\u672c\u987a\u5e8f\u6267\u884c\u7684\u8bf7\u6c42\u65f6\u95f4\u3002\u5b83\u4eec\u53ef\u4ee5\u901a\u8fc7\u63d0\u524d\u8fdb\u884c\u4e00\u4e9b\u8017\u65f6\u7684\u5de5\u4f5c\u6765\u5e2e\u52a9\u51cf\u5c11\u8bf7\u6c42\u65f6\u95f4\uff0c\u6bd4\u5982\u5b9a\u671f\u6c47\u603b\u6570\u636e\u3002\n\n### \u6d88\u606f\u961f\u5217\n\n\u6d88\u606f\u961f\u5217\u63a5\u6536\uff0c\u4fdd\u7559\u548c\u4f20\u9012\u6d88\u606f\u3002\u5982\u679c\u6309\u987a\u5e8f\u6267\u884c\u64cd\u4f5c\u592a\u6162\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u6709\u4ee5\u4e0b\u5de5\u4f5c\u6d41\u7684\u6d88\u606f\u961f\u5217\uff1a\n\n- \u5e94\u7528\u7a0b\u5e8f\u5c06\u4f5c\u4e1a\u53d1\u5e03\u5230\u961f\u5217\uff0c\u7136\u540e\u901a\u77e5\u7528\u6237\u4f5c\u4e1a\u72b6\u6001\n- \u4e00\u4e2a worker \u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u8be5\u4f5c\u4e1a\uff0c\u5bf9\u5176\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u663e\u793a\u8be5\u4f5c\u4e1a\u5b8c\u6210\n\n\u4e0d\u53bb\u963b\u585e\u7528\u6237\u64cd\u4f5c\uff0c\u4f5c\u4e1a\u5728\u540e\u53f0\u5904\u7406\u3002\u5728\u6b64\u671f\u95f4\uff0c\u5ba2\u6237\u7aef\u53ef\u80fd\u4f1a\u8fdb\u884c\u4e00\u4e9b\u5904\u7406\u4f7f\u5f97\u770b\u4e0a\u53bb\u50cf\u662f\u4efb\u52a1\u5df2\u7ecf\u5b8c\u6210\u4e86\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8981\u53d1\u9001\u4e00\u6761\u63a8\u6587\uff0c\u63a8\u6587\u53ef\u80fd\u4f1a\u9a6c\u4e0a\u51fa\u73b0\u5728\u4f60\u7684\u65f6\u95f4\u7ebf\u4e0a\uff0c\u4f46\u662f\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u624d\u80fd\u5c06\u4f60\u7684\u63a8\u6587\u63a8\u9001\u5230\u4f60\u7684\u6240\u6709\u5173\u6ce8\u8005\u90a3\u91cc\u53bb\u3002\n\n**Redis** \u662f\u4e00\u4e2a\u4ee4\u4eba\u6ee1\u610f\u7684\u7b80\u5355\u7684\u6d88\u606f\u4ee3\u7406\uff0c\u4f46\u662f\u6d88\u606f\u6709\u53ef\u80fd\u4f1a\u4e22\u5931\u3002\n\n**RabbitMQ** \u5f88\u53d7\u6b22\u8fce\u4f46\u662f\u8981\u6c42\u4f60\u9002\u5e94\u300cAMQP\u300d\u534f\u8bae\u5e76\u4e14\u7ba1\u7406\u4f60\u81ea\u5df1\u7684\u8282\u70b9\u3002\n\n**Amazon SQS** \u662f\u88ab\u6258\u7ba1\u7684\uff0c\u4f46\u53ef\u80fd\u5177\u6709\u9ad8\u5ef6\u8fdf\uff0c\u5e76\u4e14\u6d88\u606f\u53ef\u80fd\u4f1a\u88ab\u4f20\u9001\u4e24\u6b21\u3002\n\n### \u4efb\u52a1\u961f\u5217\n\n\u4efb\u52a1\u961f\u5217\u63a5\u6536\u4efb\u52a1\u53ca\u5176\u76f8\u5173\u6570\u636e\uff0c\u8fd0\u884c\u5b83\u4eec\uff0c\u7136\u540e\u4f20\u9012\u5176\u7ed3\u679c\u3002 \u5b83\u4eec\u53ef\u4ee5\u652f\u6301\u8c03\u5ea6\uff0c\u5e76\u53ef\u7528\u4e8e\u5728\u540e\u53f0\u8fd0\u884c\u8ba1\u7b97\u5bc6\u96c6\u578b\u4f5c\u4e1a\u3002\n\n**Celery** \u652f\u6301\u8c03\u5ea6\uff0c\u4e3b\u8981\u662f\u7528 Python \u5f00\u53d1\u7684\u3002\n\n### \u80cc\u538b\n\n\u5982\u679c\u961f\u5217\u5f00\u59cb\u660e\u663e\u589e\u957f\uff0c\u90a3\u4e48\u961f\u5217\u5927\u5c0f\u53ef\u80fd\u4f1a\u8d85\u8fc7\u5185\u5b58\u5927\u5c0f\uff0c\u5bfc\u81f4\u9ad8\u901f\u7f13\u5b58\u672a\u547d\u4e2d\uff0c\u78c1\u76d8\u8bfb\u53d6\uff0c\u751a\u81f3\u6027\u80fd\u66f4\u6162\u3002[\u80cc\u538b](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)\u53ef\u4ee5\u901a\u8fc7\u9650\u5236\u961f\u5217\u5927\u5c0f\u6765\u5e2e\u52a9\u6211\u4eec\uff0c\u4ece\u800c\u4e3a\u961f\u5217\u4e2d\u7684\u4f5c\u4e1a\u4fdd\u6301\u9ad8\u541e\u5410\u7387\u548c\u826f\u597d\u7684\u54cd\u5e94\u65f6\u95f4\u3002\u4e00\u65e6\u961f\u5217\u586b\u6ee1\uff0c\u5ba2\u6237\u7aef\u5c06\u5f97\u5230\u670d\u52a1\u5668\u5fd9\u6216\u8005 HTTP 503 \u72b6\u6001\u7801\uff0c\u4ee5\u4fbf\u7a0d\u540e\u91cd\u8bd5\u3002\u5ba2\u6237\u7aef\u53ef\u4ee5\u5728\u7a0d\u540e\u65f6\u95f4\u91cd\u8bd5\u8be5\u8bf7\u6c42\uff0c\u4e5f\u8bb8\u662f[\u6307\u6570\u9000\u907f](https://en.wikipedia.org/wiki/Exponential_backoff)\u3002\n\n### \u5f02\u6b65\u7684\u7f3a\u70b9\uff1a\n\n- \u7b80\u5355\u7684\u8ba1\u7b97\u548c\u5b9e\u65f6\u5de5\u4f5c\u6d41\u7b49\u7528\u4f8b\u53ef\u80fd\u66f4\u9002\u7528\u4e8e\u540c\u6b65\u64cd\u4f5c\uff0c\u56e0\u4e3a\u5f15\u5165\u961f\u5217\u53ef\u80fd\u4f1a\u589e\u52a0\u5ef6\u8fdf\u548c\u590d\u6742\u6027\u3002\n\n### \u76f8\u5173\u8d44\u6e90\u548c\u5ef6\u4f38\u9605\u8bfb\n\n- [\u8fd9\u662f\u4e00\u4e2a\u6570\u5b57\u6e38\u620f](https://www.youtube.com/watch?v=1KRYH75wgy4)\n- [\u8d85\u8f7d\u65f6\u5e94\u7528\u80cc\u538b](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)\n- [\u5229\u7279\u5c14\u6cd5\u5219](https://en.wikipedia.org/wiki/Little%27s_law)\n- [\u6d88\u606f\u961f\u5217\u4e0e\u4efb\u52a1\u961f\u5217\u6709\u4ec0\u4e48\u533a\u522b\uff1f](https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function)\n\n## \u901a\u8baf\n\n<p align=\"center\">\n  <img src=\"images/5KeocQs.jpg\">\n  <br/>\n  <strong><a href=http://www.escotal.com/osilayer.html>\u8d44\u6599\u6765\u6e90\uff1aOSI 7\u5c42\u6a21\u578b</a></strong>\n</p>\n\n### \u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff08HTTP\uff09\n\nHTTP \u662f\u4e00\u79cd\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7f16\u7801\u548c\u4f20\u8f93\u6570\u636e\u7684\u65b9\u6cd5\u3002\u5b83\u662f\u4e00\u4e2a\u8bf7\u6c42/\u54cd\u5e94\u534f\u8bae\uff1a\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u9488\u5bf9\u76f8\u5173\u5185\u5bb9\u548c\u5b8c\u6210\u72b6\u6001\u4fe1\u606f\u7684\u8bf7\u6c42\u548c\u54cd\u5e94\u3002HTTP \u662f\u72ec\u7acb\u7684\uff0c\u5141\u8bb8\u8bf7\u6c42\u548c\u54cd\u5e94\u6d41\u7ecf\u8bb8\u591a\u6267\u884c\u8d1f\u8f7d\u5747\u8861\uff0c\u7f13\u5b58\uff0c\u52a0\u5bc6\u548c\u538b\u7f29\u7684\u4e2d\u95f4\u8def\u7531\u5668\u548c\u670d\u52a1\u5668\u3002\n\n\u4e00\u4e2a\u57fa\u672c\u7684 HTTP \u8bf7\u6c42\u7531\u4e00\u4e2a\u52a8\u8bcd\uff08\u65b9\u6cd5\uff09\u548c\u4e00\u4e2a\u8d44\u6e90\uff08\u7aef\u70b9\uff09\u7ec4\u6210\u3002 \u4ee5\u4e0b\u662f\u5e38\u89c1\u7684 HTTP \u52a8\u8bcd\uff1a\n\n| \u52a8\u8bcd     | \u63cf\u8ff0             | *\u5e42\u7b49  | \u5b89\u5168\u6027  | \u53ef\u7f13\u5b58            |\n| ------ | -------------- | ---- | ---- | -------------- |\n| GET    | \u8bfb\u53d6\u8d44\u6e90           | Yes  | Yes  | Yes            |\n| POST   | \u521b\u5efa\u8d44\u6e90\u6216\u89e6\u53d1\u5904\u7406\u6570\u636e\u7684\u8fdb\u7a0b | No   | No   | Yes\uff0c\u5982\u679c\u56de\u5e94\u5305\u542b\u5237\u65b0\u4fe1\u606f |\n| PUT    | \u521b\u5efa\u6216\u66ff\u6362\u8d44\u6e90        | Yes  | No   | No             |\n| PATCH  | \u90e8\u5206\u66f4\u65b0\u8d44\u6e90         | No   | No   | Yes\uff0c\u5982\u679c\u56de\u5e94\u5305\u542b\u5237\u65b0\u4fe1\u606f |\n| DELETE | \u5220\u9664\u8d44\u6e90           | Yes  | No   | No             |\n\n\n\n**\u591a\u6b21\u6267\u884c\u4e0d\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u7ed3\u679c**\u3002\n\nHTTP \u662f\u4f9d\u8d56\u4e8e\u8f83\u4f4e\u7ea7\u534f\u8bae\uff08\u5982 **TCP** \u548c **UDP**\uff09\u7684\u5e94\u7528\u5c42\u534f\u8bae\u3002\n\n#### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\uff1aHTTP\n\n* [README](https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)    +\n* [HTTP \u662f\u4ec0\u4e48\uff1f](https://www.nginx.com/resources/glossary/http/)\n* [HTTP \u548c TCP \u7684\u533a\u522b](https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)\n* [PUT \u548c PATCH\u7684\u533a\u522b](https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1)\n\n### \u4f20\u8f93\u63a7\u5236\u534f\u8bae\uff08TCP\uff09\n\n<p align=\"center\">\n  <img src=\"images/JdAsdvG.jpg\">\n  <br/>\n  <strong><a href=\"http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/\">\u8d44\u6599\u6765\u6e90\uff1a\u5982\u4f55\u5236\u4f5c\u591a\u4eba\u6e38\u620f</a></strong>\n</p>\n\nTCP \u662f\u901a\u8fc7 [IP \u7f51\u7edc](https://en.wikipedia.org/wiki/Internet_Protocol)\u7684\u9762\u5411\u8fde\u63a5\u7684\u534f\u8bae\u3002 \u4f7f\u7528[\u63e1\u624b](https://en.wikipedia.org/wiki/Handshaking)\u5efa\u7acb\u548c\u65ad\u5f00\u8fde\u63a5\u3002 \u53d1\u9001\u7684\u6240\u6709\u6570\u636e\u5305\u4fdd\u8bc1\u4ee5\u539f\u59cb\u987a\u5e8f\u5230\u8fbe\u76ee\u7684\u5730\uff0c\u7528\u4ee5\u4e0b\u63aa\u65bd\u4fdd\u8bc1\u6570\u636e\u5305\u4e0d\u88ab\u635f\u574f\uff1a\n\n- \u6bcf\u4e2a\u6570\u636e\u5305\u7684\u5e8f\u5217\u53f7\u548c[\u6821\u9a8c\u7801](https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation)\u3002\n- [\u786e\u8ba4\u5305](https://en.wikipedia.org/wiki/Acknowledgement_(data_networks))\u548c\u81ea\u52a8\u91cd\u4f20\n\n\u5982\u679c\u53d1\u9001\u8005\u6ca1\u6709\u6536\u5230\u6b63\u786e\u7684\u54cd\u5e94\uff0c\u5b83\u5c06\u91cd\u65b0\u53d1\u9001\u6570\u636e\u5305\u3002\u5982\u679c\u591a\u6b21\u8d85\u65f6\uff0c\u8fde\u63a5\u5c31\u4f1a\u65ad\u5f00\u3002TCP \u5b9e\u884c[\u6d41\u91cf\u63a7\u5236](https://en.wikipedia.org/wiki/Flow_control_(data))\u548c[\u62e5\u585e\u63a7\u5236](https://en.wikipedia.org/wiki/Network_congestion#Congestion_control)\u3002\u8fd9\u4e9b\u786e\u4fdd\u63aa\u65bd\u4f1a\u5bfc\u81f4\u5ef6\u8fdf\uff0c\u800c\u4e14\u901a\u5e38\u5bfc\u81f4\u4f20\u8f93\u6548\u7387\u6bd4 UDP \u4f4e\u3002\n\n\u4e3a\u4e86\u786e\u4fdd\u9ad8\u541e\u5410\u91cf\uff0cWeb \u670d\u52a1\u5668\u53ef\u4ee5\u4fdd\u6301\u5927\u91cf\u7684 TCP \u8fde\u63a5\uff0c\u4ece\u800c\u5bfc\u81f4\u9ad8\u5185\u5b58\u4f7f\u7528\u3002\u5728 Web \u670d\u52a1\u5668\u7ebf\u7a0b\u95f4\u62e5\u6709\u5927\u91cf\u5f00\u653e\u8fde\u63a5\u53ef\u80fd\u5f00\u9500\u5de8\u5927\uff0c\u6d88\u8017\u8d44\u6e90\u8fc7\u591a\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u4e2a [memcached](#memcached) \u670d\u52a1\u5668\u3002[\u8fde\u63a5\u6c60](https://en.wikipedia.org/wiki/Connection_pool) \u53ef\u4ee5\u5e2e\u52a9\u9664\u4e86\u5728\u9002\u7528\u7684\u60c5\u51b5\u4e0b\u5207\u6362\u5230 UDP\u3002\n\nTCP  \u5bf9\u4e8e\u9700\u8981\u9ad8\u53ef\u9760\u6027\u4f46\u65f6\u95f4\u7d27\u8feb\u7684\u5e94\u7528\u7a0b\u5e8f\u5f88\u6709\u7528\u3002\u6bd4\u5982\u5305\u62ec Web \u670d\u52a1\u5668\uff0c\u6570\u636e\u5e93\u4fe1\u606f\uff0cSMTP\uff0cFTP \u548c SSH\u3002\n\n\u4ee5\u4e0b\u60c5\u51b5\u4f7f\u7528 TCP \u4ee3\u66ff UDP\uff1a\n\n- \u4f60\u9700\u8981\u6570\u636e\u5b8c\u597d\u65e0\u635f\u3002\n- \u4f60\u60f3\u5bf9\u7f51\u7edc\u541e\u5410\u91cf\u81ea\u52a8\u8fdb\u884c\u6700\u4f73\u8bc4\u4f30\u3002\n\n### \u7528\u6237\u6570\u636e\u62a5\u534f\u8bae\uff08UDP\uff09\n\n<p align=\"center\">\n  <img src=\"images/yzDrJtA.jpg\">\n  <br/>\n  <strong><a href=\"http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1\">\u8d44\u6599\u6765\u6e90\uff1a\u5982\u4f55\u5236\u4f5c\u591a\u4eba\u6e38\u620f</a></strong>\n</p>\n\nUDP \u662f\u65e0\u8fde\u63a5\u7684\u3002\u6570\u636e\u62a5\uff08\u7c7b\u4f3c\u4e8e\u6570\u636e\u5305\uff09\u53ea\u5728\u6570\u636e\u62a5\u7ea7\u522b\u6709\u4fdd\u8bc1\u3002\u6570\u636e\u62a5\u53ef\u80fd\u4f1a\u65e0\u5e8f\u7684\u5230\u8fbe\u76ee\u7684\u5730\uff0c\u4e5f\u6709\u53ef\u80fd\u4f1a\u9057\u5931\u3002UDP \u4e0d\u652f\u6301\u62e5\u585e\u63a7\u5236\u3002\u867d\u7136\u4e0d\u5982 TCP \u90a3\u6837\u6709\u4fdd\u8bc1\uff0c\u4f46 UDP \u901a\u5e38\u6548\u7387\u66f4\u9ad8\u3002\n\nUDP \u53ef\u4ee5\u901a\u8fc7\u5e7f\u64ad\u5c06\u6570\u636e\u62a5\u53d1\u9001\u81f3\u5b50\u7f51\u5185\u7684\u6240\u6709\u8bbe\u5907\u3002\u8fd9\u5bf9 [DHCP](https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol) \u5f88\u6709\u7528\uff0c\u56e0\u4e3a\u5b50\u7f51\u5185\u7684\u8bbe\u5907\u8fd8\u6ca1\u6709\u5206\u914d IP \u5730\u5740\uff0c\u800c IP \u5bf9\u4e8e TCP \u662f\u5fc5\u987b\u7684\u3002\n\nUDP \u53ef\u9760\u6027\u66f4\u4f4e\u4f46\u9002\u5408\u7528\u5728\u7f51\u7edc\u7535\u8bdd\u3001\u89c6\u9891\u804a\u5929\uff0c\u6d41\u5a92\u4f53\u548c\u5b9e\u65f6\u591a\u4eba\u6e38\u620f\u4e0a\u3002\n\n\u4ee5\u4e0b\u60c5\u51b5\u4f7f\u7528 UDP \u4ee3\u66ff TCP\uff1a\n\n* \u4f60\u9700\u8981\u4f4e\u5ef6\u8fdf\n* \u76f8\u5bf9\u4e8e\u6570\u636e\u4e22\u5931\u66f4\u7cdf\u7684\u662f\u6570\u636e\u5ef6\u8fdf\n* \u4f60\u60f3\u5b9e\u73b0\u81ea\u5df1\u7684\u9519\u8bef\u6821\u6b63\u65b9\u6cd5\n\n#### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\uff1aTCP \u4e0e UDP\n\n* [\u6e38\u620f\u7f16\u7a0b\u7684\u7f51\u7edc](http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/)\n* [TCP \u4e0e UDP \u7684\u5173\u952e\u533a\u522b](http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/)\n* [TCP \u4e0e UDP \u7684\u4e0d\u540c](http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp)\n* [\u4f20\u8f93\u63a7\u5236\u534f\u8bae](https://en.wikipedia.org/wiki/Transmission_Control_Protocol)\n* [\u7528\u6237\u6570\u636e\u62a5\u534f\u8bae](https://en.wikipedia.org/wiki/User_Datagram_Protocol)\n* [Memcache \u5728 Facebook \u7684\u6269\u5c55](http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf)\n\n### \u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\u534f\u8bae\uff08RPC\uff09\n\n<p align=\"center\">\n  <img src=\"images/iF4Mkb5.png\">\n  <br/>\n  <strong><a href=\"http://www.puncsky.com/blog/2016/02/14/crack-the-system-design-interview\">Source: Crack the system design interview</a></strong>\n</p>\n\n\u5728 RPC \u4e2d\uff0c\u5ba2\u6237\u7aef\u4f1a\u53bb\u8c03\u7528\u53e6\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\uff08\u901a\u5e38\u662f\u4e00\u4e2a\u8fdc\u7a0b\u670d\u52a1\u5668\uff09\u91cc\u7684\u65b9\u6cd5\u3002\u8c03\u7528\u4ee3\u7801\u770b\u8d77\u6765\u5c31\u50cf\u662f\u8c03\u7528\u7684\u662f\u4e00\u4e2a\u672c\u5730\u65b9\u6cd5\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4ea4\u4e92\u7684\u5177\u4f53\u8fc7\u7a0b\u88ab\u62bd\u8c61\u3002\u8fdc\u7a0b\u8c03\u7528\u76f8\u5bf9\u4e8e\u672c\u5730\u8c03\u7528\u4e00\u822c\u8f83\u6162\u800c\u4e14\u53ef\u9760\u6027\u66f4\u5dee\uff0c\u56e0\u6b64\u533a\u5206\u4e24\u8005\u662f\u6709\u5e2e\u52a9\u7684\u3002\u70ed\u95e8\u7684 RPC \u6846\u67b6\u5305\u62ec [Protobuf](https://developers.google.com/protocol-buffers/)\u3001[Thrift](https://thrift.apache.org/) \u548c [Avro](https://avro.apache.org/docs/current/)\u3002\n\nRPC \u662f\u4e00\u4e2a\u201c\u8bf7\u6c42-\u54cd\u5e94\u201d\u534f\u8bae\uff1a\n\n* **\u5ba2\u6237\u7aef\u7a0b\u5e8f** \u2500\u2500 \u8c03\u7528\u5ba2\u6237\u7aef\u5b58\u6839\u7a0b\u5e8f\u3002\u5c31\u50cf\u8c03\u7528\u672c\u5730\u65b9\u6cd5\u4e00\u6837\uff0c\u53c2\u6570\u4f1a\u88ab\u538b\u5165\u6808\u4e2d\u3002\n* **\u5ba2\u6237\u7aef stub \u7a0b\u5e8f** \u2500\u2500 \u5c06\u8bf7\u6c42\u8fc7\u7a0b\u7684 id \u548c\u53c2\u6570\u6253\u5305\u8fdb\u8bf7\u6c42\u4fe1\u606f\u4e2d\u3002\n* **\u5ba2\u6237\u7aef\u901a\u4fe1\u6a21\u5757** \u2500\u2500 \u5c06\u4fe1\u606f\u4ece\u5ba2\u6237\u7aef\u53d1\u9001\u81f3\u670d\u52a1\u7aef\u3002\n* **\u670d\u52a1\u7aef\u901a\u4fe1\u6a21\u5757** \u2500\u2500 \u5c06\u63a5\u53d7\u7684\u5305\u4f20\u7ed9\u670d\u52a1\u7aef\u5b58\u6839\u7a0b\u5e8f\u3002\n* **\u670d\u52a1\u7aef stub \u7a0b\u5e8f** \u2500\u2500 \u5c06\u7ed3\u679c\u89e3\u5305\uff0c\u4f9d\u636e\u8fc7\u7a0b id \u8c03\u7528\u670d\u52a1\u7aef\u65b9\u6cd5\u5e76\u5c06\u53c2\u6570\u4f20\u9012\u8fc7\u53bb\u3002\n\nRPC \u8c03\u7528\u793a\u4f8b\uff1a\n\n```\nGET /someoperation?data=anId\n\nPOST /anotheroperation\n{\n  \"data\":\"anId\";\n  \"anotherdata\": \"another value\"\n}\n```\n\nRPC \u4e13\u6ce8\u4e8e\u66b4\u9732\u65b9\u6cd5\u3002RPC \u901a\u5e38\u7528\u4e8e\u5904\u7406\u5185\u90e8\u901a\u8baf\u7684\u6027\u80fd\u95ee\u9898\uff0c\u8fd9\u6837\u4f60\u53ef\u4ee5\u624b\u52a8\u5904\u7406\u672c\u5730\u8c03\u7528\u4ee5\u66f4\u597d\u7684\u9002\u5e94\u4f60\u7684\u60c5\u51b5\u3002\n\n\n\u5f53\u4ee5\u4e0b\u60c5\u51b5\u65f6\u9009\u62e9\u672c\u5730\u5e93\uff08\u4e5f\u5c31\u662f SDK\uff09\uff1a\n\n* \u4f60\u77e5\u9053\u4f60\u7684\u76ee\u6807\u5e73\u53f0\u3002\n* \u4f60\u60f3\u63a7\u5236\u5982\u4f55\u8bbf\u95ee\u4f60\u7684\u201c\u903b\u8f91\u201d\u3002\n* \u4f60\u60f3\u5bf9\u53d1\u751f\u5728\u4f60\u7684\u5e93\u4e2d\u7684\u9519\u8bef\u8fdb\u884c\u63a7\u5236\u3002\n* \u6027\u80fd\u548c\u7ec8\u7aef\u7528\u6237\u4f53\u9a8c\u662f\u4f60\u6700\u5173\u5fc3\u7684\u4e8b\u3002\n\n\u9075\u5faa **REST** \u7684 HTTP API \u5f80\u5f80\u66f4\u9002\u7528\u4e8e\u516c\u5171 API\u3002\n\n#### \u7f3a\u70b9\uff1aRPC\n\n* RPC \u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5b9e\u73b0\u6346\u7ed1\u5730\u5f88\u7d27\u5bc6\u3002\n* \u4e00\u4e2a\u65b0\u7684 API \u5fc5\u987b\u5728\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u6216\u8005\u7528\u4f8b\u4e2d\u5b9a\u4e49\u3002\n* RPC \u5f88\u96be\u8c03\u8bd5\u3002\n* \u4f60\u53ef\u80fd\u6ca1\u529e\u6cd5\u5f88\u65b9\u4fbf\u7684\u53bb\u4fee\u6539\u73b0\u6709\u7684\u6280\u672f\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u5728 [Squid](http://www.squid-cache.org/) \u8fd9\u6837\u7684\u7f13\u5b58\u670d\u52a1\u5668\u4e0a\u786e\u4fdd [RPC \u88ab\u6b63\u786e\u7f13\u5b58](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/)\u7684\u8bdd\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u52aa\u529b\u4e86\u3002\n\n### \u8868\u8ff0\u6027\u72b6\u6001\u8f6c\u79fb\uff08REST\uff09\n\nREST \u662f\u4e00\u79cd\u5f3a\u5236\u7684\u5ba2\u6237\u7aef/\u670d\u52a1\u7aef\u67b6\u6784\u8bbe\u8ba1\u6a21\u578b\uff0c\u5ba2\u6237\u7aef\u57fa\u4e8e\u670d\u52a1\u7aef\u7ba1\u7406\u7684\u4e00\u7cfb\u5217\u8d44\u6e90\u64cd\u4f5c\u3002\u670d\u52a1\u7aef\u63d0\u4f9b\u4fee\u6539\u6216\u83b7\u53d6\u8d44\u6e90\u7684\u63a5\u53e3\u3002\u6240\u6709\u7684\u901a\u4fe1\u5fc5\u987b\u662f\u65e0\u72b6\u6001\u548c\u53ef\u7f13\u5b58\u7684\u3002\n\nRESTful \u63a5\u53e3\u6709\u56db\u6761\u89c4\u5219\uff1a\n\n* **\u6807\u5fd7\u8d44\u6e90\uff08HTTP \u91cc\u7684 URI\uff09** \u2500\u2500 \u65e0\u8bba\u4ec0\u4e48\u64cd\u4f5c\u90fd\u4f7f\u7528\u540c\u4e00\u4e2a URI\u3002\n* **\u8868\u793a\u7684\u6539\u53d8\uff08HTTP \u7684\u52a8\u4f5c\uff09** \u2500\u2500 \u4f7f\u7528\u52a8\u4f5c, headers \u548c body\u3002\n* **\u53ef\u81ea\u6211\u63cf\u8ff0\u7684\u9519\u8bef\u4fe1\u606f\uff08HTTP \u4e2d\u7684 status code\uff09** \u2500\u2500 \u4f7f\u7528\u72b6\u6001\u7801\uff0c\u4e0d\u8981\u91cd\u65b0\u9020\u8f6e\u5b50\u3002\n* **[HATEOAS](http://restcookbook.com/Basics/hateoas/)\uff08HTTP \u4e2d\u7684HTML \u63a5\u53e3\uff09** \u2500\u2500 \u4f60\u7684 web \u670d\u52a1\u5668\u5e94\u8be5\u80fd\u591f\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95ee\u3002\n\nREST \u8bf7\u6c42\u7684\u4f8b\u5b50\uff1a\n\n```\nGET /someresources/anId\n\nPUT /someresources/anId\n{\"anotherdata\": \"another value\"}\n```\n\nREST \u5173\u6ce8\u4e8e\u66b4\u9732\u6570\u636e\u3002\u5b83\u51cf\u5c11\u4e86\u5ba2\u6237\u7aef\uff0f\u670d\u52a1\u7aef\u7684\u8026\u5408\u7a0b\u5ea6\uff0c\u7ecf\u5e38\u7528\u4e8e\u516c\u5171 HTTP API \u63a5\u53e3\u8bbe\u8ba1\u3002REST \u4f7f\u7528\u66f4\u901a\u5e38\u4e0e\u89c4\u8303\u5316\u7684\u65b9\u6cd5\u6765\u901a\u8fc7 URI \u66b4\u9732\u8d44\u6e90\uff0c[\u901a\u8fc7 header \u6765\u8868\u8ff0](https://github.com/for-GET/know-your-http-well/blob/master/headers.md)\u5e76\u901a\u8fc7 GET\u3001POST\u3001PUT\u3001DELETE \u548c PATCH \u8fd9\u4e9b\u52a8\u4f5c\u6765\u8fdb\u884c\u64cd\u4f5c\u3002\u56e0\u4e3a\u65e0\u72b6\u6001\u7684\u7279\u6027\uff0cREST \u6613\u4e8e\u6a2a\u5411\u6269\u5c55\u548c\u9694\u79bb\u3002\n\n#### \u7f3a\u70b9\uff1aREST\n\n* \u7531\u4e8e REST \u5c06\u91cd\u70b9\u653e\u5728\u66b4\u9732\u6570\u636e\uff0c\u6240\u4ee5\u5f53\u8d44\u6e90\u4e0d\u662f\u81ea\u7136\u7ec4\u7ec7\u7684\u6216\u8005\u7ed3\u6784\u590d\u6742\u7684\u65f6\u5019\u5b83\u53ef\u80fd\u65e0\u6cd5\u5f88\u597d\u7684\u9002\u5e94\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u8fd4\u56de\u8fc7\u53bb\u4e00\u5c0f\u65f6\u4e2d\u4e0e\u7279\u5b9a\u4e8b\u4ef6\u96c6\u5339\u914d\u7684\u66f4\u65b0\u8bb0\u5f55\u8fd9\u79cd\u64cd\u4f5c\u5c31\u5f88\u96be\u8868\u793a\u4e3a\u8def\u5f84\u3002\u4f7f\u7528 REST\uff0c\u53ef\u80fd\u4f1a\u4f7f\u7528 URI \u8def\u5f84\uff0c\u67e5\u8be2\u53c2\u6570\u548c\u53ef\u80fd\u7684\u8bf7\u6c42\u4f53\u6765\u5b9e\u73b0\u3002\n* REST \u4e00\u822c\u4f9d\u8d56\u51e0\u4e2a\u52a8\u4f5c\uff08GET\u3001POST\u3001PUT\u3001DELETE \u548c PATCH\uff09\uff0c\u4f46\u6709\u65f6\u5019\u4ec5\u4ec5\u8fd9\u4e9b\u6ca1\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u8981\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5c06\u8fc7\u671f\u7684\u6587\u6863\u79fb\u52a8\u5230\u5f52\u6863\u6587\u4ef6\u5939\u91cc\u53bb\uff0c\u8fd9\u6837\u7684\u64cd\u4f5c\u53ef\u80fd\u6ca1\u6cd5\u7b80\u5355\u7684\u7528\u4e0a\u9762\u8fd9\u51e0\u4e2a verbs \u8868\u8fbe\u3002\n* \u4e3a\u4e86\u6e32\u67d3\u5355\u4e2a\u9875\u9762\uff0c\u83b7\u53d6\u88ab\u5d4c\u5957\u5728\u5c42\u7ea7\u7ed3\u6784\u4e2d\u7684\u590d\u6742\u8d44\u6e90\u9700\u8981\u5ba2\u6237\u7aef\uff0c\u670d\u52a1\u5668\u4e4b\u95f4\u591a\u6b21\u5f80\u8fd4\u901a\u4fe1\u3002\u4f8b\u5982\uff0c\u83b7\u53d6\u535a\u5ba2\u5185\u5bb9\u53ca\u5176\u5173\u8054\u8bc4\u8bba\u3002\u5bf9\u4e8e\u4f7f\u7528\u4e0d\u786e\u5b9a\u7f51\u7edc\u73af\u5883\u7684\u79fb\u52a8\u5e94\u7528\u6765\u8bf4\uff0c\u8fd9\u4e9b\u591a\u6b21\u5f80\u8fd4\u901a\u4fe1\u662f\u975e\u5e38\u9ebb\u70e6\u7684\u3002\n* \u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u66f4\u591a\u7684\u5b57\u6bb5\u53ef\u80fd\u4f1a\u88ab\u6dfb\u52a0\u5230 API \u54cd\u5e94\u4e2d\uff0c\u8f83\u65e7\u7684\u5ba2\u6237\u7aef\u5c06\u4f1a\u63a5\u6536\u5230\u6240\u6709\u65b0\u7684\u6570\u636e\u5b57\u6bb5\uff0c\u5373\u4f7f\u662f\u90a3\u4e9b\u5b83\u4eec\u4e0d\u9700\u8981\u7684\u5b57\u6bb5\uff0c\u7ed3\u679c\u5b83\u4f1a\u589e\u52a0\u8d1f\u8f7d\u5927\u5c0f\u5e76\u5f15\u8d77\u66f4\u5927\u7684\u5ef6\u8fdf\u3002\n\n### RPC \u4e0e REST \u6bd4\u8f83\n\n| \u64cd\u4f5c          | RPC                                      | REST                                     |\n| ----------- | ---------------------------------------- | ---------------------------------------- |\n| \u6ce8\u518c          | **POST** /signup                         | **POST** /persons                        |\n| \u6ce8\u9500          | **POST** /resign<br/>{<br/>\"personid\": \"1234\"<br/>} | **DELETE** /persons/1234                 |\n| \u8bfb\u53d6\u7528\u6237\u4fe1\u606f      | **GET** /readPerson?personid=1234        | **GET** /persons/1234                    |\n| \u8bfb\u53d6\u7528\u6237\u7269\u54c1\u5217\u8868    | **GET** /readUsersItemsList?personid=1234 | **GET** /persons/1234/items              |\n| \u5411\u7528\u6237\u7269\u54c1\u5217\u8868\u6dfb\u52a0\u4e00\u9879 | **POST** /addItemToUsersItemsList<br/>{<br/>\"personid\": \"1234\";<br/>\"itemid\": \"456\"<br/>} | **POST** /persons/1234/items<br/>{<br/>\"itemid\": \"456\"<br/>} |\n| \u66f4\u65b0\u4e00\u4e2a\u7269\u54c1      | **POST** /modifyItem<br/>{<br/>\"itemid\": \"456\";<br/>\"key\": \"value\"<br/>} | **PUT** /items/456<br/>{<br/>\"key\": \"value\"<br/>} |\n| \u5220\u9664\u4e00\u4e2a\u7269\u54c1      | **POST** /removeItem<br/>{<br/>\"itemid\": \"456\"<br/>} | **DELETE** /items/456                    |\n\n<p align=\"center\">\n  <strong><a href=\"https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc\">\u8d44\u6599\u6765\u6e90\uff1a\u4f60\u771f\u7684\u77e5\u9053\u4f60\u4e3a\u4ec0\u4e48\u66f4\u559c\u6b22 REST \u800c\u4e0d\u662f RPC \u5417</a></strong>\n</p>\n\n#### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\uff1aREST \u4e0e RPC\n\n* [\u4f60\u771f\u7684\u77e5\u9053\u4f60\u4e3a\u4ec0\u4e48\u66f4\u559c\u6b22 REST \u800c\u4e0d\u662f RPC \u5417](https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/)\n* [\u4ec0\u4e48\u65f6\u5019 RPC \u6bd4 REST \u66f4\u5408\u9002\uff1f](http://programmers.stackexchange.com/a/181186)\n* [REST vs JSON-RPC](http://stackoverflow.com/questions/15056878/rest-vs-json-rpc)\n* [\u63ed\u5f00 RPC \u548c REST \u7684\u795e\u79d8\u9762\u7eb1](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/)\n* [\u4f7f\u7528 REST \u7684\u7f3a\u70b9\u662f\u4ec0\u4e48](https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs)\n* [\u7834\u89e3\u7cfb\u7edf\u8bbe\u8ba1\u9762\u8bd5](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n* [Thrift](https://code.facebook.com/posts/1468950976659943/)\n* [\u4e3a\u4ec0\u4e48\u5728\u5185\u90e8\u4f7f\u7528 REST \u800c\u4e0d\u662f RPC](http://arstechnica.com/civis/viewtopic.php?t=1190508)\n\n## \u5b89\u5168\n\n\u8fd9\u4e00\u90e8\u5206\u9700\u8981\u66f4\u591a\u5185\u5bb9\u3002[\u4e00\u8d77\u6765\u5427](#\u8d21\u732e)\uff01\n\n\u5b89\u5168\u662f\u4e00\u4e2a\u5bbd\u6cdb\u7684\u8bdd\u9898\u3002\u9664\u975e\u4f60\u6709\u76f8\u5f53\u7684\u7ecf\u9a8c\u3001\u5b89\u5168\u65b9\u9762\u80cc\u666f\u6216\u8005\u6b63\u5728\u7533\u8bf7\u7684\u804c\u4f4d\u8981\u6c42\u5b89\u5168\u77e5\u8bc6\uff0c\u4f60\u4e0d\u9700\u8981\u4e86\u89e3\u5b89\u5168\u57fa\u7840\u77e5\u8bc6\u4ee5\u5916\u7684\u5185\u5bb9\uff1a\n\n* \u5728\u8fd0\u8f93\u548c\u7b49\u5f85\u8fc7\u7a0b\u4e2d\u52a0\u5bc6\n* \u5bf9\u6240\u6709\u7684\u7528\u6237\u8f93\u5165\u548c\u4ece\u7528\u6237\u90a3\u91cc\u53d1\u6765\u7684\u53c2\u6570\u8fdb\u884c\u5904\u7406\u4ee5\u9632\u6b62 [XSS](https://en.wikipedia.org/wiki/Cross-site_scripting) \u548c [SQL \u6ce8\u5165](https://en.wikipedia.org/wiki/SQL_injection)\u3002\n* \u4f7f\u7528\u53c2\u6570\u5316\u7684\u67e5\u8be2\u6765\u9632\u6b62 SQL \u6ce8\u5165\u3002\n* \u4f7f\u7528[\u6700\u5c0f\u6743\u9650\u539f\u5219](https://en.wikipedia.org/wiki/Principle_of_least_privilege)\u3002\n\n### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\n\n* [\u4e3a\u5f00\u53d1\u8005\u51c6\u5907\u7684\u5b89\u5168\u5f15\u5bfc](https://github.com/FallibleInc/security-guide-for-developers)\n* [OWASP top ten](https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet)\n\n## \u9644\u5f55\n\n\u4e00\u4e9b\u65f6\u5019\u4f60\u4f1a\u88ab\u8981\u6c42\u505a\u51fa\u4fdd\u5b88\u4f30\u8ba1\u3002\u6bd4\u5982\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4f30\u8ba1\u4ece\u78c1\u76d8\u4e2d\u751f\u6210 100 \u5f20\u56fe\u7247\u7684\u7f29\u7565\u56fe\u9700\u8981\u7684\u65f6\u95f4\u6216\u8005\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u9700\u8981\u591a\u5c11\u7684\u5185\u5b58\u3002**2 \u7684\u6b21\u65b9\u8868**\u548c**\u6bcf\u4e2a\u5f00\u53d1\u8005\u90fd\u9700\u8981\u77e5\u9053\u7684\u4e00\u4e9b\u65f6\u95f4\u6570\u636e**\uff08\u8bd1\u6ce8\uff1aOSChina \u4e0a\u6709\u8fd9\u7bc7\u6587\u7ae0\u7684[\u8bd1\u6587](https://www.oschina.net/news/30009/every-programmer-should-know)\uff09\u90fd\u662f\u4e00\u4e9b\u5f88\u65b9\u4fbf\u7684\u53c2\u8003\u8d44\u6599\u3002\n\n### 2 \u7684\u6b21\u65b9\u8868\n\n```\nPower           Exact Value         Approx Value        Bytes\n---------------------------------------------------------------\n7                             128\n8                             256\n10                           1024   1 thousand           1 KB\n16                         65,536                       64 KB\n20                      1,048,576   1 million            1 MB\n30                  1,073,741,824   1 billion            1 GB\n32                  4,294,967,296                        4 GB\n40              1,099,511,627,776   1 trillion           1 TB\n```\n\n#### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\n\n* [2 \u7684\u6b21\u65b9](https://en.wikipedia.org/wiki/Power_of_two)\n\n### \u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u77e5\u9053\u7684\u5ef6\u8fdf\u6570\n\n```\nLatency Comparison Numbers\n--------------------------\nL1 cache reference                           0.5 ns\nBranch mispredict                            5   ns\nL2 cache reference                           7   ns                      14x L1 cache\nMutex lock/unlock                           25   ns\nMain memory reference                      100   ns                      20x L2 cache, 200x L1 cache\nCompress 1K bytes with Zippy            10,000   ns       10 us\nSend 1 KB bytes over 1 Gbps network     10,000   ns       10 us\nRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD\nRead 1 MB sequentially from memory     250,000   ns      250 us\nRound trip within same datacenter      500,000   ns      500 us\nRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory\nDisk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip\nRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD\nRead 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD\nSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms\n\nNotes\n-----\n1 ns = 10^-9 seconds\n1 us = 10^-6 seconds = 1,000 ns\n1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns\n```\n\n\u57fa\u4e8e\u4e0a\u8ff0\u6570\u5b57\u7684\u6307\u6807\uff1a\n* \u4ece\u78c1\u76d8\u4ee5 30 MB/s \u7684\u901f\u5ea6\u987a\u5e8f\u8bfb\u53d6\n* \u4ee5 100 MB/s \u4ece 1 Gbps \u7684\u4ee5\u592a\u7f51\u987a\u5e8f\u8bfb\u53d6\n* \u4ece SSD \u4ee5 1 GB/s \u7684\u901f\u5ea6\u8bfb\u53d6\n* \u4ee5 4 GB/s \u7684\u901f\u5ea6\u4ece\u4e3b\u5b58\u8bfb\u53d6\n* \u6bcf\u79d2\u80fd\u7ed5\u5730\u7403 6-7 \u5708\n* \u6570\u636e\u4e2d\u5fc3\u5185\u6bcf\u79d2\u6709 2,000 \u6b21\u5f80\u8fd4\n\n#### \u5ef6\u8fdf\u6570\u53ef\u89c6\u5316\n\n![](https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67)\n\n#### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\n\n* [\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u77e5\u9053\u7684\u5ef6\u8fdf\u6570 \u2014 1](https://gist.github.com/jboner/2841832)\n* [\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u77e5\u9053\u7684\u5ef6\u8fdf\u6570 \u2014 2](https://gist.github.com/hellerbarde/2843375)\n* [\u5173\u4e8e\u5efa\u8bbe\u5927\u578b\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u7684\u8bbe\u8ba1\u65b9\u6848\u3001\u8bfe\u7a0b\u548c\u5efa\u8bae](http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf)\n* [\u5173\u4e8e\u5efa\u8bbe\u5927\u578b\u53ef\u62d3\u5c55\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u8f6f\u4ef6\u5de5\u7a0b\u54a8\u8be2](https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf)\n\n### \u5176\u5b83\u7684\u7cfb\u7edf\u8bbe\u8ba1\u9762\u8bd5\u9898\n\n> \u5e38\u89c1\u7684\u7cfb\u7edf\u8bbe\u8ba1\u9762\u8bd5\u95ee\u9898\uff0c\u7ed9\u51fa\u4e86\u5982\u4f55\u89e3\u51b3\u7684\u65b9\u6848\u94fe\u63a5\n\n| \u95ee\u9898                      | \u5f15\u7528                                       |\n| ----------------------- | ---------------------------------------- |\n| \u8bbe\u8ba1\u7c7b\u4f3c\u4e8e Dropbox \u7684\u6587\u4ef6\u540c\u6b65\u670d\u52a1   | [youtube.com](https://www.youtube.com/watch?v=PE4gwstWhmc) |\n| \u8bbe\u8ba1\u7c7b\u4f3c\u4e8e Google \u7684\u641c\u7d22\u5f15\u64ce      | [queue.acm.org](http://queue.acm.org/detail.cfm?id=988407)<br/>[stackexchange.com](http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search)<br/>[ardendertat.com](http://www.ardendertat.com/2012/01/11/implementing-search-engines/)<br/>[stanford.edu](http://infolab.stanford.edu/~backrub/google.html) |\n| \u8bbe\u8ba1\u7c7b\u4f3c\u4e8e Google \u7684\u53ef\u6269\u5c55\u7f51\u7edc\u722c\u866b   | [quora.com](https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch) |\n| \u8bbe\u8ba1 Google \u6587\u6863            | [code.google.com](https://code.google.com/p/google-mobwrite/)<br/>[neil.fraser.name](https://neil.fraser.name/writing/sync/) |\n| \u8bbe\u8ba1\u7c7b\u4f3c Redis \u7684\u952e\u503c\u5b58\u50a8        | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |\n| \u8bbe\u8ba1\u7c7b\u4f3c Memcached \u7684\u7f13\u5b58\u7cfb\u7edf    | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |\n| \u8bbe\u8ba1\u7c7b\u4f3c\u4e9a\u9a6c\u900a\u7684\u63a8\u8350\u7cfb\u7edf            | [hulu.com](http://tech.hulu.com/blog/2011/09/19/recommendation-system.html)<br/>[ijcai13.org](http://ijcai13.org/files/tutorial_slides/td3.pdf) |\n| \u8bbe\u8ba1\u7c7b\u4f3c Bitly \u7684\u77ed\u94fe\u63a5\u7cfb\u7edf       | [n00tc0d3r.blogspot.com](http://n00tc0d3r.blogspot.com/) |\n| \u8bbe\u8ba1\u7c7b\u4f3c WhatsApp \u7684\u804a\u5929\u5e94\u7528     | [highscalability.com](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html) |\n| \u8bbe\u8ba1\u7c7b\u4f3c Instagram \u7684\u56fe\u7247\u5206\u4eab\u7cfb\u7edf  | [highscalability.com](http://highscalability.com/flickr-architecture)<br/>[highscalability.com](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html) |\n| \u8bbe\u8ba1 Facebook \u7684\u65b0\u95fb\u63a8\u8350\u65b9\u6cd5     | [quora.com](http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed)<br/>[quora.com](http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed)<br/>[slideshare.net](http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture) |\n| \u8bbe\u8ba1 Facebook \u7684\u65f6\u95f4\u7ebf\u7cfb\u7edf      | [facebook.com](https://www.facebook.com/note.php?note_id=10150468255628920)<br/>[highscalability.com](http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html) |\n| \u8bbe\u8ba1 Facebook \u7684\u804a\u5929\u7cfb\u7edf       | [erlang-factory.com](http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf)<br/>[facebook.com](https://www.facebook.com/note.php?note_id=14218138919&id=9445547199&index=0) |\n| \u8bbe\u8ba1\u7c7b\u4f3c Facebook \u7684\u56fe\u8868\u641c\u7d22\u7cfb\u7edf   | [facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920) |\n| \u8bbe\u8ba1\u7c7b\u4f3c CloudFlare \u7684\u5185\u5bb9\u4f20\u9012\u7f51\u7edc | [cmu.edu](http://repository.cmu.edu/cgi/viewcontent.cgi?article=2112&context=compsci) |\n| \u8bbe\u8ba1\u7c7b\u4f3c Twitter \u7684\u70ed\u95e8\u8bdd\u9898\u7cfb\u7edf    | [michael-noll.com](http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/)<br/>[snikolov .wordpress.com](http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/) |\n| \u8bbe\u8ba1\u4e00\u4e2a\u968f\u673a ID \u751f\u6210\u7cfb\u7edf          | [blog.twitter.com](https://blog.twitter.com/2010/announcing-snowflake)<br/>[github.com](https://github.com/twitter/snowflake/) |\n| \u8fd4\u56de\u4e00\u5b9a\u65f6\u95f4\u6bb5\u5185\u6b21\u6570\u524d k \u9ad8\u7684\u8bf7\u6c42      | [ucsb.edu](https://icmi.cs.ucsb.edu/research/tech_reports/reports/2005-23.pdf)<br/>[wpi.edu](http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf) |\n| \u8bbe\u8ba1\u4e00\u4e2a\u6570\u636e\u6e90\u4e8e\u591a\u4e2a\u6570\u636e\u4e2d\u5fc3\u7684\u670d\u52a1\u7cfb\u7edf     | [highscalability.com](http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html) |\n| \u8bbe\u8ba1\u4e00\u4e2a\u591a\u4eba\u7f51\u7edc\u5361\u724c\u6e38\u620f            | [indieflashblog.com](https://web.archive.org/web/20180929181117/http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html)<br/>[buildnewgames.com](http://buildnewgames.com/real-time-multiplayer/) |\n| \u8bbe\u8ba1\u4e00\u4e2a\u5783\u573e\u56de\u6536\u7cfb\u7edf              | [stuffwithstuff.com](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)<br/>[washington.edu](http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf) |\n| \u6dfb\u52a0\u66f4\u591a\u7684\u7cfb\u7edf\u8bbe\u8ba1\u95ee\u9898             | [\u8d21\u732e](#\u8d21\u732e)              |\n\n### \u771f\u5b9e\u67b6\u6784\n\n> \u5173\u4e8e\u73b0\u5b9e\u4e2d\u771f\u5b9e\u7684\u7cfb\u7edf\u662f\u600e\u4e48\u8bbe\u8ba1\u7684\u6587\u7ae0\u3002\n\n<p align=\"center\">\n  <img src=\"images/TcUo2fw.png\">\n  <br/>\n  <strong><a href=\"https://www.infoq.com/presentations/Twitter-Timeline-Scalability\">Source: Twitter timelines at scale</a></strong>\n</p>\n\n**\u4e0d\u8981\u4e13\u6ce8\u4e8e\u4ee5\u4e0b\u6587\u7ae0\u7684\u7ec6\u8282\uff0c\u4e13\u6ce8\u4e8e\u4ee5\u4e0b\u65b9\u9762\uff1a**\n\n* \u53d1\u73b0\u8fd9\u4e9b\u6587\u7ae0\u4e2d\u7684\u5171\u540c\u7684\u539f\u5219\u3001\u6280\u672f\u548c\u6a21\u5f0f\u3002\n* \u5b66\u4e60\u6bcf\u4e2a\u7ec4\u4ef6\u89e3\u51b3\u54ea\u4e9b\u95ee\u9898\uff0c\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4e0d\u9002\u7528\n* \u590d\u4e60\u5b66\u8fc7\u7684\u6587\u7ae0\n\n| \u7c7b\u578b              | \u7cfb\u7edf                                       | \u5f15\u7528                                       |\n| --------------- | ---------------------------------------- | ---------------------------------------- |\n| Data processing | **MapReduce** - Google\u7684\u5206\u5e03\u5f0f\u6570\u636e\u5904\u7406 | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf) |\n| Data processing | **Spark** - Databricks \u7684\u5206\u5e03\u5f0f\u6570\u636e\u5904\u7406 | [slideshare.net](http://www.slideshare.net/AGrishchenko/apache-spark-architecture) |\n| Data processing | **Storm** - Twitter \u7684\u5206\u5e03\u5f0f\u6570\u636e\u5904\u7406 | [slideshare.net](http://www.slideshare.net/previa/storm-16094009) |\n|                 |                                          |                                          |\n| Data store      | **Bigtable** - Google \u7684\u5217\u5f0f\u6570\u636e\u5e93 | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) |\n| Data store      | **HBase** - Bigtable \u7684\u5f00\u6e90\u5b9e\u73b0 | [slideshare.net](http://www.slideshare.net/alexbaranau/intro-to-hbase) |\n| Data store      | **Cassandra** - Facebook \u7684\u5217\u5f0f\u6570\u636e\u5e93 | [slideshare.net](http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666) |\n| Data store      | **DynamoDB** - Amazon \u7684\u6587\u6863\u6570\u636e\u5e93 | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) |\n| Data store      | **MongoDB** - \u6587\u6863\u6570\u636e\u5e93 | [slideshare.net](http://www.slideshare.net/mdirolf/introduction-to-mongodb) |\n| Data store      | **Spanner** - Google \u7684\u5168\u7403\u5206\u5e03\u6570\u636e\u5e93 | [research.google.com](http://research.google.com/archive/spanner-osdi2012.pdf) |\n| Data store      | **Memcached** - \u5206\u5e03\u5f0f\u5185\u5b58\u7f13\u5b58\u7cfb\u7edf | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |\n| Data store      | **Redis** - \u80fd\u591f\u6301\u4e45\u5316\u53ca\u5177\u6709\u503c\u7c7b\u578b\u7684\u5206\u5e03\u5f0f\u5185\u5b58\u7f13\u5b58\u7cfb\u7edf | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |\n|                 |                                          |                                          |\n| File system     | **Google File System (GFS)** - \u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf) |\n| File system     | **Hadoop File System (HDFS)** - GFS \u7684\u5f00\u6e90\u5b9e\u73b0 | [apache.org](https://hadoop.apache.org/docs/r1.2.1/hdfs_design.html) |\n|                 |                                          |                                          |\n| Misc            | **Chubby** - Google \u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u4f4e\u8026\u5408\u9501\u670d\u52a1 | [research.google.com](http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf) |\n| Misc            | **Dapper** - \u5206\u5e03\u5f0f\u7cfb\u7edf\u8ddf\u8e2a\u57fa\u7840\u8bbe\u65bd | [research.google.com](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf) |\n| Misc            | **Kafka** - LinkedIn \u7684\u53d1\u5e03\u8ba2\u9605\u6d88\u606f\u7cfb\u7edf | [slideshare.net](http://www.slideshare.net/mumrah/kafka-talk-tri-hug) |\n| Misc            | **Zookeeper** - \u96c6\u4e2d\u7684\u57fa\u7840\u67b6\u6784\u548c\u534f\u8c03\u670d\u52a1 | [slideshare.net](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) |\n|                 | \u6dfb\u52a0\u66f4\u591a                      | [\u8d21\u732e](#\u8d21\u732e)              |\n\n### \u516c\u53f8\u7684\u7cfb\u7edf\u67b6\u6784\n\n| Company        | Reference(s)                             |\n| -------------- | ---------------------------------------- |\n| Amazon         | [Amazon \u7684\u67b6\u6784](http://highscalability.com/amazon-architecture) |\n| Cinchcast      | [\u6bcf\u5929\u4ea7\u751f 1500 \u5c0f\u65f6\u7684\u97f3\u9891](http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html) |\n| DataSift       | [\u6bcf\u79d2\u5b9e\u65f6\u6316\u6398 120000 \u6761 tweet](http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html) |\n| DropBox        | [\u6211\u4eec\u5982\u4f55\u7f29\u653e Dropbox](https://www.youtube.com/watch?v=PE4gwstWhmc) |\n| ESPN           | [\u6bcf\u79d2\u64cd\u4f5c 100000 \u6b21](http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html) |\n| Google         | [Google \u7684\u67b6\u6784](http://highscalability.com/google-architecture) |\n| Instagram      | [1400 \u4e07\u7528\u6237\uff0c\u8fbe\u5230\u5146\u7ea7\u522b\u7684\u7167\u7247\u5b58\u50a8](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)<br/>[\u662f\u4ec0\u4e48\u5728\u9a71\u52a8 Instagram](http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances) |\n| Justin.tv      | [Justin.Tv \u7684\u76f4\u64ad\u5e7f\u64ad\u67b6\u6784](http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html) |\n| Facebook       | [Facebook \u7684\u53ef\u6269\u5c55 memcached](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf)<br/>[TAO: Facebook \u793e\u4ea4\u56fe\u7684\u5206\u5e03\u5f0f\u6570\u636e\u5b58\u50a8](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf)<br/>[Facebook \u7684\u56fe\u7247\u5b58\u50a8](https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf) |\n| Flickr         | [Flickr \u7684\u67b6\u6784](http://highscalability.com/flickr-architecture) |\n| Mailbox        | [\u5728 6 \u5468\u5185\u4ece 0 \u5230 100 \u4e07\u7528\u6237](http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html) |\n| Pinterest      | [\u4ece\u96f6\u5230\u6bcf\u6708\u6570\u5341\u4ebf\u7684\u6d4f\u89c8\u91cf](http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html)<br/>[1800 \u4e07\u8bbf\u95ee\u7528\u6237\uff0c10 \u500d\u589e\u957f\uff0c12 \u540d\u5458\u5de5](http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html) |\n| Playfish       | [\u6708\u7528\u6237\u91cf 5000 \u4e07\u5e76\u5728\u4e0d\u65ad\u589e\u957f](http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html) |\n| PlentyOfFish   | [PlentyOfFish \u7684\u67b6\u6784](http://highscalability.com/plentyoffish-architecture) |\n| Salesforce     | [\u4ed6\u4eec\u6bcf\u5929\u5982\u4f55\u5904\u7406 13 \u4ebf\u7b14\u4ea4\u6613](http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html) |\n| Stack Overflow | [Stack Overflow \u7684\u67b6\u6784](http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html) |\n| TripAdvisor    | [40M \u8bbf\u95ee\u8005\uff0c200M \u9875\u9762\u6d4f\u89c8\u91cf\uff0c30TB \u6570\u636e](http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html) |\n| Tumblr         | [\u6bcf\u6708 150 \u4ebf\u7684\u6d4f\u89c8\u91cf](http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html) |\n| Twitter        | [Making Twitter 10000 percent faster](http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster)<br/>[\u6bcf\u5929\u4f7f\u7528 MySQL \u5b58\u50a82.5\u4ebf\u6761 tweet](http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html)<br/>[150M \u6d3b\u8dc3\u7528\u6237\uff0c300K QPS\uff0c22 MB/S \u7684\u9632\u706b\u5899](http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html)<br/>[\u53ef\u6269\u5c55\u65f6\u95f4\u8868](https://www.infoq.com/presentations/Twitter-Timeline-Scalability)<br/>[Twitter \u7684\u5927\u5c0f\u6570\u636e](https://www.youtube.com/watch?v=5cKTP36HVgI)<br/>[Twitter \u7684\u884c\u4e3a\uff1a\u89c4\u6a21\u8d85\u8fc7 1 \u4ebf\u7528\u6237](https://www.youtube.com/watch?v=z8LU0Cj6BOU) |\n| Uber           | [Uber \u5982\u4f55\u6269\u5c55\u81ea\u5df1\u7684\u5b9e\u65f6\u5316\u5e02\u573a](http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html) |\n| WhatsApp       | [Facebook \u7528 190 \u4ebf\u7f8e\u5143\u8d2d\u4e70 WhatsApp \u7684\u67b6\u6784](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html) |\n| YouTube        | [YouTube \u7684\u53ef\u6269\u5c55\u6027](https://www.youtube.com/watch?v=w5WVu624fY8)<br/>[YouTube \u7684\u67b6\u6784](http://highscalability.com/youtube-architecture) |\n\n### \u516c\u53f8\u5de5\u7a0b\u535a\u5ba2\n\n> \u4f60\u5373\u5c06\u9762\u8bd5\u7684\u516c\u53f8\u7684\u67b6\u6784\n>\n> \u4f60\u9762\u5bf9\u7684\u95ee\u9898\u53ef\u80fd\u5c31\u6765\u81ea\u4e8e\u540c\u6837\u9886\u57df\n\n* [Airbnb Engineering](http://nerds.airbnb.com/)\n* [Atlassian Developers](https://developer.atlassian.com/blog/)\n* [Autodesk Engineering](http://cloudengineering.autodesk.com/blog/)\n* [AWS Blog](https://aws.amazon.com/blogs/aws/)\n* [Bitly Engineering Blog](http://word.bitly.com/)\n* [Box Blogs](https://www.box.com/blog/engineering/)\n* [Cloudera Developer Blog](http://blog.cloudera.com/blog/)\n* [Dropbox Tech Blog](https://tech.dropbox.com/)\n* [Engineering at Quora](http://engineering.quora.com/)\n* [Ebay Tech Blog](http://www.ebaytechblog.com/)\n* [Evernote Tech Blog](https://blog.evernote.com/tech/)\n* [Etsy Code as Craft](http://codeascraft.com/)\n* [Facebook Engineering](https://www.facebook.com/Engineering)\n* [Flickr Code](http://code.flickr.net/)\n* [Foursquare Engineering Blog](http://engineering.foursquare.com/)\n* [GitHub Engineering Blog](https://github.blog/category/engineering)\n* [Google Research Blog](http://googleresearch.blogspot.com/)\n* [Groupon Engineering Blog](https://engineering.groupon.com/)\n* [Heroku Engineering Blog](https://engineering.heroku.com/)\n* [Hubspot Engineering Blog](http://product.hubspot.com/blog/topic/engineering)\n* [High Scalability](http://highscalability.com/)\n* [Instagram Engineering](http://instagram-engineering.tumblr.com/)\n* [Intel Software Blog](https://software.intel.com/en-us/blogs/)\n* [Jane Street Tech Blog](https://blogs.janestreet.com/category/ocaml/)\n* [LinkedIn Engineering](http://engineering.linkedin.com/blog)\n* [Microsoft Engineering](https://engineering.microsoft.com/)\n* [Microsoft Python Engineering](https://blogs.msdn.microsoft.com/pythonengineering/)\n* [Netflix Tech Blog](http://techblog.netflix.com/)\n* [Paypal Developer Blog](https://devblog.paypal.com/category/engineering/)\n* [Pinterest Engineering Blog](http://engineering.pinterest.com/)\n* [Quora Engineering](https://engineering.quora.com/)\n* [Reddit Blog](http://www.redditblog.com/)\n* [Salesforce Engineering Blog](https://developer.salesforce.com/blogs/engineering/)\n* [Slack Engineering Blog](https://slack.engineering/)\n* [Spotify Labs](https://labs.spotify.com/)\n* [Stripe Engineering Blog](https://stripe.com/blog/engineering)\n* [Twilio Engineering Blog](http://www.twilio.com/engineering)\n* [Twitter Engineering](https://engineering.twitter.com/)\n* [Uber Engineering Blog](http://eng.uber.com/)\n* [Yahoo Engineering Blog](http://yahooeng.tumblr.com/)\n* [Yelp Engineering Blog](http://engineeringblog.yelp.com/)\n* [Zynga Engineering Blog](https://www.zynga.com/blogs/engineering)\n\n#### \u6765\u6e90\u53ca\u5ef6\u4f38\u9605\u8bfb\n\n* [kilimchoi/engineering-blogs](https://github.com/kilimchoi/engineering-blogs)\n\n## \u6b63\u5728\u5b8c\u5584\u4e2d\n\n\u6709\u5174\u8da3\u52a0\u5165\u6dfb\u52a0\u4e00\u4e9b\u90e8\u5206\u6216\u8005\u5e2e\u52a9\u5b8c\u5584\u67d0\u4e9b\u90e8\u5206\u5417\uff1f[\u52a0\u5165\u8fdb\u6765\u5427](#\u8d21\u732e)\uff01\n\n* \u4f7f\u7528 MapReduce \u8fdb\u884c\u5206\u5e03\u5f0f\u8ba1\u7b97\n* \u4e00\u81f4\u6027\u54c8\u5e0c\n* \u76f4\u63a5\u5b58\u50a8\u5668\u8bbf\u95ee\uff08DMA\uff09\u63a7\u5236\u5668\n* [\u8d21\u732e](#\u8d21\u732e)\n\n## \u81f4\u8c22\n\n\u6574\u4e2a\u4ed3\u5e93\u90fd\u63d0\u4f9b\u4e86\u8bc1\u4e66\u548c\u6e90\n\n\u7279\u522b\u9e23\u8c22\uff1a\n\n* [Hired in tech](http://www.hiredintech.com/system-design/the-system-design-process/)\n* [Cracking the coding interview](https://www.amazon.com/dp/0984782850/)\n* [High scalability](http://highscalability.com/)\n* [checkcheckzz/system-design-interview](https://github.com/checkcheckzz/system-design-interview)\n* [shashank88/system_design](https://github.com/shashank88/system_design)\n* [mmcgrana/services-engineering](https://github.com/mmcgrana/services-engineering)\n* [System design cheat sheet](https://gist.github.com/vasanthk/485d1c25737e8e72759f)\n* [A distributed systems reading list](http://dancres.github.io/Pages/)\n* [Cracking the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n\n## \u8054\u7cfb\u65b9\u5f0f\n\n\u6b22\u8fce\u8054\u7cfb\u6211\u8ba8\u8bba\u672c\u6587\u7684\u4e0d\u8db3\u3001\u95ee\u9898\u6216\u8005\u610f\u89c1\u3002\n\n\u53ef\u4ee5\u5728\u6211\u7684 [GitHub \u4e3b\u9875](https://github.com/donnemartin)\u4e0a\u627e\u5230\u6211\u7684\u8054\u7cfb\u65b9\u5f0f\n\n## \u8bb8\u53ef\n\n    Creative Commons Attribution 4.0 International License (CC BY 4.0)\n\n    http://creativecommons.org/licenses/by/4.0/\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "README-zh-TW.md", "size": 125969, "license": "NOASSERTION", "content_sha": "c08f740d08275fdc52ba2620ddcb7c2207fbfdd4", "findings": [], "content": "*[English](README.md) \u2219 [\u65e5\u672c\u8a9e](README-ja.md) \u2219 [\u7b80\u4f53\u4e2d\u6587](README-zh-Hans.md) \u2219 [\u7e41\u9ad4\u4e2d\u6587](README-zh-TW.md) | [\u0627\u0644\u0639\u064e\u0631\u064e\u0628\u0650\u064a\u064e\u0651\u0629\u200e](https://github.com/donnemartin/system-design-primer/issues/170) \u2219 [\u09ac\u09be\u0982\u09b2\u09be](https://github.com/donnemartin/system-design-primer/issues/220) \u2219 [Portugu\u00eas do Brasil](https://github.com/donnemartin/system-design-primer/issues/40) \u2219 [Deutsch](https://github.com/donnemartin/system-design-primer/issues/186) \u2219 [\u03b5\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac](https://github.com/donnemartin/system-design-primer/issues/130) \u2219 [\u05e2\u05d1\u05e8\u05d9\u05ea](https://github.com/donnemartin/system-design-primer/issues/272) \u2219 [Italiano](https://github.com/donnemartin/system-design-primer/issues/104) \u2219 [\ud55c\uad6d\uc5b4](https://github.com/donnemartin/system-design-primer/issues/102) \u2219 [\u0641\u0627\u0631\u0633\u06cc](https://github.com/donnemartin/system-design-primer/issues/110) \u2219 [Polski](https://github.com/donnemartin/system-design-primer/issues/68) \u2219 [\u0440\u0443\u0441\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a](https://github.com/donnemartin/system-design-primer/issues/87) \u2219 [Espa\u00f1ol](https://github.com/donnemartin/system-design-primer/issues/136) \u2219 [\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22](https://github.com/donnemartin/system-design-primer/issues/187) \u2219 [T\u00fcrk\u00e7e](https://github.com/donnemartin/system-design-primer/issues/39) \u2219 [ti\u1ebfng Vi\u1ec7t](https://github.com/donnemartin/system-design-primer/issues/127) \u2219 [Fran\u00e7ais](https://github.com/donnemartin/system-design-primer/issues/250) | [Add Translation](https://github.com/donnemartin/system-design-primer/issues/28)*\n\n# \u7cfb\u7d71\u8a2d\u8a08\u5165\u9580\n\n<p align=\"center\">\n  <img src=\"images/jj3A5N8.png\">\n  <br/>\n</p>\n\n## \u52d5\u6a5f\n\n> \u5b78\u7fd2\u5982\u4f55\u8a2d\u8a08\u5927\u578b\u7cfb\u7d71\u3002\n>\n> \u6e96\u5099\u7cfb\u7d71\u8a2d\u8a08\u7684\u9762\u8a66\u3002\n\n### \u5b78\u7fd2\u5982\u4f55\u8a2d\u8a08\u5927\u578b\u7cfb\u7d71\n\n\u5b78\u7fd2\u5982\u4f55\u8a2d\u8a08\u53ef\u64f4\u5c55\u7684\u7cfb\u7d71\u6703\u5e6b\u52a9\u4f60\u6210\u70ba\u4e00\u500b\u66f4\u597d\u7684\u5de5\u7a0b\u5e2b\u3002\n\n\u7cfb\u7d71\u8a2d\u8a08\u662f\u4e00\u500b\u5ee3\u6cdb\u7684\u4e3b\u984c\u3002\u5728\u7db2\u8def\u4e0a\uff0c\u95dc\u65bc**\u7cfb\u7d71\u8a2d\u8a08\u7684\u8cc7\u6e90\u4e5f\u662f\u4e0d\u8a08\u5176\u6578**\u3002\n\n\u672c\u5c08\u6848\u5c07**\u8a31\u591a\u8cc7\u6e90\u9032\u884c\u5206\u9580\u5225\u985e**\uff0c\u5e6b\u52a9\u4f60\u5b78\u7fd2\u5982\u4f55\u5efa\u69cb\u53ef\u64f4\u5c55\u7684\u7cfb\u7d71\u3002\n\n### \u5f9e\u958b\u653e\u539f\u59cb\u78bc\u793e\u7fa4\u4e2d\u5b78\u7fd2\n\n\u9019\u662f\u4e00\u500b\u65e9\u671f\u3001\u6301\u7e8c\u4e0d\u65b7\u66f4\u65b0\u7684\u958b\u653e\u539f\u59cb\u78bc\u5c08\u6848\u3002\n\n[\u4efb\u4f55\u8ca2\u737b](#\u5982\u4f55\u8ca2\u737b) \u90fd\u76f8\u7576\u6b61\u8fce\uff01\n\n### \u6e96\u5099\u7cfb\u7d71\u8a2d\u8a08\u7684\u9762\u8a66\n\n\u9664\u4e86\u7a0b\u5f0f\u7684\u9762\u8a66\u5916\uff0c\u7cfb\u7d71\u8a2d\u8a08\u5728\u8a31\u591a\u79d1\u6280\u516c\u53f8\u7684**\u9762\u8a66\u6d41\u7a0b**\u4e2d\u90fd\u662f**\u5fc5\u8981**\u7684\u4e00\u74b0\u3002\n\n**\u7df4\u7fd2\u5e38\u898b\u7684\u7cfb\u7d71\u8a2d\u8a08\u554f\u984c**\uff0c\u4e26\u4e14\u5c07\u4f60\u7684\u8a2d\u8a08\u7d50\u679c\u548c**\u53c3\u8003\u7b54\u6848**\u9032\u884c**\u6bd4\u5c0d**\uff1a\u8a0e\u8ad6\u3001\u7a0b\u5f0f\u78bc\u548c\u5716\u8868\u3002\n\n\u95dc\u65bc\u9762\u8a66\u7684\u5176\u4ed6\u4e3b\u984c\uff1a\n\n* [\u5b78\u7fd2\u6307\u5357](#\u5b78\u7fd2\u6307\u5357)\n* [\u5982\u4f55\u89e3\u6c7a\u4e00\u500b\u7cfb\u7d71\u8a2d\u8a08\u7684\u9762\u8a66\u984c\u76ee](#\u5982\u4f55\u89e3\u6c7a\u4e00\u500b\u7cfb\u7d71\u8a2d\u8a08\u7684\u9762\u8a66\u984c\u76ee)\n* [\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66\u554f\u984c\u8207**\u89e3\u7b54**](#\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66\u554f\u984c\u8207\u89e3\u7b54)\n* [\u7269\u4ef6\u5c0e\u5411\u8a2d\u8a08\u554f\u984c\u8207**\u89e3\u7b54**](#\u7269\u4ef6\u5c0e\u5411\u8a2d\u8a08\u9762\u8a66\u554f\u984c\u8207\u89e3\u7b54)\n* [\u5176\u4ed6\u7684\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66\u554f\u984c](#\u5176\u4ed6\u7684\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66\u554f\u984c)\n\n## \u5b78\u7fd2\u55ae\u5b57\u5361\n\n<p align=\"center\">\n  <img src=\"images/zdCAkB3.png\">\n  <br/>\n</p>\n\n\u5e95\u4e0b\u63d0\u4f9b\u7684[\u5b78\u7fd2\u55ae\u5b57\u5361](https://apps.ankiweb.net/)\u4ee5\u6bcf\u9694\u4e00\u6bb5\u6642\u9593\u9593\u9694\u51fa\u73fe\u7684\u65b9\u5f0f\uff0c\u5e6b\u52a9\u4f60\u5b78\u7fd2\u7cfb\u7d71\u8a2d\u8a08\u7684\u6982\u5ff5\u3002\n\n* [\u7cfb\u7d71\u8a2d\u8a08\u55ae\u5b57\u5361](resources/flash_cards/System%20Design.apkg)\n* [\u7cfb\u7d71\u8a2d\u8a08\u7df4\u7fd2\u55ae\u5b57\u5361](resources/flash_cards/System%20Design%20Exercises.apkg)\n* [\u7269\u4ef6\u5c0e\u5411\u8a2d\u8a08\u7df4\u7fd2\u55ae\u5b57\u5361](resources/flash_cards/OO%20Design.apkg)\n\n\u9019\u4e9b\u662f\u975e\u5e38\u68d2\u7684\u5b78\u7fd2\u8cc7\u6e90\uff0c\u96a8\u6642\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002\n\n### \u7a0b\u5f0f\u8a2d\u8a08\u5b78\u7fd2\u8cc7\u6e90\uff1a\u4e92\u52d5\u5f0f\u7a0b\u5f0f\u5b78\u7fd2\u8a2d\u8a08\n\n\u4f60\u6b63\u5728\u5c0b\u627e\u8cc7\u6e90\u4f86\u9762\u5c0d[**\u7a0b\u5f0f\u8a9e\u8a00\u9762\u8a66**](https://github.com/donnemartin/interactive-coding-challenges)\u55ce\uff1f\n\n<p align=\"center\">\n  <img src=\"images/b4YtAEN.png\">\n  <br/>\n</p>\n\n\u8acb\u53c3\u8003 [**\u4e92\u52d5\u7a0b\u5f0f\u8a9e\u8a00\u5b78\u7fd2\u6311\u6230**](https://github.com/donnemartin/interactive-coding-challenges)\uff0c\u7576\u4e2d\u9084\u5305\u542b\u4e86\u5e95\u4e0b\u7684\u5b78\u7fd2\u55ae\u5b57\u5361\uff1a\n\n* [\u7a0b\u5f0f\u8a9e\u8a00\u5b78\u7fd2\u55ae\u5361](https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg)\n\n## \u5982\u4f55\u8ca2\u737b\n\n> \u5f9e\u793e\u7fa4\u4e2d\u5b78\u7fd2\n\n\u96a8\u6642\u6b61\u8fce\u63d0\u4ea4 Pull Request\uff1a\n\n* \u4fee\u6b63\u932f\u8aa4\n* \u6539\u5584\u7ae0\u7bc0\u5167\u5bb9\n* \u589e\u52a0\u65b0\u7684\u7ae0\u7bc0\n* [\u7ffb\u8b6f](https://github.com/donnemartin/system-design-primer/issues/28)\n\n\u67d0\u4e9b\u9084\u9700\u8981\u518d\u5b8c\u5584\u7684\u7ae0\u7bc0\u653e\u5728 [\u4fee\u6b63\u4e2d](#\u4ecd\u5728\u9032\u884c\u4e2d)\u3002\n\n\u8acb\u53c3\u8003 [\u8ca2\u737b\u6307\u5357](CONTRIBUTING.md)\u3002\n\n## \u7cfb\u7d71\u8a2d\u8a08\u4e3b\u984c\u7684\u7d22\u5f15\n\n> \u5e95\u4e0b\u662f\u6578\u500b\u7cfb\u7d71\u8a2d\u8a08\u7684\u4e3b\u984c\uff0c\u5305\u542b\u4e86\u512a\u9ede\u53ca\u7f3a\u9ede\u3002**\u8981\u8a18\u5f97\uff0c\u6bcf\u4e00\u500b\u7cfb\u7d71\u8a2d\u8a08\u7684\u8003\u91cf\u90fd\u5305\u542b\u8457\u67d0\u7a2e\u53d6\u6368**\u3002\n>\n> \u6bcf\u4e00\u7ae0\u7bc0\u90fd\u5305\u542b\u66f4\u6df1\u5165\u8cc7\u6e90\u7684\u9023\u7d50\u3002\n\n<p align=\"center\">\n  <img src=\"images/jrUBAF7.png\">\n  <br/>\n</p>\n\n* [\u7cfb\u7d71\u8a2d\u8a08\u4e3b\u984c\uff1a\u5f9e\u9019\u88e1\u958b\u59cb](#\u7cfb\u7d71\u8a2d\u8a08\u4e3b\u984c\u5f9e\u9019\u88e1\u958b\u59cb)\n    * [\u7b2c\u4e00\u6b65\uff1a\u8907\u7fd2\u95dc\u65bc\u53ef\u64f4\u5c55\u6027\u7684\u5f71\u7247\u8b1b\u5ea7](#\u7b2c\u4e00\u6b65\u8907\u7fd2\u95dc\u65bc\u53ef\u64f4\u5c55\u6027\u7684\u5f71\u7247\u8b1b\u5ea7)\n    * [\u7b2c\u4e8c\u6b65\uff1a\u8907\u7fd2\u95dc\u65bc\u53ef\u64f4\u5c55\u6027\u7684\u6587\u7ae0](#\u7b2c\u4e8c\u6b65\u8907\u7fd2\u95dc\u65bc\u53ef\u64f4\u5c55\u6027\u7684\u6587\u7ae0)\n    * [\u4e0b\u4e00\u6b65](#\u4e0b\u4e00\u6b65)\n* [\u6548\u80fd\u8207\u53ef\u64f4\u5c55\u6027](#\u6548\u80fd\u8207\u53ef\u64f4\u5c55\u6027)\n* [\u5ef6\u9072\u8207\u541e\u5410\u91cf](#\u5ef6\u9072\u8207\u541e\u5410\u91cf)\n* [\u53ef\u7528\u6027\u8207\u4e00\u81f4\u6027](#\u53ef\u7528\u6027\u8207\u4e00\u81f4\u6027)\n    * [CAP \u7406\u8ad6](#cap-\u7406\u8ad6)\n        * [CP-\u4e00\u81f4\u6027\u8207\u90e8\u5206\u5bb9\u932f\u6027](#cp-\u4e00\u81f4\u6027\u8207\u90e8\u5206\u5bb9\u932f\u6027)\n        * [AP-\u53ef\u7528\u6027\u8207\u90e8\u5206\u5bb9\u932f\u6027](#ap-\u53ef\u7528\u6027\u8207\u90e8\u5206\u5bb9\u932f\u6027)\n* [\u4e00\u81f4\u6027\u6a21\u5f0f](#\u4e00\u81f4\u6027\u6a21\u5f0f)\n    * [\u5f31\u4e00\u81f4\u6027](#\u5f31\u4e00\u81f4\u6027)\n    * [\u6700\u7d42\u4e00\u81f4\u6027](#\u6700\u7d42\u4e00\u81f4\u6027)\n    * [\u5f37\u4e00\u81f4\u6027](#\u5f37\u4e00\u81f4\u6027)\n* [\u53ef\u7528\u6027\u6a21\u5f0f](#\u53ef\u7528\u6027\u6a21\u5f0f)\n    * [\u5bb9\u932f\u8f49\u79fb](#\u5bb9\u932f\u8f49\u79fb)\n    * [\u8907\u5beb\u6a5f\u5236](#\u8907\u5beb\u6a5f\u5236)\n* [\u57df\u540d\u7cfb\u7d71](#\u57df\u540d\u7cfb\u7d71)\n* [\u5167\u5bb9\u50b3\u905e\u7db2\u8def(CDN)](#\u5167\u5bb9\u50b3\u905e\u7db2\u8defcdn)\n    * [\u63a8\u9001\u5f0f CDNs](#\u63a8\u9001\u5f0f-cdns)\n    * [\u62c9\u53d6\u5f0f CDNs](#\u62c9\u53d6\u5f0f-cdns)\n* [\u8ca0\u8f09\u5e73\u8861\u5668](#\u8ca0\u8f09\u5e73\u8861\u5668)\n    * [\u4e3b\u52d5\u5230\u5099\u7528\u5207\u63db\u6a21\u5f0f(AP Mode)](#\u4e3b\u52d5\u5230\u5099\u7528\u5207\u63db\u6a21\u5f0fap-mode)\n    * [\u96d9\u4e3b\u52d5\u5207\u63db\u6a21\u5f0f(AA Mode)](#\u96d9\u4e3b\u52d5\u5207\u63db\u6a21\u5f0faa-mode)\n    * [\u7b2c\u56db\u5c64\u8ca0\u8f09\u5e73\u8861](#\u7b2c\u56db\u5c64\u8ca0\u8f09\u5e73\u8861)\n    * [\u7b2c\u4e03\u5c64\u8ca0\u8f09\u5e73\u8861](#\u7b2c\u4e03\u5c64\u8ca0\u8f09\u5e73\u8861)\n    * [\u6c34\u5e73\u64f4\u5c55](#\u6c34\u5e73\u64f4\u5c55)\n* [\u53cd\u5411\u4ee3\u7406(\u7db2\u9801\u4f3a\u670d\u5668)](#\u53cd\u5411\u4ee3\u7406\u7db2\u9801\u4f3a\u670d\u5668)\n    * [\u8ca0\u8f09\u5e73\u8861\u5668\u8207\u53cd\u5411\u4ee3\u7406\u4f3a\u670d\u5668](#\u8ca0\u8f09\u5e73\u8861\u5668\u8207\u53cd\u5411\u4ee3\u7406\u4f3a\u670d\u5668)\n* [\u61c9\u7528\u5c64](#\u61c9\u7528\u5c64)\n    * [\u5fae\u670d\u52d9](#\u5fae\u670d\u52d9)\n    * [\u670d\u52d9\u767c\u73fe](#\u670d\u52d9\u767c\u73fe)\n* [\u8cc7\u6599\u5eab](#\u8cc7\u6599\u5eab)\n    * [\u95dc\u9023\u5f0f\u8cc7\u6599\u5eab\u7ba1\u7406\u7cfb\u7d71(RDBMS)](#\u95dc\u9023\u5f0f\u8cc7\u6599\u5eab\u7ba1\u7406\u7cfb\u7d71rdbms)\n        * [\u4e3b\u5f9e\u8907\u5beb](#\u4e3b\u5f9e\u8907\u5beb)\n        * [\u4e3b\u52d5\u6a21\u5f0f\u8907\u5beb](#\u4e3b\u52d5\u6a21\u5f0f\u8907\u5beb)\n        * [\u806f\u90a6\u5f0f\u8cc7\u6599\u5eab](#\u806f\u90a6\u5f0f\u8cc7\u6599\u5eab)\n        * [\u5206\u7247](#\u5206\u7247)\n        * [\u53cd\u6b63\u898f\u5316](#\u53cd\u6b63\u898f\u5316)\n        * [SQL \u512a\u5316](#sql-\u512a\u5316)\n    * [NoSQL](#nosql)\n        * [\u9375-\u503c\u5c0d\u7684\u8cc7\u6599\u5eab](#\u9375-\u503c\u5c0d\u7684\u8cc7\u6599\u5eab)\n        * [\u6587\u4ef6\u985e\u578b\u8cc7\u6599\u5eab](#\u6587\u4ef6\u985e\u578b\u8cc7\u6599\u5eab)\n        * [\u5217\u5132\u5b58\u578b\u8cc7\u6599\u5eab](#\u5217\u5132\u5b58\u578b\u8cc7\u6599\u5eab)\n        * [\u5716\u5f62\u8cc7\u6599\u5eab](#\u5716\u5f62\u8cc7\u6599\u5eab)\n    * [SQL \u6216 NoSQL](#sql-\u6216-nosql)\n* [\u5feb\u53d6](#\u5feb\u53d6)\n    * [\u5ba2\u6236\u7aef\u5feb\u53d6](#\u5ba2\u6236\u7aef\u5feb\u53d6)\n    * [CDN \u5feb\u53d6](#cdn-\u5feb\u53d6)\n    * [\u7db2\u7ad9\u4f3a\u670d\u5668\u5feb\u53d6](#\u7db2\u7ad9\u4f3a\u670d\u5668\u5feb\u53d6)\n    * [\u8cc7\u6599\u5eab\u5feb\u53d6](#\u8cc7\u6599\u5eab\u5feb\u53d6)\n    * [\u61c9\u7528\u7a0b\u5f0f\u5feb\u53d6](#\u61c9\u7528\u7a0b\u5f0f\u5feb\u53d6)\n    * [\u8cc7\u6599\u5eab\u67e5\u8a62\u7d1a\u5225\u7684\u5feb\u53d6](#\u8cc7\u6599\u5eab\u67e5\u8a62\u7d1a\u5225\u7684\u5feb\u53d6)\n    * [\u7269\u4ef6\u7d1a\u5225\u7684\u5feb\u53d6](#\u7269\u4ef6\u7d1a\u5225\u7684\u5feb\u53d6)\n    * [\u4ec0\u9ebc\u6642\u5019\u8981\u66f4\u65b0\u5feb\u53d6](#\u4ec0\u9ebc\u6642\u5019\u8981\u66f4\u65b0\u5feb\u53d6)\n        * [\u5feb\u53d6\u6a21\u5f0f](#\u5feb\u53d6\u6a21\u5f0f)\n        * [\u5beb\u5165\u6a21\u5f0f](#\u5beb\u5165\u6a21\u5f0f)\n        * [\u4e8b\u5f8c\u5beb\u5165(\u56de\u5beb)](#\u4e8b\u5f8c\u5beb\u5165\u56de\u5beb)\n        * [\u66f4\u65b0\u5f0f\u5feb\u53d6](#\u66f4\u65b0\u5f0f\u5feb\u53d6)\n* [\u975e\u540c\u6b65\u6a5f\u5236](#\u975e\u540c\u6b65\u6a5f\u5236)\n    * [\u8a0a\u606f\u4f47\u5217](#\u8a0a\u606f\u4f47\u5217)\n    * [\u5de5\u4f5c\u4f47\u5217](#\u5de5\u4f5c\u4f47\u5217)\n    * [\u80cc\u58d3\u6a5f\u5236](#\u80cc\u58d3\u6a5f\u5236)\n* [\u901a\u8a0a](#\u901a\u8a0a)\n    * [\u50b3\u8f38\u63a7\u5236\u901a\u8a0a\u5354\u5b9a(TCP)](#\u50b3\u8f38\u63a7\u5236\u901a\u8a0a\u5354\u5b9atcp)\n    * [\u4f7f\u7528\u8005\u8cc7\u6599\u6d41\u901a\u8a0a\u5354\u5b9a (UDP)](#\u4f7f\u7528\u8005\u8cc7\u6599\u6d41\u901a\u8a0a\u5354\u5b9a-udp)\n    * [\u9060\u7aef\u7a0b\u5f0f\u547c\u53eb (RPC)](#\u9060\u7aef\u7a0b\u5f0f\u547c\u53eb-rpc)\n    * [\u5177\u8c61\u72c0\u614b\u8f49\u79fb (REST)](#\u5177\u8c61\u72c0\u614b\u8f49\u79fb-rest)\n* [\u8cc7\u8a0a\u5b89\u5168](#\u8cc7\u8a0a\u5b89\u5168)\n* [\u9644\u9304](#\u9644\u9304)\n    * [2 \u7684\u6b21\u65b9\u8868](#2-\u7684\u6b21\u65b9\u8868)\n    * [\u6bcf\u500b\u958b\u767c\u8005\u90fd\u61c9\u8a72\u77e5\u9053\u7684\u5ef6\u9072\u6578\u91cf\u7d1a](#\u6bcf\u500b\u958b\u767c\u8005\u90fd\u61c9\u8a72\u77e5\u9053\u7684\u5ef6\u9072\u6578\u91cf\u7d1a)\n    * [\u5176\u4ed6\u7684\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66\u554f\u984c](#\u5176\u4ed6\u7684\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66\u554f\u984c)\n    * [\u771f\u5be6\u4e16\u754c\u7684\u67b6\u69cb](#\u771f\u5be6\u4e16\u754c\u7684\u67b6\u69cb)\n    * [\u516c\u53f8\u7684\u7cfb\u7d71\u67b6\u69cb](#\u516c\u53f8\u7684\u7cfb\u7d71\u67b6\u69cb)\n    * [\u516c\u53f8\u7684\u5de5\u7a0b\u90e8\u843d\u683c](#\u516c\u53f8\u7684\u5de5\u7a0b\u90e8\u843d\u683c)\n* [\u4ecd\u5728\u9032\u884c\u4e2d](#\u4ecd\u5728\u9032\u884c\u4e2d)\n* [\u81f4\u8b1d](#\u81f4\u8b1d)\n* [\u806f\u7d61\u8cc7\u8a0a](#\u806f\u7d61\u8cc7\u8a0a)\n* [\u6388\u6b0a](#\u6388\u6b0a)\n\n## \u5b78\u7fd2\u6307\u5357\n\n> \u57fa\u65bc\u4f60\u9762\u8a66\u7684\u6642\u9593 (\u77ed\u3001\u4e2d\u3001\u9577) \u4f86\u8907\u7fd2\u9019\u4e9b\u5efa\u8b70\u7684\u4e3b\u984c\u3002\n\n![Imgur](images/OfVllex.png)\n\n**Q: \u5c0d\u65bc\u9762\u8a66\u8005\u4f86\u8aaa\uff0c\u6211\u9700\u8981\u77e5\u9053\u9019\u88e1\u6240\u6709\u7684\u77e5\u8b58\u55ce\uff1f**\n\n**A: \u4e0d\uff0c\u5982\u679c\u662f\u70ba\u4e86\u9762\u8a66\uff0c\u4f60\u4e0d\u9700\u8981\u77e5\u9053\u9019\u88e1\u6240\u6709\u7684\u77e5\u8b58**\u3002\n\n\u5728\u4e00\u5834\u9762\u8a66\u4e2d\uff0c\u4f60\u6703\u88ab\u554f\u5230\u4ec0\u9ebc\u554f\u984c\u53d6\u6c7a\u65bc\u4ee5\u4e0b\u5e7e\u9ede\uff1a\n\n* \u4f60\u6709\u591a\u5c11\u7d93\u9a57\n* \u4f60\u7684\u6280\u8853\u80cc\u666f\n* \u4f60\u9762\u8a66\u4ec0\u9ebc\u8077\u4f4d\n* \u4f60\u9762\u8a66\u4ec0\u9ebc\u516c\u53f8\n* \u4f60\u7684\u5e78\u904b\u7a0b\u5ea6\n\n\u8d8a\u6709\u7d93\u9a57\u7684\u9762\u8a66\u8005\u901a\u5e38\u88ab\u671f\u671b\u77ad\u89e3\u66f4\u591a\u7cfb\u7d71\u8a2d\u8a08\u7684\u77e5\u8b58\u3002\u5982\u679c\u662f\u67b6\u69cb\u5e2b\u6216\u5718\u968a\u8ca0\u8cac\u4eba\u5247\u88ab\u9810\u671f\u77ad\u89e3\u66f4\u591a\u9664\u4e86\u500b\u4eba\u8ca2\u737b\u4ee5\u5916\u7684\u77e5\u8b58\u3002\u9802\u5c16\u7684\u79d1\u6280\u516c\u53f8\u901a\u5e38\u4e5f\u6703\u6709\u4e00\u6b21\u6216\u591a\u6b21\u7684\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66\u3002\n\n\u9762\u8a66\u6642\uff0c\u6703\u5f88\u5ee3\u6cdb\u5730\u5c55\u958b\uff0c\u4e26\u5728\u5e7e\u500b\u7279\u5b9a\u9818\u57df\u6df1\u5165\u63a2\u8a0e\u3002\u9019\u88e1\u6703\u5e6b\u52a9\u4f60\u4e86\u89e3\u4e00\u4e9b\u7cfb\u7d71\u8a2d\u8a08\u4e0d\u540c\u7684\u4e3b\u984c\uff0c\u57fa\u65bc\u4f60\u9762\u8a66\u7684\u6642\u9593\u3001\u7d93\u9a57\u3001\u8077\u4f4d\u548c\u516c\u53f8\u4f86\u8abf\u6574\u4f60\u6240\u9700\u8981\u6d89\u7375\u7684\u77e5\u8b58\u5167\u5bb9\u3002\n\n* **\u77ed\u671f** - \u4ee5\u7cfb\u7d71\u8a2d\u8a08\u7684**\u5ee3\u5ea6**\u70ba\u76ee\u6a19\u3002\u901a\u904e\u89e3\u6c7a**\u4e00\u4e9b**\u9762\u8a66\u984c\u76ee\u4f86\u7df4\u7fd2\u3002\n* **\u4e2d\u671f** - \u4ee5\u7cfb\u7d71\u8a2d\u8a08\u7684**\u5ee3\u5ea6**\u548c**\u521d\u7d1a\u6df1\u5ea6**\u70ba\u76ee\u6a19\u3002\u901a\u904e\u89e3\u6c7a**\u5f88\u591a**\u9762\u8a66\u984c\u76ee\u4f86\u7df4\u7fd2\u3002\n* **\u9577\u671f** - \u4ee5\u7cfb\u7d71\u8a2d\u8a08\u4e3b\u984c\u7684**\u5ee3\u5ea6**\u548c**\u9ad8\u7d1a\u6df1\u5ea6**\u70ba\u76ee\u6a19\u3002\u901a\u904e\u89e3\u6c7a**\u5927\u90e8\u5206**\u9762\u8a66\u984c\u76ee\u4f86\u7df4\u7fd2\u3002\n\n|                                                                                 | \u77ed\u671f | \u4e2d\u671f | \u9577\u671f   |\n|---------------------------------------------------------------------------------|------|------|--------|\n| \u95b1\u8b80 [\u7cfb\u7d71\u8a2d\u8a08\u4e3b\u984c\u7684\u7d22\u5f15](#\u7cfb\u7d71\u8a2d\u8a08\u4e3b\u984c\u7684\u7d22\u5f15) \u4f86\u53d6\u5f97\u95dc\u65bc\u7cfb\u7d71\u5982\u4f55\u904b\u4f5c\u7684\u5ee3\u6cdb\u77e5\u8b58 | :+1: | :+1: | :+1:   |\n| \u95b1\u8b80\u4e00\u4e9b\u4f60\u8981\u9762\u8a66\u7684 [\u516c\u53f8\u7684\u5de5\u7a0b\u90e8\u843d\u683c](#\u516c\u53f8\u7684\u5de5\u7a0b\u90e8\u843d\u683c) \u6587\u7ae0                   | :+1: | :+1: | :+1:   |\n| \u95b1\u8b80\u95dc\u65bc [\u771f\u5be6\u4e16\u754c\u7684\u67b6\u69cb](#\u771f\u5be6\u4e16\u754c\u7684\u67b6\u69cb)                                      | :+1: | :+1: | :+1:   |\n| \u8907\u7fd2 [\u5982\u4f55\u89e3\u6c7a\u4e00\u500b\u7cfb\u7d71\u8a2d\u8a08\u7684\u9762\u8a66\u984c\u76ee](#\u5982\u4f55\u89e3\u6c7a\u4e00\u500b\u7cfb\u7d71\u8a2d\u8a08\u7684\u9762\u8a66\u984c\u76ee)          | :+1: | :+1: | :+1:   |\n| \u5b8c\u6210 [\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66\u984c\u76ee\u8207\u89e3\u7b54](#\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66\u554f\u984c\u8207\u89e3\u7b54)                          | \u4e00\u4e9b | \u5f88\u591a | \u5927\u90e8\u5206 |\n| \u5b8c\u6210 [\u7269\u4ef6\u5c0e\u5411\u8a2d\u8a08\u8207\u89e3\u7b54](#\u7269\u4ef6\u5c0e\u5411\u8a2d\u8a08\u9762\u8a66\u554f\u984c\u8207\u89e3\u7b54)                          | \u4e00\u4e9b | \u5f88\u591a | \u5927\u90e8\u5206 |\n| \u8907\u7fd2 [\u5176\u4ed6\u7684\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66\u554f\u984c](#\u5176\u4ed6\u7684\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66\u554f\u984c)                          | \u4e00\u4e9b | \u5f88\u591a | \u5927\u90e8\u5206 |\n\n## \u5982\u4f55\u89e3\u6c7a\u4e00\u500b\u7cfb\u7d71\u8a2d\u8a08\u7684\u9762\u8a66\u984c\u76ee\n\n> \u5982\u4f55\u9762\u5c0d\u4e00\u500b\u7cfb\u7d71\u8a2d\u8a08\u7684\u9762\u8a66\u984c\u76ee\n\n\u7cfb\u7d71\u8a2d\u8a08\u662f\u4e00\u500b**\u958b\u653e\u5f0f\u7684\u5c0d\u8a71\u904e\u7a0b**\uff0c\u9762\u8a66\u5b98\u6703\u671f\u671b\u7531\u4f60\u4f86\u4e3b\u5c0e\u9019\u500b\u5c0d\u8a71\u3002\n\n\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u6b65\u9a5f\u4f86\u5f15\u5c0e\u6574\u500b\u8a0e\u8ad6\u904e\u7a0b\u3002\u70ba\u4e86\u978f\u56fa\u9019\u500b\u6d41\u7a0b\uff0c\u8acb\u4f7f\u7528\u4e0b\u9762\u7684\u6b65\u9a5f\u5b8c\u6210 [\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66\u984c\u76ee\u8207\u89e3\u7b54](#\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66\u554f\u984c\u8207\u89e3\u7b54) \u9019\u500b\u7ae0\u7bc0\u3002\n\n### \u7b2c\u4e00\u6b65\uff1a\u63cf\u8ff0\u4f7f\u7528\u7684\u5834\u666f\u3001\u9650\u5236\u53ca\u5047\u8a2d\n\n\u628a\u554f\u984c\u7684\u9700\u6c42\u548c\u7bc4\u570d\u7b49\u8cc7\u8a0a\u641c\u96c6\u8d77\u4f86\u3002\u8a62\u554f\u4ee5\u4e0b\u554f\u984c\uff0c\u8b93\u6211\u5011\u53ef\u4ee5\u660e\u78ba\u7684\u5b9a\u7fa9\u4f7f\u7528\u5834\u666f\u548c\u9650\u5236\uff0c\u5c0d\u65bc\u63d0\u51fa\u7684\u5047\u8a2d\u9032\u884c\u8a0e\u8ad6\uff1a\n\n* \u8ab0\u6703\u4f7f\u7528\u9019\u500b\u7cfb\u7d71\uff1f\n* \u4ed6\u5011\u600e\u9ebc\u4f7f\u7528\u7cfb\u7d71\uff1f\n* \u6709\u591a\u5c11\u4f7f\u7528\u8005\uff1f\n* \u7cfb\u7d71\u7684\u4f5c\u7528\u662f\u4ec0\u9ebc\uff1f\n* \u7cfb\u7d71\u7684\u8f38\u5165\u548c\u8f38\u51fa\u662f\u4ec0\u9ebc\uff1f\n* \u6211\u5011\u9810\u671f\u5e0c\u671b\u8655\u7406\u591a\u5c11\u8cc7\u6599\uff1f\n* \u6211\u5011\u5e0c\u671b\u6bcf\u79d2\u8655\u7406\u591a\u5c11\u8acb\u6c42\uff1f\n* \u9810\u671f\u7684\u8b80\u3001\u5beb\u6bd4\u4f8b\u70ba\u4f55\uff1f\n\n### \u7b2c\u4e8c\u6b65\uff1a\u5efa\u7acb\u4e00\u500b\u9ad8\u968e\u7684\u8a2d\u8a08\n\n\u4f7f\u7528\u91cd\u8981\u7684\u5143\u4ef6\u4f86\u5efa\u7acb\u4e00\u500b\u9ad8\u968e\u7684\u8a2d\u8a08\u3002\n\n* \u756b\u51fa\u4e3b\u8981\u7684\u5143\u4ef6\u8207\u5176\u76f8\u4e92\u9023\u63a5\u60c5\u6cc1\n* \u8b49\u660e\u4f60\u7684\u60f3\u6cd5\n\n### \u7b2c\u4e09\u6b65\uff1a \u8a2d\u8a08\u6838\u5fc3\u7684\u5143\u4ef6\n\n\u5c0d\u6bcf\u4e00\u500b\u6838\u5fc3\u5143\u4ef6\u9032\u884c\u6df1\u5165\u7684\u5206\u6790\u3002\u8209\u4f8b\u4f86\u8aaa\uff0c \u5982\u679c\u4f60\u88ab\u554f\u5230 [\u8a2d\u8a08\u4e00\u500b\u77ed\u7db2\u5740\u7684\u670d\u52d9](solutions/system_design/pastebin/README.md) \uff0c\u53ef\u4ee5\u958b\u59cb\u8a0e\u8ad6\u4ee5\u4e0b\u5167\u5bb9\uff1a\n\n* \u7522\u751f\u4e26\u5132\u5b58\u4e00\u500b\u5b8c\u6574\u7db2\u5740\u7684 Hash\n    * [MD5](solutions/system_design/pastebin/README.md) \u548c [Base62](solutions/system_design/pastebin/README.md)\n    * Hash \u78b0\u649e\n    * SQL \u6216 NoSQL\n    * \u8cc7\u6599\u5eab\u7684\u6a21\u578b\n* \u5c07\u4e00\u500b hash \u904e\u5f8c\u7684\u7db2\u5740\u8f49\u63db\u70ba\u5b8c\u6574\u7684\u7db2\u5740\n    * \u8cc7\u6599\u5eab\u67e5\u8a62\n* API \u548c\u7269\u4ef6\u5c0e\u5411\u8a2d\u8a08\n\n### \u7b2c\u56db\u6b65\uff1a\u8a55\u4f30\u4f60\u7684\u8a2d\u8a08\n\n\u78ba\u8a8d\u53ca\u6307\u51fa\u4f60\u7684\u8a2d\u8a08\u7684\u74f6\u9838\u8207\u9650\u5236\uff0c\u8209\u4f8b\u4f86\u8aaa\uff0c\u4f60\u9700\u8981\u5e95\u4e0b\u5e7e\u500b\u5143\u4ef6\u4f86\u64f4\u5c55\u4f60\u7684\u8a2d\u8a08\u55ce\uff1f\n\n* \u8ca0\u8f09\u5e73\u8861\n* \u6c34\u5e73\u64f4\u5c55\n* \u5feb\u53d6\n* \u8cc7\u6599\u5eab\u5207\u7247\n\n\u91dd\u5c0d\u4f60\u7684\u8a2d\u8a08\u8a0e\u8ad6\u53ef\u80fd\u7684\u89e3\u6c7a\u65b9\u6cd5\u8207\u4ee3\u50f9\u3002\u6bcf\u500b\u8a2d\u8a08\u90fd\u6709\u53d6\u6368\u3002\u4f7f\u7528 [\u53ef\u64f4\u5c55\u7684\u8a2d\u8a08\u539f\u5247](#\u7cfb\u7d71\u8a2d\u8a08\u4e3b\u984c\uff1a\u5f9e\u9019\u88e1\u958b\u59cb) \u4f86\u8655\u7406\u7cfb\u7d71\u74f6\u9838\u3002\n\n### \u5feb\u901f\u6709\u6548\u7684\u9032\u884c\u4f30\u7b97\n\n\u4f60\u53ef\u80fd\u88ab\u8981\u6c42\u91dd\u5c0d\u4f60\u7684\u8a2d\u8a08\u9032\u884c\u4e00\u4e9b\u4f30\u7b97\uff0c\u53ef\u4ee5\u53c3\u8003 [\u9644\u9304](#\u9644\u9304) \u7684\u4e00\u4e9b\u8cc7\u6e90\uff1a\n\n* [\u4f7f\u7528\u5feb\u901f\u4f30\u7b97\u6cd5](http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)\n* [2 \u7684\u6b21\u65b9\u8868](#2-\u7684\u6b21\u65b9\u8868)\n* [\u6bcf\u500b\u958b\u767c\u8005\u90fd\u61c9\u8a72\u77e5\u9053\u7684\u5ef6\u9072\u6578\u91cf\u7d1a](#\u6bcf\u500b\u958b\u767c\u8005\u90fd\u61c9\u8a72\u77e5\u9053\u7684\u5ef6\u9072\u6578\u91cf\u7d1a)\n\n### \u76f8\u95dc\u8cc7\u6e90\u8207\u5ef6\u4f38\u95b1\u8b80\n\n\u67e5\u770b\u4ee5\u4e0b\u7684\u9023\u7d50\u7372\u5f97\u66f4\u597d\u7684\u505a\u6cd5\uff1a\n\n* [\u5982\u4f55\u5728\u7cfb\u7d71\u8a2d\u8a08\u7684\u9762\u8a66\u4e2d\u52dd\u51fa](https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)\n* [\u7cfb\u7d71\u8a2d\u8a08\u7684\u9762\u8a66](http://www.hiredintech.com/system-design)\n* [\u7cfb\u7d71\u67b6\u69cb\u8207\u8a2d\u8a08\u7684\u9762\u8a66\u4ecb\u7d39](https://www.youtube.com/watch?v=ZgdS0EUmn70)\n\n## \u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66\u554f\u984c\u8207\u89e3\u7b54\n\n> \u5e38\u898b\u7684\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66\u554f\u984c\u8207\u76f8\u95dc\u7bc4\u4f8b\u7684\u8a0e\u8ad6\u3001\u7a0b\u5f0f\u78bc\u4ee5\u53ca\u5716\u8868\u3002\n>\n> \u76f8\u95dc\u7684\u89e3\u7b54\u4f4d\u65bc `\u89e3\u7b54/` \u7684\u8cc7\u6599\u593e\u4e2d\u3002\n\n| \u554f\u984c                                                                                                |                                                        |\n|-----------------------------------------------------------------------------------------------------|--------------------------------------------------------|\n| \u8a2d\u8a08 Pastebin.com (\u6216 Bit.ly)                                                                       | [\u89e3\u7b54](solutions/system_design/pastebin/README.md)     |\n| \u8a2d\u8a08\u4e00\u500b\u50cf\u662f Twitter \u7684 timeline (\u6216 Facebook feed)\u8a2d\u8a08\u4e00\u500b Twitter \u641c\u5c0b\u529f\u80fd (or Facebook \u641c\u5c0b\u529f\u80fd) | [\u89e3\u7b54](solutions/system_design/twitter/README.md)      |\n| \u8a2d\u8a08\u4e00\u500b\u722c\u87f2\u7cfb\u7d71                                                                                    | [\u89e3\u7b54](solutions/system_design/web_crawler/README.md)  |\n| \u8a2d\u8a08 Mint.com \u7db2\u7ad9                                                                                  | [\u89e3\u7b54](solutions/system_design/mint/README.md)         |\n| \u8a2d\u8a08\u4e00\u500b\u793e\u4ea4\u7db2\u7ad9\u7684\u8cc7\u6599\u7d50\u69cb                                                                          | [\u89e3\u7b54](solutions/system_design/social_graph/README.md) |\n| \u8a2d\u8a08\u4e00\u500b\u641c\u5c0b\u5f15\u64ce\u4f7f\u7528\u7684\u9375\u503c\u5132\u5b58\u8cc7\u6599\u7d50\u69cb                                                              | [\u89e3\u7b54](solutions/system_design/query_cache/README.md)  |\n| \u8a2d\u8a08\u4e00\u500b\u6839\u64da\u7522\u54c1\u5206\u985e\u7684\u4e9e\u99ac\u905c\u92b7\u552e\u6392\u540d                                                                | [\u89e3\u7b54](solutions/system_design/sales_rank/README.md)   |\n| \u5728 AWS \u4e0a\u8a2d\u8a08\u4e00\u500b\u767e\u842c\u7528\u6236\u7b49\u7d1a\u7684\u7cfb\u7d71                                                                 | [\u89e3\u7b54](solutions/system_design/scaling_aws/README.md)  |\n| \u589e\u52a0\u4e00\u500b\u7cfb\u7d71\u8a2d\u8a08\u7684\u554f\u984c                                                                              | [\u8ca2\u737b](#\u5982\u4f55\u8ca2\u737b)                                      |\n\n### \u8a2d\u8a08 Pastebin.com (\u6216 Bit.ly)\n\n[\u95b1\u8b80\u7df4\u7fd2\u8207\u89e3\u7b54](solutions/system_design/pastebin/README.md)\n\n![Imgur](images/4edXG0T.png)\n\n### \u8a2d\u8a08\u4e00\u500b\u50cf\u662f Twitter \u7684 timeline (\u6216 Facebook feed)\u8a2d\u8a08\u4e00\u500b Twitter \u641c\u5c0b\u529f\u80fd (or Facebook \u641c\u5c0b\u529f\u80fd)\n\n[\u95b1\u8b80\u7df4\u7fd2\u8207\u89e3\u7b54](solutions/system_design/twitter/README.md)\n\n![Imgur](images/jrUBAF7.png)\n\n### \u8a2d\u8a08\u4e00\u500b\u722c\u87f2\u7cfb\u7d71\n\n[\u95b1\u8b80\u7df4\u7fd2\u8207\u89e3\u7b54](solutions/system_design/web_crawler/README.md)\n\n![Imgur](images/bWxPtQA.png)\n\n### \u8a2d\u8a08 Mint.com \u7db2\u7ad9\n\n[\u95b1\u8b80\u7df4\u7fd2\u8207\u89e3\u7b54](solutions/system_design/mint/README.md)\n\n![Imgur](images/V5q57vU.png)\n\n### \u8a2d\u8a08\u4e00\u500b\u793e\u4ea4\u7db2\u7ad9\u7684\u8cc7\u6599\u7d50\u69cb\n\n[\u95b1\u8b80\u7df4\u7fd2\u8207\u89e3\u7b54](solutions/system_design/social_graph/README.md)\n\n![Imgur](images/cdCv5g7.png)\n\n### \u8a2d\u8a08\u4e00\u500b\u641c\u5c0b\u5f15\u64ce\u4f7f\u7528\u7684\u9375\u503c\u5132\u5b58\u8cc7\u6599\u7d50\u69cb\n\n[\u95b1\u8b80\u7df4\u7fd2\u8207\u89e3\u7b54](solutions/system_design/query_cache/README.md)\n\n![Imgur](images/4j99mhe.png)\n\n### \u8a2d\u8a08\u4e00\u500b\u6839\u64da\u7522\u54c1\u5206\u985e\u7684\u4e9e\u99ac\u905c\u92b7\u552e\u6392\u540d\n\n[\u95b1\u8b80\u7df4\u7fd2\u8207\u89e3\u7b54](solutions/system_design/sales_rank/README.md)\n\n![Imgur](images/MzExP06.png)\n\n### \u5728 AWS \u4e0a\u8a2d\u8a08\u4e00\u500b\u767e\u842c\u7528\u6236\u7b49\u7d1a\u7684\u7cfb\u7d71\n\n[\u95b1\u8b80\u7df4\u7fd2\u8207\u89e3\u7b54](solutions/system_design/scaling_aws/README.md)\n\n![Imgur](images/jj3A5N8.png)\n\n## \u7269\u4ef6\u5c0e\u5411\u8a2d\u8a08\u9762\u8a66\u554f\u984c\u8207\u89e3\u7b54\n\n> \u5e38\u898b\u7684\u7269\u4ef6\u5c0e\u5411\u9762\u8a66\u554f\u984c\u8207\u6848\u4f8b\u63a2\u8a0e\u3001\u7a0b\u5f0f\u78bc\u8207\u5716\u8868\u3002\n>\n> \u76f8\u95dc\u7684\u7b54\u6848\u70ba\u5728 `\u89e3\u7b54/` \u76ee\u9304\u4e2d\u3002\n\n>**\u6ce8\u610f: \u672c\u7ae0\u7bc0\u4ecd\u5728\u5b8c\u5584\u5167\u5bb9\u4e2d**\n\n| \u554f\u984c                     |                                                                            |\n|--------------------------|----------------------------------------------------------------------------|\n| \u8a2d\u8a08\u4e00\u500b hash map        | [\u89e3\u7b54](solutions/object_oriented_design/hash_table/hash_map.ipynb)         |\n| \u8a2d\u8a08\u4e00\u500b LRU \u5feb\u53d6        | [\u89e3\u7b54](solutions/object_oriented_design/lru_cache/lru_cache.ipynb)         |\n| \u8a2d\u8a08\u4e00\u500b\u5ba2\u670d\u7cfb\u7d71         | [\u89e3\u7b54](solutions/object_oriented_design/call_center/call_center.ipynb)     |\n| \u8a2d\u8a08\u4e00\u526f\u724c               | [\u89e3\u7b54](solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb) |\n| \u8a2d\u8a08\u4e00\u500b\u505c\u8eca\u5834           | [\u89e3\u7b54](solutions/object_oriented_design/online_chat/online_chat.ipynb)     |\n| \u8a2d\u8a08\u4e00\u500b\u74b0\u5f62\u9663\u5217         | [\u5982\u4f55\u8ca2\u737b](#\u5982\u4f55\u8ca2\u737b)                                                      |\n| \u589e\u52a0\u4e00\u500b\u7269\u4ef6\u5c0e\u5411\u8a2d\u8a08\u554f\u984c | [\u5982\u4f55\u8ca2\u737b](#\u5982\u4f55\u8ca2\u737b)                                                      |\n\n## \u7cfb\u7d71\u8a2d\u8a08\u4e3b\u984c\uff1a\u5f9e\u9019\u88e1\u958b\u59cb\n\n\u4f60\u662f\u7cfb\u7d71\u8a2d\u8a08\u7684\u65b0\u624b\u55ce\uff1f\n\n\u9996\u5148\uff0c\u4f60\u9700\u8981\u5c0d\u65bc\u57fa\u672c\u7684\u539f\u5247\u6709\u4e00\u5b9a\u7684\u8a8d\u8b58\uff0c\u77e5\u9053\u4ed6\u5011\u662f\u4ec0\u9ebc\uff0c\u5982\u4f55\u4f7f\u7528\uff0c\u4ee5\u53ca\u4ed6\u5011\u7684\u512a\u7f3a\u9ede\u3002\n\n### \u7b2c\u4e00\u6b65\uff1a\u8907\u7fd2\u95dc\u65bc\u53ef\u64f4\u5c55\u6027\u7684\u5f71\u7247\u8b1b\u5ea7\n\n[\u54c8\u4f5b\u5927\u5b78\u53ef\u64f4\u5c55\u6027\u7684\u5f71\u7247](https://www.youtube.com/watch?v=-W9F__D3oY4)\n\n* \u5305\u542b\u4ee5\u4e0b\u4e3b\u984c\uff1a\n    * \u5782\u76f4\u64f4\u5c55\n    * \u6c34\u5e73\u64f4\u5c55\n    * \u5feb\u53d6\n    * \u8ca0\u8f09\u5e73\u8861\n    * \u8cc7\u6599\u5eab\u8907\u5beb\n    * \u8cc7\u6599\u5eab\u5206\u5272\n\n### \u7b2c\u4e8c\u6b65\uff1a\u8907\u7fd2\u95dc\u65bc\u53ef\u64f4\u5c55\u6027\u7684\u6587\u7ae0\n\n[\u53ef\u64f4\u5c55\u6027](http://www.lecloud.net/tagged/scalability/chrono)\n\n* \u5305\u542b\u4ee5\u4e0b\u4e3b\u984c\uff1a\n    * [\u8907\u88fd](http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n    * [\u8cc7\u6599\u5eab](http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n    * [\u5feb\u53d6](http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n    * [\u975e\u540c\u6b65](http://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism)\n\n### \u4e0b\u4e00\u6b65\n\n\u63a5\u4e0b\u4f86\uff0c\u6211\u5011\u9700\u8981\u770b\u770b\u67d0\u4e9b\u53d6\u6368\uff1a\n\n* **\u6548\u80fd** vs **\u53ef\u64f4\u5c55\u6027**\n* **\u5ef6\u9072** vs **\u541e\u5410\u91cf**\n* **\u53ef\u7528\u6027** vs **\u4e00\u81f4\u6027**\n\n\u8a18\u4f4f\uff0c\u4efb\u4f55\u8a2d\u8a08\u90fd\u662f\u53d6\u6368\u3002\n\n\u63a5\u8457\uff0c\u6211\u5011\u5c07\u6703\u6df1\u5165\u66f4\u5177\u9ad4\u7684\u4e3b\u984c\uff0c\u5305\u542b DNS\u3001CDN \u548c\u8ca0\u8f09\u5e73\u8861\u3002\n\n## \u6548\u80fd\u8207\u53ef\u64f4\u5c55\u6027\n\n\u5982\u679c\u670d\u52d9**\u6027\u80fd**\u7684\u589e\u52a0\u548c\u8cc7\u6e90\u7684\u6295\u5165\u662f\u6210\u6b63\u6bd4\u6642\uff0c\u4ee3\u8868\u670d\u52d9\u662f\u53ef\u64f4\u5c55\u7684\u3002\u4e00\u822c\u4f86\u8aaa\uff0c\u589e\u52a0\u6027\u80fd\u4ee3\u8868\u670d\u52d9\u66f4\u591a\u7684\u5de5\u4f5c\u55ae\u5143\uff0c\u4e5f\u53ef\u4ee5\u8655\u7406\u66f4\u591a\u7684\u8cc7\u6599\u3002<sup><a href=\"http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html\">1</a></sup>\n\n\u5f9e\u53e6\u4e00\u65b9\u9762\u4f86\u770b\u770b\u6027\u80fd\u8207\u53ef\u64f4\u5c55\u6027\uff1a\n\n* \u5982\u679c\u4f60\u7684\u7cfb\u7d71\u5b58\u5728**\u6027\u80fd**\u554f\u984c\u6642\uff0c\u5c0d\u55ae\u4e00\u4f7f\u7528\u8005\u4f86\u8aaa\u7684\u611f\u89ba\u662f\u6162\u7684\u3002\n* \u5982\u679c\u4f60\u7684\u7cfb\u7d71\u5b58\u5728**\u53ef\u64f4\u5c55\u6027**\u554f\u984c\u6642\uff0c\u5c0d\u65bc\u55ae\u4e00\u4f7f\u7528\u8005\u4f86\u8aaa\u611f\u89ba\u8f03\u5feb\uff0c\u4f46\u5728\u9ad8\u8ca0\u8f09\u7684\u6642\u5019\u5c31\u6703\u8b8a\u6162\u3002\n\n### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u7c21\u8ac7\u53ef\u64f4\u5c55\u6027](http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html)\n* [\u53ef\u64f4\u5c55\u6027\u3001\u53ef\u7528\u6027\u3001\u7a69\u5b9a\u6027\u8207\u76f8\u95dc\u6a21\u5f0f](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n\n## \u5ef6\u9072\u8207\u541e\u5410\u91cf\n\n**\u5ef6\u9072** \u6307\u57f7\u884c\u4e00\u500b\u64cd\u4f5c\u6216\u904b\u7b97\u7d50\u679c\u6240\u82b1\u8cbb\u7684\u6642\u9593\u3002\n\n**\u541e\u5410\u91cf** \u6307\u55ae\u4f4d\u6642\u9593\u5167\u57f7\u884c\u6b64\u985e\u578b\u64cd\u4f5c\u6216\u904b\u7b97\u7684\u6578\u91cf\u3002\n\n\u4e00\u822c\u4f86\u8aaa\uff0c\u4f60\u61c9\u8a72\u4ee5**\u53ef\u63a5\u53d7\u7684\u5ef6\u9072**\u6578\u91cf\u4e0b\u7684**\u6700\u5927\u5316\u541e\u5410\u91cf**\u70ba\u8a2d\u8a08\u76ee\u6a19\u3002\n\n### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u4e86\u89e3\u5ef6\u9072\u8207\u541e\u5410\u91cf](https://community.cadence.com/cadence_blogs_8/b/sd/archive/2010/09/13/understanding-latency-vs-throughput)\n\n## \u53ef\u7528\u6027\u8207\u4e00\u81f4\u6027\n\n### CAP \u7406\u8ad6\n\n<p align=\"center\">\n  <img src=\"images/bgLMI2u.png\">\n  <br/>\n  <i><a href=http://robertgreiner.com/2014/08/cap-theorem-revisited>\u4f86\u6e90\uff1a\u518d\u770b CAP \u7406\u8ad6</a></i>\n</p>\n\n\u5728\u4e00\u500b\u5206\u6563\u5f0f\u7cfb\u7d71\u4e2d\uff0c\u53ea\u80fd\u6eff\u8db3\u4ee5\u4e0b\u4e09\u500b\u9805\u76ee\u7684\u4efb\u5169\u9805\uff1a\n\n* **\u4e00\u81f4\u6027** - \u6bcf\u6b21\u8b80\u53d6\u90fd\u53ef\u4ee5\u5f97\u5230\u6700\u65b0\u7684\u8cc7\u6599\uff0c\u4f46\u5076\u723e\u6703\u62ff\u5230\u932f\u8aa4\n* **\u53ef\u7528\u6027** - \u6bcf\u6b21\u8b80\u53d6\u90fd\u53ef\u4ee5\u5f97\u5230\u975e\u932f\u8aa4\u7684\u56de\u61c9\uff0c\u4f46\u4e0d\u80fd\u4fdd\u8b49\u53ef\u4ee5\u5f97\u5230\u6700\u65b0\u7684\u8cc7\u6599\n* **\u90e8\u5206\u5bb9\u932f\u6027** - \u5728\u4efb\u610f\u5206\u5340\u7684\u7db2\u8def\u6545\u969c\u60c5\u6cc1\u4e0b\uff0c\u7cfb\u7d71\u4ecd\u7136\u80fd\u5920\u6301\u7e8c\u904b\u884c\n\n*\u7db2\u8def\u662f\u4e0d\u53ef\u9760\u7684\uff0c\u4f60\u7684\u8a2d\u8a08\u5fc5\u9808\u8981\u78ba\u4fdd\u90e8\u5206\u5bb9\u932f\u6027\uff0c\u6240\u4ee5\u4f60\u53ea\u80fd\u5920\u5728\u4e00\u81f4\u6027\u8207\u53ef\u7528\u6027\u4e2d\u505a\u51fa\u53d6\u6368\u3002*\n\n#### CP-\u4e00\u81f4\u6027\u8207\u90e8\u5206\u5bb9\u932f\u6027\n\n\u7b49\u5f85\u5206\u5340\u7684\u7bc0\u9ede\u56de\u8986\u53ef\u80fd\u6703\u5c0e\u81f4\u8d85\u6642\u932f\u8aa4\uff0c\u5982\u679c\u4f60\u7684\u7cfb\u7d71\u7684\u9700\u6c42\u662f\u9700\u8981\u4fdd\u8b49\u539f\u5b50\u8b80\u5beb\u6642\uff0cCP \u662f\u4e00\u500b\u4e0d\u932f\u7684\u9078\u64c7\u3002\n\n#### AP-\u53ef\u7528\u6027\u8207\u90e8\u5206\u5bb9\u932f\u6027\n\n\u6bcf\u500b\u9032\u884c\u56de\u8986\u7684\u7bc0\u9ede\u4e2d\u7684\u6700\u65b0\u7248\u672c\u53ef\u80fd\u4e0d\u662f\u6700\u65b0\u7684\uff0c\u7576\u5206\u5340\u7bc0\u9ede\u89e3\u6790\u5b8c\u7562\u5f8c\uff0c\u5beb\u5165\u7684\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u6642\u9593\u4f86\u50b3\u64ad\u8cc7\u6599\u3002\n\n\u7576\u4f60\u7684\u7cfb\u7d71\u9700\u6c42\u9700\u8981\u4fdd\u8b49 [\u6700\u7d42\u4e00\u81f4\u6027](#\u6700\u7d42\u4e00\u81f4\u6027) \uff0c\u6216\u7576\u5916\u90e8\u7cfb\u7d71\u6545\u969c\u6642\uff0c\u7cfb\u7d71\u8981\u80fd\u5920\u7e7c\u7e8c\u904b\u4f5c\u6642\uff0cAP \u662f\u4e00\u500b\u4e0d\u932f\u7684\u9078\u64c7\u3002\n\n### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u8907\u7fd2 CAP \u7406\u8ad6](http://robertgreiner.com/2014/08/cap-theorem-revisited/)\n* [\u7c21\u55ae\u7684\u4ecb\u7d39 CAP \u7406\u8ad6](http://ksat.me/a-plain-english-introduction-to-cap-theorem/)\n* [CAP \u554f\u8207\u7b54](https://github.com/henryr/cap-faq)\n\n## \u4e00\u81f4\u6027\u6a21\u5f0f\n\n\u7576\u4f60\u7684\u8cc7\u6599\u6709\u591a\u500b\u526f\u672c\u6642\uff0c\u8981\u8003\u616e\u600e\u9ebc\u540c\u6b65\u4ed6\u5011\uff0c\u4ee5\u4fbf\u8b93\u4f7f\u7528\u8005\u6709\u4e00\u81f4\u7684\u8cc7\u6599\u986f\u793a\u3002\u60f3\u60f3 [CAP \u7406\u8ad6](#cap-\u7406\u8ad6) \u4e2d\u7684\u4e00\u81f4\u6027\u5b9a\u5f8b - \u6bcf\u6b21\u7684\u8a2a\u554f\u90fd\u53ef\u4ee5\u5f97\u5230\u6700\u65b0\u7684\u8cc7\u6599\uff0c\u4f46\u53ef\u80fd\u4e5f\u6703\u6536\u5230\u932f\u8aa4\u7684\u56de\u61c9\u3002\n\n### \u5f31\u4e00\u81f4\u6027\n\n\u5728\u5beb\u5165\u4e4b\u5f8c\uff0c\u4efb\u4f55\u7684\u5b58\u53d6\u4e0d\u4e00\u5b9a\u53ef\u4ee5\u62ff\u5230\u8cc7\u6599\uff0c\u5f31\u4e00\u81f4\u6027\u5c07\u76e1\u529b\u78ba\u4fdd\u80fd\u5b58\u53d6\u5230\u6700\u65b0\u7684\u8cc7\u6599\u3002\n\n\u9019\u7a2e\u65b9\u5f0f\u53ef\u4ee5\u5728 memcached \u7b49\u7cfb\u7d71\u4e2d\u770b\u5230\u3002\u5f31\u4e00\u81f4\u6027\u53ef\u4ee5\u5728 VoIP\u3001\u8996\u8a0a\u804a\u5929\u6216\u5176\u4ed6\u5373\u6642\u591a\u4eba\u7dda\u4e0a\u904a\u6232\u4e2d\u770b\u5230\u76f8\u95dc\u7684\u4f7f\u7528\u6848\u4f8b\u3002\u6bd4\u65b9\u8aaa\uff0c\u5982\u679c\u4f60\u5728\u901a\u8a71\u4e2d\u907a\u5931\u5e7e\u79d2\u9418\u6642\u9593\u7684\u8cc7\u6599\uff0c\u518d\u91cd\u65b0\u9023\u63a5\u5f8c\uff0c\u4f60\u662f\u7121\u6cd5\u807d\u5230\u9019\u5e7e\u79d2\u9418\u7684\u5167\u5bb9\u3002\n\n### \u6700\u7d42\u4e00\u81f4\u6027\n\n\u5728\u5beb\u5165\u5f8c\u7684\u8b80\u53d6\u64cd\u4f5c\u6700\u7d42\u53ef\u4ee5\u770b\u5230\u88ab\u5beb\u5165\u7684\u8cc7\u6599(\u901a\u5e38\u5728\u6578\u6beb\u79d2\u5167)\u3002\u8cc7\u6599\u900f\u904e\u975e\u540c\u6b65\u7684\u65b9\u5f0f\u88ab\u8907\u88fd\u3002\n\nDNS \u6216\u662f\u96fb\u5b50\u90f5\u4ef6\u7cfb\u7d71\u4f7f\u7528\u7684\u5c31\u662f\u9019\u7a2e\u65b9\u5f0f\uff0c\u6700\u7d42\u4e00\u81f4\u6027\u5728\u9ad8\u53ef\u7528\u7684\u7cfb\u7d71\u4e2d\u6548\u679c\u5f88\u597d\u3002\n\n### \u5f37\u4e00\u81f4\u6027\n\n\u5728\u5beb\u5165\u5f8c\uff0c\u8b80\u53d6\u5c07\u7acb\u523b\u53d6\u5f97\u8cc7\u6599\uff0c\u8cc7\u6599\u662f\u900f\u904e\u540c\u6b65\u7684\u65b9\u5f0f\u5beb\u5165\u3002\n\n\u6a94\u6848\u7cfb\u7d71\u6216\u8cc7\u6599\u5eab\u7cfb\u7d71\u5c31\u662f\u4f7f\u7528\u9019\u7a2e\u65b9\u5f0f\uff0c\u5f37\u4e00\u81f4\u6027\u5728\u9700\u8981\u7d00\u9304\u7684\u7cfb\u7d71\u4e2d\u8868\u73fe\u5f88\u597d\u3002\n\n### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u8cc7\u6599\u4e2d\u5fc3\u7684\u8a18\u9304\u884c\u70ba](http://snarfed.org/transactions_across_datacenters_io.html)\n\n## \u53ef\u7528\u6027\u6a21\u5f0f\n\n\u95dc\u65bc\u53ef\u7528\u6027\u6709\u5169\u7a2e\u6a21\u5f0f\uff1a**\u5bb9\u932f\u8f49\u79fb** \u548c **\u8907\u5beb**\u3002\n\n### \u5bb9\u932f\u8f49\u79fb\n\n#### \u4e3b\u52d5\u5230\u5099\u7528\u5207\u63db\u6a21\u5f0f(AP Mode)\n\n\u5728\u9019\u500b\u6a21\u5f0f\u4e0b\uff0cheartbeat \u8a0a\u865f\u6703\u5728\u4e3b\u52d5\u548c\u5099\u7528\u7684\u6a5f\u5668\u4e2d\u767c\u9001\uff0c\u7576 heartbeat \u4e2d\u65b7\u6642\uff0c\u5099\u7528\u7684\u6a5f\u5668\u5c31\u6703\u5207\u63db\u70ba\u4e3b\u52d5\u6a5f\u5668\u7684 IP \u4f4d\u7f6e\u63a5\u66ff\u670d\u52d9\u3002\n\n\u7576\u6a5f\u7684\u6642\u9593\u53d6\u6c7a\u65bc\u5099\u7528\u7684\u6a5f\u5668\u662f\u5728\u300c\u71b1\u300d\u5f85\u6a5f\u72c0\u614b\u9084\u662f\u300c\u51b7\u300d\u5f85\u6a5f\u72c0\u614b\u3002\u53ea\u6709\u8655\u65bc\u4e3b\u52d5\u7684\u6a5f\u5668\u6703\u8655\u7406\u4f7f\u7528\u8005\u4f86\u7684\u6d41\u91cf\u3002\n\n\u9019\u500b\u6a21\u5f0f\u7684\u5207\u63db\u4e5f\u88ab\u7a31\u70ba\u4e3b\u5f9e\u7684\u5207\u63db\u6a21\u5f0f\u3002\n\n#### \u96d9\u4e3b\u52d5\u5207\u63db\u6a21\u5f0f(AA Mode)\n\n\u5728\u6b64\u6a21\u5f0f\u4e0b\uff0c\u5169\u53f0\u4f3a\u670d\u5668\u90fd\u6703\u8ca0\u8cac\u8655\u7406\u6d41\u91cf\uff0c\u6d41\u91cf\u6703\u5728\u4ed6\u5011\u4e4b\u9593\u9032\u884c\u5206\u6563\u8ca0\u8f09\u3002\n\n\u5982\u679c\u662f\u5916\u90e8\u7db2\u8def\u7684\u4f3a\u670d\u5668\uff0cDNS \u9700\u8981\u77e5\u9053\u5169\u53f0\u6a5f\u5668\u7684 IP \u4f4d\u7f6e\uff0c\u5982\u679c\u662f\u5167\u90e8\u7db2\u8def\u7684\u4f3a\u670d\u5668\uff0c\u61c9\u7528\u7a0b\u5f0f\u908f\u8f2f\u9700\u8981\u77e5\u9053\u9019\u5169\u53f0\u6a5f\u5668\u3002\n\n\u96d9\u4e3b\u52d5\u5207\u63db\u6a21\u5f0f\u4e5f\u88ab\u7a31\u70ba master-master \u5207\u63db\u3002\n\n### \u7f3a\u9ede\uff1a\u5bb9\u932f\u8f49\u79fb\n\n* \u5bb9\u932f\u8f49\u79fb\u6703\u9700\u8981\u589e\u52a0\u984d\u5916\u7684\u786c\u9ad4\u8207\u8907\u96dc\u5ea6\u3002\n* \u5982\u679c\u5728\u65b0\u5beb\u5165\u7684\u8cc7\u6599\u88ab\u8907\u88fd\u5230\u5099\u7528\u7684\u6a5f\u5668\u524d\u7cfb\u7d71\u5c31\u767c\u751f\u6545\u969c\uff0c\u90a3\u6709\u53ef\u80fd\u6703\u907a\u5931\u8cc7\u6599\u3002\n\n### \u8907\u5beb\u6a5f\u5236\n\n#### \u4e3b\u52d5\u5230\u5099\u7528\u8907\u5beb\u8207\u96d9\u4e3b\u52d5\u8907\u5beb\n\n\u9019\u4e00\u500b\u4e3b\u984c\u9032\u4e00\u6b65\u8a0e\u8ad6\u4e86 [\u8cc7\u6599\u5eab](#\u8cc7\u6599\u5eab) \u90e8\u5206\uff1a\n\n* [\u4e3b\u52d5\u5230\u5099\u7528\u8907\u5beb](#\u4e3b\u52d5\u5230\u5099\u7528\u8907\u5beb)\n* [\u96d9\u4e3b\u52d5\u8907\u5beb](#\u96d9\u4e3b\u52d5\u8907\u5beb)\n\n## \u57df\u540d\u7cfb\u7d71\n\n<p align=\"center\">\n  <img src=\"images/IOyLj4i.jpg\">\n  <br/>\n  <i><a href=http://www.slideshare.net/srikrupa5/dns-security-presentation-issa>\u8cc7\u6599\u4f86\u6e90\uff1aDNS \u5b89\u5168\u4ecb\u7d39</a></i>\n</p>\n\nDNS \u662f\u5c07\u57df\u540d\u8f49\u63db\u70ba IP \u5730\u5740\u7684\u7cfb\u7d71\u3002\n\nDNS \u662f\u968e\u5c64\u5f0f\u7684\u67b6\u69cb\uff0c\u4e00\u90e8\u5206\u7684 DNS \u4f3a\u670d\u5668\u4f4d\u65bc\u9802\u5c64\uff0c\u7576\u67e5\u8a62\u57df\u540d\u6642\uff0c\u4f60\u7684\u8def\u7531\u5668\u6216 ISP \u696d\u8005\u6703\u63d0\u4f9b\u9023\u63a5\u5230 DNS \u4f3a\u670d\u5668\u7684\u8cc7\u8a0a\u3002\u8f03\u5e95\u5c64\u7684 DNS \u4f3a\u670d\u5668\u6703\u5feb\u53d6\u67e5\u8a62\u7684\u7d50\u679c\uff0c\u800c\u9019\u4e9b\u5feb\u53d6\u8cc7\u8a0a\u6703\u56e0\u70ba DNS \u7684\u50b3\u905e\u800c\u9010\u6f38\u66f4\u65b0\u3002DNS \u7684\u7d50\u679c\u53ef\u4ee5\u66ab\u5b58\u5728\u700f\u89bd\u5668\u6216\u64cd\u4f5c\u7cfb\u7d71\u4e2d\u4e00\u6bb5\u6642\u9593\uff0c\u6642\u9593\u7684\u9577\u77ed\u53d6\u6c7a\u65bc [\u5b58\u6d3b\u6642\u9593(TTL)](https://en.wikipedia.org/wiki/Time_to_live) \u7684\u8a2d\u5b9a\u3002\n\n* **NS \u8a18\u9304 (\u57df\u540d\u4f3a\u670d\u5668)** - \u6307\u5b9a\u89e3\u6790\u57df\u540d\u6216\u5b50\u57df\u540d\u7684 DNS \u4f3a\u670d\u5668\u3002\n* **MX \u8a18\u9304 (\u96fb\u5b50\u90f5\u4ef6\u4ea4\u63db\u4f3a\u670d\u5668)** - \u6307\u5b9a\u63a5\u6536\u96fb\u5b50\u90f5\u4ef6\u7684\u4f3a\u670d\u5668\u3002\n* **A \u8a18\u9304 (\u5730\u5740)** - \u6307\u5411\u8981\u5c0d\u61c9\u7684 IP \u4f4d\u7f6e\u3002\n* **CNAME (\u5225\u540d)** - \u5f9e\u4e00\u500b\u57df\u540d\u6307\u5411\u53e6\u5916\u4e00\u500b\u57df\u540d\uff0c\u6216\u662f `CNAME` (example.com \u6307\u5411 www.example.com) \u6216\u6307\u5411\u4e00\u500b `A` \u8a18\u9304\u3002\n\n[CloudFlare](https://www.cloudflare.com/dns/) \u548c [Route 53](https://aws.amazon.com/route53/) \u63d0\u4f9b\u4e86 DNS \u7684\u670d\u52d9\u3002\u800c\u9019\u4e9b DNS \u670d\u52d9\u5546\u900f\u904e\u4ee5\u4e0b\u5e7e\u7a2e\u65b9\u5f0f\u4f86\u6c7a\u5b9a\u6d41\u91cf\u5982\u4f55\u88ab\u5206\u6d3e\uff1a\n\n* [\u52a0\u6b0a\u8f2a\u8a62](http://g33kinfo.com/info/archives/2657)\n    * \u9632\u6b62\u6d41\u91cf\u9032\u5165\u6b63\u5728\u7dad\u4fee\u4e2d\u7684\u4f3a\u670d\u5668\n    * \u5728\u4e0d\u540c\u5927\u5c0f\u7684\u96c6\u7fa4\u4e2d\u9032\u884c\u8ca0\u8f09\u5e73\u8861\n    * A/B \u6e2c\u8a66\n* \u57fa\u65bc\u5ef6\u9072\u4f86\u8def\u7531\u8acb\u6c42\n* \u57fa\u65bc\u5730\u7406\u4f4d\u7f6e\u4f86\u8def\u7531\u8acb\u6c42\n\n### DNS \u7684\u7f3a\u9ede\n\n* \u5118\u7ba1\u53ef\u4ee5\u900f\u904e\u5feb\u53d6\u4f86\u6e1b\u8f15 DNS \u7684\u5ef6\u9072\uff0c\u4f46\u9023\u63a5 DNS \u4f3a\u670d\u5668\u9084\u662f\u5e36\u4f86\u4e86\u4e9b\u8a31\u7684\u5ef6\u9072\u3002\n* DNS \u4f3a\u670d\u5668\u7684\u7ba1\u7406\u662f\u8907\u96dc\u7684\uff0c\u5118\u7ba1\u4ed6\u901a\u5e38\u7531 [\u653f\u5e9c\u3001ISP \u696d\u8005\u6216\u5927\u516c\u53f8](http://superuser.com/questions/472695/who-controls-the-dns-servers/472729) \u4f86\u8655\u7406\u3002\n* DNS \u4f3a\u670d\u5668\u6703\u6709 [DDoS \u653b\u64ca](http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/) \uff0c\u8b93\u4e0d\u77e5\u9053 Twitter IP \u7684\u4f7f\u7528\u8005\u7121\u6cd5\u8a2a\u554f Twitter \u7db2\u7ad9\u3002\n\n### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [DNS \u67b6\u69cb](https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx)\n* [\u7dad\u57fa\u767e\u79d1](https://en.wikipedia.org/wiki/Domain_Name_System)\n* [DNS \u6587\u7ae0](https://support.dnsimple.com/categories/dns/)\n\n## \u5167\u5bb9\u50b3\u905e\u7db2\u8def(CDN)\n\n<p align=\"center\">\n  <img src=\"images/h9TAuGI.jpg\">\n  <br/>\n  <i><a href=https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/>\u4f86\u6e90\uff1a\u70ba\u4ec0\u9ebc\u8981\u4f7f\u7528 CDN</a></i>\n</p>\n\n\u5167\u5bb9\u50b3\u905e\u7db2\u8def(CDN)\u662f\u4e00\u7a2e\u5168\u7403\u6027\u7684\u5206\u6563\u5f0f\u4ee3\u7406\u4f3a\u670d\u5668\uff0c\u5b83\u900f\u904e\u9760\u8fd1\u4f7f\u7528\u8005\u7684\u4f3a\u670d\u5668\u4f86\u63d0\u4f9b\u6a94\u6848\u3002\u901a\u5e38 HTML/CSS/JS\u3001\u5716\u7247\u6216\u5f71\u7247\u7b49\u6a94\u6848\u6703\u975c\u614b\u6a94\u6848\u6703\u900f\u904e CDN \u4f86\u63d0\u4f9b\uff0c\u5118\u7ba1 Amazon \u7684 CloudFront \u4e5f\u652f\u63f4\u4e86\u52d5\u614b\u5167\u5bb9\u7684 CDN \u670d\u52d9\u3002\u800c CDN \u7684 DNS \u670d\u52d9\u6703\u544a\u77e5\u4f7f\u7528\u8005\u8981\u9023\u63a5\u54ea\u4e00\u53f0\u4f3a\u670d\u5668\u3002\n\n\u900f\u904e CDN \u4f86\u53d6\u5f97\u6a94\u6848\u53ef\u4ee5\u5927\u5e45\u5ea6\u5730\u589e\u52a0\u8acb\u6c42\u7684\u6548\u7387\uff0c\u56e0\u70ba\uff1a\n\n* \u5f9e\u9760\u8fd1\u4f7f\u7528\u8005\u7684\u4f3a\u670d\u5668\u4f86\u62ff\u6a94\u6848\n* \u900f\u904e CDN \u4f86\u56de\u61c9\u4f7f\u7528\u8005\uff0c\u4f60\u7684\u539f\u59cb\u4f3a\u670d\u5668\u4e0d\u9700\u8981\u8655\u7406\u8acb\u6c42\n\n### \u63a8\u9001\u5f0f CDNs\n\n\u7576\u4f60\u7684\u4f3a\u670d\u5668\u6709\u6a94\u6848\u8b8a\u52d5\u6642\uff0c\u63a8\u9001 CDN \u6703\u63a5\u6536\u5230\u65b0\u7684\u8b8a\u52d5\u5167\u5bb9\uff0c\u4e26\u91cd\u5beb URL \u4f4d\u7f6e\u6307\u5411\u65b0\u7684\u5167\u5bb9\u3002\u4f60\u53ef\u4ee5\u8a2d\u5b9a\u6a94\u6848\u5167\u5bb9\u4ec0\u9ebc\u6642\u5019\u904e\u671f\u4ee5\u53ca\u4f55\u6642\u66f4\u65b0\uff0c\u6a94\u6848\u5167\u5bb9\u53ea\u6709\u5728\u8b8a\u66f4\u6216\u65b0\u589e\u7684\u6642\u5019\u624d\u6703\u63a8\u9001\uff0c\u6700\u5c0f\u5316\u6d41\u91cf\uff0c\u4f46\u6700\u5927\u5316\u5132\u5b58\u3002\n\n\u6d41\u91cf\u8f03\u5c0f\u7684\u7db2\u7ad9\uff0c\u6216\u662f\u5167\u5bb9\u4e0d\u662f\u7d93\u5e38\u66f4\u65b0\u7684\u7db2\u7ad9\u4f7f\u7528\u63a8\u9001\u5f0f\u7684 CDN \u76f8\u7576\u9069\u5408\uff0c\u56e0\u70ba\u5167\u5bb9\u6703\u88ab\u7d93\u5e38\u653e\u7f6e\u5728 CDN \u5167\uff0c\u800c\u4e0d\u662f\u5e38\u5e38\u9700\u8981\u91cd\u65b0\u6293\u53d6\u65b0\u6a94\u6848\u3002\n\n### \u62c9\u53d6\u5f0f CDNs\n\n\u62c9\u53d6\u5f0f\u7684 CDN \u6307\u7684\u662f\u7576\u5730\u4e00\u500b\u4f7f\u7528\u8005\u4f86\u8acb\u6c42\u8a72\u8cc7\u6e90\u6642\uff0c\u624d\u5f9e\u4f3a\u670d\u5668\u4e0a\u6293\u53d6\u5c0d\u61c9\u6a94\u6848\u3002\u5c07\u6a94\u6848\u7559\u5728\u4f3a\u670d\u5668\u4e0a\u4e26\u4e14\u91cd\u5beb\u6307\u5411 CDN \u7684 URL\uff0c\u76f4\u5230\u6a94\u6848\u88ab\u5feb\u53d6\u5728 CDN \u4e0a\u70ba\u6b62\uff0c\u8acb\u6c42\u90fd\u6703\u6bd4\u8f03\u6162\u3002\n\n[\u5b58\u6d3b\u6642\u9593 (TTL)](https://en.wikipedia.org/wiki/Time_to_live) \u6c7a\u5b9a\u6a94\u6848\u8981\u88ab\u7de9\u5b58\u591a\u4e45\u7684\u6642\u9593\u3002\u62c9\u53d6\u5f0f CDN \u53ef\u4ee5\u7bc0\u7701\u5132\u5b58\u7a7a\u9593\uff0c\u4f46\u5728\u904e\u671f\u7684\u6587\u4ef6\u88ab\u66f4\u65b0\u4e4b\u524d\uff0c\u5247\u6703\u5c0e\u81f4\u591a\u9918\u7684\u6d41\u91cf\u3002\n\n\u62c9\u53d6\u5f0f\u7684 CDN \u9069\u5408\u9ad8\u6d41\u91cf\u7684\u7db2\u7ad9\uff0c\u56e0\u70ba\u6a94\u6848\u6703\u88ab\u5e73\u5747\u7684\u5206\u6563\u5728\u5404\u500b\u7d50\u9ede\u4f3a\u670d\u5668\u4e2d\u3002\n\n### CDN \u7684\u7f3a\u9ede\n\n* CDN \u7684\u6210\u672c\u53d6\u6c7a\u65bc\u6d41\u91cf\uff0c\u5728\u6b0a\u8861\u8a55\u4f30\u5f8c\uff0c\u4f60\u53ef\u80fd\u6703\u56e0\u70ba\u6210\u672c\u800c\u653e\u68c4\u4f7f\u7528\u3002\n* \u5982\u679c\u5728 TTL \u904e\u671f\u4e4b\u524d\u5c31\u66f4\u65b0\u5167\u5bb9\uff0cCDN \u7684\u7de9\u5b58\u5167\u5bb9\u53ef\u80fd\u6703\u904e\u671f\u3002\n* \u9700\u8981\u6539\u8b8a\u975c\u614b\u5167\u5bb9\u7684\u7db2\u5740\u4f86\u6307\u5411 CDN\u3002\n\n### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u5168\u7403\u6027\u7684 CDN](http://repository.cmu.edu/cgi/viewcontent.cgi?article=2112&context=compsci)\n* [\u62c9\u53d6\u5f0f\u548c\u63a8\u62c9\u5f0f CDN \u7684\u5dee\u5225](http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/)\n* [\u7dad\u57fa\u767e\u79d1](https://en.wikipedia.org/wiki/Content_delivery_network)\n\n## \u8ca0\u8f09\u5e73\u8861\u5668\n\n<p align=\"center\">\n  <img src=\"images/h81n9iK.png\">\n  <br/>\n  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>\u4f86\u6e90\uff1a\u53ef\u64f4\u5c55\u7684\u7cfb\u7d71\u8a2d\u8a08\u6a21\u5f0f</a></i>\n</p>\n\n\u8ca0\u8f09\u5e73\u8861\u5c07\u4f7f\u7528\u8005\u7684\u8acb\u6c42\u5206\u767c\u5230\u5f8c\u7aef\u4f3a\u670d\u5668\u548c\u8cc7\u6599\u5eab\uff0c\u4e0d\u7ba1\u662f\u54ea\u7a2e\u60c5\u6cc1\uff0c\u8ca0\u8f09\u5e73\u8861\u5668\u6703\u5c07\u56de\u61c9\u8fd4\u56de\u7d66\u5c0d\u61c9\u7684\u4f7f\u7528\u8005\u3002\u800c\u8ca0\u8f09\u5e73\u8861\u5668\u4e4b\u6240\u4ee5\u6709\u6548\u5728\u65bc\u4ee5\u4e0b\u5e7e\u9ede\uff1a\n\n* \u907f\u514d\u8acb\u6c42\u88ab\u8f49\u5230\u975e\u6b63\u5e38\u904b\u4f5c\u7684\u4f3a\u670d\u5668\n* \u907f\u514d\u8cc7\u6e90\u904e\u8f09\n* \u907f\u514d\u55ae\u9ede\u5931\u6557\n\n\u8ca0\u8f09\u5e73\u8861\u5668\u53ef\u4ee5\u900f\u904e\u786c\u9ad4(\u8f03\u6602\u8cb4)\u6216 HAProxy \u7b49\u8edf\u9ad4\u4f86\u5be6\u73fe\u3002\n\n\u5176\u9918\u984d\u5916\u7684\u597d\u8655\u6709\uff1a\n\n* **SSL \u7d42\u7d50** - \u5c07\u50b3\u5165\u7684\u8acb\u6c42\u89e3\u5bc6\uff0c\u4e26\u4e14\u52a0\u5bc6\u4f3a\u670d\u5668\u7684\u56de\u61c9\uff0c\u5982\u6b64\u4e00\u4f86\u5f8c\u7aef\u4f3a\u670d\u5668\u5c31\u4e0d\u9700\u8981\u9032\u884c\u9019\u4e9b\u9ad8\u5ea6\u6d88\u8017\u8cc7\u6e90\u7684\u904b\u7b97\n    * \u4e0d\u9700\u8981\u5728\u6bcf\u4e00\u53f0\u6a5f\u5668\u4e0a\u5b89\u88dd [X.509 \u6191\u8b49](https://en.wikipedia.org/wiki/X.509)\u3002\n* **Session \u4fdd\u5b58** - \u767c\u884c cookie\uff0c\u4e26\u5c07\u7279\u5b9a\u4f7f\u7528\u8005\u7684\u8acb\u6c42\u8def\u7531\u5230\u540c\u6a23\u7684\u5f8c\u7aef\u4f3a\u670d\u5668\u4e0a\u3002\n\n\u70ba\u4e86\u907f\u514d\u6545\u969c\uff0c\u901a\u5e38\u6703\u63a1\u7528 [\u4e3b\u52d5\u5230\u5099\u7528\u5207\u63db\u6a21\u5f0f](#\u4e3b\u52d5\u5230\u5099\u7528\u5207\u63db\u6a21\u5f0f(AP Mode)) \u6216 [\u96d9\u4e3b\u52d5\u5207\u63db\u6a21\u5f0f](#\u96d9\u4e3b\u52d5\u5207\u63db\u6a21\u5f0f(AA Mode)) \u9019\u6a23\u591a\u500b\u8ca0\u8f09\u5e73\u8861\u5668\u7684\u6a21\u5f0f\u3002\n\n\u8ca0\u8f09\u5e73\u8861\u5668\u6703\u57fa\u65bc\u591a\u7a2e\u65b9\u6cd5\u4f86\u8def\u7531\u8acb\u6c42\uff1a\n\n* \u96a8\u6a5f\n* \u6700\u5c11\u8ca0\u8f09\n* Session/cookies\n* [\u8f2a\u8a62\u8abf\u5ea6\u6216\u52a0\u6b0a\u8f2a\u8a62\u8abf\u5ea6](http://g33kinfo.com/info/archives/2657)\n* [\u7b2c\u56db\u5c64\u8ca0\u8f09\u5e73\u8861](#\u7b2c\u56db\u5c64\u8ca0\u8f09\u5e73\u8861)\n* [\u7b2c\u4e03\u5c64\u8ca0\u8f09\u5e73\u8861](#\u7b2c\u4e03\u5c64\u8ca0\u8f09\u5e73\u8861)\n\n### \u7b2c\u56db\u5c64\u8ca0\u8f09\u5e73\u8861\n\n\u7b2c\u56db\u5c64\u7684\u8ca0\u8f09\u5e73\u8861\u5668\u6703\u76e3\u770b [\u50b3\u8f38\u5c64](#\u50b3\u8f38\u5c64) \u7684\u8cc7\u8a0a\u4f86\u6c7a\u5b9a\u5982\u4f55\u5206\u767c\u8acb\u6c42\u3002\u4e00\u822c\u4f86\u8aaa\uff0c\u9019\u5305\u542b\u4e86\u4f86\u6e90\u3001\u76ee\u6a19 IP \u4f4d\u7f6e\uff0c\u4ee5\u53ca\u5728 header \u4e2d\u7684 port\uff0c\u4f46\u4e0d\u5305\u542b\u8cc7\u6599\u672c\u8eab\u7684\u5167\u5bb9\u3002\u7b2c\u56db\u5c64\u7684\u8ca0\u8f09\u5e73\u8861\u5668\u6703\u900f\u904e [\u7db2\u8def\u5730\u5740\u8f49\u63db(NAT)](https://www.nginx.com/resources/glossary/layer-4-load-balancing/) \u4f86\u5411\u4e0a\u6e38\u7684\u4f3a\u670d\u5668\u8f49\u767c\u8cc7\u6599\u3002\n\n### \u7b2c\u4e03\u5c64\u8ca0\u8f09\u5e73\u8861\n\n\u7b2c\u4e03\u5c64\u7684\u8ca0\u8f09\u5e73\u8861\u5668\u6703\u76e3\u770b [\u61c9\u7528\u5c64](#\u61c9\u7528\u5c64) \u4f86\u6c7a\u5b9a\u5982\u4f55\u5206\u767c\u8acb\u6c42\u3002\u9019\u5305\u542b\u4e86\u8acb\u6c42\u7684 header\u3001\u8a0a\u606f\u548c cookies\u3002\u9019\u7a2e\u8ca0\u8f09\u5e73\u8861\u5668\u6703\u7d42\u7d50\u7db2\u8def\u7684\u6d41\u91cf\u3001\u8b80\u53d6\u8a0a\u606f\u4e26\u505a\u51fa\u5982\u4f55\u8f49\u767c\u8a0a\u606f\u7684\u6c7a\u5b9a\uff0c\u4e26\u628a\u6d41\u91cf\u8f49\u5f80\u5c0d\u61c9\u7684\u4f3a\u670d\u5668\u3002\u8209\u4f8b\u4f86\u8aaa\uff0c\u4e00\u500b\u7b2c\u4e03\u5c64\u7684\u8ca0\u8f09\u5e73\u8861\u5668\u53ef\u4ee5\u5c07\u5f71\u97f3\u7684\u6d41\u91cf\u8f49\u5f80\u8ca0\u8cac\u5f71\u97f3\u6d41\u91cf\u7684\u4f3a\u670d\u5668\uff0c\u800c\u5c07\u66f4\u654f\u611f\u7684\u4f7f\u7528\u8005\u5e33\u55ae\u7684\u8acb\u6c42\u8f49\u5f80\u5b89\u5168\u6027\u66f4\u5f37\u7684\u4f3a\u670d\u5668\u3002\n\n\u7b2c\u56db\u5c64\u7684\u8ca0\u8f09\u5e73\u8861\u6bd4\u8d77\u7b2c\u4e03\u5c64\u7684\u6240\u8981\u82b1\u8cbb\u7684\u6642\u9593\u548c\u8a08\u7b97\u8cc7\u6e90\u66f4\u4f4e\uff0c\u96d6\u7136\u9019\u5c0d\u65bc\u73fe\u4ee3\u5546\u7528\u786c\u9ad4\u7684\u6027\u80fd\u5f71\u97ff\u5df2\u7d93\u5fae\u4e4e\u5176\u5fae\u4e86\u3002\n\n### \u6c34\u5e73\u64f4\u5c55\n\n\u8ca0\u8f09\u5e73\u8861\u5668\u4e00\u6a23\u53ef\u4ee5\u5e6b\u52a9\u6c34\u5e73\u64f4\u5c55\uff0c\u63d0\u9ad8\u6027\u80fd\u8207\u53ef\u7528\u6027\u3002\u4f7f\u7528\u9019\u7a2e\u65b9\u5f0f\u7684\u64f4\u5c55\u6bd4\u8d77\u5728\u55ae\u4e00\u6a5f\u5668\u7684**\u5782\u76f4\u64f4\u5c55**\u4f86\u8aaa\u6027\u50f9\u6bd4\u66f4\u9ad8\uff0c\u540c\u6642\uff0c\u8058\u8acb\u5546\u7528\u786c\u9ad4\u7684\u4eba\u624d\u6bd4\u8d77\u7279\u5b9a\u4f01\u696d\u7d1a\u7cfb\u7d71\u4eba\u624d\u4f86\u7684\u66f4\u52a0\u5bb9\u6613\u3002\n\n#### \u6c34\u5e73\u64f4\u5c55\u7684\u7f3a\u9ede\n\n* \u6c34\u5e73\u64f4\u5c55\u6703\u589e\u52a0\u8907\u96dc\u6027\uff0c\u540c\u6642\u4e5f\u6d89\u53ca\u4e86\u591a\u53f0\u4f3a\u670d\u5668\u7684\u8b70\u984c\n    * \u4f3a\u670d\u5668\u61c9\u8a72\u662f\u7121\u72c0\u614b\u7684\uff1a\u4e0d\u61c9\u8a72\u5305\u62ec\u50cf\u662f session \u6216\u8cc7\u6599\u5716\u7247\u7b49\u548c\u4f7f\u7528\u8005\u76f8\u95dc\u7684\u5167\u5bb9\n    * Session \u53ef\u4ee5\u96c6\u4e2d\u5132\u5b58\u5728\u8cc7\u6599\u5eab\u6216 [\u5feb\u53d6](#\u5feb\u53d6)(Redis\u3001Memcached) \u7b49\u8cc7\u6599\u5132\u5b58\u4e2d\u3002\n* \u5feb\u53d6\u4f3a\u670d\u5668\u6216\u8cc7\u6599\u5eab\u9700\u8981\u96a8\u8457\u4f3a\u670d\u5668\u7684\u589e\u52a0\u800c\u9032\u884c\u64f4\u5c55\uff0c\u4ee5\u4fbf\u8655\u7406\u66f4\u591a\u7684\u8acb\u6c42\u3002\n\n### \u8ca0\u8f09\u5e73\u8861\u5668\u7684\u7f3a\u9ede\n\n* \u7576\u8ca0\u8f09\u5e73\u8861\u5668\u8cc7\u6e90\u4e0d\u5920\u6216\u6c92\u6709\u6b63\u78ba\u8a2d\u5b9a\u6642\uff0c\u4ed6\u53ef\u80fd\u6703\u6210\u70ba\u6548\u80fd\u7684\u74f6\u9838\n* \u4f7f\u7528\u8ca0\u8f09\u5e73\u8861\u5668\u4f86\u907f\u514d\u55ae\u9ede\u5931\u6557\u6703\u589e\u52a0\u67b6\u69cb\u7684\u8907\u96dc\u6027\n* \u53ea\u6709\u4e00\u53f0\u8ca0\u8f09\u5e73\u8861\u5668\u6642\uff0c\u4e00\u6a23\u6709\u55ae\u9ede\u5931\u6557\u7684\u554f\u984c\u3002\u800c\u591a\u53f0\u7684\u8ca0\u8f09\u5e73\u8861\u5668\u4e00\u6a23\u589e\u52a0\u4e86\u67b6\u69cb\u7684\u8907\u96dc\u6027\u3002\n\n### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [NGINX \u67b6\u69cb](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n* [HAProxy \u67b6\u69cb\u6307\u5357](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n* [\u53ef\u64f4\u5c55\u6027](http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n* [\u7dad\u57fa\u767e\u79d1](https://en.wikipedia.org/wiki/Load_balancing_(computing))\n* [\u7b2c\u56db\u5c64\u8ca0\u8f09\u5e73\u8861](https://www.nginx.com/resources/glossary/layer-4-load-balancing/)\n* [\u7b2c\u4e03\u5c64\u8ca0\u8f09\u5e73\u8861](https://www.nginx.com/resources/glossary/layer-7-load-balancing/)\n* [ELB \u76e3\u807d\u5668\u8a2d\u5b9a](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)\n\n## \u53cd\u5411\u4ee3\u7406(\u7db2\u9801\u4f3a\u670d\u5668)\n\n<p align=\"center\">\n  <img src=\"images/n41Azff.png\">\n  <br/>\n  <i><a href=https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg>\u4f86\u6e90\uff1a\u7dad\u57fa\u767e\u79d1</a></i>\n  <br/>\n</p>\n\n\u53cd\u5411\u4ee3\u7406\u4f3a\u670d\u5668\u662f\u4e00\u500b\u96c6\u4e2d\u5167\u90e8\u670d\u52d9\uff0c\u4e26\u63d0\u4f9b\u7d71\u4e00\u500b\u4ecb\u9762\u7d66\u516c\u958b\u4f7f\u7528\u8005\u7684\u4f3a\u670d\u5668\u3002\u4f86\u81ea\u5ba2\u6236\u7aef\u7684\u8acb\u6c42\u6703\u5148\u88ab\u53cd\u5411\u4ee3\u7406\u4f3a\u670d\u5668\u8f49\u767c\u5230\u53ef\u4ee5\u63a5\u6536\u670d\u52d9\u7684\u4f3a\u670d\u5668\uff0c\u7136\u5f8c\u518d\u7531\u4ee3\u7406\u4f3a\u670d\u5668\u5c07\u7d50\u679c\u8fd4\u56de\u7d66\u5ba2\u6236\u7aef\u3002\n\n\u9019\u6a23\u505a\u7684\u597d\u8655\u6709\uff1a\n\n* **\u589e\u52a0\u5b89\u5168\u6027** - \u96b1\u85cf\u5f8c\u7aef\u4f3a\u670d\u5668\u7684\u8cc7\u8a0a\u3001\u53ef\u4ee5\u8a2d\u5b9a IP \u7684\u9ed1\u540d\u55ae\u3001\u9650\u5236\u6bcf\u500b\u5ba2\u6236\u7aef\u7684\u9023\u7dda\u6578\u91cf\u7b49\u3002\n* **\u589e\u52a0\u53ef\u64f4\u5c55\u6027\u8207\u9748\u6d3b\u6027** - \u5ba2\u6236\u7aef\u53ea\u6703\u770b\u5230\u53cd\u5411\u4ee3\u7406\u4f3a\u670d\u5668\u7684 IP \u6216\u57df\u540d\uff0c\u9019\u6a23\u4f60\u5c31\u53ef\u4ee5\u589e\u52a0\u80cc\u5f8c\u4f3a\u670d\u5668\u7684\u6578\u91cf\u6216\u8a2d\u5b9a\u800c\u4e0d\u5f71\u97ff\u5ba2\u6236\u7aef\u3002\n* **SSL \u7d42\u6b62** - \u89e3\u5bc6\u50b3\u5165\u7684\u8acb\u6c42\u3001\u52a0\u5bc6\u4f3a\u670d\u5668\u7684\u56de\u61c9\uff0c\u9019\u6a23\u5f8c\u7aef\u4f3a\u670d\u5668\u5c31\u4e0d\u9700\u8981\u9032\u884c\u9019\u4e9b\u9ad8\u6210\u672c\u7684\u64cd\u4f5c\n    * \u4e0d\u9700\u8981\u5728\u6bcf\u4e00\u53f0\u4f3a\u670d\u5668\u5b89\u88dd [X.509 \u6191\u8b49](https://en.wikipedia.org/wiki/X.509)\u3002\n* **\u58d3\u7e2e** - \u58d3\u7e2e\u4f3a\u670d\u5668\u7684\u56de\u61c9\n* **\u5feb\u53d6** - \u76f4\u63a5\u5728\u4ee3\u7406\u4f3a\u670d\u5668\u56de\u61c9\u547d\u4e2d\u5feb\u53d6\u7684\u7d50\u679c\n* **\u975c\u614b\u6a94\u6848** - \u76f4\u63a5\u63d0\u4f9b\u975c\u614b\u5167\u5bb9\n    * HTML/CSS/JS\n    * \u5716\u7247\n    * \u5f71\u7247\n    * \u7b49\u7b49\n\n### \u8ca0\u8f09\u5e73\u8861\u5668\u8207\u53cd\u5411\u4ee3\u7406\u4f3a\u670d\u5668\n\n* \u7576\u6709\u591a\u53f0\u4f3a\u670d\u5668\u6642\uff0c\u4f7f\u7528\u8ca0\u8f09\u5e73\u8861\u975e\u5e38\u6709\u7528\uff0c\u4e00\u822c\u4f86\u8aaa\uff0c\u8ca0\u8f09\u5e73\u8861\u5668\u6703\u5c07\u6d41\u91cf\u8def\u7531\u7d66\u4e00\u7d44\u529f\u80fd\u76f8\u540c\u7684\u4f3a\u670d\u5668\u4e0a\u3002\n* \u5373\u4f7f\u53ea\u6709\u4e00\u53f0\u4f3a\u670d\u5668\u6216\u61c9\u7528\u4f3a\u670d\u5668\uff0c\u53cd\u5411\u4ee3\u7406\u4e5f\u662f\u6709\u7528\u7684\u3002\u53ef\u4ee5\u53c3\u8003\u4e0a\u8ff0\u7684\u597d\u8655\u3002\n* Nginx \u6216 HAProxy \u7b49\u89e3\u6c7a\u65b9\u6848\u53ef\u4ee5\u540c\u6642\u652f\u63f4\u7b2c\u4e03\u5c64\u7684\u53cd\u5411\u4ee3\u7406\u8207\u8ca0\u8f09\u5e73\u8861\n\n### \u53cd\u5411\u4ee3\u7406\u4f3a\u670d\u5668\u7684\u7f3a\u9ede\n\n* \u5f15\u5165\u53cd\u5411\u4ee3\u7406\u4f3a\u670d\u5668\u6703\u589e\u52a0\u7cfb\u7d71\u8907\u96dc\u5ea6\u3002\n* \u53ea\u6709\u4e00\u53f0\u53cd\u5411\u4ee3\u7406\u4f3a\u670d\u5668\u6703\u6709\u55ae\u9ede\u5931\u6548\u7684\u554f\u984c\uff0c\u800c\u8a2d\u5b9a\u591a\u53f0\u7684\u53cd\u5411\u4ee3\u7406\u4f3a\u670d\u5668(\u5982 [\u6545\u969c\u8f49\u79fb](https://en.wikipedia.org/wiki/Failover) )\u540c\u6a23\u6703\u589e\u52a0\u7cfb\u7d71\u8907\u96dc\u5ea6\u3002\n\n### \u4f86\u6e90\u8207\u5ef6\u4f38\u95b1\u8b80\n\n* [\u53cd\u5411\u4ee3\u7406\u4f3a\u670d\u5668\u8207\u8ca0\u8f09\u5e73\u8861](https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/)\n* [NGINX \u67b6\u69cb](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n* [HAProxy \u67b6\u69cb\u6307\u5357](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n* [\u7dad\u57fa\u767e\u79d1](https://en.wikipedia.org/wiki/Reverse_proxy)\n\n## \u61c9\u7528\u5c64\n\n<p align=\"center\">\n  <img src=\"images/yB5SYwm.png\">\n  <br/>\n  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>\u8cc7\u6599\u4f86\u6e90\uff1a\u53ef\u7e2e\u653e\u5f0f\u7cfb\u7d71\u67b6\u69cb\u4ecb\u7d39</a></i>\n</p>\n\n\u5c07 Web \u670d\u52d9\u5c64\u8207\u61c9\u7528\u5c64(\u4e5f\u88ab\u7a31\u70ba\u5e73\u53f0\u5c64)\u5206\u96e2\uff0c\u5982\u6b64\u4e00\u4f86\u9019\u5169\u5c64\u5c31\u53ef\u4ee5\u7368\u7acb\u7e2e\u653e\u8207\u8a2d\u5b9a\uff0c\u589e\u52a0\u65b0\u7684 API \u670d\u52d9\u53ea\u9700\u8981\u589e\u52a0\u61c9\u7528\u4f3a\u670d\u5668\uff0c\u800c\u4e0d\u9700\u8981\u589e\u52a0\u984d\u5916\u7684 Web \u4f3a\u670d\u5668\u3002\n\n**\u55ae\u4e00\u8077\u8cac\u539f\u5247**\u9f13\u52f5\u5c0f\u578b\u3001\u81ea\u6cbb\u7684\u670d\u52d9\u8207\u5171\u540c\u5408\u4f5c\uff0c\u5c0f\u578b\u5718\u968a\u900f\u904e\u63d0\u4f9b\u5c0f\u578b\u7684\u670d\u52d9\u53ef\u4ee5\u66f4\u6709\u6548\u7387\u5730\u8b93\u8a08\u756b\u6210\u9577\u3002\n\n\u5728\u61c9\u7528\u5c64\u4e2d\u7684\u5de5\u4f5c\u7a0b\u5f0f\u53ef\u4ee5\u5be6\u4f5c [\u975e\u540c\u6b65\u6a5f\u5236](#\u975e\u540c\u6b65\u6a5f\u5236)\n\n### \u5fae\u670d\u52d9\n\n\u76f8\u95dc\u7684\u4e3b\u984c\u9084\u6709 [\u5fae\u670d\u52d9](https://en.wikipedia.org/wiki/Microservices) \uff0c\u6307\u7684\u662f\u53ef\u4ee5\u7368\u7acb\u904b\u4f5c\u3001\u5c0f\u578b\u7684\u6a21\u7d44\u5316\u670d\u52d9\u3002\u6bcf\u500b\u670d\u52d9\u6703\u900f\u904e\u660e\u78ba\u5b9a\u7fa9\u597d\u7684\u8f15\u91cf\u7d1a\u6e9d\u901a\u6a5f\u5236\uff0c\u904b\u4f5c\u5728\u4e00\u500b\u7368\u7acb\u7684\u6d41\u7a0b\u4e2d\u4f86\u5171\u540c\u5be6\u73fe\u4e00\u500b\u76ee\u6a19\u3002<sup><a href=https://smartbear.com/learn/api-design/what-are-microservices>1</a></sup>\n\n\u8209\u4f8b\u4f86\u8aaa\uff0cPinterest \u53ef\u80fd\u6709\u4ee5\u4e0b\u9019\u4e9b\u5fae\u670d\u52d9\uff1a\u4f7f\u7528\u8005\u8cc7\u6599\u3001\u8ddf\u96a8\u8005\u3001Feed\u3001\u641c\u5c0b\u3001\u7167\u7247\u4e0a\u50b3\u7b49\u7b49\u3002\n\n### \u670d\u52d9\u767c\u73fe\n\n[Consul](https://www.consul.io/docs/index.html)\u3001[Etcd](https://coreos.com/etcd/docs/latest), \u6216\u662f [Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) \u7b49\u7cfb\u7d71\u53ef\u4ee5\u900f\u904e\u8a3b\u518a\u7684\u540d\u7a31\u3001\u4f4d\u7f6e\u3001Port \u7b49\u8cc7\u8a0a\u4f86\u5e6b\u52a9\u5404\u500b\u670d\u52d9\u767c\u73fe\u5f7c\u6b64\u3002[Health checks](https://www.consul.io/intro/getting-started/checks.html) \u53ef\u4ee5\u5e6b\u52a9\u78ba\u8a8d\u670d\u52d9\u7684\u5b8c\u6574\u6027\u4ee5\u53ca\u662f\u5426\u7d93\u5e38\u4f7f\u7528\u4e00\u500b [HTTP](#hypertext-transfer-protocol-http) \u7684\u8def\u5f91\u3002[\u9375-\u503c\u5c0d\u7684\u8cc7\u6599\u5eab](#\u9375-\u503c\u5c0d\u7684\u8cc7\u6599\u5eab) \u5247\u7528\u4f86\u5132\u5b58\u8a2d\u5b9a\u7684\u8cc7\u8a0a\u8207\u5176\u4ed6\u5171\u4eab\u7684\u8cc7\u6599\u3002\n\n### \u61c9\u7528\u5c64\u7684\u7f3a\u9ede\n\n* \u8a2d\u8a08\u591a\u500b\u9b06\u8026\u5408\u5fae\u670d\u52d9\u6240\u7d44\u6210\u7684\u61c9\u7528\u5c64\uff0c\u5fc5\u9808\u5f9e\u67b6\u69cb\u3001\u7dad\u904b\u3001\u6d41\u7a0b\u7b49\u591a\u500b\u9762\u5411\u4f86\u8003\u91cf\uff0c\u76f8\u5c0d\u65bc\u55ae\u7cfb\u7d71\u800c\u8a00\u6703\u975e\u5e38\u4e0d\u540c\u3002\n* \u5fae\u670d\u52d9\u6703\u589e\u52a0\u90e8\u7f72\u8207\u7dad\u904b\u7684\u8907\u96dc\u5ea6\u3002\n\n### \u4f86\u6e90\u8207\u5ef6\u4f38\u95b1\u8b80\n\n* [\u53ef\u64f4\u5c55\u5f0f\u7cfb\u7d71\u67b6\u69cb\u4ecb\u7d39](http://lethain.com/introduction-to-architecting-systems-for-scale)\n* [\u7834\u89e3\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n* [\u9762\u5411\u670d\u52d9\u67b6\u69cb](https://en.wikipedia.org/wiki/Service-oriented_architecture)\n* [Zookeeper \u4ecb\u7d39](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper)\n* [\u5efa\u69cb\u5fae\u670d\u52d9\u7cfb\u7d71\u4f60\u6240\u9700\u8981\u77e5\u9053\u7684\u4e00\u5207](https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/)\n\n## \u8cc7\u6599\u5eab\n\n<p align=\"center\">\n  <img src=\"images/Xkm5CXz.png\">\n  <br/>\n  <i><a href=https://www.youtube.com/watch?v=vg5onp8TU6Q>\u4f86\u6e90\uff1a\u64f4\u5c55\u4f60\u7684\u4f7f\u7528\u8005\u6578\u91cf\u5230\u7b2c\u4e00\u500b\u4e00\u5343\u842c\u91cf\u7d1a</a></i>\n</p>\n\n### \u95dc\u9023\u5f0f\u8cc7\u6599\u5eab\u7ba1\u7406\u7cfb\u7d71(RDBMS)\n\n\u50cf SQL \u9019\u7a2e\u95dc\u9023\u5f0f\u8cc7\u6599\u5eab\u662f\u4ee5\u4e00\u7d44\u8868\u683c\u7684\u5f62\u5f0f\u5b58\u5728\u7684\u8cc7\u6599\u96c6\u5408\u3002\n\n**ACID** \u662f\u7528\u4f86\u63cf\u8ff0\u8cc7\u6599\u5eab [\u4e8b\u52d9](https://en.wikipedia.org/wiki/Database_transaction) \u7684\u7279\u6027\u3002\n\n* **\u539f\u5b50\u6027** - \u6bcf\u4e00\u500b\u8cc7\u6599\u5eab\u4e8b\u52d9\u64cd\u4f5c\u8981\u4e0d\u5c31\u662f\u5168\u90e8\u5b8c\u6210\uff0c\u8981\u4e0d\u5c31\u662f\u5168\u90e8\u4e0d\u5b8c\u6210\u3002\n* **\u4e00\u81f4\u6027** - \u4efb\u4f55\u4e00\u500b\u8cc7\u6599\u5eab\u4e8b\u52d9\u64cd\u4f5c\u90fd\u6703\u8b93\u8cc7\u6599\u5eab\u5f9e\u4e00\u500b\u6709\u6548\u7684\u72c0\u614b\u8f49\u63db\u5230\u53e6\u5916\u4e00\u500b\u6709\u6548\u72c0\u614b\u3002\n* **\u9694\u96e2\u6027** - \u4f75\u767c\u57f7\u884c\u8cc7\u6599\u5eab\u4e8b\u52d9\u64cd\u4f5c\u7684\u7d50\u679c\u6703\u548c\u5faa\u5e8f\u57f7\u884c\u7684\u7d50\u679c\u4e00\u81f4\u3002\n* **\u6301\u4e45\u6027** - \u4e00\u65e6\u4e00\u500b\u4e8b\u52d9\u88ab\u8cc7\u6599\u5eab\u57f7\u884c\u5f8c\uff0c\u4ed6\u7684\u7d50\u679c\u8207\u5f71\u97ff\u662f\u64c1\u6c38\u4e45\u4fdd\u5b58\u7684\u3002\n\n\u8981\u91dd\u5c0d\u95dc\u806f\u5f0f\u8cc7\u6599\u5eab\u7cfb\u7d71\u9032\u884c\u64f4\u5c55\u6709\u8a31\u591a\u65b9\u6cd5\uff1a **\u4e3b\u5f9e\u8907\u5beb**, **\u4e3b\u52d5\u6a21\u5f0f\u8907\u5beb**, **\u806f\u90a6\u5f0f\u8cc7\u6599\u5eab**, **\u5206\u7247**, **\u53cd\u6b63\u898f\u5316**, \u548c **SQL \u512a\u5316**.\n\n#### \u4e3b\u5f9e\u8907\u5beb\n\n\u4e3b\u8cc7\u6599\u5eab\u8ca0\u8cac\u8b80\u548c\u5beb\uff0c\u4e26\u4e14\u5c07\u5beb\u5165\u7684\u8cc7\u6599\u8907\u5beb\u81f3\u4e00\u6216\u591a\u500b\u5f9e\u5c6c\u8cc7\u6599\u5eab\u4e2d\uff0c\u5f9e\u5c6c\u8cc7\u6599\u5eab\u53ea\u8ca0\u8cac\u8b80\u53d6\u3002\u800c\u5f9e\u5c6c\u8cc7\u6599\u5eab\u53ef\u4ee5\u518d\u5c07\u5beb\u5165\u8907\u88fd\u5230\u66f4\u591a\u4ee5\u6a39\u72c0\u7d50\u69cb\u7684\u5176\u4ed6\u8cc7\u6599\u5eab\u4e2d\u3002\u5982\u679c\u4e3b\u8cc7\u6599\u5eab\u96e2\u7dda\u4e86\uff0c\u7cfb\u7d71\u53ef\u4ee5\u4ee5\u53ea\u8b80\u6a21\u5f0f\u904b\u884c\uff0c\u76f4\u5230\u67d0\u500b\u5f9e\u5c6c\u8cc7\u6599\u5eab\u88ab\u63d0\u5347\u70ba\u4e3b\u8cc7\u6599\u5eab\uff0c\u6216\u6709\u65b0\u7684\u4e3b\u8cc7\u6599\u5eab\u51fa\u73fe\u3002\n\n<p align=\"center\">\n  <img src=\"images/C9ioGtn.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>\u4f86\u6e90\uff1a \u53ef\u64f4\u5c55\u6027\u3001\u53ef\u7528\u6027\u3001\u7a69\u5b9a\u6027\u53ca\u5176\u6a21\u5f0f</a></i>\n</p>\n\n##### \u4e3b\u5f9e\u8907\u5beb\u7684\u7f3a\u9ede\n\n* \u9700\u8981\u984d\u5916\u7684\u8655\u7406\u908f\u8f2f\u4f86\u5c07\u5f9e\u5c6c\u8cc7\u6599\u5eab\u63d0\u5347\u70ba\u4e3b\u8981\u8cc7\u6599\u5eab\u3002\n* \u53c3\u8003 [\u8907\u5beb\u7684\u7f3a\u9ede](#\u8907\u5beb\u7684\u7f3a\u9ede) \u7ae0\u7bc0\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u4e3b\u52d5\u6a21\u5f0f\u8907\u5beb\u8207\u4e3b\u5f9e\u6a21\u5f0f**\u5171\u540c**\u7684\u7f3a\u9ede\u3002\n\n#### \u4e3b\u52d5\u6a21\u5f0f\u8907\u5beb\n\n\u5169\u500b\u4e3b\u8981\u7684\u8cc7\u6599\u5eab\u90fd\u8ca0\u8cac\u8b80\u53d6\u548c\u5beb\u5165\uff0c\u4e26\u4e14\u5169\u8005\u4e92\u76f8\u5354\u8abf\u3002\u5982\u679c\u5176\u4e2d\u4e00\u500b\u4e3b\u8981\u8cc7\u6599\u5eab\u96e2\u7dda\uff0c\u7cfb\u7d71\u53ef\u4ee5\u7e7c\u7e8c\u904b\u4f5c\u3002\n\n<p align=\"center\">\n  <img src=\"images/krAHLGg.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>\u4f86\u6e90\uff1a \u53ef\u64f4\u5c55\u6027\u3001\u53ef\u7528\u6027\u3001\u7a69\u5b9a\u6027\u53ca\u5176\u6a21\u5f0f</a></i>\n</p>\n\n##### \u4e3b\u52d5\u6a21\u5f0f\u7684\u7f3a\u9ede\n\n* \u4f60\u9700\u8981\u4e00\u500b\u8ca0\u8f09\u5e73\u8861\u5668\u4f86\u6216\u662f\u5728\u4f60\u7684\u61c9\u7528\u7a0b\u5f0f\u908f\u8f2f\u4e2d\u505a\u4fee\u6539\u4f86\u6c7a\u5b9a\u8981\u5beb\u5165\u54ea\u500b\u8cc7\u6599\u5eab\u3002\n* \u5927\u591a\u6578\u7684\u4e3b\u52d5\u6a21\u5f0f\u8cc7\u6599\u5eab\u7121\u6cd5\u4fdd\u8b49\u4e00\u81f4\u6027(\u9055\u53cd ACID)\uff0c\u6216\u662f\u6703\u56e0\u70ba\u540c\u6b65\u800c\u7522\u751f\u4e86\u5beb\u5165\u5ef6\u9072\u3002\n* \u96a8\u8457\u66f4\u591a\u5beb\u5165\u7bc0\u9ede\u7684\u589e\u52a0\u548c\u5ef6\u9072\u7684\u63d0\u9ad8\uff0c\u5982\u4f55\u89e3\u6c7a\u885d\u7a81\u5c31\u986f\u5f97\u66f4\u52a0\u91cd\u8981\u3002\n* \u53c3\u8003 [\u8907\u5beb\u7684\u7f3a\u9ede](#\u8907\u5beb\u7684\u7f3a\u9ede) \u7ae0\u7bc0\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u4e3b\u52d5\u6a21\u5f0f\u8907\u5beb\u8207\u4e3b\u5f9e\u6a21\u5f0f**\u5171\u540c**\u7684\u7f3a\u9ede\u3002\n\n##### \u8907\u5beb\u7684\u7f3a\u9ede\n\n* \u5982\u679c\u5728\u4e3b\u8981\u8cc7\u6599\u5eab\u8907\u88fd\u5230\u5176\u4ed6\u7d50\u9ede\u524d\u7cfb\u7d71\u5c31\u5931\u6548\uff0c\u5247\u6703\u6709\u8cc7\u6599\u4e1f\u5931\u7684\u53ef\u80fd\u3002\n* \u7576\u6709\u904e\u591a\u5beb\u5165\u6642\uff0c\u8b80\u53d6\u7684\u8cc7\u6599\u5eab\u53ef\u80fd\u6703\u56e0\u70ba\u904e\u591a\u5beb\u5165\u64cd\u4f5c\u800c\u88ab\u963b\u585e\uff0c\u5c0e\u81f4\u8b80\u53d6\u529f\u80fd\u7570\u5e38\u3002\n* \u7576\u8b80\u53d6\u7684\u8cc7\u6599\u5eab\u8d8a\u591a\u6642\uff0c\u9700\u8981\u8907\u5beb\u7684\u8cc7\u6599\u8d8a\u591a\uff0c\u5c07\u6703\u5c0e\u81f4\u8f03\u70ba\u56b4\u91cd\u7684\u5ef6\u9072\u3002\n* \u5728\u67d0\u4e9b\u8cc7\u6599\u5eab\u7cfb\u7d71\u4e2d\uff0c\u5beb\u5165\u4e3b\u8cc7\u6599\u5eab\u7684\u64cd\u4f5c\u53ef\u4ee5\u7528\u591a\u57f7\u884c\u7dd2\u4f86\u4e26\u884c\u5beb\u5165\uff0c\u4f46\u8b80\u53d6\u7684\u8cc7\u6599\u5eab\u53ea\u652f\u63f4\u55ae\u4e00\u57f7\u884c\u7dd2\u4f86\u5faa\u5e8f\u5beb\u5165\u3002\n* \u8907\u5beb\u610f\u5473\u8457\u66f4\u591a\u7684\u786c\u9ad4\u4ee5\u53ca\u66f4\u9ad8\u7684\u8907\u96dc\u5ea6\u3002\n\n##### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u53ef\u64f4\u5c55\u6027\u3001\u53ef\u7528\u6027\u3001\u7a69\u5b9a\u6027\u53ca\u5176\u6a21\u5f0f](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n* [\u591a\u4e3b\u8981\u8cc7\u6599\u5eab\u8907\u5beb](https://en.wikipedia.org/wiki/Multi-master_replication)\n\n#### \u806f\u90a6\u5f0f\u8cc7\u6599\u5eab\n\n<p align=\"center\">\n  <img src=\"images/U3qV33e.png\">\n  <br/>\n  <i><a href=https://www.youtube.com/watch?v=vg5onp8TU6Q>\u4f86\u6e90\uff1a\u64f4\u5c55\u4f60\u7684\u4f7f\u7528\u8005\u6578\u91cf\u5230\u7b2c\u4e00\u500b\u4e00\u5343\u842c\u91cf\u7d1a</a></i>\n</p>\n\n\u806f\u90a6\u5f0f\u8cc7\u6599\u5eab(\u6216\u662f\u6307\u529f\u80fd\u5f0f\u5207\u5206)\u662f\u5c07\u8cc7\u6599\u5eab\u6309\u7167\u5c0d\u61c9\u7684\u529f\u80fd\u9032\u884c\u5206\u5272\u3002\u4f8b\u5982\uff1a\u4f60\u53ef\u4ee5\u4e09\u500b\u8cc7\u6599\u5eab\uff0c\u5206\u5225\u662f\uff1a**\u8ad6\u58c7**\u3001**\u4f7f\u7528\u8005**\u548c**\u7522\u54c1**\uff0c\u800c\u4e0d\u50c5\u50c5\u662f\u55ae\u4e00\u8cc7\u6599\u5eab\u3002\u9019\u6a23\u6703\u6e1b\u5c11\u6bcf\u500b\u8cc7\u6599\u5eab\u5beb\u5165\u8207\u8b80\u53d6\u7684\u6d41\u91cf\uff0c\u9032\u800c\u964d\u4f4e\u8907\u88fd\u7684\u5ef6\u9072\u3002\u8f03\u5c11\u7684\u8cc7\u6599\u610f\u5473\u8005\u66f4\u591a\u9069\u5408\u653e\u5165\u8a18\u61b6\u9ad4\u4e2d\u7684\u8cc7\u6599\uff0c\u9032\u800c\u589e\u52a0\u5feb\u53d6\u547d\u4e2d\u7387\u3002\u56e0\u70ba\u6c92\u6709\u5faa\u5e8f\u5beb\u5165\u7684\u4e2d\u592e\u5f0f\u4e3b\u8cc7\u6599\u5eab\uff0c\u4f60\u53ef\u4ee5\u4e26\u884c\u5beb\u5165\u4ee5\u589e\u52a0\u541e\u5410\u91cf\u3002\n\n##### \u806f\u90a6\u5f0f\u8cc7\u6599\u5eab\u7684\u7f3a\u9ede\n\n* \u5982\u679c\u4f60\u7684\u8cc7\u6599\u8868\u9700\u8981\u5927\u91cf\u7684\u529f\u80fd\u548c\u8cc7\u6599\u8868\uff0c\u806f\u90a6\u5f0f\u8cc7\u6599\u5eab\u7684\u6548\u7387\u4e26\u4e0d\u597d\u3002\n* \u9700\u8981\u66f4\u65b0\u61c9\u7528\u7a0b\u5f0f\u7684\u908f\u8f2f\u4f86\u6c7a\u5b9a\u5982\u4f55\u8b80\u53d6\u548c\u5beb\u5165\u5230\u54ea\u500b\u8cc7\u6599\u5eab\u3002\n* \u900f\u904e [server link](http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers) \u5f9e\u5169\u500b\u8cc7\u6599\u5eab\u4e2d\u95dc\u8cc7\u6599\u66f4\u52a0\u8907\u96dc\u3002\n* \u806f\u90a6\u5f0f\u8cc7\u6599\u5eab\u9700\u8981\u66f4\u591a\u7684\u786c\u9ad4\u548c\u984d\u5916\u7684\u8907\u96dc\u5ea6\u3002\n\n##### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u4f86\u6e90\uff1a\u64f4\u5c55\u4f60\u7684\u4f7f\u7528\u8005\u6578\u91cf\u5230\u7b2c\u4e00\u500b\u4e00\u5343\u842c\u91cf\u7d1a](https://www.youtube.com/watch?v=vg5onp8TU6Q)\n\n#### \u5206\u7247\n\n<p align=\"center\">\n  <img src=\"images/wU8x5Id.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>\u4f86\u6e90\uff1a \u53ef\u64f4\u5c55\u6027\u3001\u53ef\u7528\u6027\u3001\u7a69\u5b9a\u6027\u53ca\u5176\u6a21\u5f0f</a></i>\n</p>\n\n\u5206\u7247\u662f\u6307\u5c07\u8cc7\u6599\u5206\u914d\u5728\u4e0d\u540c\u7684\u8cc7\u6599\u5eab\u4e0a\uff0c\u4f7f\u6bcf\u500b\u8cc7\u6599\u5eab\u53ea\u7ba1\u7406\u6574\u500b\u8cc7\u6599\u7684\u90e8\u5206\u5b50\u96c6\u3002\u4ee5\u4f7f\u7528\u8005\u8cc7\u6599\u5eab\u70ba\u4f8b\uff0c\u96a8\u8457\u4f7f\u7528\u8005\u6578\u91cf\u7684\u589e\u52a0\uff0c\u8d8a\u4f86\u8d8a\u591a\u7684\u5206\u7247\u6703\u88ab\u52a0\u5165\u5230\u7fa4\u96c6\u7576\u4e2d\u3002\n\n\u985e\u4f3c\u65bc [\u806f\u90a6\u5f0f\u8cc7\u6599\u5eab](#\u806f\u90a6\u5f0f\u8cc7\u6599\u5eab) \u7684\u512a\u9ede\uff0c\u5206\u7247\u53ef\u4ee5\u6e1b\u5c11\u8b80\u53d6\u548c\u5beb\u5165\u7684\u6d41\u91cf\u3001\u6e1b\u5c11\u8907\u88fd\u4e26\u63d0\u9ad8\u5feb\u53d6\u547d\u4e2d\u7387\u3002\u7d22\u5f15\u7684\u5bb9\u91cf\u4e5f\u6703\u6e1b\u5c11\uff0c\u5982\u6b64\u4e00\u4f86\u53ef\u4ee5\u6539\u5584\u67e5\u8a62\u7684\u6548\u80fd\u3002\u7576\u4e00\u500b\u5206\u7247\u51fa\u73fe\u554f\u984c\u6642\uff0c\u5176\u9918\u7684\u4ecd\u7136\u53ef\u4ee5\u6b63\u5e38\u904b\u4f5c\uff0c\u800c\u70ba\u4e86\u907f\u514d\u8cc7\u6599\u907a\u5931\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u601d\u8003\u5176\u4ed6\u8907\u5beb\u7684\u6a5f\u5236\u3002\u5982\u540c\u806f\u90a6\u5f0f\u8cc7\u6599\u5eab\uff0c\u5206\u7247\u7684\u6a5f\u5236\u4e26\u6c92\u6709\u4e2d\u592e\u5f0f\u7684\u8cc7\u6599\u5eab\uff0c\u4f60\u53ef\u4ee5\u4e26\u884c\u5beb\u5165\u4ee5\u589e\u52a0\u541e\u5410\u91cf\u3002\n\n\u4ee5\u4f7f\u7528\u8005\u8cc7\u6599\u5eab\u70ba\u4f8b\uff0c\u5e38\u898b\u7684\u505a\u6cd5\u662f\u7528\u4f7f\u7528\u8005\u59d3\u6c0f\u7684\u90e8\u9996\u6216\u4f7f\u7528\u8005\u5730\u7406\u554f\u4f4d\u7f6e\u4f86\u5340\u9694\u4f7f\u7528\u8005\u8cc7\u6599\u8868\u3002\n\n##### \u5206\u7247\u7684\u7f3a\u9ede\n\n* \u4f60\u9700\u8981\u4fee\u6539\u61c9\u7528\u7a0b\u5f0f\u7684\u908f\u8f2f\u4f86\u5be6\u4f5c\u5206\u7247\uff0c\u9019\u53ef\u80fd\u6703\u5c0e\u81f4 SQL \u8b8a\u5f97\u8907\u96dc\u3002\n* \u4e0d\u5408\u7406\u7684\u5206\u7247\u53ef\u80fd\u6703\u5c0e\u81f4\u8cc7\u6599\u8ca0\u8f09\u4e0d\u5747\uff0c\u4f8b\u5982\uff0c\u983b\u7e41\u88ab\u8a2a\u554f\u7684\u4f7f\u7528\u8005\u8cc7\u6599\u5982\u679c\u88ab\u653e\u7f6e\u5728\u540c\u4e00\u500b\u5206\u7247\u4e2d\uff0c\u6703\u5c0e\u81f4\u8a72\u5206\u7247\u8ca0\u8f09\u76f8\u5c0d\u8f03\u9ad8\u3002\n    * \u518d\u5e73\u8861\u6703\u9700\u8981\u984d\u5916\u7684\u8907\u96dc\u5ea6\u3002\u57fa\u65bc [\u4e00\u81f4\u6027 hash](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html) \u7684\u5206\u7247\u6f14\u7b97\u6cd5\u53ef\u4ee5\u6e1b\u5c11\u9019\u7a2e\u60c5\u5f62\u3002\n* \u5f9e\u591a\u500b\u5206\u7247\u4e2d\u64cd\u4f5c\u8cc7\u6599\u6703\u5f88\u8907\u96dc\u3002\n* \u5206\u7247\u9700\u8981\u984d\u5916\u7684\u786c\u9ad4\u548c\u8907\u96dc\u5ea6\u3002\n\n##### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u5206\u7247\u6642\u4ee3\u4f86\u81e8](http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html)\n* [\u5206\u7247\u8cc7\u6599\u5eab\u67b6\u69cb](https://en.wikipedia.org/wiki/Shard_(database_architecture))\n* [\u4e00\u81f4\u6027 hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html)\n\n#### \u53cd\u6b63\u898f\u5316\n\n\u53cd\u6b63\u898f\u5316\u5617\u8a66\u4ee5\u5beb\u5165\u7684\u6027\u80fd\u4f5c\u70ba\u4ee3\u50f9\u4f86\u6539\u5584\u8b80\u53d6\u6027\u80fd\u3002\u900f\u904e\u5728\u4e0d\u540c\u8cc7\u6599\u8868\u4e2d\u7684\u91cd\u8907\u8cc7\u6599\u4f86\u907f\u514d\u9ad8\u6210\u672c\u7684 Join \u64cd\u4f5c\u3002\n\n\u67d0\u4e9b\u95dc\u9023\u5f0f\u8cc7\u6599\u5eab\uff0c\u4f8b\u5982 [PostgreSQL](https://en.wikipedia.org/wiki/PostgreSQL) \u548c Oracle \u652f\u63f4 [materialized views](https://en.wikipedia.org/wiki/Materialized_view) \uff0c\u53ef\u4ee5\u7528\u4f86\u8655\u7406\u91cd\u8907\u8cc7\u6599\u7684\u5132\u5b58\uff0c\u4ee5\u53ca\u4fdd\u8b49\u9019\u4e9b\u8cc7\u6599\u7684\u4e00\u81f4\u6027\u3002\n\n\u4e00\u65e6\u8cc7\u6599\u4f7f\u7528\u5982 [\u806f\u5408](#\u806f\u5408) \u6216 [\u5207\u7247](#\u5207\u7247) \u7b49\u6280\u8853\u88ab\u5206\u5272\uff0c\u8655\u7406\u8de8\u8cc7\u6599\u4e2d\u5fc3 Join \u64cd\u4f5c\u7684\u8907\u96dc\u5ea6\u3002\u53cd\u6b63\u898f\u5316\u53ef\u4ee5\u907f\u514d\u9019\u7a2e\u8907\u96dc\u7684\u64cd\u4f5c\u3002\n\n\u5728\u591a\u6578\u7cfb\u7d71\u4e2d\uff0c\u8b80\u53d6\u7684\u64cd\u4f5c\u983b\u7387\u6703\u9060\u9ad8\u65bc\u5beb\u5165\u7684\u983b\u7387\uff0c\u6bd4\u4f8b\u53ef\u80fd\u6703\u5230 100:1 \u751a\u81f3 1000:1\u3002\u9032\u884c\u8907\u96dc\u8b80\u53d6\u64cd\u4f5c\u7684\u6210\u672c\u5f88\u9ad8\uff0c\u6703\u5728\u786c\u789f\u4e0a\u6d88\u8017\u5927\u91cf\u7684\u6642\u9593\u3002\n\n##### \u53cd\u6b63\u898f\u5316\u7684\u7f3a\u9ede\n\n* \u8cc7\u6599\u6703\u91cd\u8907\u5b58\u53d6\n* Constraints \u7684\u6a5f\u5236\u53ef\u4ee5\u8b93\u91cd\u8907\u7684\u8cc7\u6599\u4fdd\u6301\u540c\u6b65\uff0c\u4f46\u9019\u6a23\u6703\u589e\u52a0\u8cc7\u6599\u5eab\u8a2d\u8a08\u7684\u8907\u96dc\u5ea6\u3002\n* \u53cd\u6b63\u898f\u5316\u7684\u8cc7\u6599\u5eab\u5728\u5927\u91cf\u5beb\u5165\u8ca0\u8f09\u7684\u60c5\u6cc1\u4e0b\uff0c\u6027\u80fd\u8868\u73fe\u53ef\u80fd\u6703\u6bd4\u6b63\u898f\u5316\u7684\u8cc7\u6599\u5eab\u5dee\u3002\n\n###### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u53cd\u6b63\u898f\u5316](https://en.wikipedia.org/wiki/Denormalization)\n\n#### SQL \u512a\u5316\n\nSQL \u512a\u5316\u662f\u4e00\u500b\u6db5\u84cb\u7bc4\u570d\u5f88\u5ee3\u7684\u4e3b\u984c\uff0c\u6709\u8a31\u591a\u76f8\u95dc\u7684 [\u53c3\u8003\u66f8\u7c4d](https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning) \u53ef\u4ee5\u505a\u70ba\u53c3\u8003\u3002\n\n\u900f\u904e **\u6548\u80fd\u6e2c\u8a66** \u548c **\u6548\u80fd\u5206\u6790** \u4f86\u6a21\u64ec\u4e26\u767c\u73fe\u7cfb\u7d71\u7684\u74f6\u9838\u662f\u5f88\u91cd\u8981\u7684\u3002\n\n* **\u6548\u80fd\u6e2c\u8a66** - \u900f\u904e [ab](http://httpd.apache.org/docs/2.2/programs/ab.html) \u7b49\u5de5\u5177\u4f86\u6e2c\u8a66\u9ad8\u8ca0\u8f09\u7684\u60c5\u6cc1\u3002\n* **\u6548\u80fd\u5206\u6790** - \u4f7f\u7528 [slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html) \u7b49\u5de5\u5177\u4f86\u8ffd\u8e64\u6027\u80fd\u554f\u984c\u3002\n\n\u6548\u80fd\u6e2c\u8a66\u548c\u6548\u80fd\u5206\u6790\u53ef\u80fd\u6703\u5f15\u5c0e\u4f60\u5230\u4ee5\u4e0b\u7684\u512a\u5316\u65b9\u6848\u3002\n\n##### \u4f7f\u7528\u8f03\u70ba\u7cbe\u6e96\u7684 schema\n\n* \u70ba\u4e86\u52a0\u5feb\u5b58\u53d6\u901f\u5ea6\uff0cMySQL \u6703\u5728\u786c\u789f\u4e0a\u4f7f\u7528\u9023\u7e8c\u7684 block \u4f86\u5132\u5b58\u8cc7\u6599\u3002\n* \u4f7f\u7528 `CHAR` \u4f86\u5132\u5b58\u56fa\u5b9a\u9577\u5ea6\u7684\u8cc7\u6599\uff0c\u4e0d\u8981\u4f7f\u7528 `VARCHAR`\u3002\n    * `CHAR` \u5728\u5feb\u901f\u3001\u96a8\u6a5f\u5b58\u53d6\u6642\u6548\u7387\u5f88\u9ad8\u3002\u5982\u679c\u4f7f\u7528 `VARCHAR`\uff0c\u60f3\u8981\u8b80\u53d6\u4e0b\u4e00\u500b\u5b57\u5143\u6642\uff0c\u9700\u8981\u5148\u8b80\u53d6\u5230\u76ee\u524d\u5b57\u5143\u7684\u5c3e\u7aef\u3002\n* \u4f7f\u7528 `TEXT` \u4f86\u5132\u5b58\u5927\u91cf\u7684\u6587\u5b57\uff0c\u4f8b\u5982\u90e8\u843d\u683c\u6587\u7ae0\u3002`TEXT` \u9084\u53ef\u4ee5\u4f7f\u7528\u5e03\u6797\u641c\u5c0b\u3002\u4f7f\u7528 `TEXT` \u6642\uff0c\u6703\u5728\u786c\u789f\u4e0a\u4fdd\u5b58\u4e00\u500b\u6307\u5411\u786c\u789f\u5340\u584a\u7684\u6307\u6a19\u3002\n* \u4f7f\u7528 `INT` \u4f86\u5132\u5b58\u6578\u91cf\u7d1a\u9054\u5230 2^32 \u6216 40 \u5104\u7b49\u8f03\u5927\u7684\u6578\u5b57\u3002\n* \u4f7f\u7528 `DECIMAL` \u4f86\u5132\u5b58\u8ca8\u5e63\u8cc7\u6599\u53ef\u4ee5\u907f\u514d\u6d6e\u9ede\u6578\u8868\u9054\u932f\u8aa4\u3002\n* \u907f\u514d\u5132\u5b58\u9f90\u5927\u7684 `BLOBS`\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\uff0c\u61c9\u8a72\u5132\u5b58\u5b58\u653e\u8a72\u5c0d\u8c61\u7684\u4f4d\u7f6e\u3002\n* `VARCHAR(255)` \u662f\u4f7f\u7528 8 \u4f4d\u6578\u4f86\u5132\u5b58\u6642\u7684\u6700\u5927\u8868\u793a\u6cd5\uff0c\u5728\u67d0\u4e9b\u95dc\u9023\u5f0f\u8cc7\u6599\u5eab\u4e2d\uff0c\u8981\u6700\u5927\u9650\u5ea6\u5730\u4f7f\u7528\u5b83\u3002\n* \u5728\u9069\u7528\u7684\u60c5\u6cc1\u4e0b\u8a2d\u5b9a `NOT NULL` \u4f86 [\u63d0\u9ad8\u641c\u5c0b\u6027\u80fd](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)\u3002\n\n##### \u4f7f\u7528\u6b63\u78ba\u7684\u7d22\u5f15\n\n* \u7576\u4f60\u4f7f\u7528 (`SELECT`, `GROUP BY`, `ORDER BY`, `JOIN`) \u9019\u4e9b\u64cd\u4f5c\u7684\u5c0d\u61c9\u6b04\u4f4d\u5982\u679c\u6709\u4f7f\u7528\u7d22\u5f15\u5c31\u6703\u67e5\u8a62\u66f4\u5feb\u3002\n* \u7d22\u5f15\u901a\u5e38\u662f\u4f7f\u7528\u5e73\u8861 [B \u6a39](https://en.wikipedia.org/wiki/B-tree) \u8868\u793a\uff0c\u9019\u6a23\u53ef\u4ee5\u4fdd\u8b49\u8cc7\u6599\u662f\u6709\u5e8f\u7684\uff0c\u4e26\u5141\u8a31\u5728\u5c0d\u6578\u6642\u9593\u5167\u9032\u884c\u641c\u5c0b\u3001\u5faa\u5e8f\u8a2a\u554f\u4ee5\u53ca\u63d2\u5165\u3001\u522a\u9664\u7b49\u64cd\u4f5c\u3002\n* \u8a2d\u5b9a\u7d22\u5f15\u6642\uff0c\u6703\u5c07\u8cc7\u6599\u653e\u7f6e\u65bc\u8a18\u61b6\u9ad4\u4e2d\uff0c\u6703\u4f54\u7528\u66f4\u591a\u8a18\u61b6\u9ad4\u7a7a\u9593\u3002\n* \u5beb\u5165\u64cd\u4f5c\u6703\u8b8a\u6162\uff0c\u56e0\u70ba\u7d22\u5f15\u6703\u9700\u8981\u66f4\u65b0\u3002\n* \u7576\u8b80\u53d6\u5927\u91cf\u8cc7\u6599\u6642\uff0c\u7981\u7528\u7d22\u5f15\u518d\u8b80\u53d6\uff0c\u4e4b\u5f8c\u518d\u91cd\u65b0\u5efa\u7acb\u7d22\u5f15\uff0c\u9019\u6a23\u4e5f\u8a31\u6703\u66f4\u5feb\u3002\n\n##### \u907f\u514d\u9ad8\u6210\u672c\u7684 Join \u64cd\u4f5c\n\n* \u6709\u6027\u80fd\u9700\u6c42\u6642\uff0c\u53ef\u4ee5\u9032\u884c [\u53cd\u6b63\u898f\u5316](#\u53cd\u6b63\u898f\u5316)\u3002\n\n##### \u5206\u5272\u8cc7\u6599\u8868\n\n* \u5c07\u71b1\u9580\u7684\u8cc7\u6599\u62c6\u5206\u5230\u55ae\u7368\u7684\u8cc7\u6599\u8868\u4e2d\u53ef\u4ee5\u589e\u52a0\u5feb\u53d6\u3002\n\n##### \u8abf\u6574\u67e5\u8a62\u7684\u5feb\u53d6\n\n* \u5728\u67d0\u4e9b\u60c5\u6cc1\u4e0b\uff0c[\u67e5\u8a62\u5feb\u53d6](http://dev.mysql.com/doc/refman/5.7/en/query-cache) \u53ef\u80fd\u6703\u5c0e\u81f4 [\u6027\u80fd\u554f\u984c](https://www.percona.com/blog/2014/01/28/10-mysql-performance-tuning-settings-after-installation/)\u3002\n\n##### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [MySQL \u67e5\u8a62\u512a\u5316\u5c0f\u63d0\u793a](http://20bits.com/article/10-tips-for-optimizing-mysql-queries-that-dont-suck)\n* [\u70ba\u4ec0\u9ebc\u4f7f\u7528 VARCHAR(255) \u5f88\u5e38\u898b](http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l)\n* [Null \u503c\u662f\u5982\u4f55\u5f71\u97ff\u8cc7\u6599\u5eab\u6027\u80fd](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)\n* [\u6162 SQL log \u67e5\u8a62](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html)\n\n### NoSQL\n\nNoSQL \u6307\u7684\u662f **\u9375-\u503c\u5c0d\u7684\u8cc7\u6599\u5eab**\u3001**\u6587\u4ef6\u985e\u578b\u8cc7\u6599\u5eab**\u3001**\u5217\u5132\u5b58\u578b\u8cc7\u6599\u5eab** \u548c **\u5716\u5f62\u8cc7\u6599\u5eab** \u7b49\u7684\u7d71\u7a31\u3002\u8cc7\u6599\u662f\u975e\u6b63\u898f\u5316\u7684\uff0cJoin \u5927\u90e8\u5206\u5728\u61c9\u7528\u7aef\u5b8c\u6210\u3002\u5927\u591a\u6578\u7684 NoSQL \u8cc7\u6599\u5eab\u7121\u6cd5\u771f\u6b63\u5be6\u73fe ACID \u7684 transaction\uff0c\u4ed6\u5011\u901a\u5e38\u6703\u652f\u63f4 [\u6700\u7d42\u4e00\u81f4\u6027](#\u6700\u7d42\u4e00\u81f4\u6027)\u3002\n\n**BASE** \u901a\u5e38\u88ab\u7528\u4f86\u63cf\u8ff0 NoSQL \u8cc7\u6599\u5eab\u7684\u7279\u6027\u3002  \u8ddf [CAP \u7406\u8ad6](#cap \u7406\u8ad6) \u76f8\u6bd4\uff0cBASE \u5f37\u8abf\u53ef\u7528\u6027\u800c\u975e\u4e00\u81f4\u6027\u3002\n\n* **\u57fa\u672c\u53ef\u7528** - \u7cfb\u7d71\u4fdd\u8b49\u53ef\u7528\u6027\u3002\n* **\u8edf\u72c0\u614b** - \u7cfb\u7d71\u7684\u72c0\u614b\u53ef\u80fd\u96a8\u8457\u6642\u9593\u6539\u8b8a\uff0c\u5373\u4f7f\u5728\u6c92\u6709\u8f38\u5165\u7684\u60c5\u6cc1\u4e0b\u4e5f\u662f\u5982\u6b64\u3002\n* **\u6700\u7d42\u4e00\u81f4\u6027** - \u7d93\u904e\u4e00\u6bb5\u6642\u9593\u4e4b\u5f8c\uff0c\u5728\u6c92\u6709\u6536\u5230\u4efb\u4f55\u8f38\u5165\u7684\u60c5\u6cc1\u4e0b\uff0c\u7cfb\u7d71\u6700\u7d42\u6703\u9054\u5230\u4e00\u81f4\u3002\n\n\u9664\u4e86\u5728 [SQL \u6216 NoSQL](#sql-\u6216-nosql) \u4e4b\u9593\u505a\u9078\u64c7\uff0c\u4e86\u89e3\u54ea\u7a2e\u985e\u578b\u7684 NoSQL \u8cc7\u6599\u5eab\u6700\u9069\u5408\u4f60\u7684\u9700\u6c42\u4e5f\u662f\u5f88\u6709\u5e6b\u52a9\u7684\u3002\u6211\u5011\u6703\u5728\u4e0b\u4e00\u7bc0\u4e2d\u5feb\u901f\u77ad\u89e3\u4e00\u4e0b **\u9375-\u503c\u5c0d\u7684\u8cc7\u6599\u5eab**\u3001**\u6587\u4ef6\u985e\u578b\u8cc7\u6599\u5eab**\u3001**\u5217\u5132\u5b58\u578b\u8cc7\u6599\u5eab** \u548c **\u5716\u5f62\u8cc7\u6599\u5eab** \u7b49\u8cc7\u6599\u5eab\u3002\n\n#### \u9375-\u503c\u5c0d\u7684\u8cc7\u6599\u5eab\n\n> \u62bd\u8c61\u6a21\u578b\uff1ahash table\n\n\u4e00\u500b\u9375\u503c\u5c0d\u7684\u8cc7\u6599\u5eab\u901a\u5e38\u53ef\u4ee5\u5be6\u73fe O(1) \u6642\u9593\u5167\u7684\u8b80\u5beb\uff0c\u540c\u6642\uff0c\u5b83\u7684\u80cc\u5f8c\u901a\u5e38\u4f7f\u7528\u8a18\u61b6\u9ad4\u6216 SSD \u7576\u4f5c\u5132\u5b58\u5a92\u4ecb\u3002\u8cc7\u6599\u5728\u5132\u5b58\u6642\uff0c\u53ef\u4ee5\u6309\u7167 [\u5b57\u5178\u9806\u5e8f](https://en.wikipedia.org/wiki/Lexicographical_order) \u4f86\u7dad\u8b77\u9375\u7684\u6578\u503c\uff0c\u9032\u800c\u5be6\u8e10\u9375\u6578\u503c\u7684\u9ad8\u6548\u7387\u6aa2\u7d22\u3002\u9375\u503c\u5c0d\u7684\u8cc7\u6599\u5eab\u4e5f\u53ef\u4ee5\u7528\u4f86\u5132\u5b58\u503c\u7684 metadata\u3002\n\n\u9375\u503c\u5c0d\u8cc7\u6599\u5eab\u7684\u6548\u80fd\u5f88\u597d\uff0c\u901a\u5e38\u7528\u4f86\u5132\u5b58\u7c21\u55ae\u7684\u8cc7\u6599\u6a21\u578b\u6216\u662f\u983b\u7e41\u4fee\u6539\u7684\u8cc7\u6599\uff0c\u5982\u653e\u5728\u8a18\u61b6\u9ad4\u4e2d\u7684\u5feb\u53d6\u5c64\u3002\u9375\u503c\u5c0d\u8cc7\u6599\u5eab\u6240\u63d0\u4f9b\u7684\u64cd\u4f5c\u6709\u9650\uff0c\u5982\u679c\u8981\u9032\u884c\u66f4\u591a\u64cd\u4f5c\uff0c\u6703\u5c07\u5176\u653e\u5728\u61c9\u7528\u7aef\u9032\u884c\u3002\n\n\u9375\u503c\u5c0d\u7684\u8cc7\u6599\u5eab\u5728\u67d0\u4e9b\u60c5\u6cc1\u4e0b\uff0c\u662f\u66f4\u8907\u96dc\u7cfb\u7d71\u7684\u57fa\u790e\uff0c\u4f8b\u5982\u5716\u5f62\u8cc7\u6599\u5eab\u6216\u662f\u6587\u4ef6\u985e\u578b\u7684\u8cc7\u6599\u5eab\u3002\n\n##### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u9375\u503c\u5c0d\u8cc7\u6599\u5eab](https://en.wikipedia.org/wiki/Key-value_database)\n* [\u9375\u503c\u5c0d\u8cc7\u6599\u5eab\u7684\u7f3a\u9ede](http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or)\n* [Redis \u67b6\u69cb](http://qnimate.com/overview-of-redis-architecture/)\n* [Memcached \u67b6\u69cb](https://adayinthelifeof.nl/2011/02/06/memcache-internals/)\n\n#### \u6587\u4ef6\u985e\u578b\u8cc7\u6599\u5eab\n\n> \u62bd\u8c61\u6a21\u578b\uff1a\u5c07\u6587\u4ef6\u7576\u505a\u503c\u7684\u9375\u503c\u5c0d\u8cc7\u6599\u5eab\n\n\u6587\u4ef6\u985e\u578b\u7684\u8cc7\u6599\u5eab\u662f\u4ee5\u6587\u4ef6 (XML\u3001JSON\u3001\u4e8c\u9032\u5236\u6a94\u6848\u7b49) \u70ba\u6838\u5fc3\uff0c\u6587\u4ef6\u672c\u8eab\u5132\u5b58\u4e86\u5c0d\u61c9\u7269\u4ef6\u7684\u6240\u6709\u8cc7\u8a0a\u3002\u9019\u7a2e\u985e\u578b\u7684\u8cc7\u6599\u5eab\u63d0\u4f9b\u4e86 API \u6216\u76f8\u95dc\u7684\u67e5\u8a62\u65b9\u6cd5\u4f86\u6839\u64da\u5132\u5b58\u7269\u4ef6\u672c\u8eab\u7684\u7279\u6027\u4f86\u5be6\u73fe\u67e5\u8a62\u529f\u80fd\u3002\u8acb\u6ce8\u610f\uff0c\u8a31\u591a\u9375\u503c\u5c0d\u8cc7\u6599\u5eab\u6709\u5132\u5b58 metadata \u7684\u7279\u6027\uff0c\u9019\u4e5f\u6a21\u7cca\u4e86\u9019\u5169\u7a2e\u8cc7\u6599\u5eab\u4e4b\u9593\u7684\u754c\u7dda\u3002\n\n\u6839\u64da\u5e95\u5c64\u5be6\u4f5c\u7684\u4e0d\u540c\uff0c\u6587\u4ef6\u8cc7\u6599\u5eab\u53ef\u4ee5\u6839\u64da\u96c6\u5408\u3001\u6a19\u7c64\u3001metadata \u6216\u76ee\u9304\u7b49\u4f86\u7d44\u7e54\u800c\u6210\u3002\u5118\u7ba1\u4e0d\u540c\u7684\u6587\u4ef6\u53ef\u4ee5\u88ab\u7d44\u7e54\u5728\u4e00\u8d77\u6216\u662f\u5206\u6210\u4e00\u7d44\uff0c\u4f46\u5f7c\u6b64\u4e4b\u9593\u53ef\u80fd\u5177\u6709\u5b8c\u5168\u4e0d\u540c\u7684\u5167\u5bb9\u3002\n\n\u67d0\u4e9b\u6587\u4ef6\u578b\u8cc7\u6599\u5eab\uff0c\u4f8b\u5982 [MongoDB](https://www.mongodb.com/mongodb-architecture) \u548c [CouchDB](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/) \u540c\u6a23\u63d0\u4f9b\u4e86\u985e\u4f3c\u65bc SQL \u67e5\u8a62\u8a9e\u53e5\u7684\u529f\u80fd\u4f86\u5be6\u73fe\u8907\u96dc\u7684\u67e5\u8a62\u3002[DynamoDB](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf)\u5247\u540c\u6642\u652f\u63f4\u4e86\u9375\u503c\u5c0d\u5132\u5b58\u548c\u6587\u4ef6\u985e\u578b\u5132\u5b58\u7684\u529f\u80fd\u3002\n\n\u6587\u4ef6\u985e\u578b\u7684\u8cc7\u6599\u5eab\u5177\u5099\u9ad8\u5ea6\u9748\u6d3b\u6027\uff0c\u901a\u5e38\u7528\u65bc\u8655\u7406\u5076\u723e\u8b8a\u5316\u7684\u8cc7\u6599\u3002\n\n##### \u5ef6\u4f38\u95b1\u8b80\n\n* [\u6587\u4ef6\u985e\u578b\u7684\u8cc7\u6599\u5eab](https://en.wikipedia.org/wiki/Document-oriented_database)\n* [MongoDB \u67b6\u69cb](https://www.mongodb.com/mongodb-architecture)\n* [CouchDB \u67b6\u69cb](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/)\n* [Elasticsearch \u67b6\u69cb](https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up)\n\n#### \u5217\u5132\u5b58\u578b\u8cc7\u6599\u5eab\n\n<p align=\"center\">\n  <img src=\"images/n16iOGk.png\">\n  <br/>\n  <i><a href=http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html>\u4f86\u6e90\uff1aSQL \u548c NoSQL\uff0c\u7c21\u77ed\u7684\u6b77\u53f2\u4ecb\u7d39</a></i>\n</p>\n\n> \u62bd\u8c61\u6a21\u578b\uff1a \u5de2\u72c0\u7684 Map `ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>`\n\n\u5217\u5132\u5b58\u578b\u8cc7\u6599\u5eab\u7684\u57fa\u672c\u55ae\u5143\u662f\u4e00\u5217 (\u540d\u7a31/\u503c\u70ba\u4e00\u7d44)\u3002\u6bcf\u4e00\u5217\u53ef\u4ee5\u88ab\u5206\u5230\u4e00\u500b\u5217\u7684\u65cf\u7fa4\u4e2d(\u985e\u4f3c\u65bc SQL \u4e2d\u7684\u8cc7\u6599\u8868)\u3002\u800c\u6bcf\u500b\u5217\u65cf\u7fa4\u4e4b\u4e0a\u9084\u53ef\u4ee5\u6709\u4e00\u500b\u8d85\u7d1a\u5217\u7fa4\u3002\u4f60\u53ef\u4ee5\u900f\u904e\u5217\u7684\u9375\u503c\u4f86\u5b58\u53d6\u6bcf\u4e00\u5217\uff0c\u6bcf\u500b\u503c\u90fd\u6709\u4e00\u500b\u6642\u9593\u6233\u8a18\u4f86\u89e3\u6c7a\u7248\u672c\u554f\u984c\u3002\n\nGoogle \u767c\u8868\u4e86\u7b2c\u4e00\u500b\u5217\u5132\u5b58\u578b\u8cc7\u6599\u5eab [Bigtable](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)\uff0c\u9019\u5f71\u97ff\u4e86\u7528\u65bc Hadoop \u7cfb\u7d71\u4e2d\u958b\u6e90\u7684 [HBase](https://www.mapr.com/blog/in-depth-look-hbase-architecture) often-used in the Hadoop ecosystem, \u548c Facebook \u7684 [Cassandra](http://docs.datastax.com/en/archived/cassandra/2.0/cassandra/architecture/architectureIntro_c.html)\u3002\u9019\u4e9b\u8cc7\u6599\u5eab\u7684\u5132\u5b58\u7cfb\u7d71\u628a\u9375\u503c\u5229\u7528\u5b57\u6bcd\u9806\u5e8f\u4f86\u5132\u5b58\uff0c\u53ef\u4ee5\u6709\u6548\u7387\u7684\u4f86\u8b80\u53d6\u3002\n\n\u5217\u5132\u5b58\u578b\u614b\u7684\u8cc7\u6599\u7684\u63d0\u4f9b\u4e86\u9ad8\u53ef\u7528\u548c\u9ad8\u64f4\u5c55\u6027\uff0c\u901a\u5e38\u88ab\u7528\u5728\u5927\u91cf\u8cc7\u6599\u7684\u5132\u5b58\u4e0a\u3002\n\n##### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [SQL \u548c NoSQL \u6b77\u53f2\u7c21\u4ecb](http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html)\n* [Bigtable \u67b6\u69cb](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)\n* [HBase \u67b6\u69cb](https://www.mapr.com/blog/in-depth-look-hbase-architecture)\n* [Cassandra \u67b6\u69cb](http://docs.datastax.com/en/archived/cassandra/2.0/cassandra/architecture/architectureIntro_c.html)\n\n#### \u5716\u5f62\u8cc7\u6599\u5eab\n\n<p align=\"center\">\n  <img src=\"images/fNcl65g.png\">\n  <br/>\n  <i><a href=https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png>\u4f86\u6e90\uff1a \u5716\u5f62\u5316\u8cc7\u6599\u5eab</a></i>\n</p>\n\n> \u62bd\u8c61\u6a21\u578b\uff1a\u5716\n\n\u5728\u5716\u5f62\u8cc7\u6599\u5eab\u4e2d\uff0c\u6bcf\u4e00\u500b\u7bc0\u9ede\u6703\u5c0d\u61c9\u4e00\u689d\u7d00\u9304\uff0c\u800c\u6bcf\u500b\u908a\u63cf\u8ff0\u5169\u500b\u7bc0\u9ede\u4e4b\u9593\u7684\u95dc\u4fc2\u3002\u5716\u5f62\u8cc7\u6599\u5eab\u91dd\u5c0d\u8868\u793a\u5916\u4f86\u9375(Foreign Key)\u773e\u591a\u7684\u8907\u96dc\u95dc\u806f\u6216\u591a\u5c0d\u591a\u95dc\u806f\u9032\u884c\u512a\u5316\u3002\n\n\u5716\u5f62\u8cc7\u6599\u5eab\u70ba\u4e86\u5132\u5b58\u8907\u96dc\u7684\u8cc7\u6599\u7d50\u69cb\uff0c\u4f8b\u5982\u793e\u7fa4\u7db2\u8def\uff0c\u63d0\u4f9b\u4e86\u5f88\u9ad8\u7684\u6027\u80fd\u3002\u4ed6\u5011\u76f8\u5c0d\u8f03\u65b0\uff0c\u5c1a\u672a\u88ab\u5ee3\u6cdb\u4f7f\u7528\uff0c\u67e5\u8a62\u5de5\u5177\u6216\u8cc7\u6e90\u6bd4\u8f03\u96e3\u53d6\u5f97\uff0c\u8a31\u591a\u9019\u7a2e\u985e\u578b\u7684\u8cc7\u6599\u5eab\u53ea\u80fd\u900f\u904e [REST API](#representational-state-transfer-rest) \u4f86\u5b58\u53d6\u3002\n\n##### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u5716\u5f62\u8cc7\u6599\u5eab](https://en.wikipedia.org/wiki/Graph_database)\n* [Neo4j](https://neo4j.com/)\n* [FlockDB](https://blog.twitter.com/2010/introducing-flockdb)\n\n#### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\uff1aNoSQL\n\n* [\u8cc7\u6599\u5eab\u8853\u8a9e\u89e3\u91cb](http://stackoverflow.com/questions/3342497/explanation-of-base-terminology)\n* [NoSQL \u8cc7\u6599\u5eab\uff1a\u8abf\u67e5\u8207\u6c7a\u7b56\u6307\u5357](https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq)\n* [\u53ef\u64f4\u5c55\u6027](http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n* [NoSQL \u4ecb\u7d39](https://www.youtube.com/watch?v=qI_g07C_Q5I)\n* [NoSQL \u6a21\u5f0f](http://horicky.blogspot.com/2009/11/nosql-patterns.html)\n\n### SQL \u6216 NoSQL\n\n<p align=\"center\">\n  <img src=\"images/wXGqG5f.png\">\n  <br/>\n  <i><a href=https://www.infoq.com/articles/Transition-RDBMS-NoSQL/>\u4f86\u6e90\uff1a\u5f9e RDBMS \u8f49\u63db\u5230 NoSQL</a></i>\n</p>\n\n\u9078\u64c7 **SQL** \u7684\u539f\u56e0\uff1a\n\n* \u7d50\u69cb\u5316\u8cc7\u6599\n* \u56b4\u683c\u7684 schema\n* \u95dc\u9023\u5f0f\u8cc7\u6599\n* \u9700\u8981\u8907\u96dc\u7684 join\n* \u4e8b\u52d9\n* \u6e05\u6670\u7684\u64f4\u5c55\u6a21\u5f0f\n* \u65e2\u6709\u8cc7\u6e90\u66f4\u8c50\u5bcc\uff1a\u958b\u767c\u8005\u3001\u793e\u7fa4\u3001\u539f\u59cb\u78bc\u3001\u5de5\u5177\u7b49\n* \u900f\u904e\u7d22\u5f15\u67e5\u8a62\u5f88\u5feb\n\n\u9078\u64c7 **NoSQL** \u7684\u539f\u56e0\uff1a\n\n* \u534a\u7d50\u69cb\u5316\u8cc7\u6599\n* \u52d5\u614b\u6216\u5177\u6709\u5f48\u6027\u7684 schema\n* \u975e\u95dc\u9023\u5f0f\u8cc7\u6599\n* \u4e0d\u9700\u8981\u8907\u96dc\u7684 joins\n* \u5132\u5b58 TB (\u6216 PB) \u7b49\u7d1a\u7684\u8cc7\u6599\n* \u9ad8\u8cc7\u6599\u5bc6\u96c6\u91cf\u7684\u5de5\u4f5c\u8ca0\u8f09\n* IOPS \u7684\u9ad8\u541e\u5410\u91cf\n\n\u9069\u5408\u4f7f\u7528 NoSQL \u7684\u7bc4\u4f8b\uff1a\n\n* \u5feb\u901f\u5730\u5f97\u5230\u9ede\u64ca\u7684\u65e5\u8a8c\u8cc7\u6599\n* \u6392\u884c\u699c\u6216\u5f97\u5206\u8cc7\u6599\n* \u66ab\u6642\u6027\u7684\u8cc7\u6599\uff0c\u50cf\u662f\u8cfc\u7269\u8eca\n* \u7d93\u5e38\u983b\u7e41\u5b58\u53d6\u7684\u8cc7\u6599\u8868\n* Metadata \u6216 \u67e5\u627e\u8cc7\u6599\u8868\n\n##### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\uff1a SQL \u6216 NoSQL\n\n* [\u64f4\u5c55\u4f60\u7684\u4f7f\u7528\u8005\u5230\u7b2c\u4e00\u500b\u4e00\u5343\u842c\u7b49\u7d1a](https://www.youtube.com/watch?v=vg5onp8TU6Q)\n* [SQL \u548c NoSQL \u7684\u4e0d\u540c](https://www.sitepoint.com/sql-vs-nosql-differences/)\n\n## \u5feb\u53d6\n\n<p align=\"center\">\n  <img src=\"images/Q6z24La.png\">\n  <br/>\n  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>\u4f86\u6e90\uff1a\u53ef\u64f4\u5c55\u7684\u7cfb\u7d71\u8a2d\u8a08\u6a21\u5f0f</a></i>\n</p>\n\n\u5feb\u53d6\u53ef\u4ee5\u63d0\u9ad8\u9801\u9762\u8b80\u53d6\u901f\u5ea6\uff0c\u4e26\u4e14\u6e1b\u5c11\u4f3a\u670d\u5668\u548c\u8cc7\u6599\u5eab\u7684\u8ca0\u8f09\u3002\u5728\u9019\u7a2e\u6a21\u578b\u4e2d\uff0c\u5206\u6d3e\u5668\u6703\u5148\u6aa2\u67e5\u8a72\u6b21\u8acb\u6c42\u4e4b\u524d\u662f\u5426\u66fe\u7d93\u88ab\u56de\u61c9\u904e\uff0c\u5982\u679c\u6709\u7684\u8a71\uff0c\u5247\u76f4\u63a5\u62ff\u4e4b\u524d\u7684\u7d50\u679c\u8fd4\u56de\uff0c\u907f\u514d\u771f\u6b63\u57f7\u884c\u8655\u7406\u7684\u7a0b\u5e8f\u3002\n\n\u8cc7\u6599\u5eab\u5728\u8cc7\u6599\u5747\u52fb\u5206\u5e03\u7684\u60c5\u6cc1\u4e0b\uff0c\u8b80\u53d6\u548c\u5beb\u5165\u7684\u6548\u80fd\u662f\u6700\u597d\u7684\u3002\u4f46\u662f\u71b1\u9580\u7684\u8cc7\u6599\u6703\u8b93\u8b80\u53d6\u5206\u4f48\u4e0d\u5747\uff0c\u5982\u6b64\u4e00\u4f86\u5c31\u6703\u9020\u6210\u6548\u80fd\u74f6\u9838\u3002\u5728\u8cc7\u6599\u5eab\u524d\u589e\u52a0\u4e00\u500b\u5feb\u53d6\uff0c\u5c31\u53ef\u4ee5\u6e1b\u5c11\u8ca0\u8f09\u4e0d\u5747\u548c\u7a81\u767c\u6d41\u91cf\u6240\u9020\u6210\u7684\u5f71\u97ff\u3002\n\n### \u5ba2\u6236\u7aef\u5feb\u53d6\n\n\u5feb\u53d6\u53ef\u4ee5\u5728\u5ba2\u6236\u7aef(\u4f5c\u696d\u7cfb\u7d71\u6216\u700f\u89bd\u5668)\u3001[\u4f3a\u670d\u5668\u7aef](#\u53cd\u5411\u4ee3\u7406\u4f3a\u670d\u5668) \u6216\u4e0d\u540c\u7684\u7de9\u5b58\u5c64\u7b49\u3002\n\n### CDN \u5feb\u53d6\n\n[\u5167\u5bb9\u50b3\u905e\u7db2\u8def(CDN)](#\u5167\u5bb9\u50b3\u905e\u7db2\u8def(CDN)) \u4e5f\u88ab\u8996\u70ba\u4e00\u7a2e\u5feb\u53d6\u3002\n\n### \u7db2\u7ad9\u4f3a\u670d\u5668\u5feb\u53d6\n\n[\u53cd\u5411\u4ee3\u7406](#\u53cd\u5411\u4ee3\u7406\u7db2\u7ad9\u4f3a\u670d\u5668) \u4ee5\u53ca\u50cf\u662f [Varnish](https://www.varnish-cache.org/) \u7b49\u7684\u5feb\u53d6\u670d\u52d9\u53ef\u4ee5\u63d0\u4f9b\u975c\u614b\u548c\u52d5\u614b\u5167\u5bb9\u3002\u7db2\u7ad9\u4f3a\u670d\u5668\u4e5f\u53ef\u4ee5\u5feb\u53d6\u4f7f\u7528\u8005\u8acb\u6c42\uff0c\u8fd4\u56de\u7d50\u679c\uff0c\u800c\u4e0d\u9700\u8981\u771f\u6b63\u7684\u8655\u7406\u9019\u4e9b\u8acb\u6c42\u3002\n\n### \u8cc7\u6599\u5eab\u5feb\u53d6\n\n\u8cc7\u6599\u5eab\u7684\u9810\u8a2d\u8a2d\u5b9a\u4e2d\u901a\u5e38\u5305\u542b\u4e86\u5feb\u53d6\u7684\u7d1a\u5225\uff0c\u91dd\u5c0d\u4e00\u822c\u7684\u4f7f\u7528\u9032\u884c\u4e86\u512a\u5316\u3002\u4f60\u53ef\u4ee5\u91dd\u5c0d\u4e0d\u540c\u7684\u60c5\u6cc1\u8abf\u6574\u9019\u4e9b\u8a2d\u5b9a\u4f86\u9032\u4e00\u6b65\u63d0\u9ad8\u6548\u80fd\u3002\n\n### \u61c9\u7528\u7a0b\u5f0f\u5feb\u53d6\n\n\u57fa\u65bc\u8a18\u61b6\u9ad4\u7684\u5feb\u53d6\uff0c\u50cf\u662f Memcached \u548c Redis \u662f\u4e00\u7a2e\u5728\u61c9\u7528\u5c64\u548c\u8cc7\u6599\u5eab\u4e4b\u9593\u7684\u9375\u503c\u5c0d\u5feb\u53d6\u3002\u7531\u65bc\u8cc7\u6599\u4fdd\u5b58\u5728\u8a18\u61b6\u9ad4\u4e2d\uff0c\u6bd4\u8d77\u5b58\u653e\u5728\u786c\u789f\u4e2d\u7684\u8cc7\u6599\u5eab\u5728\u5b58\u53d6\u4e0a\u8981\u5feb\u5f97\u591a\u3002\u8a18\u61b6\u9ad4\u7684\u9650\u5236\u4e5f\u6bd4\u786c\u789f\u66f4\u591a\uff0c\u6240\u4ee5\u50cf\u662f [least recently used (LRU)](https://en.wikipedia.org/wiki/Cache_algorithms#Least_Recently_Used) \u7684 [cache invalidation](https://en.wikipedia.org/wiki/Cache_algorithms) \u65b9\u6cd5\u53ef\u4ee5\u8b93 '\u71b1\u9580\u8cc7\u6599' \u653e\u5728\u8a18\u61b6\u9ad4\u4e2d\uff0c\u800c\u6bd4\u8f03 '\u51b7\u9580' \u7684\u8cc7\u6599\u5728\u8a18\u61b6\u9ad4\u4e2d\u5931\u6548\u3002\n\nRedis \u9084\u6709\u4ee5\u4e0b\u984d\u5916\u7684\u529f\u80fd\uff1a\n\n* \u6301\u4e45\u6027\u7684\u8a2d\u5b9a\n* \u5167\u5efa\u4e00\u4e9b\u8cc7\u6599\u7d50\u69cb\uff0c\u50cf\u662f Set \u6216 List\n\n\u4f60\u53ef\u4ee5\u5feb\u53d6\u7684\u7d1a\u5225\u6709\u597d\u5e7e\u7a2e\uff0c\u5927\u81f4\u4e0a\u5206\u70ba\u5169\u985e\uff1a**\u8cc7\u6599\u5eab\u67e5\u8a62** \u548c **\u7269\u4ef6**\uff1a\n\n* \u8a18\u9304\u7d1a\u5225\n* \u67e5\u8a62\u7d1a\u5225\n* \u5b8c\u6574\u7684\u53ef\u5e8f\u5217\u5316\u7269\u4ef6\n* \u5b8c\u6574\u7684 HTML\n\n\u4e00\u822c\u4f86\u8aaa\uff0c\u4f60\u61c9\u8a72\u907f\u514d\u6587\u4ef6\u6a94\u6848\u7684\u5feb\u53d6\uff0c\u56e0\u70ba\u9019\u6703\u8b93\u8907\u88fd\u548c\u81ea\u52d5\u64f4\u5c55\u8b8a\u5f97\u56f0\u96e3\u3002\n\n### \u8cc7\u6599\u5eab\u67e5\u8a62\u7d1a\u5225\u7684\u5feb\u53d6\n\n\u7576\u4f60\u5c07\u67e5\u8a62\u8cc7\u6599\u5eab\u7684\u67e5\u8a62\u8a9e\u53e5\u7684 hash \u503c\u548c\u67e5\u8a62\u7d50\u679c\u5132\u5b58\u5230\u5feb\u53d6\u4e2d\u6642\uff0c\u9019\u7a2e\u65b9\u6cd5\u6703\u9047\u5230\u4ee5\u4e0b\u554f\u984c\uff1a\n\n* \u7576\u4f60\u7684\u67e5\u8a62\u5f88\u8907\u96dc\u6642\uff0c\u5f88\u96e3\u522a\u9664\u5feb\u53d6\u5167\u5bb9\n* \u5982\u679c\u67d0\u500b\u8cc7\u6599\u8868\u4e2d\u7684\u67d0\u500b\u6b04\u4f4d\u503c\u6539\u8b8a\u6642\uff0c\u9700\u8981\u522a\u9664\u6240\u6709\u53ef\u80fd\u5305\u542b\u8a72\u6b04\u4f4d\u503c\u7684\u5feb\u53d6\u7d50\u679c\u3002\n\n### \u7269\u4ef6\u7d1a\u5225\u7684\u5feb\u53d6\n\n\u5c07\u8cc7\u6599\u8996\u70ba\u7269\u4ef6\uff0c\u5c31\u50cf\u5c0d\u5f85\u4f60\u7684\u7a0b\u5f0f\u78bc\u4e00\u6a23\u3002\u8b93\u61c9\u7528\u7a0b\u5f0f\u5c07\u8cc7\u6599\u5f9e\u8cc7\u6599\u5eab\u4e2d\u7d44\u5408\u5230\u985e\u5225\u5be6\u4f8b\u6216\u8cc7\u6599\u7d50\u69cb\u4e2d\uff1a\n\n* \u5982\u679c\u7269\u4ef6\u5167\u7684\u57fa\u672c\u8cc7\u6599\u5df2\u7d93\u6539\u8b8a\uff0c\u90a3\u61c9\u8a72\u8981\u5f9e\u5feb\u53d6\u4e2d\u522a\u9664\u9019\u500b\u7269\u4ef6\n* \u5141\u8a31\u7570\u6b65\u8655\u7406\uff1aworkers \u900f\u904e\u4f7f\u7528\u6700\u65b0\u7684\u5feb\u53d6\u4f86\u7d44\u88dd\u7269\u4ef6\n\n\u5efa\u8b70\u5feb\u53d6\u7684\u8cc7\u6599\uff1a\n\n* \u4f7f\u7528\u8005 sessions\n* \u5b8c\u6574\u6e32\u67d3\u7684\u9801\u9762\n* \u6d3b\u52d5\u8cc7\u8a0a\n* \u4f7f\u7528\u8005\u8cc7\u6599\u5716\u8868\n\n### \u4ec0\u9ebc\u6642\u5019\u8981\u66f4\u65b0\u5feb\u53d6\n\n\u7531\u65bc\u4f60\u53ea\u80fd\u5728\u5feb\u53d6\u4e2d\u5132\u5b58\u6709\u9650\u7684\u8cc7\u6599\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u9078\u64c7\u4e00\u500b\u9069\u7528\u7684\u5feb\u53d6\u7b56\u7565\u3002\n\n#### \u5feb\u53d6\u6a21\u5f0f\n\n<p align=\"center\">\n  <img src=\"images/ONjORqk.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>\u8cc7\u6599\u4f86\u6e90\uff1a\u5f9e\u5feb\u53d6\u5230\u8a18\u61b6\u9ad4\u8cc7\u6599\u7db2\u683c</a></i>\n</p>\n\n\u61c9\u7528\u7a0b\u5f0f\u8ca0\u8cac\u5f9e\u5132\u5b58\u88dd\u7f6e\u4e2d\u9032\u884c\u8b80\u53d6\u53ca\u5beb\u5165\u3002\u5feb\u53d6\u4e0d\u76f4\u63a5\u548c\u5132\u5b58\u88dd\u7f6e\u9032\u884c\u4e92\u52d5\uff0c\u61c9\u7528\u7a0b\u5f0f\u6703\u57f7\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n* \u5f9e\u5feb\u53d6\u4e2d\u5c0b\u627e\u7d00\u9304\uff0c\u5982\u679c\u6240\u9700\u8981\u7684\u7d00\u9304\u5728\u5feb\u53d6\u4e2d\u627e\u4e0d\u5230\u6642\n* \u5f9e\u8cc7\u6599\u5eab\u4e2d\u8b80\u53d6\u7d00\u9304\n* \u5c07\u8a72\u7b46\u8a18\u9304\u5132\u5b58\u5230\u5feb\u53d6\n* \u5c07\u8cc7\u6599\u8fd4\u56de\n\n```python\ndef get_user(self, user_id):\n    user = cache.get(\"user.{0}\", user_id)\n    if user is None:\n        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)\n        if user is not None:\n            key = \"user.{0}\".format(user_id)\n            cache.set(key, json.dumps(user))\n    return user\n```\n\n[Memcached](https://memcached.org/) \u901a\u5e38\u88ab\u7528\u5728\u5feb\u53d6\u4e0a\u3002\n\n\u52a0\u5165\u5feb\u53d6\u4e2d\u7684\u8cc7\u6599\u8b80\u53d6\u901f\u5ea6\u5f88\u5feb\uff0c\u5feb\u53d6\u7684\u6a21\u5f0f\u4e5f\u88ab\u7a31\u70ba\u5ef6\u9072\u8b80\u53d6\u3002\u53ea\u6709\u88ab\u8acb\u6c42\u904e\u7684\u8cc7\u6599\u6703\u88ab\u52a0\u5165\u5230\u5feb\u53d6\u4e2d\uff0c\u907f\u514d\u6c92\u6709\u88ab\u8acb\u6c42\u7684\u8cc7\u6599\u4f54\u6eff\u4e86\u5feb\u53d6\u7a7a\u9593\u3002\n\n##### \u5feb\u53d6\u7684\u7f3a\u9ede\n\n* \u7576\u8acb\u6c42\u7684\u8cc7\u6599\u4e0d\u5728\u5feb\u53d6\u4e2d\u6642\uff0c\u5c31\u9700\u8981\u7d93\u904e\u4e09\u500b\u6b65\u9a5f\u4f86\u7372\u5f97\u8cc7\u6599\uff0c\u9019\u6703\u5c0e\u81f4\u660e\u986f\u7684\u5ef6\u9072\u3002\n* \u5982\u679c\u8cc7\u6599\u5eab\u4e2d\u7684\u8cc7\u6599\u88ab\u66f4\u65b0\u4e86\uff0c\u6703\u5c0e\u81f4\u5feb\u53d6\u4e2d\u7684\u8cc7\u6599\u904e\u6642\uff0c\u9019\u9700\u8981\u900f\u904e\u8a2d\u5b9a TTL \u5f37\u5236\u66f4\u65b0\u5feb\u53d6\uff0c\u6216\u900f\u904e\u76f4\u63a5\u66f4\u65b0\u6a21\u5f0f\u4f86\u89e3\u6c7a\u9019\u7a2e\u554f\u984c\u3002\n* \u7576\u5feb\u53d6\u7684\u67d0\u500b\u7bc0\u9ede\u767c\u751f\u6545\u969c\u6642\uff0c\u6703\u9700\u8981\u88ab\u4e00\u500b\u65b0\u7684\u7bc0\u9ede\u53d6\u4ee3\uff0c\u9019\u6703\u5c0e\u81f4\u5ef6\u9072\u3002\n\n#### \u5beb\u5165\u6a21\u5f0f\n\n<p align=\"center\">\n  <img src=\"images/0vBc0hN.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>\u8cc7\u6599\u4f86\u6e90\uff1a\u53ef\u7372\u5c55\u6027\u3001\u53ef\u7528\u6027\u3001\u7a69\u5b9a\u6027\u8207\u6a21\u5f0f</a></i>\n</p>\n\n\u61c9\u7528\u7a0b\u5f0f\u4f7f\u7528\u5feb\u53d6\u7576\u4f5c\u4e3b\u8981\u7684\u8cc7\u6599\u5132\u5b58\u670d\u52d9\uff0c\u5c07\u8cc7\u6599\u5beb\u5165/\u8b80\u53d6\u5230\u5feb\u53d6\u4e2d\uff0c\u7531\u5feb\u53d6\u670d\u52d9\u8ca0\u8cac\u5411\u8cc7\u6599\u5eab\u8b80\u5beb\u8cc7\u6599\u3002\n\n* \u61c9\u7528\u7a0b\u5f0f\u5411\u5feb\u53d6\u5beb\u5165/\u8b80\u53d6\u8cc7\u6599\n* \u5feb\u53d6\u540c\u6b65\u7684\u5c07\u8cc7\u6599\u5beb\u5230\u8cc7\u6599\u5eab\u9032\u884c\u5132\u5b58\n* \u8fd4\u56de\u6240\u9700\u8981\u7684\u5167\u5bb9\n\n\u61c9\u7528\u7a0b\u5f0f\u7a0b\u5f0f\u78bc\uff1a\n\n```\nset_user(12345, {\"foo\":\"bar\"})\n```\n\n\u5feb\u53d6\u7a0b\u5f0f\u78bc\uff1a\n\n```python\ndef set_user(user_id, values):\n    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)\n    cache.set(user_id, user)\n```\n\n\u76f4\u5beb\u6a21\u5f0f\u56e0\u70ba\u5beb\u5165\u64cd\u4f5c\u7684\u7de3\u6545\uff0c\u662f\u4e00\u7a2e\u8f03\u6162\u7684\u64cd\u4f5c\uff0c\u4f46\u8b80\u53d6\u525b\u525b\u5beb\u5165\u7684\u8cc7\u6599\u6703\u5f88\u5feb\uff0c\u4f7f\u7528\u8005\u901a\u5e38\u6bd4\u8f03\u80fd\u63a5\u53d7\u66f4\u65b0\u8f03\u6162\uff0c\u4f46\u8b80\u53d6\u5feb\u901f\u7684\u60c5\u6cc1\u3002\u5728\u5feb\u53d6\u4e2d\u7684\u8cc7\u6599\u4e0d\u6703\u904e\u6642\u3002\n\n##### \u5beb\u5165\u6a21\u5f0f\u7684\u7f3a\u9ede\n\n* \u7576\u767c\u751f\u6545\u969c\u6216\u56e0\u70ba\u6c34\u5e73\u64f4\u5c55\u800c\u7522\u751f\u65b0\u7684\u7bc0\u9ede\u6642\uff0c\u65b0\u7684\u7bc0\u9ede\u4e2d\u5c07\u4e0d\u6703\u6709\u5feb\u53d6\u8cc7\u6599\uff0c\u76f4\u5230\u8cc7\u6599\u5eab\u66f4\u65b0\u70ba\u6b62\u3002\u5c07\u5feb\u53d6\u6a21\u5f0f\u548c\u5beb\u5165\u6a21\u5f0f\u4e00\u8d77\u4f7f\u7528\u53ef\u4ee5\u6e1b\u7de9\u9019\u7a2e\u73fe\u8c61\u3002\n* \u88ab\u5beb\u5165\u591a\u6578\u7684\u8cc7\u6599\u53ef\u80fd\u6c38\u9060\u90fd\u4e0d\u6703\u88ab\u8b80\u53d6\uff0c\u4f60\u53ef\u4ee5\u8a2d\u5b9a TTL \u4f86\u89e3\u6c7a\u9019\u7a2e\u554f\u984c\u3002\n\n#### \u4e8b\u5f8c\u5beb\u5165(\u56de\u5beb)\n\n<p align=\"center\">\n  <img src=\"images/rgSrvjG.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>\u8cc7\u6599\u4f86\u6e90\uff1a\u53ef\u7372\u5c55\u6027\u3001\u53ef\u7528\u6027\u3001\u7a69\u5b9a\u6027\u8207\u6a21\u5f0f</a></i>\n</p>\n\n\u5728\u4e8b\u5f8c\u5beb\u5165\u7684\u6a21\u5f0f\u4e2d\uff0c\u61c9\u7528\u7a0b\u5f0f\u6703\u57f7\u884c\u4ee5\u4e0b\u6b65\u9a5f\uff1a\n\n* \u5728\u5feb\u53d6\u4e2d\u65b0\u589e/\u66f4\u65b0\u8cc7\u6599\n* \u975e\u540c\u6b65\u7684\u5beb\u5165\u8cc7\u6599\u5230\u8cc7\u6599\u5132\u5b58\u55ae\u5143\uff0c\u63d0\u9ad8\u5beb\u5165\u7684\u6027\u80fd\n\n##### \u4e8b\u5f8c\u5beb\u5165\u7684\u7f3a\u9ede\n\n* \u5feb\u53d6\u53ef\u80fd\u5728\u8cc7\u6599\u6210\u529f\u5beb\u5165\u5230\u5132\u5b58\u55ae\u5143\u524d\u5c31\u4e1f\u5931\n* \u4e8b\u5f8c\u5beb\u5165\u6bd4\u8d77\u5feb\u53d6\u6a21\u5f0f\u6216\u662f\u76f4\u5beb\u6a21\u5f0f\u5728\u5be6\u4f5c\u4e0a\u66f4\u70ba\u8907\u96dc\n\n#### \u66f4\u65b0\u5f0f\u5feb\u53d6\n\n<p align=\"center\">\n  <img src=\"images/kxtjqgE.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>\u4f86\u6e90\uff1a\u5f9e\u5feb\u53d6\u5230\u8a18\u61b6\u9ad4\u8cc7\u6599\u7db2\u683c\u6280\u8853</a></i>\n</p>\n\n\u4f60\u53ef\u4ee5\u5c07\u5feb\u53d6\u8a2d\u5b9a\u70ba\u5728\u5230\u671f\u4e4b\u524d\u5c31\u81ea\u52d5\u66f4\u65b0\u70ba\u6700\u65b0\u5b58\u53d6\u7684\u5167\u5bb9\u3002\n\n\u5982\u679c\u5feb\u53d6\u53ef\u4ee5\u6e96\u78ba\u7684\u9810\u6e2c\u5c07\u4f86\u53ef\u80fd\u6703\u5b58\u53d6\u54ea\u4e9b\u8cc7\u6599\uff0c\u90a3\u81ea\u52d5\u66f4\u65b0\u53ef\u4ee5\u964d\u4f4e\u8b80\u53d6\u7684\u5ef6\u9072\u3002\n\n##### \u66f4\u65b0\u5f0f\u5feb\u53d6\u7684\u7f3a\u9ede\n\n* \u7121\u6cd5\u6e96\u78ba\u9810\u6e2c\u672a\u4f86\u6703\u4f7f\u7528\u7684\u8cc7\u6599\u6642\uff0c\u6703\u5c0e\u81f4\u6027\u80fd\u964d\u4f4e\uff0c\u9084\u4e0d\u5982\u4f7f\u7528\u5176\u4ed6\u6a21\u5f0f\u3002\n\n### \u5feb\u53d6\u7684\u7f3a\u9ede\n\n* \u9700\u8981\u4fdd\u6301\u5feb\u53d6\u548c\u8cc7\u6599\u5eab\u4e4b\u9593\u8cc7\u6599\u7684\u4e00\u81f4\u6027\uff0c\u6bd4\u5982\u8aaa\u8981\u5982\u4f55\u8a2d\u5b9a [\u5feb\u53d6\u7121\u6548](https://en.wikipedia.org/wiki/Cache_algorithms)\u3002\n* \u9700\u8981\u66f4\u6539\u61c9\u7528\u7a0b\u5f0f\u7a0b\u5f0f\u78bc\u4f86\u652f\u63f4\u50cf\u662f Redis \u6216 Memcached \u7b49\u5feb\u53d6\u670d\u52d9\u3002\n* \u5feb\u53d6\u7684\u7121\u6548\u6027\u662f\u500b\u96e3\u984c\uff0c\u800c\u4ec0\u9ebc\u6642\u5019\u8981\u66f4\u65b0\u5feb\u53d6\u5c31\u662f\u500b\u5c0d\u61c9\u7684\u8907\u96dc\u554f\u984c\u3002\n\n### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u5f9e\u5feb\u53d6\u5230\u8a18\u61b6\u9ad4\u8cc7\u6599\u7db2\u683c\u6280\u8853](http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast)\n* [\u53ef\u64f4\u5c55\u7684\u7cfb\u7d71\u8a2d\u8a08\u6a21\u5f0f](http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html)\n* [\u53ef\u64f4\u5c55\u7684\u7cfb\u7d71\u67b6\u69cb\u4ecb\u7d39](http://lethain.com/introduction-to-architecting-systems-for-scale/)\n* [\u53ef\u64f4\u5c55\u6027\u3001\u53ef\u7528\u6027\u3001\u7a69\u5b9a\u6027\u8207\u6a21\u5f0f](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n* [\u53ef\u64f4\u5c55\u6027](http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n* [AWS ElastiCache \u7b56\u7565](http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html)\n* [\u7dad\u57fa\u767e\u79d1](https://en.wikipedia.org/wiki/Cache_(computing))\n\n## \u975e\u540c\u6b65\u6a5f\u5236\n\n<p align=\"center\">\n  <img src=\"images/54GYsSx.png\">\n  <br/>\n  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>\u8cc7\u6599\u4f86\u6e90\uff1a\u53ef\u7e2e\u653e\u6027\u7cfb\u7d71\u67b6\u69cb\u4ecb\u7d39</a></i>\n</p>\n\n\u975e\u540c\u6b65\u7684\u5de5\u4f5c\u6d41\u7a0b\u6709\u52a9\u65bc\u6e1b\u5c11\u539f\u672c\u6309\u7167\u540c\u6b65\u9806\u5e8f\u9032\u884c\u8acb\u6c42\u7684\u6642\u9593\uff0c\u900f\u904e\u63d0\u524d\u9032\u884c\u4e00\u4e9b\u8017\u6642\u64cd\u4f5c\u4f86\u5c07\u964d\u4f4e\u6574\u9ad4\u8acb\u6c42\u6642\u9593\uff0c\u6bd4\u5982\u8aaa\uff1a\u5b9a\u671f\u7684\u5f59\u6574\u8cc7\u6599\u3002\n\n### \u8a0a\u606f\u4f47\u5217\n\n\u8a0a\u606f\u4f47\u5217\u7528\u4f86\u63a5\u6536\u3001\u4fdd\u7559\u4ee5\u53ca\u50b3\u905e\u8a0a\u606f\u3002\u5982\u679c\u4e00\u500b\u64cd\u4f5c\u6309\u7167\u9806\u5e8f\u57f7\u884c\u592a\u6162\u7684\u6642\u5019\uff0c\u4f60\u53ef\u4ee5\u900f\u904e\u8a0a\u606f\u4f47\u5217\u548c\u4ee5\u4e0b\u7684\u6d41\u7a0b\u642d\u914d\u4f86\u5b8c\u6210\u6b64\u5de5\u4f5c\uff1a\n\n* \u61c9\u7528\u7a0b\u5f0f\u5c07\u8a0a\u606f\u767c\u9001\u5230\u4f47\u5217\u4e2d\uff0c\u4e26\u901a\u77e5\u4f7f\u7528\u8005\u5c0d\u61c9\u7684\u72c0\u614b\n* \u4e00\u500b worker \u5f9e\u4f47\u5217\u4e2d\u62ff\u51fa\u8a72\u8a0a\u606f\u4e26\u9032\u884c\u8655\u7406\uff0c\u7136\u5f8c\u5b8c\u6210\u5f8c\u986f\u793a\u5c0d\u61c9\u8cc7\u8a0a\n\n\u9019\u6a23\u7684\u5de5\u4f5c\u6d41\u7a0b\uff0c\u4f7f\u7528\u8005\u4e0d\u6703\u88ab\u963b\u585e\uff0c\u540c\u6642\u5de5\u4f5c\u6703\u5728\u80cc\u666f\u5b8c\u6210\u3002\u5728\u9019\u6bb5\u671f\u9593\uff0c\u5ba2\u6236\u7aef\u53ef\u4ee5\u9032\u884c\u4e00\u4e9b\u8655\u7406\u8b93\u6b64\u4efb\u52d9\u770b\u8d77\u4f86\u5df2\u7d93\u5b8c\u6210\u4e86\u3002\u4f8b\u5982\uff0c\u7576\u4f60\u8981\u767c\u9001\u4e00\u5247\u63a8\u6587\u8a0a\u606f\u6642\uff0c\u6b64\u8a0a\u606f\u53ef\u4ee5\u99ac\u4e0a\u51fa\u73fe\u5728\u4f60\u7684\u6642\u9593\u8ef8\u4e0a\uff0c\u4f46\u53ef\u80fd\u9700\u8981\u4e00\u6bb5\u6642\u9593\u624d\u6703\u767c\u9001\u5230\u4f60\u7684\u8ffd\u8e64\u8005\u4e0a\u9762\u3002\n\n**Redis** \u662f\u4e00\u500b\u7c21\u55ae\u4e14\u4ee4\u4eba\u6eff\u610f\u7684\u8a0a\u606f\u4f47\u5217\u670d\u52d9\uff0c\u4f46\u8a0a\u606f\u6709\u53ef\u80fd\u6703\u4e1f\u5931\u3002\n\n**RabbitMQ** \u5f88\u53d7\u6b61\u8fce\uff0c\u4f46\u4f60\u5fc5\u9808\u8981\u4f7f\u7528 AMQP \u901a\u8a0a\u5354\u5b9a\uff0c\u4e26\u4e14\u8981\u81ea\u5df1\u7ba1\u7406\u7bc0\u9ede\u3002\n\n**Amazon SQS** \u662f\u4e00\u500b\u88ab AWS \u8a17\u7ba1\u7684\u670d\u52d9\uff0c\u4f46\u53ef\u80fd\u6703\u6709\u9ad8\u5ef6\u9072\uff0c\u4e26\u4e14\u8a0a\u606f\u53ef\u80fd\u6703\u88ab\u50b3\u9001\u5169\u6b21\u3002\n\n### \u5de5\u4f5c\u4f47\u5217\n\n\u5de5\u4f5c\u4f47\u5217\u6703\u63a5\u6536\u5de5\u4f5c\u548c\u5c0d\u61c9\u7684\u8cc7\u6599\uff0c\u57f7\u884c\u5b83\u5011\uff0c\u4e26\u4e14\u50b3\u9001\u5176\u7d50\u679c\u3002\u4ed6\u5011\u53ef\u4ee5\u652f\u63f4\u6392\u7a0b\uff0c\u4e26\u4e14\u53ef\u4ee5\u5728\u80cc\u666f\u904b\u4f5c\u8a08\u7b97\u5bc6\u96c6\u578b\u7684\u5de5\u4f5c\u3002\n\n**Celery** \u652f\u63f4\u6392\u7a0b\uff0c\u4e3b\u8981\u662f\u4f7f\u7528 Python \u958b\u767c\u3002\n\n### \u80cc\u58d3\u6a5f\u5236\n\n\u7576\u4f47\u5217\u958b\u59cb\u660e\u986f\u6210\u9577\u6642\uff0c\u4f47\u5217\u7684\u5927\u5c0f\u53ef\u80fd\u6703\u8d85\u904e\u8a18\u61b6\u9ad4\uff0c\u9019\u6703\u5c0e\u81f4\u7121\u6cd5\u547d\u4e2d\u5feb\u53d6\uff0c\u964d\u4f4e\u6574\u9ad4\u6548\u80fd\u3002[\u80cc\u58d3](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html) \u53ef\u4ee5\u7528\u4f86\u9650\u5236\u4f47\u5217\u7684\u5927\u5c0f\uff0c\u8b93\u4f47\u5217\u4fdd\u6301\u9ad8\u541e\u5410\u7387\u548c\u826f\u597d\u7684\u56de\u61c9\u6642\u9593\u3002\u4e00\u65e6\u4f47\u5217\u6eff\u4e86\uff0c\u5ba2\u6236\u7aef\u5c07\u6703\u5f97\u5230 HTTP 503 \u7684\u56de\u61c9\u78bc\uff0c\u4ee5\u4fbf\u8b93\u4ed6\u5011\u5728\u7a0d\u5f8c\u91cd\u65b0\u5617\u8a66\u3002\u5ba2\u6236\u7aef\u53ef\u4ee5\u900f\u904e [\u6307\u6578\u5f8c\u9000\u6f14\u7b97\u6cd5](https://en.wikipedia.org/wiki/Exponential_backoff) \u9019\u7a2e\u65b9\u5f0f\u4f86\u9032\u884c\u91cd\u8a66\u3002\n\n### \u975e\u540c\u6b65\u7684\u7f3a\u9ede\n\n* \u7c21\u55ae\u7684\u904b\u7b97\u548c\u9700\u8981\u5373\u6642\u7684\u5de5\u4f5c\u53ef\u80fd\u66f4\u9069\u5408\u4f7f\u7528\u540c\u6b65\u904b\u7b97\uff0c\u5c0e\u5165\u4f47\u5217\u53ef\u80fd\u6703\u589e\u52a0\u5ef6\u9072\u6216\u7cfb\u7d71\u8907\u96dc\u5ea6\u3002\n\n### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u9019\u662f\u4e00\u500b\u6578\u5b57\u904a\u6232](https://www.youtube.com/watch?v=1KRYH75wgy4)\n* [\u7576\u904e\u8f09\u6642\uff0c\u4f7f\u7528\u80cc\u58d3](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)\n* [\u5229\u7279\u723e\u6cd5\u5247](https://en.wikipedia.org/wiki/Little%27s_law)\n* [\u8a0a\u606f\u4f47\u5217\u548c\u5de5\u4f5c\u4f47\u5217\u6709\u4ec0\u9ebc\u4e0d\u540c\uff1f](https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function)\n\n## \u901a\u8a0a\n\n<p align=\"center\">\n  <img src=\"images/5KeocQs.jpg\">\n  <br/>\n  <i><a href=http://www.escotal.com/osilayer.html>\u4f86\u6e90\uff1aOSI \u4e03\u5c64\u6a21\u578b</a></i>\n</p>\n\n### \u8d85\u6587\u4ef6\u901a\u8a0a\u5354\u5b9a (HTTP)\n\nHTTP \u662f\u4e00\u7a2e\u5728\u5ba2\u6236\u7aef\u548c\u4f3a\u670d\u5668\u7aef\u50b3\u8f38\u8cc7\u6599\u548c\u5b9a\u7fa9\u7de8\u78bc\u7684\u65b9\u6cd5\u3002\u5b83\u662f\u57fa\u65bc\u8acb\u6c42/\u56de\u61c9\u7684\u5354\u8b70\uff1a\u5ba2\u6236\u7aef\u767c\u51fa\u8acb\u6c42\uff0c\u800c\u4f3a\u670d\u5668\u7aef\u5247\u91dd\u5c0d\u8acb\u6c42\u5167\u5bb9\u5b8c\u6210\u5c0d\u61c9\u7684\u884c\u70ba\u4e26\u9032\u884c\u56de\u61c9\u3002HTTP \u662f\u7368\u7acb\u7684\uff0c\u5b83\u5141\u8a31\u8acb\u6c42\u548c\u56de\u61c9\u7d93\u904e\u8a31\u591a\u8ca0\u8f09\u5e73\u8861\u3001\u5feb\u53d6\u3001\u52a0\u5bc6\u548c\u58d3\u7e2e\u7684\u4e2d\u9593\u8def\u7531\u5668\u548c\u4f3a\u670d\u5668\u3002\n\n\u4e00\u500b\u57fa\u672c\u7684 HTTP \u8acb\u6c42\u662f\u7531\u4e00\u500b\u52d5\u8a5e(\u65b9\u6cd5)\u548c\u4e00\u500b\u8cc7\u6e90(\u7aef\u9ede)\u6240\u7d44\u6210\u3002\u4ee5\u4e0b\u662f\u5e38\u898b\u7684 HTTP \u52d5\u8a5e\uff1a\n\n| \u52d5\u8a5e   | \u63cf\u8ff0                             | \u51aa\u7b49* | \u5b89\u5168\u6027 | \u53ef\u5feb\u53d6\u6027                                |\n|--------|----------------------------------|-------|--------|-----------------------------------------|\n| GET    | \u8b80\u53d6\u8cc7\u6e90                         | Yes   | Yes    | Yes                                     |\n| POST   | \u5efa\u7acb\u8cc7\u6e90\uff0c\u6216\u662f\u9a45\u52d5\u8655\u7406\u8cc7\u6599\u7684\u6d41\u7a0b | No    | No     | Yes\uff0c\u5982\u679c\u56de\u61c9\u5305\u542b\u66f4\u65b0\u7684\u8cc7\u8a0a             |\n| PUT    | \u5efa\u7acb\u6216\u66f4\u65b0\u8cc7\u6e90                   | Yes   | No     | No                                      |\n| PATCH  | \u66f4\u65b0\u90e8\u5206\u8cc7\u6599                     | No    | No     | Yes if response contains freshness info |\n| DELETE | \u522a\u9664\u8cc7\u6599                         | Yes   | No     | No                                      |\n\n*\u6307\u7684\u662f\u7576\u9032\u884c\u591a\u6b21\u76f8\u540c\u8acb\u6c42\u6642\uff0c\u7d50\u679c\u662f\u76f8\u540c\u7684\u3002\n\nHTTP \u662f\u4f9d\u8cf4\u65bc\u8f03\u5e95\u5c64\u7684\u5354\u8b70(\u4f8b\u5982\uff1a**TCP** \u548c **UDP**) \u7684\u61c9\u7528\u5c64\u5354\u8b70\u3002\n\n#### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u4ec0\u9ebc\u662f HTTP?](https://www.nginx.com/resources/glossary/http/)\n* [HTTP \u548c TCP \u7684\u5dee\u5225](https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)\n* [PUT \u548c PATCH \u7684\u5dee\u5225](https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1)\n\n### \u50b3\u8f38\u63a7\u5236\u901a\u8a0a\u5354\u5b9a(TCP)\n\n<p align=\"center\">\n  <img src=\"images/JdAsdvG.jpg\">\n  <br/>\n  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>\u4f86\u6e90\uff1a\u5982\u4f55\u958b\u767c\u591a\u4eba\u904a\u6232</a></i>\n</p>\n\nTCP \u662f\u900f\u904e [IP \u7db2\u8def](https://en.wikipedia.org/wiki/Internet_Protocol) \u9762\u5411\u9023\u7dda\u7684\u901a\u8a0a\u5354\u5b9a\u3002\u9023\u7dda\u662f\u900f\u904e [\u63e1\u624b](https://en.wikipedia.org/wiki/Handshaking) \u7684\u65b9\u5f0f\u4f86\u5efa\u7acb\u548c\u65b7\u958b\u9023\u63a5\uff0c\u6240\u6709\u767c\u9001\u7684\u8cc7\u6599\u5728\u63a5\u6536\u6642\u6703\u4fdd\u8b49\u9806\u5e8f\uff0c\u53e6\u5916\u900f\u904e\u4ee5\u4e0b\u7684\u6a5f\u5236\u4f86\u4fdd\u8b49\u8cc7\u6599\u4e0d\u6703\u640d\u6bc0\uff1a\n\n* \u6bcf\u500b\u8cc7\u6599\u7684\u5e8f\u5217\u865f\u78bc\u548c [\u6821\u9a57\u78bc](https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation)\n* [\u78ba\u8a8d\u8a0a\u606f](https://en.wikipedia.org/wiki/Acknowledgement_(data_networks)) \u548c\u81ea\u52d5\u91cd\u50b3\n\n\u5982\u679c\u767c\u9001\u7aef\u6c92\u6709\u6536\u5230\u6b63\u78ba\u7684\u56de\u61c9\uff0c\u6703\u91cd\u65b0\u767c\u9001\u8cc7\u6599\uff0c\u5982\u679c\u6709\u591a\u6b21\u7684\u903e\u671f\u6642\uff0c\u9023\u7dda\u5c31\u6703\u65b7\u958b\u3002TCP \u5be6\u4f5c\u4e86 [\u6d41\u91cf\u63a7\u5236](https://en.wikipedia.org/wiki/Flow_control_(data)) \u548c [\u963b\u585e\u63a7\u5236](https://en.wikipedia.org/wiki/Network_congestion#Congestion_control)\uff0c\u9019\u4e9b\u6a5f\u5236\u6703\u5c0e\u81f4\u5ef6\u9072\uff0c\u800c\u4e14\u901a\u5e38\u50b3\u8f38\u7684\u6548\u7387\u6703\u6bd4 UDP \u4f86\u5f97\u4f4e\u3002\n\n\u70ba\u4e86\u78ba\u4fdd\u9ad8\u541e\u5410\u91cf\uff0cWeb \u4f3a\u670d\u5668\u6703\u4fdd\u6301\u5927\u91cf\u7684 TCP \u9023\u7dda\uff0c\u9032\u800c\u5c0e\u81f4\u8a18\u61b6\u9ad4\u7528\u91cf\u8b8a\u5927\u3002\u5728 Web \u4f3a\u670d\u5668\u4e4b\u9593\u4f7f\u7528\u5927\u91cf\u7684\u958b\u653e\u9023\u7dda\u53ef\u80fd\u662f\u6602\u8cb4\u7684\uff0c\u66f4\u5225\u8aaa\u662f\u5728 memcached \u5feb\u53d6\u4e2d\u505a\u9019\u4e9b\u4e8b\u60c5\u3002[\u9023\u7dda\u6c60](https://en.wikipedia.org/wiki/Connection_pool) \u53ef\u4ee5\u5e6b\u52a9\u5728\u9069\u5408\u7684\u60c5\u6cc1\u4e0b\u5207\u63db\u5230 UDP\u3002\n\nTCP \u5c0d\u65bc\u9700\u8981\u9ad8\u53ef\u9760\u3001\u4f4e\u6642\u9593\u6025\u8feb\u6027\u7684\u61c9\u7528\u4f86\u8aaa\u5f88\u6709\u7528\uff0c\u6bd4\u5982\u8aaa\uff1aWeb \u4f3a\u670d\u5668\u3001\u8cc7\u6599\u5eab\u3001SMTP\u3001FTP \u548c SSH\u3002\n\n\u4ee5\u4e0b\u7684\u60c5\u6cc1\u8acb\u4f7f\u7528 TCP \u800c\u4e0d\u662f UDP\uff1a\n\n* \u4f60\u9700\u8981\u8cc7\u6599\u5b8c\u6574\u7121\u7f3a\n* \u4f60\u60f3\u8981\u81ea\u52d5\u5730\u5c0d\u7db2\u8def\u7684\u6d41\u91cf\u9032\u884c\u6700\u4f73\u8a55\u4f30\n\n### \u4f7f\u7528\u8005\u8cc7\u6599\u6d41\u901a\u8a0a\u5354\u5b9a (UDP)\n\n<p align=\"center\">\n  <img src=\"images/yzDrJtA.jpg\">\n  <br/>\n  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>\u8cc7\u6599\u4f86\u6e90\uff1a\u5982\u4f55\u88fd\u4f5c\u591a\u4eba\u904a\u6232</a></i>\n</p>\n\nUDP \u662f\u975e\u9023\u7dda\u578b\u7684\u901a\u8a0a\u5354\u5b9a\u3002\u8cc7\u6599\u6d41(\u985e\u4f3c\u65bc\u5c01\u5305)\u53ea\u5728\u8cc7\u6599\u6d41\u7d1a\u5225\u9032\u884c\u78ba\u4fdd\u3002\u8cc7\u6599\u53ef\u80fd\u6703\u4e0d\u6309\u7167\u9806\u5e8f\u5730\u5230\u9054\u76ee\u7684\u5730\uff0c\u4e5f\u53ef\u80fd\u6703\u907a\u5931\u3002UDP \u4e26\u4e0d\u652f\u63f4\u963b\u585e\u8655\u7406\uff0c\u5118\u7ba1 UDP \u4e0d\u50cf TCP \u4e00\u6a23\u53ef\u9760\uff0c\u4f46\u901a\u5e38\u6548\u7387\u66f4\u597d\u3002\n\nUDP \u53ef\u4ee5\u900f\u904e\u5ee3\u64ad\u4f86\u50b3\u9001\u8cc7\u6599\u6d41\u5230\u6240\u6709\u5b50\u7db2\u8def\u4e2d\u7684\u6240\u6709\u88dd\u7f6e\uff0c\u9019\u5c0d\u65bc [DHCP](https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol) \u4f86\u8aaa\u5f88\u6709\u7528\uff0c\u56e0\u70ba\u6240\u6709\u5b50\u7db2\u8def\u4e2d\u7684\u8a2d\u5099\u9084\u6c92\u6709\u5206\u914d\u5230 IP \u4f4d\u7f6e\uff0c\u800c\u5c0d TCP \u4f86\u8aaa\uff0cIP \u662f\u5fc5\u9808\u7684\u3002\n\nUDP \u7684\u53ef\u9760\u6027\u8f03\u4f4e\uff0c\u4f46\u9069\u5408\u7528\u5728\u50cf\u662f\u7db2\u8def\u96fb\u8a71\u3001\u8996\u8a0a\u804a\u5929\u3001\u4e32\u6d41\u548c\u591a\u4eba\u7dda\u4e0a\u5373\u6642\u904a\u6232\u4e2d\u3002\n\n\u91dd\u5c0d\u4ee5\u4e0b\u7684\u6848\u4f8b\uff0c\u8acb\u4f7f\u7528 UDP \u4f86\u4ee3\u66ff TCP\uff1a\n\n* \u4f60\u9700\u8981\u4f4e\u5ef6\u9072\n* \u8cc7\u6599\u5ef6\u9072\u7684\u6210\u672c\u6bd4\u8cc7\u6599\u907a\u5931\u9084\u9ad8\n* \u4f60\u60f3\u8981\u81ea\u5df1\u5be6\u4f5c\u932f\u8aa4\u6821\u6b63\u65b9\u6cd5\n\n#### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u904a\u6232\u7a0b\u5f0f\u64b0\u5beb\u7684\u7db2\u8def\u67b6\u69cb](http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/)\n* [TCP \u548c UDP \u7684\u95dc\u9375\u5340\u5225](http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/)\n* [TCP \u548c UDP \u7684\u5dee\u5225](http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp)\n* [\u50b3\u8f38\u63a7\u5236\u5354\u8b70(TCP)](https://en.wikipedia.org/wiki/Transmission_Control_Protocol)\n* [\u4f7f\u7528\u8005\u8cc7\u6599\u6d41\u5354\u8b70(UDP)](https://en.wikipedia.org/wiki/User_Datagram_Protocol)\n* [Memcache \u5728 Facebook \u4e2d\u7684\u53ef\u64f4\u5c55\u6027\u8a2d\u8a08](http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf)\n\n### \u9060\u7aef\u7a0b\u5f0f\u547c\u53eb (RPC)\n\n<p align=\"center\">\n  <img src=\"images/iF4Mkb5.png\">\n  <br/>\n  <i><a href=http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview>\u8cc7\u6599\u4f86\u6e90\uff1a\u7834\u89e3\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66</a></i>\n</p>\n\n\u5728\u4e00\u500b RPC \u4e2d\uff0c\u5ba2\u6236\u7aef\u6703\u53bb\u547c\u53eb\u53e6\u5916\u4e00\u500b\u4f4d\u7f6e\u7a7a\u9593(\u901a\u5e38\u662f\u5728\u9060\u7aef\u7684\u4f3a\u670d\u5668)\u7684\u65b9\u6cd5\u3002\u547c\u53eb\u7684\u65b9\u5f0f\u5c31\u50cf\u662f\u547c\u53eb\u672c\u5730\u7aef\u7684\u4e00\u500b\u65b9\u6cd5\u4e00\u6a23\uff0c\u5ba2\u6236\u7aef\u548c\u4f3a\u670d\u5668\u6e9d\u901a\u7684\u5177\u9ad4\u904e\u7a0b\u88ab\u62bd\u8c61\u5316\uff0c\u800c\u9060\u7aef\u547c\u53eb\u76f8\u8f03\u65bc\u672c\u5730\u7aef\u547c\u53eb\u4f86\u8aaa\u4e00\u822c\u8f03\u6162\uff0c\u800c\u4e14\u53ef\u9760\u6027\u8f03\u5dee\uff0c\u56e0\u6b64\u4e86\u89e3\u5982\u4f55\u5340\u5225\u9019\u5169\u7a2e\u65b9\u6cd5\u662f\u5fc5\u8981\u7684\u3002\u71b1\u9580\u7684 RPC \u6846\u67b6\u5305\u542b\u4e86 [Protobuf](https://developers.google.com/protocol-buffers/)\u3001[Thrift](https://thrift.apache.org/) \u548c [Avro](https://avro.apache.org/docs/current/)\u3002\n\nRPC \u662f\u4e00\u500b\u8acb\u6c42-\u56de\u61c9\u7684\u901a\u8a0a\u5354\u5b9a\uff1a\n\n* **\u5ba2\u6236\u7aef\u7a0b\u5e8f** - \u547c\u53eb\u5ba2\u6236\u7aef\u7684 stub \u7a0b\u5e8f\uff0c\u5c31\u50cf\u547c\u53eb\u672c\u5730\u7aef\u65b9\u6cd5\u4e00\u6a23\uff0c\u53c3\u6578\u6703\u88ab\u653e\u5165\u5806\u758a\u7576\u4e2d\n* **\u5ba2\u6236\u7aef stub \u7a0b\u5e8f** - \u5c07\u8acb\u6c42\u904e\u7a0b\u7684 id \u548c\u53c3\u6578\u6253\u5305\u653e\u5165\u8acb\u6c42\u8cc7\u8a0a\u4e2d\n* **\u5ba2\u6236\u7aef\u901a\u8a0a\u6a21\u7d44** - \u4f5c\u696d\u7cfb\u7d71\u5c07\u8cc7\u8a0a\u5f9e\u5ba2\u6236\u7aef\u767c\u9001\u5230\u4f3a\u670d\u5668\u7aef\n* **\u4f3a\u670d\u5668\u7aef\u901a\u8a0a\u6a21\u7d44** - \u4f5c\u696d\u7cfb\u7d71\u5c07\u6536\u5230\u7684\u8cc7\u8a0a\u50b3\u9001\u5230\u4f3a\u670d\u5668\u7aef\u7684 stub \u7a0b\u5e8f\n* **\u4f3a\u670d\u5668\u7aef stub \u7a0b\u5e8f** -  \u5c07\u7d50\u679c\u89e3\u958b\u5f8c\uff0c\u4f9d\u7167\u904e\u7a0b\u4e2d\u7684 ID \u4f86\u547c\u53eb\u4f3a\u670d\u5668\n* \u4f3a\u670d\u5668\u56de\u8986\u7684\u9806\u5e8f\u6703\u6309\u7167\u4ee5\u4e0a\u76f8\u53cd\u7684\u9806\u5e8f\u4f86\u56de\u8986\n\nRPC \u4f7f\u7528\u7bc4\u4f8b\uff1a\n\n```\nGET /someoperation?data=anId\n\nPOST /anotheroperation\n{\n  \"data\":\"anId\";\n  \"anotherdata\": \"another value\"\n}\n```\n\nRPC \u5c08\u6ce8\u65bc\u63ed\u9732\u884c\u70ba\uff0c\u5b83\u901a\u5e38\u7528\u4f86\u8655\u7406\u5167\u90e8\u901a\u8a0a\u7684\u6548\u80fd\u554f\u984c\uff0c\u901a\u5e38\u4f60\u53ef\u4ee5\u624b\u52d5\u8655\u7406\u672c\u5730\u7aef\u7684\u547c\u53eb\u4f86\u66f4\u52a0\u7b26\u5408\u4f60\u7684\u4f7f\u7528\u6848\u4f8b\u3002\n\n\u7576\u9047\u5230\u4ee5\u4e0b\u60c5\u6cc1\u6642\uff0c\u4f7f\u7528\u672c\u5730\u7aef\u51fd\u5f0f\u5eab\uff08\u4e5f\u5c31\u662f SDK\uff09\uff1a\n\n* \u4f60\u77e5\u9053\u4f60\u7684\u76ee\u6a19\u5e73\u53f0\n* \u4f60\u60f3\u8981\u63a7\u5236\u5982\u4f55\u8a2a\u554f\u4f60\u7684 \"\u908f\u8f2f\"\n* \u7576\u4f60\u7684\u51fd\u5f0f\u5eab\u767c\u751f\u932f\u8aa4\u6642\uff0c\u4f60\u60f3\u8981\u9032\u884c\u63a7\u5236\n* \u6548\u80fd\u548c\u4f7f\u7528\u8005\u9ad4\u9a57\u662f\u4f60\u6700\u95dc\u6ce8\u7684\u4e8b\u60c5\n\n\u9075\u5b88 **REST** \u898f\u7bc4\u7684 HTTP API \u5f80\u5f80\u66f4\u9069\u5408\u7528\u5728\u516c\u7528\u7684 API\u3002\n\n#### RPC \u7684\u7f3a\u9ede\n\n* RPC \u7684\u5ba2\u6236\u7aef\u6703\u8b8a\u5f97\u548c\u4f3a\u670d\u5668\u7684\u5be6\u4f5c\u7d81\u5f97\u66f4\u6b7b\n* \u4e00\u500b\u65b0\u7684 API \u5fc5\u9808\u5728\u6bcf\u500b\u64cd\u4f5c\u6216\u4f7f\u7528\u6848\u4f8b\u4e2d\u9032\u884c\u5b9a\u7fa9\n* RPC \u5f88\u96e3\u6293\u932f\u8aa4\n* \u4f60\u5f88\u96e3\u65b9\u4fbf\u7684\u4fee\u6539\u73fe\u6709\u7684\u6280\u8853\uff0c\u8209\u4f8b\u4f86\u8aaa\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u5728 [Squid](http://www.squid-cache.org/) \u9019\u6a23\u7684\u5feb\u53d6\u4f3a\u670d\u5668\u4e0a\u78ba\u4fdd [RPC \u547c\u53eb\u88ab\u6b63\u78ba\u7684\u5feb\u53d6](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/)\uff0c\u4f60\u53ef\u4ee5\u9700\u8981\u591a\u8cbb\u984d\u5916\u7684\u52aa\u529b\u4e86\u3002\n\n### \u5177\u8c61\u72c0\u614b\u8f49\u79fb (REST)\n\nREST \u662f\u4e00\u500b\u898f\u7bc4\u5ba2\u6236\u7aef/\u4f3a\u670d\u5668\u7aef\u67b6\u69cb\u8a2d\u8a08\u7684\u6a21\u578b\u3002\u5ba2\u6236\u7aef\u57fa\u65bc\u4f3a\u670d\u5668\u7ba1\u7406\u7684\u7cfb\u5217\u64cd\u4f5c\uff0c\u4f3a\u670d\u5668\u63d0\u4f9b\u4fee\u6539\u6216\u53d6\u5f97\u8cc7\u6e90\u7684\u4ecb\u9762\uff0c\u6240\u6709\u7684\u901a\u8a0a\u5fc5\u9808\u662f\u7121\u72c0\u614b\u3001\u53ef\u5feb\u53d6\u7684\u3002\n\nRestful \u7684\u8a2d\u8a08\u6709\u56db\u500b\u539f\u5247\uff1a\n\n* **\u6a19\u793a\u8cc7\u6e90 (HTTP \u4e2d\u7684 URI)** - \u7121\u8ad6\u4efb\u4f55\u64cd\u4f5c\u90fd\u4f7f\u7528\u76f8\u540c\u7684 URI\n* **\u8868\u793a\u5c64\u7684\u6539\u8b8a (HTTP \u4e2d\u7684\u52d5\u4f5c)** - \u4f7f\u7528 HTTP \u52d5\u8a5e\u3001Headers \u548c body\n* **\u53ef\u81ea\u6211\u63cf\u8ff0\u7684\u932f\u8aa4\u8a0a\u606f (HTTP \u4e2d\u7684\u72c0\u614b\u78bc)** - \u4f7f\u7528\u72c0\u614b\u78bc\uff0c\u4e0d\u8981\u91cd\u8907\u9020\u8f2a\u5b50\n* **[HATEOAS](http://restcookbook.com/Basics/hateoas/) (HTTP \u4e2d\u7684 HTML \u4ecb\u9762)** - \u4f60\u7684 Web \u4f3a\u670d\u5668\u61c9\u8a72\u8981\u80fd\u5920\u900f\u904e\u700f\u89bd\u5668\u8a2a\u554f\n\nREST \u8acb\u6c42\u7bc4\u4f8b\uff1a\n\n```\nGET /someresources/anId\n\nPUT /someresources/anId\n{\"anotherdata\": \"another value\"}\n```\n\nREST \u95dc\u6ce8\u65bc\u63ed\u9732\u8cc7\u6599\uff0c\u6e1b\u5c11\u5ba2\u6236\u7aef/\u4f3a\u670d\u5668\u4e4b\u9593\u8026\u5408\u7684\u7a0b\u5ea6\uff0c\u4e26\u4e14\u7d93\u5e38\u7528\u5728\u516c\u5171\u7684 HTTP API \u8a2d\u8a08\u4e0a\u3002REST \u4f7f\u7528\u66f4\u901a\u7528\u548c\u53d7\u898f\u7bc4\u7684\u65b9\u6cd5\u4f86\u900f\u904e URI \u4f86\u63ed\u9732\u8cc7\u6e90\uff0c[\u900f\u904e Headers \u4f86\u63cf\u8ff0](https://github.com/for-GET/know-your-http-well/blob/master/headers.md)\uff0c\u4e26\u900f\u904e GET\u3001POST\u3001PUT\u3001DELETE \u548c PATCH \u7b49\u52d5\u4f5c\u4f86\u9032\u884c\u64cd\u4f5c\uff0c\u56e0\u70ba\u7121\u72c0\u614b\u7684\u7279\u6027\uff0cREST \u6613\u65bc\u6a6b\u5411\u64f4\u5c55\u548c\u5206\u7247\u3002\n\n#### REST \u7684\u7f3a\u9ede\n\n* \u56e0\u70ba REST \u7684\u91cd\u9ede\u662f\u653e\u5728\u5982\u4f55\u63ed\u9732\u8cc7\u6599\uff0c\u6240\u4ee5\u7576\u8cc7\u6599\u4e0d\u662f\u4ee5\u81ea\u7136\u7684\u5f62\u5f0f\u7d44\u6210\u6642\uff0c\u6216\u662f\u7d50\u69cb\u76f8\u7576\u8907\u96dc\u6642\uff0cREST \u53ef\u80fd\u7121\u6cd5\u5f88\u597d\u7684\u8655\u7406\u4ed6\u5011\u3002\u8209\u500b\u7bc4\u4f8b\uff0c\u56de\u50b3\u904e\u53bb\u4e00\u5c0f\u6642\u4e2d\u8207\u7279\u5b9a\u4e8b\u4ef6\u543b\u5408\u7684\u66f4\u65b0\u64cd\u4f5c\u5c31\u5f88\u96e3\u900f\u904e\u8def\u5f91\u4f86\u8868\u793a\uff0c\u4f7f\u7528 REST\uff0c\u53ef\u80fd\u6703\u4f7f\u7528 URI\u3001\u67e5\u8a62\u53c3\u6578\u548c\u8acb\u6c42\u672c\u8eab\u4f86\u5be6\u73fe\u3002\n* REST \u4e00\u822c\u4f9d\u8cf4\u65bc\u5e7e\u500b\u52d5\u8a5e\u64cd\u4f5c(GET\u3001POST\u3001PUT\u3001DELETE \u548c PATCH)\uff0c\u4f46\u6709\u6642\u5019\u9019\u4e9b\u64cd\u4f5c\u7121\u6cd5\u6eff\u8db3\u4f60\u7684\u9700\u6c42\uff0c\u8209\u500b\u7bc4\u4f8b\uff0c\u5c07\u904e\u671f\u7684\u6587\u4ef6\u79fb\u52d5\u5230\u6b78\u6a94\u6587\u4ef6\u8cc7\u6599\u5eab\u4e2d\u9019\u6a23\u7684\u64cd\u4f5c\uff0c\u53ef\u80fd\u5c31\u6c92\u8fa6\u6cd5\u7c21\u55ae\u7684\u4f7f\u7528\u4ee5\u4e0a\u5e7e\u500b\u52d5\u8a5e\u64cd\u4f5c\u4f86\u5b8c\u6210\u3002\n* \u5c0d\u65bc\u90a3\u4e9b\u591a\u5c64\u8907\u96dc\u7684\u8cc7\u6e90\u4f86\u8aaa\uff0c\u9700\u8981\u5728\u5ba2\u6236\u7aef\u548c\u4f3a\u670d\u5668\u7aef\u9032\u884c\u591a\u6b21\u8acb\u6c42\uff0c\u4f8b\u5982\uff1a\u7372\u5f97\u90e8\u843d\u683c\u9801\u9762\u53ca\u76f8\u95dc\u8a55\u8ad6\uff0c\u800c\u5c0d\u65bc\u7db2\u8def\u74b0\u5883\u8f03\u4e0d\u7a69\u5b9a\u7684\u884c\u52d5\u7aef\u61c9\u7528\u4f86\u8aaa\uff0c\u9019\u4e9b\u591a\u6b21\u5f80\u8fd4\u7684\u8acb\u6c42\u662f\u975e\u5e38\u9ebb\u7169\u7684\u3002\n* \u96a8\u8457\u6642\u9593\u7684\u589e\u52a0\uff0cAPI \u7684\u56de\u61c9\u4e2d\u53ef\u80fd\u6703\u589e\u52a0\u66f4\u591a\u7684\u6b04\u4f4d\uff0c\u6bd4\u8f03\u820a\u7684\u5ba2\u6236\u7aef\u9084\u662f\u6703\u6536\u5230\u6240\u6709\u65b0\u7684\u56de\u61c9\u5167\u5bb9\uff0c\u5373\u6642\u4ed6\u5011\u4e0d\u9700\u8981\u9019\u4e9b\u56de\u61c9\uff0c\u9019\u6703\u9020\u6210\u4ed6\u5011\u7684\u8ca0\u64d4\uff0c\u4e26\u4e14\u9020\u6210\u66f4\u5927\u7684\u5ef6\u9072\u3002\n\n### RPC \u548c REST \u547c\u53eb\u7684\u6bd4\u8f03\n\n| \u64cd\u4f5c                       | RPC                                                                   | REST                                          |\n|----------------------------|-----------------------------------------------------------------------|-----------------------------------------------|\n| \u8a3b\u518a                       | **POST** /signup                                                      | **POST** /persons                             |\n| \u53d6\u6d88                       | **POST** /resign{\"personid\": \"1234\"}                                  | **DELETE** /persons/1234                      |\n| \u8b80\u53d6\u4f7f\u7528\u8005\u8cc7\u8a0a             | **GET** /readPerson?personid=1234                                     | **GET** /persons/1234                         |\n| \u8b80\u53d6\u4f7f\u7528\u8005\u7269\u54c1\u6e05\u55ae         | **GET** /readUsersItemsList?personid=1234                             | **GET** /persons/1234/items                   |\n| \u589e\u52a0\u4e00\u500b\u7269\u54c1\u5230\u4f7f\u7528\u8005\u7684\u6e05\u55ae | **POST** /addItemToUsersItemsList{\"personid\": \"1234\";\"itemid\": \"456\"} | **POST** /persons/1234/items{\"itemid\": \"456\"} |\n| \u66f4\u65b0\u4e00\u500b\u7269\u54c1               | **POST** /modifyItem{\"itemid\": \"456\";\"key\": \"value\"}                  | **PUT** /items/456{\"key\": \"value\"}            |\n| \u522a\u9664\u4e00\u500b\u7269\u54c1               | **POST** /removeItem{\"itemid\": \"456\"}                                 | **DELETE** /items/456                         |\n\n<p align=\"center\">\n  <i><a href=https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/>\u8cc7\u6599\u4f86\u6e90\uff1a\u4f60\u771f\u7684\u77e5\u9053\u70ba\u4ec0\u9ebc\u4f60\u66f4\u559c\u6b61 REST \u800c\u4e0d\u662f RPC \u55ce\uff1f</a></i>\n</p>\n\n#### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u4f60\u771f\u7684\u77e5\u9053\u70ba\u4ec0\u9ebc\u4f60\u66f4\u559c\u6b61 REST \u800c\u4e0d\u662f RPC \u55ce\uff1f](https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/)\n* [\u4ec0\u9ebc\u6642\u5019 RPC \u6bd4 REST \u66f4\u9069\u5408](http://programmers.stackexchange.com/a/181186)\n* [REST \u548c JSON-RPC](http://stackoverflow.com/questions/15056878/rest-vs-json-rpc)\n* [\u63ed\u958b RPC \u548c REST \u7684\u795e\u79d8\u9762\u7d17](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/)\n* [\u4f7f\u7528 REST \u7684\u7f3a\u9ede](https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs)\n* [\u7834\u89e3\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n* [Thrift](https://code.facebook.com/posts/1468950976659943/)\n* [\u70ba\u4ec0\u9ebc\u5728\u5167\u90e8\u8981\u4f7f\u7528 REST \u800c\u4e0d\u662f RPC](http://arstechnica.com/civis/viewtopic.php?t=1190508)\n\n## \u8cc7\u8a0a\u5b89\u5168\n\n\u9019\u4e00\u7ae0\u7bc0\u9700\u8981\u66f4\u591a\u7684\u8ca2\u737b\uff0c\u4e00\u8d77[\u52a0\u5165](#\u5982\u4f55\u8ca2\u737b)\u5427\uff01\n\n\u8cc7\u8a0a\u5b89\u5168\u662f\u4e00\u500b\u5ee3\u6cdb\u7684\u8b70\u984c\uff0c\u9664\u975e\u4f60\u6709\u76f8\u7576\u7684\u7d93\u9a57\u3001\u8cc7\u8a0a\u5b89\u5168\u7684\u80cc\u666f\u6216\u6b63\u5728\u7533\u8acb\u76f8\u95dc\u7684\u8077\u4f4d\u8981\u6c42\u5c0d\u61c9\u7684\u77e5\u8b58\uff0c\u5426\u5247\u4e86\u89e3\u4ee5\u4e0b\u7684\u57fa\u790e\u5167\u5bb9\u5373\u53ef\uff1a\n\n*\u5728\u50b3\u8f38\u548c\u7b49\u5f85\u7684\u904e\u7a0b\u4e2d\u9032\u884c\u52a0\u5bc6\n* \u5c0d\u6240\u6709\u4f7f\u7528\u8005\u8f38\u5165\u548c\u5f9e\u4f7f\u7528\u8005\u5f97\u5230\u7684\u53c3\u6578\u9032\u884c\u8655\u7406\uff0c\u4ee5\u907f\u514d [XSS](https://en.wikipedia.org/wiki/Cross-site_scripting) \u548c [SQL injection](https://en.wikipedia.org/wiki/SQL_injection)\n* \u4f7f\u7528\u53c3\u6578\u5316\u8f38\u5165\u4f86\u907f\u514d SQL injection\n* \u4f7f\u7528 [\u6700\u5c0f\u6b0a\u9650\u539f\u5247](https://en.wikipedia.org/wiki/Principle_of_least_privilege)\n\n### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u70ba\u958b\u767c\u8005\u6e96\u5099\u7684\u8cc7\u8a0a\u5b89\u5168\u6307\u5357](https://github.com/FallibleInc/security-guide-for-developers)\n* [OWASP top ten](https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet)\n\n## \u9644\u9304\n\n\u67d0\u4e9b\u6642\u5019\u4f60\u53ef\u80fd\u6703\u88ab\u8981\u6c42\u505a\u4e00\u4e9b\u4fdd\u5b88\u4f30\u8a08\uff0c\u6bd4\u5982\u8aaa\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u9810\u4f30\u5f9e\u786c\u789f\u4e2d\u751f\u6210 100 \u5f35\u5716\u7247\u7d04\u7565\u9700\u8981\u591a\u5c11\u6642\u9593\uff0c\u6216\u4e00\u500b\u8cc7\u6599\u7d50\u69cb\u9700\u8981\u591a\u5c11\u8a18\u61b6\u9ad4\u7b49\u3002**2 \u7684\u6b21\u65b9\u8868** \u548c **\u6bcf\u500b\u958b\u767c\u8005\u90fd\u9700\u8981\u77e5\u9053\u7684\u4e00\u4e9b\u6642\u9593\u8cc7\u6599** \u90fd\u662f\u4e00\u4e9b\u5f88\u65b9\u4fbf\u7684\u53c3\u8003\u6599\u3002\n\n### 2 \u7684\u6b21\u65b9\u8868\n\n```\n\u6b21\u65b9           \u5be6\u969b\u503c         \u8fd1\u4f3c\u503c        \u4f4d\u5143\u7d44\n---------------------------------------------------------------\n7                             128\n8                             256\n10                           1024   1 thousand           1 KB\n16                         65,536                       64 KB\n20                      1,048,576   1 million            1 MB\n30                  1,073,741,824   1 billion            1 GB\n32                  4,294,967,296                        4 GB\n40              1,099,511,627,776   1 trillion           1 TB\n```\n\n#### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [2 \u7684\u6b21\u65b9](https://en.wikipedia.org/wiki/Power_of_two)\n\n### \u6bcf\u500b\u958b\u767c\u8005\u90fd\u61c9\u8a72\u77e5\u9053\u7684\u5ef6\u9072\u6578\u91cf\u7d1a\n\n```\n\u5ef6\u9072\u6bd4\u8f03\u6578\u91cf\u7d1a\n--------------------------\nL1 \u5feb\u53d6\u53c3\u8003\u6578\u91cf\u7d1a                           0.5 ns\nBranch mispredict                            5   ns\nL2 \u5feb\u53d6\u53c3\u8003\u6578\u91cf\u7d1a                             7   ns                      14x L1 cache\nMutex lock/unlock                          25   ns\n\u4e3b\u8a18\u61b6\u9ad4\u53c3\u8003\u6578\u91cf\u7d1a                      100   ns                      20x L2 cache, 200x L1 cache\nCompress 1K bytes with Zippy            10,000   ns       10 us\nSend 1 KB bytes over 1 Gbps network     10,000   ns       10 us\nRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD\nRead 1 MB sequentially from memory     250,000   ns      250 us\nRound trip within same datacenter      500,000   ns      500 us\nRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory\nDisk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip\nRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD\nRead 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD\nSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms\n\nNotes\n-----\n1 ns = 10^-9 seconds\n1 us = 10^-6 seconds = 1,000 ns\n1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns\n```\n\n\u4e00\u4e9b\u57fa\u65bc\u4e0a\u8ff0\u6578\u5b57\u7684\u6307\u6a19\uff1a\n\n* \u5faa\u5e8f\u7684\u5f9e\u786c\u789f\u8b80\u53d6\u8cc7\u6599\u5927\u7d04 30 MB/s\n* \u5faa\u5e8f\u7684\u5f9e 1 Gbps \u576a\u5bec\u7684\u4e59\u592a\u7db2\u8def\u8b80\u53d6\u7d04 100 MB/s\n* \u5faa\u5e8f\u7684\u5f9e SSD \u8b80\u53d6\u5927\u7d04 1 GB/s\n* \u5faa\u5e8f\u7684\u5f9e\u4e3b\u8a18\u61b6\u9ad4\u4e2d\u8b80\u53d6\u5927\u7d04 4 GB/s\n* \u6bcf\u79d2\u5927\u7d04\u53ef\u4ee5\u7e5e\u5730\u7403 6-7 \u5708\n* \u8cc7\u6599\u4e2d\u5fc3\u5167\u6bcf\u79d2\u7d04\u6709 2000 \u6b21\u7684\u5f80\u8fd4\n\n#### \u8996\u89ba\u5316\u5ef6\u9072\u6578\n\n![](https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67)\n\n#### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [\u6bcf\u500b\u7a0b\u5f0f\u8a2d\u8a08\u5e2b\u90fd\u61c9\u8a72\u77e5\u9053\u7684\u5ef6\u9072\u6578\u91cf\u7d1a - 1](https://gist.github.com/jboner/2841832)\n* [\u6bcf\u500b\u7a0b\u5f0f\u8a2d\u8a08\u5e2b\u90fd\u61c9\u8a72\u77e5\u9053\u7684\u5ef6\u9072\u6578\u91cf\u7d1a - 2](https://gist.github.com/hellerbarde/2843375)\n* [\u95dc\u65bc\u5efa\u7f6e\u5927\u578b\u5206\u6563\u5f0f\u7cfb\u7d71\u6240\u9700\u8981\u77e5\u9053\u7684\u8a2d\u8a08\u65b9\u6848\u3001\u8ab2\u7a0b\u548c\u5efa\u8b70](http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf)\n* [\u5f9e\u8edf\u9ad4\u5de5\u7a0b\u5e2b\u7684\u89d2\u5ea6\u4f86\u770b\u5efa\u7f6e\u5927\u578b\u5206\u6563\u5f0f\u7cfb\u7d71](https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf)\n\n### \u5176\u4ed6\u7684\u7cfb\u7d71\u8a2d\u8a08\u9762\u8a66\u554f\u984c\n\n> \u5e38\u898b\u7684\u7cfb\u7d71\u8a2d\u8a08\u554f\u984c\uff0c\u540c\u6642\u63d0\u4f9b\u5982\u4f55\u89e3\u6c7a\u8a72\u554f\u984c\u7684\u9023\u7d50\n\n| \u554f\u984c                                   | \u4f86\u6e90                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n|----------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| \u8a2d\u8a08\u4e00\u500b\u985e\u4f3c\u65bc Dropbox \u7684\u6587\u4ef6\u540c\u6b65\u7cfb\u7d71  | [youtube.com](https://www.youtube.com/watch?v=PE4gwstWhmc)                                                                                                                                                                                                                                                                                                                                                                                        |\n| \u8a2d\u8a08\u4e00\u500b\u985e\u4f3c\u65bc Google \u7684\u641c\u5c0b\u5f15\u64ce       | [queue.acm.org](http://queue.acm.org/detail.cfm?id=988407)<br/>[stackexchange.com](http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search)<br/>[ardendertat.com](http://www.ardendertat.com/2012/01/11/implementing-search-engines/)<br/>[stanford.edu](http://infolab.stanford.edu/~backrub/google.html)                                                                                                 |\n| \u8a2d\u8a08\u4e00\u500b\u50cf Google \u4e00\u6a23\u53ef\u64f4\u5c55\u7684\u7db2\u8def\u722c\u87f2 | [quora.com](https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch)                                                                                                                                                                                                                                                                                                                                                                     |\n| \u8a2d\u8a08\u4e00\u500b Google Docs                   | [code.google.com](https://code.google.com/p/google-mobwrite/)<br/>[neil.fraser.name](https://neil.fraser.name/writing/sync/)                                                                                                                                                                                                                                                                                                                           |\n| \u8a2d\u8a08\u4e00\u500b\u50cf Redis \u4e00\u6a23\u7684\u9375\u503c\u5c0d\u7cfb\u7d71      | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis)                                                                                                                                                                                                                                                                                                                                                                         |\n| \u8a2d\u8a08\u4e00\u500b\u50cf Memcached \u7684\u5feb\u53d6\u7cfb\u7d71        | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached)                                                                                                                                                                                                                                                                                                                                                                    |\n| \u8a2d\u8a08\u4e00\u500b\u50cf Amazon \u4e00\u6a23\u7684\u63a8\u85a6\u7cfb\u7d71       | [hulu.com](http://tech.hulu.com/blog/2011/09/19/recommendation-system.html)[ijcai13.org](http://ijcai13.org/files/tutorial_slides/td3.pdf)                                                                                                                                                                                                                                                                                                        |\n| \u8a2d\u8a08\u4e00\u500b\u50cf Bitly \u4e00\u6a23\u7684\u77ed\u7db2\u5740\u670d\u52d9      | [n00tc0d3r.blogspot.com](http://n00tc0d3r.blogspot.com/)                                                                                                                                                                                                                                                                                                                                                                                          |\n| \u8a2d\u8a08\u4e00\u500b\u50cf WhatsApp \u4e00\u6a23\u7684\u5373\u6642\u8a0a\u606f\u7cfb\u7d71 | [highscalability.com](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html)                                                                                                                                                                                                                                                                                                                    |\n| \u8a2d\u8a08\u4e00\u500b\u50cf Instagram \u4e00\u6a23\u7684\u76f8\u7247\u670d\u52d9    | [highscalability.com](http://highscalability.com/flickr-architecture)<br/>[highscalability.com](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)                                                                                                                                                                                                                                            |\n| \u8a2d\u8a08\u4e00\u500b\u50cf Facebook \u7684\u65b0\u805e\u63a8\u85a6\u65b9\u6cd5     | [quora.com](http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed)<br/>[quora.com](http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed)<br/>[slideshare.net](http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture)                                                                                                                    |\n| \u8a2d\u8a08\u4e00\u500b Facebook \u6642\u9593\u8ef8\u529f\u80fd           | [facebook.com](https://www.facebook.com/note.php?note_id=10150468255628920)<br/>[highscalability.com](http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html)                                                                                                                                                                                                                                     |\n| \u8a2d\u8a08 Facebook \u7684\u804a\u5929\u529f\u80fd               | [erlang-factory.com](http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf)<br/>[facebook.com](https://www.facebook.com/note.php?note_id=14218138919&id=9445547199&index=0)                                                                                                                                                                                                                                         |\n| \u8a2d\u8a08\u4e00\u500b\u50cf Facebook \u7684\u5716\u5f62\u5316\u641c\u5c0b\u7cfb\u7d71   | [facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920) |\n| \u8a2d\u8a08\u4e00\u500b\u50cf CloudFlare \u7684\u5167\u5bb9\u50b3\u8f38\u7db2\u8def   | [cmu.edu](http://repository.cmu.edu/cgi/viewcontent.cgi?article=2112&context=compsci)                                                                                                                                                                                                                                                                                                                                                             |\n| \u8a2d\u8a08\u4e00\u500b\u50cf Twitter \u7684\u5fae\u7db2\u8a8c\u670d\u52d9        | [michael-noll.com](http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/)<br/>[snikolov .wordpress.com](http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/)                                                                                                                                                                                                                            |\n| \u8a2d\u8a08\u4e00\u500b\u96a8\u6a5f ID \u751f\u6210\u7cfb\u7d71               | [blog.twitter.com](https://blog.twitter.com/2010/announcing-snowflake)<br/>[github.com](https://github.com/twitter/snowflake/)                                                                                                                                                                                                                                                                                                                         |\n| \u7d66\u5b9a\u4e00\u6bb5\u6642\u9593\uff0c\u56de\u50b3\u6b21\u6578\u6392\u540d\u524d K \u7684\u8acb\u6c42  | [ucsb.edu](https://icmi.cs.ucsb.edu/research/tech_reports/reports/2005-23.pdf)<br/>[wpi.edu](http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf)                                                                                                                                                                                                                                                                                                         |\n| \u8a2d\u8a08\u4e00\u500b\u8cc7\u6599\u4f86\u6e90\u5728\u591a\u500b\u8cc7\u6599\u4e2d\u5fc3\u7684\u7cfb\u7d71   | [highscalability.com](http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html)                                                                                                                                                                                                                                                                                                                            |\n| \u8a2d\u8a08\u4e00\u500b\u7dda\u4e0a\u591a\u4eba\u5361\u724c\u904a\u6232               | [indieflashblog.com](https://web.archive.org/web/20180929181117/http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html)<br/>[buildnewgames.com](http://buildnewgames.com/real-time-multiplayer/)                                                                                                                                                                                                                                                                       |\n| \u8a2d\u8a08\u4e00\u500b\u5783\u573e\u56de\u6536\u7cfb\u7d71                   | [stuffwithstuff.com](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)<br/>[washington.edu](http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf)                                                                                                                                                                                                                                                             |\n| \u8ca2\u737b\u66f4\u591a\u7cfb\u7d71\u8a2d\u8a08\u554f\u984c                   | [Contribute](#\u5982\u4f55\u8ca2\u737b)                                                                                                                                                                                                                                                                                                                                                                                                                           |\n\n### \u771f\u5be6\u4e16\u754c\u7684\u67b6\u69cb\n\n> \u5e95\u4e0b\u662f\u95dc\u65bc\u771f\u5be6\u4e16\u754c\u7684\u7cfb\u7d71\u67b6\u69cb\u662f\u5982\u4f55\u8a2d\u8a08\u7684\u6587\u7ae0\n\n<p align=\"center\">\n  <img src=\"images/TcUo2fw.png\">\n  <br/>\n  <i><a href=https://www.infoq.com/presentations/Twitter-Timeline-Scalability>\u8cc7\u6599\u4f86\u6e90\uff1a\u53ef\u64f4\u5c55\u5f0f\u7684 Twitter \u6642\u9593\u8ef8\u8a2d\u8a08</a></i>\n</p>\n\n**\u4e0d\u8981\u95dc\u6ce8\u4ee5\u4e0b\u6587\u7ae0\u7684\u7d30\u7bc0\uff0c\u800c\u662f\u6ce8\u610f\u4ee5\u4e0b\u5e7e\u9ede\uff1a**\n\n* \u627e\u5230\u9019\u4e9b\u6587\u7ae0\u4e2d\u5171\u901a\u7684\u539f\u5247\u3001\u6280\u8853\u548c\u6a21\u5f0f\n* \u5b78\u7fd2\u6bcf\u500b\u5143\u4ef6\u8ca0\u8cac\u89e3\u6c7a\u54ea\u4e9b\u554f\u984c\u3001\u5728\u4ec0\u9ebc\u60c5\u6cc1\u4e0b\u4f7f\u7528\u3001\u4ec0\u9ebc\u60c5\u6cc1\u4e0b\u4e0d\u9069\u7528\n* \u8907\u7fd2\u5b78\u7fd2\u904e\u7684\u6587\u7ae0\n\n| \u7a2e\u985e     | \u7cfb\u7d71                                                     | \u53c3\u8003\u4f86\u6e90                                                                                                                                       |\n|----------|----------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------|\n| \u8cc7\u6599\u8655\u7406 | **MapReduce** - Google \u7684\u5206\u6563\u5f0f\u8cc7\u6599\u8655\u7406                  | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf)                     |\n| \u8cc7\u6599\u8655\u7406 | **Spark** - Databricks \u7684\u5206\u6563\u5f0f\u8cc7\u6599\u8655\u7406                  | [slideshare.net](http://www.slideshare.net/AGrishchenko/apache-spark-architecture)                                                             |\n| \u8cc7\u6599\u8655\u7406 | **Storm** - Twitter \u7684\u5206\u6563\u5f0f\u8cc7\u6599\u8655\u7406                     | [slideshare.net](http://www.slideshare.net/previa/storm-16094009)                                                                              |\n|          |                                                          |                                                                                                                                                |\n| \u8cc7\u6599\u5132\u5b58 | **Bigtable** - Google \u7684\u5217\u5f0f\u8cc7\u6599\u5eab                       | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)                                                    |\n| \u8cc7\u6599\u5132\u5b58 | **HBase** - Bigtable \u7684\u958b\u653e\u539f\u59cb\u78bc\u89e3\u6c7a\u65b9\u6848                | [slideshare.net](http://www.slideshare.net/alexbaranau/intro-to-hbase)                                                                         |\n| \u8cc7\u6599\u5132\u5b58 | **Cassandra** - Facebook \u7684\u5217\u5f0f\u8cc7\u6599\u5eab                    | [slideshare.net](http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666)                                           |\n| \u8cc7\u6599\u5132\u5b58 | **DynamoDB** - Amazon \u7684\u6587\u4ef6\u5f0f\u8cc7\u6599\u5eab                     | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf)                                                   |\n| \u8cc7\u6599\u5132\u5b58 | **MongoDB** - \u6587\u4ef6\u5f0f\u8cc7\u6599\u5eab                               | [slideshare.net](http://www.slideshare.net/mdirolf/introduction-to-mongodb)                                                                    |\n| \u8cc7\u6599\u5132\u5b58 | **Spanner** - Google \u7684\u5168\u7403\u5206\u6563\u5f0f\u8cc7\u6599\u5eab                  | [research.google.com](http://research.google.com/archive/spanner-osdi2012.pdf)                                                                 |\n| \u8cc7\u6599\u5132\u5b58 | **Memcached** - \u5206\u6563\u5f0f\u7684\u8a18\u61b6\u9ad4\u5feb\u53d6\u7cfb\u7d71                   | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached)                                                                 |\n| \u8cc7\u6599\u5132\u5b58 | **Redis** - \u5177\u6709\u6301\u4e45\u5316\u53ca\u503c\u578b\u5225\u7684\u5206\u6563\u5f0f\u5feb\u53d6\u7cfb\u7d71           | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis)                                                                      |\n|          |                                                          |                                                                                                                                                |\n| \u6a94\u6848\u7cfb\u7d71 | **Google File System (GFS)** - \u5206\u6563\u5f0f\u7684\u6a94\u6848\u7cfb\u7d71          | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf)                         |\n| \u6a94\u6848\u7cfb\u7d71 | **Hadoop File System (HDFS)** - GFS \u7684\u958b\u653e\u539f\u59cb\u78bc\u89e3\u6c7a\u65b9\u6848 | [apache.org](https://hadoop.apache.org/docs/r1.2.1/hdfs_design.html)                                                                           |\n|          |                                                          |                                                                                                                                                |\n| \u5176\u4ed6     | **Chubby** - Google \u7684\u5206\u6563\u5f0f\u7cfb\u7d71\u4f4e\u8026\u5408\u9396\u670d\u52d9             | [research.google.com](http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf) |\n| \u5176\u4ed6     | **Dapper** - \u5206\u6563\u5f0f\u7cfb\u7d71\u76e3\u63a7\u57fa\u790e\u8a2d\u65bd                      | [research.google.com](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf)                                |\n| \u5176\u4ed6     | **Kafka** - LinkedIn \u7684 pub/sub \u8a0a\u606f\u4f47\u5217\u670d\u52d9             | [slideshare.net](http://www.slideshare.net/mumrah/kafka-talk-tri-hug)                                                                          |\n| \u5176\u4ed6     | **Zookeeper** - \u96c6\u4e2d\u5f0f\u7684\u57fa\u790e\u67b6\u69cb\u548c\u5354\u8abf\u670d\u52d9               | [slideshare.net](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper)                                                       |\n|          | \u8ca2\u737b\u66f4\u591a\u67b6\u69cb                                             | [Contribute](#\u5982\u4f55\u8ca2\u737b)                                                                                                                        |\n\n### \u516c\u53f8\u7684\u7cfb\u7d71\u67b6\u69cb\n\n| \u516c\u53f8           | \u53c3\u|\n|----------------||\n| Amazon         | [Amazon \u7684\u67b6\u69cb](http://highscalability.com/amazon-architecture|\n| Cinchcast      | [\u6bcf\u5929\u7522\u751f 1,500 \u5c0f\u6642\u7684\u97f3\u6a02](http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html|\n| DataSift       | [\u6bcf\u79d2\u63a2\u52d8 120,000 \u5247 tweet](http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html|\n| DropBox        | [\u6211\u5011\u5982\u4f55\u64f4\u5c55 Dropbox](https://www.youtube.com/watch?v=PE4gwstWhmc)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| ESPN           | [\u6bcf\u79d2\u64cd\u4f5c 100,000 \u6b21 duh nuh nuhs](http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html|\n| Google         | [Google \u7684\u67b6\u69cb](http://highscalability.com/google-architecture|\n| Instagram      | [\u4e00\u5343\u56db\u767e\u842c\u500b\u4f7f\u7528\u8005\uff0cTB \u7b49\u7d1a\u7684\u7167\u7247\u5132\u5b58](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)<br/>[\u4ec0\u9ebc\u9a45\u52d5\u8457 Instagram](http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances)                                                                                                                                                                                                                                                                                                                                                                                                 |\n| Justin.tv      | [Justin.Tv \u7684\u5373\u6642\u5f71\u7247\u5ee3\u64ad\u67b6\u69cb](http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html|\n| Facebook       | [Facebook \u53ef\u64f4\u5c55\u7684 memcached \u67b6\u69cb](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf)<br/>[TAO: Facebook \u70ba\u4e86\u793e\u4ea4\u7db2\u8def\u67b6\u69cb\u7684\u5206\u6563\u5f0f\u8cc7\u6599\u5132\u5b58](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf)<br/>[Facebook \u7684\u5716\u7247\u5132\u5b58\u67b6\u69cb](https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf)                                                                                                                                                                                                                                                     |\n| Flickr         | [Flickr \u7684\u67b6\u69cb](http://highscalability.com/flickr-architecture|\n| Mailbox        | [\u5728\u516d\u9031\u5167\u5f9e 0 \u5230 100 \u842c\u500b\u4f7f\u7528\u8005](http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html|\n| Pinterest      | [\u5f9e\u96f6\u5230\u6bcf\u500b\u6708\u6578\u5341\u5104\u6b21\u7684\u700f\u89bd\u91cf](http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html)<br/>[1800 \u842c\u500b\u8a2a\u554f\u4eba\u6b21\u300110 \u500d\u6210\u9577\u300112 \u540d\u54e1\u5de5](http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html)                                                                                                                                                                                                                                                                                                                                                                                |\n| Playfish       | [\u6708\u4f7f\u7528\u8005\u91cf 5000 \u842c\u4eba\u6b21\u5728\u6210\u9577](http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html|\n| PlentyOfFish   | [PlentyOfFish \u7684\u67b6\u69cb](http://highscalability.com/plentyoffish-architecture|\n| Salesforce     | [\u5982\u4f55\u8655\u7406\u6bcf\u5929 13 \u5104\u7b46\u4ea4\u6613](http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| Stack Overflow | [Stack Overflow \u7684\u67b6\u69cb](http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html|\n| TripAdvisor    | [4000 \u842c\u7684\u8a2a\u554f\u4eba\u6b21\u30012 \u5104\u6b21\u9801\u9762\u700f\u89bd\u91cf\u300130 TB \u7684\u8cc7\u6599](http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n| Tumblr         | [\u6bcf\u6708 150 \u5104\u7684\u700f\u89bd\u91cf](http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html|\n| Twitter        | [\u5982\u4f55\u8b93 Twitter \u7684\u901f\u5ea6\u6210\u9577 10000 \u500d](http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster)<br/>[\u4f7f\u7528 MySQL \u5132\u5b58\u6bcf\u5929 2.5 \u5104\u689d tweet](http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html)<br/>[1.5 \u5104\u7684\u6d3b\u8e8d\u4f7f\u7528\u8005\u3001300K QPS\u300122 MB/S \u7684\u4e32\u6d41\u8cc7\u6599](http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html)<br/>[\u53ef\u64f4\u5c55\u7684 Timelines](https://www.infoq.com/presentations/Twitter-Timeline-Scalability)<br/>[Twitter \u7684\u5927\u5927\u5c0f\u5c0f\u7684\u8cc7\u6599](https://www.youtube.com/watch?v=5cKTP36HVgI)<br/>[Twitter \u7684\u904b\u71df\uff1a\u64f4\u5c55\u8d85\u904e\u4e00\u5104\u500b\u4f7f\u7528\u8005](https://www.youtube.com/watch?v=z8LU0Cj6BOU) |\n| Uber           | [Uber \u662f\u5982\u4f55\u64f4\u5c55\u4ed6\u5011\u7684\u53ca\u6642\u884c\u92b7\u5e73\u53f0](http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| WhatsApp       | [\u8b93 Facebook \u7528 $190 \u5104\u8cfc\u8cb7\u4e0b\u4f86\u7684 WhatsApp \u7684\u67b6\u69cb](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n| YouTube        | [YouTube \u7684\u53ef\u64f4\u5c55\u6027](https://www.youtube.com/watch?v=w5WVu624fY8)[YouTube \u7684\u67b6\u69cb](http://highscalability.com/youtube-architecture)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n\n### \u516c\u53f8\u7684\u5de5\u7a0b\u90e8\u843d\u683c\n\n> \u4f60\u5373\u5c07\u9762\u8a66\u7684\u516c\u53f8\u7684\u67b6\u69cb\n>\n> \u4f60\u88ab\u554f\u5230\u7684\u554f\u984c\u53ef\u80fd\u5c31\u4f86\u81ea\u65bc\u76f8\u540c\u9818\u57df\u7684\u554f\u984c\n\n* [Airbnb Engineering](http://nerds.airbnb.com/)\n* [Atlassian Developers](https://developer.atlassian.com/blog/)\n* [Autodesk Engineering](http://cloudengineering.autodesk.com/blog/)\n* [AWS Blog](https://aws.amazon.com/blogs/aws/)\n* [Bitly Engineering Blog](http://word.bitly.com/)\n* [Box Blogs](https://www.box.com/blog/engineering/)\n* [Cloudera Developer Blog](http://blog.cloudera.com/blog/)\n* [Dropbox Tech Blog](https://tech.dropbox.com/)\n* [Engineering at Quora](http://engineering.quora.com/)\n* [Ebay Tech Blog](http://www.ebaytechblog.com/)\n* [Evernote Tech Blog](https://blog.evernote.com/tech/)\n* [Etsy Code as Craft](http://codeascraft.com/)\n* [Facebook Engineering](https://www.facebook.com/Engineering)\n* [Flickr Code](http://code.flickr.net/)\n* [Foursquare Engineering Blog](http://engineering.foursquare.com/)\n* [GitHub Engineering Blog](https://github.blog/category/engineering)\n* [Google Research Blog](http://googleresearch.blogspot.com/)\n* [Groupon Engineering Blog](https://engineering.groupon.com/)\n* [Heroku Engineering Blog](https://engineering.heroku.com/)\n* [Hubspot Engineering Blog](http://product.hubspot.com/blog/topic/engineering)\n* [High Scalability](http://highscalability.com/)\n* [Instagram Engineering](http://instagram-engineering.tumblr.com/)\n* [Intel Software Blog](https://software.intel.com/en-us/blogs/)\n* [Jane Street Tech Blog](https://blogs.janestreet.com/category/ocaml/)\n* [LinkedIn Engineering](http://engineering.linkedin.com/blog)\n* [Microsoft Engineering](https://engineering.microsoft.com/)\n* [Microsoft Python Engineering](https://blogs.msdn.microsoft.com/pythonengineering/)\n* [Netflix Tech Blog](http://techblog.netflix.com/)\n* [Paypal Developer Blog](https://devblog.paypal.com/category/engineering/)\n* [Pinterest Engineering Blog](http://engineering.pinterest.com/)\n* [Quora Engineering](https://engineering.quora.com/)\n* [Reddit Blog](http://www.redditblog.com/)\n* [Salesforce Engineering Blog](https://developer.salesforce.com/blogs/engineering/)\n* [Slack Engineering Blog](https://slack.engineering/)\n* [Spotify Labs](https://labs.spotify.com/)\n* [Stripe Engineering Blog](https://stripe.com/blog/engineering)\n* [Twilio Engineering Blog](http://www.twilio.com/engineering)\n* [Twitter Engineering](https://engineering.twitter.com/)\n* [Uber Engineering Blog](http://eng.uber.com/)\n* [Yahoo Engineering Blog](http://yahooeng.tumblr.com/)\n* [Yelp Engineering Blog](http://engineeringblog.yelp.com/)\n* [Zynga Engineering Blog](https://www.zynga.com/blogs/engineering)\n\n#### \u4f86\u6e90\u53ca\u5ef6\u4f38\u95b1\u8b80\n\n* [kilimchoi/engineering-blogs](https://github.com/kilimchoi/engineering-blogs)\n\n## \u4ecd\u5728\u9032\u884c\u4e2d\n\n\u6709\u8208\u8da3\u589e\u52a0\u4e00\u4e9b\u5167\u5bb9\uff0c\u6216\u5e6b\u5fd9\u5b8c\u5584\u67d0\u4e9b\u90e8\u5206\u55ce\uff1f [\u4f86\u8ca2\u737b\u5427](#\u5982\u4f55\u8ca2\u737b)!\n\n* \u4f7f\u7528 MapReduce \u9032\u884c\u5206\u6563\u5f0f\u904b\u7b97\n* \u4e00\u81f4\u6027\u7684 hashing\n* \u76f4\u63a5\u8a18\u61b6\u9ad4\u5b58\u53d6\n* [\u8ca2\u737b](#\u5982\u4f55\u8ca2\u737b)\n\n## \u81f4\u8b1d\n\n\u5728\u9019\u500b Repository \u4e2d\u63d0\u4f9b\u7684\u4efb\u4f55\u4f86\u6e90\u548c\u958b\u653e\u539f\u59cb\u78bc\u5eab\n\n\u7279\u5225\u611f\u8b1d\uff1a\n\n* [Hired in tech](http://www.hiredintech.com/system-design/the-system-design-process/)\n* [Cracking the coding interview](https://www.amazon.com/dp/0984782850/)\n* [High scalability](http://highscalability.com/)\n* [checkcheckzz/system-design-interview](https://github.com/checkcheckzz/system-design-interview)\n* [shashank88/system_design](https://github.com/shashank88/system_design)\n* [mmcgrana/services-engineering](https://github.com/mmcgrana/services-engineering)\n* [System design cheat sheet](https://gist.github.com/vasanthk/485d1c25737e8e72759f)\n* [A distributed systems reading list](http://dancres.github.io/Pages/)\n* [Cracking the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n\n## \u806f\u7d61\u8cc7\u8a0a\n\n\u96a8\u6642\u6b61\u8fce\u8207\u6211\u8a0e\u8ad6\u76f8\u95dc\u7684\u554f\u984c\u6216\u610f\u898b\u3002\n\n\u6211\u7684\u806f\u7d61\u8cc7\u8a0a\u53ef\u4ee5\u5728\u6211\u7684 [GitHub \u4e3b\u9801](https://github.com/donnemartin) \u4e2d\u627e\u5230\u3002\n\n## \u6388\u6b0a\n\n*\u6211\u5df2\u958b\u653e\u539f\u59cb\u78bc\u6388\u6b0a\u7684\u65b9\u5f0f\u63d0\u4f9b\u4f60\u5728\u6b64\u5132\u5b58\u5eab\u4e2d\u7684\u7a0b\u5f0f\u78bc\u548c\u8cc7\u6e90\u3002\u56e0\u70ba\u9019\u662f\u6211\u500b\u4eba\u7684\u5132\u5b58\u5eab\uff0c\u6240\u4ee5\u4f60\u6240\u4ee5\u6240\u6536\u5230\u7684\u4f7f\u7528\u8a31\u53ef\u662f\u4f86\u81ea\u65bc\u6211\uff0c\u4e26\u975e\u6211\u7684\u96c7\u4e3b(Facebook)*\n\n    Copyright 2017 Donne Martin\n\n    Creative Commons Attribution 4.0 International License (CC BY 4.0)\n\n    http://creativecommons.org/licenses/by/4.0/\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "README.md", "size": 109526, "license": "NOASSERTION", "content_sha": "90d2a6aca650a316b5202926fc06dee50c65de7b", "findings": [], "content": "*[English](README.md) \u2219 [\u65e5\u672c\u8a9e](README-ja.md) \u2219 [\u7b80\u4f53\u4e2d\u6587](README-zh-Hans.md) \u2219 [\u7e41\u9ad4\u4e2d\u6587](README-zh-TW.md) | [\u0627\u0644\u0639\u064e\u0631\u064e\u0628\u0650\u064a\u064e\u0651\u0629\u200e](https://github.com/donnemartin/system-design-primer/issues/170) \u2219 [\u09ac\u09be\u0982\u09b2\u09be](https://github.com/donnemartin/system-design-primer/issues/220) \u2219 [Portugu\u00eas do Brasil](https://github.com/donnemartin/system-design-primer/issues/40) \u2219 [Deutsch](https://github.com/donnemartin/system-design-primer/issues/186) \u2219 [\u03b5\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac](https://github.com/donnemartin/system-design-primer/issues/130) \u2219 [\u05e2\u05d1\u05e8\u05d9\u05ea](https://github.com/donnemartin/system-design-primer/issues/272) \u2219 [Italiano](https://github.com/donnemartin/system-design-primer/issues/104) \u2219 [\ud55c\uad6d\uc5b4](https://github.com/donnemartin/system-design-primer/issues/102) \u2219 [\u0641\u0627\u0631\u0633\u06cc](https://github.com/donnemartin/system-design-primer/issues/110) \u2219 [Polski](https://github.com/donnemartin/system-design-primer/issues/68) \u2219 [\u0440\u0443\u0441\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a](https://github.com/donnemartin/system-design-primer/issues/87) \u2219 [Espa\u00f1ol](https://github.com/donnemartin/system-design-primer/issues/136) \u2219 [\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22](https://github.com/donnemartin/system-design-primer/issues/187) \u2219 [T\u00fcrk\u00e7e](https://github.com/donnemartin/system-design-primer/issues/39) \u2219 [ti\u1ebfng Vi\u1ec7t](https://github.com/donnemartin/system-design-primer/issues/127) \u2219 [Fran\u00e7ais](https://github.com/donnemartin/system-design-primer/issues/250) | [Add Translation](https://github.com/donnemartin/system-design-primer/issues/28)*\n\n**Help [translate](TRANSLATIONS.md) this guide!**\n\n# The System Design Primer\n\n<p align=\"center\">\n  <img src=\"images/jj3A5N8.png\">\n  <br/>\n</p>\n\n## Motivation\n\n> Learn how to design large-scale systems.\n>\n> Prep for the system design interview.\n\n### Learn how to design large-scale systems\n\nLearning how to design scalable systems will help you become a better engineer.\n\nSystem design is a broad topic.  There is a **vast amount of resources scattered throughout the web** on system design principles.\n\nThis repo is an **organized collection** of resources to help you learn how to build systems at scale.\n\n### Learn from the open source community\n\nThis is a continually updated, open source project.\n\n[Contributions](#contributing) are welcome!\n\n### Prep for the system design interview\n\nIn addition to coding interviews, system design is a **required component** of the **technical interview process** at many tech companies.\n\n**Practice common system design interview questions** and **compare** your results with **sample solutions**: discussions, code, and diagrams.\n\nAdditional topics for interview prep:\n\n* [Study guide](#study-guide)\n* [How to approach a system design interview question](#how-to-approach-a-system-design-interview-question)\n* [System design interview questions, **with solutions**](#system-design-interview-questions-with-solutions)\n* [Object-oriented design interview questions, **with solutions**](#object-oriented-design-interview-questions-with-solutions)\n* [Additional system design interview questions](#additional-system-design-interview-questions)\n\n## Anki flashcards\n\n<p align=\"center\">\n  <img src=\"images/zdCAkB3.png\">\n  <br/>\n</p>\n\nThe provided [Anki flashcard decks](https://apps.ankiweb.net/) use spaced repetition to help you retain key system design concepts.\n\n* [System design deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design.apkg)\n* [System design exercises deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/System%20Design%20Exercises.apkg)\n* [Object oriented design exercises deck](https://github.com/donnemartin/system-design-primer/tree/master/resources/flash_cards/OO%20Design.apkg)\n\nGreat for use while on-the-go.\n\n### Coding Resource: Interactive Coding Challenges\n\nLooking for resources to help you prep for the [**Coding Interview**](https://github.com/donnemartin/interactive-coding-challenges)?\n\n<p align=\"center\">\n  <img src=\"images/b4YtAEN.png\">\n  <br/>\n</p>\n\nCheck out the sister repo [**Interactive Coding Challenges**](https://github.com/donnemartin/interactive-coding-challenges), which contains an additional Anki deck:\n\n* [Coding deck](https://github.com/donnemartin/interactive-coding-challenges/tree/master/anki_cards/Coding.apkg)\n\n## Contributing\n\n> Learn from the community.\n\nFeel free to submit pull requests to help:\n\n* Fix errors\n* Improve sections\n* Add new sections\n* [Translate](https://github.com/donnemartin/system-design-primer/issues/28)\n\nContent that needs some polishing is placed [under development](#under-development).\n\nReview the [Contributing Guidelines](CONTRIBUTING.md).\n\n## Index of system design topics\n\n> Summaries of various system design topics, including pros and cons.  **Everything is a trade-off**.\n>\n> Each section contains links to more in-depth resources.\n\n<p align=\"center\">\n  <img src=\"images/jrUBAF7.png\">\n  <br/>\n</p>\n\n* [System design topics: start here](#system-design-topics-start-here)\n    * [Step 1: Review the scalability video lecture](#step-1-review-the-scalability-video-lecture)\n    * [Step 2: Review the scalability article](#step-2-review-the-scalability-article)\n    * [Next steps](#next-steps)\n* [Performance vs scalability](#performance-vs-scalability)\n* [Latency vs throughput](#latency-vs-throughput)\n* [Availability vs consistency](#availability-vs-consistency)\n    * [CAP theorem](#cap-theorem)\n        * [CP - consistency and partition tolerance](#cp---consistency-and-partition-tolerance)\n        * [AP - availability and partition tolerance](#ap---availability-and-partition-tolerance)\n* [Consistency patterns](#consistency-patterns)\n    * [Weak consistency](#weak-consistency)\n    * [Eventual consistency](#eventual-consistency)\n    * [Strong consistency](#strong-consistency)\n* [Availability patterns](#availability-patterns)\n    * [Fail-over](#fail-over)\n    * [Replication](#replication)\n    * [Availability in numbers](#availability-in-numbers)\n* [Domain name system](#domain-name-system)\n* [Content delivery network](#content-delivery-network)\n    * [Push CDNs](#push-cdns)\n    * [Pull CDNs](#pull-cdns)\n* [Load balancer](#load-balancer)\n    * [Active-passive](#active-passive)\n    * [Active-active](#active-active)\n    * [Layer 4 load balancing](#layer-4-load-balancing)\n    * [Layer 7 load balancing](#layer-7-load-balancing)\n    * [Horizontal scaling](#horizontal-scaling)\n* [Reverse proxy (web server)](#reverse-proxy-web-server)\n    * [Load balancer vs reverse proxy](#load-balancer-vs-reverse-proxy)\n* [Application layer](#application-layer)\n    * [Microservices](#microservices)\n    * [Service discovery](#service-discovery)\n* [Database](#database)\n    * [Relational database management system (RDBMS)](#relational-database-management-system-rdbms)\n        * [Master-slave replication](#master-slave-replication)\n        * [Master-master replication](#master-master-replication)\n        * [Federation](#federation)\n        * [Sharding](#sharding)\n        * [Denormalization](#denormalization)\n        * [SQL tuning](#sql-tuning)\n    * [NoSQL](#nosql)\n        * [Key-value store](#key-value-store)\n        * [Document store](#document-store)\n        * [Wide column store](#wide-column-store)\n        * [Graph Database](#graph-database)\n    * [SQL or NoSQL](#sql-or-nosql)\n* [Cache](#cache)\n    * [Client caching](#client-caching)\n    * [CDN caching](#cdn-caching)\n    * [Web server caching](#web-server-caching)\n    * [Database caching](#database-caching)\n    * [Application caching](#application-caching)\n    * [Caching at the database query level](#caching-at-the-database-query-level)\n    * [Caching at the object level](#caching-at-the-object-level)\n    * [When to update the cache](#when-to-update-the-cache)\n        * [Cache-aside](#cache-aside)\n        * [Write-through](#write-through)\n        * [Write-behind (write-back)](#write-behind-write-back)\n        * [Refresh-ahead](#refresh-ahead)\n* [Asynchronism](#asynchronism)\n    * [Message queues](#message-queues)\n    * [Task queues](#task-queues)\n    * [Back pressure](#back-pressure)\n* [Communication](#communication)\n    * [Transmission control protocol (TCP)](#transmission-control-protocol-tcp)\n    * [User datagram protocol (UDP)](#user-datagram-protocol-udp)\n    * [Remote procedure call (RPC)](#remote-procedure-call-rpc)\n    * [Representational state transfer (REST)](#representational-state-transfer-rest)\n* [Security](#security)\n* [Appendix](#appendix)\n    * [Powers of two table](#powers-of-two-table)\n    * [Latency numbers every programmer should know](#latency-numbers-every-programmer-should-know)\n    * [Additional system design interview questions](#additional-system-design-interview-questions)\n    * [Real world architectures](#real-world-architectures)\n    * [Company architectures](#company-architectures)\n    * [Company engineering blogs](#company-engineering-blogs)\n* [Under development](#under-development)\n* [Credits](#credits)\n* [Contact info](#contact-info)\n* [License](#license)\n\n## Study guide\n\n> Suggested topics to review based on your interview timeline (short, medium, long).\n\n![Imgur](images/OfVllex.png)\n\n**Q: For interviews, do I need to know everything here?**\n\n**A: No, you don't need to know everything here to prepare for the interview**.\n\nWhat you are asked in an interview depends on variables such as:\n\n* How much experience you have\n* What your technical background is\n* What positions you are interviewing for\n* Which companies you are interviewing with\n* Luck\n\nMore experienced candidates are generally expected to know more about system design.  Architects or team leads might be expected to know more than individual contributors.  Top tech companies are likely to have one or more design interview rounds.\n\nStart broad and go deeper in a few areas.  It helps to know a little about various key system design topics.  Adjust the following guide based on your timeline, experience, what positions you are interviewing for, and which companies you are interviewing with.\n\n* **Short timeline** - Aim for **breadth** with system design topics.  Practice by solving **some** interview questions.\n* **Medium timeline** - Aim for **breadth** and **some depth** with system design topics.  Practice by solving **many** interview questions.\n* **Long timeline** - Aim for **breadth** and **more depth** with system design topics.  Practice by solving **most** interview questions.\n\n| | Short | Medium | Long |\n|---|---|---|---|\n| Read through the [System design topics](#index-of-system-design-topics) to get a broad understanding of how systems work | :+1: | :+1: | :+1: |\n| Read through a few articles in the [Company engineering blogs](#company-engineering-blogs) for the companies you are interviewing with | :+1: | :+1: | :+1: |\n| Read through a few [Real world architectures](#real-world-architectures) | :+1: | :+1: | :+1: |\n| Review [How to approach a system design interview question](#how-to-approach-a-system-design-interview-question) | :+1: | :+1: | :+1: |\n| Work through [System design interview questions with solutions](#system-design-interview-questions-with-solutions) | Some | Many | Most |\n| Work through [Object-oriented design interview questions with solutions](#object-oriented-design-interview-questions-with-solutions) | Some | Many | Most |\n| Review [Additional system design interview questions](#additional-system-design-interview-questions) | Some | Many | Most |\n\n## How to approach a system design interview question\n\n> How to tackle a system design interview question.\n\nThe system design interview is an **open-ended conversation**.  You are expected to lead it.\n\nYou can use the following steps to guide the discussion.  To help solidify this process, work through the [System design interview questions with solutions](#system-design-interview-questions-with-solutions) section using the following steps.\n\n### Step 1: Outline use cases, constraints, and assumptions\n\nGather requirements and scope the problem.  Ask questions to clarify use cases and constraints.  Discuss assumptions.\n\n* Who is going to use it?\n* How are they going to use it?\n* How many users are there?\n* What does the system do?\n* What are the inputs and outputs of the system?\n* How much data do we expect to handle?\n* How many requests per second do we expect?\n* What is the expected read to write ratio?\n\n### Step 2: Create a high level design\n\nOutline a high level design with all important components.\n\n* Sketch the main components and connections\n* Justify your ideas\n\n### Step 3: Design core components\n\nDive into details for each core component.  For example, if you were asked to [design a url shortening service](solutions/system_design/pastebin/README.md), discuss:\n\n* Generating and storing a hash of the full url\n    * [MD5](solutions/system_design/pastebin/README.md) and [Base62](solutions/system_design/pastebin/README.md)\n    * Hash collisions\n    * SQL or NoSQL\n    * Database schema\n* Translating a hashed url to the full url\n    * Database lookup\n* API and object-oriented design\n\n### Step 4: Scale the design\n\nIdentify and address bottlenecks, given the constraints.  For example, do you need the following to address scalability issues?\n\n* Load balancer\n* Horizontal scaling\n* Caching\n* Database sharding\n\nDiscuss potential solutions and trade-offs.  Everything is a trade-off.  Address bottlenecks using [principles of scalable system design](#index-of-system-design-topics).\n\n### Back-of-the-envelope calculations\n\nYou might be asked to do some estimates by hand.  Refer to the [Appendix](#appendix) for the following resources:\n\n* [Use back of the envelope calculations](http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)\n* [Powers of two table](#powers-of-two-table)\n* [Latency numbers every programmer should know](#latency-numbers-every-programmer-should-know)\n\n### Source(s) and further reading\n\nCheck out the following links to get a better idea of what to expect:\n\n* [How to ace a systems design interview](https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)\n* [The system design interview](http://www.hiredintech.com/system-design)\n* [Intro to Architecture and Systems Design Interviews](https://www.youtube.com/watch?v=ZgdS0EUmn70)\n* [System design template](https://leetcode.com/discuss/career/229177/My-System-Design-Template)\n\n## System design interview questions with solutions\n\n> Common system design interview questions with sample discussions, code, and diagrams.\n>\n> Solutions linked to content in the `solutions/` folder.\n\n| Question | |\n|---|---|\n| Design Pastebin.com (or Bit.ly) | [Solution](solutions/system_design/pastebin/README.md) |\n| Design the Twitter timeline and search (or Facebook feed and search) | [Solution](solutions/system_design/twitter/README.md) |\n| Design a web crawler | [Solution](solutions/system_design/web_crawler/README.md) |\n| Design Mint.com | [Solution](solutions/system_design/mint/README.md) |\n| Design the data structures for a social network | [Solution](solutions/system_design/social_graph/README.md) |\n| Design a key-value store for a search engine | [Solution](solutions/system_design/query_cache/README.md) |\n| Design Amazon's sales ranking by category feature | [Solution](solutions/system_design/sales_rank/README.md) |\n| Design a system that scales to millions of users on AWS | [Solution](solutions/system_design/scaling_aws/README.md) |\n| Add a system design question | [Contribute](#contributing) |\n\n### Design Pastebin.com (or Bit.ly)\n\n[View exercise and solution](solutions/system_design/pastebin/README.md)\n\n![Imgur](images/4edXG0T.png)\n\n### Design the Twitter timeline and search (or Facebook feed and search)\n\n[View exercise and solution](solutions/system_design/twitter/README.md)\n\n![Imgur](images/jrUBAF7.png)\n\n### Design a web crawler\n\n[View exercise and solution](solutions/system_design/web_crawler/README.md)\n\n![Imgur](images/bWxPtQA.png)\n\n### Design Mint.com\n\n[View exercise and solution](solutions/system_design/mint/README.md)\n\n![Imgur](images/V5q57vU.png)\n\n### Design the data structures for a social network\n\n[View exercise and solution](solutions/system_design/social_graph/README.md)\n\n![Imgur](images/cdCv5g7.png)\n\n### Design a key-value store for a search engine\n\n[View exercise and solution](solutions/system_design/query_cache/README.md)\n\n![Imgur](images/4j99mhe.png)\n\n### Design Amazon's sales ranking by category feature\n\n[View exercise and solution](solutions/system_design/sales_rank/README.md)\n\n![Imgur](images/MzExP06.png)\n\n### Design a system that scales to millions of users on AWS\n\n[View exercise and solution](solutions/system_design/scaling_aws/README.md)\n\n![Imgur](images/jj3A5N8.png)\n\n## Object-oriented design interview questions with solutions\n\n> Common object-oriented design interview questions with sample discussions, code, and diagrams.\n>\n> Solutions linked to content in the `solutions/` folder.\n\n>**Note: This section is under development**\n\n| Question | |\n|---|---|\n| Design a hash map | [Solution](solutions/object_oriented_design/hash_table/hash_map.ipynb)  |\n| Design a least recently used cache | [Solution](solutions/object_oriented_design/lru_cache/lru_cache.ipynb)  |\n| Design a call center | [Solution](solutions/object_oriented_design/call_center/call_center.ipynb)  |\n| Design a deck of cards | [Solution](solutions/object_oriented_design/deck_of_cards/deck_of_cards.ipynb)  |\n| Design a parking lot | [Solution](solutions/object_oriented_design/parking_lot/parking_lot.ipynb)  |\n| Design a chat server | [Solution](solutions/object_oriented_design/online_chat/online_chat.ipynb)  |\n| Design a circular array | [Contribute](#contributing)  |\n| Add an object-oriented design question | [Contribute](#contributing) |\n\n## System design topics: start here\n\nNew to system design?\n\nFirst, you'll need a basic understanding of common principles, learning about what they are, how they are used, and their pros and cons.\n\n### Step 1: Review the scalability video lecture\n\n[Scalability Lecture at Harvard](https://www.youtube.com/watch?v=-W9F__D3oY4)\n\n* Topics covered:\n    * Vertical scaling\n    * Horizontal scaling\n    * Caching\n    * Load balancing\n    * Database replication\n    * Database partitioning\n\n### Step 2: Review the scalability article\n\n[Scalability](https://web.archive.org/web/20221030091841/http://www.lecloud.net/tagged/scalability/chrono)\n\n* Topics covered:\n    * [Clones](https://web.archive.org/web/20220530193911/https://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n    * [Databases](https://web.archive.org/web/20220602114024/https://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n    * [Caches](https://web.archive.org/web/20230126233752/https://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n    * [Asynchronism](https://web.archive.org/web/20220926171507/https://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism)\n\n### Next steps\n\nNext, we'll look at high-level trade-offs:\n\n* **Performance** vs **scalability**\n* **Latency** vs **throughput**\n* **Availability** vs **consistency**\n\nKeep in mind that **everything is a trade-off**.\n\nThen we'll dive into more specific topics such as DNS, CDNs, and load balancers.\n\n## Performance vs scalability\n\nA service is **scalable** if it results in increased **performance** in a manner proportional to resources added. Generally, increasing performance means serving more units of work, but it can also be to handle larger units of work, such as when datasets grow.<sup><a href=http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html>1</a></sup>\n\nAnother way to look at performance vs scalability:\n\n* If you have a **performance** problem, your system is slow for a single user.\n* If you have a **scalability** problem, your system is fast for a single user but slow under heavy load.\n\n### Source(s) and further reading\n\n* [A word on scalability](http://www.allthingsdistributed.com/2006/03/a_word_on_scalability.html)\n* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n\n## Latency vs throughput\n\n**Latency** is the time to perform some action or to produce some result.\n\n**Throughput** is the number of such actions or results per unit of time.\n\nGenerally, you should aim for **maximal throughput** with **acceptable latency**.\n\n### Source(s) and further reading\n\n* [Understanding latency vs throughput](https://community.cadence.com/cadence_blogs_8/b/fv/posts/understanding-latency-vs-throughput)\n\n## Availability vs consistency\n\n### CAP theorem\n\n<p align=\"center\">\n  <img src=\"images/bgLMI2u.png\">\n  <br/>\n  <i><a href=http://robertgreiner.com/2014/08/cap-theorem-revisited>Source: CAP theorem revisited</a></i>\n</p>\n\nIn a distributed computer system, you can only support two of the following guarantees:\n\n* **Consistency** - Every read receives the most recent write or an error\n* **Availability** - Every request receives a response, without guarantee that it contains the most recent version of the information\n* **Partition Tolerance** - The system continues to operate despite arbitrary partitioning due to network failures\n\n*Networks aren't reliable, so you'll need to support partition tolerance.  You'll need to make a software tradeoff between consistency and availability.*\n\n#### CP - consistency and partition tolerance\n\nWaiting for a response from the partitioned node might result in a timeout error.  CP is a good choice if your business needs require atomic reads and writes.\n\n#### AP - availability and partition tolerance\n\nResponses return the most readily available version of the data available on any node, which might not be the latest.  Writes might take some time to propagate when the partition is resolved.\n\nAP is a good choice if the business needs to allow for [eventual consistency](#eventual-consistency) or when the system needs to continue working despite external errors.\n\n### Source(s) and further reading\n\n* [CAP theorem revisited](http://robertgreiner.com/2014/08/cap-theorem-revisited/)\n* [A plain english introduction to CAP theorem](http://ksat.me/a-plain-english-introduction-to-cap-theorem)\n* [CAP FAQ](https://github.com/henryr/cap-faq)\n* [The CAP theorem](https://www.youtube.com/watch?v=k-Yaq8AHlFA)\n\n## Consistency patterns\n\nWith multiple copies of the same data, we are faced with options on how to synchronize them so clients have a consistent view of the data.  Recall the definition of consistency from the [CAP theorem](#cap-theorem) - Every read receives the most recent write or an error.\n\n### Weak consistency\n\nAfter a write, reads may or may not see it.  A best effort approach is taken.\n\nThis approach is seen in systems such as memcached.  Weak consistency works well in real time use cases such as VoIP, video chat, and realtime multiplayer games.  For example, if you are on a phone call and lose reception for a few seconds, when you regain connection you do not hear what was spoken during connection loss.\n\n### Eventual consistency\n\nAfter a write, reads will eventually see it (typically within milliseconds).  Data is replicated asynchronously.\n\nThis approach is seen in systems such as DNS and email.  Eventual consistency works well in highly available systems.\n\n### Strong consistency\n\nAfter a write, reads will see it.  Data is replicated synchronously.\n\nThis approach is seen in file systems and RDBMSes.  Strong consistency works well in systems that need transactions.\n\n### Source(s) and further reading\n\n* [Transactions across data centers](http://snarfed.org/transactions_across_datacenters_io.html)\n\n## Availability patterns\n\nThere are two complementary patterns to support high availability: **fail-over** and **replication**.\n\n### Fail-over\n\n#### Active-passive\n\nWith active-passive fail-over, heartbeats are sent between the active and the passive server on standby.  If the heartbeat is interrupted, the passive server takes over the active's IP address and resumes service.\n\nThe length of downtime is determined by whether the passive server is already running in 'hot' standby or whether it needs to start up from 'cold' standby.  Only the active server handles traffic.\n\nActive-passive failover can also be referred to as master-slave failover.\n\n#### Active-active\n\nIn active-active, both servers are managing traffic, spreading the load between them.\n\nIf the servers are public-facing, the DNS would need to know about the public IPs of both servers.  If the servers are internal-facing, application logic would need to know about both servers.\n\nActive-active failover can also be referred to as master-master failover.\n\n### Disadvantage(s): failover\n\n* Fail-over adds more hardware and additional complexity.\n* There is a potential for loss of data if the active system fails before any newly written data can be replicated to the passive.\n\n### Replication\n\n#### Master-slave and master-master\n\nThis topic is further discussed in the [Database](#database) section:\n\n* [Master-slave replication](#master-slave-replication)\n* [Master-master replication](#master-master-replication)\n\n### Availability in numbers\n\nAvailability is often quantified by uptime (or downtime) as a percentage of time the service is available.  Availability is generally measured in number of 9s--a service with 99.99% availability is described as having four 9s.\n\n#### 99.9% availability - three 9s\n\n| Duration            | Acceptable downtime|\n|---------------------|--------------------|\n| Downtime per year   | 8h 45min 57s       |\n| Downtime per month  | 43m 49.7s          |\n| Downtime per week   | 10m 4.8s           |\n| Downtime per day    | 1m 26.4s           |\n\n#### 99.99% availability - four 9s\n\n| Duration            | Acceptable downtime|\n|---------------------|--------------------|\n| Downtime per year   | 52min 35.7s        |\n| Downtime per month  | 4m 23s             |\n| Downtime per week   | 1m 5s              |\n| Downtime per day    | 8.6s               |\n\n#### Availability in parallel vs in sequence\n\nIf a service consists of multiple components prone to failure, the service's overall availability depends on whether the components are in sequence or in parallel.\n\n###### In sequence\n\nOverall availability decreases when two components with availability < 100% are in sequence:\n\n```\nAvailability (Total) = Availability (Foo) * Availability (Bar)\n```\n\nIf both `Foo` and `Bar` each had 99.9% availability, their total availability in sequence would be 99.8%.\n\n###### In parallel\n\nOverall availability increases when two components with availability < 100% are in parallel:\n\n```\nAvailability (Total) = 1 - (1 - Availability (Foo)) * (1 - Availability (Bar))\n```\n\nIf both `Foo` and `Bar` each had 99.9% availability, their total availability in parallel would be 99.9999%.\n\n## Domain name system\n\n<p align=\"center\">\n  <img src=\"images/IOyLj4i.jpg\">\n  <br/>\n  <i><a href=http://www.slideshare.net/srikrupa5/dns-security-presentation-issa>Source: DNS security presentation</a></i>\n</p>\n\nA Domain Name System (DNS) translates a domain name such as www.example.com to an IP address.\n\nDNS is hierarchical, with a few authoritative servers at the top level.  Your router or ISP provides information about which DNS server(s) to contact when doing a lookup.  Lower level DNS servers cache mappings, which could become stale due to DNS propagation delays.  DNS results can also be cached by your browser or OS for a certain period of time, determined by the [time to live (TTL)](https://en.wikipedia.org/wiki/Time_to_live).\n\n* **NS record (name server)** - Specifies the DNS servers for your domain/subdomain.\n* **MX record (mail exchange)** - Specifies the mail servers for accepting messages.\n* **A record (address)** - Points a name to an IP address.\n* **CNAME (canonical)** - Points a name to another name or `CNAME` (example.com to www.example.com) or to an `A` record.\n\nServices such as [CloudFlare](https://www.cloudflare.com/dns/) and [Route 53](https://aws.amazon.com/route53/) provide managed DNS services.  Some DNS services can route traffic through various methods:\n\n* [Weighted round robin](https://www.jscape.com/blog/load-balancing-algorithms)\n    * Prevent traffic from going to servers under maintenance\n    * Balance between varying cluster sizes\n    * A/B testing\n* [Latency-based](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-latency.html)\n* [Geolocation-based](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geo.html)\n\n### Disadvantage(s): DNS\n\n* Accessing a DNS server introduces a slight delay, although mitigated by caching described above.\n* DNS server management could be complex and is generally managed by [governments, ISPs, and large companies](http://superuser.com/questions/472695/who-controls-the-dns-servers/472729).\n* DNS services have recently come under [DDoS attack](http://dyn.com/blog/dyn-analysis-summary-of-friday-october-21-attack/), preventing users from accessing websites such as Twitter without knowing Twitter's IP address(es).\n\n### Source(s) and further reading\n\n* [DNS architecture](https://technet.microsoft.com/en-us/library/dd197427(v=ws.10).aspx)\n* [Wikipedia](https://en.wikipedia.org/wiki/Domain_Name_System)\n* [DNS articles](https://support.dnsimple.com/categories/dns/)\n\n## Content delivery network\n\n<p align=\"center\">\n  <img src=\"images/h9TAuGI.jpg\">\n  <br/>\n  <i><a href=https://www.creative-artworks.eu/why-use-a-content-delivery-network-cdn/>Source: Why use a CDN</a></i>\n</p>\n\nA content delivery network (CDN) is a globally distributed network of proxy servers, serving content from locations closer to the user.  Generally, static files such as HTML/CSS/JS, photos, and videos are served from CDN, although some CDNs such as Amazon's CloudFront support dynamic content.  The site's DNS resolution will tell clients which server to contact.\n\nServing content from CDNs can significantly improve performance in two ways:\n\n* Users receive content from data centers close to them\n* Your servers do not have to serve requests that the CDN fulfills\n\n### Push CDNs\n\nPush CDNs receive new content whenever changes occur on your server.  You take full responsibility for providing content, uploading directly to the CDN and rewriting URLs to point to the CDN.  You can configure when content expires and when it is updated.  Content is uploaded only when it is new or changed, minimizing traffic, but maximizing storage.\n\nSites with a small amount of traffic or sites with content that isn't often updated work well with push CDNs.  Content is placed on the CDNs once, instead of being re-pulled at regular intervals.\n\n### Pull CDNs\n\nPull CDNs grab new content from your server when the first user requests the content.  You leave the content on your server and rewrite URLs to point to the CDN.  This results in a slower request until the content is cached on the CDN.\n\nA [time-to-live (TTL)](https://en.wikipedia.org/wiki/Time_to_live) determines how long content is cached.  Pull CDNs minimize storage space on the CDN, but can create redundant traffic if files expire and are pulled before they have actually changed.\n\nSites with heavy traffic work well with pull CDNs, as traffic is spread out more evenly with only recently-requested content remaining on the CDN.\n\n### Disadvantage(s): CDN\n\n* CDN costs could be significant depending on traffic, although this should be weighed with additional costs you would incur not using a CDN.\n* Content might be stale if it is updated before the TTL expires it.\n* CDNs require changing URLs for static content to point to the CDN.\n\n### Source(s) and further reading\n\n* [Globally distributed content delivery](https://figshare.com/articles/Globally_distributed_content_delivery/6605972)\n* [The differences between push and pull CDNs](http://www.travelblogadvice.com/technical/the-differences-between-push-and-pull-cdns/)\n* [Wikipedia](https://en.wikipedia.org/wiki/Content_delivery_network)\n\n## Load balancer\n\n<p align=\"center\">\n  <img src=\"images/h81n9iK.png\">\n  <br/>\n  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Source: Scalable system design patterns</a></i>\n</p>\n\nLoad balancers distribute incoming client requests to computing resources such as application servers and databases.  In each case, the load balancer returns the response from the computing resource to the appropriate client.  Load balancers are effective at:\n\n* Preventing requests from going to unhealthy servers\n* Preventing overloading resources\n* Helping to eliminate a single point of failure\n\nLoad balancers can be implemented with hardware (expensive) or with software such as HAProxy.\n\nAdditional benefits include:\n\n* **SSL termination** - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations\n    * Removes the need to install [X.509 certificates](https://en.wikipedia.org/wiki/X.509) on each server\n* **Session persistence** - Issue cookies and route a specific client's requests to same instance if the web apps do not keep track of sessions\n\nTo protect against failures, it's common to set up multiple load balancers, either in [active-passive](#active-passive) or [active-active](#active-active) mode.\n\nLoad balancers can route traffic based on various metrics, including:\n\n* Random\n* Least loaded\n* Session/cookies\n* [Round robin or weighted round robin](https://www.g33kinfo.com/info/round-robin-vs-weighted-round-robin-lb)\n* [Layer 4](#layer-4-load-balancing)\n* [Layer 7](#layer-7-load-balancing)\n\n### Layer 4 load balancing\n\nLayer 4 load balancers look at info at the [transport layer](#communication) to decide how to distribute requests.  Generally, this involves the source, destination IP addresses, and ports in the header, but not the contents of the packet.  Layer 4 load balancers forward network packets to and from the upstream server, performing [Network Address Translation (NAT)](https://www.nginx.com/resources/glossary/layer-4-load-balancing/).\n\n### Layer 7 load balancing\n\nLayer 7 load balancers look at the [application layer](#communication) to decide how to distribute requests.  This can involve contents of the header, message, and cookies.  Layer 7 load balancers terminate network traffic, reads the message, makes a load-balancing decision, then opens a connection to the selected server.  For example, a layer 7 load balancer can direct video traffic to servers that host videos while directing more sensitive user billing traffic to security-hardened servers.\n\nAt the cost of flexibility, layer 4 load balancing requires less time and computing resources than Layer 7, although the performance impact can be minimal on modern commodity hardware.\n\n### Horizontal scaling\n\nLoad balancers can also help with horizontal scaling, improving performance and availability.  Scaling out using commodity machines is more cost efficient and results in higher availability than scaling up a single server on more expensive hardware, called **Vertical Scaling**.  It is also easier to hire for talent working on commodity hardware than it is for specialized enterprise systems.\n\n#### Disadvantage(s): horizontal scaling\n\n* Scaling horizontally introduces complexity and involves cloning servers\n    * Servers should be stateless: they should not contain any user-related data like sessions or profile pictures\n    * Sessions can be stored in a centralized data store such as a [database](#database) (SQL, NoSQL) or a persistent [cache](#cache) (Redis, Memcached)\n* Downstream servers such as caches and databases need to handle more simultaneous connections as upstream servers scale out\n\n### Disadvantage(s): load balancer\n\n* The load balancer can become a performance bottleneck if it does not have enough resources or if it is not configured properly.\n* Introducing a load balancer to help eliminate a single point of failure results in increased complexity.\n* A single load balancer is a single point of failure, configuring multiple load balancers further increases complexity.\n\n### Source(s) and further reading\n\n* [NGINX architecture](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n* [HAProxy architecture guide](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n* [Scalability](http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones)\n* [Wikipedia](https://en.wikipedia.org/wiki/Load_balancing_(computing))\n* [Layer 4 load balancing](https://www.nginx.com/resources/glossary/layer-4-load-balancing/)\n* [Layer 7 load balancing](https://www.nginx.com/resources/glossary/layer-7-load-balancing/)\n* [ELB listener config](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html)\n\n## Reverse proxy (web server)\n\n<p align=\"center\">\n  <img src=\"images/n41Azff.png\">\n  <br/>\n  <i><a href=https://upload.wikimedia.org/wikipedia/commons/6/67/Reverse_proxy_h2g2bob.svg>Source: Wikipedia</a></i>\n  <br/>\n</p>\n\nA reverse proxy is a web server that centralizes internal services and provides unified interfaces to the public.  Requests from clients are forwarded to a server that can fulfill it before the reverse proxy returns the server's response to the client.\n\nAdditional benefits include:\n\n* **Increased security** - Hide information about backend servers, blacklist IPs, limit number of connections per client\n* **Increased scalability and flexibility** - Clients only see the reverse proxy's IP, allowing you to scale servers or change their configuration\n* **SSL termination** - Decrypt incoming requests and encrypt server responses so backend servers do not have to perform these potentially expensive operations\n    * Removes the need to install [X.509 certificates](https://en.wikipedia.org/wiki/X.509) on each server\n* **Compression** - Compress server responses\n* **Caching** - Return the response for cached requests\n* **Static content** - Serve static content directly\n    * HTML/CSS/JS\n    * Photos\n    * Videos\n    * Etc\n\n### Load balancer vs reverse proxy\n\n* Deploying a load balancer is useful when you have multiple servers.  Often, load balancers  route traffic to a set of servers serving the same function.\n* Reverse proxies can be useful even with just one web server or application server, opening up the benefits described in the previous section.\n* Solutions such as NGINX and HAProxy can support both layer 7 reverse proxying and load balancing.\n\n### Disadvantage(s): reverse proxy\n\n* Introducing a reverse proxy results in increased complexity.\n* A single reverse proxy is a single point of failure, configuring multiple reverse proxies (ie a [failover](https://en.wikipedia.org/wiki/Failover)) further increases complexity.\n\n### Source(s) and further reading\n\n* [Reverse proxy vs load balancer](https://www.nginx.com/resources/glossary/reverse-proxy-vs-load-balancer/)\n* [NGINX architecture](https://www.nginx.com/blog/inside-nginx-how-we-designed-for-performance-scale/)\n* [HAProxy architecture guide](http://www.haproxy.org/download/1.2/doc/architecture.txt)\n* [Wikipedia](https://en.wikipedia.org/wiki/Reverse_proxy)\n\n## Application layer\n\n<p align=\"center\">\n  <img src=\"images/yB5SYwm.png\">\n  <br/>\n  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Source: Intro to architecting systems for scale</a></i>\n</p>\n\nSeparating out the web layer from the application layer (also known as platform layer) allows you to scale and configure both layers independently.  Adding a new API results in adding application servers without necessarily adding additional web servers.  The **single responsibility principle** advocates for small and autonomous services that work together.  Small teams with small services can plan more aggressively for rapid growth.\n\nWorkers in the application layer also help enable [asynchronism](#asynchronism).\n\n### Microservices\n\nRelated to this discussion are [microservices](https://en.wikipedia.org/wiki/Microservices), which can be described as a suite of independently deployable, small, modular services.  Each service runs a unique process and communicates through a well-defined, lightweight mechanism to serve a business goal. <sup><a href=https://smartbear.com/learn/api-design/what-are-microservices>1</a></sup>\n\nPinterest, for example, could have the following microservices: user profile, follower, feed, search, photo upload, etc.\n\n### Service Discovery\n\nSystems such as [Consul](https://www.consul.io/docs/index.html), [Etcd](https://coreos.com/etcd/docs/latest), and [Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) can help services find each other by keeping track of registered names, addresses, and ports.  [Health checks](https://www.consul.io/intro/getting-started/checks.html) help verify service integrity and are often done using an [HTTP](#hypertext-transfer-protocol-http) endpoint.  Both Consul and Etcd have a built in [key-value store](#key-value-store) that can be useful for storing config values and other shared data.\n\n### Disadvantage(s): application layer\n\n* Adding an application layer with loosely coupled services requires a different approach from an architectural, operations, and process viewpoint (vs a monolithic system).\n* Microservices can add complexity in terms of deployments and operations.\n\n### Source(s) and further reading\n\n* [Intro to architecting systems for scale](http://lethain.com/introduction-to-architecting-systems-for-scale)\n* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n* [Service oriented architecture](https://en.wikipedia.org/wiki/Service-oriented_architecture)\n* [Introduction to Zookeeper](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper)\n* [Here's what you need to know about building microservices](https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/)\n\n## Database\n\n<p align=\"center\">\n  <img src=\"images/Xkm5CXz.png\">\n  <br/>\n  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Source: Scaling up to your first 10 million users</a></i>\n</p>\n\n### Relational database management system (RDBMS)\n\nA relational database like SQL is a collection of data items organized in tables.\n\n**ACID** is a set of properties of relational database [transactions](https://en.wikipedia.org/wiki/Database_transaction).\n\n* **Atomicity** - Each transaction is all or nothing\n* **Consistency** - Any transaction will bring the database from one valid state to another\n* **Isolation** - Executing transactions concurrently has the same results as if the transactions were executed serially\n* **Durability** - Once a transaction has been committed, it will remain so\n\nThere are many techniques to scale a relational database: **master-slave replication**, **master-master replication**, **federation**, **sharding**, **denormalization**, and **SQL tuning**.\n\n#### Master-slave replication\n\nThe master serves reads and writes, replicating writes to one or more slaves, which serve only reads.  Slaves can also replicate to additional slaves in a tree-like fashion.  If the master goes offline, the system can continue to operate in read-only mode until a slave is promoted to a master or a new master is provisioned.\n\n<p align=\"center\">\n  <img src=\"images/C9ioGtn.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\n##### Disadvantage(s): master-slave replication\n\n* Additional logic is needed to promote a slave to a master.\n* See [Disadvantage(s): replication](#disadvantages-replication) for points related to **both** master-slave and master-master.\n\n#### Master-master replication\n\nBoth masters serve reads and writes and coordinate with each other on writes.  If either master goes down, the system can continue to operate with both reads and writes.\n\n<p align=\"center\">\n  <img src=\"images/krAHLGg.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\n##### Disadvantage(s): master-master replication\n\n* You'll need a load balancer or you'll need to make changes to your application logic to determine where to write.\n* Most master-master systems are either loosely consistent (violating ACID) or have increased write latency due to synchronization.\n* Conflict resolution comes more into play as more write nodes are added and as latency increases.\n* See [Disadvantage(s): replication](#disadvantages-replication) for points related to **both** master-slave and master-master.\n\n##### Disadvantage(s): replication\n\n* There is a potential for loss of data if the master fails before any newly written data can be replicated to other nodes.\n* Writes are replayed to the read replicas.  If there are a lot of writes, the read replicas can get bogged down with replaying writes and can't do as many reads.\n* The more read slaves, the more you have to replicate, which leads to greater replication lag.\n* On some systems, writing to the master can spawn multiple threads to write in parallel, whereas read replicas only support writing sequentially with a single thread.\n* Replication adds more hardware and additional complexity.\n\n##### Source(s) and further reading: replication\n\n* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n* [Multi-master replication](https://en.wikipedia.org/wiki/Multi-master_replication)\n\n#### Federation\n\n<p align=\"center\">\n  <img src=\"images/U3qV33e.png\">\n  <br/>\n  <i><a href=https://www.youtube.com/watch?v=kKjm4ehYiMs>Source: Scaling up to your first 10 million users</a></i>\n</p>\n\nFederation (or functional partitioning) splits up databases by function.  For example, instead of a single, monolithic database, you could have three databases: **forums**, **users**, and **products**, resulting in less read and write traffic to each database and therefore less replication lag.  Smaller databases result in more data that can fit in memory, which in turn results in more cache hits due to improved cache locality.  With no single central master serializing writes you can write in parallel, increasing throughput.\n\n##### Disadvantage(s): federation\n\n* Federation is not effective if your schema requires huge functions or tables.\n* You'll need to update your application logic to determine which database to read and write.\n* Joining data from two databases is more complex with a [server link](http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers).\n* Federation adds more hardware and additional complexity.\n\n##### Source(s) and further reading: federation\n\n* [Scaling up to your first 10 million users](https://www.youtube.com/watch?v=kKjm4ehYiMs)\n\n#### Sharding\n\n<p align=\"center\">\n  <img src=\"images/wU8x5Id.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\nSharding distributes data across different databases such that each database can only manage a subset of the data.  Taking a users database as an example, as the number of users increases, more shards are added to the cluster.\n\nSimilar to the advantages of [federation](#federation), sharding results in less read and write traffic, less replication, and more cache hits.  Index size is also reduced, which generally improves performance with faster queries.  If one shard goes down, the other shards are still operational, although you'll want to add some form of replication to avoid data loss.  Like federation, there is no single central master serializing writes, allowing you to write in parallel with increased throughput.\n\nCommon ways to shard a table of users is either through the user's last name initial or the user's geographic location.\n\n##### Disadvantage(s): sharding\n\n* You'll need to update your application logic to work with shards, which could result in complex SQL queries.\n* Data distribution can become lopsided in a shard.  For example, a set of power users on a shard could result in increased load to that shard compared to others.\n    * Rebalancing adds additional complexity.  A sharding function based on [consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html) can reduce the amount of transferred data.\n* Joining data from multiple shards is more complex.\n* Sharding adds more hardware and additional complexity.\n\n##### Source(s) and further reading: sharding\n\n* [The coming of the shard](http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html)\n* [Shard database architecture](https://en.wikipedia.org/wiki/Shard_(database_architecture))\n* [Consistent hashing](http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html)\n\n#### Denormalization\n\nDenormalization attempts to improve read performance at the expense of some write performance.  Redundant copies of the data are written in multiple tables to avoid expensive joins.  Some RDBMS such as [PostgreSQL](https://en.wikipedia.org/wiki/PostgreSQL) and Oracle support [materialized views](https://en.wikipedia.org/wiki/Materialized_view) which handle the work of storing redundant information and keeping redundant copies consistent.\n\nOnce data becomes distributed with techniques such as [federation](#federation) and [sharding](#sharding), managing joins across data centers further increases complexity.  Denormalization might circumvent the need for such complex joins.\n\nIn most systems, reads can heavily outnumber writes 100:1 or even 1000:1.  A read resulting in a complex database join can be very expensive, spending a significant amount of time on disk operations.\n\n##### Disadvantage(s): denormalization\n\n* Data is duplicated.\n* Constraints can help redundant copies of information stay in sync, which increases complexity of the database design.\n* A denormalized database under heavy write load might perform worse than its normalized counterpart.\n\n###### Source(s) and further reading: denormalization\n\n* [Denormalization](https://en.wikipedia.org/wiki/Denormalization)\n\n#### SQL tuning\n\nSQL tuning is a broad topic and many [books](https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning) have been written as reference.\n\nIt's important to **benchmark** and **profile** to simulate and uncover bottlenecks.\n\n* **Benchmark** - Simulate high-load situations with tools such as [ab](http://httpd.apache.org/docs/2.2/programs/ab.html).\n* **Profile** - Enable tools such as the [slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html) to help track performance issues.\n\nBenchmarking and profiling might point you to the following optimizations.\n\n##### Tighten up the schema\n\n* MySQL dumps to disk in contiguous blocks for fast access.\n* Use `CHAR` instead of `VARCHAR` for fixed-length fields.\n    * `CHAR` effectively allows for fast, random access, whereas with `VARCHAR`, you must find the end of a string before moving onto the next one.\n* Use `TEXT` for large blocks of text such as blog posts.  `TEXT` also allows for boolean searches.  Using a `TEXT` field results in storing a pointer on disk that is used to locate the text block.\n* Use `INT` for larger numbers up to 2^32 or 4 billion.\n* Use `DECIMAL` for currency to avoid floating point representation errors.\n* Avoid storing large `BLOBS`, store the location of where to get the object instead.\n* `VARCHAR(255)` is the largest number of characters that can be counted in an 8 bit number, often maximizing the use of a byte in some RDBMS.\n* Set the `NOT NULL` constraint where applicable to [improve search performance](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search).\n\n##### Use good indices\n\n* Columns that you are querying (`SELECT`, `GROUP BY`, `ORDER BY`, `JOIN`) could be faster with indices.\n* Indices are usually represented as self-balancing [B-tree](https://en.wikipedia.org/wiki/B-tree) that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time.\n* Placing an index can keep the data in memory, requiring more space.\n* Writes could also be slower since the index also needs to be updated.\n* When loading large amounts of data, it might be faster to disable indices, load the data, then rebuild the indices.\n\n##### Avoid expensive joins\n\n* [Denormalize](#denormalization) where performance demands it.\n\n##### Partition tables\n\n* Break up a table by putting hot spots in a separate table to help keep it in memory.\n\n##### Tune the query cache\n\n* In some cases, the [query cache](https://dev.mysql.com/doc/refman/5.7/en/query-cache.html) could lead to [performance issues](https://www.percona.com/blog/2016/10/12/mysql-5-7-performance-tuning-immediately-after-installation/).\n\n##### Source(s) and further reading: SQL tuning\n\n* [Tips for optimizing MySQL queries](http://aiddroid.com/10-tips-optimizing-mysql-queries-dont-suck/)\n* [Is there a good reason i see VARCHAR(255) used so often?](http://stackoverflow.com/questions/1217466/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l)\n* [How do null values affect performance?](http://stackoverflow.com/questions/1017239/how-do-null-values-affect-performance-in-a-database-search)\n* [Slow query log](http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html)\n\n### NoSQL\n\nNoSQL is a collection of data items represented in a **key-value store**, **document store**, **wide column store**, or a **graph database**.  Data is denormalized, and joins are generally done in the application code.  Most NoSQL stores lack true ACID transactions and favor [eventual consistency](#eventual-consistency).\n\n**BASE** is often used to describe the properties of NoSQL databases.  In comparison with the [CAP Theorem](#cap-theorem), BASE chooses availability over consistency.\n\n* **Basically available** - the system guarantees availability.\n* **Soft state** - the state of the system may change over time, even without input.\n* **Eventual consistency** - the system will become consistent over a period of time, given that the system doesn't receive input during that period.\n\nIn addition to choosing between [SQL or NoSQL](#sql-or-nosql), it is helpful to understand which type of NoSQL database best fits your use case(s).  We'll review **key-value stores**, **document stores**, **wide column stores**, and **graph databases** in the next section.\n\n#### Key-value store\n\n> Abstraction: hash table\n\nA key-value store generally allows for O(1) reads and writes and is often backed by memory or SSD.  Data stores can maintain keys in [lexicographic order](https://en.wikipedia.org/wiki/Lexicographical_order), allowing efficient retrieval of key ranges.  Key-value stores can allow for storing of metadata with a value.\n\nKey-value stores provide high performance and are often used for simple data models or for rapidly-changing data, such as an in-memory cache layer.  Since they offer only a limited set of operations, complexity is shifted to the application layer if additional operations are needed.\n\nA key-value store is the basis for more complex systems such as a document store, and in some cases, a graph database.\n\n##### Source(s) and further reading: key-value store\n\n* [Key-value database](https://en.wikipedia.org/wiki/Key-value_database)\n* [Disadvantages of key-value stores](http://stackoverflow.com/questions/4056093/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or)\n* [Redis architecture](http://qnimate.com/overview-of-redis-architecture/)\n* [Memcached architecture](https://adayinthelifeof.nl/2011/02/06/memcache-internals/)\n\n#### Document store\n\n> Abstraction: key-value store with documents stored as values\n\nA document store is centered around documents (XML, JSON, binary, etc), where a document stores all information for a given object.  Document stores provide APIs or a query language to query based on the internal structure of the document itself.  *Note, many key-value stores include features for working with a value's metadata, blurring the lines between these two storage types.*\n\nBased on the underlying implementation, documents are organized by collections, tags, metadata, or directories.  Although documents can be organized or grouped together, documents may have fields that are completely different from each other.\n\nSome document stores like [MongoDB](https://www.mongodb.com/mongodb-architecture) and [CouchDB](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/) also provide a SQL-like language to perform complex queries.  [DynamoDB](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) supports both key-values and documents.\n\nDocument stores provide high flexibility and are often used for working with occasionally changing data.\n\n##### Source(s) and further reading: document store\n\n* [Document-oriented database](https://en.wikipedia.org/wiki/Document-oriented_database)\n* [MongoDB architecture](https://www.mongodb.com/mongodb-architecture)\n* [CouchDB architecture](https://blog.couchdb.org/2016/08/01/couchdb-2-0-architecture/)\n* [Elasticsearch architecture](https://www.elastic.co/blog/found-elasticsearch-from-the-bottom-up)\n\n#### Wide column store\n\n<p align=\"center\">\n  <img src=\"images/n16iOGk.png\">\n  <br/>\n  <i><a href=http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html>Source: SQL & NoSQL, a brief history</a></i>\n</p>\n\n> Abstraction: nested map `ColumnFamily<RowKey, Columns<ColKey, Value, Timestamp>>`\n\nA wide column store's basic unit of data is a column (name/value pair).  A column can be grouped in column families (analogous to a SQL table).  Super column families further group column families.  You can access each column independently with a row key, and columns with the same row key form a row.  Each value contains a timestamp for versioning and for conflict resolution.\n\nGoogle introduced [Bigtable](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) as the first wide column store, which influenced the open-source [HBase](https://www.edureka.co/blog/hbase-architecture/) often-used in the Hadoop ecosystem, and [Cassandra](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html) from Facebook.  Stores such as BigTable, HBase, and Cassandra maintain keys in lexicographic order, allowing efficient retrieval of selective key ranges.\n\nWide column stores offer high availability and high scalability.  They are often used for very large data sets.\n\n##### Source(s) and further reading: wide column store\n\n* [SQL & NoSQL, a brief history](http://blog.grio.com/2015/11/sql-nosql-a-brief-history.html)\n* [Bigtable architecture](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf)\n* [HBase architecture](https://www.edureka.co/blog/hbase-architecture/)\n* [Cassandra architecture](http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archIntro.html)\n\n#### Graph database\n\n<p align=\"center\">\n  <img src=\"images/fNcl65g.png\">\n  <br/>\n  <i><a href=https://en.wikipedia.org/wiki/File:GraphDatabase_PropertyGraph.png>Source: Graph database</a></i>\n</p>\n\n> Abstraction: graph\n\nIn a graph database, each node is a record and each arc is a relationship between two nodes.  Graph databases are optimized to represent complex relationships with many foreign keys or many-to-many relationships.\n\nGraphs databases offer high performance for data models with complex relationships, such as a social network.  They are relatively new and are not yet widely-used; it might be more difficult to find development tools and resources.  Many graphs can only be accessed with [REST APIs](#representational-state-transfer-rest).\n\n##### Source(s) and further reading: graph\n\n* [Graph database](https://en.wikipedia.org/wiki/Graph_database)\n* [Neo4j](https://neo4j.com/)\n* [FlockDB](https://blog.twitter.com/2010/introducing-flockdb)\n\n#### Source(s) and further reading: NoSQL\n\n* [Explanation of base terminology](http://stackoverflow.com/questions/3342497/explanation-of-base-terminology)\n* [NoSQL databases a survey and decision guidance](https://medium.com/baqend-blog/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq)\n* [Scalability](http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database)\n* [Introduction to NoSQL](https://www.youtube.com/watch?v=qI_g07C_Q5I)\n* [NoSQL patterns](http://horicky.blogspot.com/2009/11/nosql-patterns.html)\n\n### SQL or NoSQL\n\n<p align=\"center\">\n  <img src=\"images/wXGqG5f.png\">\n  <br/>\n  <i><a href=https://www.infoq.com/articles/Transition-RDBMS-NoSQL/>Source: Transitioning from RDBMS to NoSQL</a></i>\n</p>\n\nReasons for **SQL**:\n\n* Structured data\n* Strict schema\n* Relational data\n* Need for complex joins\n* Transactions\n* Clear patterns for scaling\n* More established: developers, community, code, tools, etc\n* Lookups by index are very fast\n\nReasons for **NoSQL**:\n\n* Semi-structured data\n* Dynamic or flexible schema\n* Non-relational data\n* No need for complex joins\n* Store many TB (or PB) of data\n* Very data intensive workload\n* Very high throughput for IOPS\n\nSample data well-suited for NoSQL:\n\n* Rapid ingest of clickstream and log data\n* Leaderboard or scoring data\n* Temporary data, such as a shopping cart\n* Frequently accessed ('hot') tables\n* Metadata/lookup tables\n\n##### Source(s) and further reading: SQL or NoSQL\n\n* [Scaling up to your first 10 million users](https://www.youtube.com/watch?v=kKjm4ehYiMs)\n* [SQL vs NoSQL differences](https://www.sitepoint.com/sql-vs-nosql-differences/)\n\n## Cache\n\n<p align=\"center\">\n  <img src=\"images/Q6z24La.png\">\n  <br/>\n  <i><a href=http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html>Source: Scalable system design patterns</a></i>\n</p>\n\nCaching improves page load times and can reduce the load on your servers and databases.  In this model, the dispatcher will first lookup if the request has been made before and try to find the previous result to return, in order to save the actual execution.\n\nDatabases often benefit from a uniform distribution of reads and writes across its partitions.  Popular items can skew the distribution, causing bottlenecks.  Putting a cache in front of a database can help absorb uneven loads and spikes in traffic.\n\n### Client caching\n\nCaches can be located on the client side (OS or browser), [server side](#reverse-proxy-web-server), or in a distinct cache layer.\n\n### CDN caching\n\n[CDNs](#content-delivery-network) are considered a type of cache.\n\n### Web server caching\n\n[Reverse proxies](#reverse-proxy-web-server) and caches such as [Varnish](https://www.varnish-cache.org/) can serve static and dynamic content directly.  Web servers can also cache requests, returning responses without having to contact application servers.\n\n### Database caching\n\nYour database usually includes some level of caching in a default configuration, optimized for a generic use case.  Tweaking these settings for specific usage patterns can further boost performance.\n\n### Application caching\n\nIn-memory caches such as Memcached and Redis are key-value stores between your application and your data storage.  Since the data is held in RAM, it is much faster than typical databases where data is stored on disk.  RAM is more limited than disk, so [cache invalidation](https://en.wikipedia.org/wiki/Cache_algorithms) algorithms such as [least recently used (LRU)](https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)) can help invalidate 'cold' entries and keep 'hot' data in RAM.\n\nRedis has the following additional features:\n\n* Persistence option\n* Built-in data structures such as sorted sets and lists\n\nThere are multiple levels you can cache that fall into two general categories: **database queries** and **objects**:\n\n* Row level\n* Query-level\n* Fully-formed serializable objects\n* Fully-rendered HTML\n\nGenerally, you should try to avoid file-based caching, as it makes cloning and auto-scaling more difficult.\n\n### Caching at the database query level\n\nWhenever you query the database, hash the query as a key and store the result to the cache.  This approach suffers from expiration issues:\n\n* Hard to delete a cached result with complex queries\n* If one piece of data changes such as a table cell, you need to delete all cached queries that might include the changed cell\n\n### Caching at the object level\n\nSee your data as an object, similar to what you do with your application code.  Have your application assemble the dataset from the database into a class instance or a data structure(s):\n\n* Remove the object from cache if its underlying data has changed\n* Allows for asynchronous processing: workers assemble objects by consuming the latest cached object\n\nSuggestions of what to cache:\n\n* User sessions\n* Fully rendered web pages\n* Activity streams\n* User graph data\n\n### When to update the cache\n\nSince you can only store a limited amount of data in cache, you'll need to determine which cache update strategy works best for your use case.\n\n#### Cache-aside\n\n<p align=\"center\">\n  <img src=\"images/ONjORqk.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid</a></i>\n</p>\n\nThe application is responsible for reading and writing from storage.  The cache does not interact with storage directly.  The application does the following:\n\n* Look for entry in cache, resulting in a cache miss\n* Load entry from the database\n* Add entry to cache\n* Return entry\n\n```python\ndef get_user(self, user_id):\n    user = cache.get(\"user.{0}\", user_id)\n    if user is None:\n        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)\n        if user is not None:\n            key = \"user.{0}\".format(user_id)\n            cache.set(key, json.dumps(user))\n    return user\n```\n\n[Memcached](https://memcached.org/) is generally used in this manner.\n\nSubsequent reads of data added to cache are fast.  Cache-aside is also referred to as lazy loading.  Only requested data is cached, which avoids filling up the cache with data that isn't requested.\n\n##### Disadvantage(s): cache-aside\n\n* Each cache miss results in three trips, which can cause a noticeable delay.\n* Data can become stale if it is updated in the database.  This issue is mitigated by setting a time-to-live (TTL) which forces an update of the cache entry, or by using write-through.\n* When a node fails, it is replaced by a new, empty node, increasing latency.\n\n#### Write-through\n\n<p align=\"center\">\n  <img src=\"images/0vBc0hN.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\nThe application uses the cache as the main data store, reading and writing data to it, while the cache is responsible for reading and writing to the database:\n\n* Application adds/updates entry in cache\n* Cache synchronously writes entry to data store\n* Return\n\nApplication code:\n\n```python\nset_user(12345, {\"foo\":\"bar\"})\n```\n\nCache code:\n\n```python\ndef set_user(user_id, values):\n    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)\n    cache.set(user_id, user)\n```\n\nWrite-through is a slow overall operation due to the write operation, but subsequent reads of just written data are fast.  Users are generally more tolerant of latency when updating data than reading data.  Data in the cache is not stale.\n\n##### Disadvantage(s): write through\n\n* When a new node is created due to failure or scaling, the new node will not cache entries until the entry is updated in the database.  Cache-aside in conjunction with write through can mitigate this issue.\n* Most data written might never be read, which can be minimized with a TTL.\n\n#### Write-behind (write-back)\n\n<p align=\"center\">\n  <img src=\"images/rgSrvjG.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/jboner/scalability-availability-stability-patterns/>Source: Scalability, availability, stability, patterns</a></i>\n</p>\n\nIn write-behind, the application does the following:\n\n* Add/update entry in cache\n* Asynchronously write entry to the data store, improving write performance\n\n##### Disadvantage(s): write-behind\n\n* There could be data loss if the cache goes down prior to its contents hitting the data store.\n* It is more complex to implement write-behind than it is to implement cache-aside or write-through.\n\n#### Refresh-ahead\n\n<p align=\"center\">\n  <img src=\"images/kxtjqgE.png\">\n  <br/>\n  <i><a href=http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid</a></i>\n</p>\n\nYou can configure the cache to automatically refresh any recently accessed cache entry prior to its expiration.\n\nRefresh-ahead can result in reduced latency vs read-through if the cache can accurately predict which items are likely to be needed in the future.\n\n##### Disadvantage(s): refresh-ahead\n\n* Not accurately predicting which items are likely to be needed in the future can result in reduced performance than without refresh-ahead.\n\n### Disadvantage(s): cache\n\n* Need to maintain consistency between caches and the source of truth such as the database through [cache invalidation](https://en.wikipedia.org/wiki/Cache_algorithms).\n* Cache invalidation is a difficult problem, there is additional complexity associated with when to update the cache.\n* Need to make application changes such as adding Redis or memcached.\n\n### Source(s) and further reading\n\n* [From cache to in-memory data grid](http://www.slideshare.net/tmatyashovsky/from-cache-to-in-memory-data-grid-introduction-to-hazelcast)\n* [Scalable system design patterns](http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html)\n* [Introduction to architecting systems for scale](http://lethain.com/introduction-to-architecting-systems-for-scale/)\n* [Scalability, availability, stability, patterns](http://www.slideshare.net/jboner/scalability-availability-stability-patterns/)\n* [Scalability](http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache)\n* [AWS ElastiCache strategies](http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/Strategies.html)\n* [Wikipedia](https://en.wikipedia.org/wiki/Cache_(computing))\n\n## Asynchronism\n\n<p align=\"center\">\n  <img src=\"images/54GYsSx.png\">\n  <br/>\n  <i><a href=http://lethain.com/introduction-to-architecting-systems-for-scale/#platform_layer>Source: Intro to architecting systems for scale</a></i>\n</p>\n\nAsynchronous workflows help reduce request times for expensive operations that would otherwise be performed in-line.  They can also help by doing time-consuming work in advance, such as periodic aggregation of data.\n\n### Message queues\n\nMessage queues receive, hold, and deliver messages.  If an operation is too slow to perform inline, you can use a message queue with the following workflow:\n\n* An application publishes a job to the queue, then notifies the user of job status\n* A worker picks up the job from the queue, processes it, then signals the job is complete\n\nThe user is not blocked and the job is processed in the background.  During this time, the client might optionally do a small amount of processing to make it seem like the task has completed.  For example, if posting a tweet, the tweet could be instantly posted to your timeline, but it could take some time before your tweet is actually delivered to all of your followers.\n\n**[Redis](https://redis.io/)** is useful as a simple message broker but messages can be lost.\n\n**[RabbitMQ](https://www.rabbitmq.com/)** is popular but requires you to adapt to the 'AMQP' protocol and manage your own nodes.\n\n**[Amazon SQS](https://aws.amazon.com/sqs/)** is hosted but can have high latency and has the possibility of messages being delivered twice.\n\n### Task queues\n\nTasks queues receive tasks and their related data, runs them, then delivers their results.  They can support scheduling and can be used to run computationally-intensive jobs in the background.\n\n**[Celery](https://docs.celeryproject.org/en/stable/)** has support for scheduling and primarily has python support.\n\n### Back pressure\n\nIf queues start to grow significantly, the queue size can become larger than memory, resulting in cache misses, disk reads, and even slower performance.  [Back pressure](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html) can help by limiting the queue size, thereby maintaining a high throughput rate and good response times for jobs already in the queue.  Once the queue fills up, clients get a server busy or HTTP 503 status code to try again later.  Clients can retry the request at a later time, perhaps with [exponential backoff](https://en.wikipedia.org/wiki/Exponential_backoff).\n\n### Disadvantage(s): asynchronism\n\n* Use cases such as inexpensive calculations and realtime workflows might be better suited for synchronous operations, as introducing queues can add delays and complexity.\n\n### Source(s) and further reading\n\n* [It's all a numbers game](https://www.youtube.com/watch?v=1KRYH75wgy4)\n* [Applying back pressure when overloaded](http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html)\n* [Little's law](https://en.wikipedia.org/wiki/Little%27s_law)\n* [What is the difference between a message queue and a task queue?](https://www.quora.com/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function)\n\n## Communication\n\n<p align=\"center\">\n  <img src=\"images/5KeocQs.jpg\">\n  <br/>\n  <i><a href=http://www.escotal.com/osilayer.html>Source: OSI 7 layer model</a></i>\n</p>\n\n### Hypertext transfer protocol (HTTP)\n\nHTTP is a method for encoding and transporting data between a client and a server.  It is a request/response protocol: clients issue requests and servers issue responses with relevant content and completion status info about the request.  HTTP is self-contained, allowing requests and responses to flow through many intermediate routers and servers that perform load balancing, caching, encryption, and compression.\n\nA basic HTTP request consists of a verb (method) and a resource (endpoint).  Below are common HTTP verbs:\n\n| Verb | Description | Idempotent* | Safe | Cacheable |\n|---|---|---|---|---|\n| GET | Reads a resource | Yes | Yes | Yes |\n| POST | Creates a resource or trigger a process that handles data | No | No | Yes if response contains freshness info |\n| PUT | Creates or replace a resource | Yes | No | No |\n| PATCH | Partially updates a resource | No | No | Yes if response contains freshness info |\n| DELETE | Deletes a resource | Yes | No | No |\n\n*Can be called many times without different outcomes.\n\nHTTP is an application layer protocol relying on lower-level protocols such as **TCP** and **UDP**.\n\n#### Source(s) and further reading: HTTP\n\n* [What is HTTP?](https://www.nginx.com/resources/glossary/http/)\n* [Difference between HTTP and TCP](https://www.quora.com/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)\n* [Difference between PUT and PATCH](https://laracasts.com/discuss/channels/general-discussion/whats-the-differences-between-put-and-patch?page=1)\n\n### Transmission control protocol (TCP)\n\n<p align=\"center\">\n  <img src=\"images/JdAsdvG.jpg\">\n  <br/>\n  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Source: How to make a multiplayer game</a></i>\n</p>\n\nTCP is a connection-oriented protocol over an [IP network](https://en.wikipedia.org/wiki/Internet_Protocol).  Connection is established and terminated using a [handshake](https://en.wikipedia.org/wiki/Handshaking).  All packets sent are guaranteed to reach the destination in the original order and without corruption through:\n\n* Sequence numbers and [checksum fields](https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Checksum_computation) for each packet\n* [Acknowledgement](https://en.wikipedia.org/wiki/Acknowledgement_(data_networks)) packets and automatic retransmission\n\nIf the sender does not receive a correct response, it will resend the packets.  If there are multiple timeouts, the connection is dropped.  TCP also implements [flow control](https://en.wikipedia.org/wiki/Flow_control_(data)) and [congestion control](https://en.wikipedia.org/wiki/Network_congestion#Congestion_control).  These guarantees cause delays and generally result in less efficient transmission than UDP.\n\nTo ensure high throughput, web servers can keep a large number of TCP connections open, resulting in high memory usage.  It can be expensive to have a large number of open connections between web server threads and say, a [memcached](https://memcached.org/) server.  [Connection pooling](https://en.wikipedia.org/wiki/Connection_pool) can help in addition to switching to UDP where applicable.\n\nTCP is useful for applications that require high reliability but are less time critical.  Some examples include web servers, database info, SMTP, FTP, and SSH.\n\nUse TCP over UDP when:\n\n* You need all of the data to arrive intact\n* You want to automatically make a best estimate use of the network throughput\n\n### User datagram protocol (UDP)\n\n<p align=\"center\">\n  <img src=\"images/yzDrJtA.jpg\">\n  <br/>\n  <i><a href=http://www.wildbunny.co.uk/blog/2012/10/09/how-to-make-a-multi-player-game-part-1/>Source: How to make a multiplayer game</a></i>\n</p>\n\nUDP is connectionless.  Datagrams (analogous to packets) are guaranteed only at the datagram level.  Datagrams might reach their destination out of order or not at all.  UDP does not support congestion control.  Without the guarantees that TCP support, UDP is generally more efficient.\n\nUDP can broadcast, sending datagrams to all devices on the subnet.  This is useful with [DHCP](https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol) because the client has not yet received an IP address, thus preventing a way for TCP to stream without the IP address.\n\nUDP is less reliable but works well in real time use cases such as VoIP, video chat, streaming, and realtime multiplayer games.\n\nUse UDP over TCP when:\n\n* You need the lowest latency\n* Late data is worse than loss of data\n* You want to implement your own error correction\n\n#### Source(s) and further reading: TCP and UDP\n\n* [Networking for game programming](http://gafferongames.com/networking-for-game-programmers/udp-vs-tcp/)\n* [Key differences between TCP and UDP protocols](http://www.cyberciti.biz/faq/key-differences-between-tcp-and-udp-protocols/)\n* [Difference between TCP and UDP](http://stackoverflow.com/questions/5970383/difference-between-tcp-and-udp)\n* [Transmission control protocol](https://en.wikipedia.org/wiki/Transmission_Control_Protocol)\n* [User datagram protocol](https://en.wikipedia.org/wiki/User_Datagram_Protocol)\n* [Scaling memcache at Facebook](http://www.cs.bu.edu/~jappavoo/jappavoo.github.com/451/papers/memcache-fb.pdf)\n\n### Remote procedure call (RPC)\n\n<p align=\"center\">\n  <img src=\"images/iF4Mkb5.png\">\n  <br/>\n  <i><a href=http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview>Source: Crack the system design interview</a></i>\n</p>\n\nIn an RPC, a client causes a procedure to execute on a different address space, usually a remote server.  The procedure is coded as if it were a local procedure call, abstracting away the details of how to communicate with the server from the client program.  Remote calls are usually slower and less reliable than local calls so it is helpful to distinguish RPC calls from local calls.  Popular RPC frameworks include [Protobuf](https://developers.google.com/protocol-buffers/), [Thrift](https://thrift.apache.org/), and [Avro](https://avro.apache.org/docs/current/).\n\nRPC is a request-response protocol:\n\n* **Client program** - Calls the client stub procedure.  The parameters are pushed onto the stack like a local procedure call.\n* **Client stub procedure** - Marshals (packs) procedure id and arguments into a request message.\n* **Client communication module** - OS sends the message from the client to the server.\n* **Server communication module** - OS passes the incoming packets to the server stub procedure.\n* **Server stub procedure** -  Unmarshalls the results, calls the server procedure matching the procedure id and passes the given arguments.\n* The server response repeats the steps above in reverse order.\n\nSample RPC calls:\n\n```\nGET /someoperation?data=anId\n\nPOST /anotheroperation\n{\n  \"data\":\"anId\";\n  \"anotherdata\": \"another value\"\n}\n```\n\nRPC is focused on exposing behaviors.  RPCs are often used for performance reasons with internal communications, as you can hand-craft native calls to better fit your use cases.\n\nChoose a native library (aka SDK) when:\n\n* You know your target platform.\n* You want to control how your \"logic\" is accessed.\n* You want to control how error control happens off your library.\n* Performance and end user experience is your primary concern.\n\nHTTP APIs following **REST** tend to be used more often for public APIs.\n\n#### Disadvantage(s): RPC\n\n* RPC clients become tightly coupled to the service implementation.\n* A new API must be defined for every new operation or use case.\n* It can be difficult to debug RPC.\n* You might not be able to leverage existing technologies out of the box.  For example, it might require additional effort to ensure [RPC calls are properly cached](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/) on caching servers such as [Squid](http://www.squid-cache.org/).\n\n### Representational state transfer (REST)\n\nREST is an architectural style enforcing a client/server model where the client acts on a set of resources managed by the server.  The server provides a representation of resources and actions that can either manipulate or get a new representation of resources.  All communication must be stateless and cacheable.\n\nThere are four qualities of a RESTful interface:\n\n* **Identify resources (URI in HTTP)** - use the same URI regardless of any operation.\n* **Change with representations (Verbs in HTTP)** - use verbs, headers, and body.\n* **Self-descriptive error message (status response in HTTP)** - Use status codes, don't reinvent the wheel.\n* **[HATEOAS](http://restcookbook.com/Basics/hateoas/) (HTML interface for HTTP)** - your web service should be fully accessible in a browser.\n\nSample REST calls:\n\n```\nGET /someresources/anId\n\nPUT /someresources/anId\n{\"anotherdata\": \"another value\"}\n```\n\nREST is focused on exposing data.  It minimizes the coupling between client/server and is often used for public HTTP APIs.  REST uses a more generic and uniform method of exposing resources through URIs, [representation through headers](https://github.com/for-GET/know-your-http-well/blob/master/headers.md), and actions through verbs such as GET, POST, PUT, DELETE, and PATCH.  Being stateless, REST is great for horizontal scaling and partitioning.\n\n#### Disadvantage(s): REST\n\n* With REST being focused on exposing data, it might not be a good fit if resources are not naturally organized or accessed in a simple hierarchy.  For example, returning all updated records from the past hour matching a particular set of events is not easily expressed as a path.  With REST, it is likely to be implemented with a combination of URI path, query parameters, and possibly the request body.\n* REST typically relies on a few verbs (GET, POST, PUT, DELETE, and PATCH) which sometimes doesn't fit your use case.  For example, moving expired documents to the archive folder might not cleanly fit within these verbs.\n* Fetching complicated resources with nested hierarchies requires multiple round trips between the client and server to render single views, e.g. fetching content of a blog entry and the comments on that entry. For mobile applications operating in variable network conditions, these multiple roundtrips are highly undesirable.\n* Over time, more fields might be added to an API response and older clients will receive all new data fields, even those that they do not need, as a result, it bloats the payload size and leads to larger latencies.\n\n### RPC and REST calls comparison\n\n| Operation | RPC | REST |\n|---|---|---|\n| Signup    | **POST** /signup | **POST** /persons |\n| Resign    | **POST** /resign<br/>{<br/>\"personid\": \"1234\"<br/>} | **DELETE** /persons/1234 |\n| Read a person | **GET** /readPerson?personid=1234 | **GET** /persons/1234 |\n| Read a person\u2019s items list | **GET** /readUsersItemsList?personid=1234 | **GET** /persons/1234/items |\n| Add an item to a person\u2019s items | **POST** /addItemToUsersItemsList<br/>{<br/>\"personid\": \"1234\";<br/>\"itemid\": \"456\"<br/>} | **POST** /persons/1234/items<br/>{<br/>\"itemid\": \"456\"<br/>} |\n| Update an item    | **POST** /modifyItem<br/>{<br/>\"itemid\": \"456\";<br/>\"key\": \"value\"<br/>} | **PUT** /items/456<br/>{<br/>\"key\": \"value\"<br/>} |\n| Delete an item | **POST** /removeItem<br/>{<br/>\"itemid\": \"456\"<br/>} | **DELETE** /items/456 |\n\n<p align=\"center\">\n  <i><a href=https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/>Source: Do you really know why you prefer REST over RPC</a></i>\n</p>\n\n#### Source(s) and further reading: REST and RPC\n\n* [Do you really know why you prefer REST over RPC](https://apihandyman.io/do-you-really-know-why-you-prefer-rest-over-rpc/)\n* [When are RPC-ish approaches more appropriate than REST?](http://programmers.stackexchange.com/a/181186)\n* [REST vs JSON-RPC](http://stackoverflow.com/questions/15056878/rest-vs-json-rpc)\n* [Debunking the myths of RPC and REST](https://web.archive.org/web/20170608193645/http://etherealbits.com/2012/12/debunking-the-myths-of-rpc-rest/)\n* [What are the drawbacks of using REST](https://www.quora.com/What-are-the-drawbacks-of-using-RESTful-APIs)\n* [Crack the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n* [Thrift](https://code.facebook.com/posts/1468950976659943/)\n* [Why REST for internal use and not RPC](http://arstechnica.com/civis/viewtopic.php?t=1190508)\n\n## Security\n\nThis section could use some updates.  Consider [contributing](#contributing)!\n\nSecurity is a broad topic.  Unless you have considerable experience, a security background, or are applying for a position that requires knowledge of security, you probably won't need to know more than the basics:\n\n* Encrypt in transit and at rest.\n* Sanitize all user inputs or any input parameters exposed to user to prevent [XSS](https://en.wikipedia.org/wiki/Cross-site_scripting) and [SQL injection](https://en.wikipedia.org/wiki/SQL_injection).\n* Use parameterized queries to prevent SQL injection.\n* Use the principle of [least privilege](https://en.wikipedia.org/wiki/Principle_of_least_privilege).\n\n### Source(s) and further reading\n\n* [API security checklist](https://github.com/shieldfy/API-Security-Checklist)\n* [Security guide for developers](https://github.com/FallibleInc/security-guide-for-developers)\n* [OWASP top ten](https://www.owasp.org/index.php/OWASP_Top_Ten_Cheat_Sheet)\n\n## Appendix\n\nYou'll sometimes be asked to do 'back-of-the-envelope' estimates.  For example, you might need to determine how long it will take to generate 100 image thumbnails from disk or how much memory a data structure will take.  The **Powers of two table** and **Latency numbers every programmer should know** are handy references.\n\n### Powers of two table\n\n```\nPower           Exact Value         Approx Value        Bytes\n---------------------------------------------------------------\n7                             128\n8                             256\n10                           1024   1 thousand           1 KB\n16                         65,536                       64 KB\n20                      1,048,576   1 million            1 MB\n30                  1,073,741,824   1 billion            1 GB\n32                  4,294,967,296                        4 GB\n40              1,099,511,627,776   1 trillion           1 TB\n```\n\n#### Source(s) and further reading\n\n* [Powers of two](https://en.wikipedia.org/wiki/Power_of_two)\n\n### Latency numbers every programmer should know\n\n```\nLatency Comparison Numbers\n--------------------------\nL1 cache reference                           0.5 ns\nBranch mispredict                            5   ns\nL2 cache reference                           7   ns                      14x L1 cache\nMutex lock/unlock                           25   ns\nMain memory reference                      100   ns                      20x L2 cache, 200x L1 cache\nCompress 1K bytes with Zippy            10,000   ns       10 us\nSend 1 KB bytes over 1 Gbps network     10,000   ns       10 us\nRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSD\nRead 1 MB sequentially from memory     250,000   ns      250 us\nRound trip within same datacenter      500,000   ns      500 us\nRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memory\nHDD seek                            10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip\nRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD\nRead 1 MB sequentially from HDD     30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD\nSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms\n\nNotes\n-----\n1 ns = 10^-9 seconds\n1 us = 10^-6 seconds = 1,000 ns\n1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns\n```\n\nHandy metrics based on numbers above:\n\n* Read sequentially from HDD at 30 MB/s\n* Read sequentially from 1 Gbps Ethernet at 100 MB/s\n* Read sequentially from SSD at 1 GB/s\n* Read sequentially from main memory at 4 GB/s\n* 6-7 world-wide round trips per second\n* 2,000 round trips per second within a data center\n\n#### Latency numbers visualized\n\n![](https://camo.githubusercontent.com/77f72259e1eb58596b564d1ad823af1853bc60a3/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67)\n\n#### Source(s) and further reading\n\n* [Latency numbers every programmer should know - 1](https://gist.github.com/jboner/2841832)\n* [Latency numbers every programmer should know - 2](https://gist.github.com/hellerbarde/2843375)\n* [Designs, lessons, and advice from building large distributed systems](http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf)\n* [Software Engineering Advice from Building Large-Scale Distributed Systems](https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf)\n\n### Additional system design interview questions\n\n> Common system design interview questions, with links to resources on how to solve each.\n\n| Question | Reference(s) |\n|---|---|\n| Design a file sync service like Dropbox | [youtube.com](https://www.youtube.com/watch?v=PE4gwstWhmc) |\n| Design a search engine like Google | [queue.acm.org](http://queue.acm.org/detail.cfm?id=988407)<br/>[stackexchange.com](http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search)<br/>[ardendertat.com](http://www.ardendertat.com/2012/01/11/implementing-search-engines/)<br/>[stanford.edu](http://infolab.stanford.edu/~backrub/google.html) |\n| Design a scalable web crawler like Google | [quora.com](https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch) |\n| Design Google docs | [code.google.com](https://code.google.com/p/google-mobwrite/)<br/>[neil.fraser.name](https://neil.fraser.name/writing/sync/) |\n| Design a key-value store like Redis | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |\n| Design a cache system like Memcached | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |\n| Design a recommendation system like Amazon's | [hulu.com](https://web.archive.org/web/20170406065247/http://tech.hulu.com/blog/2011/09/19/recommendation-system.html)<br/>[ijcai13.org](http://ijcai13.org/files/tutorial_slides/td3.pdf) |\n| Design a tinyurl system like Bitly | [n00tc0d3r.blogspot.com](http://n00tc0d3r.blogspot.com/) |\n| Design a chat app like WhatsApp | [highscalability.com](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html)\n| Design a picture sharing system like Instagram | [highscalability.com](http://highscalability.com/flickr-architecture)<br/>[highscalability.com](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html) |\n| Design the Facebook news feed function | [quora.com](http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed)<br/>[quora.com](http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed)<br/>[slideshare.net](http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture) |\n| Design the Facebook timeline function | [facebook.com](https://www.facebook.com/note.php?note_id=10150468255628920)<br/>[highscalability.com](http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html) |\n| Design the Facebook chat function | [erlang-factory.com](http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf)<br/>[facebook.com](https://www.facebook.com/note.php?note_id=14218138919&id=9445547199&index=0) |\n| Design a graph search function like Facebook's | [facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920)<br/>[facebook.com](https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920) |\n| Design a content delivery network like CloudFlare | [figshare.com](https://figshare.com/articles/Globally_distributed_content_delivery/6605972) |\n| Design a trending topic system like Twitter's | [michael-noll.com](http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/)<br/>[snikolov .wordpress.com](http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/) |\n| Design a random ID generation system | [blog.twitter.com](https://blog.twitter.com/2010/announcing-snowflake)<br/>[github.com](https://github.com/twitter/snowflake/) |\n| Return the top k requests during a time interval | [cs.ucsb.edu](https://www.cs.ucsb.edu/sites/default/files/documents/2005-23.pdf)<br/>[wpi.edu](http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf) |\n| Design a system that serves data from multiple data centers | [highscalability.com](http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html) |\n| Design an online multiplayer card game | [indieflashblog.com](https://web.archive.org/web/20180929181117/http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html)<br/>[buildnewgames.com](http://buildnewgames.com/real-time-multiplayer/) |\n| Design a garbage collection system | [stuffwithstuff.com](http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/)<br/>[washington.edu](http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf) |\n| Design an API rate limiter | [https://stripe.com/blog/](https://stripe.com/blog/rate-limiters) |\n| Design a Stock Exchange (like NASDAQ or Binance) | [Jane Street](https://youtu.be/b1e4t2k2KJY)<br/>[Golang Implementation](https://around25.com/blog/building-a-trading-engine-for-a-crypto-exchange/)<br/>[Go Implementation](http://bhomnick.net/building-a-simple-limit-order-in-go/) |\n| Add a system design question | [Contribute](#contributing) |\n\n### Real world architectures\n\n> Articles on how real world systems are designed.\n\n<p align=\"center\">\n  <img src=\"images/TcUo2fw.png\">\n  <br/>\n  <i><a href=https://www.infoq.com/presentations/Twitter-Timeline-Scalability>Source: Twitter timelines at scale</a></i>\n</p>\n\n**Don't focus on nitty gritty details for the following articles, instead:**\n\n* Identify shared principles, common technologies, and patterns within these articles\n* Study what problems are solved by each component, where it works, where it doesn't\n* Review the lessons learned\n\n|Type | System | Reference(s) |\n|---|---|---|\n| Data processing | **MapReduce** - Distributed data processing from Google | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf) |\n| Data processing | **Spark** - Distributed data processing from Databricks | [slideshare.net](http://www.slideshare.net/AGrishchenko/apache-spark-architecture) |\n| Data processing | **Storm** - Distributed data processing from Twitter | [slideshare.net](http://www.slideshare.net/previa/storm-16094009) |\n| | | |\n| Data store | **Bigtable** - Distributed column-oriented database from Google | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf) |\n| Data store | **HBase** - Open source implementation of Bigtable | [slideshare.net](http://www.slideshare.net/alexbaranau/intro-to-hbase) |\n| Data store | **Cassandra** - Distributed column-oriented database from Facebook | [slideshare.net](http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666)\n| Data store | **DynamoDB** - Document-oriented database from Amazon | [harvard.edu](http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf) |\n| Data store | **MongoDB** - Document-oriented database | [slideshare.net](http://www.slideshare.net/mdirolf/introduction-to-mongodb) |\n| Data store | **Spanner** - Globally-distributed database from Google | [research.google.com](http://research.google.com/archive/spanner-osdi2012.pdf) |\n| Data store | **Memcached** - Distributed memory caching system | [slideshare.net](http://www.slideshare.net/oemebamo/introduction-to-memcached) |\n| Data store | **Redis** - Distributed memory caching system with persistence and value types | [slideshare.net](http://www.slideshare.net/dvirsky/introduction-to-redis) |\n| | | |\n| File system | **Google File System (GFS)** - Distributed file system | [research.google.com](http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf) |\n| File system | **Hadoop File System (HDFS)** - Open source implementation of GFS | [apache.org](http://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-hdfs/HdfsDesign.html) |\n| | | |\n| Misc | **Chubby** - Lock service for loosely-coupled distributed systems from Google | [research.google.com](http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf) |\n| Misc | **Dapper** - Distributed systems tracing infrastructure | [research.google.com](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf)\n| Misc | **Kafka** - Pub/sub message queue from LinkedIn | [slideshare.net](http://www.slideshare.net/mumrah/kafka-talk-tri-hug) |\n| Misc | **Zookeeper** - Centralized infrastructure and services enabling synchronization | [slideshare.net](http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper) |\n| | Add an architecture | [Contribute](#contributing) |\n\n### Company architectures\n\n| Company | Reference(s) |\n|---|---|\n| Amazon | [Amazon architecture](http://highscalability.com/amazon-architecture) |\n| Cinchcast | [Producing 1,500 hours of audio every day](http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html) |\n| DataSift | [Realtime datamining At 120,000 tweets per second](http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html) |\n| Dropbox | [How we've scaled Dropbox](https://www.youtube.com/watch?v=PE4gwstWhmc) |\n| ESPN | [Operating At 100,000 duh nuh nuhs per second](http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html) |\n| Google | [Google architecture](http://highscalability.com/google-architecture) |\n| Instagram | [14 million users, terabytes of photos](http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html)<br/>[What powers Instagram](http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances) |\n| Justin.tv | [Justin.Tv's live video broadcasting architecture](http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html) |\n| Facebook | [Scaling memcached at Facebook](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf)<br/>[TAO: Facebook\u2019s distributed data store for the social graph](https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf)<br/>[Facebook\u2019s photo storage](https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf)<br/>[How Facebook Live Streams To 800,000 Simultaneous Viewers](http://highscalability.com/blog/2016/6/27/how-facebook-live-streams-to-800000-simultaneous-viewers.html) |\n| Flickr | [Flickr architecture](http://highscalability.com/flickr-architecture) |\n| Mailbox | [From 0 to one million users in 6 weeks](http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html) |\n| Netflix | [A 360 Degree View Of The Entire Netflix Stack](http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html)<br/>[Netflix: What Happens When You Press Play?](http://highscalability.com/blog/2017/12/11/netflix-what-happens-when-you-press-play.html) |\n| Pinterest | [From 0 To 10s of billions of page views a month](http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html)<br/>[18 million visitors, 10x growth, 12 employees](http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html) |\n| Playfish | [50 million monthly users and growing](http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html) |\n| PlentyOfFish | [PlentyOfFish architecture](http://highscalability.com/plentyoffish-architecture) |\n| Salesforce | [How they handle 1.3 billion transactions a day](http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html) |\n| Stack Overflow | [Stack Overflow architecture](http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html) |\n| TripAdvisor | [40M visitors, 200M dynamic page views, 30TB data](http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html) |\n| Tumblr | [15 billion page views a month](http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html) |\n| Twitter | [Making Twitter 10000 percent faster](http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster)<br/>[Storing 250 million tweets a day using MySQL](http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html)<br/>[150M active users, 300K QPS, a 22 MB/S firehose](http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html)<br/>[Timelines at scale](https://www.infoq.com/presentations/Twitter-Timeline-Scalability)<br/>[Big and small data at Twitter](https://www.youtube.com/watch?v=5cKTP36HVgI)<br/>[Operations at Twitter: scaling beyond 100 million users](https://www.youtube.com/watch?v=z8LU0Cj6BOU)<br/>[How Twitter Handles 3,000 Images Per Second](http://highscalability.com/blog/2016/4/20/how-twitter-handles-3000-images-per-second.html) |\n| Uber | [How Uber scales their real-time market platform](http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html)<br/>[Lessons Learned From Scaling Uber To 2000 Engineers, 1000 Services, And 8000 Git Repositories](http://highscalability.com/blog/2016/10/12/lessons-learned-from-scaling-uber-to-2000-engineers-1000-ser.html) |\n| WhatsApp | [The WhatsApp architecture Facebook bought for $19 billion](http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html) |\n| YouTube | [YouTube scalability](https://www.youtube.com/watch?v=w5WVu624fY8)<br/>[YouTube architecture](http://highscalability.com/youtube-architecture) |\n\n### Company engineering blogs\n\n> Architectures for companies you are interviewing with.\n>\n> Questions you encounter might be from the same domain.\n\n* [Airbnb Engineering](http://nerds.airbnb.com/)\n* [Atlassian Developers](https://developer.atlassian.com/blog/)\n* [AWS Blog](https://aws.amazon.com/blogs/aws/)\n* [Bitly Engineering Blog](http://word.bitly.com/)\n* [Box Blogs](https://blog.box.com/blog/category/engineering)\n* [Cloudera Developer Blog](http://blog.cloudera.com/)\n* [Dropbox Tech Blog](https://tech.dropbox.com/)\n* [Engineering at Quora](https://www.quora.com/q/quoraengineering)\n* [Ebay Tech Blog](http://www.ebaytechblog.com/)\n* [Evernote Tech Blog](https://blog.evernote.com/tech/)\n* [Etsy Code as Craft](http://codeascraft.com/)\n* [Facebook Engineering](https://www.facebook.com/Engineering)\n* [Flickr Code](http://code.flickr.net/)\n* [Foursquare Engineering Blog](http://engineering.foursquare.com/)\n* [GitHub Engineering Blog](https://github.blog/category/engineering)\n* [Google Research Blog](http://googleresearch.blogspot.com/)\n* [Groupon Engineering Blog](https://engineering.groupon.com/)\n* [Heroku Engineering Blog](https://engineering.heroku.com/)\n* [Hubspot Engineering Blog](http://product.hubspot.com/blog/topic/engineering)\n* [High Scalability](http://highscalability.com/)\n* [Instagram Engineering](http://instagram-engineering.tumblr.com/)\n* [Intel Software Blog](https://software.intel.com/en-us/blogs/)\n* [Jane Street Tech Blog](https://blogs.janestreet.com/category/ocaml/)\n* [LinkedIn Engineering](http://engineering.linkedin.com/blog)\n* [Microsoft Engineering](https://engineering.microsoft.com/)\n* [Microsoft Python Engineering](https://blogs.msdn.microsoft.com/pythonengineering/)\n* [Netflix Tech Blog](http://techblog.netflix.com/)\n* [Paypal Developer Blog](https://medium.com/paypal-engineering)\n* [Pinterest Engineering Blog](https://medium.com/@Pinterest_Engineering)\n* [Reddit Blog](http://www.redditblog.com/)\n* [Salesforce Engineering Blog](https://developer.salesforce.com/blogs/engineering/)\n* [Slack Engineering Blog](https://slack.engineering/)\n* [Spotify Labs](https://labs.spotify.com/)\n* [Stripe Engineering Blog](https://stripe.com/blog/engineering)\n* [Twilio Engineering Blog](http://www.twilio.com/engineering)\n* [Twitter Engineering](https://blog.twitter.com/engineering/)\n* [Uber Engineering Blog](http://eng.uber.com/)\n* [Yahoo Engineering Blog](http://yahooeng.tumblr.com/)\n* [Yelp Engineering Blog](http://engineeringblog.yelp.com/)\n* [Zynga Engineering Blog](https://www.zynga.com/blogs/engineering)\n\n#### Source(s) and further reading\n\nLooking to add a blog?  To avoid duplicating work, consider adding your company blog to the following repo:\n\n* [kilimchoi/engineering-blogs](https://github.com/kilimchoi/engineering-blogs)\n\n## Under development\n\nInterested in adding a section or helping complete one in-progress?  [Contribute](#contributing)!\n\n* Distributed computing with MapReduce\n* Consistent hashing\n* Scatter gather\n* [Contribute](#contributing)\n\n## Credits\n\nCredits and sources are provided throughout this repo.\n\nSpecial thanks to:\n\n* [Hired in tech](http://www.hiredintech.com/system-design/the-system-design-process/)\n* [Cracking the coding interview](https://www.amazon.com/dp/0984782850/)\n* [High scalability](http://highscalability.com/)\n* [checkcheckzz/system-design-interview](https://github.com/checkcheckzz/system-design-interview)\n* [shashank88/system_design](https://github.com/shashank88/system_design)\n* [mmcgrana/services-engineering](https://github.com/mmcgrana/services-engineering)\n* [System design cheat sheet](https://gist.github.com/vasanthk/485d1c25737e8e72759f)\n* [A distributed systems reading list](http://dancres.github.io/Pages/)\n* [Cracking the system design interview](http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview)\n\n## Contact info\n\nFeel free to contact me to discuss any issues, questions, or comments.\n\nMy contact info can be found on my [GitHub page](https://github.com/donnemartin).\n\n## License\n\n*I am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).*\n\n    Copyright 2017 Donne Martin\n\n    Creative Commons Attribution 4.0 International License (CC BY 4.0)\n\n    http://creativecommons.org/licenses/by/4.0/\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "TRANSLATIONS.md", "size": 6697, "license": "NOASSERTION", "content_sha": "5bfae9af50795d1a9323f1968e1c731b29634cc1", "findings": [], "content": "# Translations\n\n**Thank you to our awesome translation maintainers!**\n\n## Contributing\n\nSee the [Contributing Guidelines](CONTRIBUTING.md).\n\n## Translation Statuses\n\n* \ud83c\udf89 **Live**: Merged into `master` branch\n* \u23f3 **In Progress**: Under active translation for eventual merge into `master` branch\n* \u2757 **Stalled***: Needs an active maintainer \u270b\n\n**Within the past 2 months, there has been 1) No active work in the translation fork, and 2) No discussions from previous maintainer(s) in the discussion thread.*\n\nLanguages not listed here have not been started, [contribute](CONTRIBUTING.md)!\n\nLanguages are grouped by status and are listed in alphabetical order.\n\n## Live\n\n### \ud83c\udf89 Japanese\n\n* [README-ja.md](README-ja.md)\n* Maintainer(s): [@tsukukobaan](https://github.com/tsukukobaan) \ud83d\udc4f\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/100\n\n### \ud83c\udf89 Simplified Chinese\n\n* [zh-Hans.md](README-zh-Hans.md)\n* Maintainer(s): [@sqrthree](https://github.com/sqrthree) \ud83d\udc4f\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/38\n\n### \ud83c\udf89 Traditional Chinese\n\n* [README-zh-TW.md](README-zh-TW.md)\n* Maintainer(s): [@kevingo](https://github.com/kevingo) \ud83d\udc4f\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/88\n\n## In Progress\n\n### \u23f3 Korean\n\n* Maintainer(s): [@bonomoon](https://github.com/bonomoon), [@mingrammer](https://github.com/mingrammer) \ud83d\udc4f\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/102\n* Translation Fork: https://github.com/bonomoon/system-design-primer, https://github.com/donnemartin/system-design-primer/pull/103\n\n### \u23f3 Russian\n\n* Maintainer(s): [@voitau](https://github.com/voitau), [@DmitryOlkhovoi](https://github.com/DmitryOlkhovoi) \ud83d\udc4f\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/87\n* Translation Fork: https://github.com/voitau/system-design-primer/blob/master/README-ru.md\n\n## Stalled\n\n**Notes**:\n\n* If you're able to commit to being an active maintainer for a language, let us know in the discussion thread for your language and update this file with a pull request.\n    * If you're listed here as a \"Previous Maintainer\" but can commit to being an active maintainer, also let us know.\n* See the [Contributing Guidelines](CONTRIBUTING.md).\n\n### \u2757 Arabic\n\n* Maintainer(s): **Help Wanted** \u270b\n    * Previous Maintainer(s): [@aymns](https://github.com/aymns)\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/170\n* Translation Fork: https://github.com/aymns/system-design-primer/blob/develop/README-ar.md\n\n### \u2757 Bengali\n\n* Maintainer(s): **Help Wanted** \u270b\n    * Previous Maintainer(s): [@nutboltu](https://github.com/nutboltu)\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/220\n* Translation Fork: https://github.com/donnemartin/system-design-primer/pull/240\n\n### \u2757 Brazilian Portuguese\n\n* Maintainer(s): **Help Wanted** \u270b\n    * Previous Maintainer(s): [@IuryAlves](https://github.com/IuryAlves)\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/40\n* Translation Fork: https://github.com/IuryAlves/system-design-primer, https://github.com/donnemartin/system-design-primer/pull/67\n\n### \u2757 French\n\n* Maintainer(s): **Help Wanted** \u270b\n    * Previous Maintainer(s): [@spuyet](https://github.com/spuyet)\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/250\n* Translation Fork: https://github.com/spuyet/system-design-primer/blob/add-french-translation/README-fr.md\n\n### \u2757 German\n\n* Maintainer(s): **Help Wanted** \u270b\n    * Previous Maintainer(s): [@Allaman](https://github.com/Allaman)\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/186\n* Translation Fork: None\n\n### \u2757 Greek\n\n* Maintainer(s): **Help Wanted** \u270b\n    * Previous Maintainer(s): [@Belonias](https://github.com/Belonias)\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/130\n* Translation Fork: None\n\n### \u2757 Hebrew\n\n* Maintainer(s): **Help Wanted** \u270b\n    * Previous Maintainer(s): [@EladLeev](https://github.com/EladLeev)\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/272\n* Translation Fork: https://github.com/EladLeev/system-design-primer/tree/he-translate\n\n### \u2757 Italian\n\n* Maintainer(s): **Help Wanted** \u270b\n    * Previous Maintainer(s): [@pgoodjohn](https://github.com/pgoodjohn)\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/104\n* Translation Fork: https://github.com/pgoodjohn/system-design-primer\n\n### \u2757 Persian\n\n* Maintainer(s): **Help Wanted** \u270b\n    * Previous Maintainer(s): [@hadisinaee](https://github.com/hadisinaee)\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/pull/112\n* Translation Fork: https://github.com/donnemartin/system-design-primer/pull/112\n\n### \u2757 Spanish\n\n* Maintainer(s): **Help Wanted** \u270b\n    * Previous Maintainer(s): [@eamanu](https://github.com/eamanu)\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/136\n* Translation Fork: https://github.com/donnemartin/system-design-primer/pull/189\n\n### \u2757 Thai\n\n* Maintainer(s): **Help Wanted** \u270b\n    * Previous Maintainer(s): [@iphayao](https://github.com/iphayao)\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/187\n* Translation Fork: https://github.com/donnemartin/system-design-primer/pull/221\n\n### \u2757 Turkish\n\n* Maintainer(s): **Help Wanted** \u270b\n    * Previous Maintainer(s): [@hwclass](https://github.com/hwclass), [@canerbaran](https://github.com/canerbaran), [@emrahtoy](https://github.com/emrahtoy)\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/39\n* Translation Fork: https://github.com/donnemartin/system-design-primer/pull/239\n\n### \u2757 Ukrainian\n\n* Maintainer(s): **Help Wanted** \u270b\n    * Previous Maintainer(s): [@Kietzmann](https://github.com/Kietzmann), [@Acarus](https://github.com/Acarus)\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/248\n* Translation Fork: https://github.com/Acarus/system-design-primer\n\n### \u2757 Vietnamese\n\n* Maintainer(s): **Help Wanted** \u270b\n    * Previous Maintainer(s): [@tranlyvu](https://github.com/tranlyvu), [@duynguyenhoang](https://github.com/duynguyenhoang)\n* Discussion Thread: https://github.com/donnemartin/system-design-primer/issues/127\n* Translation Fork: https://github.com/donnemartin/system-design-primer/pull/241, https://github.com/donnemartin/system-design-primer/pull/327\n\n## Not Started\n\nLanguages not listed here have not been started, [contribute](CONTRIBUTING.md)!\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "solutions/object_oriented_design/call_center/call_center.py", "size": 3263, "license": "NOASSERTION", "content_sha": "1d5e7bc6bc168b0825867ae8b2c5aa4861d88e0d", "findings": [], "content": "from abc import ABCMeta, abstractmethod\nfrom collections import deque\nfrom enum import Enum\n\n\nclass Rank(Enum):\n\n    OPERATOR = 0\n    SUPERVISOR = 1\n    DIRECTOR = 2\n\n\nclass Employee(metaclass=ABCMeta):\n\n    def __init__(self, employee_id, name, rank, call_center):\n        self.employee_id = employee_id\n        self.name = name\n        self.rank = rank\n        self.call = None\n        self.call_center = call_center\n\n    def take_call(self, call):\n        \"\"\"Assume the employee will always successfully take the call.\"\"\"\n        self.call = call\n        self.call.employee = self\n        self.call.state = CallState.IN_PROGRESS\n\n    def complete_call(self):\n        self.call.state = CallState.COMPLETE\n        self.call_center.notify_call_completed(self.call)\n\n    @abstractmethod\n    def escalate_call(self):\n        pass\n\n    def _escalate_call(self):\n        self.call.state = CallState.READY\n        call = self.call\n        self.call = None\n        self.call_center.notify_call_escalated(call)\n\n\nclass Operator(Employee):\n\n    def __init__(self, employee_id, name):\n        super(Operator, self).__init__(employee_id, name, Rank.OPERATOR)\n\n    def escalate_call(self):\n        self.call.level = Rank.SUPERVISOR\n        self._escalate_call()\n\n\nclass Supervisor(Employee):\n\n    def __init__(self, employee_id, name):\n        super(Operator, self).__init__(employee_id, name, Rank.SUPERVISOR)\n\n    def escalate_call(self):\n        self.call.level = Rank.DIRECTOR\n        self._escalate_call()\n\n\nclass Director(Employee):\n\n    def __init__(self, employee_id, name):\n        super(Operator, self).__init__(employee_id, name, Rank.DIRECTOR)\n\n    def escalate_call(self):\n        raise NotImplementedError('Directors must be able to handle any call')\n\n\nclass CallState(Enum):\n\n    READY = 0\n    IN_PROGRESS = 1\n    COMPLETE = 2\n\n\nclass Call(object):\n\n    def __init__(self, rank):\n        self.state = CallState.READY\n        self.rank = rank\n        self.employee = None\n\n\nclass CallCenter(object):\n\n    def __init__(self, operators, supervisors, directors):\n        self.operators = operators\n        self.supervisors = supervisors\n        self.directors = directors\n        self.queued_calls = deque()\n\n    def dispatch_call(self, call):\n        if call.rank not in (Rank.OPERATOR, Rank.SUPERVISOR, Rank.DIRECTOR):\n            raise ValueError('Invalid call rank: {}'.format(call.rank))\n        employee = None\n        if call.rank == Rank.OPERATOR:\n            employee = self._dispatch_call(call, self.operators)\n        if call.rank == Rank.SUPERVISOR or employee is None:\n            employee = self._dispatch_call(call, self.supervisors)\n        if call.rank == Rank.DIRECTOR or employee is None:\n            employee = self._dispatch_call(call, self.directors)\n        if employee is None:\n            self.queued_calls.append(call)\n\n    def _dispatch_call(self, call, employees):\n        for employee in employees:\n            if employee.call is None:\n                employee.take_call(call)\n                return employee\n        return None\n\n    def notify_call_escalated(self, call):\n        pass\n\n    def notify_call_completed(self, call):\n        pass\n\n    def dispatch_queued_call_to_newly_freed_employee(self, call, employee):\n        pass\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "solutions/object_oriented_design/deck_of_cards/deck_of_cards.py", "size": 2547, "license": "NOASSERTION", "content_sha": "a47087585e07587d875f4abb1a71555d24613731", "findings": [], "content": "from abc import ABCMeta, abstractmethod\nfrom enum import Enum\nimport sys\n\n\nclass Suit(Enum):\n\n    HEART = 0\n    DIAMOND = 1\n    CLUBS = 2\n    SPADE = 3\n\n\nclass Card(metaclass=ABCMeta):\n\n    def __init__(self, value, suit):\n        self.value = value\n        self.suit = suit\n        self.is_available = True\n\n    @property\n    @abstractmethod\n    def value(self):\n        pass\n\n    @value.setter\n    @abstractmethod\n    def value(self, other):\n        pass\n\n\nclass BlackJackCard(Card):\n\n    def __init__(self, value, suit):\n        super(BlackJackCard, self).__init__(value, suit)\n\n    def is_ace(self):\n        return True if self._value == 1 else False\n\n    def is_face_card(self):\n        \"\"\"Jack = 11, Queen = 12, King = 13\"\"\"\n        return True if 10 < self._value <= 13 else False\n\n    @property\n    def value(self):\n        if self.is_ace() == 1:\n            return 1\n        elif self.is_face_card():\n            return 10\n        else:\n            return self._value\n\n    @value.setter\n    def value(self, new_value):\n        if 1 <= new_value <= 13:\n            self._value = new_value\n        else:\n            raise ValueError('Invalid card value: {}'.format(new_value))\n\n\nclass Hand(object):\n\n    def __init__(self, cards):\n        self.cards = cards\n\n    def add_card(self, card):\n        self.cards.append(card)\n\n    def score(self):\n        total_value = 0\n        for card in self.cards:\n            total_value += card.value\n        return total_value\n\n\nclass BlackJackHand(Hand):\n\n    BLACKJACK = 21\n\n    def __init__(self, cards):\n        super(BlackJackHand, self).__init__(cards)\n\n    def score(self):\n        min_over = sys.MAXSIZE\n        max_under = -sys.MAXSIZE\n        for score in self.possible_scores():\n            if self.BLACKJACK < score < min_over:\n                min_over = score\n            elif max_under < score <= self.BLACKJACK:\n                max_under = score\n        return max_under if max_under != -sys.MAXSIZE else min_over\n\n    def possible_scores(self):\n        \"\"\"Return a list of possible scores, taking Aces into account.\"\"\"\n        pass\n\n\nclass Deck(object):\n\n    def __init__(self, cards):\n        self.cards = cards\n        self.deal_index = 0\n\n    def remaining_cards(self):\n        return len(self.cards) - self.deal_index\n\n    def deal_card(self):\n        try:\n            card = self.cards[self.deal_index]\n            card.is_available = False\n            self.deal_index += 1\n        except IndexError:\n            return None\n        return card\n\n    def shuffle(self):\n        pass\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "solutions/object_oriented_design/hash_table/hash_map.py", "size": 1079, "license": "NOASSERTION", "content_sha": "33d9a35de1539405e0aa90744bde7209df50b60f", "findings": [], "content": "class Item(object):\n\n    def __init__(self, key, value):\n        self.key = key\n        self.value = value\n\n\nclass HashTable(object):\n\n    def __init__(self, size):\n        self.size = size\n        self.table = [[] for _ in range(self.size)]\n\n    def _hash_function(self, key):\n        return key % self.size\n\n    def set(self, key, value):\n        hash_index = self._hash_function(key)\n        for item in self.table[hash_index]:\n            if item.key == key:\n                item.value = value\n                return\n        self.table[hash_index].append(Item(key, value))\n\n    def get(self, key):\n        hash_index = self._hash_function(key)\n        for item in self.table[hash_index]:\n            if item.key == key:\n                return item.value\n        raise KeyError('Key not found')\n\n    def remove(self, key):\n        hash_index = self._hash_function(key)\n        for index, item in enumerate(self.table[hash_index]):\n            if item.key == key:\n                del self.table[hash_index][index]\n                return\n        raise KeyError('Key not found')\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "solutions/object_oriented_design/lru_cache/lru_cache.py", "size": 1931, "license": "NOASSERTION", "content_sha": "acee46516eb3f3b0cc8ac710d7715716e12db08f", "findings": [], "content": "class Node(object):\n\n    def __init__(self, results):\n        self.results = results\n        self.next = next\n\n\nclass LinkedList(object):\n\n    def __init__(self):\n        self.head = None\n        self.tail = None\n\n    def move_to_front(self, node):\n        pass\n\n    def append_to_front(self, node):\n        pass\n\n    def remove_from_tail(self):\n        pass\n\n\nclass Cache(object):\n\n    def __init__(self, MAX_SIZE):\n        self.MAX_SIZE = MAX_SIZE\n        self.size = 0\n        self.lookup = {}  # key: query, value: node\n        self.linked_list = LinkedList()\n\n    def get(self, query):\n        \"\"\"Get the stored query result from the cache.\n\n        Accessing a node updates its position to the front of the LRU list.\n        \"\"\"\n        node = self.lookup.get(query)\n        if node is None:\n            return None\n        self.linked_list.move_to_front(node)\n        return node.results\n\n    def set(self, results, query):\n        \"\"\"Set the result for the given query key in the cache.\n\n        When updating an entry, updates its position to the front of the LRU list.\n        If the entry is new and the cache is at capacity, removes the oldest entry\n        before the new entry is added.\n        \"\"\"\n        node = self.lookup.get(query)\n        if node is not None:\n            # Key exists in cache, update the value\n            node.results = results\n            self.linked_list.move_to_front(node)\n        else:\n            # Key does not exist in cache\n            if self.size == self.MAX_SIZE:\n                # Remove the oldest entry from the linked list and lookup\n                self.lookup.pop(self.linked_list.tail.query, None)\n                self.linked_list.remove_from_tail()\n            else:\n                self.size += 1\n            # Add the new key and value\n            new_node = Node(results)\n            self.linked_list.append_to_front(new_node)\n            self.lookup[query] = new_node\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "solutions/object_oriented_design/online_chat/online_chat.py", "size": 2443, "license": "NOASSERTION", "content_sha": "7063ca0442616f51cc75234ab6b67d9781f36463", "findings": [], "content": "from abc import ABCMeta\nfrom enum import Enum\n\n\nclass UserService(object):\n\n    def __init__(self):\n        self.users_by_id = {}  # key: user id, value: User\n\n    def add_user(self, user_id, name, pass_hash):\n        pass\n\n    def remove_user(self, user_id):\n        pass\n\n    def add_friend_request(self, from_user_id, to_user_id):\n        pass\n\n    def approve_friend_request(self, from_user_id, to_user_id):\n        pass\n\n    def reject_friend_request(self, from_user_id, to_user_id):\n        pass\n\n\nclass User(object):\n\n    def __init__(self, user_id, name, pass_hash):\n        self.user_id = user_id\n        self.name = name\n        self.pass_hash = pass_hash\n        self.friends_by_id = {}  # key: friend id, value: User\n        self.friend_ids_to_private_chats = {}  # key: friend id, value: private chats\n        self.group_chats_by_id = {}  # key: chat id, value: GroupChat\n        self.received_friend_requests_by_friend_id = {}  # key: friend id, value: AddRequest\n        self.sent_friend_requests_by_friend_id = {}  # key: friend id, value: AddRequest\n\n    def message_user(self, friend_id, message):\n        pass\n\n    def message_group(self, group_id, message):\n        pass\n\n    def send_friend_request(self, friend_id):\n        pass\n\n    def receive_friend_request(self, friend_id):\n        pass\n\n    def approve_friend_request(self, friend_id):\n        pass\n\n    def reject_friend_request(self, friend_id):\n        pass\n\n\nclass Chat(metaclass=ABCMeta):\n\n    def __init__(self, chat_id):\n        self.chat_id = chat_id\n        self.users = []\n        self.messages = []\n\n\nclass PrivateChat(Chat):\n\n    def __init__(self, first_user, second_user):\n        super(PrivateChat, self).__init__()\n        self.users.append(first_user)\n        self.users.append(second_user)\n\n\nclass GroupChat(Chat):\n\n    def add_user(self, user):\n        pass\n\n    def remove_user(self, user):\n        pass\n\n\nclass Message(object):\n\n    def __init__(self, message_id, message, timestamp):\n        self.message_id = message_id\n        self.message = message\n        self.timestamp = timestamp\n\n\nclass AddRequest(object):\n\n    def __init__(self, from_user_id, to_user_id, request_status, timestamp):\n        self.from_user_id = from_user_id\n        self.to_user_id = to_user_id\n        self.request_status = request_status\n        self.timestamp = timestamp\n\n\nclass RequestStatus(Enum):\n\n    UNREAD = 0\n    READ = 1\n    ACCEPTED = 2\n    REJECTED = 3\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "solutions/object_oriented_design/parking_lot/parking_lot.py", "size": 3070, "license": "NOASSERTION", "content_sha": "08852d9dc22d084068a8717d49223099ba90381c", "findings": [], "content": "from abc import ABCMeta, abstractmethod\nfrom enum import Enum\n\n\nclass VehicleSize(Enum):\n\n    MOTORCYCLE = 0\n    COMPACT = 1\n    LARGE = 2\n\n\nclass Vehicle(metaclass=ABCMeta):\n\n    def __init__(self, vehicle_size, license_plate, spot_size):\n        self.vehicle_size = vehicle_size\n        self.license_plate = license_plate\n        self.spot_size\n        self.spots_taken = []\n\n    def clear_spots(self):\n        for spot in self.spots_taken:\n            spot.remove_vehicle(self)\n        self.spots_taken = []\n\n    def take_spot(self, spot):\n        self.spots_taken.append(spot)\n\n    @abstractmethod\n    def can_fit_in_spot(self, spot):\n        pass\n\n\nclass Motorcycle(Vehicle):\n\n    def __init__(self, license_plate):\n        super(Motorcycle, self).__init__(VehicleSize.MOTORCYCLE, license_plate, spot_size=1)\n\n    def can_fit_in_spot(self, spot):\n        return True\n\n\nclass Car(Vehicle):\n\n    def __init__(self, license_plate):\n        super(Car, self).__init__(VehicleSize.COMPACT, license_plate, spot_size=1)\n\n    def can_fit_in_spot(self, spot):\n        return spot.size in (VehicleSize.LARGE, VehicleSize.COMPACT)\n\n\nclass Bus(Vehicle):\n\n    def __init__(self, license_plate):\n        super(Bus, self).__init__(VehicleSize.LARGE, license_plate, spot_size=5)\n\n    def can_fit_in_spot(self, spot):\n        return spot.size == VehicleSize.LARGE\n\n\nclass ParkingLot(object):\n\n    def __init__(self, num_levels):\n        self.num_levels = num_levels\n        self.levels = []  # List of Levels\n\n    def park_vehicle(self, vehicle):\n        for level in self.levels:\n            if level.park_vehicle(vehicle):\n                return True\n        return False\n\n\nclass Level(object):\n\n    SPOTS_PER_ROW = 10\n\n    def __init__(self, floor, total_spots):\n        self.floor = floor\n        self.num_spots = total_spots\n        self.available_spots = 0\n        self.spots = []  # List of ParkingSpots\n\n    def spot_freed(self):\n        self.available_spots += 1\n\n    def park_vehicle(self, vehicle):\n        spot = self._find_available_spot(vehicle)\n        if spot is None:\n            return None\n        else:\n            spot.park_vehicle(vehicle)\n            return spot\n\n    def _find_available_spot(self, vehicle):\n        \"\"\"Find an available spot where vehicle can fit, or return None\"\"\"\n        pass\n\n    def _park_starting_at_spot(self, spot, vehicle):\n        \"\"\"Occupy starting at spot.spot_number to vehicle.spot_size.\"\"\"\n        pass\n\n\nclass ParkingSpot(object):\n\n    def __init__(self, level, row, spot_number, spot_size, vehicle_size):\n        self.level = level\n        self.row = row\n        self.spot_number = spot_number\n        self.spot_size = spot_size\n        self.vehicle_size = vehicle_size\n        self.vehicle = None\n\n    def is_available(self):\n        return True if self.vehicle is None else False\n\n    def can_fit_vehicle(self, vehicle):\n        if self.vehicle is not None:\n            return False\n        return vehicle.can_fit_in_spot(self)\n\n    def park_vehicle(self, vehicle):\n        pass\n\n    def remove_vehicle(self):\n        pass\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "solutions/system_design/mint/README-zh-Hans.md", "size": 20225, "license": "NOASSERTION", "content_sha": "58467bc6bf11e25cfe22aff28d10e2f991111ddb", "findings": [], "content": "# \u8bbe\u8ba1 Mint.com\n\n**\u6ce8\u610f\uff1a\u8fd9\u4e2a\u6587\u6863\u4e2d\u7684\u94fe\u63a5\u4f1a\u76f4\u63a5\u6307\u5411[\u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898\u7d22\u5f15](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898\u7d22\u5f15)\u4e2d\u7684\u6709\u5173\u90e8\u5206\uff0c\u4ee5\u907f\u514d\u91cd\u590d\u7684\u5185\u5bb9\u3002\u60a8\u53ef\u4ee5\u53c2\u8003\u94fe\u63a5\u7684\u76f8\u5173\u5185\u5bb9\uff0c\u6765\u4e86\u89e3\u5176\u603b\u7684\u8981\u70b9\u3001\u65b9\u6848\u7684\u6743\u8861\u53d6\u820d\u4ee5\u53ca\u53ef\u9009\u7684\u66ff\u4ee3\u65b9\u6848\u3002**\n\n## \u7b2c\u4e00\u6b65\uff1a\u7b80\u8ff0\u7528\u4f8b\u4e0e\u7ea6\u675f\u6761\u4ef6\n\n> \u641c\u96c6\u9700\u6c42\u4e0e\u95ee\u9898\u7684\u8303\u56f4\u3002\n> \u63d0\u51fa\u95ee\u9898\u6765\u660e\u786e\u7528\u4f8b\u4e0e\u7ea6\u675f\u6761\u4ef6\u3002\n> \u8ba8\u8bba\u5047\u8bbe\u3002\n\n\u6211\u4eec\u5c06\u5728\u6ca1\u6709\u9762\u8bd5\u5b98\u660e\u786e\u8bf4\u660e\u95ee\u9898\u7684\u60c5\u51b5\u4e0b\uff0c\u81ea\u5df1\u5b9a\u4e49\u4e00\u4e9b\u7528\u4f8b\u4ee5\u53ca\u9650\u5236\u6761\u4ef6\u3002\n\n### \u7528\u4f8b\n\n#### \u6211\u4eec\u5c06\u628a\u95ee\u9898\u9650\u5b9a\u5728\u4ec5\u5904\u7406\u4ee5\u4e0b\u7528\u4f8b\u7684\u8303\u56f4\u4e2d\n\n* **\u7528\u6237** \u8fde\u63a5\u5230\u4e00\u4e2a\u8d22\u52a1\u8d26\u6237\n* **\u670d\u52a1** \u4ece\u8d26\u6237\u4e2d\u63d0\u53d6\u4ea4\u6613\n    * \u6bcf\u65e5\u66f4\u65b0\n    * \u5206\u7c7b\u4ea4\u6613\n        * \u5141\u8bb8\u7528\u6237\u624b\u52a8\u5206\u7c7b\n        * \u4e0d\u81ea\u52a8\u91cd\u65b0\u5206\u7c7b\n    * \u6309\u7c7b\u522b\u5206\u6790\u6bcf\u6708\u652f\u51fa\n* **\u670d\u52a1** \u63a8\u8350\u9884\u7b97\n    * \u5141\u8bb8\u7528\u6237\u624b\u52a8\u8bbe\u7f6e\u9884\u7b97\n    * \u5f53\u63a5\u8fd1\u6216\u8005\u8d85\u51fa\u9884\u7b97\u65f6\uff0c\u53d1\u9001\u901a\u77e5\n* **\u670d\u52a1** \u5177\u6709\u9ad8\u53ef\u7528\u6027\n\n#### \u975e\u7528\u4f8b\u8303\u56f4\n\n* **\u670d\u52a1** \u6267\u884c\u9644\u52a0\u7684\u65e5\u5fd7\u8bb0\u5f55\u548c\u5206\u6790\n\n### \u9650\u5236\u6761\u4ef6\u4e0e\u5047\u8bbe\n\n#### \u63d0\u51fa\u5047\u8bbe\n\n* \u7f51\u7edc\u6d41\u91cf\u975e\u5747\u5300\u5206\u5e03\n* \u81ea\u52a8\u8d26\u6237\u65e5\u66f4\u65b0\u53ea\u9002\u7528\u4e8e 30 \u5929\u5185\u6d3b\u8dc3\u7684\u7528\u6237\n* \u6dfb\u52a0\u6216\u8005\u79fb\u9664\u8d22\u52a1\u8d26\u6237\u76f8\u5bf9\u8f83\u5c11\n* \u9884\u7b97\u901a\u77e5\u4e0d\u9700\u8981\u53ca\u65f6\n* 1000 \u4e07\u7528\u6237\n    * \u6bcf\u4e2a\u7528\u623710\u4e2a\u9884\u7b97\u7c7b\u522b= 1\u4ebf\u4e2a\u9884\u7b97\u9879\n    * \u793a\u4f8b\u7c7b\u522b:\n        * Housing = $1,000\n        * Food = $200\n        * Gas = $100\n    * \u5356\u65b9\u786e\u5b9a\u4ea4\u6613\u7c7b\u522b\n        * 50000 \u4e2a\u5356\u65b9\n* 3000 \u4e07\u8d22\u52a1\u8d26\u6237\n* \u6bcf\u6708 50 \u4ebf\u4ea4\u6613\n* \u6bcf\u6708 5 \u4ebf\u8bfb\u8bf7\u6c42\n* 10:1 \u8bfb\u5199\u6bd4\n    * Write-heavy\uff0c\u7528\u6237\u6bcf\u5929\u90fd\u8fdb\u884c\u4ea4\u6613\uff0c\u4f46\u662f\u6bcf\u5929\u5f88\u5c11\u8bbf\u95ee\u8be5\u7f51\u7ad9\n\n#### \u8ba1\u7b97\u7528\u91cf\n\n**\u5982\u679c\u4f60\u9700\u8981\u8fdb\u884c\u7c97\u7565\u7684\u7528\u91cf\u8ba1\u7b97\uff0c\u8bf7\u5411\u4f60\u7684\u9762\u8bd5\u5b98\u8bf4\u660e\u3002**\n\n* \u6bcf\u6b21\u4ea4\u6613\u7684\u7528\u91cf:\n    * `user_id` - 8 \u5b57\u8282\n    * `created_at` - 5 \u5b57\u8282\n    * `seller` - 32 \u5b57\u8282\n    * `amount` - 5 \u5b57\u8282\n    * Total: ~50 \u5b57\u8282\n* \u6bcf\u6708\u4ea7\u751f 250 GB \u65b0\u7684\u4ea4\u6613\u5185\u5bb9\n    * \u6bcf\u6b21\u4ea4\u6613 50 \u6bd4\u7279 * 50 \u4ebf\u4ea4\u6613\u6bcf\u6708\n    * 3\u5e74\u5185\u65b0\u7684\u4ea4\u6613\u5185\u5bb9 9 TB\n    * Assume most are new transactions instead of updates to existing ones\n* \u5e73\u5747\u6bcf\u79d2\u4ea7\u751f 2000 \u6b21\u4ea4\u6613\n* \u5e73\u5747\u6bcf\u79d2\u4ea7\u751f 200 \u8bfb\u8bf7\u6c42\n\n\u4fbf\u5229\u6362\u7b97\u6307\u5357\uff1a\n\n* \u6bcf\u4e2a\u6708\u6709 250 \u4e07\u79d2\n* \u6bcf\u79d2\u4e00\u4e2a\u8bf7\u6c42 = \u6bcf\u4e2a\u6708 250 \u4e07\u6b21\u8bf7\u6c42\n* \u6bcf\u79d2 40 \u4e2a\u8bf7\u6c42 = \u6bcf\u4e2a\u6708 1 \u4ebf\u6b21\u8bf7\u6c42\n* \u6bcf\u79d2 400 \u4e2a\u8bf7\u6c42 = \u6bcf\u4e2a\u6708 10 \u4ebf\u6b21\u8bf7\u6c42\n\n## \u7b2c\u4e8c\u6b65\uff1a\u6982\u8981\u8bbe\u8ba1\n\n> \u5217\u51fa\u6240\u6709\u91cd\u8981\u7ec4\u4ef6\u4ee5\u89c4\u5212\u6982\u8981\u8bbe\u8ba1\u3002\n\n![Imgur](http://i.imgur.com/E8klrBh.png)\n\n## \u7b2c\u4e09\u6b65\uff1a\u8bbe\u8ba1\u6838\u5fc3\u7ec4\u4ef6\n\n> \u6df1\u5165\u6bcf\u4e2a\u6838\u5fc3\u7ec4\u4ef6\u7684\u7ec6\u8282\u3002\n\n### \u7528\u4f8b\uff1a\u7528\u6237\u8fde\u63a5\u5230\u4e00\u4e2a\u8d22\u52a1\u8d26\u6237\n\n\u6211\u4eec\u53ef\u4ee5\u5c06 1000 \u4e07\u7528\u6237\u7684\u4fe1\u606f\u5b58\u50a8\u5728\u4e00\u4e2a[\u5173\u7cfb\u6570\u636e\u5e93](https://github.com/donnemartin/system-design-primer#relational-database-management-system-rdbms)\u4e2d\u3002\u6211\u4eec\u5e94\u8be5\u8ba8\u8bba\u4e00\u4e0b[\u9009\u62e9SQL\u6216NoSQL\u4e4b\u95f4\u7684\u7528\u4f8b\u548c\u6743\u8861](https://github.com/donnemartin/system-design-primer#sql-or-nosql)\u4e86\u3002\n\n* **\u5ba2\u6237\u7aef** \u4f5c\u4e3a\u4e00\u4e2a[\u53cd\u5411\u4ee3\u7406](https://github.com/donnemartin/system-design-primer#reverse-proxy-web-server)\uff0c\u53d1\u9001\u8bf7\u6c42\u5230 **Web \u670d\u52a1\u5668**\n* **Web \u670d\u52a1\u5668** \u8f6c\u53d1\u8bf7\u6c42\u5230 **\u8d26\u6237API** \u670d\u52a1\u5668\n* **\u8d26\u6237API** \u670d\u52a1\u5668\u5c06\u65b0\u8f93\u5165\u7684\u8d26\u6237\u4fe1\u606f\u66f4\u65b0\u5230 **SQL\u6570\u636e\u5e93** \u7684`accounts`\u8868\n\n**\u544a\u77e5\u4f60\u7684\u9762\u8bd5\u5b98\u4f60\u51c6\u5907\u5199\u591a\u5c11\u4ee3\u7801**\u3002\n\n`accounts`\u8868\u5e94\u8be5\u5177\u6709\u5982\u4e0b\u7ed3\u6784\uff1a\n\n```\nid int NOT NULL AUTO_INCREMENT\ncreated_at datetime NOT NULL\nlast_update datetime NOT NULL\naccount_url varchar(255) NOT NULL\naccount_login varchar(32) NOT NULL\naccount_password_hash char(64) NOT NULL\nuser_id int NOT NULL\nPRIMARY KEY(id)\nFOREIGN KEY(user_id) REFERENCES users(id)\n```\n\n\u6211\u4eec\u5c06\u5728`id`\uff0c`user_id`\u548c`created_at`\u7b49\u5b57\u6bb5\u4e0a\u521b\u5efa\u4e00\u4e2a[\u7d22\u5f15](https://github.com/donnemartin/system-design-primer#use-good-indices)\u4ee5\u52a0\u901f\u67e5\u627e\uff08\u5bf9\u6570\u65f6\u95f4\u800c\u4e0d\u662f\u626b\u63cf\u6574\u4e2a\u8868\uff09\u5e76\u4fdd\u6301\u6570\u636e\u5728\u5185\u5b58\u4e2d\u3002\u4ece\u5185\u5b58\u4e2d\u987a\u5e8f\u8bfb\u53d6 1 MB\u6570\u636e\u82b1\u8d39\u5927\u7ea6250\u6beb\u79d2\uff0c\u800c\u4eceSSD\u8bfb\u53d6\u662f\u51764\u500d\uff0c\u4ece\u78c1\u76d8\u8bfb\u53d6\u662f\u517680\u500d\u3002<sup><a href=https://github.com/donnemartin/system-design-primer#latency-numbers-every-programmer-should-know>1</a></sup>\n\n\u6211\u4eec\u5c06\u4f7f\u7528\u516c\u5f00\u7684[**REST API**](https://github.com/donnemartin/system-design-primer#representational-state-transfer-rest):\n\n```\n$ curl -X POST --data '{ \"user_id\": \"foo\", \"account_url\": \"bar\", \\\n    \"account_login\": \"baz\", \"account_password\": \"qux\" }' \\\n    https://mint.com/api/v1/account\n```\n\n\u5bf9\u4e8e\u5185\u90e8\u901a\u4fe1\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528[\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528](https://github.com/donnemartin/system-design-primer#remote-procedure-call-rpc)\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u670d\u52a1\u4ece\u8d26\u6237\u4e2d\u63d0\u53d6\u4ea4\u6613\u3002\n\n### \u7528\u4f8b\uff1a\u670d\u52a1\u4ece\u8d26\u6237\u4e2d\u63d0\u53d6\u4ea4\u6613\n\n\u5982\u4e0b\u51e0\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u60f3\u8981\u4ece\u8d26\u6237\u4e2d\u63d0\u53d6\u4fe1\u606f\uff1a\n\n* \u7528\u6237\u9996\u6b21\u94fe\u63a5\u8d26\u6237\n* \u7528\u6237\u624b\u52a8\u66f4\u65b0\u8d26\u6237\n* \u4e3a\u8fc7\u53bb 30 \u5929\u5185\u6d3b\u8dc3\u7684\u7528\u6237\u81ea\u52a8\u65e5\u66f4\u65b0\n\n\u6570\u636e\u6d41:\n\n* **\u5ba2\u6237\u7aef**\u5411 **Web\u670d\u52a1\u5668** \u53d1\u9001\u8bf7\u6c42\n* **Web\u670d\u52a1\u5668** \u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230 **\u5e10\u6237API** \u670d\u52a1\u5668\n* **\u5e10\u6237API** \u670d\u52a1\u5668\u5c06job\u653e\u5728 **\u961f\u5217** \u4e2d\uff0c\u5982 [Amazon SQS](https://aws.amazon.com/sqs/) \u6216\u8005 [RabbitMQ](https://www.rabbitmq.com/)\n    * \u63d0\u53d6\u4ea4\u6613\u53ef\u80fd\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b[\u4e0e\u961f\u5217\u5f02\u6b65](https://github.com/donnemartin/system-design-primer#asynchronism)\u5730\u6765\u505a\uff0c\u867d\u7136\u8fd9\u4f1a\u5f15\u5165\u989d\u5916\u7684\u590d\u6742\u5ea6\u3002\n* **\u4ea4\u6613\u63d0\u53d6\u670d\u52a1** \u6267\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\n    * \u4ece **Queue** \u4e2d\u62c9\u53d6\u5e76\u4ece\u91d1\u878d\u673a\u6784\u4e2d\u63d0\u53d6\u7ed9\u5b9a\u7528\u6237\u7684\u4ea4\u6613\uff0c\u5c06\u7ed3\u679c\u4f5c\u4e3a\u539f\u59cb\u65e5\u5fd7\u6587\u4ef6\u5b58\u50a8\u5728 **\u5bf9\u8c61\u5b58\u50a8\u533a**\u3002\n    * \u4f7f\u7528 **\u5206\u7c7b\u670d\u52a1** \u6765\u5206\u7c7b\u6bcf\u4e2a\u4ea4\u6613\n    * \u4f7f\u7528 **\u9884\u7b97\u670d\u52a1** \u6765\u6309\u7c7b\u522b\u8ba1\u7b97\u6bcf\u6708\u603b\u652f\u51fa\n        * **\u9884\u7b97\u670d\u52a1** \u4f7f\u7528 **\u901a\u77e5\u670d\u52a1** \u8ba9\u7528\u6237\u77e5\u9053\u4ed6\u4eec\u662f\u5426\u63a5\u8fd1\u6216\u8005\u5df2\u7ecf\u8d85\u51fa\u9884\u7b97\n    * \u66f4\u65b0\u5177\u6709\u5206\u7c7b\u4ea4\u6613\u7684 **SQL\u6570\u636e\u5e93** \u7684`transactions`\u8868\n    * \u6309\u7c7b\u522b\u66f4\u65b0 **SQL\u6570\u636e\u5e93** `monthly_spending`\u8868\u7684\u6bcf\u6708\u603b\u652f\u51fa\n    * \u901a\u8fc7 **\u901a\u77e5\u670d\u52a1** \u63d0\u9192\u7528\u6237\u4ea4\u6613\u5b8c\u6210\n        * \u4f7f\u7528\u4e00\u4e2a **\u961f\u5217** (\u6ca1\u6709\u753b\u51fa\u6765) \u6765\u5f02\u6b65\u53d1\u9001\u901a\u77e5\n\n`transactions`\u8868\u5e94\u8be5\u5177\u6709\u5982\u4e0b\u7ed3\u6784\uff1a\n\n```\nid int NOT NULL AUTO_INCREMENT\ncreated_at datetime NOT NULL\nseller varchar(32) NOT NULL\namount decimal NOT NULL\nuser_id int NOT NULL\nPRIMARY KEY(id)\nFOREIGN KEY(user_id) REFERENCES users(id)\n```\n\n\u6211\u4eec\u5c06\u5728 `id`\uff0c`user_id`\uff0c\u548c `created_at`\u5b57\u6bb5\u4e0a\u521b\u5efa[\u7d22\u5f15](https://github.com/donnemartin/system-design-primer#use-good-indices)\u3002\n\n`monthly_spending`\u8868\u5e94\u8be5\u5177\u6709\u5982\u4e0b\u7ed3\u6784\uff1a\n\n```\nid int NOT NULL AUTO_INCREMENT\nmonth_year date NOT NULL\ncategory varchar(32)\namount decimal NOT NULL\nuser_id int NOT NULL\nPRIMARY KEY(id)\nFOREIGN KEY(user_id) REFERENCES users(id)\n```\n\n\u6211\u4eec\u5c06\u5728`id`\uff0c`user_id`\u5b57\u6bb5\u4e0a\u521b\u5efa[\u7d22\u5f15](https://github.com/donnemartin/system-design-primer#use-good-indices)\u3002\n\n#### \u5206\u7c7b\u670d\u52a1\n\n\u5bf9\u4e8e **\u5206\u7c7b\u670d\u52a1**\uff0c\u6211\u4eec\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u5e26\u6709\u6700\u53d7\u6b22\u8fce\u5356\u5bb6\u7684\u5356\u5bb6-\u7c7b\u522b\u5b57\u5178\u3002\u5982\u679c\u6211\u4eec\u4f30\u8ba1 50000 \u4e2a\u5356\u5bb6\uff0c\u5e76\u4f30\u8ba1\u6bcf\u4e2a\u6761\u76ee\u5360\u7528\u4e0d\u5c11\u4e8e 255 \u4e2a\u5b57\u8282\uff0c\u8be5\u5b57\u5178\u53ea\u9700\u8981\u5927\u7ea6 12 MB\u5185\u5b58\u3002\n\n**\u544a\u77e5\u4f60\u7684\u9762\u8bd5\u5b98\u4f60\u51c6\u5907\u5199\u591a\u5c11\u4ee3\u7801**\u3002\n\n```python\nclass DefaultCategories(Enum):\n\n    HOUSING = 0\n    FOOD = 1\n    GAS = 2\n    SHOPPING = 3\n    ...\n\nseller_category_map = {}\nseller_category_map['Exxon'] = DefaultCategories.GAS\nseller_category_map['Target'] = DefaultCategories.SHOPPING\n...\n```\n\n\u5bf9\u4e8e\u4e00\u5f00\u59cb\u6ca1\u6709\u5728\u6620\u5c04\u4e2d\u7684\u5356\u5bb6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bc4\u4f30\u7528\u6237\u63d0\u4f9b\u7684\u624b\u52a8\u7c7b\u522b\u6765\u8fdb\u884c\u4f17\u5305\u3002\u5728 O(1) \u65f6\u95f4\u5185\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5806\u6765\u5feb\u901f\u67e5\u627e\u6bcf\u4e2a\u5356\u5bb6\u7684\u9876\u7aef\u7684\u624b\u52a8\u8986\u76d6\u3002\n\n```python\nclass Categorizer(object):\n\n    def __init__(self, seller_category_map, self.seller_category_crowd_overrides_map):\n        self.seller_category_map = seller_category_map\n        self.seller_category_crowd_overrides_map = \\\n            seller_category_crowd_overrides_map\n\n    def categorize(self, transaction):\n        if transaction.seller in self.seller_category_map:\n            return self.seller_category_map[transaction.seller]\n        elif transaction.seller in self.seller_category_crowd_overrides_map:\n            self.seller_category_map[transaction.seller] = \\\n                self.seller_category_crowd_overrides_map[transaction.seller].peek_min()\n            return self.seller_category_map[transaction.seller]\n        return None\n```\n\n\u4ea4\u6613\u5b9e\u73b0\uff1a\n\n```python\nclass Transaction(object):\n\n    def __init__(self, created_at, seller, amount):\n        self.timestamp = timestamp\n        self.seller = seller\n        self.amount = amount\n```\n\n### \u7528\u4f8b\uff1a\u670d\u52a1\u63a8\u8350\u9884\u7b97\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6839\u636e\u6536\u5165\u7b49\u7ea7\u5206\u914d\u6bcf\u7c7b\u522b\u91d1\u989d\u7684\u901a\u7528\u9884\u7b97\u6a21\u677f\u3002\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6211\u4eec\u4e0d\u5fc5\u5b58\u50a8\u5728\u7ea6\u675f\u4e2d\u6807\u8bc6\u7684 1 \u4ebf\u4e2a\u9884\u7b97\u9879\u76ee\uff0c\u53ea\u9700\u5b58\u50a8\u7528\u6237\u8986\u76d6\u7684\u9884\u7b97\u9879\u76ee\u3002\u5982\u679c\u7528\u6237\u8986\u76d6\u9884\u7b97\u7c7b\u522b\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\n`TABLE budget_overrides`\u4e2d\u5b58\u50a8\u6b64\u8986\u76d6\u3002\n\n```python\nclass Budget(object):\n\n    def __init__(self, income):\n        self.income = income\n        self.categories_to_budget_map = self.create_budget_template()\n\n    def create_budget_template(self):\n        return {\n            'DefaultCategories.HOUSING': income * .4,\n            'DefaultCategories.FOOD': income * .2\n            'DefaultCategories.GAS': income * .1,\n            'DefaultCategories.SHOPPING': income * .2\n            ...\n        }\n\n    def override_category_budget(self, category, amount):\n        self.categories_to_budget_map[category] = amount\n```\n\n\u5bf9\u4e8e **\u9884\u7b97\u670d\u52a1** \u800c\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u5728`transactions`\u8868\u4e0a\u8fd0\u884cSQL\u67e5\u8be2\u4ee5\u751f\u6210`monthly_spending`\u805a\u5408\u8868\u3002\u7531\u4e8e\u7528\u6237\u901a\u5e38\u6bcf\u4e2a\u6708\u6709\u5f88\u591a\u4ea4\u6613\uff0c\u6240\u4ee5`monthly_spending`\u8868\u7684\u884c\u6570\u53ef\u80fd\u4f1a\u5c11\u4e8e\u603b\u517150\u4ebf\u6b21\u4ea4\u6613\u7684\u884c\u6570\u3002\n\n\u4f5c\u4e3a\u66ff\u4ee3\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u539f\u59cb\u4ea4\u6613\u6587\u4ef6\u4e0a\u8fd0\u884c **MapReduce** \u4f5c\u4e1a\u6765\uff1a\n\n* \u5206\u7c7b\u6bcf\u4e2a\u4ea4\u6613\n* \u6309\u7c7b\u522b\u751f\u6210\u6bcf\u6708\u603b\u652f\u51fa\n\n\u5bf9\u4ea4\u6613\u6587\u4ef6\u7684\u8fd0\u884c\u5206\u6790\u53ef\u4ee5\u663e\u8457\u51cf\u5c11\u6570\u636e\u5e93\u7684\u8d1f\u8f7d\u3002\n\n\u5982\u679c\u7528\u6237\u66f4\u65b0\u7c7b\u522b\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u7528 **\u9884\u7b97\u670d\u52a1** \u91cd\u65b0\u8fd0\u884c\u5206\u6790\u3002\n\n**\u544a\u77e5\u4f60\u7684\u9762\u8bd5\u5b98\u4f60\u51c6\u5907\u5199\u591a\u5c11\u4ee3\u7801**.\n\n\u65e5\u5fd7\u6587\u4ef6\u683c\u5f0f\u6837\u4f8b\uff0c\u4ee5tab\u5206\u5272\uff1a\n\n```\nuser_id   timestamp   seller  amount\n```\n\n**MapReduce** \u5b9e\u73b0:\n\n```python\nclass SpendingByCategory(MRJob):\n\n    def __init__(self, categorizer):\n        self.categorizer = categorizer\n        self.current_year_month = calc_current_year_month()\n        ...\n\n    def calc_current_year_month(self):\n        \"\"\"\u8fd4\u56de\u5f53\u524d\u5e74\u6708\"\"\"\n        ...\n\n    def extract_year_month(self, timestamp):\n        \"\"\"\u8fd4\u56de\u65f6\u95f4\u6233\u7684\u5e74\uff0c\u6708\u90e8\u5206\"\"\"\n        ...\n\n    def handle_budget_notifications(self, key, total):\n        \"\"\"\u5982\u679c\u63a5\u8fd1\u6216\u8d85\u51fa\u9884\u7b97\uff0c\u8c03\u7528\u901a\u77e5API\"\"\"\n        ...\n\n    def mapper(self, _, line):\n        \"\"\"\u89e3\u6790\u6bcf\u4e2a\u65e5\u5fd7\u884c\uff0c\u63d0\u53d6\u548c\u8f6c\u6362\u76f8\u5173\u884c\u3002\n\n        \u53c2\u6570\u884c\u5e94\u4e3a\u5982\u4e0b\u5f62\u5f0f\uff1a\n\n        user_id   timestamp   seller  amount\n\n        \u4f7f\u7528\u5206\u7c7b\u5668\u6765\u5c06\u5356\u5bb6\u8f6c\u6362\u6210\u7c7b\u522b\uff0c\u751f\u6210\u5982\u4e0b\u5f62\u5f0f\u7684key-value\u5bf9\uff1a\n\n        (user_id, 2016-01, shopping), 25\n        (user_id, 2016-01, shopping), 100\n        (user_id, 2016-01, gas), 50\n        \"\"\"\n        user_id, timestamp, seller, amount = line.split('\\t')\n        category = self.categorizer.categorize(seller)\n        period = self.extract_year_month(timestamp)\n        if period == self.current_year_month:\n            yield (user_id, period, category), amount\n\n    def reducer(self, key, value):\n        \"\"\"\u5c06\u6bcf\u4e2akey\u5bf9\u5e94\u7684\u503c\u6c42\u548c\u3002\n\n        (user_id, 2016-01, shopping), 125\n        (user_id, 2016-01, gas), 50\n        \"\"\"\n        total = sum(values)\n        yield key, sum(values)\n```\n\n## \u7b2c\u56db\u6b65\uff1a\u8bbe\u8ba1\u6269\u5c55\n\n> \u6839\u636e\u9650\u5236\u6761\u4ef6\uff0c\u627e\u5230\u5e76\u89e3\u51b3\u74f6\u9888\u3002\n\n![Imgur](http://i.imgur.com/V5q57vU.png)\n\n**\u91cd\u8981\u63d0\u793a\uff1a\u4e0d\u8981\u4ece\u6700\u521d\u8bbe\u8ba1\u76f4\u63a5\u8df3\u5230\u6700\u7ec8\u8bbe\u8ba1\u4e2d\uff01**\n\n\u73b0\u5728\u4f60\u8981 1) **\u57fa\u51c6\u6d4b\u8bd5\u3001\u8d1f\u8f7d\u6d4b\u8bd5**\u30022) **\u5206\u6790\u3001\u63cf\u8ff0**\u6027\u80fd\u74f6\u9888\u30023) \u5728\u89e3\u51b3\u74f6\u9888\u95ee\u9898\u7684\u540c\u65f6\uff0c\u8bc4\u4f30\u66ff\u4ee3\u65b9\u6848\u3001\u6743\u8861\u5229\u5f0a\u30024) \u91cd\u590d\u4ee5\u4e0a\u6b65\u9aa4\u3002\u8bf7\u9605\u8bfb[\u300c\u8bbe\u8ba1\u4e00\u4e2a\u7cfb\u7edf\uff0c\u5e76\u5c06\u5176\u6269\u5927\u5230\u4e3a\u6570\u4ee5\u767e\u4e07\u8ba1\u7684 AWS \u7528\u6237\u670d\u52a1\u300d](../scaling_aws/README.md) \u6765\u4e86\u89e3\u5982\u4f55\u9010\u6b65\u6269\u5927\u521d\u59cb\u8bbe\u8ba1\u3002\n\n\u8ba8\u8bba\u521d\u59cb\u8bbe\u8ba1\u53ef\u80fd\u9047\u5230\u7684\u74f6\u9888\u53ca\u76f8\u5173\u89e3\u51b3\u65b9\u6848\u662f\u5f88\u91cd\u8981\u7684\u3002\u4f8b\u5982\u52a0\u4e0a\u4e00\u4e2a\u914d\u7f6e\u591a\u53f0 **Web \u670d\u52a1\u5668**\u7684**\u8d1f\u8f7d\u5747\u8861\u5668**\u662f\u5426\u80fd\u591f\u89e3\u51b3\u95ee\u9898\uff1f**CDN**\u5462\uff1f**\u4e3b\u4ece\u590d\u5236**\u5462\uff1f\u5b83\u4eec\u5404\u81ea\u7684\u66ff\u4ee3\u65b9\u6848\u548c\u9700\u8981**\u6743\u8861**\u7684\u5229\u5f0a\u53c8\u6709\u4ec0\u4e48\u5462\uff1f\n\n\u6211\u4eec\u5c06\u4f1a\u4ecb\u7ecd\u4e00\u4e9b\u7ec4\u4ef6\u6765\u5b8c\u6210\u8bbe\u8ba1\uff0c\u5e76\u89e3\u51b3\u67b6\u6784\u6269\u5f20\u95ee\u9898\u3002\u5185\u7f6e\u7684\u8d1f\u8f7d\u5747\u8861\u5668\u5c06\u4e0d\u505a\u8ba8\u8bba\u4ee5\u8282\u7701\u7bc7\u5e45\u3002\n\n**\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u8ba8\u8bba**\uff0c\u8bf7\u53c2\u8003[\u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898\u7d22\u5f15](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898\u7684\u7d22\u5f15)\u76f8\u5173\u90e8\u5206\u6765\u4e86\u89e3\u5176\u8981\u70b9\u3001\u65b9\u6848\u7684\u6743\u8861\u53d6\u820d\u4ee5\u53ca\u53ef\u9009\u7684\u66ff\u4ee3\u65b9\u6848\u3002\n\n* [DNS](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u57df\u540d\u7cfb\u7edf)\n* [\u8d1f\u8f7d\u5747\u8861\u5668](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u8d1f\u8f7d\u5747\u8861\u5668)\n* [\u6c34\u5e73\u62d3\u5c55](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u6c34\u5e73\u6269\u5c55)\n* [\u53cd\u5411\u4ee3\u7406\uff08web \u670d\u52a1\u5668\uff09](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u53cd\u5411\u4ee3\u7406web-\u670d\u52a1\u5668)\n* [API \u670d\u52a1\uff08\u5e94\u7528\u5c42\uff09](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5e94\u7528\u5c42)\n* [\u7f13\u5b58](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u7f13\u5b58)\n* [\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf (RDBMS)](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edfrdbms)\n* [SQL \u6545\u969c\u4e3b\u4ece\u5207\u6362](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u6545\u969c\u5207\u6362)\n* [\u4e3b\u4ece\u590d\u5236](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u4e3b\u4ece\u590d\u5236)\n* [\u5f02\u6b65](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5f02\u6b65)\n* [\u4e00\u81f4\u6027\u6a21\u5f0f](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u4e00\u81f4\u6027\u6a21\u5f0f)\n* [\u53ef\u7528\u6027\u6a21\u5f0f](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u53ef\u7528\u6027\u6a21\u5f0f)\n\n\u6211\u4eec\u5c06\u589e\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u7528\u4f8b\uff1a**\u7528\u6237** \u8bbf\u95ee\u6458\u8981\u548c\u4ea4\u6613\u6570\u636e\u3002\n\n\u7528\u6237\u4f1a\u8bdd\uff0c\u6309\u7c7b\u522b\u7edf\u8ba1\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u4ee5\u53ca\u6700\u8fd1\u7684\u4e8b\u52a1\u53ef\u4ee5\u653e\u5728 **\u5185\u5b58\u7f13\u5b58**\uff08\u5982 Redis \u6216 Memcached \uff09\u4e2d\u3002\n\n* **\u5ba2\u6237\u7aef** \u53d1\u9001\u8bfb\u8bf7\u6c42\u7ed9 **Web \u670d\u52a1\u5668**\n* **Web \u670d\u52a1\u5668** \u8f6c\u53d1\u8bf7\u6c42\u5230 **\u8bfb API** \u670d\u52a1\u5668\n    * \u9759\u6001\u5185\u5bb9\u53ef\u901a\u8fc7 **\u5bf9\u8c61\u5b58\u50a8** \u6bd4\u5982\u7f13\u5b58\u5728 **CDN** \u4e0a\u7684 S3 \u6765\u670d\u52a1\n* **\u8bfb API** \u670d\u52a1\u5668\u505a\u5982\u4e0b\u52a8\u4f5c:\n    * \u68c0\u67e5 **\u5185\u5b58\u7f13\u5b58** \u7684\u5185\u5bb9\n        * \u5982\u679cURL\u5728 **\u5185\u5b58\u7f13\u5b58**\u4e2d\uff0c\u8fd4\u56de\u7f13\u5b58\u7684\u5185\u5bb9\n        * \u5426\u5219\n            * \u5982\u679cURL\u5728 **SQL \u6570\u636e\u5e93**\u4e2d\uff0c\u83b7\u53d6\u8be5\u5185\u5bb9\n                * \u4ee5\u5176\u5185\u5bb9\u66f4\u65b0 **\u5185\u5b58\u7f13\u5b58**\n\n\u53c2\u8003 [\u4f55\u65f6\u66f4\u65b0\u7f13\u5b58](https://github.com/donnemartin/system-design-primer#when-to-update-the-cache) \u4e2d\u6743\u8861\u548c\u66ff\u4ee3\u7684\u5185\u5bb9\u3002\u4ee5\u4e0a\u65b9\u6cd5\u63cf\u8ff0\u4e86 [cache-aside\u7f13\u5b58\u6a21\u5f0f](https://github.com/donnemartin/system-design-primer#cache-aside).\n\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8bf8\u5982 Amazon Redshift \u6216\u8005 Google BigQuery \u7b49\u6570\u636e\u4ed3\u5e93\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u4e0d\u662f\u5c06`monthly_spending`\u805a\u5408\u8868\u4fdd\u7559\u5728 **SQL \u6570\u636e\u5e93** \u4e2d\u3002\n\n\u6211\u4eec\u53ef\u80fd\u53ea\u60f3\u5728\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u4e00\u4e2a\u6708\u7684`\u4ea4\u6613`\u6570\u636e\uff0c\u800c\u5c06\u5176\u4f59\u6570\u636e\u5b58\u50a8\u5728\u6570\u636e\u4ed3\u5e93\u6216\u8005 **\u5bf9\u8c61\u5b58\u50a8\u533a** \u4e2d\u3002**\u5bf9\u8c61\u5b58\u50a8\u533a** \uff08\u5982Amazon S3) \u80fd\u591f\u8212\u670d\u5730\u89e3\u51b3\u6bcf\u6708 250 GB\u65b0\u5185\u5bb9\u7684\u9650\u5236\u3002\n\n\u4e3a\u4e86\u89e3\u51b3\u6bcf\u79d2 *\u5e73\u5747* 2000 \u6b21\u8bfb\u8bf7\u6c42\u6570\uff08\u5cf0\u503c\u65f6\u66f4\u9ad8\uff09\uff0c\u53d7\u6b22\u8fce\u7684\u5185\u5bb9\u7684\u6d41\u91cf\u5e94\u7531 **\u5185\u5b58\u7f13\u5b58** \u800c\u4e0d\u662f\u6570\u636e\u5e93\u6765\u5904\u7406\u3002 **\u5185\u5b58\u7f13\u5b58** \u4e5f\u53ef\u7528\u4e8e\u5904\u7406\u4e0d\u5747\u5300\u5206\u5e03\u7684\u6d41\u91cf\u548c\u6d41\u91cf\u5c16\u5cf0\u3002 \u53ea\u8981\u526f\u672c\u4e0d\u9677\u5165\u91cd\u590d\u5199\u5165\u7684\u56f0\u5883\uff0c**SQL \u8bfb\u526f\u672c** \u5e94\u8be5\u80fd\u591f\u5904\u7406\u9ad8\u901f\u7f13\u5b58\u672a\u547d\u4e2d\u3002\n\n*\u5e73\u5747* 200 \u6b21\u4ea4\u6613\u5199\u5165\u6bcf\u79d2\uff08\u5cf0\u503c\u65f6\u66f4\u9ad8\uff09\u5bf9\u4e8e\u5355\u4e2a **SQL \u5199\u5165\u4e3b-\u4ece\u670d\u52a1** \u6765\u8bf4\u53ef\u80fd\u662f\u68d8\u624b\u7684\u3002\u6211\u4eec\u53ef\u80fd\u9700\u8981\u8003\u8651\u5176\u5b83\u7684 SQL \u6027\u80fd\u62d3\u5c55\u6280\u672f\uff1a\n\n* [\u8054\u5408](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u8054\u5408)\n* [\u5206\u7247](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5206\u7247)\n* [\u975e\u89c4\u8303\u5316](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u975e\u89c4\u8303\u5316)\n* [SQL \u8c03\u4f18](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#sql-\u8c03\u4f18)\n\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u8003\u8651\u5c06\u4e00\u4e9b\u6570\u636e\u79fb\u81f3 **NoSQL \u6570\u636e\u5e93**\u3002\n\n## \u5176\u5b83\u8981\u70b9\n\n> \u662f\u5426\u6df1\u5165\u8fd9\u4e9b\u989d\u5916\u7684\u4e3b\u9898\uff0c\u53d6\u51b3\u4e8e\u4f60\u7684\u95ee\u9898\u8303\u56f4\u548c\u5269\u4e0b\u7684\u65f6\u95f4\u3002\n\n#### NoSQL\n\n* [\u952e-\u503c\u5b58\u50a8](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u952e-\u503c\u5b58\u50a8)\n* [\u6587\u6863\u7c7b\u578b\u5b58\u50a8](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u6587\u6863\u7c7b\u578b\u5b58\u50a8)\n* [\u5217\u578b\u5b58\u50a8](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5217\u578b\u5b58\u50a8)\n* [\u56fe\u6570\u636e\u5e93](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u56fe\u6570\u636e\u5e93)\n* [SQL vs NoSQL](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#sql-\u8fd8\u662f-nosql)\n\n### \u7f13\u5b58\n\n* \u5728\u54ea\u7f13\u5b58\n    * [\u5ba2\u6237\u7aef\u7f13\u5b58](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5ba2\u6237\u7aef\u7f13\u5b58)\n    * [CDN \u7f13\u5b58](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#cdn-\u7f13\u5b58)\n    * [Web \u670d\u52a1\u5668\u7f13\u5b58](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#web-\u670d\u52a1\u5668\u7f13\u5b58)\n    * [\u6570\u636e\u5e93\u7f13\u5b58](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u6570\u636e\u5e93\u7f13\u5b58)\n    * [\u5e94\u7528\u7f13\u5b58](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5e94\u7528\u7f13\u5b58)\n* \u4ec0\u4e48\u9700\u8981\u7f13\u5b58\n    * [\u6570\u636e\u5e93\u67e5\u8be2\u7ea7\u522b\u7684\u7f13\u5b58](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u6570\u636e\u5e93\u67e5\u8be2\u7ea7\u522b\u7684\u7f13\u5b58)\n    * [\u5bf9\u8c61\u7ea7\u522b\u7684\u7f13\u5b58](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5bf9\u8c61\u7ea7\u522b\u7684\u7f13\u5b58)\n* \u4f55\u65f6\u66f4\u65b0\u7f13\u5b58\n    * [\u7f13\u5b58\u6a21\u5f0f](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u7f13\u5b58\u6a21\u5f0f)\n    * [\u76f4\u5199\u6a21\u5f0f](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u76f4\u5199\u6a21\u5f0f)\n    * [\u56de\u5199\u6a21\u5f0f](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u56de\u5199\u6a21\u5f0f)\n    * [\u5237\u65b0](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5237\u65b0)\n\n### \u5f02\u6b65\u4e0e\u5fae\u670d\u52a1\n\n* [\u6d88\u606f\u961f\u5217](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u6d88\u606f\u961f\u5217)\n* [\u4efb\u52a1\u961f\u5217](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u4efb\u52a1\u961f\u5217)\n* [\u80cc\u538b](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u80cc\u538b)\n* [\u5fae\u670d\u52a1](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5fae\u670d\u52a1)\n\n### \u901a\u4fe1\n\n* \u53ef\u6743\u8861\u9009\u62e9\u7684\u65b9\u6848\uff1a\n    * \u4e0e\u5ba2\u6237\u7aef\u7684\u5916\u90e8\u901a\u4fe1 - [\u4f7f\u7528 REST \u4f5c\u4e3a HTTP API](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u8868\u8ff0\u6027\u72b6\u6001\u8f6c\u79fbrest)\n    * \u670d\u52a1\u5668\u5185\u90e8\u901a\u4fe1 - [RPC](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\u534f\u8baerpc)\n* [\u670d\u52a1\u53d1\u73b0](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u670d\u52a1\u53d1\u73b0)\n\n### \u5b89\u5168\u6027\n\n\u8bf7\u53c2\u9605[\u300c\u5b89\u5168\u300d](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5b89\u5168)\u4e00\u7ae0\u3002\n\n### \u5ef6\u8fdf\u6570\u503c\n\n\u8bf7\u53c2\u9605[\u300c\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u77e5\u9053\u7684\u5ef6\u8fdf\u6570\u300d](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u77e5\u9053\u7684\u5ef6\u8fdf\u6570)\u3002\n\n### \u6301\u7eed\u63a2\u8ba8\n\n* \u6301\u7eed\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u5e76\u76d1\u63a7\u4f60\u7684\u7cfb\u7edf\uff0c\u4ee5\u89e3\u51b3\u4ed6\u4eec\u63d0\u51fa\u7684\u74f6\u9888\u95ee\u9898\u3002\n* \u67b6\u6784\u62d3\u5c55\u662f\u4e00\u4e2a\u8fed\u4ee3\u7684\u8fc7\u7a0b\u3002\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "solutions/system_design/mint/README.md", "size": 20615, "license": "NOASSERTION", "content_sha": "1ec31674db097dc0352a3050674f6933b768b4e4", "findings": [], "content": "# Design Mint.com\n\n*Note: This document links directly to relevant areas found in the [system design topics](https://github.com/donnemartin/system-design-primer#index-of-system-design-topics) to avoid duplication.  Refer to the linked content for general talking points, tradeoffs, and alternatives.*\n\n## Step 1: Outline use cases and constraints\n\n> Gather requirements and scope the problem.\n> Ask questions to clarify use cases and constraints.\n> Discuss assumptions.\n\nWithout an interviewer to address clarifying questions, we'll define some use cases and constraints.\n\n### Use cases\n\n#### We'll scope the problem to handle only the following use cases\n\n* **User** connects to a financial account\n* **Service** extracts transactions from the account\n    * Updates daily\n    * Categorizes transactions\n        * Allows manual category override by the user\n        * No automatic re-categorization\n    * Analyzes monthly spending, by category\n* **Service** recommends a budget\n    * Allows users to manually set a budget\n    * Sends notifications when approaching or exceeding budget\n* **Service** has high availability\n\n#### Out of scope\n\n* **Service** performs additional logging and analytics\n\n### Constraints and assumptions\n\n#### State assumptions\n\n* Traffic is not evenly distributed\n* Automatic daily update of accounts applies only to users active in the past 30 days\n* Adding or removing financial accounts is relatively rare\n* Budget notifications don't need to be instant\n* 10 million users\n    * 10 budget categories per user = 100 million budget items\n    * Example categories:\n        * Housing = $1,000\n        * Food = $200\n        * Gas = $100\n    * Sellers are used to determine transaction category\n        * 50,000 sellers\n* 30 million financial accounts\n* 5 billion transactions per month\n* 500 million read requests per month\n* 10:1 write to read ratio\n    * Write-heavy, users make transactions daily, but few visit the site daily\n\n#### Calculate usage\n\n**Clarify with your interviewer if you should run back-of-the-envelope usage calculations.**\n\n* Size per transaction:\n    * `user_id` - 8 bytes\n    * `created_at` - 5 bytes\n    * `seller` - 32 bytes\n    * `amount` - 5 bytes\n    * Total: ~50 bytes\n* 250 GB of new transaction content per month\n    * 50 bytes per transaction * 5 billion transactions per month\n    * 9 TB of new transaction content in 3 years\n    * Assume most are new transactions instead of updates to existing ones\n* 2,000 transactions per second on average\n* 200 read requests per second on average\n\nHandy conversion guide:\n\n* 2.5 million seconds per month\n* 1 request per second = 2.5 million requests per month\n* 40 requests per second = 100 million requests per month\n* 400 requests per second = 1 billion requests per month\n\n## Step 2: Create a high level design\n\n> Outline a high level design with all important components.\n\n![Imgur](http://i.imgur.com/E8klrBh.png)\n\n## Step 3: Design core components\n\n> Dive into details for each core component.\n\n### Use case: User connects to a financial account\n\nWe could store info on the 10 million users in a [relational database](https://github.com/donnemartin/system-design-primer#relational-database-management-system-rdbms).  We should discuss the [use cases and tradeoffs between choosing SQL or NoSQL](https://github.com/donnemartin/system-design-primer#sql-or-nosql).\n\n* The **Client** sends a request to the **Web Server**, running as a [reverse proxy](https://github.com/donnemartin/system-design-primer#reverse-proxy-web-server)\n* The **Web Server** forwards the request to the **Accounts API** server\n* The **Accounts API** server updates the **SQL Database** `accounts` table with the newly entered account info\n\n**Clarify with your interviewer how much code you are expected to write**.\n\nThe `accounts` table could have the following structure:\n\n```\nid int NOT NULL AUTO_INCREMENT\ncreated_at datetime NOT NULL\nlast_update datetime NOT NULL\naccount_url varchar(255) NOT NULL\naccount_login varchar(32) NOT NULL\naccount_password_hash char(64) NOT NULL\nuser_id int NOT NULL\nPRIMARY KEY(id)\nFOREIGN KEY(user_id) REFERENCES users(id)\n```\n\nWe'll create an [index](https://github.com/donnemartin/system-design-primer#use-good-indices) on `id`, `user_id `, and `created_at` to speed up lookups (log-time instead of scanning the entire table) and to keep the data in memory.  Reading 1 MB sequentially from memory takes about 250 microseconds, while reading from SSD takes 4x and from disk takes 80x longer.<sup><a href=https://github.com/donnemartin/system-design-primer#latency-numbers-every-programmer-should-know>1</a></sup>\n\nWe'll use a public [**REST API**](https://github.com/donnemartin/system-design-primer#representational-state-transfer-rest):\n\n```\n$ curl -X POST --data '{ \"user_id\": \"foo\", \"account_url\": \"bar\", \\\n    \"account_login\": \"baz\", \"account_password\": \"qux\" }' \\\n    https://mint.com/api/v1/account\n```\n\nFor internal communications, we could use [Remote Procedure Calls](https://github.com/donnemartin/system-design-primer#remote-procedure-call-rpc).\n\nNext, the service extracts transactions from the account.\n\n### Use case: Service extracts transactions from the account\n\nWe'll want to extract information from an account in these cases:\n\n* The user first links the account\n* The user manually refreshes the account\n* Automatically each day for users who have been active in the past 30 days\n\nData flow:\n\n* The **Client** sends a request to the **Web Server**\n* The **Web Server** forwards the request to the **Accounts API** server\n* The **Accounts API** server places a job on a **Queue** such as [Amazon SQS](https://aws.amazon.com/sqs/) or [RabbitMQ](https://www.rabbitmq.com/)\n    * Extracting transactions could take awhile, we'd probably want to do this [asynchronously with a queue](https://github.com/donnemartin/system-design-primer#asynchronism), although this introduces additional complexity\n* The **Transaction Extraction Service** does the following:\n    * Pulls from the **Queue** and extracts transactions for the given account from the financial institution, storing the results as raw log files in the **Object Store**\n    * Uses the **Category Service** to categorize each transaction\n    * Uses the **Budget Service** to calculate aggregate monthly spending by category\n        * The **Budget Service** uses the **Notification Service** to let users know if they are nearing or have exceeded their budget\n    * Updates the **SQL Database** `transactions` table with categorized transactions\n    * Updates the **SQL Database** `monthly_spending` table with aggregate monthly spending by category\n    * Notifies the user the transactions have completed through the **Notification Service**:\n        * Uses a **Queue** (not pictured) to asynchronously send out notifications\n\nThe `transactions` table could have the following structure:\n\n```\nid int NOT NULL AUTO_INCREMENT\ncreated_at datetime NOT NULL\nseller varchar(32) NOT NULL\namount decimal NOT NULL\nuser_id int NOT NULL\nPRIMARY KEY(id)\nFOREIGN KEY(user_id) REFERENCES users(id)\n```\n\nWe'll create an [index](https://github.com/donnemartin/system-design-primer#use-good-indices) on `id`, `user_id `, and `created_at`.\n\nThe `monthly_spending` table could have the following structure:\n\n```\nid int NOT NULL AUTO_INCREMENT\nmonth_year date NOT NULL\ncategory varchar(32)\namount decimal NOT NULL\nuser_id int NOT NULL\nPRIMARY KEY(id)\nFOREIGN KEY(user_id) REFERENCES users(id)\n```\n\nWe'll create an [index](https://github.com/donnemartin/system-design-primer#use-good-indices) on `id` and `user_id `.\n\n#### Category service\n\nFor the **Category Service**, we can seed a seller-to-category dictionary with the most popular sellers.  If we estimate 50,000 sellers and estimate each entry to take less than 255 bytes, the dictionary would only take about 12 MB of memory.\n\n**Clarify with your interviewer how much code you are expected to write**.\n\n```python\nclass DefaultCategories(Enum):\n\n    HOUSING = 0\n    FOOD = 1\n    GAS = 2\n    SHOPPING = 3\n    ...\n\nseller_category_map = {}\nseller_category_map['Exxon'] = DefaultCategories.GAS\nseller_category_map['Target'] = DefaultCategories.SHOPPING\n...\n```\n\nFor sellers not initially seeded in the map, we could use a crowdsourcing effort by evaluating the manual category overrides our users provide.  We could use a heap to quickly lookup the top manual override per seller in O(1) time.\n\n```python\nclass Categorizer(object):\n\n    def __init__(self, seller_category_map, seller_category_crowd_overrides_map):\n        self.seller_category_map = seller_category_map\n        self.seller_category_crowd_overrides_map = \\\n            seller_category_crowd_overrides_map\n\n    def categorize(self, transaction):\n        if transaction.seller in self.seller_category_map:\n            return self.seller_category_map[transaction.seller]\n        elif transaction.seller in self.seller_category_crowd_overrides_map:\n            self.seller_category_map[transaction.seller] = \\\n                self.seller_category_crowd_overrides_map[transaction.seller].peek_min()\n            return self.seller_category_map[transaction.seller]\n        return None\n```\n\nTransaction implementation:\n\n```python\nclass Transaction(object):\n\n    def __init__(self, created_at, seller, amount):\n        self.created_at = created_at\n        self.seller = seller\n        self.amount = amount\n```\n\n### Use case: Service recommends a budget\n\nTo start, we could use a generic budget template that allocates category amounts based on income tiers.  Using this approach, we would not have to store the 100 million budget items identified in the constraints, only those that the user overrides.  If a user overrides a budget category, which we could store the override in the `TABLE budget_overrides`.\n\n```python\nclass Budget(object):\n\n    def __init__(self, income):\n        self.income = income\n        self.categories_to_budget_map = self.create_budget_template()\n\n    def create_budget_template(self):\n        return {\n            DefaultCategories.HOUSING: self.income * .4,\n            DefaultCategories.FOOD: self.income * .2,\n            DefaultCategories.GAS: self.income * .1,\n            DefaultCategories.SHOPPING: self.income * .2,\n            ...\n        }\n\n    def override_category_budget(self, category, amount):\n        self.categories_to_budget_map[category] = amount\n```\n\nFor the **Budget Service**, we can potentially run SQL queries on the `transactions` table to generate the `monthly_spending` aggregate table.  The `monthly_spending` table would likely have much fewer rows than the total 5 billion transactions, since users typically have many transactions per month.\n\nAs an alternative, we can run **MapReduce** jobs on the raw transaction files to:\n\n* Categorize each transaction\n* Generate aggregate monthly spending by category\n\nRunning analyses on the transaction files could significantly reduce the load on the database.\n\nWe could call the **Budget Service** to re-run the analysis if the user updates a category.\n\n**Clarify with your interviewer how much code you are expected to write**.\n\nSample log file format, tab delimited:\n\n```\nuser_id   timestamp   seller  amount\n```\n\n**MapReduce** implementation:\n\n```python\nclass SpendingByCategory(MRJob):\n\n    def __init__(self, categorizer):\n        self.categorizer = categorizer\n        self.current_year_month = calc_current_year_month()\n        ...\n\n    def calc_current_year_month(self):\n        \"\"\"Return the current year and month.\"\"\"\n        ...\n\n    def extract_year_month(self, timestamp):\n        \"\"\"Return the year and month portions of the timestamp.\"\"\"\n        ...\n\n    def handle_budget_notifications(self, key, total):\n        \"\"\"Call notification API if nearing or exceeded budget.\"\"\"\n        ...\n\n    def mapper(self, _, line):\n        \"\"\"Parse each log line, extract and transform relevant lines.\n\n        Argument line will be of the form:\n\n        user_id   timestamp   seller  amount\n\n        Using the categorizer to convert seller to category,\n        emit key value pairs of the form:\n\n        (user_id, 2016-01, shopping), 25\n        (user_id, 2016-01, shopping), 100\n        (user_id, 2016-01, gas), 50\n        \"\"\"\n        user_id, timestamp, seller, amount = line.split('\\t')\n        category = self.categorizer.categorize(seller)\n        period = self.extract_year_month(timestamp)\n        if period == self.current_year_month:\n            yield (user_id, period, category), amount\n\n    def reducer(self, key, value):\n        \"\"\"Sum values for each key.\n\n        (user_id, 2016-01, shopping), 125\n        (user_id, 2016-01, gas), 50\n        \"\"\"\n        total = sum(values)\n        yield key, sum(values)\n```\n\n## Step 4: Scale the design\n\n> Identify and address bottlenecks, given the constraints.\n\n![Imgur](http://i.imgur.com/V5q57vU.png)\n\n**Important: Do not simply jump right into the final design from the initial design!**\n\nState you would 1) **Benchmark/Load Test**, 2) **Profile** for bottlenecks 3) address bottlenecks while evaluating alternatives and trade-offs, and 4) repeat.  See [Design a system that scales to millions of users on AWS](../scaling_aws/README.md) as a sample on how to iteratively scale the initial design.\n\nIt's important to discuss what bottlenecks you might encounter with the initial design and how you might address each of them.  For example, what issues are addressed by adding a **Load Balancer** with multiple **Web Servers**?  **CDN**?  **Master-Slave Replicas**?  What are the alternatives and **Trade-Offs** for each?\n\nWe'll introduce some components to complete the design and to address scalability issues.  Internal load balancers are not shown to reduce clutter.\n\n*To avoid repeating discussions*, refer to the following [system design topics](https://github.com/donnemartin/system-design-primer#index-of-system-design-topics) for main talking points, tradeoffs, and alternatives:\n\n* [DNS](https://github.com/donnemartin/system-design-primer#domain-name-system)\n* [CDN](https://github.com/donnemartin/system-design-primer#content-delivery-network)\n* [Load balancer](https://github.com/donnemartin/system-design-primer#load-balancer)\n* [Horizontal scaling](https://github.com/donnemartin/system-design-primer#horizontal-scaling)\n* [Web server (reverse proxy)](https://github.com/donnemartin/system-design-primer#reverse-proxy-web-server)\n* [API server (application layer)](https://github.com/donnemartin/system-design-primer#application-layer)\n* [Cache](https://github.com/donnemartin/system-design-primer#cache)\n* [Relational database management system (RDBMS)](https://github.com/donnemartin/system-design-primer#relational-database-management-system-rdbms)\n* [SQL write master-slave failover](https://github.com/donnemartin/system-design-primer#fail-over)\n* [Master-slave replication](https://github.com/donnemartin/system-design-primer#master-slave-replication)\n* [Asynchronism](https://github.com/donnemartin/system-design-primer#asynchronism)\n* [Consistency patterns](https://github.com/donnemartin/system-design-primer#consistency-patterns)\n* [Availability patterns](https://github.com/donnemartin/system-design-primer#availability-patterns)\n\nWe'll add an additional use case: **User** accesses summaries and transactions.\n\nUser sessions, aggregate stats by category, and recent transactions could be placed in a **Memory Cache** such as Redis or Memcached.\n\n* The **Client** sends a read request to the **Web Server**\n* The **Web Server** forwards the request to the **Read API** server\n    * Static content can be served from the **Object Store** such as S3, which is cached on the **CDN**\n* The **Read API** server does the following:\n    * Checks the **Memory Cache** for the content\n        * If the url is in the **Memory Cache**, returns the cached contents\n        * Else\n            * If the url is in the **SQL Database**, fetches the contents\n                * Updates the **Memory Cache** with the contents\n\nRefer to [When to update the cache](https://github.com/donnemartin/system-design-primer#when-to-update-the-cache) for tradeoffs and alternatives.  The approach above describes [cache-aside](https://github.com/donnemartin/system-design-primer#cache-aside).\n\nInstead of keeping the `monthly_spending` aggregate table in the **SQL Database**, we could create a separate **Analytics Database** using a data warehousing solution such as Amazon Redshift or Google BigQuery.\n\nWe might only want to store a month of `transactions` data in the database, while storing the rest in a data warehouse or in an **Object Store**.  An **Object Store** such as Amazon S3 can comfortably handle the constraint of 250 GB of new content per month.\n\nTo address the 200 *average* read requests per second (higher at peak), traffic for popular content should be handled by the **Memory Cache** instead of the database.  The **Memory Cache** is also useful for handling the unevenly distributed traffic and traffic spikes.  The **SQL Read Replicas** should be able to handle the cache misses, as long as the replicas are not bogged down with replicating writes.\n\n2,000 *average* transaction writes per second (higher at peak) might be tough for a single **SQL Write Master-Slave**.  We might need to employ additional SQL scaling patterns:\n\n* [Federation](https://github.com/donnemartin/system-design-primer#federation)\n* [Sharding](https://github.com/donnemartin/system-design-primer#sharding)\n* [Denormalization](https://github.com/donnemartin/system-design-primer#denormalization)\n* [SQL Tuning](https://github.com/donnemartin/system-design-primer#sql-tuning)\n\nWe should also consider moving some data to a **NoSQL Database**.\n\n## Additional talking points\n\n> Additional topics to dive into, depending on the problem scope and time remaining.\n\n#### NoSQL\n\n* [Key-value store](https://github.com/donnemartin/system-design-primer#key-value-store)\n* [Document store](https://github.com/donnemartin/system-design-primer#document-store)\n* [Wide column store](https://github.com/donnemartin/system-design-primer#wide-column-store)\n* [Graph database](https://github.com/donnemartin/system-design-primer#graph-database)\n* [SQL vs NoSQL](https://github.com/donnemartin/system-design-primer#sql-or-nosql)\n\n### Caching\n\n* Where to cache\n    * [Client caching](https://github.com/donnemartin/system-design-primer#client-caching)\n    * [CDN caching](https://github.com/donnemartin/system-design-primer#cdn-caching)\n    * [Web server caching](https://github.com/donnemartin/system-design-primer#web-server-caching)\n    * [Database caching](https://github.com/donnemartin/system-design-primer#database-caching)\n    * [Application caching](https://github.com/donnemartin/system-design-primer#application-caching)\n* What to cache\n    * [Caching at the database query level](https://github.com/donnemartin/system-design-primer#caching-at-the-database-query-level)\n    * [Caching at the object level](https://github.com/donnemartin/system-design-primer#caching-at-the-object-level)\n* When to update the cache\n    * [Cache-aside](https://github.com/donnemartin/system-design-primer#cache-aside)\n    * [Write-through](https://github.com/donnemartin/system-design-primer#write-through)\n    * [Write-behind (write-back)](https://github.com/donnemartin/system-design-primer#write-behind-write-back)\n    * [Refresh ahead](https://github.com/donnemartin/system-design-primer#refresh-ahead)\n\n### Asynchronism and microservices\n\n* [Message queues](https://github.com/donnemartin/system-design-primer#message-queues)\n* [Task queues](https://github.com/donnemartin/system-design-primer#task-queues)\n* [Back pressure](https://github.com/donnemartin/system-design-primer#back-pressure)\n* [Microservices](https://github.com/donnemartin/system-design-primer#microservices)\n\n### Communications\n\n* Discuss tradeoffs:\n    * External communication with clients - [HTTP APIs following REST](https://github.com/donnemartin/system-design-primer#representational-state-transfer-rest)\n    * Internal communications - [RPC](https://github.com/donnemartin/system-design-primer#remote-procedure-call-rpc)\n* [Service discovery](https://github.com/donnemartin/system-design-primer#service-discovery)\n\n### Security\n\nRefer to the [security section](https://github.com/donnemartin/system-design-primer#security).\n\n### Latency numbers\n\nSee [Latency numbers every programmer should know](https://github.com/donnemartin/system-design-primer#latency-numbers-every-programmer-should-know).\n\n### Ongoing\n\n* Continue benchmarking and monitoring your system to address bottlenecks as they come up\n* Scaling is an iterative process\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "solutions/system_design/mint/mint_mapreduce.py", "size": 1475, "license": "NOASSERTION", "content_sha": "e3554243018f58e79a33263376d7213f382c27f4", "findings": [], "content": "# -*- coding: utf-8 -*-\n\nfrom mrjob.job import MRJob\n\n\nclass SpendingByCategory(MRJob):\n\n    def __init__(self, categorizer):\n        self.categorizer = categorizer\n        ...\n\n    def current_year_month(self):\n        \"\"\"Return the current year and month.\"\"\"\n        ...\n\n    def extract_year_month(self, timestamp):\n        \"\"\"Return the year and month portions of the timestamp.\"\"\"\n        ...\n\n    def handle_budget_notifications(self, key, total):\n        \"\"\"Call notification API if nearing or exceeded budget.\"\"\"\n        ...\n\n    def mapper(self, _, line):\n        \"\"\"Parse each log line, extract and transform relevant lines.\n\n        Emit key value pairs of the form:\n\n        (2016-01, shopping), 25\n        (2016-01, shopping), 100\n        (2016-01, gas), 50\n        \"\"\"\n        timestamp, category, amount = line.split('\\t')\n        period = self. extract_year_month(timestamp)\n        if period == self.current_year_month():\n            yield (period, category), amount\n\n    def reducer(self, key, values):\n        \"\"\"Sum values for each key.\n\n        (2016-01, shopping), 125\n        (2016-01, gas), 50\n        \"\"\"\n        total = sum(values)\n        self.handle_budget_notifications(key, total)\n        yield key, sum(values)\n\n    def steps(self):\n        \"\"\"Run the map and reduce steps.\"\"\"\n        return [\n            self.mr(mapper=self.mapper,\n                    reducer=self.reducer)\n        ]\n\n\nif __name__ == '__main__':\n    SpendingByCategory.run()\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "solutions/system_design/mint/mint_snippets.py", "size": 1413, "license": "NOASSERTION", "content_sha": "cc5d228b2a4073f107799254d52b6b309c3b5212", "findings": [], "content": "# -*- coding: utf-8 -*-\n\nfrom enum import Enum\n\n\nclass DefaultCategories(Enum):\n\n    HOUSING = 0\n    FOOD = 1\n    GAS = 2\n    SHOPPING = 3\n    # ...\n\n\nseller_category_map = {}\nseller_category_map['Exxon'] = DefaultCategories.GAS\nseller_category_map['Target'] = DefaultCategories.SHOPPING\n\n\nclass Categorizer(object):\n\n    def __init__(self, seller_category_map, seller_category_overrides_map):\n        self.seller_category_map = seller_category_map\n        self.seller_category_overrides_map = seller_category_overrides_map\n\n    def categorize(self, transaction):\n        if transaction.seller in self.seller_category_map:\n            return self.seller_category_map[transaction.seller]\n        if transaction.seller in self.seller_category_overrides_map:\n            seller_category_map[transaction.seller] = \\\n                self.manual_overrides[transaction.seller].peek_min()\n            return self.seller_category_map[transaction.seller]\n        return None\n\n\nclass Transaction(object):\n\n    def __init__(self, timestamp, seller, amount):\n        self.timestamp = timestamp\n        self.seller = seller\n        self.amount = amount\n\n\nclass Budget(object):\n\n    def __init__(self, template_categories_to_budget_map):\n        self.categories_to_budget_map = template_categories_to_budget_map\n\n    def override_category_budget(self, category, amount):\n        self.categories_to_budget_map[category] = amount\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "solutions/system_design/pastebin/README-zh-Hans.md", "size": 16490, "license": "NOASSERTION", "content_sha": "d2946e970903b381d30c1a2a264b1f37f297f327", "findings": [], "content": "# \u8bbe\u8ba1 Pastebin.com (\u6216\u8005 Bit.ly)\n\n**\u6ce8\u610f: \u4e3a\u4e86\u907f\u514d\u91cd\u590d\uff0c\u5f53\u524d\u6587\u6863\u4f1a\u76f4\u63a5\u94fe\u63a5\u5230[\u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898\u7684\u7d22\u5f15)\u7684\u76f8\u5173\u533a\u57df\uff0c\u8bf7\u53c2\u8003\u94fe\u63a5\u5185\u5bb9\u4ee5\u83b7\u5f97\u7efc\u5408\u7684\u8ba8\u8bba\u70b9\u3001\u6743\u8861\u548c\u66ff\u4ee3\u65b9\u6848\u3002**\n\n**\u8bbe\u8ba1 Bit.ly** - \u662f\u4e00\u4e2a\u7c7b\u4f3c\u7684\u95ee\u9898\uff0c\u533a\u522b\u662f pastebin \u9700\u8981\u5b58\u50a8\u7684\u662f paste \u7684\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u539f\u59cb\u7684\u672a\u77ed\u5316\u7684 url\u3002\n\n## \u7b2c\u4e00\u6b65\uff1a\u6982\u8ff0\u7528\u4f8b\u548c\u7ea6\u675f\n\n> \u6536\u96c6\u8fd9\u4e2a\u95ee\u9898\u7684\u9700\u6c42\u548c\u8303\u7574\u3002\n> \u95ee\u76f8\u5173\u95ee\u9898\u6765\u660e\u786e\u7528\u4f8b\u548c\u7ea6\u675f\u3002\n> \u8ba8\u8bba\u4e00\u4e9b\u5047\u8bbe\u3002\n\n\u56e0\u4e3a\u6ca1\u6709\u9762\u8bd5\u5b98\u6765\u660e\u786e\u8fd9\u4e9b\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u81ea\u5df1\u5c06\u5b9a\u4e49\u4e00\u4e9b\u7528\u4f8b\u548c\u7ea6\u675f\u3002\n\n### \u7528\u4f8b\n\n#### \u6211\u4eec\u5c06\u95ee\u9898\u7684\u8303\u7574\u9650\u5b9a\u5728\u5982\u4e0b\u7528\u4f8b\n\n* **\u7528\u6237** \u8f93\u5165\u4e00\u6bb5\u6587\u672c\uff0c\u7136\u540e\u5f97\u5230\u4e00\u4e2a\u968f\u673a\u751f\u6210\u7684\u94fe\u63a5\n  * \u8fc7\u671f\u8bbe\u7f6e\n    * \u9ed8\u8ba4\u7684\u8bbe\u7f6e\u662f\u4e0d\u4f1a\u8fc7\u671f\u7684\n    * \u53ef\u4ee5\u9009\u62e9\u8bbe\u7f6e\u4e00\u4e2a\u8fc7\u671f\u7684\u65f6\u95f4\n* **\u7528\u6237** \u8f93\u5165\u4e00\u4e2a paste \u7684 url \u540e\uff0c\u53ef\u4ee5\u770b\u5230\u5b83\u5b58\u50a8\u7684\u5185\u5bb9\n* **\u7528\u6237** \u662f\u533f\u540d\u7684\n* **Service** \u8ddf\u8e2a\u9875\u9762\u5206\u6790\n  * \u4e00\u4e2a\u6708\u7684\u8bbf\u95ee\u7edf\u8ba1\n* **Service** \u5220\u9664\u8fc7\u671f\u7684 pastes\n* **Service** \u9700\u8981\u9ad8\u53ef\u7528\n\n#### \u8d85\u51fa\u8303\u7574\u7684\u7528\u4f8b\n\n* **\u7528\u6237** \u53ef\u4ee5\u6ce8\u518c\u4e00\u4e2a\u8d26\u6237\n  * **\u7528\u6237** \u901a\u8fc7\u9a8c\u8bc1\u90ae\u7bb1\n* **\u7528\u6237** \u53ef\u4ee5\u7528\u6ce8\u518c\u7684\u8d26\u6237\u767b\u5f55\n  * **\u7528\u6237** \u53ef\u4ee5\u7f16\u8f91\u6587\u6863\n* **\u7528\u6237** \u53ef\u4ee5\u8bbe\u7f6e\u53ef\u89c1\u6027\n* **\u7528\u6237** \u53ef\u4ee5\u8bbe\u7f6e\u77ed\u94fe\u63a5\n\n### \u7ea6\u675f\u548c\u5047\u8bbe\n\n#### \u72b6\u6001\u5047\u8bbe\n\n* \u8bbf\u95ee\u6d41\u91cf\u4e0d\u662f\u5747\u5300\u5206\u5e03\u7684\n* \u6253\u5f00\u4e00\u4e2a\u77ed\u94fe\u63a5\u5e94\u8be5\u662f\u5f88\u5feb\u7684\n* pastes \u53ea\u80fd\u662f\u6587\u672c\n* \u9875\u9762\u8bbf\u95ee\u5206\u6790\u6570\u636e\u53ef\u4ee5\u4e0d\u7528\u5b9e\u65f6\n* \u4e00\u5343\u4e07\u7684\u7528\u6237\u91cf\n* \u6bcf\u4e2a\u6708\u4e00\u5343\u4e07\u7684 paste \u5199\u5165\u91cf\n* \u6bcf\u4e2a\u6708\u4e00\u4ebf\u7684 paste \u8bfb\u53d6\u91cf\n* \u8bfb\u5199\u6bd4\u4f8b\u5728 10:1\n\n#### \u8ba1\u7b97\u4f7f\u7528\n\n**\u5411\u9762\u8bd5\u5b98\u8bf4\u660e\u4f60\u662f\u5426\u5e94\u8be5\u7c97\u7565\u8ba1\u7b97\u4e00\u4e0b\u4f7f\u7528\u60c5\u51b5\u3002**\n\n* \u6bcf\u4e2a paste \u7684\u5927\u5c0f\n  * \u6bcf\u4e00\u4e2a paste 1 KB\n  * `shortlink` - 7 bytes\n  * `expiration_length_in_minutes` - 4 bytes\n  * `created_at` - 5 bytes\n  * `paste_path` - 255 bytes\n  * \u603b\u5171 = ~1.27 KB\n* \u6bcf\u4e2a\u6708\u65b0\u7684 paste \u5185\u5bb9\u5728 12.7GB\n  * (1.27 * 10000000)KB / \u6708\u7684 paste\n  * \u4e09\u5e74\u5185\u5c06\u8fd1 450GB \u7684\u65b0 paste \u5185\u5bb9\n  * \u4e09\u5e74\u5185 3.6 \u4ebf\u77ed\u94fe\u63a5\n  * \u5047\u8bbe\u5927\u90e8\u5206\u90fd\u662f\u65b0\u7684 paste\uff0c\u800c\u4e0d\u662f\u9700\u8981\u66f4\u65b0\u5df2\u5b58\u5728\u7684 paste\n* \u5e73\u5747 4paste/s \u7684\u5199\u5165\u901f\u5ea6\n* \u5e73\u5747 40paste/s \u7684\u8bfb\u53d6\u901f\u5ea6\n\n\u7b80\u5355\u7684\u8f6c\u6362\u6307\u5357:\n\n* 2.5 \u767e\u4e07 req/s\n* 1 req/s = 2.5 \u767e\u4e07 req/m\n* 40 req/s = 1 \u4ebf req/m\n* 400 req/s = 10 \u4ebf req/m\n\n## \u7b2c\u4e8c\u6b65\uff1a\u521b\u5efa\u4e00\u4e2a\u9ad8\u5c42\u6b21\u8bbe\u8ba1\n\n> \u6982\u8ff0\u4e00\u4e2a\u5305\u62ec\u6240\u6709\u91cd\u8981\u7684\u7ec4\u4ef6\u7684\u9ad8\u5c42\u6b21\u8bbe\u8ba1\n\n![Imgur](http://i.imgur.com/BKsBnmG.png)\n\n## \u7b2c\u4e09\u6b65\uff1a\u8bbe\u8ba1\u6838\u5fc3\u7ec4\u4ef6\n\n> \u6df1\u5165\u6bcf\u4e00\u4e2a\u6838\u5fc3\u7ec4\u4ef6\u7684\u7ec6\u8282\n\n### \u7528\u4f8b\uff1a\u7528\u6237\u8f93\u5165\u4e00\u6bb5\u6587\u672c\uff0c\u7136\u540e\u5f97\u5230\u4e00\u4e2a\u968f\u673a\u751f\u6210\u7684\u94fe\u63a5\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a [\u5173\u7cfb\u578b\u6570\u636e\u5e93](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edfrdbms)\u4f5c\u4e3a\u4e00\u4e2a\u5927\u7684\u54c8\u5e0c\u8868\uff0c\u7528\u6765\u628a\u751f\u6210\u7684 url \u6620\u5c04\u5230\u4e00\u4e2a\u5305\u542b paste \u6587\u4ef6\u7684\u6587\u4ef6\u670d\u52a1\u5668\u548c\u8def\u5f84\u4e0a\u3002\n\n\u4e3a\u4e86\u907f\u514d\u6258\u7ba1\u4e00\u4e2a\u6587\u4ef6\u670d\u52a1\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6258\u7ba1\u7684**\u5bf9\u8c61\u5b58\u50a8**\uff0c\u6bd4\u5982 Amazon \u7684 S3 \u6216\u8005[NoSQL \u6587\u6863\u7c7b\u578b\u5b58\u50a8](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u6587\u6863\u7c7b\u578b\u5b58\u50a8)\u3002\n\n\u4f5c\u4e3a\u4e00\u4e2a\u5927\u7684\u54c8\u5e0c\u8868\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u6211\u4eec\u53ef\u4ee5\u7528[NoSQL \u952e\u503c\u5b58\u50a8](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u952e-\u503c\u5b58\u50a8)\u3002\u6211\u4eec\u9700\u8981\u8ba8\u8bba[\u9009\u62e9 SQL \u6216 NoSQL \u4e4b\u95f4\u7684\u6743\u8861](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#sql-\u8fd8\u662f-nosql)\u3002\u4e0b\u9762\u7684\u8ba8\u8bba\u662f\u4f7f\u7528\u5173\u7cfb\u578b\u6570\u636e\u5e93\u65b9\u6cd5\u3002\n\n* **\u5ba2\u6237\u7aef** \u53d1\u9001\u4e00\u4e2a\u521b\u5efa paste \u7684\u8bf7\u6c42\u5230\u4f5c\u4e3a\u4e00\u4e2a[\u53cd\u5411\u4ee3\u7406](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u53cd\u5411\u4ee3\u7406web-\u670d\u52a1\u5668)\u542f\u52a8\u7684 **Web \u670d\u52a1\u5668**\u3002\n* **Web \u670d\u52a1\u5668** \u8f6c\u53d1\u8bf7\u6c42\u7ed9 **\u5199\u63a5\u53e3** \u670d\u52a1\u5668\n* **\u5199\u63a5\u53e3** \u670d\u52a1\u5668\u6267\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\n  * \u751f\u6210\u4e00\u4e2a\u552f\u4e00\u7684 url\n    * \u68c0\u67e5\u8fd9\u4e2a url \u5728 **SQL \u6570\u636e\u5e93** \u91cc\u9762\u662f\u5426\u662f\u552f\u4e00\u7684\n    * \u5982\u679c\u8fd9\u4e2a url \u4e0d\u662f\u552f\u4e00\u7684\uff0c\u751f\u6210\u53e6\u5916\u4e00\u4e2a url\n    * \u5982\u679c\u6211\u4eec\u652f\u6301\u81ea\u5b9a\u4e49 url\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7528\u6237\u63d0\u4f9b\u7684 url\uff08\u4e5f\u9700\u8981\u68c0\u67e5\u662f\u5426\u91cd\u590d\uff09\n  * \u628a\u751f\u6210\u7684 url \u5b58\u50a8\u5230 **SQL \u6570\u636e\u5e93** \u7684 `pastes` \u8868\u91cc\u9762\n  * \u5b58\u50a8 paste \u7684\u5185\u5bb9\u6570\u636e\u5230 **\u5bf9\u8c61\u5b58\u50a8** \u91cc\u9762\n  * \u8fd4\u56de\u751f\u6210\u7684 url\n\n**\u5411\u9762\u8bd5\u5b98\u9610\u660e\u4f60\u9700\u8981\u5199\u591a\u5c11\u4ee3\u7801**\n\n`pastes` \u8868\u53ef\u4ee5\u6709\u5982\u4e0b\u7ed3\u6784\uff1a\n\n```sql\nshortlink char(7) NOT NULL\nexpiration_length_in_minutes int NOT NULL\ncreated_at datetime NOT NULL\npaste_path varchar(255) NOT NULL\nPRIMARY KEY(shortlink)\n```\n\n\u6211\u4eec\u5c06\u5728 `shortlink` \u5b57\u6bb5\u548c `created_at` \u5b57\u6bb5\u4e0a\u521b\u5efa\u4e00\u4e2a[\u6570\u636e\u5e93\u7d22\u5f15](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u4f7f\u7528\u6b63\u786e\u7684\u7d22\u5f15)\uff0c\u7528\u6765\u63d0\u9ad8\u67e5\u8be2\u7684\u901f\u5ea6\uff08\u907f\u514d\u56e0\u4e3a\u626b\u63cf\u5168\u8868\u5bfc\u81f4\u7684\u957f\u65f6\u95f4\u67e5\u8be2\uff09\u5e76\u5c06\u6570\u636e\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u4ece\u5185\u5b58\u91cc\u9762\u987a\u5e8f\u8bfb\u53d6 1MB \u7684\u6570\u636e\u9700\u8981\u5927\u6982 250 \u5fae\u79d2\uff0c\u800c\u4ece SSD \u4e0a\u8bfb\u53d6\u5219\u9700\u8981\u82b1\u8d39 4 \u500d\u7684\u65f6\u95f4\uff0c\u4ece\u786c\u76d8\u4e0a\u5219\u9700\u8981\u82b1\u8d39 80 \u500d\u7684\u65f6\u95f4\u3002<sup><a href=https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u77e5\u9053\u7684\u5ef6\u8fdf\u6570 > 1</a></sup>\n\n\u4e3a\u4e86\u751f\u6210\u552f\u4e00\u7684 url\uff0c\u6211\u4eec\u53ef\u4ee5\uff1a\n\n* \u4f7f\u7528 [**MD5**](https://en.wikipedia.org/wiki/MD5) \u6765\u54c8\u5e0c\u7528\u6237\u7684 IP \u5730\u5740 + \u65f6\u95f4\u6233\n  * MD5 \u662f\u4e00\u4e2a\u666e\u904d\u7528\u6765\u751f\u6210\u4e00\u4e2a 128-bit \u957f\u5ea6\u7684\u54c8\u5e0c\u503c\u7684\u4e00\u79cd\u54c8\u5e0c\u65b9\u6cd5\n  * MD5 \u662f\u4e00\u81f4\u5206\u5e03\u7684\n  * \u6216\u8005\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528 MD5 \u54c8\u5e0c\u4e00\u4e2a\u968f\u673a\u751f\u6210\u7684\u6570\u636e\n* \u7528 [**Base 62**](https://www.kerstner.at/2012/07/shortening-strings-using-base-62-encoding/) \u7f16\u7801 MD5 \u54c8\u5e0c\u503c\n  * \u5bf9\u4e8e urls\uff0c\u4f7f\u7528 Base 62 \u7f16\u7801 `[a-zA-Z0-9]` \u662f\u6bd4\u8f83\u5408\u9002\u7684\n  * \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u539f\u59cb\u8f93\u5165\u53ea\u4f1a\u6709\u4e00\u4e2a hash \u7ed3\u679c\uff0cBase 62 \u662f\u786e\u5b9a\u7684\uff08\u4e0d\u6d89\u53ca\u968f\u673a\u6027\uff09\n  * Base 64 \u662f\u53e6\u5916\u4e00\u4e2a\u6d41\u884c\u7684\u7f16\u7801\u65b9\u6848\uff0c\u4f46\u662f\u5bf9\u4e8e urls\uff0c\u4f1a\u56e0\u4e3a\u989d\u5916\u7684 `+` \u548c `-` \u5b57\u7b26\u4e32\u800c\u4ea7\u751f\u4e00\u4e9b\u95ee\u9898\n  * \u4ee5\u4e0b [Base 62 \u4f2a\u4ee3\u7801](http://stackoverflow.com/questions/742013/how-to-code-a-url-shortener) \u6267\u884c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(k)\uff0ck \u662f\u6570\u5b57\u7684\u6570\u91cf = 7\uff1a\n\n```python\ndef base_encode(num, base=62):\n    digits = []\n    while num > 0\n      remainder = modulo(num, base)\n      digits.push(remainder)\n      num = divide(num, base)\n    digits = digits.reverse\n```\n\n* \u53d6\u8f93\u51fa\u7684\u524d 7 \u4e2a\u5b57\u7b26\uff0c\u7ed3\u679c\u4f1a\u6709 62^7 \u4e2a\u53ef\u80fd\u7684\u503c\uff0c\u5e94\u8be5\u8db3\u4ee5\u6ee1\u8db3\u5728 3 \u5e74\u5185\u5904\u7406 3.6 \u4ebf\u4e2a\u77ed\u94fe\u63a5\u7684\u7ea6\u675f\uff1a\n\n```python\nurl = base_encode(md5(ip_address+timestamp))[:URL_LENGTH]\n```\n\n\u6211\u4eec\u5c06\u4f1a\u7528\u4e00\u4e2a\u516c\u5f00\u7684 [**REST \u98ce\u683c\u63a5\u53e3**](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u8868\u8ff0\u6027\u72b6\u6001\u8f6c\u79fbrest)\uff1a\n\n```shell\n$ curl -X POST --data '{\"expiration_length_in_minutes\":\"60\", \\\"paste_contents\":\"Hello World!\"}' https://pastebin.com/api/v1/paste\n```\n\nResponse:\n\n```json\n{\n    \"shortlink\": \"foobar\"\n}\n```\n\n\u7528\u4e8e\u5185\u90e8\u901a\u4fe1\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 [RPC](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\u534f\u8baerpc)\u3002\n\n### \u7528\u4f8b\uff1a\u7528\u6237\u8f93\u5165\u4e00\u4e2a paste \u7684 url \u540e\u53ef\u4ee5\u770b\u5230\u5b83\u5b58\u50a8\u7684\u5185\u5bb9\n\n* **\u5ba2\u6237\u7aef** \u53d1\u9001\u4e00\u4e2a\u83b7\u53d6 paste \u8bf7\u6c42\u5230 **Web Server**\n* **Web Server** \u8f6c\u53d1\u8bf7\u6c42\u7ed9 **\u8bfb\u53d6\u63a5\u53e3** \u670d\u52a1\u5668\n* **\u8bfb\u53d6\u63a5\u53e3** \u670d\u52a1\u5668\u6267\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\n  * \u5728 **SQL \u6570\u636e\u5e93** \u68c0\u67e5\u8fd9\u4e2a\u751f\u6210\u7684 url\n    * \u5982\u679c\u8fd9\u4e2a url \u5728 **SQL \u6570\u636e\u5e93** \u91cc\u9762\uff0c\u5219\u4ece **\u5bf9\u8c61\u5b58\u50a8** \u83b7\u53d6\u8fd9\u4e2a paste \u7684\u5185\u5bb9\n    * \u5426\u5219\uff0c\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u9875\u9762\u7ed9\u7528\u6237\n\nREST API\uff1a\n\n```shell\ncurl https://pastebin.com/api/v1/paste?shortlink=foobar\n```\n\nResponse:\n\n```json\n{\n    \"paste_contents\": \"Hello World\",\n    \"created_at\": \"YYYY-MM-DD HH:MM:SS\",\n    \"expiration_length_in_minutes\": \"60\"\n}\n```\n\n### \u7528\u4f8b\uff1a \u670d\u52a1\u8ddf\u8e2a\u5206\u6790\u9875\u9762\n\n\u56e0\u4e3a\u5b9e\u65f6\u5206\u6790\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684 **MapReduce** **Web Server** \u7684\u65e5\u5fd7\uff0c\u7528\u6765\u751f\u6210\u70b9\u51fb\u6b21\u6570\u3002\n\n```python\nclass HitCounts(MRJob):\n\n    def extract_url(self, line):\n        \"\"\"Extract the generated url from the log line.\"\"\"\n        ...\n\n    def extract_year_month(self, line):\n        \"\"\"Return the year and month portions of the timestamp.\"\"\"\n        ...\n\n    def mapper(self, _, line):\n        \"\"\"Parse each log line, extract and transform relevant lines.\n\n        Emit key value pairs of the form:\n\n        (2016-01, url0), 1\n        (2016-01, url0), 1\n        (2016-01, url1), 1\n        \"\"\"\n        url = self.extract_url(line)\n        period = self.extract_year_month(line)\n        yield (period, url), 1\n\n    def reducer(self, key, values):\n        \"\"\"Sum values for each key.\n\n        (2016-01, url0), 2\n        (2016-01, url1), 1\n        \"\"\"\n        yield key, sum(values)\n```\n\n### \u7528\u4f8b\uff1a \u670d\u52a1\u5220\u9664\u8fc7\u671f\u7684 pastes\n\n\u4e3a\u4e86\u5220\u9664\u8fc7\u671f\u7684 pastes\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u641c\u7d22 **SQL \u6570\u636e\u5e93** \u4e2d\u6240\u6709\u7684\u8fc7\u671f\u65f6\u95f4\u6bd4\u5f53\u524d\u65f6\u95f4\u66f4\u65e9\u7684\u8bb0\u5f55\uff0c\n\u6240\u6709\u8fc7\u671f\u7684\u8bb0\u5f55\u5c06\u4ece\u8fd9\u5f20\u8868\u91cc\u9762\u5220\u9664\uff08\u6216\u8005\u5c06\u5176\u6807\u8bb0\u4e3a\u8fc7\u671f\uff09\u3002\n\n## \u7b2c\u56db\u6b65\uff1a\u6269\u5c55\u8fd9\u4e2a\u8bbe\u8ba1\n\n> \u7ed9\u5b9a\u7ea6\u675f\u6761\u4ef6\uff0c\u8bc6\u522b\u548c\u89e3\u51b3\u74f6\u9888\u3002\n\n![Imgur](http://i.imgur.com/4edXG0T.png)\n\n**\u91cd\u8981\u63d0\u793a: \u4e0d\u8981\u7b80\u5355\u7684\u4ece\u6700\u521d\u7684\u8bbe\u8ba1\u76f4\u63a5\u8df3\u5230\u6700\u7ec8\u7684\u8bbe\u8ba1**\n\n\u8bf4\u660e\u60a8\u5c06\u8fed\u4ee3\u5730\u6267\u884c\u8fd9\u6837\u7684\u64cd\u4f5c\uff1a1)**Benchmark/Load \u6d4b\u8bd5**\uff0c2)**Profile** \u51fa\u74f6\u9888\uff0c3)\u5728\u8bc4\u4f30\u66ff\u4ee3\u65b9\u6848\u548c\u6743\u8861\u65f6\u89e3\u51b3\u74f6\u9888\uff0c4)\u91cd\u590d\u524d\u9762\uff0c\u53ef\u4ee5\u53c2\u8003[\u5728 AWS \u4e0a\u8bbe\u8ba1\u4e00\u4e2a\u53ef\u4ee5\u652f\u6301\u767e\u4e07\u7528\u6237\u7684\u7cfb\u7edf](../scaling_aws/README.md)\u8fd9\u4e2a\u7528\u6765\u89e3\u51b3\u5982\u4f55\u8fed\u4ee3\u5730\u6269\u5c55\u521d\u59cb\u8bbe\u8ba1\u7684\u4f8b\u5b50\u3002\n\n\u91cd\u8981\u7684\u662f\u8ba8\u8bba\u5728\u521d\u59cb\u8bbe\u8ba1\u4e2d\u53ef\u80fd\u9047\u5230\u7684\u74f6\u9888\uff0c\u4ee5\u53ca\u5982\u4f55\u89e3\u51b3\u6bcf\u4e2a\u74f6\u9888\u3002\u6bd4\u5982\uff0c\u5728\u591a\u4e2a **Web \u670d\u52a1\u5668** \u4e0a\u6dfb\u52a0 **\u8d1f\u8f7d\u5e73\u8861\u5668** \u53ef\u4ee5\u89e3\u51b3\u54ea\u4e9b\u95ee\u9898\uff1f **CDN** \u89e3\u51b3\u54ea\u4e9b\u95ee\u9898\uff1f**Master-Slave Replicas** \u89e3\u51b3\u54ea\u4e9b\u95ee\u9898? \u66ff\u4ee3\u65b9\u6848\u662f\u4ec0\u4e48\u548c\u600e\u4e48\u5bf9\u6bcf\u4e00\u4e2a\u66ff\u4ee3\u65b9\u6848\u8fdb\u884c\u6743\u8861\u6bd4\u8f83\uff1f\n\n\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u7ec4\u4ef6\u6765\u5b8c\u6210\u8bbe\u8ba1\uff0c\u5e76\u89e3\u51b3\u53ef\u4f38\u7f29\u6027\u95ee\u9898\u3002\u5185\u90e8\u7684\u8d1f\u8f7d\u5e73\u8861\u5668\u5e76\u4e0d\u80fd\u51cf\u5c11\u6742\u4e71\u3002\n\n**\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u7684\u8ba8\u8bba**\uff0c \u53c2\u8003\u4ee5\u4e0b[\u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u7cfb\u7edf\u8bbe\u8ba1\u4e3b\u9898\u7684\u7d22\u5f15)\u83b7\u53d6\u4e3b\u8981\u8ba8\u8bba\u8981\u70b9\u3001\u6743\u8861\u548c\u66ff\u4ee3\u65b9\u6848\uff1a\n\n* [DNS](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u57df\u540d\u7cfb\u7edf)\n* [CDN](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5185\u5bb9\u5206\u53d1\u7f51\u7edccdn)\n* [\u8d1f\u8f7d\u5747\u8861\u5668](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u8d1f\u8f7d\u5747\u8861\u5668)\n* [\u6c34\u5e73\u6269\u5c55](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u6c34\u5e73\u6269\u5c55)\n* [\u53cd\u5411\u4ee3\u7406\uff08web \u670d\u52a1\u5668\uff09](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u53cd\u5411\u4ee3\u7406web-\u670d\u52a1\u5668)\n* [\u5e94\u7528\u5c42](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5e94\u7528\u5c42)\n* [\u7f13\u5b58](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u7f13\u5b58)\n* [\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf (RDBMS)](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edfrdbms)\n* [SQL write master-slave failover](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u6545\u969c\u5207\u6362)\n* [\u4e3b\u4ece\u590d\u5236](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u4e3b\u4ece\u590d\u5236)\n* [\u4e00\u81f4\u6027\u6a21\u5f0f](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u4e00\u81f4\u6027\u6a21\u5f0f)\n* [\u53ef\u7528\u6027\u6a21\u5f0f](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u53ef\u7528\u6027\u6a21\u5f0f)\n\n**\u5206\u6790\u5b58\u50a8\u6570\u636e\u5e93** \u53ef\u4ee5\u7528\u6bd4\u5982 Amazon Redshift \u6216\u8005 Google BigQuery \u8fd9\u6837\u7684\u6570\u636e\u4ed3\u5e93\u89e3\u51b3\u65b9\u6848\u3002\n\n\u4e00\u4e2a\u50cf Amazon S3 \u8fd9\u6837\u7684 **\u5bf9\u8c61\u5b58\u50a8**\uff0c\u53ef\u4ee5\u8f7b\u677e\u5904\u7406\u6bcf\u6708 12.7 GB \u7684\u65b0\u5185\u5bb9\u7ea6\u675f\u3002\n\n\u8981\u5904\u7406 *\u5e73\u5747* \u6bcf\u79d2 40 \u8bfb\u8bf7\u6c42(\u5cf0\u503c\u66f4\u9ad8)\uff0c\u5176\u4e2d\u70ed\u70b9\u5185\u5bb9\u7684\u6d41\u91cf\u5e94\u8be5\u7531 **\u5185\u5b58\u7f13\u5b58** \u5904\u7406\uff0c\u800c\u4e0d\u662f\u6570\u636e\u5e93\u3002**\u5185\u5b58\u7f13\u5b58** \u5bf9\u4e8e\u5904\u7406\u5206\u5e03\u4e0d\u5747\u5300\u7684\u6d41\u91cf\u548c\u6d41\u91cf\u5cf0\u503c\u4e5f\u5f88\u6709\u7528\u3002\u53ea\u8981\u526f\u672c\u6ca1\u6709\u9677\u5165\u590d\u5236\u5199\u7684\u6ce5\u6f6d\uff0c**SQL Read Replicas** \u5e94\u8be5\u80fd\u591f\u5904\u7406\u7f13\u5b58\u4e22\u5931\u3002\n\n\u5bf9\u4e8e\u5355\u4e2a **SQL Write Master-Slave**\uff0c*\u5e73\u5747* \u6bcf\u79d2 4paste \u5199\u5165 (\u5cf0\u503c\u66f4\u9ad8) \u5e94\u8be5\u662f\u53ef\u4ee5\u505a\u5230\u7684\u3002\u5426\u5219\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u989d\u5916\u7684 SQL \u6269\u5c55\u6a21\u5f0f:\n\n* [\u8054\u5408](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u8054\u5408)\n* [\u5206\u7247](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5206\u7247)\n* [\u975e\u89c4\u8303\u5316](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u975e\u89c4\u8303\u5316)\n* [SQL \u8c03\u4f18](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#SQL\u8c03\u4f18)\n\n\u6211\u4eec\u8fd8\u5e94\u8be5\u8003\u8651\u5c06\u4e00\u4e9b\u6570\u636e\u79fb\u52a8\u5230 **NoSQL \u6570\u636e\u5e93**\u3002\n\n## \u989d\u5916\u7684\u8bdd\u9898\n\n> \u662f\u5426\u66f4\u6df1\u5165\u63a2\u8ba8\u989d\u5916\u4e3b\u9898\uff0c\u53d6\u51b3\u4e8e\u95ee\u9898\u7684\u8303\u56f4\u548c\u9762\u8bd5\u5269\u4f59\u7684\u65f6\u95f4\u3002\n\n### NoSQL\n\n* [\u952e\u503c\u5b58\u50a8](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u952e-\u503c\u5b58\u50a8)\n* [\u6587\u6863\u5b58\u50a8](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u6587\u6863\u7c7b\u578b\u5b58\u50a8)\n* [\u5217\u578b\u5b58\u50a8](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5217\u578b\u5b58\u50a8)\n* [\u56fe\u6570\u636e\u5e93](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u56fe\u6570\u636e\u5e93)\n* [sql \u8fd8\u662f nosql](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#sql-\u8fd8\u662f-nosql)\n\n### \u7f13\u5b58\n\n* \u5728\u54ea\u7f13\u5b58\n  * [\u5ba2\u6237\u7aef\u7f13\u5b58](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5ba2\u6237\u7aef\u7f13\u5b58)\n  * [CDN \u7f13\u5b58](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#cdn-\u7f13\u5b58)\n  * [Web \u670d\u52a1\u5668\u7f13\u5b58](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#web-\u670d\u52a1\u5668\u7f13\u5b58)\n  * [\u6570\u636e\u5e93\u7f13\u5b58](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u6570\u636e\u5e93\u7f13\u5b58)\n  * [\u5e94\u7528\u7f13\u5b58](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5e94\u7528\u7f13\u5b58)\n* \u7f13\u5b58\u4ec0\u4e48\n  * [\u6570\u636e\u5e93\u67e5\u8be2\u7ea7\u522b\u7684\u7f13\u5b58](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u6570\u636e\u5e93\u67e5\u8be2\u7ea7\u522b\u7684\u7f13\u5b58)\n  * [\u5bf9\u8c61\u7ea7\u522b\u7684\u7f13\u5b58](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5bf9\u8c61\u7ea7\u522b\u7684\u7f13\u5b58)\n* \u4f55\u65f6\u66f4\u65b0\u7f13\u5b58\n  * [\u7f13\u5b58\u6a21\u5f0f](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u7f13\u5b58\u6a21\u5f0f)\n  * [\u76f4\u5199\u6a21\u5f0f](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u76f4\u5199\u6a21\u5f0f)\n  * [\u56de\u5199\u6a21\u5f0f](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u56de\u5199\u6a21\u5f0f)\n  * [\u5237\u65b0](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5237\u65b0)\n\n### \u5f02\u6b65\u548c\u5fae\u670d\u52a1\n\n* [\u6d88\u606f\u961f\u5217](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u6d88\u606f\u961f\u5217)\n* [\u4efb\u52a1\u961f\u5217](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u4efb\u52a1\u961f\u5217)\n* [\u80cc\u538b](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u80cc\u538b)\n* [\u5fae\u670d\u52a1](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5fae\u670d\u52a1)\n\n### \u901a\u4fe1\n\n* \u8ba8\u8bba\u6743\u8861:\n  * \u8ddf\u5ba2\u6237\u7aef\u4e4b\u95f4\u7684\u5916\u90e8\u901a\u4fe1 - [HTTP APIs following REST](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u8868\u8ff0\u6027\u72b6\u6001\u8f6c\u79fbrest)\n  * \u5185\u90e8\u901a\u4fe1 - [RPC](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\u534f\u8baerpc)\n* [\u670d\u52a1\u53d1\u73b0](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u670d\u52a1\u53d1\u73b0)\n\n### \u5b89\u5168\n\n\u53c2\u8003[\u5b89\u5168](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u5b89\u5168)\u3002\n\n### \u5ef6\u8fdf\u6570\u5b57\n\n\u89c1[\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u77e5\u9053\u7684\u5ef6\u8fdf\u6570](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u77e5\u9053\u7684\u5ef6\u8fdf\u6570)\u3002\n\n### \u6301\u7eed\u8fdb\u884c\n\n* \u7ee7\u7eed\u5bf9\u7cfb\u7edf\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u548c\u76d1\u63a7\uff0c\u4ee5\u5728\u74f6\u9888\u51fa\u73b0\u65f6\u89e3\u51b3\u5b83\u4eec\n* \u6269\u5c55\u662f\u4e00\u4e2a\u8fed\u4ee3\u7684\u8fc7\u7a0b\n"}
{"repo_url": "https://github.com/donnemartin/system-design-primer", "path": "solutions/system_design/pastebin/README.md", "size": 15782, "license": "NOASSERTION", "content_sha": "2d87ddcc7e344e08a696498b2a5823c1771483df", "findings": [], "content": "# Design Pastebin.com (or Bit.ly)\n\n*Note: This document links directly to relevant areas found in the [system design topics](https://github.com/donnemartin/system-design-primer#index-of-system-design-topics) to avoid duplication.  Refer to the linked content for general talking points, tradeoffs, and alternatives.*\n\n**Design Bit.ly** - is a similar question, except pastebin requires storing the paste contents instead of the original unshortened url.\n\n## Step 1: Outline use cases and constraints\n\n> Gather requirements and scope the problem.\n> Ask questions to clarify use cases and constraints.\n> Discuss assumptions.\n\nWithout an interviewer to address clarifying questions, we'll define some use cases and constraints.\n\n### Use cases\n\n#### We'll scope the problem to handle only the following use cases\n\n* **User** enters a block of text and gets a randomly generated link\n    * Expiration\n        * Default setting does not expire\n        * Can optionally set a timed expiration\n* **User** enters a paste's url and views the contents\n* **User** is anonymous\n* **Service** tracks analytics of pages\n    * Monthly visit stats\n* **Service** deletes expired pastes\n* **Service** has high availability\n\n#### Out of scope\n\n* **User** registers for an account\n    * **User** verifies email\n* **User** logs into a registered account\n    * **User** edits the document\n* **User** can set visibility\n* **User** can set the shortlink\n\n### Constraints and assumptions\n\n#### State assumptions\n\n* Traffic is not evenly distributed\n* Following a short link should be fast\n* Pastes are text only\n* Page view analytics do not need to be realtime\n* 10 million users\n* 10 million paste writes per month\n* 100 million paste reads per month\n* 10:1 read to write ratio\n\n#### Calculate usage\n\n**Clarify with your interviewer if you should run back-of-the-envelope usage calculations.**\n\n* Size per paste\n    * 1 KB content per paste\n    * `shortlink` - 7 bytes\n    * `expiration_length_in_minutes` - 4 bytes\n    * `created_at` - 5 bytes\n    * `paste_path` - 255 bytes\n    * total = ~1.27 KB\n* 12.7 GB of new paste content per month\n    * 1.27 KB per paste * 10 million pastes per month\n    * ~450 GB of new paste content in 3 years\n    * 360 million shortlinks in 3 years\n    * Assume most are new pastes instead of updates to existing ones\n* 4 paste writes per second on average\n* 40 read requests per second on average\n\nHandy conversion guide:\n\n* 2.5 million seconds per month\n* 1 request per second = 2.5 million requests per month\n* 40 requests per second = 100 million requests per month\n* 400 requests per second = 1 billion requests per month\n\n## Step 2: Create a high level design\n\n> Outline a high level design with all important components.\n\n![Imgur](http://i.imgur.com/BKsBnmG.png)\n\n## Step 3: Design core components\n\n> Dive into details for each core component.\n\n### Use case: User enters a block of text and gets a randomly generated link\n\nWe could use a [relational database](https://github.com/donnemartin/system-design-primer#relational-database-management-system-rdbms) as a large hash table, mapping the generated url to a file server and path containing the paste file.\n\nInstead of managing a file server, we could use a managed **Object Store** such as Amazon S3 or a [NoSQL document store](https://github.com/donnemartin/system-design-primer#document-store).\n\nAn alternative to a relational database acting as a large hash table, we could use a [NoSQL key-value store](https://github.com/donnemartin/system-design-primer#key-value-store).  We should discuss the [tradeoffs between choosing SQL or NoSQL](https://github.com/donnemartin/system-design-primer#sql-or-nosql).  The following discussion uses the relational database approach.\n\n* The **Client** sends a create paste request to the **Web Server**, running as a [reverse proxy](https://github.com/donnemartin/system-design-primer#reverse-proxy-web-server)\n* The **Web Server** forwards the request to the **Write API** server\n* The **Write API** server does the following:\n    * Generates a unique url\n        * Checks if the url is unique by looking at the **SQL Database** for a duplicate\n        * If the url is not unique, it generates another url\n        * If we supported a custom url, we could use the user-supplied (also check for a duplicate)\n    * Saves to the **SQL Database** `pastes` table\n    * Saves the paste data to the **Object Store**\n    * Returns the url\n\n**Clarify with your interviewer how much code you are expected to write**.\n\nThe `pastes` table could have the following structure:\n\n```\nshortlink char(7) NOT NULL\nexpiration_length_in_minutes int NOT NULL\ncreated_at datetime NOT NULL\npaste_path varchar(255) NOT NULL\nPRIMARY KEY(shortlink)\n```\n\nSetting the primary key to be based on the `shortlink` column creates an [index](https://github.com/donnemartin/system-design-primer#use-good-indices) that the database uses to enforce uniqueness. We'll create an additional index on `created_at` to speed up lookups (log-time instead of scanning the entire table) and to keep the data in memory.  Reading 1 MB sequentially from memory takes about 250 microseconds, while reading from SSD takes 4x and from disk takes 80x longer.<sup><a href=https://github.com/donnemartin/system-design-primer#latency-numbers-every-programmer-should-know>1</a></sup>\n\nTo generate the unique url, we could:\n\n* Take the [**MD5**](https://en.wikipedia.org/wiki/MD5) hash of the user's ip_address + timestamp\n    * MD5 is a widely used hashing function that produces a 128-bit hash value\n    * MD5 is uniformly distributed\n    * Alternatively, we could also take the MD5 hash of randomly-generated data\n* [**Base 62**](https://www.kerstner.at/2012/07/shortening-strings-using-base-62-encoding/) encode the MD5 hash\n    * Base 62 encodes to `[a-zA-Z0-9]` which works well for urls, eliminating the need for escaping special characters\n    * There is only one hash result for the original input and Base 62 is deterministic (no randomness involved)\n    * Base 64 is another popular encoding but provides issues for urls because of the additional `+` and `/` characters\n    * The following [Base 62 pseudocode](http://stackoverflow.com/questions/742013/how-to-code-a-url-shortener) runs in O(k) time where k is the number of digits = 7:\n\n```python\ndef base_encode(num, base=62):\n    digits = []\n    while num > 0\n      remainder = modulo(num, base)\n      digits.push(remainder)\n      num = divide(num, base)\n    digits = digits.reverse\n```\n\n* Take the first 7 characters of the output, which results in 62^7 possible values and should be sufficient to handle our constraint of 360 million shortlinks in 3 years:\n\n```python\nurl = base_encode(md5(ip_address+timestamp))[:URL_LENGTH]\n```\n\nWe'll use a public [**REST API**](https://github.com/donnemartin/system-design-primer#representational-state-transfer-rest):\n\n```\n$ curl -X POST --data '{ \"expiration_length_in_minutes\": \"60\", \\\n    \"paste_contents\": \"Hello World!\" }' https://pastebin.com/api/v1/paste\n```\n\nResponse:\n\n```\n{\n    \"shortlink\": \"foobar\"\n}\n```\n\nFor internal communications, we could use [Remote Procedure Calls](https://github.com/donnemartin/system-design-primer#remote-procedure-call-rpc).\n\n### Use case: User enters a paste's url and views the contents\n\n* The **Client** sends a get paste request to the **Web Server**\n* The **Web Server** forwards the request to the **Read API** server\n* The **Read API** server does the following:\n    * Checks the **SQL Database** for the generated url\n        * If the url is in the **SQL Database**, fetch the paste contents from the **Object Store**\n        * Else, return an error message for the user\n\nREST API:\n\n```\n$ curl https://pastebin.com/api/v1/paste?shortlink=foobar\n```\n\nResponse:\n\n```\n{\n    \"paste_contents\": \"Hello World\"\n    \"created_at\": \"YYYY-MM-DD HH:MM:SS\"\n    \"expiration_length_in_minutes\": \"60\"\n}\n```\n\n### Use case: Service tracks analytics of pages\n\nSince realtime analytics are not a requirement, we could simply **MapReduce** the **Web Server** logs to generate hit counts.\n\n**Clarify with your interviewer how much code you are expected to write**.\n\n```python\nclass HitCounts(MRJob):\n\n    def extract_url(self, line):\n        \"\"\"Extract the generated url from the log line.\"\"\"\n        ...\n\n    def extract_year_month(self, line):\n        \"\"\"Return the year and month portions of the timestamp.\"\"\"\n        ...\n\n    def mapper(self, _, line):\n        \"\"\"Parse each log line, extract and transform relevant lines.\n\n        Emit key value pairs of the form:\n\n        (2016-01, url0), 1\n        (2016-01, url0), 1\n        (2016-01, url1), 1\n        \"\"\"\n        url = self.extract_url(line)\n        period = self.extract_year_month(line)\n        yield (period, url), 1\n\n    def reducer(self, key, values):\n        \"\"\"Sum values for each key.\n\n        (2016-01, url0), 2\n        (2016-01, url1), 1\n        \"\"\"\n        yield key, sum(values)\n```\n\n### Use case: Service deletes expired pastes\n\nTo delete expired pastes, we could just scan the **SQL Database** for all entries whose expiration timestamp are older than the current timestamp.  All expired entries would then be deleted (or  marked as expired) from the table.\n\n## Step 4: Scale the design\n\n> Identify and address bottlenecks, given the constraints.\n\n![Imgur](http://i.imgur.com/4edXG0T.png)\n\n**Important: Do not simply jump right into the final design from the initial design!**\n\nState you would do this iteratively: 1) **Benchmark/Load Test**, 2) **Profile** for bottlenecks 3) address bottlenecks while evaluating alternatives and trade-offs, and 4) repeat.  See [Design a system that scales to millions of users on AWS](../scaling_aws/README.md) as a sample on how to iteratively scale the initial design.\n\nIt's important to discuss what bottlenecks you might encounter with the initial design and how you might address each of them.  For example, what issues are addressed by adding a **Load Balancer** with multiple **Web Servers**?  **CDN**?  **Master-Slave Replicas**?  What are the alternatives and **Trade-Offs** for each?\n\nWe'll introduce some components to complete the design and to address scalability issues.  Internal load balancers are not shown to reduce clutter.\n\n*To avoid repeating discussions*, refer to the following [system design topics](https://github.com/donnemartin/system-design-primer#index-of-system-design-topics) for main talking points, tradeoffs, and alternatives:\n\n* [DNS](https://github.com/donnemartin/system-design-primer#domain-name-system)\n* [CDN](https://github.com/donnemartin/system-design-primer#content-delivery-network)\n* [Load balancer](https://github.com/donnemartin/system-design-primer#load-balancer)\n* [Horizontal scaling](https://github.com/donnemartin/system-design-primer#horizontal-scaling)\n* [Web server (reverse proxy)](https://github.com/donnemartin/system-design-primer#reverse-proxy-web-server)\n* [API server (application layer)](https://github.com/donnemartin/system-design-primer#application-layer)\n* [Cache](https://github.com/donnemartin/system-design-primer#cache)\n* [Relational database management system (RDBMS)](https://github.com/donnemartin/system-design-primer#relational-database-management-system-rdbms)\n* [SQL write master-slave failover](https://github.com/donnemartin/system-design-primer#fail-over)\n* [Master-slave replication](https://github.com/donnemartin/system-design-primer#master-slave-replication)\n* [Consistency patterns](https://github.com/donnemartin/system-design-primer#consistency-patterns)\n* [Availability patterns](https://github.com/donnemartin/system-design-primer#availability-patterns)\n\nThe **Analytics Database** could use a data warehousing solution such as Amazon Redshift or Google BigQuery.\n\nAn **Object Store** such as Amazon S3 can comfortably handle the constraint of 12.7 GB of new content per month.\n\nTo address the 40 *average* read requests per second (higher at peak), traffic for popular content should be handled by the **Memory Cache** instead of the database.  The **Memory Cache** is also useful for handling the unevenly distributed traffic and traffic spikes.  The **SQL Read Replicas** should be able to handle the cache misses, as long as the replicas are not bogged down with replicating writes.\n\n4 *average* paste writes per second (with higher at peak) should be do-able for a single **SQL Write Master-Slave**.  Otherwise, we'll need to employ additional SQL scaling patterns:\n\n* [Federation](https://github.com/donnemartin/system-design-primer#federation)\n* [Sharding](https://github.com/donnemartin/system-design-primer#sharding)\n* [Denormalization](https://github.com/donnemartin/system-design-primer#denormalization)\n* [SQL Tuning](https://github.com/donnemartin/system-design-primer#sql-tuning)\n\nWe should also consider moving some data to a **NoSQL Database**.\n\n## Additional talking points\n\n> Additional topics to dive into, depending on the problem scope and time remaining.\n\n#### NoSQL\n\n* [Key-value store](https://github.com/donnemartin/system-design-primer#key-value-store)\n* [Document store](https://github.com/donnemartin/system-design-primer#document-store)\n* [Wide column store](https://github.com/donnemartin/system-design-primer#wide-column-store)\n* [Graph database](https://github.com/donnemartin/system-design-primer#graph-database)\n* [SQL vs NoSQL](https://github.com/donnemartin/system-design-primer#sql-or-nosql)\n\n### Caching\n\n* Where to cache\n    * [Client caching](https://github.com/donnemartin/system-design-primer#client-caching)\n    * [CDN caching](https://github.com/donnemartin/system-design-primer#cdn-caching)\n    * [Web server caching](https://github.com/donnemartin/system-design-primer#web-server-caching)\n    * [Database caching](https://github.com/donnemartin/system-design-primer#database-caching)\n    * [Application caching](https://github.com/donnemartin/system-design-primer#application-caching)\n* What to cache\n    * [Caching at the database query level](https://github.com/donnemartin/system-design-primer#caching-at-the-database-query-level)\n    * [Caching at the object level](https://github.com/donnemartin/system-design-primer#caching-at-the-object-level)\n* When to update the cache\n    * [Cache-aside](https://github.com/donnemartin/system-design-primer#cache-aside)\n    * [Write-through](https://github.com/donnemartin/system-design-primer#write-through)\n    * [Write-behind (write-back)](https://github.com/donnemartin/system-design-primer#write-behind-write-back)\n    * [Refresh ahead](https://github.com/donnemartin/system-design-primer#refresh-ahead)\n\n### Asynchronism and microservices\n\n* [Message queues](https://github.com/donnemartin/system-design-primer#message-queues)\n* [Task queues](https://github.com/donnemartin/system-design-primer#task-queues)\n* [Back pressure](https://github.com/donnemartin/system-design-primer#back-pressure)\n* [Microservices](https://github.com/donnemartin/system-design-primer#microservices)\n\n### Communications\n\n* Discuss tradeoffs:\n    * External communication with clients - [HTTP APIs following REST](https://github.com/donnemartin/system-design-primer#representational-state-transfer-rest)\n    * Internal communications - [RPC](https://github.com/donnemartin/system-design-primer#remote-procedure-call-rpc)\n* [Service discovery](https://github.com/donnemartin/system-design-primer#service-discovery)\n\n### Security\n\nRefer to the [security section](https://github.com/donnemartin/system-design-primer#security).\n\n### Latency numbers\n\nSee [Latency numbers every programmer should know](https://github.com/donnemartin/system-design-primer#latency-numbers-every-programmer-should-know).\n\n### Ongoing\n\n* Continue benchmarking and monitoring your system to address bottlenecks as they come up\n* Scaling is an iterative process\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": ".github/ISSUE_TEMPLATE/1_broken_site.md", "size": 2555, "license": "Unlicense", "content_sha": "e5405c235903ed5fbecfa7a324cb10e8daee4c55", "findings": [], "content": "---\nname: Broken site support\nabout: Report broken or misfunctioning site\ntitle: ''\n---\n\n<!--\n\n######################################################################\n  WARNING!\n  IGNORING THE FOLLOWING TEMPLATE WILL RESULT IN ISSUE CLOSED AS INCOMPLETE\n######################################################################\n\n-->\n\n\n## Checklist\n\n<!--\nCarefully read and work through this check list in order to prevent the most common mistakes and misuse of youtube-dl:\n- First of, make sure you are using the latest version of youtube-dl. Run `youtube-dl --version` and ensure your version is 2021.12.17. If it's not, see https://yt-dl.org/update on how to update. Issues with outdated version will be REJECTED.\n- Make sure that all provided video/audio/playlist URLs (if any) are alive and playable in a browser.\n- Make sure that all URLs and arguments with special characters are properly quoted or escaped as explained in http://yt-dl.org/escape.\n- Search the bugtracker for similar issues: http://yt-dl.org/search-issues. DO NOT post duplicates.\n- Finally, put x into all relevant boxes (like this [x])\n-->\n\n- [ ] I'm reporting a broken site support\n- [ ] I've verified that I'm running youtube-dl version **2021.12.17**\n- [ ] I've checked that all provided URLs are alive and playable in a browser\n- [ ] I've checked that all URLs and arguments with special characters are properly quoted or escaped\n- [ ] I've searched the bugtracker for similar issues including closed ones\n\n\n## Verbose log\n\n<!--\nProvide the complete verbose output of youtube-dl that clearly demonstrates the problem.\nAdd the `-v` flag to your command line you run youtube-dl with (`youtube-dl -v <your command line>`), copy the WHOLE output and insert it below. It should look similar to this:\n [debug] System config: []\n [debug] User config: []\n [debug] Command-line args: [u'-v', u'http://www.youtube.com/watch?v=BaW_jenozKcj']\n [debug] Encodings: locale cp1251, fs mbcs, out cp866, pref cp1251\n [debug] youtube-dl version 2021.12.17\n [debug] Python version 2.7.11 - Windows-2003Server-5.2.3790-SP2\n [debug] exe versions: ffmpeg N-75573-g1d0487f, ffprobe N-75573-g1d0487f, rtmpdump 2.4\n [debug] Proxy map: {}\n <more lines>\n-->\n\n```\nPASTE VERBOSE LOG HERE\n```\n\n\n## Description\n\n<!--\nProvide an explanation of your issue in an arbitrary form. Provide any additional information, suggested solution and as much context and examples as possible.\nIf work on your issue requires account credentials please provide them or explain how one can obtain them.\n-->\n\nWRITE DESCRIPTION HERE\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": ".github/ISSUE_TEMPLATE/2_site_support_request.md", "size": 2180, "license": "Unlicense", "content_sha": "33b01ce7fdab7361ccc0ca31cd3afb6f48b20bc2", "findings": [], "content": "---\nname: Site support request\nabout: Request support for a new site\ntitle: ''\nlabels: 'site-support-request'\n---\n\n<!--\n\n######################################################################\n  WARNING!\n  IGNORING THE FOLLOWING TEMPLATE WILL RESULT IN ISSUE CLOSED AS INCOMPLETE\n######################################################################\n\n-->\n\n\n## Checklist\n\n<!--\nCarefully read and work through this check list in order to prevent the most common mistakes and misuse of youtube-dl:\n- First of, make sure you are using the latest version of youtube-dl. Run `youtube-dl --version` and ensure your version is 2021.12.17. If it's not, see https://yt-dl.org/update on how to update. Issues with outdated version will be REJECTED.\n- Make sure that all provided video/audio/playlist URLs (if any) are alive and playable in a browser.\n- Make sure that site you are requesting is not dedicated to copyright infringement, see https://yt-dl.org/copyright-infringement. youtube-dl does not support such sites. In order for site support request to be accepted all provided example URLs should not violate any copyrights.\n- Search the bugtracker for similar site support requests: http://yt-dl.org/search-issues. DO NOT post duplicates.\n- Finally, put x into all relevant boxes (like this [x])\n-->\n\n- [ ] I'm reporting a new site support request\n- [ ] I've verified that I'm running youtube-dl version **2021.12.17**\n- [ ] I've checked that all provided URLs are alive and playable in a browser\n- [ ] I've checked that none of provided URLs violate any copyrights\n- [ ] I've searched the bugtracker for similar site support requests including closed ones\n\n\n## Example URLs\n\n<!--\nProvide all kinds of example URLs support for which should be included. Replace following example URLs by yours.\n-->\n\n- Single video: https://www.youtube.com/watch?v=BaW_jenozKc\n- Single video: https://youtu.be/BaW_jenozKc\n- Playlist: https://www.youtube.com/playlist?list=PL4lCao7KL_QFVb7Iudeipvc2BCavECqzc\n\n\n## Description\n\n<!--\nProvide any additional information.\nIf work on your issue requires account credentials please provide them or explain how one can obtain them.\n-->\n\nWRITE DESCRIPTION HERE\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": ".github/ISSUE_TEMPLATE/3_site_feature_request.md", "size": 1490, "license": "Unlicense", "content_sha": "285610cc70e37c319b41b86cc743d845e28c3721", "findings": [], "content": "---\nname: Site feature request\nabout: Request a new functionality for a site\ntitle: ''\n---\n\n<!--\n\n######################################################################\n  WARNING!\n  IGNORING THE FOLLOWING TEMPLATE WILL RESULT IN ISSUE CLOSED AS INCOMPLETE\n######################################################################\n\n-->\n\n\n## Checklist\n\n<!--\nCarefully read and work through this check list in order to prevent the most common mistakes and misuse of youtube-dl:\n- First of, make sure you are using the latest version of youtube-dl. Run `youtube-dl --version` and ensure your version is 2021.12.17. If it's not, see https://yt-dl.org/update on how to update. Issues with outdated version will be REJECTED.\n- Search the bugtracker for similar site feature requests: http://yt-dl.org/search-issues. DO NOT post duplicates.\n- Finally, put x into all relevant boxes (like this [x])\n-->\n\n- [ ] I'm reporting a site feature request\n- [ ] I've verified that I'm running youtube-dl version **2021.12.17**\n- [ ] I've searched the bugtracker for similar site feature requests including closed ones\n\n\n## Description\n\n<!--\nProvide an explanation of your site feature request in an arbitrary form. Please make sure the description is worded well enough to be understood, see https://github.com/ytdl-org/youtube-dl#is-the-description-of-the-issue-itself-sufficient. Provide any additional information, suggested solution and as much context and examples as possible.\n-->\n\nWRITE DESCRIPTION HERE\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": ".github/ISSUE_TEMPLATE/4_bug_report.md", "size": 2837, "license": "Unlicense", "content_sha": "af73525fbc91df62cc00b34494c65acbf37550a4", "findings": [], "content": "---\nname: Bug report\nabout: Report a bug unrelated to any particular site or extractor\ntitle: ''\n---\n\n<!--\n\n######################################################################\n  WARNING!\n  IGNORING THE FOLLOWING TEMPLATE WILL RESULT IN ISSUE CLOSED AS INCOMPLETE\n######################################################################\n\n-->\n\n\n## Checklist\n\n<!--\nCarefully read and work through this check list in order to prevent the most common mistakes and misuse of youtube-dl:\n- First of, make sure you are using the latest version of youtube-dl. Run `youtube-dl --version` and ensure your version is 2021.12.17. If it's not, see https://yt-dl.org/update on how to update. Issues with outdated version will be REJECTED.\n- Make sure that all provided video/audio/playlist URLs (if any) are alive and playable in a browser.\n- Make sure that all URLs and arguments with special characters are properly quoted or escaped as explained in http://yt-dl.org/escape.\n- Search the bugtracker for similar issues: http://yt-dl.org/search-issues. DO NOT post duplicates.\n- Read bugs section in FAQ: http://yt-dl.org/reporting\n- Finally, put x into all relevant boxes (like this [x])\n-->\n\n- [ ] I'm reporting a broken site support issue\n- [ ] I've verified that I'm running youtube-dl version **2021.12.17**\n- [ ] I've checked that all provided URLs are alive and playable in a browser\n- [ ] I've checked that all URLs and arguments with special characters are properly quoted or escaped\n- [ ] I've searched the bugtracker for similar bug reports including closed ones\n- [ ] I've read bugs section in FAQ\n\n\n## Verbose log\n\n<!--\nProvide the complete verbose output of youtube-dl that clearly demonstrates the problem.\nAdd the `-v` flag to your command line you run youtube-dl with (`youtube-dl -v <your command line>`), copy the WHOLE output and insert it below. It should look similar to this:\n [debug] System config: []\n [debug] User config: []\n [debug] Command-line args: [u'-v', u'http://www.youtube.com/watch?v=BaW_jenozKcj']\n [debug] Encodings: locale cp1251, fs mbcs, out cp866, pref cp1251\n [debug] youtube-dl version 2021.12.17\n [debug] Python version 2.7.11 - Windows-2003Server-5.2.3790-SP2\n [debug] exe versions: ffmpeg N-75573-g1d0487f, ffprobe N-75573-g1d0487f, rtmpdump 2.4\n [debug] Proxy map: {}\n <more lines>\n-->\n\n```\nPASTE VERBOSE LOG HERE\n```\n\n\n## Description\n\n<!--\nProvide an explanation of your issue in an arbitrary form. Please make sure the description is worded well enough to be understood, see https://github.com/ytdl-org/youtube-dl#is-the-description-of-the-issue-itself-sufficient. Provide any additional information, suggested solution and as much context and examples as possible.\nIf work on your issue requires account credentials please provide them or explain how one can obtain them.\n-->\n\nWRITE DESCRIPTION HERE\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": ".github/ISSUE_TEMPLATE/5_feature_request.md", "size": 1508, "license": "Unlicense", "content_sha": "42c878b83af2da637ca52886db2cafbf2f874099", "findings": [], "content": "---\nname: Feature request\nabout: Request a new functionality unrelated to any particular site or extractor\ntitle: ''\nlabels: 'request'\n---\n\n<!--\n\n######################################################################\n  WARNING!\n  IGNORING THE FOLLOWING TEMPLATE WILL RESULT IN ISSUE CLOSED AS INCOMPLETE\n######################################################################\n\n-->\n\n\n## Checklist\n\n<!--\nCarefully read and work through this check list in order to prevent the most common mistakes and misuse of youtube-dl:\n- First of, make sure you are using the latest version of youtube-dl. Run `youtube-dl --version` and ensure your version is 2021.12.17. If it's not, see https://yt-dl.org/update on how to update. Issues with outdated version will be REJECTED.\n- Search the bugtracker for similar feature requests: http://yt-dl.org/search-issues. DO NOT post duplicates.\n- Finally, put x into all relevant boxes (like this [x])\n-->\n\n- [ ] I'm reporting a feature request\n- [ ] I've verified that I'm running youtube-dl version **2021.12.17**\n- [ ] I've searched the bugtracker for similar feature requests including closed ones\n\n\n## Description\n\n<!--\nProvide an explanation of your issue in an arbitrary form. Please make sure the description is worded well enough to be understood, see https://github.com/ytdl-org/youtube-dl#is-the-description-of-the-issue-itself-sufficient. Provide any additional information, suggested solution and as much context and examples as possible.\n-->\n\nWRITE DESCRIPTION HERE\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": ".github/ISSUE_TEMPLATE/6_question.md", "size": 1133, "license": "Unlicense", "content_sha": "1fd7cd5dc63a8ee64c338cc8f88dccc1642266a5", "findings": [], "content": "---\nname: Ask question\nabout: Ask youtube-dl related question\ntitle: ''\nlabels: 'question'\n---\n\n<!--\n\n######################################################################\n  WARNING!\n  IGNORING THE FOLLOWING TEMPLATE WILL RESULT IN ISSUE CLOSED AS INCOMPLETE\n######################################################################\n\n-->\n\n\n## Checklist\n\n<!--\nCarefully read and work through this check list in order to prevent the most common mistakes and misuse of youtube-dl:\n- Look through the README (http://yt-dl.org/readme) and FAQ (http://yt-dl.org/faq) for similar questions\n- Search the bugtracker for similar questions: http://yt-dl.org/search-issues\n- Finally, put x into all relevant boxes (like this [x])\n-->\n\n- [ ] I'm asking a question\n- [ ] I've looked through the README and FAQ for similar questions\n- [ ] I've searched the bugtracker for similar questions including closed ones\n\n\n## Question\n\n<!--\nAsk your question in an arbitrary form. Please make sure it's worded well enough to be understood, see https://github.com/ytdl-org/youtube-dl#is-the-description-of-the-issue-itself-sufficient.\n-->\n\nWRITE QUESTION HERE\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": ".github/ISSUE_TEMPLATE_tmpl/1_broken_site.md", "size": 2558, "license": "Unlicense", "content_sha": "c7600d5b55ef46eca44fe2b84f70aa95eaea11c7", "findings": [], "content": "---\nname: Broken site support\nabout: Report broken or misfunctioning site\ntitle: ''\n---\n\n<!--\n\n######################################################################\n  WARNING!\n  IGNORING THE FOLLOWING TEMPLATE WILL RESULT IN ISSUE CLOSED AS INCOMPLETE\n######################################################################\n\n-->\n\n\n## Checklist\n\n<!--\nCarefully read and work through this check list in order to prevent the most common mistakes and misuse of youtube-dl:\n- First of, make sure you are using the latest version of youtube-dl. Run `youtube-dl --version` and ensure your version is %(version)s. If it's not, see https://yt-dl.org/update on how to update. Issues with outdated version will be REJECTED.\n- Make sure that all provided video/audio/playlist URLs (if any) are alive and playable in a browser.\n- Make sure that all URLs and arguments with special characters are properly quoted or escaped as explained in http://yt-dl.org/escape.\n- Search the bugtracker for similar issues: http://yt-dl.org/search-issues. DO NOT post duplicates.\n- Finally, put x into all relevant boxes (like this [x])\n-->\n\n- [ ] I'm reporting a broken site support\n- [ ] I've verified that I'm running youtube-dl version **%(version)s**\n- [ ] I've checked that all provided URLs are alive and playable in a browser\n- [ ] I've checked that all URLs and arguments with special characters are properly quoted or escaped\n- [ ] I've searched the bugtracker for similar issues including closed ones\n\n\n## Verbose log\n\n<!--\nProvide the complete verbose output of youtube-dl that clearly demonstrates the problem.\nAdd the `-v` flag to your command line you run youtube-dl with (`youtube-dl -v <your command line>`), copy the WHOLE output and insert it below. It should look similar to this:\n [debug] System config: []\n [debug] User config: []\n [debug] Command-line args: [u'-v', u'http://www.youtube.com/watch?v=BaW_jenozKcj']\n [debug] Encodings: locale cp1251, fs mbcs, out cp866, pref cp1251\n [debug] youtube-dl version %(version)s\n [debug] Python version 2.7.11 - Windows-2003Server-5.2.3790-SP2\n [debug] exe versions: ffmpeg N-75573-g1d0487f, ffprobe N-75573-g1d0487f, rtmpdump 2.4\n [debug] Proxy map: {}\n <more lines>\n-->\n\n```\nPASTE VERBOSE LOG HERE\n```\n\n\n## Description\n\n<!--\nProvide an explanation of your issue in an arbitrary form. Provide any additional information, suggested solution and as much context and examples as possible.\nIf work on your issue requires account credentials please provide them or explain how one can obtain them.\n-->\n\nWRITE DESCRIPTION HERE\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": ".github/ISSUE_TEMPLATE_tmpl/2_site_support_request.md", "size": 2182, "license": "Unlicense", "content_sha": "d4988e6390dc7724c760a29d7aa62f6e990ca28b", "findings": [], "content": "---\nname: Site support request\nabout: Request support for a new site\ntitle: ''\nlabels: 'site-support-request'\n---\n\n<!--\n\n######################################################################\n  WARNING!\n  IGNORING THE FOLLOWING TEMPLATE WILL RESULT IN ISSUE CLOSED AS INCOMPLETE\n######################################################################\n\n-->\n\n\n## Checklist\n\n<!--\nCarefully read and work through this check list in order to prevent the most common mistakes and misuse of youtube-dl:\n- First of, make sure you are using the latest version of youtube-dl. Run `youtube-dl --version` and ensure your version is %(version)s. If it's not, see https://yt-dl.org/update on how to update. Issues with outdated version will be REJECTED.\n- Make sure that all provided video/audio/playlist URLs (if any) are alive and playable in a browser.\n- Make sure that site you are requesting is not dedicated to copyright infringement, see https://yt-dl.org/copyright-infringement. youtube-dl does not support such sites. In order for site support request to be accepted all provided example URLs should not violate any copyrights.\n- Search the bugtracker for similar site support requests: http://yt-dl.org/search-issues. DO NOT post duplicates.\n- Finally, put x into all relevant boxes (like this [x])\n-->\n\n- [ ] I'm reporting a new site support request\n- [ ] I've verified that I'm running youtube-dl version **%(version)s**\n- [ ] I've checked that all provided URLs are alive and playable in a browser\n- [ ] I've checked that none of provided URLs violate any copyrights\n- [ ] I've searched the bugtracker for similar site support requests including closed ones\n\n\n## Example URLs\n\n<!--\nProvide all kinds of example URLs support for which should be included. Replace following example URLs by yours.\n-->\n\n- Single video: https://www.youtube.com/watch?v=BaW_jenozKc\n- Single video: https://youtu.be/BaW_jenozKc\n- Playlist: https://www.youtube.com/playlist?list=PL4lCao7KL_QFVb7Iudeipvc2BCavECqzc\n\n\n## Description\n\n<!--\nProvide any additional information.\nIf work on your issue requires account credentials please provide them or explain how one can obtain them.\n-->\n\nWRITE DESCRIPTION HERE\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": ".github/ISSUE_TEMPLATE_tmpl/3_site_feature_request.md", "size": 1492, "license": "Unlicense", "content_sha": "65f0a32f3cd7a31c374e0aec206985c1def2b8a6", "findings": [], "content": "---\nname: Site feature request\nabout: Request a new functionality for a site\ntitle: ''\n---\n\n<!--\n\n######################################################################\n  WARNING!\n  IGNORING THE FOLLOWING TEMPLATE WILL RESULT IN ISSUE CLOSED AS INCOMPLETE\n######################################################################\n\n-->\n\n\n## Checklist\n\n<!--\nCarefully read and work through this check list in order to prevent the most common mistakes and misuse of youtube-dl:\n- First of, make sure you are using the latest version of youtube-dl. Run `youtube-dl --version` and ensure your version is %(version)s. If it's not, see https://yt-dl.org/update on how to update. Issues with outdated version will be REJECTED.\n- Search the bugtracker for similar site feature requests: http://yt-dl.org/search-issues. DO NOT post duplicates.\n- Finally, put x into all relevant boxes (like this [x])\n-->\n\n- [ ] I'm reporting a site feature request\n- [ ] I've verified that I'm running youtube-dl version **%(version)s**\n- [ ] I've searched the bugtracker for similar site feature requests including closed ones\n\n\n## Description\n\n<!--\nProvide an explanation of your site feature request in an arbitrary form. Please make sure the description is worded well enough to be understood, see https://github.com/ytdl-org/youtube-dl#is-the-description-of-the-issue-itself-sufficient. Provide any additional information, suggested solution and as much context and examples as possible.\n-->\n\nWRITE DESCRIPTION HERE\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": ".github/ISSUE_TEMPLATE_tmpl/4_bug_report.md", "size": 2840, "license": "Unlicense", "content_sha": "41fb14b721db9c11a3322bd1bd784de96531e904", "findings": [], "content": "---\nname: Bug report\nabout: Report a bug unrelated to any particular site or extractor\ntitle: ''\n---\n\n<!--\n\n######################################################################\n  WARNING!\n  IGNORING THE FOLLOWING TEMPLATE WILL RESULT IN ISSUE CLOSED AS INCOMPLETE\n######################################################################\n\n-->\n\n\n## Checklist\n\n<!--\nCarefully read and work through this check list in order to prevent the most common mistakes and misuse of youtube-dl:\n- First of, make sure you are using the latest version of youtube-dl. Run `youtube-dl --version` and ensure your version is %(version)s. If it's not, see https://yt-dl.org/update on how to update. Issues with outdated version will be REJECTED.\n- Make sure that all provided video/audio/playlist URLs (if any) are alive and playable in a browser.\n- Make sure that all URLs and arguments with special characters are properly quoted or escaped as explained in http://yt-dl.org/escape.\n- Search the bugtracker for similar issues: http://yt-dl.org/search-issues. DO NOT post duplicates.\n- Read bugs section in FAQ: http://yt-dl.org/reporting\n- Finally, put x into all relevant boxes (like this [x])\n-->\n\n- [ ] I'm reporting a broken site support issue\n- [ ] I've verified that I'm running youtube-dl version **%(version)s**\n- [ ] I've checked that all provided URLs are alive and playable in a browser\n- [ ] I've checked that all URLs and arguments with special characters are properly quoted or escaped\n- [ ] I've searched the bugtracker for similar bug reports including closed ones\n- [ ] I've read bugs section in FAQ\n\n\n## Verbose log\n\n<!--\nProvide the complete verbose output of youtube-dl that clearly demonstrates the problem.\nAdd the `-v` flag to your command line you run youtube-dl with (`youtube-dl -v <your command line>`), copy the WHOLE output and insert it below. It should look similar to this:\n [debug] System config: []\n [debug] User config: []\n [debug] Command-line args: [u'-v', u'http://www.youtube.com/watch?v=BaW_jenozKcj']\n [debug] Encodings: locale cp1251, fs mbcs, out cp866, pref cp1251\n [debug] youtube-dl version %(version)s\n [debug] Python version 2.7.11 - Windows-2003Server-5.2.3790-SP2\n [debug] exe versions: ffmpeg N-75573-g1d0487f, ffprobe N-75573-g1d0487f, rtmpdump 2.4\n [debug] Proxy map: {}\n <more lines>\n-->\n\n```\nPASTE VERBOSE LOG HERE\n```\n\n\n## Description\n\n<!--\nProvide an explanation of your issue in an arbitrary form. Please make sure the description is worded well enough to be understood, see https://github.com/ytdl-org/youtube-dl#is-the-description-of-the-issue-itself-sufficient. Provide any additional information, suggested solution and as much context and examples as possible.\nIf work on your issue requires account credentials please provide them or explain how one can obtain them.\n-->\n\nWRITE DESCRIPTION HERE\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": ".github/ISSUE_TEMPLATE_tmpl/5_feature_request.md", "size": 1510, "license": "Unlicense", "content_sha": "b3431a7f017ec9ee94bd8735c68183df0233175e", "findings": [], "content": "---\nname: Feature request\nabout: Request a new functionality unrelated to any particular site or extractor\ntitle: ''\nlabels: 'request'\n---\n\n<!--\n\n######################################################################\n  WARNING!\n  IGNORING THE FOLLOWING TEMPLATE WILL RESULT IN ISSUE CLOSED AS INCOMPLETE\n######################################################################\n\n-->\n\n\n## Checklist\n\n<!--\nCarefully read and work through this check list in order to prevent the most common mistakes and misuse of youtube-dl:\n- First of, make sure you are using the latest version of youtube-dl. Run `youtube-dl --version` and ensure your version is %(version)s. If it's not, see https://yt-dl.org/update on how to update. Issues with outdated version will be REJECTED.\n- Search the bugtracker for similar feature requests: http://yt-dl.org/search-issues. DO NOT post duplicates.\n- Finally, put x into all relevant boxes (like this [x])\n-->\n\n- [ ] I'm reporting a feature request\n- [ ] I've verified that I'm running youtube-dl version **%(version)s**\n- [ ] I've searched the bugtracker for similar feature requests including closed ones\n\n\n## Description\n\n<!--\nProvide an explanation of your issue in an arbitrary form. Please make sure the description is worded well enough to be understood, see https://github.com/ytdl-org/youtube-dl#is-the-description-of-the-issue-itself-sufficient. Provide any additional information, suggested solution and as much context and examples as possible.\n-->\n\nWRITE DESCRIPTION HERE\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": ".github/PULL_REQUEST_TEMPLATE.md", "size": 1783, "license": "Unlicense", "content_sha": "892cea0a34002f11501c4d147c372a1c01c9455d", "findings": [], "content": "## Please follow the guide below\n\n- You will be asked some questions, please read them **carefully** and answer honestly\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\n- Use *Preview* tab to see how your *pull request* will actually look like\n\n---\n\n### Before submitting a *pull request* make sure you have:\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\n\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\n\n### What is the purpose of your *pull request*?\n- [ ] Bug fix\n- [ ] Improvement\n- [ ] New extractor\n- [ ] New feature\n\n---\n\n### Description of your *pull request* and other information\n\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": "CONTRIBUTING.md", "size": 22864, "license": "Unlicense", "content_sha": "ff40cef784f7a188b2ee01c45b4260ad80dd1604", "findings": [{"type": "pii_email", "matches": ["git@github.com"]}], "content": "**Please include the full output of youtube-dl when run with `-v`**, i.e. **add** `-v` flag to **your command line**, copy the **whole** output and post it in the issue body wrapped in \\`\\`\\` for better formatting. It should look similar to this:\n```\n$ youtube-dl -v <your command line>\n[debug] System config: []\n[debug] User config: []\n[debug] Command-line args: [u'-v', u'https://www.youtube.com/watch?v=BaW_jenozKcj']\n[debug] Encodings: locale cp1251, fs mbcs, out cp866, pref cp1251\n[debug] youtube-dl version 2015.12.06\n[debug] Git HEAD: 135392e\n[debug] Python version 2.6.6 - Windows-2003Server-5.2.3790-SP2\n[debug] exe versions: ffmpeg N-75573-g1d0487f, ffprobe N-75573-g1d0487f, rtmpdump 2.4\n[debug] Proxy map: {}\n...\n```\n**Do not post screenshots of verbose logs; only plain text is acceptable.**\n\nThe output (including the first lines) contains important debugging information. Issues without the full output are often not reproducible and therefore do not get solved in short order, if ever.\n\nPlease re-read your issue once again to avoid a couple of common mistakes (you can and should use this as a checklist):\n\n### Is the description of the issue itself sufficient?\n\nWe often get issue reports that we cannot really decipher. While in most cases we eventually get the required information after asking back multiple times, this poses an unnecessary drain on our resources. Many contributors, including myself, are also not native speakers, so we may misread some parts.\n\nSo please elaborate on what feature you are requesting, or what bug you want to be fixed. Make sure that it's obvious\n\n- What the problem is\n- How it could be fixed\n- How your proposed solution would look like\n\nIf your report is shorter than two lines, it is almost certainly missing some of these, which makes it hard for us to respond to it. We're often too polite to close the issue outright, but the missing info makes misinterpretation likely. As a committer myself, I often get frustrated by these issues, since the only possible way for me to move forward on them is to ask for clarification over and over.\n\nFor bug reports, this means that your report should contain the *complete* output of youtube-dl when called with the `-v` flag. The error message you get for (most) bugs even says so, but you would not believe how many of our bug reports do not contain this information.\n\nIf your server has multiple IPs or you suspect censorship, adding `--call-home` may be a good idea to get more diagnostics. If the error is `ERROR: Unable to extract ...` and you cannot reproduce it from multiple countries, add `--dump-pages` (warning: this will yield a rather large output, redirect it to the file `log.txt` by adding `>log.txt 2>&1` to your command-line) or upload the `.dump` files you get when you add `--write-pages` [somewhere](https://gist.github.com/).\n\n**Site support requests must contain an example URL**. An example URL is a URL you might want to download, like `https://www.youtube.com/watch?v=BaW_jenozKc`. There should be an obvious video present. Except under very special circumstances, the main page of a video service (e.g. `https://www.youtube.com/`) is *not* an example URL.\n\n###  Are you using the latest version?\n\nBefore reporting any issue, type `youtube-dl -U`. This should report that you're up-to-date. About 20% of the reports we receive are already fixed, but people are using outdated versions. This goes for feature requests as well.\n\n###  Is the issue already documented?\n\nMake sure that someone has not already opened the issue you're trying to open. Search at the top of the window or browse the [GitHub Issues](https://github.com/ytdl-org/youtube-dl/search?type=Issues) of this repository. If there is an issue, feel free to write something along the lines of \"This affects me as well, with version 2015.01.01. Here is some more information on the issue: ...\". While some issues may be old, a new post into them often spurs rapid activity.\n\n###  Why are existing options not enough?\n\nBefore requesting a new feature, please have a quick peek at [the list of supported options](https://github.com/ytdl-org/youtube-dl/blob/master/README.md#options). Many feature requests are for features that actually exist already! Please, absolutely do show off your work in the issue report and detail how the existing similar options do *not* solve your problem.\n\n###  Is there enough context in your bug report?\n\nPeople want to solve problems, and often think they do us a favor by breaking down their larger problems (e.g. wanting to skip already downloaded files) to a specific request (e.g. requesting us to look whether the file exists before downloading the info page). However, what often happens is that they break down the problem into two steps: One simple, and one impossible (or extremely complicated one).\n\nWe are then presented with a very complicated request when the original problem could be solved far easier, e.g. by recording the downloaded video IDs in a separate file. To avoid this, you must include the greater context where it is non-obvious. In particular, every feature request that does not consist of adding support for a new site should contain a use case scenario that explains in what situation the missing feature would be useful.\n\n###  Does the issue involve one problem, and one problem only?\n\nSome of our users seem to think there is a limit of issues they can or should open. There is no limit of issues they can or should open. While it may seem appealing to be able to dump all your issues into one ticket, that means that someone who solves one of your issues cannot mark the issue as closed. Typically, reporting a bunch of issues leads to the ticket lingering since nobody wants to attack that behemoth, until someone mercifully splits the issue into multiple ones.\n\nIn particular, every site support request issue should only pertain to services at one site (generally under a common domain, but always using the same backend technology). Do not request support for vimeo user videos, White house podcasts, and Google Plus pages in the same issue. Also, make sure that you don't post bug reports alongside feature requests. As a rule of thumb, a feature request does not include outputs of youtube-dl that are not immediately related to the feature at hand. Do not post reports of a network error alongside the request for a new video service.\n\n###  Is anyone going to need the feature?\n\nOnly post features that you (or an incapacitated friend you can personally talk to) require. Do not post features because they seem like a good idea. If they are really useful, they will be requested by someone who requires them.\n\n###  Is your question about youtube-dl?\n\nIt may sound strange, but some bug reports we receive are completely unrelated to youtube-dl and relate to a different, or even the reporter's own, application. Please make sure that you are actually using youtube-dl. If you are using a UI for youtube-dl, report the bug to the maintainer of the actual application providing the UI. On the other hand, if your UI for youtube-dl fails in some way you believe is related to youtube-dl, by all means, go ahead and report the bug.\n\n# DEVELOPER INSTRUCTIONS\n\nMost users do not need to build youtube-dl and can [download the builds](https://ytdl-org.github.io/youtube-dl/download.html) or get them from their distribution.\n\nTo run youtube-dl as a developer, you don't need to build anything either. Simply execute\n\n    python -m youtube_dl\n\nTo run the test, simply invoke your favorite test runner, or execute a test file directly; any of the following work:\n\n    python -m unittest discover\n    python test/test_download.py\n    nosetests\n\nSee item 6 of [new extractor tutorial](#adding-support-for-a-new-site) for how to run extractor specific test cases.\n\nIf you want to create a build of youtube-dl yourself, you'll need\n\n* python\n* make (only GNU make is supported)\n* pandoc\n* zip\n* nosetests\n\n### Adding support for a new site\n\nIf you want to add support for a new site, first of all **make sure** this site is **not dedicated to [copyright infringement](README.md#can-you-add-support-for-this-anime-video-site-or-site-which-shows-current-movies-for-free)**. youtube-dl does **not support** such sites thus pull requests adding support for them **will be rejected**.\n\nAfter you have ensured this site is distributing its content legally, you can follow this quick list (assuming your service is called `yourextractor`):\n\n1. [Fork this repository](https://github.com/ytdl-org/youtube-dl/fork)\n2. Check out the source code with:\n\n        git clone git@github.com:YOUR_GITHUB_USERNAME/youtube-dl.git\n\n3. Start a new git branch with\n\n        cd youtube-dl\n        git checkout -b yourextractor\n\n4. Start with this simple template and save it to `youtube_dl/extractor/yourextractor.py`:\n\n    ```python\n    # coding: utf-8\n    from __future__ import unicode_literals\n\n    from .common import InfoExtractor\n\n\n    class YourExtractorIE(InfoExtractor):\n        _VALID_URL = r'https?://(?:www\\.)?yourextractor\\.com/watch/(?P<id>[0-9]+)'\n        _TEST = {\n            'url': 'https://yourextractor.com/watch/42',\n            'md5': 'TODO: md5 sum of the first 10241 bytes of the video file (use --test)',\n            'info_dict': {\n                'id': '42',\n                'ext': 'mp4',\n                'title': 'Video title goes here',\n                'thumbnail': r're:^https?://.*\\.jpg$',\n                # TODO more properties, either as:\n                # * A value\n                # * MD5 checksum; start the string with md5:\n                # * A regular expression; start the string with re:\n                # * Any Python type (for example int or float)\n            }\n        }\n\n        def _real_extract(self, url):\n            video_id = self._match_id(url)\n            webpage = self._download_webpage(url, video_id)\n\n            # TODO more code goes here, for example ...\n            title = self._html_search_regex(r'<h1>(.+?)</h1>', webpage, 'title')\n\n            return {\n                'id': video_id,\n                'title': title,\n                'description': self._og_search_description(webpage),\n                'uploader': self._search_regex(r'<div[^>]+id=\"uploader\"[^>]*>([^<]+)<', webpage, 'uploader', fatal=False),\n                # TODO more properties (see youtube_dl/extractor/common.py)\n            }\n    ```\n5. Add an import in [`youtube_dl/extractor/extractors.py`](https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/extractors.py). This makes the extractor available for use, as long as the class ends with `IE`.\n6. Run `python test/test_download.py TestDownload.test_YourExtractor`. This *should fail* at first, but you can continually re-run it until you're done. If you decide to add more than one test, then rename ``_TEST`` to ``_TESTS`` and make it into a list of dictionaries. The tests will then be named `TestDownload.test_YourExtractor`, `TestDownload.test_YourExtractor_1`, `TestDownload.test_YourExtractor_2`, etc. Note that tests with `only_matching` key in test's dict are not counted in.\n7. Have a look at [`youtube_dl/extractor/common.py`](https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/common.py) for possible helper methods and a [detailed description of what your extractor should and may return](https://github.com/ytdl-org/youtube-dl/blob/7f41a598b3fba1bcab2817de64a08941200aa3c8/youtube_dl/extractor/common.py#L94-L303). Add tests and code for as many as you want.\n8. Make sure your code follows [youtube-dl coding conventions](#youtube-dl-coding-conventions) and check the code with [flake8](https://flake8.pycqa.org/en/latest/index.html#quickstart):\n\n        $ flake8 youtube_dl/extractor/yourextractor.py\n\n9. Make sure your code works under all [Python](https://www.python.org/) versions claimed supported by youtube-dl, namely 2.6, 2.7, and 3.2+.\n10. When the tests pass, [add](https://git-scm.com/docs/git-add) the new files and [commit](https://git-scm.com/docs/git-commit) them and [push](https://git-scm.com/docs/git-push) the result, like this:\n\n        $ git add youtube_dl/extractor/extractors.py\n        $ git add youtube_dl/extractor/yourextractor.py\n        $ git commit -m '[yourextractor] Add new extractor'\n        $ git push origin yourextractor\n\n11. Finally, [create a pull request](https://help.github.com/articles/creating-a-pull-request). We'll then review and merge it.\n\nIn any case, thank you very much for your contributions!\n\n## youtube-dl coding conventions\n\nThis section introduces a guide lines for writing idiomatic, robust and future-proof extractor code.\n\nExtractors are very fragile by nature since they depend on the layout of the source data provided by 3rd party media hosters out of your control and this layout tends to change. As an extractor implementer your task is not only to write code that will extract media links and metadata correctly but also to minimize dependency on the source's layout and even to make the code foresee potential future changes and be ready for that. This is important because it will allow the extractor not to break on minor layout changes thus keeping old youtube-dl versions working. Even though this breakage issue is easily fixed by emitting a new version of youtube-dl with a fix incorporated, all the previous versions become broken in all repositories and distros' packages that may not be so prompt in fetching the update from us. Needless to say, some non rolling release distros may never receive an update at all.\n\n### Mandatory and optional metafields\n\nFor extraction to work youtube-dl relies on metadata your extractor extracts and provides to youtube-dl expressed by an [information dictionary](https://github.com/ytdl-org/youtube-dl/blob/7f41a598b3fba1bcab2817de64a08941200aa3c8/youtube_dl/extractor/common.py#L94-L303) or simply *info dict*. Only the following meta fields in the *info dict* are considered mandatory for a successful extraction process by youtube-dl:\n\n - `id` (media identifier)\n - `title` (media title)\n - `url` (media download URL) or `formats`\n\nIn fact only the last option is technically mandatory (i.e. if you can't figure out the download location of the media the extraction does not make any sense). But by convention youtube-dl also treats `id` and `title` as mandatory. Thus the aforementioned metafields are the critical data that the extraction does not make any sense without and if any of them fail to be extracted then the extractor is considered completely broken.\n\n[Any field](https://github.com/ytdl-org/youtube-dl/blob/7f41a598b3fba1bcab2817de64a08941200aa3c8/youtube_dl/extractor/common.py#L188-L303) apart from the aforementioned ones are considered **optional**. That means that extraction should be **tolerant** to situations when sources for these fields can potentially be unavailable (even if they are always available at the moment) and **future-proof** in order not to break the extraction of general purpose mandatory fields.\n\n#### Example\n\nSay you have some source dictionary `meta` that you've fetched as JSON with HTTP request and it has a key `summary`:\n\n```python\nmeta = self._download_json(url, video_id)\n```\n    \nAssume at this point `meta`'s layout is:\n\n```python\n{\n    ...\n    \"summary\": \"some fancy summary text\",\n    ...\n}\n```\n\nAssume you want to extract `summary` and put it into the resulting info dict as `description`. Since `description` is an optional meta field you should be ready that this key may be missing from the `meta` dict, so that you should extract it like:\n\n```python\ndescription = meta.get('summary')  # correct\n```\n\nand not like:\n\n```python\ndescription = meta['summary']  # incorrect\n```\n\nThe latter will break extraction process with `KeyError` if `summary` disappears from `meta` at some later time but with the former approach extraction will just go ahead with `description` set to `None` which is perfectly fine (remember `None` is equivalent to the absence of data).\n\nSimilarly, you should pass `fatal=False` when extracting optional data from a webpage with `_search_regex`, `_html_search_regex` or similar methods, for instance:\n\n```python\ndescription = self._search_regex(\n    r'<span[^>]+id=\"title\"[^>]*>([^<]+)<',\n    webpage, 'description', fatal=False)\n```\n\nWith `fatal` set to `False` if `_search_regex` fails to extract `description` it will emit a warning and continue extraction.\n\nYou can also pass `default=<some fallback value>`, for example:\n\n```python\ndescription = self._search_regex(\n    r'<span[^>]+id=\"title\"[^>]*>([^<]+)<',\n    webpage, 'description', default=None)\n```\n\nOn failure this code will silently continue the extraction with `description` set to `None`. That is useful for metafields that may or may not be present.\n \n### Provide fallbacks\n\nWhen extracting metadata try to do so from multiple sources. For example if `title` is present in several places, try extracting from at least some of them. This makes it more future-proof in case some of the sources become unavailable.\n\n#### Example\n\nSay `meta` from the previous example has a `title` and you are about to extract it. Since `title` is a mandatory meta field you should end up with something like:\n\n```python\ntitle = meta['title']\n```\n\nIf `title` disappears from `meta` in future due to some changes on the hoster's side the extraction would fail since `title` is mandatory. That's expected.\n\nAssume that you have some another source you can extract `title` from, for example `og:title` HTML meta of a `webpage`. In this case you can provide a fallback scenario:\n\n```python\ntitle = meta.get('title') or self._og_search_title(webpage)\n```\n\nThis code will try to extract from `meta` first and if it fails it will try extracting `og:title` from a `webpage`.\n\n### Regular expressions\n\n#### Don't capture groups you don't use\n\nCapturing group must be an indication that it's used somewhere in the code. Any group that is not used must be non capturing.\n\n##### Example\n\nDon't capture id attribute name here since you can't use it for anything anyway.\n\nCorrect:\n\n```python\nr'(?:id|ID)=(?P<id>\\d+)'\n```\n\nIncorrect:\n```python\nr'(id|ID)=(?P<id>\\d+)'\n```\n\n\n#### Make regular expressions relaxed and flexible\n\nWhen using regular expressions try to write them fuzzy, relaxed and flexible, skipping insignificant parts that are more likely to change, allowing both single and double quotes for quoted values and so on.\n \n##### Example\n\nSay you need to extract `title` from the following HTML code:\n\n```html\n<span style=\"position: absolute; left: 910px; width: 90px; float: right; z-index: 9999;\" class=\"title\">some fancy title</span>\n```\n\nThe code for that task should look similar to:\n\n```python\ntitle = self._search_regex(\n    r'<span[^>]+class=\"title\"[^>]*>([^<]+)', webpage, 'title')\n```\n\nOr even better:\n\n```python\ntitle = self._search_regex(\n    r'<span[^>]+class=([\"\\'])title\\1[^>]*>(?P<title>[^<]+)',\n    webpage, 'title', group='title')\n```\n\nNote how you tolerate potential changes in the `style` attribute's value or switch from using double quotes to single for `class` attribute: \n\nThe code definitely should not look like:\n\n```python\ntitle = self._search_regex(\n    r'<span style=\"position: absolute; left: 910px; width: 90px; float: right; z-index: 9999;\" class=\"title\">(.*?)</span>',\n    webpage, 'title', group='title')\n```\n\n### Long lines policy\n\nThere is a soft limit to keep lines of code under 80 characters long. This means it should be respected if possible and if it does not make readability and code maintenance worse.\n\nFor example, you should **never** split long string literals like URLs or some other often copied entities over multiple lines to fit this limit:\n\nCorrect:\n\n```python\n'https://www.youtube.com/watch?v=FqZTN594JQw&list=PLMYEtVRpaqY00V9W81Cwmzp6N6vZqfUKD4'\n```\n\nIncorrect:\n\n```python\n'https://www.youtube.com/watch?v=FqZTN594JQw&list='\n'PLMYEtVRpaqY00V9W81Cwmzp6N6vZqfUKD4'\n```\n\n### Inline values\n\nExtracting variables is acceptable for reducing code duplication and improving readability of complex expressions. However, you should avoid extracting variables used only once and moving them to opposite parts of the extractor file, which makes reading the linear flow difficult.\n\n#### Example\n\nCorrect:\n\n```python\ntitle = self._html_search_regex(r'<title>([^<]+)</title>', webpage, 'title')\n```\n\nIncorrect:\n\n```python\nTITLE_RE = r'<title>([^<]+)</title>'\n# ...some lines of code...\ntitle = self._html_search_regex(TITLE_RE, webpage, 'title')\n```\n\n### Collapse fallbacks\n\nMultiple fallback values can quickly become unwieldy. Collapse multiple fallback values into a single expression via a list of patterns.\n\n#### Example\n\nGood:\n\n```python\ndescription = self._html_search_meta(\n    ['og:description', 'description', 'twitter:description'],\n    webpage, 'description', default=None)\n```\n\nUnwieldy:\n\n```python\ndescription = (\n    self._og_search_description(webpage, default=None)\n    or self._html_search_meta('description', webpage, default=None)\n    or self._html_search_meta('twitter:description', webpage, default=None))\n```\n\nMethods supporting list of patterns are: `_search_regex`, `_html_search_regex`, `_og_search_property`, `_html_search_meta`.\n\n### Trailing parentheses\n\nAlways move trailing parentheses after the last argument.\n\n#### Example\n\nCorrect:\n\n```python\n    lambda x: x['ResultSet']['Result'][0]['VideoUrlSet']['VideoUrl'],\n    list)\n```\n\nIncorrect:\n\n```python\n    lambda x: x['ResultSet']['Result'][0]['VideoUrlSet']['VideoUrl'],\n    list,\n)\n```\n\n### Use convenience conversion and parsing functions\n\nWrap all extracted numeric data into safe functions from [`youtube_dl/utils.py`](https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/utils.py): `int_or_none`, `float_or_none`. Use them for string to number conversions as well.\n\nUse `url_or_none` for safe URL processing.\n\nUse `try_get` for safe metadata extraction from parsed JSON.\n\nUse `unified_strdate` for uniform `upload_date` or any `YYYYMMDD` meta field extraction, `unified_timestamp` for uniform `timestamp` extraction, `parse_filesize` for `filesize` extraction, `parse_count` for count meta fields extraction, `parse_resolution`, `parse_duration` for `duration` extraction, `parse_age_limit` for `age_limit` extraction. \n\nExplore [`youtube_dl/utils.py`](https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/utils.py) for more useful convenience functions.\n\n#### More examples\n\n##### Safely extract optional description from parsed JSON\n```python\ndescription = try_get(response, lambda x: x['result']['video'][0]['summary'], compat_str)\n```\n\n##### Safely extract more optional metadata\n```python\nvideo = try_get(response, lambda x: x['result']['video'][0], dict) or {}\ndescription = video.get('summary')\nduration = float_or_none(video.get('durationMs'), scale=1000)\nview_count = int_or_none(video.get('views'))\n```\n\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": "README.md", "size": 101042, "license": "Unlicense", "content_sha": "47e686f845c5b28aced9878debf0eaef19d5d5cc", "findings": [{"type": "pii_email", "matches": ["myaccount@gmail.com", "git@github.com", "ubuntu-motu@lists.ubuntu.com"]}], "content": "[![Build Status](https://github.com/ytdl-org/youtube-dl/workflows/CI/badge.svg)](https://github.com/ytdl-org/youtube-dl/actions?query=workflow%3ACI)\n\n\nyoutube-dl - download videos from youtube.com or other video platforms\n\n- [INSTALLATION](#installation)\n- [DESCRIPTION](#description)\n- [OPTIONS](#options)\n- [CONFIGURATION](#configuration)\n- [OUTPUT TEMPLATE](#output-template)\n- [FORMAT SELECTION](#format-selection)\n- [VIDEO SELECTION](#video-selection)\n- [FAQ](#faq)\n- [DEVELOPER INSTRUCTIONS](#developer-instructions)\n- [EMBEDDING YOUTUBE-DL](#embedding-youtube-dl)\n- [BUGS](#bugs)\n- [COPYRIGHT](#copyright)\n\n# INSTALLATION\n\nTo install it right away for all UNIX users (Linux, macOS, etc.), type:\n\n    sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl\n    sudo chmod a+rx /usr/local/bin/youtube-dl\n\nIf you do not have curl, you can alternatively use a recent wget:\n\n    sudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl\n    sudo chmod a+rx /usr/local/bin/youtube-dl\n\nWindows users can [download an .exe file](https://yt-dl.org/latest/youtube-dl.exe) and place it in any location on their [PATH](https://en.wikipedia.org/wiki/PATH_%28variable%29) except for `%SYSTEMROOT%\\System32` (e.g. **do not** put in `C:\\Windows\\System32`).\n\nYou can also use pip:\n\n    sudo -H pip install --upgrade youtube-dl\n\nThis command will update youtube-dl if you have already installed it. See the [pypi page](https://pypi.python.org/pypi/youtube_dl) for more information.\n\nmacOS users can install youtube-dl with [Homebrew](https://brew.sh/):\n\n    brew install youtube-dl\n\nOr with [MacPorts](https://www.macports.org/):\n\n    sudo port install youtube-dl\n\nAlternatively, refer to the [developer instructions](#developer-instructions) for how to check out and work with the git repository. For further options, including PGP signatures, see the [youtube-dl Download Page](https://ytdl-org.github.io/youtube-dl/download.html).\n\n# DESCRIPTION\n**youtube-dl** is a command-line program to download videos from YouTube.com and a few more sites. It requires the Python interpreter, version 2.6, 2.7, or 3.2+, and it is not platform specific. It should work on your Unix box, on Windows or on macOS. It is released to the public domain, which means you can modify it, redistribute it or use it however you like.\n\n    youtube-dl [OPTIONS] URL [URL...]\n\n# OPTIONS\n    -h, --help                           Print this help text and exit\n    --version                            Print program version and exit\n    -U, --update                         Update this program to latest version.\n                                         Make sure that you have sufficient\n                                         permissions (run with sudo if needed)\n    -i, --ignore-errors                  Continue on download errors, for\n                                         example to skip unavailable videos in a\n                                         playlist\n    --abort-on-error                     Abort downloading of further videos (in\n                                         the playlist or the command line) if an\n                                         error occurs\n    --dump-user-agent                    Display the current browser\n                                         identification\n    --list-extractors                    List all supported extractors\n    --extractor-descriptions             Output descriptions of all supported\n                                         extractors\n    --force-generic-extractor            Force extraction to use the generic\n                                         extractor\n    --default-search PREFIX              Use this prefix for unqualified URLs.\n                                         For example \"gvsearch2:\" downloads two\n                                         videos from google videos for youtube-\n                                         dl \"large apple\". Use the value \"auto\"\n                                         to let youtube-dl guess (\"auto_warning\"\n                                         to emit a warning when guessing).\n                                         \"error\" just throws an error. The\n                                         default value \"fixup_error\" repairs\n                                         broken URLs, but emits an error if this\n                                         is not possible instead of searching.\n    --ignore-config                      Do not read configuration files. When\n                                         given in the global configuration file\n                                         /etc/youtube-dl.conf: Do not read the\n                                         user configuration in\n                                         ~/.config/youtube-dl/config\n                                         (%APPDATA%/youtube-dl/config.txt on\n                                         Windows)\n    --config-location PATH               Location of the configuration file;\n                                         either the path to the config or its\n                                         containing directory.\n    --flat-playlist                      Do not extract the videos of a\n                                         playlist, only list them.\n    --mark-watched                       Mark videos watched (YouTube only)\n    --no-mark-watched                    Do not mark videos watched (YouTube\n                                         only)\n    --no-color                           Do not emit color codes in output\n\n## Network Options:\n    --proxy URL                          Use the specified HTTP/HTTPS/SOCKS\n                                         proxy. To enable SOCKS proxy, specify a\n                                         proper scheme. For example\n                                         socks5://127.0.0.1:1080/. Pass in an\n                                         empty string (--proxy \"\") for direct\n                                         connection\n    --socket-timeout SECONDS             Time to wait before giving up, in\n                                         seconds\n    --source-address IP                  Client-side IP address to bind to\n    -4, --force-ipv4                     Make all connections via IPv4\n    -6, --force-ipv6                     Make all connections via IPv6\n\n## Geo Restriction:\n    --geo-verification-proxy URL         Use this proxy to verify the IP address\n                                         for some geo-restricted sites. The\n                                         default proxy specified by --proxy (or\n                                         none, if the option is not present) is\n                                         used for the actual downloading.\n    --geo-bypass                         Bypass geographic restriction via\n                                         faking X-Forwarded-For HTTP header\n    --no-geo-bypass                      Do not bypass geographic restriction\n                                         via faking X-Forwarded-For HTTP header\n    --geo-bypass-country CODE            Force bypass geographic restriction\n                                         with explicitly provided two-letter ISO\n                                         3166-2 country code\n    --geo-bypass-ip-block IP_BLOCK       Force bypass geographic restriction\n                                         with explicitly provided IP block in\n                                         CIDR notation\n\n## Video Selection:\n    --playlist-start NUMBER              Playlist video to start at (default is\n                                         1)\n    --playlist-end NUMBER                Playlist video to end at (default is\n                                         last)\n    --playlist-items ITEM_SPEC           Playlist video items to download.\n                                         Specify indices of the videos in the\n                                         playlist separated by commas like: \"--\n                                         playlist-items 1,2,5,8\" if you want to\n                                         download videos indexed 1, 2, 5, 8 in\n                                         the playlist. You can specify range: \"\n                                         --playlist-items 1-3,7,10-13\", it will\n                                         download the videos at index 1, 2, 3,\n                                         7, 10, 11, 12 and 13.\n    --match-title REGEX                  Download only matching titles (regex or\n                                         caseless sub-string)\n    --reject-title REGEX                 Skip download for matching titles\n                                         (regex or caseless sub-string)\n    --max-downloads NUMBER               Abort after downloading NUMBER files\n    --min-filesize SIZE                  Do not download any videos smaller than\n                                         SIZE (e.g. 50k or 44.6m)\n    --max-filesize SIZE                  Do not download any videos larger than\n                                         SIZE (e.g. 50k or 44.6m)\n    --date DATE                          Download only videos uploaded in this\n                                         date\n    --datebefore DATE                    Download only videos uploaded on or\n                                         before this date (i.e. inclusive)\n    --dateafter DATE                     Download only videos uploaded on or\n                                         after this date (i.e. inclusive)\n    --min-views COUNT                    Do not download any videos with less\n                                         than COUNT views\n    --max-views COUNT                    Do not download any videos with more\n                                         than COUNT views\n    --match-filter FILTER                Generic video filter. Specify any key\n                                         (see the \"OUTPUT TEMPLATE\" for a list\n                                         of available keys) to match if the key\n                                         is present, !key to check if the key is\n                                         not present, key > NUMBER (like\n                                         \"comment_count > 12\", also works with\n                                         >=, <, <=, !=, =) to compare against a\n                                         number, key = 'LITERAL' (like \"uploader\n                                         = 'Mike Smith'\", also works with !=) to\n                                         match against a string literal and & to\n                                         require multiple matches. Values which\n                                         are not known are excluded unless you\n                                         put a question mark (?) after the\n                                         operator. For example, to only match\n                                         videos that have been liked more than\n                                         100 times and disliked less than 50\n                                         times (or the dislike functionality is\n                                         not available at the given service),\n                                         but who also have a description, use\n                                         --match-filter \"like_count > 100 &\n                                         dislike_count <? 50 & description\" .\n    --no-playlist                        Download only the video, if the URL\n                                         refers to a video and a playlist.\n    --yes-playlist                       Download the playlist, if the URL\n                                         refers to a video and a playlist.\n    --age-limit YEARS                    Download only videos suitable for the\n                                         given age\n    --download-archive FILE              Download only videos not listed in the\n                                         archive file. Record the IDs of all\n                                         downloaded videos in it.\n    --include-ads                        Download advertisements as well\n                                         (experimental)\n\n## Download Options:\n    -r, --limit-rate RATE                Maximum download rate in bytes per\n                                         second (e.g. 50K or 4.2M)\n    -R, --retries RETRIES                Number of retries (default is 10), or\n                                         \"infinite\".\n    --fragment-retries RETRIES           Number of retries for a fragment\n                                         (default is 10), or \"infinite\" (DASH,\n                                         hlsnative and ISM)\n    --skip-unavailable-fragments         Skip unavailable fragments (DASH,\n                                         hlsnative and ISM)\n    --abort-on-unavailable-fragment      Abort downloading when some fragment is\n                                         not available\n    --keep-fragments                     Keep downloaded fragments on disk after\n                                         downloading is finished; fragments are\n                                         erased by default\n    --buffer-size SIZE                   Size of download buffer (e.g. 1024 or\n                                         16K) (default is 1024)\n    --no-resize-buffer                   Do not automatically adjust the buffer\n                                         size. By default, the buffer size is\n                                         automatically resized from an initial\n                                         value of SIZE.\n    --http-chunk-size SIZE               Size of a chunk for chunk-based HTTP\n                                         downloading (e.g. 10485760 or 10M)\n                                         (default is disabled). May be useful\n                                         for bypassing bandwidth throttling\n                                         imposed by a webserver (experimental)\n    --playlist-reverse                   Download playlist videos in reverse\n                                         order\n    --playlist-random                    Download playlist videos in random\n                                         order\n    --xattr-set-filesize                 Set file xattribute ytdl.filesize with\n                                         expected file size\n    --hls-prefer-native                  Use the native HLS downloader instead\n                                         of ffmpeg\n    --hls-prefer-ffmpeg                  Use ffmpeg instead of the native HLS\n                                         downloader\n    --hls-use-mpegts                     Use the mpegts container for HLS\n                                         videos, allowing to play the video\n                                         while downloading (some players may not\n                                         be able to play it)\n    --external-downloader COMMAND        Use the specified external downloader.\n                                         Currently supports aria2c,avconv,axel,c\n                                         url,ffmpeg,httpie,wget\n    --external-downloader-args ARGS      Give these arguments to the external\n                                         downloader\n\n## Filesystem Options:\n    -a, --batch-file FILE                File containing URLs to download ('-'\n                                         for stdin), one URL per line. Lines\n                                         starting with '#', ';' or ']' are\n                                         considered as comments and ignored.\n    --id                                 Use only video ID in file name\n    -o, --output TEMPLATE                Output filename template, see the\n                                         \"OUTPUT TEMPLATE\" for all the info\n    --output-na-placeholder PLACEHOLDER  Placeholder value for unavailable meta\n                                         fields in output filename template\n                                         (default is \"NA\")\n    --autonumber-start NUMBER            Specify the start value for\n                                         %(autonumber)s (default is 1)\n    --restrict-filenames                 Restrict filenames to only ASCII\n                                         characters, and avoid \"&\" and spaces in\n                                         filenames\n    -w, --no-overwrites                  Do not overwrite files\n    -c, --continue                       Force resume of partially downloaded\n                                         files. By default, youtube-dl will\n                                         resume downloads if possible.\n    --no-continue                        Do not resume partially downloaded\n                                         files (restart from beginning)\n    --no-part                            Do not use .part files - write directly\n                                         into output file\n    --no-mtime                           Do not use the Last-modified header to\n                                         set the file modification time\n    --write-description                  Write video description to a\n                                         .description file\n    --write-info-json                    Write video metadata to a .info.json\n                                         file\n    --write-annotations                  Write video annotations to a\n                                         .annotations.xml file\n    --load-info-json FILE                JSON file containing the video\n                                         information (created with the \"--write-\n                                         info-json\" option)\n    --cookies FILE                       File to read cookies from and dump\n                                         cookie jar in\n    --cache-dir DIR                      Location in the filesystem where\n                                         youtube-dl can store some downloaded\n                                         information permanently. By default\n                                         $XDG_CACHE_HOME/youtube-dl or\n                                         ~/.cache/youtube-dl . At the moment,\n                                         only YouTube player files (for videos\n                                         with obfuscated signatures) are cached,\n                                         but that may change.\n    --no-cache-dir                       Disable filesystem caching\n    --rm-cache-dir                       Delete all filesystem cache files\n\n## Thumbnail Options:\n    --write-thumbnail                    Write thumbnail image to disk\n    --write-all-thumbnails               Write all thumbnail image formats to\n                                         disk\n    --list-thumbnails                    Simulate and list all available\n                                         thumbnail formats\n\n## Verbosity / Simulation Options:\n    -q, --quiet                          Activate quiet mode\n    --no-warnings                        Ignore warnings\n    -s, --simulate                       Do not download the video and do not\n                                         write anything to disk\n    --skip-download                      Do not download the video\n    -g, --get-url                        Simulate, quiet but print URL\n    -e, --get-title                      Simulate, quiet but print title\n    --get-id                             Simulate, quiet but print id\n    --get-thumbnail                      Simulate, quiet but print thumbnail URL\n    --get-description                    Simulate, quiet but print video\n                                         description\n    --get-duration                       Simulate, quiet but print video length\n    --get-filename                       Simulate, quiet but print output\n                                         filename\n    --get-format                         Simulate, quiet but print output format\n    -j, --dump-json                      Simulate, quiet but print JSON\n                                         information. See the \"OUTPUT TEMPLATE\"\n                                         for a description of available keys.\n    -J, --dump-single-json               Simulate, quiet but print JSON\n                                         information for each command-line\n                                         argument. If the URL refers to a\n                                         playlist, dump the whole playlist\n                                         information in a single line.\n    --print-json                         Be quiet and print the video\n                                         information as JSON (video is still\n                                         being downloaded).\n    --newline                            Output progress bar as new lines\n    --no-progress                        Do not print progress bar\n    --console-title                      Display progress in console titlebar\n    -v, --verbose                        Print various debugging information\n    --dump-pages                         Print downloaded pages encoded using\n                                         base64 to debug problems (very verbose)\n    --write-pages                        Write downloaded intermediary pages to\n                                         files in the current directory to debug\n                                         problems\n    --print-traffic                      Display sent and read HTTP traffic\n    -C, --call-home                      Contact the youtube-dl server for\n                                         debugging\n    --no-call-home                       Do NOT contact the youtube-dl server\n                                         for debugging\n\n## Workarounds:\n    --encoding ENCODING                  Force the specified encoding\n                                         (experimental)\n    --no-check-certificate               Suppress HTTPS certificate validation\n    --prefer-insecure                    Use an unencrypted connection to\n                                         retrieve information about the video.\n                                         (Currently supported only for YouTube)\n    --user-agent UA                      Specify a custom user agent\n    --referer URL                        Specify a custom referer, use if the\n                                         video access is restricted to one\n                                         domain\n    --add-header FIELD:VALUE             Specify a custom HTTP header and its\n                                         value, separated by a colon ':'. You\n                                         can use this option multiple times\n    --bidi-workaround                    Work around terminals that lack\n                                         bidirectional text support. Requires\n                                         bidiv or fribidi executable in PATH\n    --sleep-interval SECONDS             Number of seconds to sleep before each\n                                         download when used alone or a lower\n                                         bound of a range for randomized sleep\n                                         before each download (minimum possible\n                                         number of seconds to sleep) when used\n                                         along with --max-sleep-interval.\n    --max-sleep-interval SECONDS         Upper bound of a range for randomized\n                                         sleep before each download (maximum\n                                         possible number of seconds to sleep).\n                                         Must only be used along with --min-\n                                         sleep-interval.\n\n## Video Format Options:\n    -f, --format FORMAT                  Video format code, see the \"FORMAT\n                                         SELECTION\" for all the info\n    --all-formats                        Download all available video formats\n    --prefer-free-formats                Prefer free video formats unless a\n                                         specific one is requested\n    -F, --list-formats                   List all available formats of requested\n                                         videos\n    --youtube-skip-dash-manifest         Do not download the DASH manifests and\n                                         related data on YouTube videos\n    --merge-output-format FORMAT         If a merge is required (e.g.\n                                         bestvideo+bestaudio), output to given\n                                         container format. One of mkv, mp4, ogg,\n                                         webm, flv. Ignored if no merge is\n                                         required\n\n## Subtitle Options:\n    --write-sub                          Write subtitle file\n    --write-auto-sub                     Write automatically generated subtitle\n                                         file (YouTube only)\n    --all-subs                           Download all the available subtitles of\n                                         the video\n    --list-subs                          List all available subtitles for the\n                                         video\n    --sub-format FORMAT                  Subtitle format, accepts formats\n                                         preference, for example: \"srt\" or\n                                         \"ass/srt/best\"\n    --sub-lang LANGS                     Languages of the subtitles to download\n                                         (optional) separated by commas, use\n                                         --list-subs for available language tags\n\n## Authentication Options:\n    -u, --username USERNAME              Login with this account ID\n    -p, --password PASSWORD              Account password. If this option is\n                                         left out, youtube-dl will ask\n                                         interactively.\n    -2, --twofactor TWOFACTOR            Two-factor authentication code\n    -n, --netrc                          Use .netrc authentication data\n    --video-password PASSWORD            Video password (vimeo, youku)\n\n## Adobe Pass Options:\n    --ap-mso MSO                         Adobe Pass multiple-system operator (TV\n                                         provider) identifier, use --ap-list-mso\n                                         for a list of available MSOs\n    --ap-username USERNAME               Multiple-system operator account login\n    --ap-password PASSWORD               Multiple-system operator account\n                                         password. If this option is left out,\n                                         youtube-dl will ask interactively.\n    --ap-list-mso                        List all supported multiple-system\n                                         operators\n\n## Post-processing Options:\n    -x, --extract-audio                  Convert video files to audio-only files\n                                         (requires ffmpeg/avconv and\n                                         ffprobe/avprobe)\n    --audio-format FORMAT                Specify audio format: \"best\", \"aac\",\n                                         \"flac\", \"mp3\", \"m4a\", \"opus\", \"vorbis\",\n                                         or \"wav\"; \"best\" by default; No effect\n                                         without -x\n    --audio-quality QUALITY              Specify ffmpeg/avconv audio quality,\n                                         insert a value between 0 (better) and 9\n                                         (worse) for VBR or a specific bitrate\n                                         like 128K (default 5)\n    --recode-video FORMAT                Encode the video to another format if\n                                         necessary (currently supported:\n                                         mp4|flv|ogg|webm|mkv|avi)\n    --postprocessor-args ARGS            Give these arguments to the\n                                         postprocessor\n    -k, --keep-video                     Keep the video file on disk after the\n                                         post-processing; the video is erased by\n                                         default\n    --no-post-overwrites                 Do not overwrite post-processed files;\n                                         the post-processed files are\n                                         overwritten by default\n    --embed-subs                         Embed subtitles in the video (only for\n                                         mp4, webm and mkv videos)\n    --embed-thumbnail                    Embed thumbnail in the audio as cover\n                                         art\n    --add-metadata                       Write metadata to the video file\n    --metadata-from-title FORMAT         Parse additional metadata like song\n                                         title / artist from the video title.\n                                         The format syntax is the same as\n                                         --output. Regular expression with named\n                                         capture groups may also be used. The\n                                         parsed parameters replace existing\n                                         values. Example: --metadata-from-title\n                                         \"%(artist)s - %(title)s\" matches a\n                                         title like \"Coldplay - Paradise\".\n                                         Example (regex): --metadata-from-title\n                                         \"(?P<artist>.+?) - (?P<title>.+)\"\n    --xattrs                             Write metadata to the video file's\n                                         xattrs (using dublin core and xdg\n                                         standards)\n    --fixup POLICY                       Automatically correct known faults of\n                                         the file. One of never (do nothing),\n                                         warn (only emit a warning),\n                                         detect_or_warn (the default; fix file\n                                         if we can, warn otherwise)\n    --prefer-avconv                      Prefer avconv over ffmpeg for running\n                                         the postprocessors\n    --prefer-ffmpeg                      Prefer ffmpeg over avconv for running\n                                         the postprocessors (default)\n    --ffmpeg-location PATH               Location of the ffmpeg/avconv binary;\n                                         either the path to the binary or its\n                                         containing directory.\n    --exec CMD                           Execute a command on the file after\n                                         downloading and post-processing,\n                                         similar to find's -exec syntax.\n                                         Example: --exec 'adb push {}\n                                         /sdcard/Music/ && rm {}'\n    --convert-subs FORMAT                Convert the subtitles to other format\n                                         (currently supported: srt|ass|vtt|lrc)\n\n# CONFIGURATION\n\nYou can configure youtube-dl by placing any supported command line option to a configuration file. On Linux and macOS, the system wide configuration file is located at `/etc/youtube-dl.conf` and the user wide configuration file at `~/.config/youtube-dl/config`. On Windows, the user wide configuration file locations are `%APPDATA%\\youtube-dl\\config.txt` or `C:\\Users\\<user name>\\youtube-dl.conf`. Note that by default configuration file may not exist so you may need to create it yourself.\n\nFor example, with the following configuration file youtube-dl will always extract the audio, not copy the mtime, use a proxy and save all videos under `Movies` directory in your home directory:\n```\n# Lines starting with # are comments\n\n# Always extract audio\n-x\n\n# Do not copy the mtime\n--no-mtime\n\n# Use this proxy\n--proxy 127.0.0.1:3128\n\n# Save all videos under Movies directory in your home directory\n-o ~/Movies/%(title)s.%(ext)s\n```\n\nNote that options in configuration file are just the same options aka switches used in regular command line calls thus there **must be no whitespace** after `-` or `--`, e.g. `-o` or `--proxy` but not `- o` or `-- proxy`.\n\nYou can use `--ignore-config` if you want to disable the configuration file for a particular youtube-dl run.\n\nYou can also use `--config-location` if you want to use custom configuration file for a particular youtube-dl run.\n\n### Authentication with `.netrc` file\n\nYou may also want to configure automatic credentials storage for extractors that support authentication (by providing login and password with `--username` and `--password`) in order not to pass credentials as command line arguments on every youtube-dl execution and prevent tracking plain text passwords in the shell command history. You can achieve this using a [`.netrc` file](https://stackoverflow.com/tags/.netrc/info) on a per extractor basis. For that you will need to create a `.netrc` file in your `$HOME` and restrict permissions to read/write by only you:\n```\ntouch $HOME/.netrc\nchmod a-rwx,u+rw $HOME/.netrc\n```\nAfter that you can add credentials for an extractor in the following format, where *extractor* is the name of the extractor in lowercase:\n```\nmachine <extractor> login <login> password <password>\n```\nFor example:\n```\nmachine youtube login myaccount@gmail.com password my_youtube_password\nmachine twitch login my_twitch_account_name password my_twitch_password\n```\nTo activate authentication with the `.netrc` file you should pass `--netrc` to youtube-dl or place it in the [configuration file](#configuration).\n\nOn Windows you may also need to setup the `%HOME%` environment variable manually. For example:\n```\nset HOME=%USERPROFILE%\n```\n\n# OUTPUT TEMPLATE\n\nThe `-o` option allows users to indicate a template for the output file names.\n\n**tl;dr:** [navigate me to examples](#output-template-examples).\n\nThe basic usage is not to set any template arguments when downloading a single file, like in `youtube-dl -o funny_video.flv \"https://some/video\"`. However, it may contain special sequences that will be replaced when downloading each video. The special sequences may be formatted according to [python string formatting operations](https://docs.python.org/2/library/stdtypes.html#string-formatting). For example, `%(NAME)s` or `%(NAME)05d`. To clarify, that is a percent symbol followed by a name in parentheses, followed by formatting operations. Allowed names along with sequence type are:\n\n - `id` (string): Video identifier\n - `title` (string): Video title\n - `url` (string): Video URL\n - `ext` (string): Video filename extension\n - `alt_title` (string): A secondary title of the video\n - `display_id` (string): An alternative identifier for the video\n - `uploader` (string): Full name of the video uploader\n - `license` (string): License name the video is licensed under\n - `creator` (string): The creator of the video\n - `release_date` (string): The date (YYYYMMDD) when the video was released\n - `timestamp` (numeric): UNIX timestamp of the moment the video became available\n - `upload_date` (string): Video upload date (YYYYMMDD)\n - `uploader_id` (string): Nickname or id of the video uploader\n - `channel` (string): Full name of the channel the video is uploaded on\n - `channel_id` (string): Id of the channel\n - `location` (string): Physical location where the video was filmed\n - `duration` (numeric): Length of the video in seconds\n - `view_count` (numeric): How many users have watched the video on the platform\n - `like_count` (numeric): Number of positive ratings of the video\n - `dislike_count` (numeric): Number of negative ratings of the video\n - `repost_count` (numeric): Number of reposts of the video\n - `average_rating` (numeric): Average rating give by users, the scale used depends on the webpage\n - `comment_count` (numeric): Number of comments on the video\n - `age_limit` (numeric): Age restriction for the video (years)\n - `is_live` (boolean): Whether this video is a live stream or a fixed-length video\n - `start_time` (numeric): Time in seconds where the reproduction should start, as specified in the URL\n - `end_time` (numeric): Time in seconds where the reproduction should end, as specified in the URL\n - `format` (string): A human-readable description of the format\n - `format_id` (string): Format code specified by `--format`\n - `format_note` (string): Additional info about the format\n - `width` (numeric): Width of the video\n - `height` (numeric): Height of the video\n - `resolution` (string): Textual description of width and height\n - `tbr` (numeric): Average bitrate of audio and video in KBit/s\n - `abr` (numeric): Average audio bitrate in KBit/s\n - `acodec` (string): Name of the audio codec in use\n - `asr` (numeric): Audio sampling rate in Hertz\n - `vbr` (numeric): Average video bitrate in KBit/s\n - `fps` (numeric): Frame rate\n - `vcodec` (string): Name of the video codec in use\n - `container` (string): Name of the container format\n - `filesize` (numeric): The number of bytes, if known in advance\n - `filesize_approx` (numeric): An estimate for the number of bytes\n - `protocol` (string): The protocol that will be used for the actual download\n - `extractor` (string): Name of the extractor\n - `extractor_key` (string): Key name of the extractor\n - `epoch` (numeric): Unix epoch when creating the file\n - `autonumber` (numeric): Number that will be increased with each download, starting at `--autonumber-start`\n - `playlist` (string): Name or id of the playlist that contains the video\n - `playlist_index` (numeric): Index of the video in the playlist padded with leading zeros according to the total length of the playlist\n - `playlist_id` (string): Playlist identifier\n - `playlist_title` (string): Playlist title\n - `playlist_uploader` (string): Full name of the playlist uploader\n - `playlist_uploader_id` (string): Nickname or id of the playlist uploader\n\nAvailable for the video that belongs to some logical chapter or section:\n\n - `chapter` (string): Name or title of the chapter the video belongs to\n - `chapter_number` (numeric): Number of the chapter the video belongs to\n - `chapter_id` (string): Id of the chapter the video belongs to\n\nAvailable for the video that is an episode of some series or programme:\n\n - `series` (string): Title of the series or programme the video episode belongs to\n - `season` (string): Title of the season the video episode belongs to\n - `season_number` (numeric): Number of the season the video episode belongs to\n - `season_id` (string): Id of the season the video episode belongs to\n - `episode` (string): Title of the video episode\n - `episode_number` (numeric): Number of the video episode within a season\n - `episode_id` (string): Id of the video episode\n\nAvailable for the media that is a track or a part of a music album:\n\n - `track` (string): Title of the track\n - `track_number` (numeric): Number of the track within an album or a disc\n - `track_id` (string): Id of the track\n - `artist` (string): Artist(s) of the track\n - `genre` (string): Genre(s) of the track\n - `album` (string): Title of the album the track belongs to\n - `album_type` (string): Type of the album\n - `album_artist` (string): List of all artists appeared on the album\n - `disc_number` (numeric): Number of the disc or other physical medium the track belongs to\n - `release_year` (numeric): Year (YYYY) when the album was released\n\nEach aforementioned sequence when referenced in an output template will be replaced by the actual value corresponding to the sequence name. Note that some of the sequences are not guaranteed to be present since they depend on the metadata obtained by a particular extractor. Such sequences will be replaced with placeholder value provided with `--output-na-placeholder` (`NA` by default).\n\nFor example for `-o %(title)s-%(id)s.%(ext)s` and an mp4 video with title `youtube-dl test video` and id `BaW_jenozKcj`, this will result in a `youtube-dl test video-BaW_jenozKcj.mp4` file created in the current directory.\n\nFor numeric sequences you can use numeric related formatting, for example, `%(view_count)05d` will result in a string with view count padded with zeros up to 5 characters, like in `00042`.\n\nOutput templates can also contain arbitrary hierarchical path, e.g. `-o '%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s'` which will result in downloading each video in a directory corresponding to this path template. Any missing directory will be automatically created for you.\n\nTo use percent literals in an output template use `%%`. To output to stdout use `-o -`.\n\nThe current default template is `%(title)s-%(id)s.%(ext)s`.\n\nIn some cases, you don't want special characters such as \u4e2d, spaces, or &, such as when transferring the downloaded filename to a Windows system or the filename through an 8bit-unsafe channel. In these cases, add the `--restrict-filenames` flag to get a shorter title.\n\n#### Output template and Windows batch files\n\nIf you are using an output template inside a Windows batch file then you must escape plain percent characters (`%`) by doubling, so that `-o \"%(title)s-%(id)s.%(ext)s\"` should become `-o \"%%(title)s-%%(id)s.%%(ext)s\"`. However you should not touch `%`'s that are not plain characters, e.g. environment variables for expansion should stay intact: `-o \"C:\\%HOMEPATH%\\Desktop\\%%(title)s.%%(ext)s\"`.\n\n#### Output template examples\n\nNote that on Windows you may need to use double quotes instead of single.\n\n```bash\n$ youtube-dl --get-filename -o '%(title)s.%(ext)s' BaW_jenozKc\nyoutube-dl test video ''_\u00e4\u21ad\ud835\udd50.mp4    # All kinds of weird characters\n\n$ youtube-dl --get-filename -o '%(title)s.%(ext)s' BaW_jenozKc --restrict-filenames\nyoutube-dl_test_video_.mp4          # A simple file name\n\n# Download YouTube playlist videos in separate directory indexed by video order in a playlist\n$ youtube-dl -o '%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s' https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re\n\n# Download all playlists of YouTube channel/user keeping each playlist in separate directory:\n$ youtube-dl -o '%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s' https://www.youtube.com/user/TheLinuxFoundation/playlists\n\n# Download Udemy course keeping each chapter in separate directory under MyVideos directory in your home\n$ youtube-dl -u user -p password -o '~/MyVideos/%(playlist)s/%(chapter_number)s - %(chapter)s/%(title)s.%(ext)s' https://www.udemy.com/java-tutorial/\n\n# Download entire series season keeping each series and each season in separate directory under C:/MyVideos\n$ youtube-dl -o \"C:/MyVideos/%(series)s/%(season_number)s - %(season)s/%(episode_number)s - %(episode)s.%(ext)s\" https://videomore.ru/kino_v_detalayah/5_sezon/367617\n\n# Stream the video being downloaded to stdout\n$ youtube-dl -o - BaW_jenozKc\n```\n\n# FORMAT SELECTION\n\nBy default youtube-dl tries to download the best available quality, i.e. if you want the best quality you **don't need** to pass any special options, youtube-dl will guess it for you by **default**.\n\nBut sometimes you may want to download in a different format, for example when you are on a slow or intermittent connection. The key mechanism for achieving this is so-called *format selection* based on which you can explicitly specify desired format, select formats based on some criterion or criteria, setup precedence and much more.\n\nThe general syntax for format selection is `--format FORMAT` or shorter `-f FORMAT` where `FORMAT` is a *selector expression*, i.e. an expression that describes format or formats you would like to download.\n\n**tl;dr:** [navigate me to examples](#format-selection-examples).\n\nThe simplest case is requesting a specific format, for example with `-f 22` you can download the format with format code equal to 22. You can get the list of available format codes for particular video using `--list-formats` or `-F`. Note that these format codes are extractor specific.\n\nYou can also use a file extension (currently `3gp`, `aac`, `flv`, `m4a`, `mp3`, `mp4`, `ogg`, `wav`, `webm` are supported) to download the best quality format of a particular file extension served as a single file, e.g. `-f webm` will download the best quality format with the `webm` extension served as a single file.\n\nYou can also use special names to select particular edge case formats:\n\n - `best`: Select the best quality format represented by a single file with video and audio.\n - `worst`: Select the worst quality format represented by a single file with video and audio.\n - `bestvideo`: Select the best quality video-only format (e.g. DASH video). May not be available.\n - `worstvideo`: Select the worst quality video-only format. May not be available.\n - `bestaudio`: Select the best quality audio only-format. May not be available.\n - `worstaudio`: Select the worst quality audio only-format. May not be available.\n\nFor example, to download the worst quality video-only format you can use `-f worstvideo`.\n\nIf you want to download multiple videos and they don't have the same formats available, you can specify the order of preference using slashes. Note that slash is left-associative, i.e. formats on the left hand side are preferred, for example `-f 22/17/18` will download format 22 if it's available, otherwise it will download format 17 if it's available, otherwise it will download format 18 if it's available, otherwise it will complain that no suitable formats are available for download.\n\nIf you want to download several formats of the same video use a comma as a separator, e.g. `-f 22,17,18` will download all these three formats, of course if they are available. Or a more sophisticated example combined with the precedence feature: `-f 136/137/mp4/bestvideo,140/m4a/bestaudio`.\n\nYou can also filter the video formats by putting a condition in brackets, as in `-f \"best[height=720]\"` (or `-f \"[filesize>10M]\"`).\n\nThe following numeric meta fields can be used with comparisons `<`, `<=`, `>`, `>=`, `=` (equals), `!=` (not equals):\n\n - `filesize`: The number of bytes, if known in advance\n - `width`: Width of the video, if known\n - `height`: Height of the video, if known\n - `tbr`: Average bitrate of audio and video in KBit/s\n - `abr`: Average audio bitrate in KBit/s\n - `vbr`: Average video bitrate in KBit/s\n - `asr`: Audio sampling rate in Hertz\n - `fps`: Frame rate\n\nAlso filtering work for comparisons `=` (equals), `^=` (starts with), `$=` (ends with), `*=` (contains) and following string meta fields:\n\n - `ext`: File extension\n - `acodec`: Name of the audio codec in use\n - `vcodec`: Name of the video codec in use\n - `container`: Name of the container format\n - `protocol`: The protocol that will be used for the actual download, lower-case (`http`, `https`, `rtsp`, `rtmp`, `rtmpe`, `mms`, `f4m`, `ism`, `http_dash_segments`, `m3u8`, or `m3u8_native`)\n - `format_id`: A short description of the format\n - `language`: Language code\n\nAny string comparison may be prefixed with negation `!` in order to produce an opposite comparison, e.g. `!*=` (does not contain).\n\nNote that none of the aforementioned meta fields are guaranteed to be present since this solely depends on the metadata obtained by particular extractor, i.e. the metadata offered by the video hoster.\n\nFormats for which the value is not known are excluded unless you put a question mark (`?`) after the operator. You can combine format filters, so `-f \"[height <=? 720][tbr>500]\"` selects up to 720p videos (or videos where the height is not known) with a bitrate of at least 500 KBit/s.\n\nYou can merge the video and audio of two formats into a single file using `-f <video-format>+<audio-format>` (requires ffmpeg or avconv installed), for example `-f bestvideo+bestaudio` will download the best video-only format, the best audio-only format and mux them together with ffmpeg/avconv.\n\nFormat selectors can also be grouped using parentheses, for example if you want to download the best mp4 and webm formats with a height lower than 480 you can use `-f '(mp4,webm)[height<480]'`.\n\nSince the end of April 2015 and version 2015.04.26, youtube-dl uses `-f bestvideo+bestaudio/best` as the default format selection (see [#5447](https://github.com/ytdl-org/youtube-dl/issues/5447), [#5456](https://github.com/ytdl-org/youtube-dl/issues/5456)). If ffmpeg or avconv are installed this results in downloading `bestvideo` and `bestaudio` separately and muxing them together into a single file giving the best overall quality available. Otherwise it falls back to `best` and results in downloading the best available quality served as a single file. `best` is also needed for videos that don't come from YouTube because they don't provide the audio and video in two different files. If you want to only download some DASH formats (for example if you are not interested in getting videos with a resolution higher than 1080p), you can add `-f bestvideo[height<=?1080]+bestaudio/best` to your configuration file. Note that if you use youtube-dl to stream to `stdout` (and most likely to pipe it to your media player then), i.e. you explicitly specify output template as `-o -`, youtube-dl still uses `-f best` format selection in order to start content delivery immediately to your player and not to wait until `bestvideo` and `bestaudio` are downloaded and muxed.\n\nIf you want to preserve the old format selection behavior (prior to youtube-dl 2015.04.26), i.e. you want to download the best available quality media served as a single file, you should explicitly specify your choice with `-f best`. You may want to add it to the [configuration file](#configuration) in order not to type it every time you run youtube-dl.\n\n#### Format selection examples\n\nNote that on Windows you may need to use double quotes instead of single.\n\n```bash\n# Download best mp4 format available or any other best if no mp4 available\n$ youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best'\n\n# Download best format available but no better than 480p\n$ youtube-dl -f 'bestvideo[height<=480]+bestaudio/best[height<=480]'\n\n# Download best video only format but no bigger than 50 MB\n$ youtube-dl -f 'best[filesize<50M]'\n\n# Download best format available via direct link over HTTP/HTTPS protocol\n$ youtube-dl -f '(bestvideo+bestaudio/best)[protocol^=http]'\n\n# Download the best video format and the best audio format without merging them\n$ youtube-dl -f 'bestvideo,bestaudio' -o '%(title)s.f%(format_id)s.%(ext)s'\n```\nNote that in the last example, an output template is recommended as bestvideo and bestaudio may have the same file name.\n\n\n# VIDEO SELECTION\n\nVideos can be filtered by their upload date using the options `--date`, `--datebefore` or `--dateafter`. They accept dates in two formats:\n\n - Absolute dates: Dates in the format `YYYYMMDD`.\n - Relative dates: Dates in the format `(now|today)[+-][0-9](day|week|month|year)(s)?`\n\nExamples:\n\n```bash\n# Download only the videos uploaded in the last 6 months\n$ youtube-dl --dateafter now-6months\n\n# Download only the videos uploaded on January 1, 1970\n$ youtube-dl --date 19700101\n\n$ # Download only the videos uploaded in the 200x decade\n$ youtube-dl --dateafter 20000101 --datebefore 20091231\n```\n\n# FAQ\n\n### How do I update youtube-dl?\n\nIf you've followed [our manual installation instructions](https://ytdl-org.github.io/youtube-dl/download.html), you can simply run `youtube-dl -U` (or, on Linux, `sudo youtube-dl -U`).\n\nIf you have used pip, a simple `sudo pip install -U youtube-dl` is sufficient to update.\n\nIf you have installed youtube-dl using a package manager like *apt-get* or *yum*, use the standard system update mechanism to update. Note that distribution packages are often outdated. As a rule of thumb, youtube-dl releases at least once a month, and often weekly or even daily. Simply go to https://yt-dl.org to find out the current version. Unfortunately, there is nothing we youtube-dl developers can do if your distribution serves a really outdated version. You can (and should) complain to your distribution in their bugtracker or support forum.\n\nAs a last resort, you can also uninstall the version installed by your package manager and follow our manual installation instructions. For that, remove the distribution's package, with a line like\n\n    sudo apt-get remove -y youtube-dl\n\nAfterwards, simply follow [our manual installation instructions](https://ytdl-org.github.io/youtube-dl/download.html):\n\n```\nsudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl\nsudo chmod a+rx /usr/local/bin/youtube-dl\nhash -r\n```\n\nAgain, from then on you'll be able to update with `sudo youtube-dl -U`.\n\n### youtube-dl is extremely slow to start on Windows\n\nAdd a file exclusion for `youtube-dl.exe` in Windows Defender settings.\n\n### I'm getting an error `Unable to extract OpenGraph title` on YouTube playlists\n\nYouTube changed their playlist format in March 2014 and later on, so you'll need at least youtube-dl 2014.07.25 to download all YouTube videos.\n\nIf you have installed youtube-dl with a package manager, pip, setup.py or a tarball, please use that to update. Note that Ubuntu packages do not seem to get updated anymore. Since we are not affiliated with Ubuntu, there is little we can do. Feel free to [report bugs](https://bugs.launchpad.net/ubuntu/+source/youtube-dl/+filebug) to the [Ubuntu packaging people](mailto:ubuntu-motu@lists.ubuntu.com?subject=outdated%20version%20of%20youtube-dl) - all they have to do is update the package to a somewhat recent version. See above for a way to update.\n\n### I'm getting an error when trying to use output template: `error: using output template conflicts with using title, video ID or auto number`\n\nMake sure you are not using `-o` with any of these options `-t`, `--title`, `--id`, `-A` or `--auto-number` set in command line or in a configuration file. Remove the latter if any.\n\n### Do I always have to pass `-citw`?\n\nBy default, youtube-dl intends to have the best options (incidentally, if you have a convincing case that these should be different, [please file an issue where you explain that](https://yt-dl.org/bug)). Therefore, it is unnecessary and sometimes harmful to copy long option strings from webpages. In particular, the only option out of `-citw` that is regularly useful is `-i`.\n\n### Can you please put the `-b` option back?\n\nMost people asking this question are not aware that youtube-dl now defaults to downloading the highest available quality as reported by YouTube, which will be 1080p or 720p in some cases, so you no longer need the `-b` option. For some specific videos, maybe YouTube does not report them to be available in a specific high quality format you're interested in. In that case, simply request it with the `-f` option and youtube-dl will try to download it.\n\n### I get HTTP error 402 when trying to download a video. What's this?\n\nApparently YouTube requires you to pass a CAPTCHA test if you download too much. We're [considering to provide a way to let you solve the CAPTCHA](https://github.com/ytdl-org/youtube-dl/issues/154), but at the moment, your best course of action is pointing a web browser to the youtube URL, solving the CAPTCHA, and restart youtube-dl.\n\n### Do I need any other programs?\n\nyoutube-dl works fine on its own on most sites. However, if you want to convert video/audio, you'll need [avconv](https://libav.org/) or [ffmpeg](https://www.ffmpeg.org/). On some sites - most notably YouTube - videos can be retrieved in a higher quality format without sound. youtube-dl will detect whether avconv/ffmpeg is present and automatically pick the best option.\n\nVideos or video formats streamed via RTMP protocol can only be downloaded when [rtmpdump](https://rtmpdump.mplayerhq.hu/) is installed. Downloading MMS and RTSP videos requires either [mplayer](https://mplayerhq.hu/) or [mpv](https://mpv.io/) to be installed.\n\n### I have downloaded a video but how can I play it?\n\nOnce the video is fully downloaded, use any video player, such as [mpv](https://mpv.io/), [vlc](https://www.videolan.org/) or [mplayer](https://www.mplayerhq.hu/).\n\n### I extracted a video URL with `-g`, but it does not play on another machine / in my web browser.\n\nIt depends a lot on the service. In many cases, requests for the video (to download/play it) must come from the same IP address and with the same cookies and/or HTTP headers. Use the `--cookies` option to write the required cookies into a file, and advise your downloader to read cookies from that file. Some sites also require a common user agent to be used, use `--dump-user-agent` to see the one in use by youtube-dl. You can also get necessary cookies and HTTP headers from JSON output obtained with `--dump-json`.\n\nIt may be beneficial to use IPv6; in some cases, the restrictions are only applied to IPv4. Some services (sometimes only for a subset of videos) do not restrict the video URL by IP address, cookie, or user-agent, but these are the exception rather than the rule.\n\nPlease bear in mind that some URL protocols are **not** supported by browsers out of the box, including RTMP. If you are using `-g`, your own downloader must support these as well.\n\nIf you want to play the video on a machine that is not running youtube-dl, you can relay the video content from the machine that runs youtube-dl. You can use `-o -` to let youtube-dl stream a video to stdout, or simply allow the player to download the files written by youtube-dl in turn.\n\n### ERROR: no fmt_url_map or conn information found in video info\n\nYouTube has switched to a new video info format in July 2011 which is not supported by old versions of youtube-dl. See [above](#how-do-i-update-youtube-dl) for how to update youtube-dl.\n\n### ERROR: unable to download video\n\nYouTube requires an additional signature since September 2012 which is not supported by old versions of youtube-dl. See [above](#how-do-i-update-youtube-dl) for how to update youtube-dl.\n\n### Video URL contains an ampersand and I'm getting some strange output `[1] 2839` or `'v' is not recognized as an internal or external command`\n\nThat's actually the output from your shell. Since ampersand is one of the special shell characters it's interpreted by the shell preventing you from passing the whole URL to youtube-dl. To disable your shell from interpreting the ampersands (or any other special characters) you have to either put the whole URL in quotes or escape them with a backslash (which approach will work depends on your shell).\n\nFor example if your URL is https://www.youtube.com/watch?t=4&v=BaW_jenozKc you should end up with following command:\n\n```youtube-dl 'https://www.youtube.com/watch?t=4&v=BaW_jenozKc'```\n\nor\n\n```youtube-dl https://www.youtube.com/watch?t=4\\&v=BaW_jenozKc```\n\nFor Windows you have to use the double quotes:\n\n```youtube-dl \"https://www.youtube.com/watch?t=4&v=BaW_jenozKc\"```\n\n### ExtractorError: Could not find JS function u'OF'\n\nIn February 2015, the new YouTube player contained a character sequence in a string that was misinterpreted by old versions of youtube-dl. See [above](#how-do-i-update-youtube-dl) for how to update youtube-dl.\n\n### HTTP Error 429: Too Many Requests or 402: Payment Required\n\nThese two error codes indicate that the service is blocking your IP address because of overuse. Usually this is a soft block meaning that you can gain access again after solving CAPTCHA. Just open a browser and solve a CAPTCHA the service suggests you and after that [pass cookies](#how-do-i-pass-cookies-to-youtube-dl) to youtube-dl. Note that if your machine has multiple external IPs then you should also pass exactly the same IP you've used for solving CAPTCHA with [`--source-address`](#network-options). Also you may need to pass a `User-Agent` HTTP header of your browser with [`--user-agent`](#workarounds).\n\nIf this is not the case (no CAPTCHA suggested to solve by the service) then you can contact the service and ask them to unblock your IP address, or - if you have acquired a whitelisted IP address already - use the [`--proxy` or `--source-address` options](#network-options) to select another IP address.\n\n### SyntaxError: Non-ASCII character\n\nThe error\n\n    File \"youtube-dl\", line 2\n    SyntaxError: Non-ASCII character '\\x93' ...\n\nmeans you're using an outdated version of Python. Please update to Python 2.6 or 2.7.\n\n### What is this binary file? Where has the code gone?\n\nSince June 2012 ([#342](https://github.com/ytdl-org/youtube-dl/issues/342)) youtube-dl is packed as an executable zipfile, simply unzip it (might need renaming to `youtube-dl.zip` first on some systems) or clone the git repository, as laid out above. If you modify the code, you can run it by executing the `__main__.py` file. To recompile the executable, run `make youtube-dl`.\n\n### The exe throws an error due to missing `MSVCR100.dll`\n\nTo run the exe you need to install first the [Microsoft Visual C++ 2010 Service Pack 1 Redistributable Package (x86)](https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x86.exe).\n\n### On Windows, how should I set up ffmpeg and youtube-dl? Where should I put the exe files?\n\nIf you put youtube-dl and ffmpeg in the same directory that you're running the command from, it will work, but that's rather cumbersome.\n\nTo make a different directory work - either for ffmpeg, or for youtube-dl, or for both - simply create the directory (say, `C:\\bin`, or `C:\\Users\\<User name>\\bin`), put all the executables directly in there, and then [set your PATH environment variable](https://www.java.com/en/download/help/path.xml) to include that directory.\n\nFrom then on, after restarting your shell, you will be able to access both youtube-dl and ffmpeg (and youtube-dl will be able to find ffmpeg) by simply typing `youtube-dl` or `ffmpeg`, no matter what directory you're in.\n\n### How do I put downloads into a specific folder?\n\nUse the `-o` to specify an [output template](#output-template), for example `-o \"/home/user/videos/%(title)s-%(id)s.%(ext)s\"`. If you want this for all of your downloads, put the option into your [configuration file](#configuration).\n\n### How do I download a video starting with a `-`?\n\nEither prepend `https://www.youtube.com/watch?v=` or separate the ID from the options with `--`:\n\n    youtube-dl -- -wNyEUrxzFU\n    youtube-dl \"https://www.youtube.com/watch?v=-wNyEUrxzFU\"\n\n### How do I pass cookies to youtube-dl?\n\nUse the `--cookies` option, for example `--cookies /path/to/cookies/file.txt`.\n\nIn order to extract cookies from browser use any conforming browser extension for exporting cookies. For example, [Get cookies.txt LOCALLY](https://chrome.google.com/webstore/detail/get-cookiestxt-locally/cclelndahbckbenkjhflpdbgdldlbecc) (for Chrome) or [cookies.txt](https://addons.mozilla.org/en-US/firefox/addon/cookies-txt/) (for Firefox).\n\nNote that the cookies file must be in Mozilla/Netscape format and the first line of the cookies file must be either `# HTTP Cookie File` or `# Netscape HTTP Cookie File`. Make sure you have correct [newline format](https://en.wikipedia.org/wiki/Newline) in the cookies file and convert newlines if necessary to correspond with your OS, namely `CRLF` (`\\r\\n`) for Windows and `LF` (`\\n`) for Unix and Unix-like systems (Linux, macOS, etc.). `HTTP Error 400: Bad Request` when using `--cookies` is a good sign of invalid newline format.\n\nPassing cookies to youtube-dl is a good way to workaround login when a particular extractor does not implement it explicitly. Another use case is working around [CAPTCHA](https://en.wikipedia.org/wiki/CAPTCHA) some websites require you to solve in particular cases in order to get access (e.g. YouTube, CloudFlare).\n\n### How do I stream directly to media player?\n\nYou will first need to tell youtube-dl to stream media to stdout with `-o -`, and also tell your media player to read from stdin (it must be capable of this for streaming) and then pipe former to latter. For example, streaming to [vlc](https://www.videolan.org/) can be achieved with:\n\n    youtube-dl -o - \"https://www.youtube.com/watch?v=BaW_jenozKcj\" | vlc -\n\n### How do I download only new videos from a playlist?\n\nUse download-archive feature. With this feature you should initially download the complete playlist with `--download-archive /path/to/download/archive/file.txt` that will record identifiers of all the videos in a special file. Each subsequent run with the same `--download-archive` will download only new videos and skip all videos that have been downloaded before. Note that only successful downloads are recorded in the file.\n\nFor example, at first,\n\n    youtube-dl --download-archive archive.txt \"https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re\"\n\nwill download the complete `PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re` playlist and create a file `archive.txt`. Each subsequent run will only download new videos if any:\n\n    youtube-dl --download-archive archive.txt \"https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re\"\n\n### Should I add `--hls-prefer-native` into my config?\n\nWhen youtube-dl detects an HLS video, it can download it either with the built-in downloader or ffmpeg. Since many HLS streams are slightly invalid and ffmpeg/youtube-dl each handle some invalid cases better than the other, there is an option to switch the downloader if needed.\n\nWhen youtube-dl knows that one particular downloader works better for a given website, that downloader will be picked. Otherwise, youtube-dl will pick the best downloader for general compatibility, which at the moment happens to be ffmpeg. This choice may change in future versions of youtube-dl, with improvements of the built-in downloader and/or ffmpeg.\n\nIn particular, the generic extractor (used when your website is not in the [list of supported sites by youtube-dl](https://ytdl-org.github.io/youtube-dl/supportedsites.html) cannot mandate one specific downloader.\n\nIf you put either `--hls-prefer-native` or `--hls-prefer-ffmpeg` into your configuration, a different subset of videos will fail to download correctly. Instead, it is much better to [file an issue](https://yt-dl.org/bug) or a pull request which details why the native or the ffmpeg HLS downloader is a better choice for your use case.\n\n### Can you add support for this anime video site, or site which shows current movies for free?\n\nAs a matter of policy (as well as legality), youtube-dl does not include support for services that specialize in infringing copyright. As a rule of thumb, if you cannot easily find a video that the service is quite obviously allowed to distribute (i.e. that has been uploaded by the creator, the creator's distributor, or is published under a free license), the service is probably unfit for inclusion to youtube-dl.\n\nA note on the service that they don't host the infringing content, but just link to those who do, is evidence that the service should **not** be included into youtube-dl. The same goes for any DMCA note when the whole front page of the service is filled with videos they are not allowed to distribute. A \"fair use\" note is equally unconvincing if the service shows copyright-protected videos in full without authorization.\n\nSupport requests for services that **do** purchase the rights to distribute their content are perfectly fine though. If in doubt, you can simply include a source that mentions the legitimate purchase of content.\n\n### How can I speed up work on my issue?\n\n(Also known as: Help, my important issue not being solved!) The youtube-dl core developer team is quite small. While we do our best to solve as many issues as possible, sometimes that can take quite a while. To speed up your issue, here's what you can do:\n\nFirst of all, please do report the issue [at our issue tracker](https://yt-dl.org/bugs). That allows us to coordinate all efforts by users and developers, and serves as a unified point. Unfortunately, the youtube-dl project has grown too large to use personal email as an effective communication channel.\n\nPlease read the [bug reporting instructions](#bugs) below. A lot of bugs lack all the necessary information. If you can, offer proxy, VPN, or shell access to the youtube-dl developers. If you are able to, test the issue from multiple computers in multiple countries to exclude local censorship or misconfiguration issues.\n\nIf nobody is interested in solving your issue, you are welcome to take matters into your own hands and submit a pull request (or coerce/pay somebody else to do so).\n\nFeel free to bump the issue from time to time by writing a small comment (\"Issue is still present in youtube-dl version ...from France, but fixed from Belgium\"), but please not more than once a month. Please do not declare your issue as `important` or `urgent`.\n\n### How can I detect whether a given URL is supported by youtube-dl?\n\nFor one, have a look at the [list of supported sites](docs/supportedsites.md). Note that it can sometimes happen that the site changes its URL scheme (say, from https://example.com/video/1234567 to https://example.com/v/1234567 ) and youtube-dl reports an URL of a service in that list as unsupported. In that case, simply report a bug.\n\nIt is *not* possible to detect whether a URL is supported or not. That's because youtube-dl contains a generic extractor which matches **all** URLs. You may be tempted to disable, exclude, or remove the generic extractor, but the generic extractor not only allows users to extract videos from lots of websites that embed a video from another service, but may also be used to extract video from a service that it's hosting itself. Therefore, we neither recommend nor support disabling, excluding, or removing the generic extractor.\n\nIf you want to find out whether a given URL is supported, simply call youtube-dl with it. If you get no videos back, chances are the URL is either not referring to a video or unsupported. You can find out which by examining the output (if you run youtube-dl on the console) or catching an `UnsupportedError` exception if you run it from a Python program.\n\n# Why do I need to go through that much red tape when filing bugs?\n\nBefore we had the issue template, despite our extensive [bug reporting instructions](#bugs), about 80% of the issue reports we got were useless, for instance because people used ancient versions hundreds of releases old, because of simple syntactic errors (not in youtube-dl but in general shell usage), because the problem was already reported multiple times before, because people did not actually read an error message, even if it said \"please install ffmpeg\", because people did not mention the URL they were trying to download and many more simple, easy-to-avoid problems, many of whom were totally unrelated to youtube-dl.\n\nyoutube-dl is an open-source project manned by too few volunteers, so we'd rather spend time fixing bugs where we are certain none of those simple problems apply, and where we can be reasonably confident to be able to reproduce the issue without asking the reporter repeatedly. As such, the output of `youtube-dl -v YOUR_URL_HERE` is really all that's required to file an issue. The issue template also guides you through some basic steps you can do, such as checking that your version of youtube-dl is current.\n\n# DEVELOPER INSTRUCTIONS\n\nMost users do not need to build youtube-dl and can [download the builds](https://ytdl-org.github.io/youtube-dl/download.html) or get them from their distribution.\n\nTo run youtube-dl as a developer, you don't need to build anything either. Simply execute\n\n    python -m youtube_dl\n\nTo run the test, simply invoke your favorite test runner, or execute a test file directly; any of the following work:\n\n    python -m unittest discover\n    python test/test_download.py\n    nosetests\n\nFor Python versions 3.6 and later, you can use [pynose](https://pypi.org/project/pynose/) to implement `nosetests`. The original [nose](https://pypi.org/project/nose/) has not been upgraded for 3.10 and later.\n\nSee item 6 of [new extractor tutorial](#adding-support-for-a-new-site) for how to run extractor specific test cases.\n\nIf you want to create a build of youtube-dl yourself, you'll need\n\n* python\n* make (only GNU make is supported)\n* pandoc\n* zip\n* nosetests\n\n### Adding support for a new site\n\nIf you want to add support for a new site, first of all **make sure** this site is **not dedicated to [copyright infringement](README.md#can-you-add-support-for-this-anime-video-site-or-site-which-shows-current-movies-for-free)**. youtube-dl does **not support** such sites thus pull requests adding support for them **will be rejected**.\n\nAfter you have ensured this site is distributing its content legally, you can follow this quick list (assuming your service is called `yourextractor`):\n\n1. [Fork this repository](https://github.com/ytdl-org/youtube-dl/fork)\n2. Check out the source code with:\n\n        git clone git@github.com:YOUR_GITHUB_USERNAME/youtube-dl.git\n\n3. Start a new git branch with\n\n        cd youtube-dl\n        git checkout -b yourextractor\n\n4. Start with this simple template and save it to `youtube_dl/extractor/yourextractor.py`:\n\n    ```python\n    # coding: utf-8\n    from __future__ import unicode_literals\n\n    from .common import InfoExtractor\n\n\n    class YourExtractorIE(InfoExtractor):\n        _VALID_URL = r'https?://(?:www\\.)?yourextractor\\.com/watch/(?P<id>[0-9]+)'\n        _TEST = {\n            'url': 'https://yourextractor.com/watch/42',\n            'md5': 'TODO: md5 sum of the first 10241 bytes of the video file (use --test)',\n            'info_dict': {\n                'id': '42',\n                'ext': 'mp4',\n                'title': 'Video title goes here',\n                'thumbnail': r're:^https?://.*\\.jpg$',\n                # TODO more properties, either as:\n                # * A value\n                # * MD5 checksum; start the string with md5:\n                # * A regular expression; start the string with re:\n                # * Any Python type (for example int or float)\n            }\n        }\n\n        def _real_extract(self, url):\n            video_id = self._match_id(url)\n            webpage = self._download_webpage(url, video_id)\n\n            # TODO more code goes here, for example ...\n            title = self._html_search_regex(r'<h1>(.+?)</h1>', webpage, 'title')\n\n            return {\n                'id': video_id,\n                'title': title,\n                'description': self._og_search_description(webpage),\n                'uploader': self._search_regex(r'<div[^>]+id=\"uploader\"[^>]*>([^<]+)<', webpage, 'uploader', fatal=False),\n                # TODO more properties (see youtube_dl/extractor/common.py)\n            }\n    ```\n5. Add an import in [`youtube_dl/extractor/extractors.py`](https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/extractors.py).\n6. Run `python test/test_download.py TestDownload.test_YourExtractor`. This *should fail* at first, but you can continually re-run it until you're done. If you decide to add more than one test (actually, test case) then rename ``_TEST`` to ``_TESTS`` and make it into a list of dictionaries. The tests will then be named `TestDownload.test_YourExtractor`, `TestDownload.test_YourExtractor_1`, `TestDownload.test_YourExtractor_2`, etc. Note:\n    * the test names use the extractor class name **without the trailing `IE`**\n    * tests with `only_matching` key in test's dict are not counted.\n8. Have a look at [`youtube_dl/extractor/common.py`](https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/extractor/common.py) for possible helper methods and a [detailed description of what your extractor should and may return](https://github.com/ytdl-org/youtube-dl/blob/7f41a598b3fba1bcab2817de64a08941200aa3c8/youtube_dl/extractor/common.py#L94-L303). Add tests and code for as many as you want.\n9. Make sure your code follows [youtube-dl coding conventions](#youtube-dl-coding-conventions) and check the code with [flake8](https://flake8.pycqa.org/en/latest/index.html#quickstart):\n\n        $ flake8 youtube_dl/extractor/yourextractor.py\n\n9. Make sure your code works under all [Python](https://www.python.org/) versions claimed supported by youtube-dl, namely 2.6, 2.7, and 3.2+.\n10. When the tests pass, [add](https://git-scm.com/docs/git-add) the new files and [commit](https://git-scm.com/docs/git-commit) them and [push](https://git-scm.com/docs/git-push) the result, like this:\n\n        $ git add youtube_dl/extractor/extractors.py\n        $ git add youtube_dl/extractor/yourextractor.py\n        $ git commit -m '[yourextractor] Add new extractor'\n        $ git push origin yourextractor\n\n11. Finally, [create a pull request](https://help.github.com/articles/creating-a-pull-request). We'll then review and merge it.\n\nIn any case, thank you very much for your contributions!\n\n## youtube-dl coding conventions\n\nThis section introduces guidelines for writing idiomatic, robust and future-proof extractor code.\n\nExtractors are very fragile by nature since they depend on the layout of the source data provided by 3rd party media hosters out of your control and this layout tends to change. As an extractor implementer your task is not only to write code that will extract media links and metadata correctly but also to minimize dependency on the source's layout and even to make the code foresee potential future changes and be ready for that. This is important because it will allow the extractor not to break on minor layout changes thus keeping old youtube-dl versions working. Even though this breakage issue is easily fixed by emitting a new version of youtube-dl with a fix incorporated, all the previous versions become broken in all repositories and distros' packages that may not be so prompt in fetching the update from us. Needless to say, some non rolling release distros may never receive an update at all.\n\n### Mandatory and optional metafields\n\nFor extraction to work youtube-dl relies on metadata your extractor extracts and provides to youtube-dl expressed by an [information dictionary](https://github.com/ytdl-org/youtube-dl/blob/7f41a598b3fba1bcab2817de64a08941200aa3c8/youtube_dl/extractor/common.py#L94-L303) or simply *info dict*. Only the following meta fields in the *info dict* are considered mandatory for a successful extraction process by youtube-dl:\n\n - `id` (media identifier)\n - `title` (media title)\n - `url` (media download URL) or `formats`\n\nIn fact only the last option is technically mandatory (i.e. if you can't figure out the download location of the media the extraction does not make any sense). But by convention youtube-dl also treats `id` and `title` as mandatory. Thus the aforementioned metafields are the critical data that the extraction does not make any sense without and if any of them fail to be extracted then the extractor is considered completely broken.\n\n[Any field](https://github.com/ytdl-org/youtube-dl/blob/7f41a598b3fba1bcab2817de64a08941200aa3c8/youtube_dl/extractor/common.py#L188-L303) apart from the aforementioned ones are considered **optional**. That means that extraction should be **tolerant** to situations when sources for these fields can potentially be unavailable (even if they are always available at the moment) and **future-proof** in order not to break the extraction of general purpose mandatory fields.\n\n#### Example\n\nSay you have some source dictionary `meta` that you've fetched as JSON with HTTP request and it has a key `summary`:\n\n```python\nmeta = self._download_json(url, video_id)\n```\n\nAssume at this point `meta`'s layout is:\n\n```python\n{\n    ...\n    \"summary\": \"some fancy summary text\",\n    ...\n}\n```\n\nAssume you want to extract `summary` and put it into the resulting info dict as `description`. Since `description` is an optional meta field you should be ready that this key may be missing from the `meta` dict, so that you should extract it like:\n\n```python\ndescription = meta.get('summary')  # correct\n```\n\nand not like:\n\n```python\ndescription = meta['summary']  # incorrect\n```\n\nThe latter will break extraction process with `KeyError` if `summary` disappears from `meta` at some later time but with the former approach extraction will just go ahead with `description` set to `None` which is perfectly fine (remember `None` is equivalent to the absence of data).\n\nSimilarly, you should pass `fatal=False` when extracting optional data from a webpage with `_search_regex`, `_html_search_regex` or similar methods, for instance:\n\n```python\ndescription = self._search_regex(\n    r'<span[^>]+id=\"title\"[^>]*>([^<]+)<',\n    webpage, 'description', fatal=False)\n```\n\nWith `fatal` set to `False` if `_search_regex` fails to extract `description` it will emit a warning and continue extraction.\n\nYou can also pass `default=<some fallback value>`, for example:\n\n```python\ndescription = self._search_regex(\n    r'<span[^>]+id=\"title\"[^>]*>([^<]+)<',\n    webpage, 'description', default=None)\n```\n\nOn failure this code will silently continue the extraction with `description` set to `None`. That is useful for metafields that may or may not be present.\n\n### Provide fallbacks\n\nWhen extracting metadata try to do so from multiple sources. For example if `title` is present in several places, try extracting from at least some of them. This makes it more future-proof in case some of the sources become unavailable.\n\n#### Example\n\nSay `meta` from the previous example has a `title` and you are about to extract it. Since `title` is a mandatory meta field you should end up with something like:\n\n```python\ntitle = meta['title']\n```\n\nIf `title` disappears from `meta` in future due to some changes on the hoster's side the extraction would fail since `title` is mandatory. That's expected.\n\nAssume that you have some another source you can extract `title` from, for example `og:title` HTML meta of a `webpage`. In this case you can provide a fallback scenario:\n\n```python\ntitle = meta.get('title') or self._og_search_title(webpage)\n```\n\nThis code will try to extract from `meta` first and if it fails it will try extracting `og:title` from a `webpage`.\n\n### Regular expressions\n\n#### Don't capture groups you don't use\n\nCapturing group must be an indication that it's used somewhere in the code. Any group that is not used must be non capturing.\n\n##### Example\n\nDon't capture id attribute name here since you can't use it for anything anyway.\n\nCorrect:\n\n```python\nr'(?:id|ID)=(?P<id>\\d+)'\n```\n\nIncorrect:\n```python\nr'(id|ID)=(?P<id>\\d+)'\n```\n\n\n#### Make regular expressions relaxed and flexible\n\nWhen using regular expressions try to write them fuzzy, relaxed and flexible, skipping insignificant parts that are more likely to change, allowing both single and double quotes for quoted values and so on.\n\n##### Example\n\nSay you need to extract `title` from the following HTML code:\n\n```html\n<span style=\"position: absolute; left: 910px; width: 90px; float: right; z-index: 9999;\" class=\"title\">some fancy title</span>\n```\n\nThe code for that task should look similar to:\n\n```python\ntitle = self._search_regex(\n    r'<span[^>]+class=\"title\"[^>]*>([^<]+)', webpage, 'title')\n```\n\nOr even better:\n\n```python\ntitle = self._search_regex(\n    r'<span[^>]+class=([\"\\'])title\\1[^>]*>(?P<title>[^<]+)',\n    webpage, 'title', group='title')\n```\n\nNote how you tolerate potential changes in the `style` attribute's value or switch from using double quotes to single for `class` attribute:\n\nThe code definitely should not look like:\n\n```python\ntitle = self._search_regex(\n    r'<span style=\"position: absolute; left: 910px; width: 90px; float: right; z-index: 9999;\" class=\"title\">(.*?)</span>',\n    webpage, 'title', group='title')\n```\n\n### Long lines policy\n\nThere is a soft limit to keep lines of code under 80 characters long. This means it should be respected if possible and if it does not make readability and code maintenance worse.\n\nFor example, you should **never** split long string literals like URLs or some other often copied entities over multiple lines to fit this limit:\n\nCorrect:\n\n```python\n'https://www.youtube.com/watch?v=FqZTN594JQw&list=PLMYEtVRpaqY00V9W81Cwmzp6N6vZqfUKD4'\n```\n\nIncorrect:\n\n```python\n'https://www.youtube.com/watch?v=FqZTN594JQw&list='\n'PLMYEtVRpaqY00V9W81Cwmzp6N6vZqfUKD4'\n```\n\n### Inline values\n\nExtracting variables is acceptable for reducing code duplication and improving readability of complex expressions. However, you should avoid extracting variables used only once and moving them to opposite parts of the extractor file, which makes reading the linear flow difficult.\n\n#### Example\n\nCorrect:\n\n```python\ntitle = self._html_search_regex(r'<title>([^<]+)</title>', webpage, 'title')\n```\n\nIncorrect:\n\n```python\nTITLE_RE = r'<title>([^<]+)</title>'\n# ...some lines of code...\ntitle = self._html_search_regex(TITLE_RE, webpage, 'title')\n```\n\n### Collapse fallbacks\n\nMultiple fallback values can quickly become unwieldy. Collapse multiple fallback values into a single expression via a list of patterns.\n\n#### Example\n\nGood:\n\n```python\ndescription = self._html_search_meta(\n    ['og:description', 'description', 'twitter:description'],\n    webpage, 'description', default=None)\n```\n\nUnwieldy:\n\n```python\ndescription = (\n    self._og_search_description(webpage, default=None)\n    or self._html_search_meta('description', webpage, default=None)\n    or self._html_search_meta('twitter:description', webpage, default=None))\n```\n\nMethods supporting list of patterns are: `_search_regex`, `_html_search_regex`, `_og_search_property`, `_html_search_meta`.\n\n### Trailing parentheses\n\nAlways move trailing parentheses after the last argument.\n\n#### Example\n\nCorrect:\n\n```python\n    lambda x: x['ResultSet']['Result'][0]['VideoUrlSet']['VideoUrl'],\n    list)\n```\n\nIncorrect:\n\n```python\n    lambda x: x['ResultSet']['Result'][0]['VideoUrlSet']['VideoUrl'],\n    list,\n)\n```\n\n### Use convenience conversion and parsing functions\n\nWrap all extracted numeric data into safe functions from [`youtube_dl/utils.py`](https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/utils.py): `int_or_none`, `float_or_none`. Use them for string to number conversions as well.\n\nUse `url_or_none` for safe URL processing.\n\nUse `traverse_obj` for safe metadata extraction from parsed JSON.\n\nUse `unified_strdate` for uniform `upload_date` or any `YYYYMMDD` meta field extraction, `unified_timestamp` for uniform `timestamp` extraction, `parse_filesize` for `filesize` extraction, `parse_count` for count meta fields extraction, `parse_resolution`, `parse_duration` for `duration` extraction, `parse_age_limit` for `age_limit` extraction.\n\nExplore [`youtube_dl/utils.py`](https://github.com/ytdl-org/youtube-dl/blob/master/youtube_dl/utils.py) for more useful convenience functions.\n\n#### More examples\n\n##### Safely extract optional description from parsed JSON\n\nWhen processing complex JSON, as often returned by site API requests or stashed in web pages for \"hydration\", you can use the `traverse_obj()` utility function to handle multiple fallback values and to ensure the expected type of metadata items. The function's docstring defines how the function works: also review usage in the codebase for more examples.\n\nIn this example, a text `description`, or `None`, is pulled from the `.result.video[0].summary` member of the parsed JSON `response`, if available.\n\n```python\ndescription = traverse_obj(response, ('result', 'video', 0, 'summary', T(compat_str)))\n```\n`T(...)` is a shorthand for a set literal; if you hate people who still run Python 2.6, `T(type_or_transformation)` could be written as a set literal `{type_or_transformation}`.\n\nSome extractors use the older and less capable `try_get()` function in the same way.\n\n```python\ndescription = try_get(response, lambda x: x['result']['video'][0]['summary'], compat_str)\n```\n\n##### Safely extract more optional metadata\n\nIn this example, various optional metadata values are extracted from the `.result.video[0]` member of the parsed JSON `response`, which is expected to be a JS object, parsed into a `dict`, with no crash if that isn't so, or if any of the target values are missing or invalid.\n\n```python\nvideo = traverse_obj(response, ('result', 'video', 0, T(dict))) or {}\n# formerly:\n# video = try_get(response, lambda x: x['result']['video'][0], dict) or {}\ndescription = video.get('summary')\nduration = float_or_none(video.get('durationMs'), scale=1000)\nview_count = int_or_none(video.get('views'))\n```\n\n#### Safely extract nested lists\n\nSuppose you've extracted JSON like this into a Python data structure named `media_json` using, say, the `_download_json()` or `_parse_json()` methods of `InfoExtractor`:\n```json\n{\n    \"title\": \"Example video\",\n    \"comment\": \"try extracting this\",\n    \"media\": [{\n        \"type\": \"bad\",\n        \"size\": 320,\n        \"url\": \"https://some.cdn.site/bad.mp4\"\n    }, {\n        \"type\": \"streaming\",\n        \"url\": \"https://some.cdn.site/hls.m3u8\"\n    }, {\n        \"type\": \"super\",\n        \"size\": 1280,\n        \"url\": \"https://some.cdn.site/good.webm\"\n    }],\n    \"moreStuff\": \"more values\",\n    ...\n}\n```\n\nThen extractor code like this can collect the various fields of the JSON:\n```python\n...\nfrom ..utils import (\n    determine_ext,\n    int_or_none,\n    T,\n    traverse_obj,\n    txt_or_none,\n    url_or_none,\n)\n...\n        ...\n        info_dict = {}\n        # extract title and description if valid and not empty\n        info_dict.update(traverse_obj(media_json, {\n            'title': ('title', T(txt_or_none)),\n            'description': ('comment', T(txt_or_none)),\n        }))\n\n        # extract any recognisable media formats\n        fmts = []\n        # traverse into \"media\" list, extract `dict`s with desired keys\n        for fmt in traverse_obj(media_json, ('media', Ellipsis, {\n                'format_id': ('type', T(txt_or_none)),\n                'url': ('url', T(url_or_none)),\n                'width': ('size', T(int_or_none)), })):\n            # bad `fmt` values were `None` and removed\n            if 'url' not in fmt:\n                continue\n            fmt_url = fmt['url']  # known to be valid URL\n            ext = determine_ext(fmt_url)\n            if ext == 'm3u8':\n                fmts.extend(self._extract_m3u8_formats(fmt_url, video_id, 'mp4', fatal=False))\n            else:\n                fmt['ext'] = ext\n                fmts.append(fmt)\n\n        # sort, raise if no formats\n        self._sort_formats(fmts)\n\n        info_dict['formats'] = fmts\n        ...\n```\nThe extractor raises an exception rather than random crashes if the JSON structure changes so that no formats are found.\n\n# EMBEDDING YOUTUBE-DL\n\nyoutube-dl makes the best effort to be a good command-line program, and thus should be callable from any programming language. If you encounter any problems parsing its output, feel free to [create a report](https://github.com/ytdl-org/youtube-dl/issues/new).\n\nFrom a Python program, you can embed youtube-dl in a more powerful fashion, like this:\n\n```python\nfrom __future__ import unicode_literals\nimport youtube_dl\n\nydl_opts = {}\nwith youtube_dl.YoutubeDL(ydl_opts) as ydl:\n    ydl.download(['https://www.youtube.com/watch?v=BaW_jenozKc'])\n```\n\nMost likely, you'll want to use various options. For a list of options available, have a look at [`youtube_dl/YoutubeDL.py`](https://github.com/ytdl-org/youtube-dl/blob/3e4cedf9e8cd3157df2457df7274d0c842421945/youtube_dl/YoutubeDL.py#L137-L312). For a start, if you want to intercept youtube-dl's output, set a `logger` object.\n\nHere's a more complete example of a program that outputs only errors (and a short message after the download is finished), and downloads/converts the video to an mp3 file:\n\n```python\nfrom __future__ import unicode_literals\nimport youtube_dl\n\n\nclass MyLogger(object):\n    def debug(self, msg):\n        pass\n\n    def warning(self, msg):\n        pass\n\n    def error(self, msg):\n        print(msg)\n\n\ndef my_hook(d):\n    if d['status'] == 'finished':\n        print('Done downloading, now converting ...')\n\n\nydl_opts = {\n    'format': 'bestaudio/best',\n    'postprocessors': [{\n        'key': 'FFmpegExtractAudio',\n        'preferredcodec': 'mp3',\n        'preferredquality': '192',\n    }],\n    'logger': MyLogger(),\n    'progress_hooks': [my_hook],\n}\nwith youtube_dl.YoutubeDL(ydl_opts) as ydl:\n    ydl.download(['https://www.youtube.com/watch?v=BaW_jenozKc'])\n```\n\n# BUGS\n\nBugs and suggestions should be reported in the issue tracker: <https://github.com/ytdl-org/youtube-dl/issues> (<https://yt-dl.org/bug> is an alias for this). Unless you were prompted to or there is another pertinent reason (e.g. GitHub fails to accept the bug report), please do not send bug reports via personal email. For discussions, join us in the IRC channel [#youtube-dl](irc://chat.freenode.net/#youtube-dl) on freenode ([webchat](https://webchat.freenode.net/?randomnick=1&channels=youtube-dl)).\n\n## Opening a bug report or suggestion\n\nBe sure to follow instructions provided **below** and **in the issue tracker**. Complete the appropriate issue template fully. Consider whether your problem is covered by an existing issue: if so, follow the discussion there. Avoid commenting on existing duplicate issues as such comments do not add to the discussion of the issue and are liable to be treated as spam.\n\n**Please include the full output of youtube-dl when run with `-v`**, i.e. **add** `-v` flag to **your command line**, copy the **whole** output and post it in the issue body wrapped in \\`\\`\\` for better formatting. It should look similar to this:\n```\n$ youtube-dl -v <your command line>\n[debug] System config: []\n[debug] User config: []\n[debug] Command-line args: [u'-v', u'https://www.youtube.com/watch?v=BaW_jenozKcj']\n[debug] Encodings: locale cp1251, fs mbcs, out cp866, pref cp1251\n[debug] youtube-dl version 2015.12.06\n[debug] Git HEAD: 135392e\n[debug] Python version 2.6.6 - Windows-2003Server-5.2.3790-SP2\n[debug] exe versions: ffmpeg N-75573-g1d0487f, ffprobe N-75573-g1d0487f, rtmpdump 2.4\n[debug] Proxy map: {}\n...\n```\n**Do not post screenshots of verbose logs; only plain text is acceptable.**\n\nThe output (including the first lines) contains important debugging information. Issues without the full output are often not reproducible and therefore do not get solved in short order, if ever.\n\nFinally please review your issue to avoid various common mistakes (you can and should use this as a checklist) listed below.\n\n### Is the description of the issue itself sufficient?\n\nWe often get issue reports that are hard to understand. To avoid subsequent clarifications, and to assist participants who are not native English speakers, please elaborate on what feature you are requesting, or what bug you want to be fixed.\n\nMake sure that it's obvious\n\n- What the problem is\n- How it could be fixed\n- How your proposed solution would look\n\nIf your report is shorter than two lines, it is almost certainly missing some of these, which makes it hard for us to respond to it. We're often too polite to close the issue outright, but the missing info makes misinterpretation likely. As a committer myself, I often get frustrated by these issues, since the only possible way for me to move forward on them is to ask for clarification over and over.\n\nFor bug reports, this means that your report should contain the *complete* output of youtube-dl when called with the `-v` flag. The error message you get for (most) bugs even says so, but you would not believe how many of our bug reports do not contain this information.\n\nIf your server has multiple IPs or you suspect censorship, adding `--call-home` may be a good idea to get more diagnostics. If the error is `ERROR: Unable to extract ...` and you cannot reproduce it from multiple countries, add `--dump-pages` (warning: this will yield a rather large output, redirect it to the file `log.txt` by adding `>log.txt 2>&1` to your command-line) or upload the `.dump` files you get when you add `--write-pages` [somewhere](https://gist.github.com/).\n\n**Site support requests must contain an example URL**. An example URL is a URL you might want to download, like `https://www.youtube.com/watch?v=BaW_jenozKc`. There should be an obvious video present. Except under very special circumstances, the main page of a video service (e.g. `https://www.youtube.com/`) is *not* an example URL.\n\n###  Is the issue already documented?\n\nMake sure that someone has not already opened the issue you're trying to open. Search at the top of the window or browse the [GitHub Issues](https://github.com/ytdl-org/youtube-dl/search?type=Issues) of this repository. Initially, at least, use the search term `-label:duplicate` to focus on active issues. If there is an issue, feel free to write something along the lines of \"This affects me as well, with version 2015.01.01. Here is some more information on the issue: ...\". While some issues may be old, a new post into them often spurs rapid activity.\n\n###  Are you using the latest version?\n\nBefore reporting any issue, type `youtube-dl -U`. This should report that you're up-to-date. About 20% of the reports we receive are already fixed, but people are using outdated versions. This goes for feature requests as well.\n\n###  Why are existing options not enough?\n\nBefore requesting a new feature, please have a quick peek at [the list of supported options](https://github.com/ytdl-org/youtube-dl/blob/master/README.md#options). Many feature requests are for features that actually exist already! Please, absolutely do show off your work in the issue report and detail how the existing similar options do *not* solve your problem.\n\n###  Is there enough context in your bug report?\n\nPeople want to solve problems, and often think they do us a favor by breaking down their larger problems (e.g. wanting to skip already downloaded files) to a specific request (e.g. requesting us to look whether the file exists before downloading the info page). However, what often happens is that they break down the problem into two steps: One simple, and one impossible (or extremely complicated one).\n\nWe are then presented with a very complicated request when the original problem could be solved far easier, e.g. by recording the downloaded video IDs in a separate file. To avoid this, you must include the greater context where it is non-obvious. In particular, every feature request that does not consist of adding support for a new site should contain a use case scenario that explains in what situation the missing feature would be useful.\n\n###  Does the issue involve one problem, and one problem only?\n\nSome of our users seem to think there is a limit of issues they can or should open. There is no limit of issues they can or should open. While it may seem appealing to be able to dump all your issues into one ticket, that means that someone who solves one of your issues cannot mark the issue as closed. Typically, reporting a bunch of issues leads to the ticket lingering since nobody wants to attack that behemoth, until someone mercifully splits the issue into multiple ones.\n\nIn particular, every site support request issue should only pertain to services at one site (generally under a common domain, but always using the same backend technology). Do not request support for vimeo user videos, White house podcasts, and Google Plus pages in the same issue. Also, make sure that you don't post bug reports alongside feature requests. As a rule of thumb, a feature request does not include outputs of youtube-dl that are not immediately related to the feature at hand. Do not post reports of a network error alongside the request for a new video service.\n\n###  Is anyone going to need the feature?\n\nOnly post features that you (or an incapacitated friend you can personally talk to) require. Do not post features because they seem like a good idea. If they are really useful, they will be requested by someone who requires them.\n\n###  Is your question about youtube-dl?\n\nIt may sound strange, but some bug reports we receive are completely unrelated to youtube-dl and relate to a different, or even the reporter's own, application. Please make sure that you are actually using youtube-dl. If you are using a UI for youtube-dl, report the bug to the maintainer of the actual application providing the UI. On the other hand, if your UI for youtube-dl fails in some way you believe is related to youtube-dl, by all means, go ahead and report the bug.\n\n# COPYRIGHT\n\nyoutube-dl is released into the public domain by the copyright holders.\n\nThis README file was originally written by [Daniel Bolton](https://github.com/dbbolton) and is likewise released into the public domain.\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": "devscripts/__init__.py", "size": 78, "license": "Unlicense", "content_sha": "750dbdca78612449d24745e4774b6c95a1339db1", "findings": [], "content": "# Empty file needed to make devscripts.utils properly importable from outside\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": "devscripts/bash-completion.py", "size": 942, "license": "Unlicense", "content_sha": "7db396a77fbca621412f70286a90a2166878ab17", "findings": [], "content": "#!/usr/bin/env python\nfrom __future__ import unicode_literals\n\nimport os\nfrom os.path import dirname as dirn\nimport sys\n\nsys.path.insert(0, dirn(dirn(os.path.abspath(__file__))))\n\nimport youtube_dl\nfrom youtube_dl.compat import compat_open as open\n\nfrom utils import read_file\n\nBASH_COMPLETION_FILE = \"youtube-dl.bash-completion\"\nBASH_COMPLETION_TEMPLATE = \"devscripts/bash-completion.in\"\n\n\ndef build_completion(opt_parser):\n    opts_flag = []\n    for group in opt_parser.option_groups:\n        for option in group.option_list:\n            # for every long flag\n            opts_flag.append(option.get_opt_string())\n    template = read_file(BASH_COMPLETION_TEMPLATE)\n    with open(BASH_COMPLETION_FILE, \"w\", encoding='utf-8') as f:\n        # just using the special char\n        filled_template = template.replace(\"{{flags}}\", \" \".join(opts_flag))\n        f.write(filled_template)\n\n\nparser = youtube_dl.parseOpts()[0]\nbuild_completion(parser)\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": "devscripts/buildserver.py", "size": 13935, "license": "Unlicense", "content_sha": "4a4295ba9cd3b8acf739c983248494c989781e63", "findings": [], "content": "#!/usr/bin/python3\n\nimport argparse\nimport ctypes\nimport functools\nimport shutil\nimport subprocess\nimport sys\nimport tempfile\nimport threading\nimport traceback\nimport os.path\n\nsys.path.insert(0, os.path.dirname(os.path.dirname((os.path.abspath(__file__)))))\nfrom youtube_dl.compat import (\n    compat_input,\n    compat_http_server,\n    compat_str,\n    compat_urlparse,\n)\n\n# These are not used outside of buildserver.py thus not in compat.py\n\ntry:\n    import winreg as compat_winreg\nexcept ImportError:  # Python 2\n    import _winreg as compat_winreg\n\ntry:\n    import socketserver as compat_socketserver\nexcept ImportError:  # Python 2\n    import SocketServer as compat_socketserver\n\n\nclass BuildHTTPServer(compat_socketserver.ThreadingMixIn, compat_http_server.HTTPServer):\n    allow_reuse_address = True\n\n\nadvapi32 = ctypes.windll.advapi32\n\nSC_MANAGER_ALL_ACCESS = 0xf003f\nSC_MANAGER_CREATE_SERVICE = 0x02\nSERVICE_WIN32_OWN_PROCESS = 0x10\nSERVICE_AUTO_START = 0x2\nSERVICE_ERROR_NORMAL = 0x1\nDELETE = 0x00010000\nSERVICE_STATUS_START_PENDING = 0x00000002\nSERVICE_STATUS_RUNNING = 0x00000004\nSERVICE_ACCEPT_STOP = 0x1\n\nSVCNAME = 'youtubedl_builder'\n\nLPTSTR = ctypes.c_wchar_p\nSTART_CALLBACK = ctypes.WINFUNCTYPE(None, ctypes.c_int, ctypes.POINTER(LPTSTR))\n\n\nclass SERVICE_TABLE_ENTRY(ctypes.Structure):\n    _fields_ = [\n        ('lpServiceName', LPTSTR),\n        ('lpServiceProc', START_CALLBACK)\n    ]\n\n\nHandlerEx = ctypes.WINFUNCTYPE(\n    ctypes.c_int,     # return\n    ctypes.c_int,     # dwControl\n    ctypes.c_int,     # dwEventType\n    ctypes.c_void_p,  # lpEventData,\n    ctypes.c_void_p,  # lpContext,\n)\n\n\ndef _ctypes_array(c_type, py_array):\n    ar = (c_type * len(py_array))()\n    ar[:] = py_array\n    return ar\n\n\ndef win_OpenSCManager():\n    res = advapi32.OpenSCManagerW(None, None, SC_MANAGER_ALL_ACCESS)\n    if not res:\n        raise Exception('Opening service manager failed - '\n                        'are you running this as administrator?')\n    return res\n\n\ndef win_install_service(service_name, cmdline):\n    manager = win_OpenSCManager()\n    try:\n        h = advapi32.CreateServiceW(\n            manager, service_name, None,\n            SC_MANAGER_CREATE_SERVICE, SERVICE_WIN32_OWN_PROCESS,\n            SERVICE_AUTO_START, SERVICE_ERROR_NORMAL,\n            cmdline, None, None, None, None, None)\n        if not h:\n            raise OSError('Service creation failed: %s' % ctypes.FormatError())\n\n        advapi32.CloseServiceHandle(h)\n    finally:\n        advapi32.CloseServiceHandle(manager)\n\n\ndef win_uninstall_service(service_name):\n    manager = win_OpenSCManager()\n    try:\n        h = advapi32.OpenServiceW(manager, service_name, DELETE)\n        if not h:\n            raise OSError('Could not find service %s: %s' % (\n                service_name, ctypes.FormatError()))\n\n        try:\n            if not advapi32.DeleteService(h):\n                raise OSError('Deletion failed: %s' % ctypes.FormatError())\n        finally:\n            advapi32.CloseServiceHandle(h)\n    finally:\n        advapi32.CloseServiceHandle(manager)\n\n\ndef win_service_report_event(service_name, msg, is_error=True):\n    with open('C:/sshkeys/log', 'a', encoding='utf-8') as f:\n        f.write(msg + '\\n')\n\n    event_log = advapi32.RegisterEventSourceW(None, service_name)\n    if not event_log:\n        raise OSError('Could not report event: %s' % ctypes.FormatError())\n\n    try:\n        type_id = 0x0001 if is_error else 0x0004\n        event_id = 0xc0000000 if is_error else 0x40000000\n        lines = _ctypes_array(LPTSTR, [msg])\n\n        if not advapi32.ReportEventW(\n                event_log, type_id, 0, event_id, None, len(lines), 0,\n                lines, None):\n            raise OSError('Event reporting failed: %s' % ctypes.FormatError())\n    finally:\n        advapi32.DeregisterEventSource(event_log)\n\n\ndef win_service_handler(stop_event, *args):\n    try:\n        raise ValueError('Handler called with args ' + repr(args))\n        TODO\n    except Exception as e:\n        tb = traceback.format_exc()\n        msg = str(e) + '\\n' + tb\n        win_service_report_event(service_name, msg, is_error=True)\n        raise\n\n\ndef win_service_set_status(handle, status_code):\n    svcStatus = SERVICE_STATUS()\n    svcStatus.dwServiceType = SERVICE_WIN32_OWN_PROCESS\n    svcStatus.dwCurrentState = status_code\n    svcStatus.dwControlsAccepted = SERVICE_ACCEPT_STOP\n\n    svcStatus.dwServiceSpecificExitCode = 0\n\n    if not advapi32.SetServiceStatus(handle, ctypes.byref(svcStatus)):\n        raise OSError('SetServiceStatus failed: %r' % ctypes.FormatError())\n\n\ndef win_service_main(service_name, real_main, argc, argv_raw):\n    try:\n        # args = [argv_raw[i].value for i in range(argc)]\n        stop_event = threading.Event()\n        handler = HandlerEx(functools.partial(stop_event, win_service_handler))\n        h = advapi32.RegisterServiceCtrlHandlerExW(service_name, handler, None)\n        if not h:\n            raise OSError('Handler registration failed: %s' %\n                          ctypes.FormatError())\n\n        TODO\n    except Exception as e:\n        tb = traceback.format_exc()\n        msg = str(e) + '\\n' + tb\n        win_service_report_event(service_name, msg, is_error=True)\n        raise\n\n\ndef win_service_start(service_name, real_main):\n    try:\n        cb = START_CALLBACK(\n            functools.partial(win_service_main, service_name, real_main))\n        dispatch_table = _ctypes_array(SERVICE_TABLE_ENTRY, [\n            SERVICE_TABLE_ENTRY(\n                service_name,\n                cb\n            ),\n            SERVICE_TABLE_ENTRY(None, ctypes.cast(None, START_CALLBACK))\n        ])\n\n        if not advapi32.StartServiceCtrlDispatcherW(dispatch_table):\n            raise OSError('ctypes start failed: %s' % ctypes.FormatError())\n    except Exception as e:\n        tb = traceback.format_exc()\n        msg = str(e) + '\\n' + tb\n        win_service_report_event(service_name, msg, is_error=True)\n        raise\n\n\ndef main(args=None):\n    parser = argparse.ArgumentParser()\n    parser.add_argument('-i', '--install',\n                        action='store_const', dest='action', const='install',\n                        help='Launch at Windows startup')\n    parser.add_argument('-u', '--uninstall',\n                        action='store_const', dest='action', const='uninstall',\n                        help='Remove Windows service')\n    parser.add_argument('-s', '--service',\n                        action='store_const', dest='action', const='service',\n                        help='Run as a Windows service')\n    parser.add_argument('-b', '--bind', metavar='<host:port>',\n                        action='store', default='0.0.0.0:8142',\n                        help='Bind to host:port (default %default)')\n    options = parser.parse_args(args=args)\n\n    if options.action == 'install':\n        fn = os.path.abspath(__file__).replace('v:', '\\\\\\\\vboxsrv\\\\vbox')\n        cmdline = '%s %s -s -b %s' % (sys.executable, fn, options.bind)\n        win_install_service(SVCNAME, cmdline)\n        return\n\n    if options.action == 'uninstall':\n        win_uninstall_service(SVCNAME)\n        return\n\n    if options.action == 'service':\n        win_service_start(SVCNAME, main)\n        return\n\n    host, port_str = options.bind.split(':')\n    port = int(port_str)\n\n    print('Listening on %s:%d' % (host, port))\n    srv = BuildHTTPServer((host, port), BuildHTTPRequestHandler)\n    thr = threading.Thread(target=srv.serve_forever)\n    thr.start()\n    compat_input('Press ENTER to shut down')\n    srv.shutdown()\n    thr.join()\n\n\ndef rmtree(path):\n    for name in os.listdir(path):\n        fname = os.path.join(path, name)\n        if os.path.isdir(fname):\n            rmtree(fname)\n        else:\n            os.chmod(fname, 0o666)\n            os.remove(fname)\n    os.rmdir(path)\n\n\nclass BuildError(Exception):\n    def __init__(self, output, code=500):\n        self.output = output\n        self.code = code\n\n    def __str__(self):\n        return self.output\n\n\nclass HTTPError(BuildError):\n    pass\n\n\nclass PythonBuilder(object):\n    def __init__(self, **kwargs):\n        python_version = kwargs.pop('python', '3.4')\n        python_path = None\n        for node in ('Wow6432Node\\\\', ''):\n            try:\n                key = compat_winreg.OpenKey(\n                    compat_winreg.HKEY_LOCAL_MACHINE,\n                    r'SOFTWARE\\%sPython\\PythonCore\\%s\\InstallPath' % (node, python_version))\n                try:\n                    python_path, _ = compat_winreg.QueryValueEx(key, '')\n                finally:\n                    compat_winreg.CloseKey(key)\n                break\n            except Exception:\n                pass\n\n        if not python_path:\n            raise BuildError('No such Python version: %s' % python_version)\n\n        self.pythonPath = python_path\n\n        super(PythonBuilder, self).__init__(**kwargs)\n\n\nclass GITInfoBuilder(object):\n    def __init__(self, **kwargs):\n        try:\n            self.user, self.repoName = kwargs['path'][:2]\n            self.rev = kwargs.pop('rev')\n        except ValueError:\n            raise BuildError('Invalid path')\n        except KeyError as e:\n            raise BuildError('Missing mandatory parameter \"%s\"' % e.args[0])\n\n        path = os.path.join(os.environ['APPDATA'], 'Build archive', self.repoName, self.user)\n        if not os.path.exists(path):\n            os.makedirs(path)\n        self.basePath = tempfile.mkdtemp(dir=path)\n        self.buildPath = os.path.join(self.basePath, 'build')\n\n        super(GITInfoBuilder, self).__init__(**kwargs)\n\n\nclass GITBuilder(GITInfoBuilder):\n    def build(self):\n        try:\n            subprocess.check_output(['git', 'clone', 'git://github.com/%s/%s.git' % (self.user, self.repoName), self.buildPath])\n            subprocess.check_output(['git', 'checkout', self.rev], cwd=self.buildPath)\n        except subprocess.CalledProcessError as e:\n            raise BuildError(e.output)\n\n        super(GITBuilder, self).build()\n\n\nclass YoutubeDLBuilder(object):\n    authorizedUsers = ['fraca7', 'phihag', 'rg3', 'FiloSottile', 'ytdl-org']\n\n    def __init__(self, **kwargs):\n        if self.repoName != 'youtube-dl':\n            raise BuildError('Invalid repository \"%s\"' % self.repoName)\n        if self.user not in self.authorizedUsers:\n            raise HTTPError('Unauthorized user \"%s\"' % self.user, 401)\n\n        super(YoutubeDLBuilder, self).__init__(**kwargs)\n\n    def build(self):\n        try:\n            proc = subprocess.Popen([os.path.join(self.pythonPath, 'python.exe'), 'setup.py', 'py2exe'], stdin=subprocess.PIPE, cwd=self.buildPath)\n            proc.wait()\n            #subprocess.check_output([os.path.join(self.pythonPath, 'python.exe'), 'setup.py', 'py2exe'],\n            #                        cwd=self.buildPath)\n        except subprocess.CalledProcessError as e:\n            raise BuildError(e.output)\n\n        super(YoutubeDLBuilder, self).build()\n\n\nclass DownloadBuilder(object):\n    def __init__(self, **kwargs):\n        self.handler = kwargs.pop('handler')\n        self.srcPath = os.path.join(self.buildPath, *tuple(kwargs['path'][2:]))\n        self.srcPath = os.path.abspath(os.path.normpath(self.srcPath))\n        if not self.srcPath.startswith(self.buildPath):\n            raise HTTPError(self.srcPath, 401)\n\n        super(DownloadBuilder, self).__init__(**kwargs)\n\n    def build(self):\n        if not os.path.exists(self.srcPath):\n            raise HTTPError('No such file', 404)\n        if os.path.isdir(self.srcPath):\n            raise HTTPError('Is a directory: %s' % self.srcPath, 401)\n\n        self.handler.send_response(200)\n        self.handler.send_header('Content-Type', 'application/octet-stream')\n        self.handler.send_header('Content-Disposition', 'attachment; filename=%s' % os.path.split(self.srcPath)[-1])\n        self.handler.send_header('Content-Length', str(os.stat(self.srcPath).st_size))\n        self.handler.end_headers()\n\n        with open(self.srcPath, 'rb') as src:\n            shutil.copyfileobj(src, self.handler.wfile)\n\n        super(DownloadBuilder, self).build()\n\n\nclass CleanupTempDir(object):\n    def build(self):\n        try:\n            rmtree(self.basePath)\n        except Exception as e:\n            print('WARNING deleting \"%s\": %s' % (self.basePath, e))\n\n        super(CleanupTempDir, self).build()\n\n\nclass Null(object):\n    def __init__(self, **kwargs):\n        pass\n\n    def start(self):\n        pass\n\n    def close(self):\n        pass\n\n    def build(self):\n        pass\n\n\nclass Builder(PythonBuilder, GITBuilder, YoutubeDLBuilder, DownloadBuilder, CleanupTempDir, Null):\n    pass\n\n\nclass BuildHTTPRequestHandler(compat_http_server.BaseHTTPRequestHandler):\n    actionDict = {'build': Builder, 'download': Builder}  # They're the same, no more caching.\n\n    def do_GET(self):\n        path = compat_urlparse.urlparse(self.path)\n        paramDict = dict([(key, value[0]) for key, value in compat_urlparse.parse_qs(path.query).items()])\n        action, _, path = path.path.strip('/').partition('/')\n        if path:\n            path = path.split('/')\n            if action in self.actionDict:\n                try:\n                    builder = self.actionDict[action](path=path, handler=self, **paramDict)\n                    builder.start()\n                    try:\n                        builder.build()\n                    finally:\n                        builder.close()\n                except BuildError as e:\n                    self.send_response(e.code)\n                    msg = compat_str(e).encode('UTF-8')\n                    self.send_header('Content-Type', 'text/plain; charset=UTF-8')\n                    self.send_header('Content-Length', len(msg))\n                    self.end_headers()\n                    self.wfile.write(msg)\n            else:\n                self.send_response(500, 'Unknown build method \"%s\"' % action)\n        else:\n            self.send_response(500, 'Malformed URL')\n\nif __name__ == '__main__':\n    main()\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": "devscripts/check-porn.py", "size": 1923, "license": "Unlicense", "content_sha": "740f04de0f22ad3ac6352b114b0e8f99cf717a9f", "findings": [], "content": "#!/usr/bin/env python\nfrom __future__ import unicode_literals\n\n\"\"\"\nThis script employs a VERY basic heuristic ('porn' in webpage.lower()) to check\nif we are not 'age_limit' tagging some porn site\n\nA second approach implemented relies on a list of porn domains, to activate it\npass the list filename as the only argument\n\"\"\"\n\n# Allow direct execution\nimport os\nimport sys\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom test.helper import gettestcases\nfrom youtube_dl.utils import compat_urllib_parse_urlparse\nfrom youtube_dl.utils import compat_urllib_request\n\nif len(sys.argv) > 1:\n    METHOD = 'LIST'\n    LIST = open(sys.argv[1]).read().decode('utf8').strip()\nelse:\n    METHOD = 'EURISTIC'\n\nfor test in gettestcases():\n    if METHOD == 'EURISTIC':\n        try:\n            webpage = compat_urllib_request.urlopen(test['url'], timeout=10).read()\n        except Exception:\n            print('\\nFail: {0}'.format(test['name']))\n            continue\n\n        webpage = webpage.decode('utf8', 'replace')\n\n        RESULT = 'porn' in webpage.lower()\n\n    elif METHOD == 'LIST':\n        domain = compat_urllib_parse_urlparse(test['url']).netloc\n        if not domain:\n            print('\\nFail: {0}'.format(test['name']))\n            continue\n        domain = '.'.join(domain.split('.')[-2:])\n\n        RESULT = ('.' + domain + '\\n' in LIST or '\\n' + domain + '\\n' in LIST)\n\n    if RESULT and ('info_dict' not in test or 'age_limit' not in test['info_dict']\n                   or test['info_dict']['age_limit'] != 18):\n        print('\\nPotential missing age_limit check: {0}'.format(test['name']))\n\n    elif not RESULT and ('info_dict' in test and 'age_limit' in test['info_dict']\n                         and test['info_dict']['age_limit'] == 18):\n        print('\\nPotential false negative: {0}'.format(test['name']))\n\n    else:\n        sys.stdout.write('.')\n    sys.stdout.flush()\n\nprint()\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": "devscripts/cli_to_api.py", "size": 2245, "license": "Unlicense", "content_sha": "9fb1d2ba8437b5d23215ade6e8cbd453fc811c7a", "findings": [], "content": "#!/usr/bin/env python\n# coding: utf-8\n\nfrom __future__ import unicode_literals\n\n\"\"\"\nThis script displays the API parameters corresponding to a yt-dl command line\n\nExample:\n$ ./cli_to_api.py -f best\n{u'format': 'best'}\n$\n\"\"\"\n\n# Allow direct execution\nimport os\nimport sys\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nimport youtube_dl\nfrom types import MethodType\n\n\ndef cli_to_api(*opts):\n    YDL = youtube_dl.YoutubeDL\n\n    # to extract the parsed options, break out of YoutubeDL instantiation\n\n    # return options via this Exception\n    class ParseYTDLResult(Exception):\n        def __init__(self, result):\n            super(ParseYTDLResult, self).__init__('result')\n            self.opts = result\n\n    # replacement constructor that raises ParseYTDLResult\n    def ytdl_init(ydl, ydl_opts):\n        super(YDL, ydl).__init__(ydl_opts)\n        raise ParseYTDLResult(ydl_opts)\n\n    # patch in the constructor\n    YDL.__init__ = MethodType(ytdl_init, YDL)\n\n    # core parser\n    def parsed_options(argv):\n        try:\n            youtube_dl._real_main(list(argv))\n        except ParseYTDLResult as result:\n            return result.opts\n\n    # from https://github.com/yt-dlp/yt-dlp/issues/5859#issuecomment-1363938900\n    default = parsed_options([])\n\n    def neq_opt(a, b):\n        if a == b:\n            return False\n        if a is None and repr(type(object)).endswith(\".utils.DateRange'>\"):\n            return '0001-01-01 - 9999-12-31' != '{0}'.format(b)\n        return a != b\n\n    diff = dict((k, v) for k, v in parsed_options(opts).items() if neq_opt(default[k], v))\n    if 'postprocessors' in diff:\n        diff['postprocessors'] = [pp for pp in diff['postprocessors'] if pp not in default['postprocessors']]\n    return diff\n\n\ndef main():\n    from pprint import PrettyPrinter\n\n    pprint = PrettyPrinter()\n    super_format = pprint.format\n\n    def format(object, context, maxlevels, level):\n        if repr(type(object)).endswith(\".utils.DateRange'>\"):\n            return '{0}: {1}>'.format(repr(object)[:-2], object), True, False\n        return super_format(object, context, maxlevels, level)\n\n    pprint.format = format\n\n    pprint.pprint(cli_to_api(*sys.argv))\n\n\nif __name__ == '__main__':\n    main()\n"}
{"repo_url": "https://github.com/ytdl-org/youtube-dl", "path": "devscripts/create-github-release.py", "size": 3580, "license": "Unlicense", "content_sha": "320bcfc27926835fe0cf1851fd6086882850ae59", "findings": [], "content": "#!/usr/bin/env python\nfrom __future__ import unicode_literals\n\nimport json\nimport mimetypes\nimport netrc\nimport optparse\nimport os\nimport re\nimport sys\n\ndirn = os.path.dirname\n\nsys.path.insert(0, dirn(dirn(os.path.abspath(__file__))))\n\nfrom youtube_dl.compat import (\n    compat_basestring,\n    compat_getpass,\n    compat_print,\n    compat_urllib_request,\n)\nfrom youtube_dl.utils import (\n    make_HTTPS_handler,\n    sanitized_Request,\n)\nfrom utils import read_file\n\n\nclass GitHubReleaser(object):\n    _API_URL = 'https://api.github.com/repos/ytdl-org/youtube-dl/releases'\n    _UPLOADS_URL = 'https://uploads.github.com/repos/ytdl-org/youtube-dl/releases/%s/assets?name=%s'\n    _NETRC_MACHINE = 'github.com'\n\n    def __init__(self, debuglevel=0):\n        self._init_github_account()\n        https_handler = make_HTTPS_handler({}, debuglevel=debuglevel)\n        self._opener = compat_urllib_request.build_opener(https_handler)\n\n    def _init_github_account(self):\n        try:\n            info = netrc.netrc().authenticators(self._NETRC_MACHINE)\n            if info is not None:\n                self._token = info[2]\n                compat_print('Using GitHub credentials found in .netrc...')\n                return\n            else:\n                compat_print('No GitHub credentials found in .netrc')\n        except (IOError, netrc.NetrcParseError):\n            compat_print('Unable to parse .netrc')\n        self._token = compat_getpass(\n            'Type your GitHub PAT (personal access token) and press [Return]: ')\n\n    def _call(self, req):\n        if isinstance(req, compat_basestring):\n            req = sanitized_Request(req)\n        req.add_header('Authorization', 'token %s' % self._token)\n        response = self._opener.open(req).read().decode('utf-8')\n        return json.loads(response)\n\n    def list_releases(self):\n        return self._call(self._API_URL)\n\n    def create_release(self, tag_name, name=None, body='', draft=False, prerelease=False):\n        data = {\n            'tag_name': tag_name,\n            'target_commitish': 'master',\n            'name': name,\n            'body': body,\n            'draft': draft,\n            'prerelease': prerelease,\n        }\n        req = sanitized_Request(self._API_URL, json.dumps(data).encode('utf-8'))\n        return self._call(req)\n\n    def create_asset(self, release_id, asset):\n        asset_name = os.path.basename(asset)\n        url = self._UPLOADS_URL % (release_id, asset_name)\n        # Our files are small enough to be loaded directly into memory.\n        data = open(asset, 'rb').read()\n        req = sanitized_Request(url, data)\n        mime_type, _ = mimetypes.guess_type(asset_name)\n        req.add_header('Content-Type', mime_type or 'application/octet-stream')\n        return self._call(req)\n\n\ndef main():\n    parser = optparse.OptionParser(usage='%prog CHANGELOG VERSION BUILDPATH')\n    options, args = parser.parse_args()\n    if len(args) != 3:\n        parser.error('Expected a version and a build directory')\n\n    changelog_file, version, build_path = args\n\n    changelog = read_file(changelog_file)\n\n    mobj = re.search(r'(?s)version %s\\n{2}(.+?)\\n{3}' % version, changelog)\n    body = mobj.group(1) if mobj else ''\n\n    releaser = GitHubReleaser()\n\n    new_release = releaser.create_release(\n        version, name='youtube-dl %s' % version, body=body)\n    release_id = new_release['id']\n\n    for asset in os.listdir(build_path):\n        compat_print('Uploading %s...' % asset)\n        releaser.create_asset(release_id, os.path.join(build_path, asset))\n\n\nif __name__ == '__main__':\n    main()\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": ".github/PULL_REQUEST_TEMPLATE.md", "size": 2582, "license": "Unlicense", "content_sha": "4dcfcc48ce603acc1e2b348c1836090ca9e02c24", "findings": [], "content": "<!--\n    **IMPORTANT**: PRs without the template will be CLOSED\n    \n    Due to the high volume of pull requests, it may be a while before your PR is reviewed.\n    Please try to keep your pull request focused on a single bugfix or new feature.\n    Pull requests with a vast scope and/or very large diff will take much longer to review.\n    It is recommended for new contributors to stick to smaller pull requests, so you can receive much more immediate feedback as you familiarize yourself with the codebase.\n\n    PLEASE AVOID FORCE-PUSHING after opening a PR, as it makes reviewing more difficult.\n-->\n\n### Description of your *pull request* and other information\n\nADD DETAILED DESCRIPTION HERE\n\nFixes #\n\n\n<details open><summary>Template</summary> <!-- OPEN is intentional -->\n\n<!--\n    # PLEASE FOLLOW THE GUIDE BELOW\n\n    - You will be asked some questions, please read them **carefully** and answer honestly\n    - Put an `x` into all the boxes `[ ]` relevant to your *pull request* (like [x])\n    - Use *Preview* tab to see what your *pull request* will actually look like\n-->\n\n### Before submitting a *pull request* make sure you have:\n- [ ] At least skimmed through [contributing guidelines](https://github.com/yt-dlp/yt-dlp/blob/master/CONTRIBUTING.md#developer-instructions) including [yt-dlp coding conventions](https://github.com/yt-dlp/yt-dlp/blob/master/CONTRIBUTING.md#yt-dlp-coding-conventions)\n- [ ] [Searched](https://github.com/yt-dlp/yt-dlp/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\n\n### In order to be accepted and merged into yt-dlp each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check those that apply and remove the others:\n- [ ] I am the original author of the code in this PR, and I am willing to release it under [Unlicense](http://unlicense.org/)\n- [ ] I am not the original author of the code in this PR, but it is in the public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\n\n### What is the purpose of your *pull request*? Check those that apply and remove the others:\n- [ ] Fix or improvement to an extractor (Make sure to add/update tests)\n- [ ] New extractor ([Piracy websites will not be accepted](https://github.com/yt-dlp/yt-dlp/blob/master/CONTRIBUTING.md#is-the-website-primarily-used-for-piracy))\n- [ ] Core bug fix/improvement\n- [ ] New feature (It is strongly [recommended to open an issue first](https://github.com/yt-dlp/yt-dlp/blob/master/CONTRIBUTING.md#adding-new-feature-or-making-overarching-changes))\n\n</details>\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "CONTRIBUTING.md", "size": 37783, "license": "Unlicense", "content_sha": "fd7b0f1210997542f7726886fbc3ac889f907d02", "findings": [{"type": "pii_email", "matches": ["git@github.com"]}], "content": "# CONTRIBUTING TO YT-DLP\n\n- [OPENING AN ISSUE](#opening-an-issue)\n    - [Is the description of the issue itself sufficient?](#is-the-description-of-the-issue-itself-sufficient)\n    - [Are you using the latest version?](#are-you-using-the-latest-version)\n    - [Is the issue already documented?](#is-the-issue-already-documented)\n    - [Why are existing options not enough?](#why-are-existing-options-not-enough)\n    - [Have you read and understood the changes, between youtube-dl and yt-dlp](#have-you-read-and-understood-the-changes-between-youtube-dl-and-yt-dlp)\n    - [Is there enough context in your bug report?](#is-there-enough-context-in-your-bug-report)\n    - [Does the issue involve one problem, and one problem only?](#does-the-issue-involve-one-problem-and-one-problem-only)\n    - [Is anyone going to need the feature?](#is-anyone-going-to-need-the-feature)\n    - [Is your question about yt-dlp?](#is-your-question-about-yt-dlp)\n    - [Are you willing to share account details if needed?](#are-you-willing-to-share-account-details-if-needed)\n    - [Is the website primarily used for piracy](#is-the-website-primarily-used-for-piracy)\n- [DEVELOPER INSTRUCTIONS](#developer-instructions)\n    - [Adding new feature or making overarching changes](#adding-new-feature-or-making-overarching-changes)\n    - [Adding support for a new site](#adding-support-for-a-new-site)\n    - [yt-dlp coding conventions](#yt-dlp-coding-conventions)\n        - [Mandatory and optional metafields](#mandatory-and-optional-metafields)\n        - [Provide fallbacks](#provide-fallbacks)\n        - [Regular expressions](#regular-expressions)\n        - [Long lines policy](#long-lines-policy)\n        - [Quotes](#quotes)\n        - [Inline values](#inline-values)\n        - [Collapse fallbacks](#collapse-fallbacks)\n        - [Trailing parentheses](#trailing-parentheses)\n        - [Use convenience conversion and parsing functions](#use-convenience-conversion-and-parsing-functions)\n    - [My pull request is labeled pending-fixes](#my-pull-request-is-labeled-pending-fixes)\n- [EMBEDDING YT-DLP](README.md#embedding-yt-dlp)\n\n\n\n# OPENING AN ISSUE\n\nBugs and suggestions should be reported at: [yt-dlp/yt-dlp/issues](https://github.com/yt-dlp/yt-dlp/issues). Unless you were prompted to or there is another pertinent reason (e.g. GitHub fails to accept the bug report), please do not send bug reports via personal email. For discussions, join us in our [discord server](https://discord.gg/H5MNcFW63r).\n\n**Please include the full output of yt-dlp when run with `-vU`**, i.e. **add** `-vU` flag to **your command line**, copy the **whole** output and post it in the issue body wrapped in \\`\\`\\` for better formatting. It should look similar to this:\n```\n$ yt-dlp -vU <your command line>\n[debug] Command-line config: ['-vU', 'https://www.example.com/']\n[debug] Encodings: locale cp65001, fs utf-8, pref cp65001, out utf-8, error utf-8, screen utf-8\n[debug] yt-dlp version nightly@... from yt-dlp/yt-dlp-nightly-builds [1a176d874] (win_exe)\n[debug] Python 3.10.11 (CPython AMD64 64bit) - Windows-10-10.0.20348-SP0 (OpenSSL 1.1.1t  7 Feb 2023)\n[debug] exe versions: ffmpeg 7.0.2 (setts), ffprobe 7.0.2\n[debug] Optional libraries: Cryptodome-3.21.0, brotli-1.1.0, certifi-2024.08.30, curl_cffi-0.5.10, mutagen-1.47.0, requests-2.32.3, sqlite3-3.40.1, urllib3-2.2.3, websockets-13.1\n[debug] Proxy map: {}\n[debug] Request Handlers: urllib, requests, websockets, curl_cffi\n[debug] Loaded 1838 extractors\n[debug] Fetching release info: https://api.github.com/repos/yt-dlp/yt-dlp/releases/latest\nLatest version: nightly@... from yt-dlp/yt-dlp-nightly-builds\nyt-dlp is up to date (nightly@... from yt-dlp/yt-dlp-nightly-builds)\n...\n```\n**Do not post screenshots of verbose logs; only plain text is acceptable.**\n\nThe output (including the first lines) contains important debugging information. Issues without the full output are often not reproducible and therefore will be closed as `incomplete`.\n\nThe templates provided for the Issues, should be completed and **not removed**, this helps aide the resolution of the issue.\n\nPlease re-read your issue once again to avoid a couple of common mistakes (you can and should use this as a checklist):\n\n### Is the description of the issue itself sufficient?\n\nWe often get issue reports that we cannot really decipher. While in most cases we eventually get the required information after asking back multiple times, this poses an unnecessary drain on our resources.\n\nSo please elaborate on what feature you are requesting, or what bug you want to be fixed. Make sure that it's obvious\n\n- What the problem is\n- How it could be fixed\n- How your proposed solution would look like\n\nIf your report is shorter than two lines, it is almost certainly missing some of these, which makes it hard for us to respond to it. We're often too polite to close the issue outright, but the missing info makes misinterpretation likely. We often get frustrated by these issues, since the only possible way for us to move forward on them is to ask for clarification over and over.\n\nFor bug reports, this means that your report should contain the **complete** output of yt-dlp when called with the `-vU` flag. The error message you get for (most) bugs even says so, but you would not believe how many of our bug reports do not contain this information.\n\nIf the error is `ERROR: Unable to extract ...` and you cannot reproduce it from multiple countries, add `--write-pages` and upload the `.dump` files you get [somewhere](https://gist.github.com).\n\n**Site support requests must contain an example URL**. An example URL is a URL you might want to download, like `https://www.youtube.com/watch?v=BaW_jenozKc`. There should be an obvious video present. Except under very special circumstances, the main page of a video service (e.g. `https://www.youtube.com/`) is *not* an example URL.\n\n###  Are you using the latest version?\n\nBefore reporting any issue, type `yt-dlp -U`. This should report that you're up-to-date. This goes for feature requests as well.\n\n###  Is the issue already documented?\n\nMake sure that someone has not already opened the issue you're trying to open. Search at the top of the window or browse the [GitHub Issues](https://github.com/yt-dlp/yt-dlp/search?type=Issues) of this repository. If there is an issue, subscribe to it to be notified when there is any progress. Unless you have something useful to add to the conversation, please refrain from commenting.\n\nAdditionally, it is also helpful to see if the issue has already been documented in the [youtube-dl issue tracker](https://github.com/ytdl-org/youtube-dl/issues). If similar issues have already been reported in youtube-dl (but not in our issue tracker), links to them can be included in your issue report here.\n\n###  Why are existing options not enough?\n\nBefore requesting a new feature, please have a quick peek at [the list of supported options](README.md#usage-and-options). Many feature requests are for features that actually exist already! Please, absolutely do show off your work in the issue report and detail how the existing similar options do *not* solve your problem.\n\n###  Have you read and understood the changes, between youtube-dl and yt-dlp\n\nThere are many changes between youtube-dl and yt-dlp [(changes to default behavior)](README.md#differences-in-default-behavior), and some of the options available have a different behaviour in yt-dlp, or have been removed all together [(list of changes to options)](README.md#deprecated-options). Make sure you have read and understand the differences in the options and how this may impact your downloads before opening an issue.\n\n###  Is there enough context in your bug report?\n\nPeople want to solve problems, and often think they do us a favor by breaking down their larger problems (e.g. wanting to skip already downloaded files) to a specific request (e.g. requesting us to look whether the file exists before downloading the info page). However, what often happens is that they break down the problem into two steps: One simple, and one impossible (or extremely complicated one).\n\nWe are then presented with a very complicated request when the original problem could be solved far easier, e.g. by recording the downloaded video IDs in a separate file. To avoid this, you must include the greater context where it is non-obvious. In particular, every feature request that does not consist of adding support for a new site should contain a use case scenario that explains in what situation the missing feature would be useful.\n\n###  Does the issue involve one problem, and one problem only?\n\nSome of our users seem to think there is a limit of issues they can or should open. There is no limit of issues they can or should open. While it may seem appealing to be able to dump all your issues into one ticket, that means that someone who solves one of your issues cannot mark the issue as closed. Typically, reporting a bunch of issues leads to the ticket lingering since nobody wants to attack that behemoth, until someone mercifully splits the issue into multiple ones.\n\nIn particular, every site support request issue should only pertain to services at one site (generally under a common domain, but always using the same backend technology). Do not request support for vimeo user videos, White house podcasts, and Google Plus pages in the same issue. Also, make sure that you don't post bug reports alongside feature requests. As a rule of thumb, a feature request does not include outputs of yt-dlp that are not immediately related to the feature at hand. Do not post reports of a network error alongside the request for a new video service.\n\n###  Is anyone going to need the feature?\n\nOnly post features that you (or an incapacitated friend you can personally talk to) require. Do not post features because they seem like a good idea. If they are really useful, they will be requested by someone who requires them.\n\n###  Is your question about yt-dlp?\n\nSome bug reports are completely unrelated to yt-dlp and relate to a different, or even the reporter's own, application. Please make sure that you are actually using yt-dlp. If you are using a UI for yt-dlp, report the bug to the maintainer of the actual application providing the UI. In general, if you are unable to provide the verbose log, you should not be opening the issue here.\n\nIf the issue is with `youtube-dl` (the upstream fork of yt-dlp) and not with yt-dlp, the issue should be raised in the youtube-dl project.\n\n### Are you willing to share account details if needed?\n\nThe maintainers and potential contributors of the project often do not have an account for the website you are asking support for. So any developer interested in solving your issue may ask you for account details. It is your personal discretion whether you are willing to share the account in order for the developer to try and solve your issue. However, if you are unwilling or unable to provide details, they obviously cannot work on the issue and it cannot be solved unless some developer who both has an account and is willing/able to contribute decides to solve it.\n\nBy sharing an account with anyone, you agree to bear all risks associated with it. The maintainers and yt-dlp can't be held responsible for any misuse of the credentials.\n\nWhile these steps won't necessarily ensure that no misuse of the account takes place, these are still some good practices to follow.\n\n- Look for people with `Member` (maintainers of the project) or `Contributor` (people who have previously contributed code) tag on their messages.\n- Change the password before sharing the account to something random (use [this](https://passwordsgenerator.net/) if you don't have a random password generator).\n- Change the password after receiving the account back.\n\n### Is the website primarily used for piracy?\n\nWe follow [youtube-dl's policy](https://github.com/ytdl-org/youtube-dl#can-you-add-support-for-this-anime-video-site-or-site-which-shows-current-movies-for-free) to not support services that is primarily used for infringing copyright. Additionally, it has been decided to not to support porn sites that specialize in fakes. We also cannot support any service that serves only [DRM protected content](https://en.wikipedia.org/wiki/Digital_rights_management).\n\n\n\n\n# DEVELOPER INSTRUCTIONS\n\nMost users do not need to build yt-dlp and can [download the builds](https://github.com/yt-dlp/yt-dlp/releases), get them via [the other installation methods](README.md#installation) or directly run it using `python -m yt_dlp`.\n\n`yt-dlp` uses [`hatch`](<https://hatch.pypa.io>) as a project management tool.\nYou can easily install it using [`pipx`](<https://pipx.pypa.io>) via `pipx install hatch`, or else via `pip` or your package manager of choice. Make sure you are using at least version `1.10.0`, otherwise some functionality might not work as expected.\n\nIf you plan on contributing to `yt-dlp`, best practice is to start by running the following command:\n\n```shell\n$ hatch run setup\n```\n\nThe above command will install a `pre-commit` hook so that required checks/fixes (linting, formatting) will run automatically before each commit. If any code needs to be linted or formatted, then the commit will be blocked and the necessary changes will be made; you should review all edits and re-commit the fixed version.\n\nAfter this you can use `hatch shell` to enable a virtual environment that has `yt-dlp` and its development dependencies installed.\n\nIn addition, the following script commands can be used to run simple tasks such as linting or testing (without having to run `hatch shell` first):\n* `hatch fmt`: Automatically fix linter violations and apply required code formatting changes\n    * See `hatch fmt --help` for more info\n* `hatch test`: Run extractor or core tests\n    * See `hatch test --help` for more info\n\nSee item 6 of [new extractor tutorial](#adding-support-for-a-new-site) for how to run extractor specific test cases.\n\nWhile it is strongly recommended to use `hatch` for yt-dlp development, if you are unable to do so, alternatively you can manually create a virtual environment and use the following commands:\n\n```shell\n# To only install development dependencies:\n$ python -m devscripts.install_deps --include dev\n\n# Or, for an editable install plus dev dependencies:\n$ python -m pip install -e \".[default,dev]\"\n\n# To setup the pre-commit hook:\n$ pre-commit install\n\n# To be used in place of `hatch test`:\n$ python -m devscripts.run_tests\n\n# To be used in place of `hatch fmt`:\n$ ruff check --fix .\n$ autopep8 --in-place .\n\n# To only check code instead of applying fixes:\n$ ruff check .\n$ autopep8 --diff .\n```\n\nIf you want to create a build of yt-dlp yourself, you can follow the instructions [here](README.md#compile).\n\n\n## Adding new feature or making overarching changes\n\nBefore you start writing code for implementing a new feature, open an issue explaining your feature request and at least one use case. This allows the maintainers to decide whether such a feature is desired for the project in the first place, and will provide an avenue to discuss some implementation details. If you open a pull request for a new feature without discussing with us first, do not be surprised when we ask for large changes to the code, or even reject it outright.\n\nThe same applies for changes to the documentation, code style, or overarching changes to the architecture\n\n\n## Adding support for a new site\n\nIf you want to add support for a new site, first of all **make sure** this site is **not dedicated to [copyright infringement](#is-the-website-primarily-used-for-piracy)**. yt-dlp does **not support** such sites thus pull requests adding support for them **will be rejected**.\n\nAfter you have ensured this site is distributing its content legally, you can follow this quick list (assuming your service is called `yourextractor`):\n\n1. [Fork this repository](https://github.com/yt-dlp/yt-dlp/fork)\n1. Check out the source code with:\n\n    ```shell\n    $ git clone git@github.com:YOUR_GITHUB_USERNAME/yt-dlp.git\n    ```\n\n1. Start a new git branch with\n\n    ```shell\n    $ cd yt-dlp\n    $ git checkout -b yourextractor\n    ```\n\n1. Start with this simple template and save it to `yt_dlp/extractor/yourextractor.py`:\n\n    ```python\n    from .common import InfoExtractor\n\n\n    class YourExtractorIE(InfoExtractor):\n        _VALID_URL = r'https?://(?:www\\.)?yourextractor\\.com/watch/(?P<id>[0-9]+)'\n        _TESTS = [{\n            'url': 'https://yourextractor.com/watch/42',\n            'md5': 'TODO: md5 sum of the first 10241 bytes of the video file (use --test)',\n            'info_dict': {\n                # For videos, only the 'id' and 'ext' fields are required to RUN the test:\n                'id': '42',\n                'ext': 'mp4',\n                # Then if the test run fails, it will output the missing/incorrect fields.\n                # Properties can be added as:\n                # * A value, e.g.\n                #     'title': 'Video title goes here',\n                # * MD5 checksum; start the string with 'md5:', e.g.\n                #     'description': 'md5:098f6bcd4621d373cade4e832627b4f6',\n                # * A regular expression; start the string with 're:', e.g.\n                #     'thumbnail': r're:https?://.*\\.jpg$',\n                # * A count of elements in a list; start the string with 'count:', e.g.\n                #     'tags': 'count:10',\n                # * Any Python type, e.g.\n                #     'view_count': int,\n            }\n        }]\n\n        def _real_extract(self, url):\n            video_id = self._match_id(url)\n            webpage = self._download_webpage(url, video_id)\n\n            # TODO more code goes here, for example ...\n            title = self._html_search_regex(r'<h1>(.+?)</h1>', webpage, 'title')\n\n            return {\n                'id': video_id,\n                'title': title,\n                'description': self._og_search_description(webpage),\n                'uploader': self._search_regex(r'<div[^>]+id=\"uploader\"[^>]*>([^<]+)<', webpage, 'uploader', fatal=False),\n                # TODO more properties (see yt_dlp/extractor/common.py)\n            }\n    ```\n1. Add an import in [`yt_dlp/extractor/_extractors.py`](yt_dlp/extractor/_extractors.py). Note that the class name must end with `IE`. Also note that when adding a parenthesized import group, the last import in the group must have a trailing comma in order for this formatting to be respected by our code formatter.\n1. Run `hatch test YourExtractor`. This *may fail* at first, but you can continually re-run it until you're done. Upon failure, it will output the missing fields and/or correct values which you can copy. If you decide to add more than one test, the tests will then be named `YourExtractor`, `YourExtractor_1`, `YourExtractor_2`, etc. Note that tests with an `only_matching` key in the test's dict are not included in the count. You can also run all the tests in one go with `YourExtractor_all`\n1. Make sure you have at least one test for your extractor. Even if all videos covered by the extractor are expected to be inaccessible for automated testing, tests should still be added with a `skip` parameter indicating why the particular test is disabled from running.\n1. Have a look at [`yt_dlp/extractor/common.py`](yt_dlp/extractor/common.py) for possible helper methods and a [detailed description of what your extractor should and may return](yt_dlp/extractor/common.py#L119-L440). Add tests and code for as many as you want.\n1. Make sure your code follows [yt-dlp coding conventions](#yt-dlp-coding-conventions), passes [ruff](https://docs.astral.sh/ruff/tutorial/#getting-started) code checks and is properly formatted:\n\n    ```shell\n    $ hatch fmt --check\n    ```\n\n    You can use `hatch fmt` to automatically fix problems. Rules that the linter/formatter enforces should not be disabled with `# noqa` unless a maintainer requests it. The only exception allowed is for old/printf-style string formatting in GraphQL query templates (use `# noqa: UP031`).\n\n1. Make sure your code works under all [Python](https://www.python.org/) versions supported by yt-dlp, namely CPython >=3.9 and PyPy >=3.10. Backward compatibility is not required for even older versions of Python.\n1. When the tests pass, [add](https://git-scm.com/docs/git-add) the new files, [commit](https://git-scm.com/docs/git-commit) them and [push](https://git-scm.com/docs/git-push) the result, like this:\n\n    ```shell\n    $ git add yt_dlp/extractor/_extractors.py\n    $ git add yt_dlp/extractor/yourextractor.py\n    $ git commit -m '[yourextractor] Add extractor'\n    $ git push origin yourextractor\n    ```\n\n1. Finally, [create a pull request](https://help.github.com/articles/creating-a-pull-request). We'll then review and merge it.\n\nIn any case, thank you very much for your contributions!\n\n**Tip:** To test extractors that require login information, create a file `test/local_parameters.json` and add `\"usenetrc\": true` or your `username`&`password` or `cookiefile`/`cookiesfrombrowser` in it:\n```json\n{\n    \"username\": \"your user name\",\n    \"password\": \"your password\"\n}\n```\n\n## yt-dlp coding conventions\n\nThis section introduces a guide lines for writing idiomatic, robust and future-proof extractor code.\n\nExtractors are very fragile by nature since they depend on the layout of the source data provided by 3rd party media hosters out of your control and this layout tends to change. As an extractor implementer your task is not only to write code that will extract media links and metadata correctly but also to minimize dependency on the source's layout and even to make the code foresee potential future changes and be ready for that. This is important because it will allow the extractor not to break on minor layout changes thus keeping old yt-dlp versions working. Even though this breakage issue may be easily fixed by a new version of yt-dlp, this could take some time, during which the extractor will remain broken.\n\n\n### Mandatory and optional metafields\n\nFor extraction to work yt-dlp relies on metadata your extractor extracts and provides to yt-dlp expressed by an [information dictionary](yt_dlp/extractor/common.py#L119-L440) or simply *info dict*. Only the following meta fields in the *info dict* are considered mandatory for a successful extraction process by yt-dlp:\n\n - `id` (media identifier)\n - `url` (media download URL) or `formats`\n\nThe aforementioned metadata fields are the critical data without which extraction does not make any sense. If any of them fail to be extracted, then the extractor is considered broken. All other metadata extraction should be completely non-fatal.\n\nFor pornographic sites, appropriate `age_limit` must also be returned.\n\nThe extractor is allowed to return the info dict without url or formats in some special cases if it allows the user to extract useful information with `--ignore-no-formats-error` - e.g. when the video is a live stream that has not started yet.\n\n[Any field](yt_dlp/extractor/common.py#219-L426) apart from the aforementioned ones are considered **optional**. That means that extraction should be **tolerant** to situations when sources for these fields can potentially be unavailable (even if they are always available at the moment) and **future-proof** in order not to break the extraction of general purpose mandatory fields.\n\n#### Example\n\nSay you have some source dictionary `meta` that you've fetched as JSON with HTTP request and it has a key `summary`:\n\n```python\nmeta = self._download_json(url, video_id)\n```\n\nAssume at this point `meta`'s layout is:\n\n```python\n{\n    \"summary\": \"some fancy summary text\",\n    \"user\": {\n        \"name\": \"uploader name\"\n    },\n    ...\n}\n```\n\nAssume you want to extract `summary` and put it into the resulting info dict as `description`. Since `description` is an optional meta field you should be ready that this key may be missing from the `meta` dict, so that you should extract it like:\n\n```python\ndescription = meta.get('summary')  # correct\n```\n\nand not like:\n\n```python\ndescription = meta['summary']  # incorrect\n```\n\nThe latter will break extraction process with `KeyError` if `summary` disappears from `meta` at some later time but with the former approach extraction will just go ahead with `description` set to `None` which is perfectly fine (remember `None` is equivalent to the absence of data).\n\n\nIf the data is nested, do not use `.get` chains, but instead make use of `traverse_obj`.\n\nConsidering the above `meta` again, assume you want to extract `[\"user\"][\"name\"]` and put it in the resulting info dict as `uploader`\n\n```python\nuploader = traverse_obj(meta, ('user', 'name'))  # correct\n```\n\nand not like:\n\n```python\nuploader = meta['user']['name']  # incorrect\n```\nor\n```python\nuploader = meta.get('user', {}).get('name')  # incorrect\n```\nor\n```python\nuploader = try_get(meta, lambda x: x['user']['name'])  # old utility\n```\n\n\nSimilarly, you should pass `fatal=False` when extracting optional data from a webpage with `_search_regex`, `_html_search_regex` or similar methods, for instance:\n\n```python\ndescription = self._search_regex(\n    r'<span[^>]+id=\"title\"[^>]*>([^<]+)<',\n    webpage, 'description', fatal=False)\n```\n\nWith `fatal` set to `False` if `_search_regex` fails to extract `description` it will emit a warning and continue extraction.\n\nYou can also pass `default=<some fallback value>`, for example:\n\n```python\ndescription = self._search_regex(\n    r'<span[^>]+id=\"title\"[^>]*>([^<]+)<',\n    webpage, 'description', default=None)\n```\n\nOn failure this code will silently continue the extraction with `description` set to `None`. That is useful for metafields that may or may not be present.\n\n\nAnother thing to remember is not to try to iterate over `None`\n\nSay you extracted a list of thumbnails into `thumbnail_data` and want to iterate over them\n\n```python\nthumbnail_data = data.get('thumbnails') or []\nthumbnails = [{\n    'url': item['url'],\n    'height': item.get('h'),\n} for item in thumbnail_data if item.get('url')]  # correct\n```\n\nand not like:\n\n```python\nthumbnail_data = data.get('thumbnails')\nthumbnails = [{\n    'url': item['url'],\n    'height': item.get('h'),\n} for item in thumbnail_data]  # incorrect\n```\n\nIn this case, `thumbnail_data` will be `None` if the field was not found and this will cause the loop `for item in thumbnail_data` to raise a fatal error. Using `or []` avoids this error and results in setting an empty list in `thumbnails` instead.\n\nAlternately, this can be further simplified by using `traverse_obj`\n\n```python\nthumbnails = [{\n    'url': item['url'],\n    'height': item.get('h'),\n} for item in traverse_obj(data, ('thumbnails', lambda _, v: v['url']))]\n```\n\nor, even better,\n\n```python\nthumbnails = traverse_obj(data, ('thumbnails', ..., {'url': 'url', 'height': 'h'}))\n```\n\n### Provide fallbacks\n\nWhen extracting metadata try to do so from multiple sources. For example if `title` is present in several places, try extracting from at least some of them. This makes it more future-proof in case some of the sources become unavailable.\n\n\n#### Example\n\nSay `meta` from the previous example has a `title` and you are about to extract it like:\n\n```python\ntitle = meta.get('title')\n```\n\nIf `title` disappears from `meta` in future due to some changes on the hoster's side the title extraction would fail.\n\nAssume that you have some another source you can extract `title` from, for example `og:title` HTML meta of a `webpage`. In this case you can provide a fallback like:\n\n```python\ntitle = meta.get('title') or self._og_search_title(webpage)\n```\n\nThis code will try to extract from `meta` first and if it fails it will try extracting `og:title` from a `webpage`, making the extractor more robust.\n\n\n### Regular expressions\n\n#### Don't capture groups you don't use\n\nCapturing group must be an indication that it's used somewhere in the code. Any group that is not used must be non capturing.\n\n##### Example\n\nDon't capture id attribute name here since you can't use it for anything anyway.\n\nCorrect:\n\n```python\nr'(?:id|ID)=(?P<id>\\d+)'\n```\n\nIncorrect:\n```python\nr'(id|ID)=(?P<id>\\d+)'\n```\n\n#### Make regular expressions relaxed and flexible\n\nWhen using regular expressions try to write them fuzzy, relaxed and flexible, skipping insignificant parts that are more likely to change, allowing both single and double quotes for quoted values and so on.\n\n##### Example\n\nSay you need to extract `title` from the following HTML code:\n\n```html\n<span style=\"position: absolute; left: 910px; width: 90px; float: right; z-index: 9999;\" class=\"title\">some fancy title</span>\n```\n\nThe code for that task should look similar to:\n\n```python\ntitle = self._search_regex(  # correct\n    r'<span[^>]+class=\"title\"[^>]*>([^<]+)', webpage, 'title')\n```\n\nwhich tolerates potential changes in the `style` attribute's value. Or even better:\n\n```python\ntitle = self._search_regex(  # correct\n    r'<span[^>]+class=([\"\\'])title\\1[^>]*>(?P<title>[^<]+)',\n    webpage, 'title', group='title')\n```\n\nwhich also handles both single quotes in addition to double quotes.\n\nThe code definitely should not look like:\n\n```python\ntitle = self._search_regex(  # incorrect\n    r'<span style=\"position: absolute; left: 910px; width: 90px; float: right; z-index: 9999;\" class=\"title\">(.*?)</span>',\n    webpage, 'title', group='title')\n```\n\nor even\n\n```python\ntitle = self._search_regex(  # incorrect\n    r'<span style=\".*?\" class=\"title\">(.*?)</span>',\n    webpage, 'title', group='title')\n```\n\nHere the presence or absence of other attributes including `style` is irrelevant for the data we need, and so the regex must not depend on it\n\n\n#### Keep the regular expressions as simple as possible, but no simpler\n\nSince many extractors deal with unstructured data provided by websites, we will often need to use very complex regular expressions. You should try to use the *simplest* regex that can accomplish what you want. In other words, each part of the regex must have a reason for existing. If you can take out a symbol and the functionality does not change, the symbol should not be there.\n\n##### Example\n\nCorrect:\n\n```python\n_VALID_URL = r'https?://(?:www\\.)?website\\.com/(?:[^/]+/){3,4}(?P<display_id>[^/]+)_(?P<id>\\d+)'\n```\n\nIncorrect:\n\n```python\n_VALID_URL = r'https?:\\/\\/(?:www\\.)?website\\.com\\/[^\\/]+/[^\\/]+/[^\\/]+(?:\\/[^\\/]+)?\\/(?P<display_id>[^\\/]+)_(?P<id>\\d+)'\n```\n\n#### Do not misuse `.` and use the correct quantifiers (`+*?`)\n\nAvoid creating regexes that over-match because of wrong use of quantifiers. Also try to avoid non-greedy matching (`?`) where possible since they could easily result in [catastrophic backtracking](https://www.regular-expressions.info/catastrophic.html)\n\nCorrect:\n\n```python\ntitle = self._search_regex(r'<span\\b[^>]+class=\"title\"[^>]*>([^<]+)', webpage, 'title')\n```\n\nIncorrect:\n\n```python\ntitle = self._search_regex(r'<span\\b.*class=\"title\".*>(.+?)<', webpage, 'title')\n```\n\n\n### Long lines policy\n\nThere is a soft limit to keep lines of code under 100 characters long. This means it should be respected if possible and if it does not make readability and code maintenance worse. Sometimes, it may be reasonable to go upto 120 characters and sometimes even 80 can be unreadable. Keep in mind that this is not a hard limit and is just one of many tools to make the code more readable.\n\nFor example, you should **never** split long string literals like URLs or some other often copied entities over multiple lines to fit this limit:\n\nConversely, don't unnecessarily split small lines further. As a rule of thumb, if removing the line split keeps the code under 80 characters, it should be a single line.\n\n##### Examples\n\nCorrect:\n\n```python\n'https://www.youtube.com/watch?v=FqZTN594JQw&list=PLMYEtVRpaqY00V9W81Cwmzp6N6vZqfUKD4'\n```\n\nIncorrect:\n\n```python\n'https://www.youtube.com/watch?v=FqZTN594JQw&list='\n'PLMYEtVRpaqY00V9W81Cwmzp6N6vZqfUKD4'\n```\n\nCorrect:\n\n```python\nuploader = traverse_obj(info, ('uploader', 'name'), ('author', 'fullname'))\n```\n\nIncorrect:\n\n```python\nuploader = traverse_obj(\n    info,\n    ('uploader', 'name'),\n    ('author', 'fullname'))\n```\n\nCorrect:\n\n```python\nformats = self._extract_m3u8_formats(\n    m3u8_url, video_id, 'mp4', 'm3u8_native', m3u8_id='hls',\n    note='Downloading HD m3u8 information', errnote='Unable to download HD m3u8 information')\n```\n\nIncorrect:\n\n```python\nformats = self._extract_m3u8_formats(m3u8_url,\n                                     video_id,\n                                     'mp4',\n                                     'm3u8_native',\n                                     m3u8_id='hls',\n                                     note='Downloading HD m3u8 information',\n                                     errnote='Unable to download HD m3u8 information')\n```\n\n\n### Quotes\n\nAlways use single quotes for strings (even if the string has `'`) and double quotes for docstrings. Use `'''` only for multi-line strings. An exception can be made if a string has multiple single quotes in it and escaping makes it *significantly* harder to read. For f-strings, use you can use double quotes on the inside. But avoid f-strings that have too many quotes inside.\n\n\n### Inline values\n\nExtracting variables is acceptable for reducing code duplication and improving readability of complex expressions. However, you should avoid extracting variables used only once and moving them to opposite parts of the extractor file, which makes reading the linear flow difficult.\n\n#### Examples\n\nCorrect:\n\n```python\nreturn {\n    'title': self._html_search_regex(r'<h1>([^<]+)</h1>', webpage, 'title'),\n    # ...some lines of code...\n}\n```\n\nIncorrect:\n\n```python\nTITLE_RE = r'<h1>([^<]+)</h1>'\n# ...some lines of code...\ntitle = self._html_search_regex(TITLE_RE, webpage, 'title')\n# ...some lines of code...\nreturn {\n    'title': title,\n    # ...some lines of code...\n}\n```\n\n\n### Collapse fallbacks\n\nMultiple fallback values can quickly become unwieldy. Collapse multiple fallback values into a single expression via a list of patterns.\n\n#### Example\n\nGood:\n\n```python\ndescription = self._html_search_meta(\n    ['og:description', 'description', 'twitter:description'],\n    webpage, 'description', default=None)\n```\n\nUnwieldy:\n\n```python\ndescription = (\n    self._og_search_description(webpage, default=None)\n    or self._html_search_meta('description', webpage, default=None)\n    or self._html_search_meta('twitter:description', webpage, default=None))\n```\n\nMethods supporting list of patterns are: `_search_regex`, `_html_search_regex`, `_og_search_property`, `_html_search_meta`.\n\n\n### Trailing parentheses\n\nAlways move trailing parentheses used for grouping/functions after the last argument. On the other hand, multi-line literal list/tuple/dict/set should closed be in a new line. Generators and list/dict comprehensions may use either style\n\n#### Examples\n\nCorrect:\n\n```python\nurl = traverse_obj(info, (\n    'context', 'dispatcher', 'stores', 'VideoTitlePageStore', 'data', 'video', 0, 'VideoUrlSet', 'VideoUrl'), list)\n```\nCorrect:\n\n```python\nurl = traverse_obj(\n    info,\n    ('context', 'dispatcher', 'stores', 'VideoTitlePageStore', 'data', 'video', 0, 'VideoUrlSet', 'VideoUrl'),\n    list)\n```\n\nIncorrect:\n\n```python\nurl = traverse_obj(\n    info,\n    ('context', 'dispatcher', 'stores', 'VideoTitlePageStore', 'data', 'video', 0, 'VideoUrlSet', 'VideoUrl'),\n    list\n)\n```\n\nCorrect:\n\n```python\nf = {\n    'url': url,\n    'format_id': format_id,\n}\n```\n\nIncorrect:\n\n```python\nf = {'url': url,\n     'format_id': format_id}\n```\n\nCorrect:\n\n```python\nformats = [process_formats(f) for f in format_data\n           if f.get('type') in ('hls', 'dash', 'direct') and f.get('downloadable')]\n```\n\nCorrect:\n\n```python\nformats = [\n    process_formats(f) for f in format_data\n    if f.get('type') in ('hls', 'dash', 'direct') and f.get('downloadable')\n]\n```\n\n\n### Use convenience conversion and parsing functions\n\nWrap all extracted numeric data into safe functions from [`yt_dlp/utils/`](yt_dlp/utils/): `int_or_none`, `float_or_none`. Use them for string to number conversions as well.\n\nUse `url_or_none` for safe URL processing.\n\nUse `traverse_obj` and `try_call` (superseeds `dict_get` and `try_get`) for safe metadata extraction from parsed JSON.\n\nUse `unified_strdate` for uniform `upload_date` or any `YYYYMMDD` meta field extraction, `unified_timestamp` for uniform `timestamp` extraction, `parse_filesize` for `filesize` extraction, `parse_count` for count meta fields extraction, `parse_resolution`, `parse_duration` for `duration` extraction, `parse_age_limit` for `age_limit` extraction.\n\nExplore [`yt_dlp/utils/`](yt_dlp/utils/) for more useful convenience functions.\n\n#### Examples\n\n```python\ndescription = traverse_obj(response, ('result', 'video', 'summary'), expected_type=str)\nthumbnails = traverse_obj(response, ('result', 'thumbnails', ..., 'url'), expected_type=url_or_none)\nvideo = traverse_obj(response, ('result', 'video', 0), default={}, expected_type=dict)\nduration = float_or_none(video.get('durationMs'), scale=1000)\nview_count = int_or_none(video.get('views'))\n```\n\n\n# My pull request is labeled pending-fixes\n\nThe `pending-fixes` label is added when there are changes requested to a PR. When the necessary changes are made, the label should be removed. However, despite our best efforts, it may sometimes happen that the maintainer did not see the changes or forgot to remove the label. If your PR is still marked as `pending-fixes` a few days after all requested changes have been made, feel free to ping the maintainer who labeled your issue and ask them to re-review and remove the label.\n\n\n\n\n# EMBEDDING YT-DLP\nSee [README.md#embedding-yt-dlp](README.md#embedding-yt-dlp) for instructions on how to embed yt-dlp in another Python program\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "Changelog.md", "size": 576174, "license": "Unlicense", "content_sha": "7aec6277145c4d92c0814ba28ec2c801e4770609", "findings": [], "content": "# Changelog\n\n<!--\n# To create a release, dispatch the https://github.com/yt-dlp/yt-dlp/actions/workflows/release.yml workflow on master\n-->\n\n### 2025.03.31\n\n#### Core changes\n- [Add `--compat-options 2024`](https://github.com/yt-dlp/yt-dlp/commit/22e34adbd741e1c7072015debd615dc3fb71c401) ([#12789](https://github.com/yt-dlp/yt-dlp/issues/12789)) by [seproDev](https://github.com/seproDev)\n\n#### Extractor changes\n- **francaisfacile**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/bb321cfdc3fd4400598ddb12a15862bc2ac8fc10) ([#12787](https://github.com/yt-dlp/yt-dlp/issues/12787)) by [mlabeeb03](https://github.com/mlabeeb03)\n- **generic**: [Validate response before checking m3u8 live status](https://github.com/yt-dlp/yt-dlp/commit/9a1ec1d36e172d252714cef712a6d091e0a0c4f2) ([#12784](https://github.com/yt-dlp/yt-dlp/issues/12784)) by [bashonly](https://github.com/bashonly)\n- **microsoftlearnepisode**: [Extract more formats](https://github.com/yt-dlp/yt-dlp/commit/d63696f23a341ee36a3237ccb5d5e14b34c2c579) ([#12799](https://github.com/yt-dlp/yt-dlp/issues/12799)) by [bashonly](https://github.com/bashonly)\n- **mlbtv**: [Fix radio-only extraction](https://github.com/yt-dlp/yt-dlp/commit/f033d86b96b36f8c5289dd7c3304f42d4d9f6ff4) ([#12792](https://github.com/yt-dlp/yt-dlp/issues/12792)) by [bashonly](https://github.com/bashonly)\n- **on24**: [Support `mainEvent` URLs](https://github.com/yt-dlp/yt-dlp/commit/e465b078ead75472fcb7b86f6ccaf2b5d3bc4c21) ([#12800](https://github.com/yt-dlp/yt-dlp/issues/12800)) by [bashonly](https://github.com/bashonly)\n- **sbs**: [Fix subtitles extraction](https://github.com/yt-dlp/yt-dlp/commit/29560359120f28adaaac67c86fa8442eb72daa0d) ([#12785](https://github.com/yt-dlp/yt-dlp/issues/12785)) by [bashonly](https://github.com/bashonly)\n- **stvr**: [Rename extractor from RTVS to STVR](https://github.com/yt-dlp/yt-dlp/commit/5fc521cbd0ce7b2410d0935369558838728e205d) ([#12788](https://github.com/yt-dlp/yt-dlp/issues/12788)) by [mireq](https://github.com/mireq)\n- **twitch**: clips: [Extract portrait formats](https://github.com/yt-dlp/yt-dlp/commit/61046c31612b30c749cbdae934b7fe26abe659d7) ([#12763](https://github.com/yt-dlp/yt-dlp/issues/12763)) by [DmitryScaletta](https://github.com/DmitryScaletta)\n- **youtube**\n    - [Add `player_js_variant` extractor-arg](https://github.com/yt-dlp/yt-dlp/commit/07f04005e40ebdb368920c511e36e98af0077ed3) ([#12767](https://github.com/yt-dlp/yt-dlp/issues/12767)) by [bashonly](https://github.com/bashonly)\n    - tab: [Fix playlist continuation extraction](https://github.com/yt-dlp/yt-dlp/commit/6a6d97b2cbc78f818de05cc96edcdcfd52caa259) ([#12777](https://github.com/yt-dlp/yt-dlp/issues/12777)) by [coletdjnz](https://github.com/coletdjnz)\n\n#### Misc. changes\n- **cleanup**: Miscellaneous: [5e457af](https://github.com/yt-dlp/yt-dlp/commit/5e457af57fae9645b1b8fa0ed689229c8fb9656b) by [bashonly](https://github.com/bashonly)\n\n### 2025.03.27\n\n#### Core changes\n- **jsinterp**: [Fix nested attributes and object extraction](https://github.com/yt-dlp/yt-dlp/commit/a8b9ff3c2a0ae25735e580173becc78545b92572) ([#12760](https://github.com/yt-dlp/yt-dlp/issues/12760)) by [bashonly](https://github.com/bashonly), [seproDev](https://github.com/seproDev)\n\n#### Extractor changes\n- **youtube**: [Make signature and nsig extraction more robust](https://github.com/yt-dlp/yt-dlp/commit/48be862b32648bff5b3e553e40fca4dcc6e88b28) ([#12761](https://github.com/yt-dlp/yt-dlp/issues/12761)) by [bashonly](https://github.com/bashonly), [seproDev](https://github.com/seproDev)\n\n### 2025.03.26\n\n#### Extractor changes\n- **youtube**\n    - [Fix signature and nsig extraction for player `4fcd6e4a`](https://github.com/yt-dlp/yt-dlp/commit/a550dfc904a02843a26369ae50dbb7c0febfb30e) ([#12748](https://github.com/yt-dlp/yt-dlp/issues/12748)) by [seproDev](https://github.com/seproDev)\n    - [Only cache nsig code on successful decoding](https://github.com/yt-dlp/yt-dlp/commit/ecee97b4fa90d51c48f9154c3a6d5a8ffe46cd5c) ([#12750](https://github.com/yt-dlp/yt-dlp/issues/12750)) by [bashonly](https://github.com/bashonly), [seproDev](https://github.com/seproDev)\n\n### 2025.03.25\n\n#### Core changes\n- [Fix attribute error on failed VT init](https://github.com/yt-dlp/yt-dlp/commit/b872ffec50fd50f790a5a490e006a369a28a3df3) ([#12696](https://github.com/yt-dlp/yt-dlp/issues/12696)) by [Grub4K](https://github.com/Grub4K)\n- **utils**: `js_to_json`: [Make function less fatal](https://github.com/yt-dlp/yt-dlp/commit/9491b44032b330e05bd5eaa546187005d1e8538e) ([#12715](https://github.com/yt-dlp/yt-dlp/issues/12715)) by [seproDev](https://github.com/seproDev)\n\n#### Extractor changes\n- [Fix sorting of HLS audio formats by `GROUP-ID`](https://github.com/yt-dlp/yt-dlp/commit/86ab79e1a5182092321102adf6ca34195803b878) ([#12714](https://github.com/yt-dlp/yt-dlp/issues/12714)) by [bashonly](https://github.com/bashonly)\n- **17live**: vod: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/3396eb50dcd245b49c0f4aecd6e80ec914095d16) ([#12723](https://github.com/yt-dlp/yt-dlp/issues/12723)) by [subrat-lima](https://github.com/subrat-lima)\n- **9now.com.au**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/9d5e6de2e7a47226d1f72c713ad45c88ba01db68) ([#12702](https://github.com/yt-dlp/yt-dlp/issues/12702)) by [bashonly](https://github.com/bashonly)\n- **chzzk**: video: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/e2dfccaf808b406d5bcb7dd04ae9ce420752dd6f) ([#12692](https://github.com/yt-dlp/yt-dlp/issues/12692)) by [bashonly](https://github.com/bashonly), [dirkf](https://github.com/dirkf)\n- **deezer**: [Remove extractors](https://github.com/yt-dlp/yt-dlp/commit/be5af3f9e91747768c2b41157851bfbe14c663f7) ([#12704](https://github.com/yt-dlp/yt-dlp/issues/12704)) by [seproDev](https://github.com/seproDev)\n- **generic**: [Fix MPD base URL parsing](https://github.com/yt-dlp/yt-dlp/commit/5086d4aed6aeb3908c62f49e2d8f74cc0cb05110) ([#12718](https://github.com/yt-dlp/yt-dlp/issues/12718)) by [fireattack](https://github.com/fireattack)\n- **streaks**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/801afeac91f97dc0b58cd39cc7e8c50f619dc4e1) ([#12679](https://github.com/yt-dlp/yt-dlp/issues/12679)) by [doe1080](https://github.com/doe1080)\n- **tver**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/66e0bab814e4a52ef3e12d81123ad992a29df50e) ([#12659](https://github.com/yt-dlp/yt-dlp/issues/12659)) by [arabcoders](https://github.com/arabcoders), [bashonly](https://github.com/bashonly)\n- **viki**: [Remove extractors](https://github.com/yt-dlp/yt-dlp/commit/fe4f14b8369038e7c58f7de546d76de1ce3a91ce) ([#12703](https://github.com/yt-dlp/yt-dlp/issues/12703)) by [seproDev](https://github.com/seproDev)\n- **vrsquare**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/b7fbb5a0a16a8e8d3e29c29e26ebed677d0d6ea3) ([#12515](https://github.com/yt-dlp/yt-dlp/issues/12515)) by [doe1080](https://github.com/doe1080)\n- **youtube**\n    - [Fix PhantomJS nsig fallback](https://github.com/yt-dlp/yt-dlp/commit/4054a2b623bd1e277b49d2e9abc3d112a4b1c7be) ([#12728](https://github.com/yt-dlp/yt-dlp/issues/12728)) by [bashonly](https://github.com/bashonly)\n    - [Fix signature and nsig extraction for player `363db69b`](https://github.com/yt-dlp/yt-dlp/commit/b9c979461b244713bf42691a5bc02834e2ba4b2c) ([#12725](https://github.com/yt-dlp/yt-dlp/issues/12725)) by [bashonly](https://github.com/bashonly)\n\n#### Networking changes\n- **Request Handler**: curl_cffi: [Support `curl_cffi` 0.10.x](https://github.com/yt-dlp/yt-dlp/commit/9bf23902ceb948b9685ce1dab575491571720fc6) ([#12670](https://github.com/yt-dlp/yt-dlp/issues/12670)) by [Grub4K](https://github.com/Grub4K)\n\n#### Misc. changes\n- **cleanup**: Miscellaneous: [9dde546](https://github.com/yt-dlp/yt-dlp/commit/9dde546e7ee3e1515d88ee3af08b099351455dc0) by [seproDev](https://github.com/seproDev)\n\n### 2025.03.21\n\n#### Core changes\n- [Fix external downloader availability when using `--ffmpeg-location`](https://github.com/yt-dlp/yt-dlp/commit/9f77e04c76e36e1cbbf49bc9eb385fa6ef804b67) ([#12318](https://github.com/yt-dlp/yt-dlp/issues/12318)) by [Kenshin9977](https://github.com/Kenshin9977)\n- [Load plugins on demand](https://github.com/yt-dlp/yt-dlp/commit/4445f37a7a66b248dbd8376c43137e6e441f138e) ([#11305](https://github.com/yt-dlp/yt-dlp/issues/11305)) by [coletdjnz](https://github.com/coletdjnz), [Grub4K](https://github.com/Grub4K), [pukkandan](https://github.com/pukkandan) (With fixes in [c034d65](https://github.com/yt-dlp/yt-dlp/commit/c034d655487be668222ef9476a16f374584e49a7))\n- [Support emitting ConEmu progress codes](https://github.com/yt-dlp/yt-dlp/commit/f7a1f2d8132967a62b0f6d5665c6d2dde2d42c09) ([#10649](https://github.com/yt-dlp/yt-dlp/issues/10649)) by [Grub4K](https://github.com/Grub4K)\n\n#### Extractor changes\n- **azmedien**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/26a502fc727d0e91b2db6bf4a112823bcc672e85) ([#12375](https://github.com/yt-dlp/yt-dlp/issues/12375)) by [goggle](https://github.com/goggle)\n- **bilibiliplaylist**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/f5fb2229e66cf59d5bf16065bc041b42a28354a0) ([#12690](https://github.com/yt-dlp/yt-dlp/issues/12690)) by [bashonly](https://github.com/bashonly)\n- **bunnycdn**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/3a1583ca75fb523cbad0e5e174387ea7b477d175) ([#11586](https://github.com/yt-dlp/yt-dlp/issues/11586)) by [Grub4K](https://github.com/Grub4K), [seproDev](https://github.com/seproDev)\n- **canalsurmas**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/01a8be4c23f186329d85f9c78db34a55f3294ac5) ([#12497](https://github.com/yt-dlp/yt-dlp/issues/12497)) by [Arc8ne](https://github.com/Arc8ne)\n- **cda**: [Fix login support](https://github.com/yt-dlp/yt-dlp/commit/be0d819e1103195043f6743650781f0d4d343f6d) ([#12552](https://github.com/yt-dlp/yt-dlp/issues/12552)) by [rysson](https://github.com/rysson)\n- **cultureunplugged**: [Extend `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/3042afb5fe342d3a00de76704cd7de611acc350e) ([#12486](https://github.com/yt-dlp/yt-dlp/issues/12486)) by [seproDev](https://github.com/seproDev)\n- **dailymotion**: [Improve embed detection](https://github.com/yt-dlp/yt-dlp/commit/ad60137c141efa5023fbc0ac8579eaefe8b3d8cc) ([#12464](https://github.com/yt-dlp/yt-dlp/issues/12464)) by [seproDev](https://github.com/seproDev)\n- **gem.cbc.ca**: [Fix login support](https://github.com/yt-dlp/yt-dlp/commit/eb1417786a3027b1e7290ec37ef6aaece50ebed0) ([#12414](https://github.com/yt-dlp/yt-dlp/issues/12414)) by [bashonly](https://github.com/bashonly)\n- **globo**: [Fix subtitles extraction](https://github.com/yt-dlp/yt-dlp/commit/0e1697232fcbba7551f983fd1ba93bb445cbb08b) ([#12270](https://github.com/yt-dlp/yt-dlp/issues/12270)) by [pedro](https://github.com/pedro)\n- **instagram**\n    - [Add `app_id` extractor-arg](https://github.com/yt-dlp/yt-dlp/commit/a90641c8363fa0c10800b36eb6b01ee22d3a9409) ([#12359](https://github.com/yt-dlp/yt-dlp/issues/12359)) by [chrisellsworth](https://github.com/chrisellsworth)\n    - [Fix extraction of older private posts](https://github.com/yt-dlp/yt-dlp/commit/a59abe0636dc49b22a67246afe35613571b86f05) ([#12451](https://github.com/yt-dlp/yt-dlp/issues/12451)) by [bashonly](https://github.com/bashonly)\n    - [Improve error handling](https://github.com/yt-dlp/yt-dlp/commit/480125560a3b9972d29ae0da850aba8109e6bd41) ([#12410](https://github.com/yt-dlp/yt-dlp/issues/12410)) by [bashonly](https://github.com/bashonly)\n    - story: [Support `--no-playlist`](https://github.com/yt-dlp/yt-dlp/commit/65c3c58c0a67463a150920203cec929045c95a24) ([#12397](https://github.com/yt-dlp/yt-dlp/issues/12397)) by [fireattack](https://github.com/fireattack)\n- **jamendo**: [Fix thumbnail extraction](https://github.com/yt-dlp/yt-dlp/commit/89a68c4857ddbaf937ff22f12648baaf6b5af840) ([#12622](https://github.com/yt-dlp/yt-dlp/issues/12622)) by [bashonly](https://github.com/bashonly), [JChris246](https://github.com/JChris246)\n- **ketnet**: [Remove extractor](https://github.com/yt-dlp/yt-dlp/commit/bbada3ec0779422cde34f1ce3dcf595da463b493) ([#12628](https://github.com/yt-dlp/yt-dlp/issues/12628)) by [MichaelDeBoey](https://github.com/MichaelDeBoey)\n- **lbry**\n    - [Make m3u8 format extraction non-fatal](https://github.com/yt-dlp/yt-dlp/commit/9807181cfbf87bfa732f415c30412bdbd77cbf81) ([#12463](https://github.com/yt-dlp/yt-dlp/issues/12463)) by [bashonly](https://github.com/bashonly)\n    - [Raise appropriate error for non-media files](https://github.com/yt-dlp/yt-dlp/commit/7126b472601814b7fd8c9de02069e8fff1764891) ([#12462](https://github.com/yt-dlp/yt-dlp/issues/12462)) by [bashonly](https://github.com/bashonly)\n- **loco**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/983095485c731240aae27c950cb8c24a50827b56) ([#12667](https://github.com/yt-dlp/yt-dlp/issues/12667)) by [DTrombett](https://github.com/DTrombett)\n- **magellantv**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/172d5fcd778bf2605db7647ebc56b29ed18d24ac) ([#12505](https://github.com/yt-dlp/yt-dlp/issues/12505)) by [seproDev](https://github.com/seproDev)\n- **mitele**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/7223d29569a48a35ad132a508c115973866838d3) ([#12689](https://github.com/yt-dlp/yt-dlp/issues/12689)) by [bashonly](https://github.com/bashonly)\n- **msn**: [Rework extractor](https://github.com/yt-dlp/yt-dlp/commit/4815dac131d42c51e12c1d05232db0bbbf607329) ([#12513](https://github.com/yt-dlp/yt-dlp/issues/12513)) by [seproDev](https://github.com/seproDev), [thedenv](https://github.com/thedenv)\n- **n1**: [Fix extraction of newer articles](https://github.com/yt-dlp/yt-dlp/commit/9d70abe4de401175cbbaaa36017806f16b2df9af) ([#12514](https://github.com/yt-dlp/yt-dlp/issues/12514)) by [u-spec-png](https://github.com/u-spec-png)\n- **nbcstations**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/ebac65aa9e0bf9a97c24d00f7977900d2577364b) ([#12534](https://github.com/yt-dlp/yt-dlp/issues/12534)) by [refack](https://github.com/refack)\n- **niconico**\n    - [Fix format sorting](https://github.com/yt-dlp/yt-dlp/commit/7508e34f203e97389f1d04db92140b13401dd724) ([#12442](https://github.com/yt-dlp/yt-dlp/issues/12442)) by [xpadev-net](https://github.com/xpadev-net)\n    - live: [Fix thumbnail extraction](https://github.com/yt-dlp/yt-dlp/commit/c2e6e1d5f77f3b720a6266f2869eb750d20e5dc1) ([#12419](https://github.com/yt-dlp/yt-dlp/issues/12419)) by [bashonly](https://github.com/bashonly)\n- **openrec**: [Fix `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/17504f253564cfad86244de2b6346d07d2300ca5) ([#12608](https://github.com/yt-dlp/yt-dlp/issues/12608)) by [fireattack](https://github.com/fireattack)\n- **pinterest**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/bd0a66816934de70312eea1e71c59c13b401dc3a) ([#12538](https://github.com/yt-dlp/yt-dlp/issues/12538)) by [mikf](https://github.com/mikf)\n- **playsuisse**: [Fix login support](https://github.com/yt-dlp/yt-dlp/commit/6933f5670cea9c3e2fb16c1caa1eda54d13122c5) ([#12444](https://github.com/yt-dlp/yt-dlp/issues/12444)) by [bashonly](https://github.com/bashonly)\n- **reddit**: [Truncate title](https://github.com/yt-dlp/yt-dlp/commit/d9a53cc1e6fd912daf500ca4f19e9ca88994dbf9) ([#12567](https://github.com/yt-dlp/yt-dlp/issues/12567)) by [seproDev](https://github.com/seproDev)\n- **rtp**: [Rework extractor](https://github.com/yt-dlp/yt-dlp/commit/8eb9c1bf3b9908cca22ef043602aa24fb9f352c6) ([#11638](https://github.com/yt-dlp/yt-dlp/issues/11638)) by [pferreir](https://github.com/pferreir), [red-acid](https://github.com/red-acid), [seproDev](https://github.com/seproDev), [somini](https://github.com/somini), [vallovic](https://github.com/vallovic)\n- **softwhiteunderbelly**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/652827d5a076c9483c36654ad2cf3fe46219baf4) ([#12281](https://github.com/yt-dlp/yt-dlp/issues/12281)) by [benfaerber](https://github.com/benfaerber)\n- **soop**: [Fix timestamp extraction](https://github.com/yt-dlp/yt-dlp/commit/8305df00012ff8138a6ff95279d06b54ac607f63) ([#12609](https://github.com/yt-dlp/yt-dlp/issues/12609)) by [msikma](https://github.com/msikma)\n- **soundcloud**\n    - [Extract tags](https://github.com/yt-dlp/yt-dlp/commit/9deed13d7cce6d3647379e50589c92de89227509) ([#12420](https://github.com/yt-dlp/yt-dlp/issues/12420)) by [bashonly](https://github.com/bashonly)\n    - [Fix thumbnail extraction](https://github.com/yt-dlp/yt-dlp/commit/6deeda5c11f34f613724fa0627879f0d607ba1b4) ([#12447](https://github.com/yt-dlp/yt-dlp/issues/12447)) by [bashonly](https://github.com/bashonly)\n- **tiktok**\n    - [Improve error handling](https://github.com/yt-dlp/yt-dlp/commit/99ea2978757a431eeb2a265b3395ccbe4ce202cf) ([#12445](https://github.com/yt-dlp/yt-dlp/issues/12445)) by [bashonly](https://github.com/bashonly)\n    - [Truncate title](https://github.com/yt-dlp/yt-dlp/commit/83b119dadb0f267f1fb66bf7ed74c097349de79e) ([#12566](https://github.com/yt-dlp/yt-dlp/issues/12566)) by [seproDev](https://github.com/seproDev)\n- **tv8.it**: [Add live and playlist extractors](https://github.com/yt-dlp/yt-dlp/commit/2ee3a0aff9be2be3bea60640d3d8a0febaf0acb6) ([#12569](https://github.com/yt-dlp/yt-dlp/issues/12569)) by [DTrombett](https://github.com/DTrombett)\n- **tvw**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/42b7440963866e31ff84a5b89030d1c596fa2e6e) ([#12271](https://github.com/yt-dlp/yt-dlp/issues/12271)) by [fries1234](https://github.com/fries1234)\n- **twitter**\n    - [Fix syndication token generation](https://github.com/yt-dlp/yt-dlp/commit/b8b47547049f5ebc3dd680fc7de70ed0ca9c0d70) ([#12537](https://github.com/yt-dlp/yt-dlp/issues/12537)) by [bashonly](https://github.com/bashonly)\n    - [Truncate title](https://github.com/yt-dlp/yt-dlp/commit/06f6de78db2eceeabd062ab1a3023e0ff9d4df53) ([#12560](https://github.com/yt-dlp/yt-dlp/issues/12560)) by [seproDev](https://github.com/seproDev)\n- **vk**: [Improve metadata extraction](https://github.com/yt-dlp/yt-dlp/commit/05c8023a27dd37c49163c0498bf98e3e3c1cb4b9) ([#12510](https://github.com/yt-dlp/yt-dlp/issues/12510)) by [seproDev](https://github.com/seproDev)\n- **vrtmax**: [Rework extractor](https://github.com/yt-dlp/yt-dlp/commit/df9ebeec00d658693252978d1ffb885e67aa6ab6) ([#12479](https://github.com/yt-dlp/yt-dlp/issues/12479)) by [bergoid](https://github.com/bergoid), [MichaelDeBoey](https://github.com/MichaelDeBoey), [seproDev](https://github.com/seproDev)\n- **weibo**: [Support playlists](https://github.com/yt-dlp/yt-dlp/commit/0bb39788626002a8a67e925580227952c563c8b9) ([#12284](https://github.com/yt-dlp/yt-dlp/issues/12284)) by [4ft35t](https://github.com/4ft35t)\n- **wsj**: [Support opinion URLs and impersonation](https://github.com/yt-dlp/yt-dlp/commit/7f3006eb0c0659982bb956d71b0bc806bcb0a5f2) ([#12431](https://github.com/yt-dlp/yt-dlp/issues/12431)) by [refack](https://github.com/refack)\n- **youtube**\n    - [Fix nsig and signature extraction for player `643afba4`](https://github.com/yt-dlp/yt-dlp/commit/9b868518a15599f3d7ef5a1c730dda164c30da9b) ([#12684](https://github.com/yt-dlp/yt-dlp/issues/12684)) by [bashonly](https://github.com/bashonly), [seproDev](https://github.com/seproDev)\n    - [Player client maintenance](https://github.com/yt-dlp/yt-dlp/commit/3380febe9984c21c79c3147c1d390a4cf339bc4c) ([#12603](https://github.com/yt-dlp/yt-dlp/issues/12603)) by [seproDev](https://github.com/seproDev)\n    - [Split into package](https://github.com/yt-dlp/yt-dlp/commit/4432a9390c79253ac830702b226d2e558b636725) ([#12557](https://github.com/yt-dlp/yt-dlp/issues/12557)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Warn on DRM formats](https://github.com/yt-dlp/yt-dlp/commit/e67d786c7cc87bd449d22e0ddef08306891c1173) ([#12593](https://github.com/yt-dlp/yt-dlp/issues/12593)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Warn on missing formats due to SSAP](https://github.com/yt-dlp/yt-dlp/commit/79ec2fdff75c8c1bb89b550266849ad4dec48dd3) ([#12483](https://github.com/yt-dlp/yt-dlp/issues/12483)) by [coletdjnz](https://github.com/coletdjnz)\n\n#### Networking changes\n- [Add `keep_header_casing` extension](https://github.com/yt-dlp/yt-dlp/commit/7d18fed8f1983fe6de4ddc810dfb2761ba5744ac) ([#11652](https://github.com/yt-dlp/yt-dlp/issues/11652)) by [coletdjnz](https://github.com/coletdjnz), [Grub4K](https://github.com/Grub4K)\n- [Always add unsupported suffix on version mismatch](https://github.com/yt-dlp/yt-dlp/commit/95f8df2f796d0048119615200758199aedcd7cf4) ([#12626](https://github.com/yt-dlp/yt-dlp/issues/12626)) by [Grub4K](https://github.com/Grub4K)\n\n#### Misc. changes\n- **cleanup**: Miscellaneous: [f36e4b6](https://github.com/yt-dlp/yt-dlp/commit/f36e4b6e65cb8403791aae2f520697115cb88dec) by [dirkf](https://github.com/dirkf), [gamer191](https://github.com/gamer191), [Grub4K](https://github.com/Grub4K), [seproDev](https://github.com/seproDev)\n- **test**: [Show all differences for `expect_value` and `expect_dict`](https://github.com/yt-dlp/yt-dlp/commit/a3e0c7d3b267abdf3933b709704a28d43bb46503) ([#12334](https://github.com/yt-dlp/yt-dlp/issues/12334)) by [Grub4K](https://github.com/Grub4K)\n\n### 2025.02.19\n\n#### Core changes\n- **jsinterp**\n    - [Add `js_number_to_string`](https://github.com/yt-dlp/yt-dlp/commit/0d9f061d38c3a4da61972e2adad317079f2f1c84) ([#12110](https://github.com/yt-dlp/yt-dlp/issues/12110)) by [Grub4K](https://github.com/Grub4K)\n    - [Improve zeroise](https://github.com/yt-dlp/yt-dlp/commit/4ca8c44a073d5aa3a3e3112c35b2b23d6ce25ac6) ([#12313](https://github.com/yt-dlp/yt-dlp/issues/12313)) by [seproDev](https://github.com/seproDev)\n\n#### Extractor changes\n- **acast**: [Support shows.acast.com URLs](https://github.com/yt-dlp/yt-dlp/commit/57c717fee4bfbc9309845bbb48901b72e4b69304) ([#12223](https://github.com/yt-dlp/yt-dlp/issues/12223)) by [barsnick](https://github.com/barsnick)\n- **cwtv**\n    - [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/18a28514e306e822eab4f3a79c76d515bf076406) ([#12207](https://github.com/yt-dlp/yt-dlp/issues/12207)) by [arantius](https://github.com/arantius)\n    - movie: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/03c3d705778c07739e0034b51490877cffdc0983) ([#12227](https://github.com/yt-dlp/yt-dlp/issues/12227)) by [bashonly](https://github.com/bashonly)\n- **digiview**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/f53553087d3fde9dcd61d6e9f98caf09db1d8ef2) ([#9902](https://github.com/yt-dlp/yt-dlp/issues/9902)) by [lfavole](https://github.com/lfavole)\n- **dropbox**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/861aeec449c8f3c062d962945b234ff0341f61f3) ([#12228](https://github.com/yt-dlp/yt-dlp/issues/12228)) by [bashonly](https://github.com/bashonly)\n- **francetv**\n    - site\n        - [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/817483ccc68aed6049ed9c4a2ffae44ca82d2b1c) ([#12236](https://github.com/yt-dlp/yt-dlp/issues/12236)) by [bashonly](https://github.com/bashonly)\n        - [Fix livestream extraction](https://github.com/yt-dlp/yt-dlp/commit/1295bbedd45fa8d9bc3f7a194864ae280297848e) ([#12316](https://github.com/yt-dlp/yt-dlp/issues/12316)) by [bashonly](https://github.com/bashonly)\n- **francetvinfo.fr**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/5c4c2ddfaa47988b4d50c1ad4988badc0b4f30c2) ([#12402](https://github.com/yt-dlp/yt-dlp/issues/12402)) by [bashonly](https://github.com/bashonly)\n- **gem.cbc.ca**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/5271ef48c6f61c145e03e18e960995d2e651d205) ([#12404](https://github.com/yt-dlp/yt-dlp/issues/12404)) by [bashonly](https://github.com/bashonly), [dirkf](https://github.com/dirkf)\n- **generic**: [Extract `live_status` for DASH manifest URLs](https://github.com/yt-dlp/yt-dlp/commit/19edaa44fcd375f54e63d6227b092f5252d3e889) ([#12256](https://github.com/yt-dlp/yt-dlp/issues/12256)) by [mp3butcher](https://github.com/mp3butcher)\n- **globo**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/f8d0161455f00add65585ca1a476a7b5d56f5f96) ([#11795](https://github.com/yt-dlp/yt-dlp/issues/11795)) by [slipinthedove](https://github.com/slipinthedove), [YoshiTabletopGamer](https://github.com/YoshiTabletopGamer)\n- **goplay**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/d59f14a0a7a8b55e6bf468237def62b73ab4a517) ([#12237](https://github.com/yt-dlp/yt-dlp/issues/12237)) by [alard](https://github.com/alard)\n- **pbs**: [Support www.thirteen.org URLs](https://github.com/yt-dlp/yt-dlp/commit/9fb8ab2ff67fb699f60cce09163a580976e90c0e) ([#11191](https://github.com/yt-dlp/yt-dlp/issues/11191)) by [rohieb](https://github.com/rohieb)\n- **reddit**: [Bypass gated subreddit warning](https://github.com/yt-dlp/yt-dlp/commit/6ca23ffaa4663cb552f937f0b1e9769b66db11bd) ([#12335](https://github.com/yt-dlp/yt-dlp/issues/12335)) by [bashonly](https://github.com/bashonly)\n- **twitter**: [Fix syndication token generation](https://github.com/yt-dlp/yt-dlp/commit/14cd7f3443c6da4d49edaefcc12da9dee86e243e) ([#12107](https://github.com/yt-dlp/yt-dlp/issues/12107)) by [Grub4K](https://github.com/Grub4K), [pjrobertson](https://github.com/pjrobertson)\n- **youtube**\n    - [Retry on more critical requests](https://github.com/yt-dlp/yt-dlp/commit/d48e612609d012abbea3785be4d26d78a014abb2) ([#12339](https://github.com/yt-dlp/yt-dlp/issues/12339)) by [coletdjnz](https://github.com/coletdjnz)\n    - [nsig workaround for `tce` player JS](https://github.com/yt-dlp/yt-dlp/commit/ec17fb16e8d69d4e3e10fb73bf3221be8570dfee) ([#12401](https://github.com/yt-dlp/yt-dlp/issues/12401)) by [bashonly](https://github.com/bashonly)\n- **zdf**: [Extract more metadata](https://github.com/yt-dlp/yt-dlp/commit/241ace4f104d50fdf7638f9203927aefcf57a1f7) ([#9565](https://github.com/yt-dlp/yt-dlp/issues/9565)) by [StefanLobbenmeier](https://github.com/StefanLobbenmeier) (With fixes in [e7882b6](https://github.com/yt-dlp/yt-dlp/commit/e7882b682b959e476d8454911655b3e9b14c79b2) by [bashonly](https://github.com/bashonly))\n\n#### Downloader changes\n- **hls**\n    - [Fix `BYTERANGE` logic](https://github.com/yt-dlp/yt-dlp/commit/10b7ff68e98f17655e31952f6e17120b2d7dda96) ([#11972](https://github.com/yt-dlp/yt-dlp/issues/11972)) by [entourage8](https://github.com/entourage8)\n    - [Support `--write-pages` for m3u8 media playlists](https://github.com/yt-dlp/yt-dlp/commit/be69468752ff598cacee57bb80533deab2367a5d) ([#12333](https://github.com/yt-dlp/yt-dlp/issues/12333)) by [bashonly](https://github.com/bashonly)\n    - [Support `hls_media_playlist_data` format field](https://github.com/yt-dlp/yt-dlp/commit/c987be0acb6872c6561f28aa28171e803393d851) ([#12322](https://github.com/yt-dlp/yt-dlp/issues/12322)) by [bashonly](https://github.com/bashonly)\n\n#### Misc. changes\n- [Improve Issue/PR templates](https://github.com/yt-dlp/yt-dlp/commit/517ddf3c3f12560ab93e3d36244dc82db9f97818) ([#11499](https://github.com/yt-dlp/yt-dlp/issues/11499)) by [seproDev](https://github.com/seproDev) (With fixes in [4ecb833](https://github.com/yt-dlp/yt-dlp/commit/4ecb833472c90e078567b561fb7c089f1aa9587b) by [bashonly](https://github.com/bashonly))\n- **cleanup**: Miscellaneous: [4985a40](https://github.com/yt-dlp/yt-dlp/commit/4985a4041770eaa0016271809a1fd950dc809a55) by [dirkf](https://github.com/dirkf), [Grub4K](https://github.com/Grub4K), [StefanLobbenmeier](https://github.com/StefanLobbenmeier)\n- **docs**: [Add note to `supportedsites.md`](https://github.com/yt-dlp/yt-dlp/commit/01a63629a21781458dcbd38779898e117678f5ff) ([#12382](https://github.com/yt-dlp/yt-dlp/issues/12382)) by [seproDev](https://github.com/seproDev)\n- **test**: download: [Validate and sort info dict fields](https://github.com/yt-dlp/yt-dlp/commit/208163447408c78673b08c172beafe5c310fb167) ([#12299](https://github.com/yt-dlp/yt-dlp/issues/12299)) by [bashonly](https://github.com/bashonly), [pzhlkj6612](https://github.com/pzhlkj6612)\n\n### 2025.01.26\n\n#### Core changes\n- [Fix float comparison values in format filters](https://github.com/yt-dlp/yt-dlp/commit/f7d071e8aa3bf67ed7e0f881e749ca9ab50b3f8f) ([#11880](https://github.com/yt-dlp/yt-dlp/issues/11880)) by [bashonly](https://github.com/bashonly), [Dioarya](https://github.com/Dioarya)\n- **utils**: `sanitize_path`: [Fix some incorrect behavior](https://github.com/yt-dlp/yt-dlp/commit/fc12e724a3b4988cfc467d2981887dde48c26b69) ([#11923](https://github.com/yt-dlp/yt-dlp/issues/11923)) by [Grub4K](https://github.com/Grub4K)\n\n#### Extractor changes\n- **1tv**: [Support sport1tv.ru domain](https://github.com/yt-dlp/yt-dlp/commit/61ae5dc34ac775d6c122575e21ef2153b1273a2b) ([#11889](https://github.com/yt-dlp/yt-dlp/issues/11889)) by [kvk-2015](https://github.com/kvk-2015)\n- **abematv**: [Support season extraction](https://github.com/yt-dlp/yt-dlp/commit/c709cc41cbc16edc846e0a431cfa8508396d4cb6) ([#11771](https://github.com/yt-dlp/yt-dlp/issues/11771)) by [middlingphys](https://github.com/middlingphys)\n- **bilibili**\n    - [Support space `/lists/` URLs](https://github.com/yt-dlp/yt-dlp/commit/465167910407449354eb48e9861efd0819f53eb5) ([#11964](https://github.com/yt-dlp/yt-dlp/issues/11964)) by [c-basalt](https://github.com/c-basalt)\n    - [Support space video list extraction without login](https://github.com/yt-dlp/yt-dlp/commit/78912ed9c81f109169b828c397294a6cf8eacf41) ([#12089](https://github.com/yt-dlp/yt-dlp/issues/12089)) by [grqz](https://github.com/grqz)\n- **bilibilidynamic**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/9676b05715b61c8c5dd5598871e60d8807fb1a86) ([#11838](https://github.com/yt-dlp/yt-dlp/issues/11838)) by [finch71](https://github.com/finch71), [grqz](https://github.com/grqz)\n- **bluesky**: [Prefer source format](https://github.com/yt-dlp/yt-dlp/commit/ccda63934df7de2823f0834218c4254c7c4d2e4c) ([#12154](https://github.com/yt-dlp/yt-dlp/issues/12154)) by [0x9fff00](https://github.com/0x9fff00)\n- **crunchyroll**: [Remove extractors](https://github.com/yt-dlp/yt-dlp/commit/ff44ed53061e065804da6275d182d7928cc03a5e) ([#12195](https://github.com/yt-dlp/yt-dlp/issues/12195)) by [seproDev](https://github.com/seproDev)\n- **dropout**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/164368610456e2d96b279f8b120dea08f7b1d74f) ([#12102](https://github.com/yt-dlp/yt-dlp/issues/12102)) by [bashonly](https://github.com/bashonly)\n- **eggs**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/20c765d02385a105c8ef13b6f7a737491d29c19a) ([#11904](https://github.com/yt-dlp/yt-dlp/issues/11904)) by [seproDev](https://github.com/seproDev), [subsense](https://github.com/subsense)\n- **funimation**: [Remove extractors](https://github.com/yt-dlp/yt-dlp/commit/cdcf1e86726b8fa44f7e7126bbf1c18e1798d25c) ([#12167](https://github.com/yt-dlp/yt-dlp/issues/12167)) by [doe1080](https://github.com/doe1080)\n- **goodgame**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/e7cc02b14d8d323f805d14325a9c95593a170d28) ([#12173](https://github.com/yt-dlp/yt-dlp/issues/12173)) by [NecroRomnt](https://github.com/NecroRomnt)\n- **lbry**: [Support signed URLs](https://github.com/yt-dlp/yt-dlp/commit/de30f652ffb7623500215f5906844f2ae0d92c7b) ([#12138](https://github.com/yt-dlp/yt-dlp/issues/12138)) by [seproDev](https://github.com/seproDev)\n- **naver**: [Fix m3u8 formats extraction](https://github.com/yt-dlp/yt-dlp/commit/b3007c44cdac38187fc6600de76959a7079a44d1) ([#12037](https://github.com/yt-dlp/yt-dlp/issues/12037)) by [kclauhk](https://github.com/kclauhk)\n- **nest**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/1ef3ee7500c4ab8c26f7fdc5b0ad1da4d16eec8e) ([#11747](https://github.com/yt-dlp/yt-dlp/issues/11747)) by [pabs3](https://github.com/pabs3), [seproDev](https://github.com/seproDev)\n- **niconico**: series: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/bc88b904cd02314da41ce1b2fdf046d0680fe965) ([#11822](https://github.com/yt-dlp/yt-dlp/issues/11822)) by [test20140](https://github.com/test20140)\n- **nrk**\n    - [Extract more formats](https://github.com/yt-dlp/yt-dlp/commit/89198bb23b4d03e0473ac408bfb50d67c2f71165) ([#12069](https://github.com/yt-dlp/yt-dlp/issues/12069)) by [hexahigh](https://github.com/hexahigh)\n    - [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/45732e2590a1bd0bc9608f5eb68c59341ca84f02) ([#12193](https://github.com/yt-dlp/yt-dlp/issues/12193)) by [hexahigh](https://github.com/hexahigh)\n- **patreon**: [Extract attachment filename as `alt_title`](https://github.com/yt-dlp/yt-dlp/commit/e2e73b5c65593ec0a5e685663e6ec0f4aaffc1f1) ([#12000](https://github.com/yt-dlp/yt-dlp/issues/12000)) by [msm595](https://github.com/msm595)\n- **pbs**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/13825ab77815ee6e1603abbecbb9f3795057b93c) ([#12024](https://github.com/yt-dlp/yt-dlp/issues/12024)) by [dirkf](https://github.com/dirkf), [krandor](https://github.com/krandor), [n10dollar](https://github.com/n10dollar)\n- **piramidetv**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/af2c821d74049b519895288aca23cee81fc4b049) ([#10777](https://github.com/yt-dlp/yt-dlp/issues/10777)) by [HobbyistDev](https://github.com/HobbyistDev), [kclauhk](https://github.com/kclauhk), [seproDev](https://github.com/seproDev)\n- **redgifs**: [Support `/ifr/` URLs](https://github.com/yt-dlp/yt-dlp/commit/4850ce91d163579fa615c3c0d44c9bd64682c22b) ([#11805](https://github.com/yt-dlp/yt-dlp/issues/11805)) by [invertico](https://github.com/invertico)\n- **rtvslo.si**: show: [Extract more metadata](https://github.com/yt-dlp/yt-dlp/commit/3fc46086562857d5493cbcff687f76e4e4ed303f) ([#12136](https://github.com/yt-dlp/yt-dlp/issues/12136)) by [cotko](https://github.com/cotko)\n- **senategov**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/68221ecc87c6a3f3515757bac2a0f9674a38e3f2) ([#9361](https://github.com/yt-dlp/yt-dlp/issues/9361)) by [Grabien](https://github.com/Grabien), [seproDev](https://github.com/seproDev)\n- **soundcloud**\n    - [Extract more metadata](https://github.com/yt-dlp/yt-dlp/commit/6d304133ab32bcd1eb78ff1467f1a41dd9b66c33) ([#11945](https://github.com/yt-dlp/yt-dlp/issues/11945)) by [7x11x13](https://github.com/7x11x13)\n    - user: [Add `/comments` page support](https://github.com/yt-dlp/yt-dlp/commit/7bfb4f72e490310d2681c7f4815218a2ebbc73ee) ([#11999](https://github.com/yt-dlp/yt-dlp/issues/11999)) by [7x11x13](https://github.com/7x11x13)\n- **subsplash**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/5d904b077d2f58ae44bdf208d2dcfcc3ff8347f5) ([#11054](https://github.com/yt-dlp/yt-dlp/issues/11054)) by [seproDev](https://github.com/seproDev), [subrat-lima](https://github.com/subrat-lima)\n- **theatercomplextownppv**: [Support `live` URLs](https://github.com/yt-dlp/yt-dlp/commit/797d2472a299692e01ad1500e8c3b7bc1daa7fe4) ([#11720](https://github.com/yt-dlp/yt-dlp/issues/11720)) by [bashonly](https://github.com/bashonly)\n- **vimeo**: [Fix thumbnail extraction](https://github.com/yt-dlp/yt-dlp/commit/9ff330948c92f6b2e1d9c928787362ab19cd6c62) ([#12142](https://github.com/yt-dlp/yt-dlp/issues/12142)) by [jixunmoe](https://github.com/jixunmoe)\n- **vimp**: Playlist: [Add support for tags](https://github.com/yt-dlp/yt-dlp/commit/d4f5be1735c8feaeb3308666e0b878e9782f529d) ([#11688](https://github.com/yt-dlp/yt-dlp/issues/11688)) by [FestplattenSchnitzel](https://github.com/FestplattenSchnitzel)\n- **weibo**: [Extend `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/a567f97b62ae9f6d6f5a9376c361512ab8dceda2) ([#12088](https://github.com/yt-dlp/yt-dlp/issues/12088)) by [4ft35t](https://github.com/4ft35t)\n- **xhamster**: [Various improvements](https://github.com/yt-dlp/yt-dlp/commit/3b99a0f0e07f0120ab416f34a8f5ab75d4fdf1d1) ([#11738](https://github.com/yt-dlp/yt-dlp/issues/11738)) by [knackku](https://github.com/knackku)\n- **xiaohongshu**: [Extract more formats](https://github.com/yt-dlp/yt-dlp/commit/f9f24ae376a9eaca777816479a4a29f6f0ce7681) ([#12147](https://github.com/yt-dlp/yt-dlp/issues/12147)) by [seproDev](https://github.com/seproDev)\n- **youtube**\n    - [Download `tv` client Innertube config](https://github.com/yt-dlp/yt-dlp/commit/326fb1ffaf4e8349f1fe8ba2a81839652e044bff) ([#12168](https://github.com/yt-dlp/yt-dlp/issues/12168)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Extract `media_type` for livestreams](https://github.com/yt-dlp/yt-dlp/commit/421bc72103d1faed473a451299cd17d6abb433bb) ([#11605](https://github.com/yt-dlp/yt-dlp/issues/11605)) by [nosoop](https://github.com/nosoop)\n    - [Restore convenience workarounds](https://github.com/yt-dlp/yt-dlp/commit/f0d4b8a5d6354b294bc9631cf15a7160b7bad5de) ([#12181](https://github.com/yt-dlp/yt-dlp/issues/12181)) by [bashonly](https://github.com/bashonly)\n    - [Update `ios` player client](https://github.com/yt-dlp/yt-dlp/commit/de82acf8769282ce321a86737ecc1d4bef0e82a7) ([#12155](https://github.com/yt-dlp/yt-dlp/issues/12155)) by [b5i](https://github.com/b5i)\n    - [Use different PO token for GVS and Player](https://github.com/yt-dlp/yt-dlp/commit/6b91d232e316efa406035915532eb126fbaeea38) ([#12090](https://github.com/yt-dlp/yt-dlp/issues/12090)) by [coletdjnz](https://github.com/coletdjnz)\n    - tab: [Improve shorts title extraction](https://github.com/yt-dlp/yt-dlp/commit/76ac023ff02f06e8c003d104f02a03deeddebdcd) ([#11997](https://github.com/yt-dlp/yt-dlp/issues/11997)) by [bashonly](https://github.com/bashonly), [d3d9](https://github.com/d3d9)\n- **zdf**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/bb69f5dab79fb32c4ec0d50e05f7fa26d05d54ba) ([#11041](https://github.com/yt-dlp/yt-dlp/issues/11041)) by [InvalidUsernameException](https://github.com/InvalidUsernameException)\n\n#### Misc. changes\n- **cleanup**: Miscellaneous: [3b45319](https://github.com/yt-dlp/yt-dlp/commit/3b4531934465580be22937fecbb6e1a3a9e2334f) by [bashonly](https://github.com/bashonly), [lonble](https://github.com/lonble), [pjrobertson](https://github.com/pjrobertson), [seproDev](https://github.com/seproDev)\n\n### 2025.01.15\n\n#### Extractor changes\n- **youtube**: [Do not use `web_creator` as a default client](https://github.com/yt-dlp/yt-dlp/commit/c8541f8b13e743fcfa06667530d13fee8686e22a) ([#12087](https://github.com/yt-dlp/yt-dlp/issues/12087)) by [bashonly](https://github.com/bashonly)\n\n### 2025.01.12\n\n#### Core changes\n- [Fix filename sanitization with `--no-windows-filenames`](https://github.com/yt-dlp/yt-dlp/commit/8346b549150003df988538e54c9d8bc4de568979) ([#11988](https://github.com/yt-dlp/yt-dlp/issues/11988)) by [bashonly](https://github.com/bashonly)\n- [Validate retries values are non-negative](https://github.com/yt-dlp/yt-dlp/commit/1f4e1e85a27c5b43e34d7706cfd88ffce1b56a4a) ([#11927](https://github.com/yt-dlp/yt-dlp/issues/11927)) by [Strkmn](https://github.com/Strkmn)\n\n#### Extractor changes\n- **drtalks**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/1f489f4a45691cac3f9e787d22a3a8a086229ba6) ([#10831](https://github.com/yt-dlp/yt-dlp/issues/10831)) by [pzhlkj6612](https://github.com/pzhlkj6612), [seproDev](https://github.com/seproDev)\n- **plvideo**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/3c14e9191f3035b9a729d1d87bc0381f42de57cf) ([#10657](https://github.com/yt-dlp/yt-dlp/issues/10657)) by [Sanceilaks](https://github.com/Sanceilaks), [seproDev](https://github.com/seproDev)\n- **vine**: [Remove extractors](https://github.com/yt-dlp/yt-dlp/commit/e2ef4fece6c9742d1733e3bae408c4787765f78c) ([#11700](https://github.com/yt-dlp/yt-dlp/issues/11700)) by [allendema](https://github.com/allendema)\n- **xiaohongshu**: [Extend `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/763ed06ee69f13949397897bd42ff2ec3dc3d384) ([#11806](https://github.com/yt-dlp/yt-dlp/issues/11806)) by [HobbyistDev](https://github.com/HobbyistDev)\n- **youtube**\n    - [Fix DASH formats incorrectly skipped in some situations](https://github.com/yt-dlp/yt-dlp/commit/0b6b7742c2e7f2a1fcb0b54ef3dd484bab404b3f) ([#11910](https://github.com/yt-dlp/yt-dlp/issues/11910)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Refactor cookie auth](https://github.com/yt-dlp/yt-dlp/commit/75079f4e3f7dce49b61ef01da7adcd9876a0ca3b) ([#11989](https://github.com/yt-dlp/yt-dlp/issues/11989)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Use `tv` instead of `mweb` client by default](https://github.com/yt-dlp/yt-dlp/commit/712d2abb32f59b2d246be2901255f84f1a4c30b3) ([#12059](https://github.com/yt-dlp/yt-dlp/issues/12059)) by [coletdjnz](https://github.com/coletdjnz)\n\n#### Misc. changes\n- **cleanup**: Miscellaneous: [dade5e3](https://github.com/yt-dlp/yt-dlp/commit/dade5e35c89adaad04408bfef766820dbca06ebe) by [grqz](https://github.com/grqz), [Grub4K](https://github.com/Grub4K), [seproDev](https://github.com/seproDev)\n\n### 2024.12.23\n\n#### Core changes\n- [Don't sanitize filename on Unix when `--no-windows-filenames`](https://github.com/yt-dlp/yt-dlp/commit/6fc85f617a5850307fd5b258477070e6ee177796) ([#9591](https://github.com/yt-dlp/yt-dlp/issues/9591)) by [pukkandan](https://github.com/pukkandan)\n- **update**\n    - [Check 64-bitness when upgrading ARM builds](https://github.com/yt-dlp/yt-dlp/commit/b91c3925c2059970daa801cb131c0c2f4f302e72) ([#11819](https://github.com/yt-dlp/yt-dlp/issues/11819)) by [bashonly](https://github.com/bashonly)\n    - [Fix endless update loop for `linux_exe` builds](https://github.com/yt-dlp/yt-dlp/commit/3d3ee458c1fe49dd5ebd7651a092119d23eb7000) ([#11827](https://github.com/yt-dlp/yt-dlp/issues/11827)) by [bashonly](https://github.com/bashonly)\n\n#### Extractor changes\n- **soundcloud**: [Various fixes](https://github.com/yt-dlp/yt-dlp/commit/d298693b1b266d198e8eeecb90ea17c4a031268f) ([#11820](https://github.com/yt-dlp/yt-dlp/issues/11820)) by [bashonly](https://github.com/bashonly)\n- **youtube**\n    - [Add age-gate workaround for some embeddable videos](https://github.com/yt-dlp/yt-dlp/commit/09a6c687126f04e243fcb105a828787efddd1030) ([#11821](https://github.com/yt-dlp/yt-dlp/issues/11821)) by [bashonly](https://github.com/bashonly)\n    - [Fix `uploader_id` extraction](https://github.com/yt-dlp/yt-dlp/commit/1a8851b689763e5173b96f70f8a71df0e4a44b66) ([#11818](https://github.com/yt-dlp/yt-dlp/issues/11818)) by [bashonly](https://github.com/bashonly)\n    - [Player client maintenance](https://github.com/yt-dlp/yt-dlp/commit/65cf46cddd873fd229dbb0fc0689bca4c201c6b6) ([#11893](https://github.com/yt-dlp/yt-dlp/issues/11893)) by [bashonly](https://github.com/bashonly)\n    - [Skip iOS formats that require PO Token](https://github.com/yt-dlp/yt-dlp/commit/9f42e68a74f3f00b0253fe70763abd57cac4237b) ([#11890](https://github.com/yt-dlp/yt-dlp/issues/11890)) by [coletdjnz](https://github.com/coletdjnz)\n\n### 2024.12.13\n\n#### Extractor changes\n- **patreon**: campaign: [Support /c/ URLs](https://github.com/yt-dlp/yt-dlp/commit/bc262bcad4d3683ceadf61a7eb87e233e72adef3) ([#11756](https://github.com/yt-dlp/yt-dlp/issues/11756)) by [bashonly](https://github.com/bashonly)\n- **soundcloud**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/f4d3e9e6dc25077b79849a31a2f67f93fdc01e62) ([#11777](https://github.com/yt-dlp/yt-dlp/issues/11777)) by [bashonly](https://github.com/bashonly)\n- **youtube**\n    - [Fix `release_date` extraction](https://github.com/yt-dlp/yt-dlp/commit/d5e2a379f2adcb28bc48c7d9e90716d7278f89d2) ([#11759](https://github.com/yt-dlp/yt-dlp/issues/11759)) by [MutantPiggieGolem1](https://github.com/MutantPiggieGolem1)\n    - [Fix signature function extraction for `2f1832d2`](https://github.com/yt-dlp/yt-dlp/commit/5460cd91891bf613a2065e2fc278d9903c37a127) ([#11801](https://github.com/yt-dlp/yt-dlp/issues/11801)) by [bashonly](https://github.com/bashonly)\n    - [Prioritize original language over auto-dubbed audio](https://github.com/yt-dlp/yt-dlp/commit/dc3c4fddcc653989dae71fc563d82a308fc898cc) ([#11803](https://github.com/yt-dlp/yt-dlp/issues/11803)) by [bashonly](https://github.com/bashonly)\n    - search_url: [Fix playlist searches](https://github.com/yt-dlp/yt-dlp/commit/f6c73aad5f1a67544bea137ebd9d1e22e0e56567) ([#11782](https://github.com/yt-dlp/yt-dlp/issues/11782)) by [Crypto90](https://github.com/Crypto90)\n\n#### Misc. changes\n- **cleanup**: [Make more playlist entries lazy](https://github.com/yt-dlp/yt-dlp/commit/54216696261bc07cacd9a837c501d9e0b7fed09e) ([#11763](https://github.com/yt-dlp/yt-dlp/issues/11763)) by [seproDev](https://github.com/seproDev)\n\n### 2024.12.06\n\n#### Core changes\n- **cookies**: [Add `--cookies-from-browser` support for MS Store Firefox](https://github.com/yt-dlp/yt-dlp/commit/354cb4026cf2191e1a130ec2a627b95cabfbc60a) ([#11731](https://github.com/yt-dlp/yt-dlp/issues/11731)) by [wesson09](https://github.com/wesson09)\n\n#### Extractor changes\n- **bilibili**: [Fix HD formats extraction](https://github.com/yt-dlp/yt-dlp/commit/fca3eb5f8be08d5fab2e18b45b7281a12e566725) ([#11734](https://github.com/yt-dlp/yt-dlp/issues/11734)) by [grqz](https://github.com/grqz)\n- **soundcloud**: [Fix formats extraction](https://github.com/yt-dlp/yt-dlp/commit/2feb28028ee48f2185d2d95076e62accb09b9e2e) ([#11742](https://github.com/yt-dlp/yt-dlp/issues/11742)) by [bashonly](https://github.com/bashonly)\n- **youtube**\n    - [Fix `n` sig extraction for player `3bb1f723`](https://github.com/yt-dlp/yt-dlp/commit/a95ee6d8803fca9157adecf63732ab58bf87fd88) ([#11750](https://github.com/yt-dlp/yt-dlp/issues/11750)) by [bashonly](https://github.com/bashonly) (With fixes in [4bd2655](https://github.com/yt-dlp/yt-dlp/commit/4bd2655398aed450456197a6767639114a24eac2))\n    - [Fix signature function extraction](https://github.com/yt-dlp/yt-dlp/commit/4c85ccd1366c88cf93982f8350f58eed17355981) ([#11751](https://github.com/yt-dlp/yt-dlp/issues/11751)) by [bashonly](https://github.com/bashonly)\n    - [Player client maintenance](https://github.com/yt-dlp/yt-dlp/commit/2e49c789d3eebc39af8910705d65a98bca0e4c4f) ([#11724](https://github.com/yt-dlp/yt-dlp/issues/11724)) by [bashonly](https://github.com/bashonly)\n\n### 2024.12.03\n\n#### Core changes\n- [Add `playlist_webpage_url` field](https://github.com/yt-dlp/yt-dlp/commit/7d6c259a03bc4707a319e5e8c6eff0278707874b) ([#11613](https://github.com/yt-dlp/yt-dlp/issues/11613)) by [seproDev](https://github.com/seproDev)\n\n#### Extractor changes\n- [Handle fragmented formats in `_remove_duplicate_formats`](https://github.com/yt-dlp/yt-dlp/commit/e0500cbf796323551bbabe5b8ed8c75a511ba47a) ([#11637](https://github.com/yt-dlp/yt-dlp/issues/11637)) by [Grub4K](https://github.com/Grub4K)\n- **bilibili**\n    - [Always try to extract HD formats](https://github.com/yt-dlp/yt-dlp/commit/dc1687648077c5bf64863b307ecc5ab7e029bd8d) ([#10559](https://github.com/yt-dlp/yt-dlp/issues/10559)) by [grqz](https://github.com/grqz)\n    - [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/239f5f36fe04603bec59c8b975f6a792f10246db) ([#11667](https://github.com/yt-dlp/yt-dlp/issues/11667)) by [grqz](https://github.com/grqz) (With fixes in [f05a1cd](https://github.com/yt-dlp/yt-dlp/commit/f05a1cd1492fc98dc8d80d2081d632a1879913d2) by [bashonly](https://github.com/bashonly), [grqz](https://github.com/grqz))\n    - [Fix subtitles and chapters extraction](https://github.com/yt-dlp/yt-dlp/commit/a13a336aa6f906812701abec8101b73b73db8ff7) ([#11708](https://github.com/yt-dlp/yt-dlp/issues/11708)) by [xiaomac](https://github.com/xiaomac)\n- **chaturbate**: [Fix support for non-public streams](https://github.com/yt-dlp/yt-dlp/commit/4b5eec0aaa7c02627f27a386591b735b90e681a8) ([#11624](https://github.com/yt-dlp/yt-dlp/issues/11624)) by [jkruse](https://github.com/jkruse)\n- **dacast**: [Fix HLS AES formats extraction](https://github.com/yt-dlp/yt-dlp/commit/0a0d80800b9350d1a4c4b18d82cfb77ffbc3c507) ([#11644](https://github.com/yt-dlp/yt-dlp/issues/11644)) by [bashonly](https://github.com/bashonly)\n- **dropbox**: [Fix password-protected video extraction](https://github.com/yt-dlp/yt-dlp/commit/00dcde728635633eee969ad4d498b9f233c4a94e) ([#11636](https://github.com/yt-dlp/yt-dlp/issues/11636)) by [bashonly](https://github.com/bashonly)\n- **duoplay**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/62cba8a1bedbfc0ddde7267ae57b72bf5f7ea7b1) ([#11588](https://github.com/yt-dlp/yt-dlp/issues/11588)) by [bashonly](https://github.com/bashonly), [glensc](https://github.com/glensc)\n- **facebook**: [Support more groups URLs](https://github.com/yt-dlp/yt-dlp/commit/e0f1ae813b36e783e2348ba2a1566e12f5cd8f6e) ([#11576](https://github.com/yt-dlp/yt-dlp/issues/11576)) by [grqz](https://github.com/grqz)\n- **instagram**: [Support `share` URLs](https://github.com/yt-dlp/yt-dlp/commit/360aed810ad85db950df586282d256516c98cd2d) ([#11677](https://github.com/yt-dlp/yt-dlp/issues/11677)) by [grqz](https://github.com/grqz)\n- **microsoftembed**: [Make format extraction non fatal](https://github.com/yt-dlp/yt-dlp/commit/2bea7936323ca4b6f3b9b1fdd892566223e30efa) ([#11654](https://github.com/yt-dlp/yt-dlp/issues/11654)) by [seproDev](https://github.com/seproDev)\n- **mitele**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/cd0f934604587ed793e9177f6a127e5dcf99a7dd) ([#11683](https://github.com/yt-dlp/yt-dlp/issues/11683)) by [DarkZeros](https://github.com/DarkZeros)\n- **stripchat**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/16336c51d0848a6868a4fa04e749fa03548b4913) ([#11596](https://github.com/yt-dlp/yt-dlp/issues/11596)) by [gitninja1234](https://github.com/gitninja1234)\n- **tiktok**: [Deprioritize animated thumbnails](https://github.com/yt-dlp/yt-dlp/commit/910ecc422930bca14e2abe4986f5f92359e3cea8) ([#11645](https://github.com/yt-dlp/yt-dlp/issues/11645)) by [bashonly](https://github.com/bashonly)\n- **vk**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/c038a7b187ba24360f14134842a7a2cf897c33b1) ([#11715](https://github.com/yt-dlp/yt-dlp/issues/11715)) by [bashonly](https://github.com/bashonly)\n- **youtube**\n    - [Adjust player clients for site changes](https://github.com/yt-dlp/yt-dlp/commit/0d146c1e36f467af30e87b7af651bdee67b73500) ([#11663](https://github.com/yt-dlp/yt-dlp/issues/11663)) by [bashonly](https://github.com/bashonly)\n    - tab: [Fix playlists tab extraction](https://github.com/yt-dlp/yt-dlp/commit/fe70f20aedf528fdee332131bc9b6710e54e6f10) ([#11615](https://github.com/yt-dlp/yt-dlp/issues/11615)) by [seproDev](https://github.com/seproDev)\n\n#### Networking changes\n- **Request Handler**: websockets: [Support websockets 14.0+](https://github.com/yt-dlp/yt-dlp/commit/c7316373c0a886f65a07a51e50ee147bb3294c85) ([#11616](https://github.com/yt-dlp/yt-dlp/issues/11616)) by [coletdjnz](https://github.com/coletdjnz)\n\n#### Misc. changes\n- **cleanup**\n    - [Bump ruff to 0.8.x](https://github.com/yt-dlp/yt-dlp/commit/d8fb3490863653182864d2a53522f350d67a9ff8) ([#11608](https://github.com/yt-dlp/yt-dlp/issues/11608)) by [seproDev](https://github.com/seproDev)\n    - Miscellaneous\n        - [ccf0a6b](https://github.com/yt-dlp/yt-dlp/commit/ccf0a6b86b7f68a75463804fe485ec240b8635f0) by [bashonly](https://github.com/bashonly), [pzhlkj6612](https://github.com/pzhlkj6612)\n        - [2b67ac3](https://github.com/yt-dlp/yt-dlp/commit/2b67ac300ac8b44368fb121637d1743cea8c5b6b) by [bashonly](https://github.com/bashonly), [seproDev](https://github.com/seproDev)\n\n### 2024.11.18\n\n#### Important changes\n- **Login with OAuth is no longer supported for YouTube**\nDue to a change made by the site, yt-dlp is no longer able to support OAuth login for YouTube. [Read more](https://github.com/yt-dlp/yt-dlp/issues/11462#issuecomment-2471703090)\n\n#### Core changes\n- [Catch broken Cryptodome installations](https://github.com/yt-dlp/yt-dlp/commit/b83ca24eb72e1e558b0185bd73975586c0bc0546) ([#11486](https://github.com/yt-dlp/yt-dlp/issues/11486)) by [seproDev](https://github.com/seproDev)\n- **utils**\n    - [Fix `join_nonempty`, add `**kwargs` to `unpack`](https://github.com/yt-dlp/yt-dlp/commit/39d79c9b9cf23411d935910685c40aa1a2fdb409) ([#11559](https://github.com/yt-dlp/yt-dlp/issues/11559)) by [Grub4K](https://github.com/Grub4K)\n    - `subs_list_to_dict`: [Add `lang` default parameter](https://github.com/yt-dlp/yt-dlp/commit/c014fbcddcb4c8f79d914ac5bb526758b540ea33) ([#11508](https://github.com/yt-dlp/yt-dlp/issues/11508)) by [Grub4K](https://github.com/Grub4K)\n\n#### Extractor changes\n- [Allow `ext` override for thumbnails](https://github.com/yt-dlp/yt-dlp/commit/eb64ae7d5def6df2aba74fb703e7f168fb299865) ([#11545](https://github.com/yt-dlp/yt-dlp/issues/11545)) by [bashonly](https://github.com/bashonly)\n- **adobepass**: [Fix provider requests](https://github.com/yt-dlp/yt-dlp/commit/85fdc66b6e01d19a94b4f39b58e3c0cf23600902) ([#11472](https://github.com/yt-dlp/yt-dlp/issues/11472)) by [bashonly](https://github.com/bashonly)\n- **archive.org**: [Fix comments extraction](https://github.com/yt-dlp/yt-dlp/commit/f2a4983df7a64c4e93b56f79dbd16a781bd90206) ([#11527](https://github.com/yt-dlp/yt-dlp/issues/11527)) by [jshumphrey](https://github.com/jshumphrey)\n- **bandlab**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/6365e92589e4bc17b8fffb0125a716d144ad2137) ([#11535](https://github.com/yt-dlp/yt-dlp/issues/11535)) by [seproDev](https://github.com/seproDev)\n- **chaturbate**\n    - [Extract from API and support impersonation](https://github.com/yt-dlp/yt-dlp/commit/720b3dc453c342bc2e8df7dbc0acaab4479de46c) ([#11555](https://github.com/yt-dlp/yt-dlp/issues/11555)) by [powergold1](https://github.com/powergold1) (With fixes in [7cecd29](https://github.com/yt-dlp/yt-dlp/commit/7cecd299e4a5ef1f0f044b2fedc26f17e41f15e3) by [seproDev](https://github.com/seproDev))\n    - [Support alternate domains](https://github.com/yt-dlp/yt-dlp/commit/a9f85670d03ab993dc589f21a9ffffcad61392d5) ([#10595](https://github.com/yt-dlp/yt-dlp/issues/10595)) by [manavchaudhary1](https://github.com/manavchaudhary1)\n- **cloudflarestream**: [Avoid extraction via videodelivery.net](https://github.com/yt-dlp/yt-dlp/commit/2db8c2e7d57a1784b06057c48e3e91023720d195) ([#11478](https://github.com/yt-dlp/yt-dlp/issues/11478)) by [hugovdev](https://github.com/hugovdev)\n- **ctvnews**\n    - [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/f351440f1dc5b3dfbfc5737b037a869d946056fe) ([#11534](https://github.com/yt-dlp/yt-dlp/issues/11534)) by [bashonly](https://github.com/bashonly), [jshumphrey](https://github.com/jshumphrey)\n    - [Fix playlist ID extraction](https://github.com/yt-dlp/yt-dlp/commit/f9d98509a898737c12977b2e2117277bada2c196) ([#8892](https://github.com/yt-dlp/yt-dlp/issues/8892)) by [qbnu](https://github.com/qbnu)\n- **digitalconcerthall**: [Support login with access/refresh tokens](https://github.com/yt-dlp/yt-dlp/commit/f7257588bdff5f0b0452635a66b253a783c97357) ([#11571](https://github.com/yt-dlp/yt-dlp/issues/11571)) by [bashonly](https://github.com/bashonly)\n- **facebook**: [Fix formats extraction](https://github.com/yt-dlp/yt-dlp/commit/bacc31b05a04181b63100c481565256b14813a5e) ([#11513](https://github.com/yt-dlp/yt-dlp/issues/11513)) by [bashonly](https://github.com/bashonly)\n- **gamedevtv**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/be3579aaf0c3b71a0a3195e1955415d5e4d6b3d8) ([#11368](https://github.com/yt-dlp/yt-dlp/issues/11368)) by [bashonly](https://github.com/bashonly), [stratus-ss](https://github.com/stratus-ss)\n- **goplay**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/6b43a8d84b881d769b480ba6e20ec691e9d1b92d) ([#11466](https://github.com/yt-dlp/yt-dlp/issues/11466)) by [bashonly](https://github.com/bashonly), [SamDecrock](https://github.com/SamDecrock)\n- **kenh14**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/eb15fd5a32d8b35ef515f7a3d1158c03025648ff) ([#3996](https://github.com/yt-dlp/yt-dlp/issues/3996)) by [krichbanana](https://github.com/krichbanana), [pzhlkj6612](https://github.com/pzhlkj6612)\n- **litv**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/e079ffbda66de150c0a9ebef05e89f61bb4d5f76) ([#11071](https://github.com/yt-dlp/yt-dlp/issues/11071)) by [jiru](https://github.com/jiru)\n- **mixchmovie**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/0ec9bfed4d4a52bfb4f8733da1acf0aeeae21e6b) ([#10897](https://github.com/yt-dlp/yt-dlp/issues/10897)) by [Sakura286](https://github.com/Sakura286)\n- **patreon**: [Fix comments extraction](https://github.com/yt-dlp/yt-dlp/commit/1d253b0a27110d174c40faf8fb1c999d099e0cde) ([#11530](https://github.com/yt-dlp/yt-dlp/issues/11530)) by [bashonly](https://github.com/bashonly), [jshumphrey](https://github.com/jshumphrey)\n- **pialive**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/d867f99622ef7fba690b08da56c39d739b822bb7) ([#10811](https://github.com/yt-dlp/yt-dlp/issues/10811)) by [ChocoLZS](https://github.com/ChocoLZS)\n- **radioradicale**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/70c55cb08f780eab687e881ef42bb5c6007d290b) ([#5607](https://github.com/yt-dlp/yt-dlp/issues/5607)) by [a13ssandr0](https://github.com/a13ssandr0), [pzhlkj6612](https://github.com/pzhlkj6612)\n- **reddit**: [Improve error handling](https://github.com/yt-dlp/yt-dlp/commit/7ea2787920cccc6b8ea30791993d114fbd564434) ([#11573](https://github.com/yt-dlp/yt-dlp/issues/11573)) by [bashonly](https://github.com/bashonly)\n- **redgifsuser**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/d215fba7edb69d4fa665f43663756fd260b1489f) ([#11531](https://github.com/yt-dlp/yt-dlp/issues/11531)) by [jshumphrey](https://github.com/jshumphrey)\n- **rutube**: [Rework extractors](https://github.com/yt-dlp/yt-dlp/commit/e398217aae19bb25f91797bfbe8a3243698d7f45) ([#11480](https://github.com/yt-dlp/yt-dlp/issues/11480)) by [seproDev](https://github.com/seproDev)\n- **sonylivseries**: [Add `sort_order` extractor-arg](https://github.com/yt-dlp/yt-dlp/commit/2009cb27e17014787bf63eaa2ada51293d54f22a) ([#11569](https://github.com/yt-dlp/yt-dlp/issues/11569)) by [bashonly](https://github.com/bashonly)\n- **soop**: [Fix thumbnail extraction](https://github.com/yt-dlp/yt-dlp/commit/c699bafc5038b59c9afe8c2e69175fb66424c832) ([#11545](https://github.com/yt-dlp/yt-dlp/issues/11545)) by [bashonly](https://github.com/bashonly)\n- **spankbang**: [Support browser impersonation](https://github.com/yt-dlp/yt-dlp/commit/8388ec256f7753b02488788e3cfa771f6e1db247) ([#11542](https://github.com/yt-dlp/yt-dlp/issues/11542)) by [jshumphrey](https://github.com/jshumphrey)\n- **spreaker**\n    - [Support episode pages and access keys](https://github.com/yt-dlp/yt-dlp/commit/c39016f66df76d14284c705736ca73db8055d8de) ([#11489](https://github.com/yt-dlp/yt-dlp/issues/11489)) by [julionc](https://github.com/julionc)\n    - [Support podcast and feed pages](https://github.com/yt-dlp/yt-dlp/commit/c6737310619022248f5d0fd13872073cac168453) ([#10968](https://github.com/yt-dlp/yt-dlp/issues/10968)) by [subrat-lima](https://github.com/subrat-lima)\n- **youtube**\n    - [Player client maintenance](https://github.com/yt-dlp/yt-dlp/commit/637d62a3a9fc723d68632c1af25c30acdadeeb85) ([#11528](https://github.com/yt-dlp/yt-dlp/issues/11528)) by [bashonly](https://github.com/bashonly), [seproDev](https://github.com/seproDev)\n    - [Remove broken OAuth support](https://github.com/yt-dlp/yt-dlp/commit/52c0ffe40ad6e8404d93296f575007b05b04c686) ([#11558](https://github.com/yt-dlp/yt-dlp/issues/11558)) by [bashonly](https://github.com/bashonly)\n    - tab: [Fix podcasts tab extraction](https://github.com/yt-dlp/yt-dlp/commit/37cd7660eaff397c551ee18d80507702342b0c2b) ([#11567](https://github.com/yt-dlp/yt-dlp/issues/11567)) by [seproDev](https://github.com/seproDev)\n\n#### Misc. changes\n- **build**\n    - [Bump PyInstaller version pin to `>=6.11.1`](https://github.com/yt-dlp/yt-dlp/commit/f9c8deb4e5887ff5150e911ac0452e645f988044) ([#11507](https://github.com/yt-dlp/yt-dlp/issues/11507)) by [bashonly](https://github.com/bashonly)\n    - [Enable attestations for trusted publishing](https://github.com/yt-dlp/yt-dlp/commit/f13df591d4d7ca8e2f31b35c9c91e69ba9e9b013) ([#11420](https://github.com/yt-dlp/yt-dlp/issues/11420)) by [bashonly](https://github.com/bashonly)\n    - [Pin `websockets` version to >=13.0,<14](https://github.com/yt-dlp/yt-dlp/commit/240a7d43c8a67ffb86d44dc276805aa43c358dcc) ([#11488](https://github.com/yt-dlp/yt-dlp/issues/11488)) by [bashonly](https://github.com/bashonly)\n- **cleanup**\n    - [Deprecate more compat functions](https://github.com/yt-dlp/yt-dlp/commit/f95a92b3d0169a784ee15a138fbe09d82b2754a1) ([#11439](https://github.com/yt-dlp/yt-dlp/issues/11439)) by [seproDev](https://github.com/seproDev)\n    - [Remove dead extractors](https://github.com/yt-dlp/yt-dlp/commit/10fc719bc7f1eef469389c5219102266ef411f29) ([#11566](https://github.com/yt-dlp/yt-dlp/issues/11566)) by [doe1080](https://github.com/doe1080)\n    - Miscellaneous: [da252d9](https://github.com/yt-dlp/yt-dlp/commit/da252d9d322af3e2178ac5eae324809502a0a862) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K), [seproDev](https://github.com/seproDev)\n\n### 2024.11.04\n\n#### Important changes\n- **Beginning with this release, yt-dlp's Python dependencies *must* be installed using the `default` group**\nIf you're installing yt-dlp with pip/pipx or requiring yt-dlp in your own Python project, you'll need to specify `yt-dlp[default]` if you want to also install yt-dlp's optional dependencies (which were previously included by default). [Read more](https://github.com/yt-dlp/yt-dlp/pull/11255)\n- **The minimum *required* Python version has been raised to 3.9**\nPython 3.8 reached its end-of-life on 2024.10.07, and yt-dlp has now removed support for it. As an unfortunate side effect, the official `yt-dlp.exe` and `yt-dlp_x86.exe` binaries are no longer supported on Windows 7. [Read more](https://github.com/yt-dlp/yt-dlp/issues/10086)\n\n#### Core changes\n- [Allow thumbnails with `.jpe` extension](https://github.com/yt-dlp/yt-dlp/commit/5bc5fb2835ea59bdf326bd12176d74d2c7348a95) ([#11408](https://github.com/yt-dlp/yt-dlp/issues/11408)) by [bashonly](https://github.com/bashonly)\n- [Expand paths in `--plugin-dirs`](https://github.com/yt-dlp/yt-dlp/commit/914af9a0cf51c9a3f74aa88d952bee8334c67511) ([#11334](https://github.com/yt-dlp/yt-dlp/issues/11334)) by [bashonly](https://github.com/bashonly)\n- [Fix `--netrc` empty string parsing for Python <=3.10](https://github.com/yt-dlp/yt-dlp/commit/88402b714ec124633933737bc156b172a3dec3d6) ([#11414](https://github.com/yt-dlp/yt-dlp/issues/11414)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n- [Populate format sorting fields before dependent fields](https://github.com/yt-dlp/yt-dlp/commit/5c880ef42e9c2b2fc412f6d69dad37d34fb75a62) ([#11353](https://github.com/yt-dlp/yt-dlp/issues/11353)) by [Grub4K](https://github.com/Grub4K)\n- [Prioritize AV1](https://github.com/yt-dlp/yt-dlp/commit/3945677a75e94a1fecc085432d791e1c21220cd3) ([#11153](https://github.com/yt-dlp/yt-dlp/issues/11153)) by [seproDev](https://github.com/seproDev)\n- [Remove Python 3.8 support](https://github.com/yt-dlp/yt-dlp/commit/d784464399b600ba9516bbcec6286f11d68974dd) ([#11321](https://github.com/yt-dlp/yt-dlp/issues/11321)) by [bashonly](https://github.com/bashonly)\n- **aes**: [Fix GCM pad length calculation](https://github.com/yt-dlp/yt-dlp/commit/beae2db127d3b5017cbcf685da9de7a9ef496541) ([#11438](https://github.com/yt-dlp/yt-dlp/issues/11438)) by [seproDev](https://github.com/seproDev)\n- **cookies**: [Support chrome table version 24](https://github.com/yt-dlp/yt-dlp/commit/4613096f2e6eab9dcbac0e98b6cec760bbc99375) ([#11425](https://github.com/yt-dlp/yt-dlp/issues/11425)) by [kesor](https://github.com/kesor), [seproDev](https://github.com/seproDev)\n- **utils**\n    - [Allow partial application for more functions](https://github.com/yt-dlp/yt-dlp/commit/b6dc2c49e8793c6dfa21275e61caf49ec1148b81) ([#11391](https://github.com/yt-dlp/yt-dlp/issues/11391)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K) (With fixes in [422195e](https://github.com/yt-dlp/yt-dlp/commit/422195ec70a00b0d2002b238cacbae7790c57fdf) by [Grub4K](https://github.com/Grub4K))\n    - [Fix `find_element` by class](https://github.com/yt-dlp/yt-dlp/commit/f93c16395cea1fe9ffc3c594d3e019c3b214544c) ([#11402](https://github.com/yt-dlp/yt-dlp/issues/11402)) by [bashonly](https://github.com/bashonly)\n    - [Fix and improve `find_element` and `find_elements`](https://github.com/yt-dlp/yt-dlp/commit/b103aca24d35b72b405c340357dc01a0ed534281) ([#11443](https://github.com/yt-dlp/yt-dlp/issues/11443)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n\n#### Extractor changes\n- [Resolve `language` to ISO639-2 for ISM formats](https://github.com/yt-dlp/yt-dlp/commit/21cdcf03a237a0c4979c941d5a5385cae44c7906) ([#11359](https://github.com/yt-dlp/yt-dlp/issues/11359)) by [bashonly](https://github.com/bashonly)\n- **ardmediathek**: [Extract chapters](https://github.com/yt-dlp/yt-dlp/commit/59f8dd8239c31f00b708da53b39b1e2e9409b6e6) ([#11442](https://github.com/yt-dlp/yt-dlp/issues/11442)) by [iw0nderhow](https://github.com/iw0nderhow)\n- **bfmtv**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/754940e9a558565d6bd3c0c529802569b1d0ae4e) ([#11444](https://github.com/yt-dlp/yt-dlp/issues/11444)) by [seproDev](https://github.com/seproDev)\n- **bluesky**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/5c7a5aaab27e9c3cb367b663a6136ca58866e547) ([#11055](https://github.com/yt-dlp/yt-dlp/issues/11055)) by [MellowKyler](https://github.com/MellowKyler), [seproDev](https://github.com/seproDev)\n- **ccma**: [Support new 3cat.cat domain](https://github.com/yt-dlp/yt-dlp/commit/330335386d4f7603d92d6796798375336005275e) ([#11222](https://github.com/yt-dlp/yt-dlp/issues/11222)) by [JoseAngelB](https://github.com/JoseAngelB)\n- **chzzk**: video: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/9c6534da81e485b2325b3489ee4128943e6d3e4b) ([#11228](https://github.com/yt-dlp/yt-dlp/issues/11228)) by [hui1601](https://github.com/hui1601)\n- **cnn**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/9acf79c91a8c6c55ca972747c6858e784e2da351) ([#10185](https://github.com/yt-dlp/yt-dlp/issues/10185)) by [kylegustavo](https://github.com/kylegustavo), [seproDev](https://github.com/seproDev)\n- **dailymotion**\n    - [Improve embed extraction](https://github.com/yt-dlp/yt-dlp/commit/a403dcf9be20b49cbb3017328f4aaa352fb6d685) ([#10843](https://github.com/yt-dlp/yt-dlp/issues/10843)) by [bashonly](https://github.com/bashonly), [pzhlkj6612](https://github.com/pzhlkj6612)\n    - [Support shortened URLs](https://github.com/yt-dlp/yt-dlp/commit/d1358231371f20fa23020fa9176be3b56119873e) ([#11374](https://github.com/yt-dlp/yt-dlp/issues/11374)) by [bashonly](https://github.com/bashonly), [seproDev](https://github.com/seproDev)\n- **facebook**: [Fix formats extraction](https://github.com/yt-dlp/yt-dlp/commit/ec9b25043f399de6a591d8370d32bf0e66c117f2) ([#11343](https://github.com/yt-dlp/yt-dlp/issues/11343)) by [kclauhk](https://github.com/kclauhk)\n- **generic**: [Do not impersonate by default](https://github.com/yt-dlp/yt-dlp/commit/c29f5a7fae93a08f3cfbb6127b2faa75145b06a0) ([#11336](https://github.com/yt-dlp/yt-dlp/issues/11336)) by [bashonly](https://github.com/bashonly)\n- **nfl**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/838f4385de8300a4dd4e7ffbbf0e5b7b85fb52c2) ([#11409](https://github.com/yt-dlp/yt-dlp/issues/11409)) by [bashonly](https://github.com/bashonly)\n- **niconicouser**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/6abef74232c0fc695cd803c18ae446cacb129389) ([#11324](https://github.com/yt-dlp/yt-dlp/issues/11324)) by [Wesley107772](https://github.com/Wesley107772)\n- **soundcloud**: [Extract artists](https://github.com/yt-dlp/yt-dlp/commit/f101e5d34c97c608156ad5396714c2a2edca966a) ([#11377](https://github.com/yt-dlp/yt-dlp/issues/11377)) by [seproDev](https://github.com/seproDev)\n- **tumblr**: [Support more URLs](https://github.com/yt-dlp/yt-dlp/commit/b03267bf0675eeb8df5baf1daac7cf67840c91a5) ([#6057](https://github.com/yt-dlp/yt-dlp/issues/6057)) by [selfisekai](https://github.com/selfisekai), [seproDev](https://github.com/seproDev)\n- **twitter**: [Remove cookies migration workaround](https://github.com/yt-dlp/yt-dlp/commit/76802f461332d444e596437c42374fa237fa5174) ([#11392](https://github.com/yt-dlp/yt-dlp/issues/11392)) by [bashonly](https://github.com/bashonly)\n- **vimeo**: [Fix API retries](https://github.com/yt-dlp/yt-dlp/commit/57212a5f97ce367590aaa5c3e9a135eead8f81f7) ([#11351](https://github.com/yt-dlp/yt-dlp/issues/11351)) by [bashonly](https://github.com/bashonly)\n- **yle_areena**: [Support live events](https://github.com/yt-dlp/yt-dlp/commit/a6783a3b9905e547f6c1d4df9d7c7999feda8afa) ([#11358](https://github.com/yt-dlp/yt-dlp/issues/11358)) by [bashonly](https://github.com/bashonly), [CounterPillow](https://github.com/CounterPillow)\n- **youtube**: [Adjust OAuth refresh token handling](https://github.com/yt-dlp/yt-dlp/commit/d569a8845254d90ce13ad74ae76695e8d6441068) ([#11414](https://github.com/yt-dlp/yt-dlp/issues/11414)) by [bashonly](https://github.com/bashonly)\n\n#### Misc. changes\n- **build**\n    - [Disable attestations for trusted publishing](https://github.com/yt-dlp/yt-dlp/commit/428ffb75aa3534b275cf54de42693a4d261519da) ([#11418](https://github.com/yt-dlp/yt-dlp/issues/11418)) by [bashonly](https://github.com/bashonly)\n    - [Move optional dependencies to the `default` group](https://github.com/yt-dlp/yt-dlp/commit/87884f15580910e4e0fe0e1db73508debc657471) ([#11255](https://github.com/yt-dlp/yt-dlp/issues/11255)) by [bashonly](https://github.com/bashonly)\n    - [Use Ubuntu 20.04 and Python 3.9 for Linux ARM builds](https://github.com/yt-dlp/yt-dlp/commit/dd2e24446954246a2ec4d4a7e95531f52a14b351) ([#8638](https://github.com/yt-dlp/yt-dlp/issues/8638)) by [bashonly](https://github.com/bashonly)\n- **cleanup**\n    - Miscellaneous\n        - [ea9e35d](https://github.com/yt-dlp/yt-dlp/commit/ea9e35d85fba5eab341cdcaf1eaed69b57f7e465) by [bashonly](https://github.com/bashonly)\n        - [c998238](https://github.com/yt-dlp/yt-dlp/commit/c998238c2e76c62d1d29962c6e8ebe916cc7913b) by [bashonly](https://github.com/bashonly), [KBelmin](https://github.com/KBelmin)\n        - [197d0b0](https://github.com/yt-dlp/yt-dlp/commit/197d0b03b6a3c8fe4fa5ace630eeffec629bf72c) by [avagordon01](https://github.com/avagordon01), [bashonly](https://github.com/bashonly), [grqz](https://github.com/grqz), [Grub4K](https://github.com/Grub4K), [seproDev](https://github.com/seproDev)\n- **devscripts**: `make_changelog`: [Parse full commit message for fixes](https://github.com/yt-dlp/yt-dlp/commit/0a3991edae0e10f2ea41ece9fdea5e48f789f1de) ([#11366](https://github.com/yt-dlp/yt-dlp/issues/11366)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n\n### 2024.10.22\n\n#### Important changes\n- **Following this release, yt-dlp's Python dependencies *must* be installed using the `default` group**\nIf you're installing yt-dlp with pip/pipx or requiring yt-dlp in your own Python project, you'll need to specify `yt-dlp[default]` if you want to also install yt-dlp's optional dependencies (which were previously included by default). [Read more](https://github.com/yt-dlp/yt-dlp/pull/11255)\n- **py2exe is no longer supported**\nThis release's `yt-dlp_min.exe` will be the last, and it's actually a PyInstaller-bundled executable so that yt-dlp users updating their py2exe build with `-U` will be automatically migrated. [Read more](https://github.com/yt-dlp/yt-dlp/issues/10087)\n\n#### Core changes\n- [Add extractor helpers](https://github.com/yt-dlp/yt-dlp/commit/d710a6ca7c622705c0c8c8a3615916f531137d5d) ([#10653](https://github.com/yt-dlp/yt-dlp/issues/10653)) by [Grub4K](https://github.com/Grub4K)\n- [Add option `--plugin-dirs`](https://github.com/yt-dlp/yt-dlp/commit/0f593dca9fa995d88eb763170a932da61c8f24dc) ([#11277](https://github.com/yt-dlp/yt-dlp/issues/11277)) by [coletdjnz](https://github.com/coletdjnz), [imranh2](https://github.com/imranh2)\n- **cookies**: [Fix compatibility for Python <=3.9 in traceback](https://github.com/yt-dlp/yt-dlp/commit/c5f0f58efd8c3930de8202c15a5c53b1b635bd51) by [Grub4K](https://github.com/Grub4K)\n- **utils**\n    - `Popen`: [Reset PyInstaller environment](https://github.com/yt-dlp/yt-dlp/commit/fbc66e3ab35743cc847a21223c67d88bb463cd9c) ([#11258](https://github.com/yt-dlp/yt-dlp/issues/11258)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n    - `sanitize_path`: [Reimplement function](https://github.com/yt-dlp/yt-dlp/commit/85b87c991af25dcb35630fa94580fd418e78ee33) ([#11198](https://github.com/yt-dlp/yt-dlp/issues/11198)) by [Grub4K](https://github.com/Grub4K)\n\n#### Extractor changes\n- **adobepass**: [Use newer user-agent for provider redirect request](https://github.com/yt-dlp/yt-dlp/commit/dcfeea4dd5e5686821350baa6c7767a011944867) ([#11250](https://github.com/yt-dlp/yt-dlp/issues/11250)) by [bashonly](https://github.com/bashonly)\n- **afreecatv**: [Adapt extractors to new sooplive.co.kr domain](https://github.com/yt-dlp/yt-dlp/commit/46fe60ff19395698a87113b2944453779e04ab9d) ([#11266](https://github.com/yt-dlp/yt-dlp/issues/11266)) by [63427083](https://github.com/63427083), [bashonly](https://github.com/bashonly)\n- **cda**: [Support folders](https://github.com/yt-dlp/yt-dlp/commit/c4d95f67ddc522297bb1fea875255cf94b34d595) ([#10786](https://github.com/yt-dlp/yt-dlp/issues/10786)) by [pktiuk](https://github.com/pktiuk)\n- **cwtv**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/9d43dcb2c5c38f443f84dfc126cd32720e1a1ad6) ([#11230](https://github.com/yt-dlp/yt-dlp/issues/11230)) by [bashonly](https://github.com/bashonly)\n- **drtv**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/f4338714241b11d9d43768ae71a25f5e952f677d) ([#11141](https://github.com/yt-dlp/yt-dlp/issues/11141)) by [444995](https://github.com/444995)\n- **funk**: [Extend `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/8de431ec97a4b62b73df8f686b6e21e462775336) ([#11269](https://github.com/yt-dlp/yt-dlp/issues/11269)) by [seproDev](https://github.com/seproDev)\n- **gem.cbc.ca**: [Fix formats extraction](https://github.com/yt-dlp/yt-dlp/commit/40054cb4a7ebbea30d335d444e6f58b298a3baa0) ([#11196](https://github.com/yt-dlp/yt-dlp/issues/11196)) by [DavidSkrundz](https://github.com/DavidSkrundz)\n- **generic**: [Impersonate browser by default](https://github.com/yt-dlp/yt-dlp/commit/edfd095b1917701c5046bd51f9542897c17d41a7) ([#11206](https://github.com/yt-dlp/yt-dlp/issues/11206)) by [Grub4K](https://github.com/Grub4K)\n- **imgur**\n    - [Fix thumbnail extraction](https://github.com/yt-dlp/yt-dlp/commit/87408ccfd772ddf31a8323d8151c24f9577cbc9f) ([#11298](https://github.com/yt-dlp/yt-dlp/issues/11298)) by [seproDev](https://github.com/seproDev)\n    - [Support new URL format](https://github.com/yt-dlp/yt-dlp/commit/5af774d7a36c00bea618c7047c9326532cd3f616) ([#11075](https://github.com/yt-dlp/yt-dlp/issues/11075)) by [Deer-Spangle](https://github.com/Deer-Spangle)\n- **patreon**: campaign: [Stricter URL matching](https://github.com/yt-dlp/yt-dlp/commit/babb70960595e2146f06f81affc29c7e713e34e2) ([#11235](https://github.com/yt-dlp/yt-dlp/issues/11235)) by [bashonly](https://github.com/bashonly)\n- **reddit**: [Detect and raise when login is required](https://github.com/yt-dlp/yt-dlp/commit/cba7868502f04175fecf9ab3e363296aee7ebec2) ([#11202](https://github.com/yt-dlp/yt-dlp/issues/11202)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **substack**: [Resolve podcast file extensions](https://github.com/yt-dlp/yt-dlp/commit/3148c1822f66533998278f0a1cf842b9bea1526a) ([#11275](https://github.com/yt-dlp/yt-dlp/issues/11275)) by [bashonly](https://github.com/bashonly)\n- **telecinco**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/0b7ec08816fb196cd41d392f8331b4eb8366c4f8) ([#11142](https://github.com/yt-dlp/yt-dlp/issues/11142)) by [bashonly](https://github.com/bashonly), [DarkZeros](https://github.com/DarkZeros)\n- **tubitv**: [Strip extra whitespace from titles](https://github.com/yt-dlp/yt-dlp/commit/e68b4c19af122876561a41f2dd8093fae7b417c7) ([#10795](https://github.com/yt-dlp/yt-dlp/issues/10795)) by [allendema](https://github.com/allendema)\n- **tver**: [Support series URLs](https://github.com/yt-dlp/yt-dlp/commit/ceaea731b6e314dbbdfb2e358d7677785ed0b4fc) ([#9507](https://github.com/yt-dlp/yt-dlp/issues/9507)) by [pzhlkj6612](https://github.com/pzhlkj6612), [vvto33](https://github.com/vvto33)\n- **twitter**: spaces: [Allow extraction when not logged in](https://github.com/yt-dlp/yt-dlp/commit/679c68240a26481ea7c07cc0c014745631ea8481) ([#11289](https://github.com/yt-dlp/yt-dlp/issues/11289)) by [rubyevadestaxes](https://github.com/rubyevadestaxes)\n- **weverse**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/5310fa87f6cb7f66bf42e2520878952fbf6b1652) ([#11215](https://github.com/yt-dlp/yt-dlp/issues/11215)) by [bashonly](https://github.com/bashonly)\n- **youtube**\n    - [Fix `comment_count` extraction](https://github.com/yt-dlp/yt-dlp/commit/7af1ddaaf2a6a0a750373a9ab53c7770af4f9fe4) ([#11274](https://github.com/yt-dlp/yt-dlp/issues/11274)) by [bashonly](https://github.com/bashonly)\n    - [Remove broken `android_producer` client](https://github.com/yt-dlp/yt-dlp/commit/fed53d70bdb7d3e37ef63dd7fcf0ef74356167fd) ([#11297](https://github.com/yt-dlp/yt-dlp/issues/11297)) by [bashonly](https://github.com/bashonly)\n    - [Remove broken age-restriction workaround](https://github.com/yt-dlp/yt-dlp/commit/ec2f4bf0823a13043f98f5bd0bf6677837bf09dc) ([#11297](https://github.com/yt-dlp/yt-dlp/issues/11297)) by [bashonly](https://github.com/bashonly)\n    - [Support logging in with OAuth](https://github.com/yt-dlp/yt-dlp/commit/b8635c1d4779da195e71aa281f73aaad702c935e) ([#11001](https://github.com/yt-dlp/yt-dlp/issues/11001)) by [coletdjnz](https://github.com/coletdjnz)\n\n#### Misc. changes\n- **build**\n    - [Migrate `py2exe` builds to `win_exe`](https://github.com/yt-dlp/yt-dlp/commit/a886cf3e900f4a2ec00af705f883539269545609) ([#11256](https://github.com/yt-dlp/yt-dlp/issues/11256)) by [bashonly](https://github.com/bashonly)\n    - [Use `macos-13` image for macOS builds](https://github.com/yt-dlp/yt-dlp/commit/64d84d75ca8c19ec06558cc7c511f5f4f7a822bc) ([#11236](https://github.com/yt-dlp/yt-dlp/issues/11236)) by [bashonly](https://github.com/bashonly)\n    - `make_lazy_extractors`: [Force running without plugins](https://github.com/yt-dlp/yt-dlp/commit/1a830394a21a81a3e9918f9e175abc9fbb21f089) ([#11205](https://github.com/yt-dlp/yt-dlp/issues/11205)) by [Grub4K](https://github.com/Grub4K)\n- **cleanup**: Miscellaneous: [67adeb7](https://github.com/yt-dlp/yt-dlp/commit/67adeb7bab00662ba55d473e405b301abb42fe61) by [bashonly](https://github.com/bashonly), [DTrombett](https://github.com/DTrombett), [grqz](https://github.com/grqz), [Grub4K](https://github.com/Grub4K), [KarboniteKream](https://github.com/KarboniteKream), [mikkovedru](https://github.com/mikkovedru), [seproDev](https://github.com/seproDev)\n- **test**: [Allow running tests explicitly](https://github.com/yt-dlp/yt-dlp/commit/16eb28026a2ddf5608d0a628ef15949b8d3805a9) ([#11203](https://github.com/yt-dlp/yt-dlp/issues/11203)) by [Grub4K](https://github.com/Grub4K)\n\n### 2024.10.07\n\n#### Core changes\n- **cookies**: [Fix cookie load error handling](https://github.com/yt-dlp/yt-dlp/commit/e59c82a74cda5139eb3928c75b0bd45484dbe7f0) ([#11140](https://github.com/yt-dlp/yt-dlp/issues/11140)) by [Grub4K](https://github.com/Grub4K)\n\n#### Extractor changes\n- **applepodcasts**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/6328e2e67a4e126e08af382e6a387073082d5c5f) ([#10903](https://github.com/yt-dlp/yt-dlp/issues/10903)) by [coreywright](https://github.com/coreywright)\n- **cwtv**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/4b7bec66d8100978b82bb24110ed44e2a7749931) ([#11135](https://github.com/yt-dlp/yt-dlp/issues/11135)) by [kclauhk](https://github.com/kclauhk)\n- **instagram**\n    - [Do not hardcode user-agent](https://github.com/yt-dlp/yt-dlp/commit/079a7bc334281d3c13d347770ae5f9f2b7da471a) ([#11155](https://github.com/yt-dlp/yt-dlp/issues/11155)) by [poyhen](https://github.com/poyhen)\n    - [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/cf85cba5d9496bd2689e1070005b4d1b4cd3dc6d) ([#11156](https://github.com/yt-dlp/yt-dlp/issues/11156)) by [tetra-fox](https://github.com/tetra-fox)\n- **noodlemagazine**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/ccb23e1bac9768d1c70535beb744e668ed4a2720) ([#11144](https://github.com/yt-dlp/yt-dlp/issues/11144)) by [BallzCrasher](https://github.com/BallzCrasher)\n- **patreon**: [Extract all m3u8 formats for locked posts](https://github.com/yt-dlp/yt-dlp/commit/f91645aceaf13926cf35be2c1dfef61b3aab97fb) ([#11138](https://github.com/yt-dlp/yt-dlp/issues/11138)) by [bashonly](https://github.com/bashonly)\n- **youtube**: [Change default player clients to `ios,mweb`](https://github.com/yt-dlp/yt-dlp/commit/de2062753a188060d76f587e45becce61fe399f9) ([#11190](https://github.com/yt-dlp/yt-dlp/issues/11190)) by [seproDev](https://github.com/seproDev)\n\n#### Postprocessor changes\n- **xattrmetadata**: [Try to write each attribute](https://github.com/yt-dlp/yt-dlp/commit/3a193346eeb27ac2959ff30c370adb899ec94732) ([#11115](https://github.com/yt-dlp/yt-dlp/issues/11115)) by [eric321](https://github.com/eric321)\n\n#### Misc. changes\n- **ci**: [Rerun failed tests](https://github.com/yt-dlp/yt-dlp/commit/b31b81d85f00601710d4fac590c3e4efb4133283) ([#11143](https://github.com/yt-dlp/yt-dlp/issues/11143)) by [Grub4K](https://github.com/Grub4K)\n- **cleanup**: Miscellaneous: [1a176d8](https://github.com/yt-dlp/yt-dlp/commit/1a176d874e6772cd898ce507379ea388e96ee3f7) by [bashonly](https://github.com/bashonly)\n\n### 2024.09.27\n\n#### Important changes\n- **The minimum *recommended* Python version has been raised to 3.9**\nSince Python 3.8 will reach end-of-life in October 2024, support for it will be dropped soon. [Read more](https://github.com/yt-dlp/yt-dlp/issues/10086)\n\n#### Core changes\n- [Allow `none` arg to negate `--convert-subs` and `--convert-thumbnails`](https://github.com/yt-dlp/yt-dlp/commit/c08e0b20b5edd8957b8318716bc14e896d1b96f4) ([#11066](https://github.com/yt-dlp/yt-dlp/issues/11066)) by [kieraneglin](https://github.com/kieraneglin)\n- [Fix format sorting bug with vp9.2 vcodec](https://github.com/yt-dlp/yt-dlp/commit/8f4ea14680c7865d8ffac10a9174205d1d84ada7) ([#10884](https://github.com/yt-dlp/yt-dlp/issues/10884)) by [rakslice](https://github.com/rakslice)\n- [Raise minimum recommended Python version to 3.9](https://github.com/yt-dlp/yt-dlp/commit/cca534cd9e6850c70244f225a4a1895ef4bcdbec) ([#11098](https://github.com/yt-dlp/yt-dlp/issues/11098)) by [bashonly](https://github.com/bashonly)\n- **cookies**: [Improve error message for Windows `--cookies-from-browser chrome` issue](https://github.com/yt-dlp/yt-dlp/commit/b397a64691421ace5df09457c2a764821a2dc6f2) ([#11090](https://github.com/yt-dlp/yt-dlp/issues/11090)) by [seproDev](https://github.com/seproDev)\n- **utils**: `mimetype2ext`: [Recognize `aacp` as `aac`](https://github.com/yt-dlp/yt-dlp/commit/cc85596d5b59f0c14e9381b3675f619c1e12e597) ([#10860](https://github.com/yt-dlp/yt-dlp/issues/10860)) by [bashonly](https://github.com/bashonly)\n\n#### Extractor changes\n- [Fix JW Player format parsing](https://github.com/yt-dlp/yt-dlp/commit/409f8e9e3b4bde81ef76fc563256f876d2ff8099) ([#10956](https://github.com/yt-dlp/yt-dlp/issues/10956)) by [seproDev](https://github.com/seproDev)\n- [Handle decode errors when reading responses](https://github.com/yt-dlp/yt-dlp/commit/325001317d97f4545d66fac44c4ba772c6f45f22) ([#10868](https://github.com/yt-dlp/yt-dlp/issues/10868)) by [bashonly](https://github.com/bashonly)\n- **abc.net.au**: iview, showseries: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/7f909046f4dc0fba472b4963145aef6e0d42491b) ([#11101](https://github.com/yt-dlp/yt-dlp/issues/11101)) by [bashonly](https://github.com/bashonly)\n- **adn**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/cc88a54bb1ef285154775f8a6a413335ce4c71ce) ([#10749](https://github.com/yt-dlp/yt-dlp/issues/10749)) by [infanf](https://github.com/infanf)\n- **asobistage**: [Support redirected URLs](https://github.com/yt-dlp/yt-dlp/commit/a7d3235c84dac57a127cbe0ff38f7f7c2fdd8fa0) ([#10768](https://github.com/yt-dlp/yt-dlp/issues/10768)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **bandcamp**: user: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/5d0176547f16a3642cd71627126e9dfc24981e20) ([#10328](https://github.com/yt-dlp/yt-dlp/issues/10328)) by [bashonly](https://github.com/bashonly), [quad](https://github.com/quad)\n- **beacon**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/b4760c778d0c92c6e3f2bc8346cd72c8f08595ae) ([#9901](https://github.com/yt-dlp/yt-dlp/issues/9901)) by [Deukhoofd](https://github.com/Deukhoofd)\n- **bilibili**\n    - [Fix chapters and subtitles extraction](https://github.com/yt-dlp/yt-dlp/commit/a2000bc85730c950351d78bb818493dc39dca3cb) ([#11099](https://github.com/yt-dlp/yt-dlp/issues/11099)) by [bashonly](https://github.com/bashonly)\n    - [Fix festival URL support](https://github.com/yt-dlp/yt-dlp/commit/b43bd864851f2862e26caa85461c5d825d49d463) ([#10740](https://github.com/yt-dlp/yt-dlp/issues/10740)) by [bashonly](https://github.com/bashonly), [grqz](https://github.com/grqz)\n- **biliintl**: [Fix referer header](https://github.com/yt-dlp/yt-dlp/commit/a06bb586795ebab87a2356923acfc674d6f0e152) ([#11003](https://github.com/yt-dlp/yt-dlp/issues/11003)) by [Khaoklong51](https://github.com/Khaoklong51)\n- **dropbox**: [Fix password-protected video support](https://github.com/yt-dlp/yt-dlp/commit/63da31b3b29af90062d8a72a905ffe4b5e499042) ([#10735](https://github.com/yt-dlp/yt-dlp/issues/10735)) by [ndyanx](https://github.com/ndyanx)\n- **ertgr**: [Fix video extraction](https://github.com/yt-dlp/yt-dlp/commit/416686ed0cf792ec44ab059f3b229dd776077e14) ([#11091](https://github.com/yt-dlp/yt-dlp/issues/11091)) by [seproDev](https://github.com/seproDev)\n- **eurosport**: [Support local URL variants](https://github.com/yt-dlp/yt-dlp/commit/f0bb28504c8c2b75ee3e5796aed50de2a7f90a1b) ([#10785](https://github.com/yt-dlp/yt-dlp/issues/10785)) by [seproDev](https://github.com/seproDev)\n- **facebook**\n    - ads: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/d62fef7e07d454c0d2ba2d69fb96d691dba1ded0) ([#10704](https://github.com/yt-dlp/yt-dlp/issues/10704)) by [kclauhk](https://github.com/kclauhk)\n    - reel: [Improve metadata extraction](https://github.com/yt-dlp/yt-dlp/commit/0e1b941c6b2caa688b0d3332e723d16dbafa4311) by [lengzuo](https://github.com/lengzuo)\n- **germanupa**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/124f058b546d652a359c67025bb479789bfbef0b) ([#10538](https://github.com/yt-dlp/yt-dlp/issues/10538)) by [grqz](https://github.com/grqz)\n- **hgtvde**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/a555389c9bb32e589e00b4664974423fb7b04dcd) ([#10992](https://github.com/yt-dlp/yt-dlp/issues/10992)) by [bashonly](https://github.com/bashonly), [rdamas](https://github.com/rdamas)\n- **huya**: video: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/25c1cdaa2650563494d3bf00a38f72d0d9486bff) ([#10686](https://github.com/yt-dlp/yt-dlp/issues/10686)) by [hugepower](https://github.com/hugepower)\n- **iprima**: [Fix zoom URL support](https://github.com/yt-dlp/yt-dlp/commit/4a27b8f092f7f7c10b7a334d3535c97c2af02f0a) ([#10959](https://github.com/yt-dlp/yt-dlp/issues/10959)) by [otovalek](https://github.com/otovalek)\n- **khanacademy**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/0fba08485b6445b72b5b63ae23ca2a73fa5d967f) ([#10913](https://github.com/yt-dlp/yt-dlp/issues/10913)) by [seproDev](https://github.com/seproDev)\n- **kick**\n    - clips: [Support new URL format](https://github.com/yt-dlp/yt-dlp/commit/0aa4426e9a35f7f8e184f1f2082b3b313c1448f7) ([#11107](https://github.com/yt-dlp/yt-dlp/issues/11107)) by [bashonly](https://github.com/bashonly)\n    - vod: [Support new URL format](https://github.com/yt-dlp/yt-dlp/commit/173d54c151b987409e3eb09552d8d89ed8fc50f7) ([#10988](https://github.com/yt-dlp/yt-dlp/issues/10988)) by [bashonly](https://github.com/bashonly), [grqz](https://github.com/grqz)\n- **kika**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/e6f48ca80821939c1fd11ec2a0cdbf2fba9b258a) ([#5788](https://github.com/yt-dlp/yt-dlp/issues/5788)) by [1100101](https://github.com/1100101)\n- **lnkgo**: [Remove extractor](https://github.com/yt-dlp/yt-dlp/commit/fa83d0b36bc43d30fe9241c1e923f4614864b758) ([#10904](https://github.com/yt-dlp/yt-dlp/issues/10904)) by [naglis](https://github.com/naglis)\n- **loom**: [Fix m3u8 formats extraction](https://github.com/yt-dlp/yt-dlp/commit/7509d692b37a7ec6230ea75bfe1e44a8de5eefce) ([#10760](https://github.com/yt-dlp/yt-dlp/issues/10760)) by [kclauhk](https://github.com/kclauhk)\n- **mediaklikk**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/e2b3634e299be9c16a247ece3b1858d83889c324) ([#11083](https://github.com/yt-dlp/yt-dlp/issues/11083)) by [szantnerb](https://github.com/szantnerb)\n- **mojevideo**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/28b0ecba2af5b4919f198474b3d00a76ef322c31) ([#11019](https://github.com/yt-dlp/yt-dlp/issues/11019)) by [04-pasha-04](https://github.com/04-pasha-04), [pzhlkj6612](https://github.com/pzhlkj6612)\n- **niconico**: [Fix m3u8 formats extraction](https://github.com/yt-dlp/yt-dlp/commit/eabb4680fdb09ba1f48d174a700a2e3b43f82add) ([#11103](https://github.com/yt-dlp/yt-dlp/issues/11103)) by [bashonly](https://github.com/bashonly)\n- **nzz**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/4a9bc8c3630378bc29f0266126b503f6190c0430) ([#10461](https://github.com/yt-dlp/yt-dlp/issues/10461)) by [1-Byte](https://github.com/1-Byte)\n- **patreoncampaign**: [Support API URLs](https://github.com/yt-dlp/yt-dlp/commit/232e6db30c474d1b387e405342f34173ceeaf832) ([#10734](https://github.com/yt-dlp/yt-dlp/issues/10734)) by [bashonly](https://github.com/bashonly), [hibes](https://github.com/hibes)\n- **pinterest**: [Extend `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/c8c078fe28b0ffc15ef9646346c00c592fe71a78) ([#10867](https://github.com/yt-dlp/yt-dlp/issues/10867)) by [bashonly](https://github.com/bashonly), [sahilsinghss73](https://github.com/sahilsinghss73)\n- **radiko**: [Extract unique `id` values](https://github.com/yt-dlp/yt-dlp/commit/c8d096c5ce111411fbdbe2abb8fed54f317a6182) ([#10726](https://github.com/yt-dlp/yt-dlp/issues/10726)) by [garret1317](https://github.com/garret1317)\n- **rtp**: [Support more subpages](https://github.com/yt-dlp/yt-dlp/commit/d02df303d8e49390599db9f34482697e4d1cf5b2) ([#10787](https://github.com/yt-dlp/yt-dlp/issues/10787)) by [Demon000](https://github.com/Demon000)\n- **rumblechannel**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/ad0b857f459a6d390fbf124183916218c52f223a) ([#11049](https://github.com/yt-dlp/yt-dlp/issues/11049)) by [tony-hn](https://github.com/tony-hn)\n- **rutube**: [Support livestreams](https://github.com/yt-dlp/yt-dlp/commit/41be32e78c3845000dbac188ffb90ea3ea7c4dfa) ([#10844](https://github.com/yt-dlp/yt-dlp/issues/10844)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **samplefocus**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/46f4c80bc363ee8116c33d37f65202e6c3470954) ([#10947](https://github.com/yt-dlp/yt-dlp/issues/10947)) by [seproDev](https://github.com/seproDev)\n- **screenrec**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/36f9e602ad55679764bc75a4f67f7562b1d6adcf) ([#10917](https://github.com/yt-dlp/yt-dlp/issues/10917)) by [naglis](https://github.com/naglis)\n- **sen**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/41a241ca6ffb95b3d9aaf4f42106ca8cba9af1a6) ([#10952](https://github.com/yt-dlp/yt-dlp/issues/10952)) by [seproDev](https://github.com/seproDev)\n- **servus**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/300c91274f7ea5b1b0528fc5ee11cf1a61d4079e) ([#10944](https://github.com/yt-dlp/yt-dlp/issues/10944)) by [seproDev](https://github.com/seproDev)\n- **snapchatspotlight**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/b37417e4f934fd8909788b493d017777155b0ae5) ([#11030](https://github.com/yt-dlp/yt-dlp/issues/11030)) by [seproDev](https://github.com/seproDev)\n- **svtpage**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/5a8a05aebb49693e78e1123015837ed5e961ff76) ([#11010](https://github.com/yt-dlp/yt-dlp/issues/11010)) by [diman8](https://github.com/diman8)\n- **tenplay**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/d8d473002b654ab0e7b97ead869f58b4361eeae1) ([#10928](https://github.com/yt-dlp/yt-dlp/issues/10928)) by [aarubui](https://github.com/aarubui)\n- **tiktok**: [Fix web formats extraction](https://github.com/yt-dlp/yt-dlp/commit/3ad0b7f422d547204df687b6d0b2d9110fff3990) ([#11074](https://github.com/yt-dlp/yt-dlp/issues/11074)) by [bashonly](https://github.com/bashonly)\n- **twitter**: spaces: [Support video spaces](https://github.com/yt-dlp/yt-dlp/commit/bef1d4d6fc9493fda7f75e2289c07c507d10092f) ([#10789](https://github.com/yt-dlp/yt-dlp/issues/10789)) by [bashonly](https://github.com/bashonly)\n- **vidflex**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/e978c312d6550a6ae4c9df18001afb1b420cb72f) ([#10002](https://github.com/yt-dlp/yt-dlp/issues/10002)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **vimeo**\n    - [Always try to extract original format](https://github.com/yt-dlp/yt-dlp/commit/4115c24d157c5b5f63089d75c4e0f51d1f8b4489) ([#10721](https://github.com/yt-dlp/yt-dlp/issues/10721)) by [bashonly](https://github.com/bashonly) (With fixes in [e8e6a98](https://github.com/yt-dlp/yt-dlp/commit/e8e6a982a1b659eed434d225d7922f632bac6568) by [seproDev](https://github.com/seproDev))\n    - [Fix HLS audio format sorting](https://github.com/yt-dlp/yt-dlp/commit/a1b4ac2b8ed8e6eaa56044d439f1e0d00c2ba218) ([#11082](https://github.com/yt-dlp/yt-dlp/issues/11082)) by [fireattack](https://github.com/fireattack)\n- **watchespn**: [Improve auth support](https://github.com/yt-dlp/yt-dlp/commit/7adff8caf152dcf96d03aff69ed8545c0a63567c) ([#10910](https://github.com/yt-dlp/yt-dlp/issues/10910)) by [ischmidt20](https://github.com/ischmidt20)\n- **wistia**: [Support password-protected videos](https://github.com/yt-dlp/yt-dlp/commit/9f5c9a90898c5a1e672922d9cd799716c73cee34) ([#11100](https://github.com/yt-dlp/yt-dlp/issues/11100)) by [bashonly](https://github.com/bashonly)\n- **ximalaya**: [Add VIP support](https://github.com/yt-dlp/yt-dlp/commit/3dfd720d098b4d49d69cfc77e6376f22bcd90934) ([#10832](https://github.com/yt-dlp/yt-dlp/issues/10832)) by [seproDev](https://github.com/seproDev), [xingchensong](https://github.com/xingchensong)\n- **xinpianchang**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/3aa0156e05662923d130ddbc1c82596e38c01a00) ([#10950](https://github.com/yt-dlp/yt-dlp/issues/10950)) by [seproDev](https://github.com/seproDev)\n- **yleareena**: [Support podcasts](https://github.com/yt-dlp/yt-dlp/commit/48d629d461e05b1b19f5e53dc959bb9ebe95da42) ([#11104](https://github.com/yt-dlp/yt-dlp/issues/11104)) by [bashonly](https://github.com/bashonly)\n- **youtube**\n    - [Add `po_token`, `visitor_data`, `data_sync_id` extractor args](https://github.com/yt-dlp/yt-dlp/commit/3a3bd00037e9908e87da4fa9f2ad772aa34dc60e) ([#10648](https://github.com/yt-dlp/yt-dlp/issues/10648)) by [bashonly](https://github.com/bashonly), [coletdjnz](https://github.com/coletdjnz), [seproDev](https://github.com/seproDev) (With fixes in [fa2be9a](https://github.com/yt-dlp/yt-dlp/commit/fa2be9a7c63babede07480151363e54eee5702bd) by [bashonly](https://github.com/bashonly))\n    - [Support excluding `player_client`s in extractor-arg](https://github.com/yt-dlp/yt-dlp/commit/49f3741a820ed142f6866317c2e7d247b130960e) ([#10710](https://github.com/yt-dlp/yt-dlp/issues/10710)) by [bashonly](https://github.com/bashonly)\n    - clip: [Prioritize `https` formats](https://github.com/yt-dlp/yt-dlp/commit/1d84b780cf33a1d84756825ac23f990a905703df) ([#11102](https://github.com/yt-dlp/yt-dlp/issues/11102)) by [bashonly](https://github.com/bashonly)\n    - tab: [Fix shorts tab extraction](https://github.com/yt-dlp/yt-dlp/commit/9431777b4c37129a6093080c77ca59960afbb9d7) ([#10938](https://github.com/yt-dlp/yt-dlp/issues/10938)) by [seproDev](https://github.com/seproDev)\n\n#### Networking changes\n- [Fix handler not being added to RequestError](https://github.com/yt-dlp/yt-dlp/commit/d1c4d88b2d912e8da5e76db455562ca63b1af690) ([#10955](https://github.com/yt-dlp/yt-dlp/issues/10955)) by [coletdjnz](https://github.com/coletdjnz)\n- [Pin `curl-cffi` version to < 0.7.2](https://github.com/yt-dlp/yt-dlp/commit/5bb1aa04dafce13ba9de707ea53169fab58b5207) ([#11092](https://github.com/yt-dlp/yt-dlp/issues/11092)) by [bashonly](https://github.com/bashonly)\n- **Request Handler**: websockets: [Upgrade websockets to 13.0](https://github.com/yt-dlp/yt-dlp/commit/6f9e6537434562d513d0c9b68ced8a61ade94a64) ([#10815](https://github.com/yt-dlp/yt-dlp/issues/10815)) by [coletdjnz](https://github.com/coletdjnz)\n\n#### Misc. changes\n- **build**\n    - [Bump PyInstaller version pin to `>=6.10.0`](https://github.com/yt-dlp/yt-dlp/commit/fb8b7f226d251e521a89b23c415e249e5b788e5c) ([#10709](https://github.com/yt-dlp/yt-dlp/issues/10709)) by [bashonly](https://github.com/bashonly)\n    - [Pin `delocate` version for `macos`](https://github.com/yt-dlp/yt-dlp/commit/7e41628ff523b3fe373b0981a5db441358980dab) ([#10901](https://github.com/yt-dlp/yt-dlp/issues/10901)) by [bashonly](https://github.com/bashonly)\n- **ci**\n    - [Add comment sanitization workflow](https://github.com/yt-dlp/yt-dlp/commit/b6200bdcf3a9415ae36859188f9a57e3e461c696) ([#10915](https://github.com/yt-dlp/yt-dlp/issues/10915)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n    - [Add issue tracker anti-spam protection](https://github.com/yt-dlp/yt-dlp/commit/ad9a8115aa29a1a95c961b16fcf129a228d98f50) ([#10861](https://github.com/yt-dlp/yt-dlp/issues/10861)) by [bashonly](https://github.com/bashonly)\n- **cleanup**: Miscellaneous: [c6387ab](https://github.com/yt-dlp/yt-dlp/commit/c6387abc1af9842bb0541288a5610abba9b1ab51) by [bashonly](https://github.com/bashonly), [Codenade](https://github.com/Codenade), [coletdjnz](https://github.com/coletdjnz), [grqz](https://github.com/grqz), [Grub4K](https://github.com/Grub4K), [pzhlkj6612](https://github.com/pzhlkj6612), [seproDev](https://github.com/seproDev)\n\n### 2024.08.06\n\n#### Core changes\n- **jsinterp**: [Improve `slice` implementation](https://github.com/yt-dlp/yt-dlp/commit/bb8bf1db993f59752d20b73b861bd55e40cf0e31) ([#10664](https://github.com/yt-dlp/yt-dlp/issues/10664)) by [seproDev](https://github.com/seproDev)\n\n#### Extractor changes\n- **discoveryplusitaly**: [Support sport and olympics URLs](https://github.com/yt-dlp/yt-dlp/commit/e7d73bc4531ee3f91a46b15e218dcc1fbeb6226c) ([#10655](https://github.com/yt-dlp/yt-dlp/issues/10655)) by [bashonly](https://github.com/bashonly)\n- **gem.cbc.ca**: live: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/fc5eecfa31c9571b6031cc3968aaa0394be55d7a) ([#10565](https://github.com/yt-dlp/yt-dlp/issues/10565)) by [bashonly](https://github.com/bashonly), [scribblemaniac](https://github.com/scribblemaniac)\n- **niconico**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/4d9231208332d4c32364b8cd814bff8b20232cae) ([#10677](https://github.com/yt-dlp/yt-dlp/issues/10677)) by [bashonly](https://github.com/bashonly)\n- **olympics**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/919540a9644e55deb78cdd6751757ec8fdaf76f4) ([#10625](https://github.com/yt-dlp/yt-dlp/issues/10625)) by [bashonly](https://github.com/bashonly)\n- **youku**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/0088c6de23d832b117061a33e984dc452d992e9c) ([#10626](https://github.com/yt-dlp/yt-dlp/issues/10626)) by [hugepower](https://github.com/hugepower)\n- **youtube**\n    - [Change default player clients to `ios,web_creator`](https://github.com/yt-dlp/yt-dlp/commit/406f4c2e47502fffc1b0c210b4ee6487c89a44cb) ([#10674](https://github.com/yt-dlp/yt-dlp/issues/10674)) by [bashonly](https://github.com/bashonly)\n    - [Fix `n` function name extraction for player `b12cc44b`](https://github.com/yt-dlp/yt-dlp/commit/c86891eb9434b4d7eec426d38c0c625b5e13cb2f) ([#10668](https://github.com/yt-dlp/yt-dlp/issues/10668)) by [seproDev](https://github.com/seproDev)\n\n### 2024.08.01\n\n#### Core changes\n- **utils**: `unified_timestamp`: [Recognize Sunday](https://github.com/yt-dlp/yt-dlp/commit/6daf2c27c0464fba98337be30de0b66d520d0db1) ([#10589](https://github.com/yt-dlp/yt-dlp/issues/10589)) by [bashonly](https://github.com/bashonly)\n\n#### Extractor changes\n- **abematv**: [Fix availability extraction](https://github.com/yt-dlp/yt-dlp/commit/ef36d517f9b05785d61abca7691d9ab7d63cc75c) ([#10569](https://github.com/yt-dlp/yt-dlp/issues/10569)) by [middlingphys](https://github.com/middlingphys)\n- **cbc.ca**: player: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/94a1c5e642e468cebeb51f74c6c220434cb47d96) ([#10302](https://github.com/yt-dlp/yt-dlp/issues/10302)) by [bashonly](https://github.com/bashonly), [trainman261](https://github.com/trainman261)\n- **discoveryplus**: [Support olympics URLs](https://github.com/yt-dlp/yt-dlp/commit/0b7728618417e1aa382722a4d29b916b594d4459) ([#10566](https://github.com/yt-dlp/yt-dlp/issues/10566)) by [bashonly](https://github.com/bashonly)\n- **kick**: clips: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/bb3936ae2b3ce96d0b53f9e17cad1082058f032b) ([#10572](https://github.com/yt-dlp/yt-dlp/issues/10572)) by [luvyana](https://github.com/luvyana)\n- **learningonscreen**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/fe15d3178e242803ae7a934b90137f13598eba2e) ([#10590](https://github.com/yt-dlp/yt-dlp/issues/10590)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n- **mediaklikk**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/7e3e4779ad13e4511c9ba3869879e53f0267bd7a) ([#10605](https://github.com/yt-dlp/yt-dlp/issues/10605)) by [szantnerb](https://github.com/szantnerb)\n- **mlbtv**: [Fix makeup game extraction](https://github.com/yt-dlp/yt-dlp/commit/4b69e1b53ea21e631cd5dd68ff531e2f1671ec17) ([#10607](https://github.com/yt-dlp/yt-dlp/issues/10607)) by [bashonly](https://github.com/bashonly)\n- **olympics**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/2f1ddfe12a2c174bc777264c5c8ffe7ca0922d94) ([#10604](https://github.com/yt-dlp/yt-dlp/issues/10604)) by [bashonly](https://github.com/bashonly)\n- **tva**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/28d485714fef88937c82635438afba5db81f9089) ([#10567](https://github.com/yt-dlp/yt-dlp/issues/10567)) by [bashonly](https://github.com/bashonly)\n- **tver**: [Support olympic URLs](https://github.com/yt-dlp/yt-dlp/commit/5260696b1cba77161828941fdb38f09f14ac6c60) ([#10600](https://github.com/yt-dlp/yt-dlp/issues/10600)) by [vvto33](https://github.com/vvto33)\n- **vimeo**: review: [Fix password-protected video extraction](https://github.com/yt-dlp/yt-dlp/commit/2b6df93a243bdfb9d6bb5c1e18020625cd02d465) ([#10598](https://github.com/yt-dlp/yt-dlp/issues/10598)) by [bashonly](https://github.com/bashonly)\n- **youtube**\n    - [Change default player clients to `ios,tv`](https://github.com/yt-dlp/yt-dlp/commit/efb42763dec23ccf6a2e3bac3afbfefce8efd012) ([#10457](https://github.com/yt-dlp/yt-dlp/issues/10457)) by [seproDev](https://github.com/seproDev)\n    - [Fix `n` function name extraction for player `20dfca59`](https://github.com/yt-dlp/yt-dlp/commit/011b4a04db2a636c3ef0a0ad4e2d3ae482c9fd76) ([#10611](https://github.com/yt-dlp/yt-dlp/issues/10611)) by [bashonly](https://github.com/bashonly)\n    - [Fix age-verification workaround](https://github.com/yt-dlp/yt-dlp/commit/d19fcb934269465fd707e68a87f735ec6983e93d) ([#10610](https://github.com/yt-dlp/yt-dlp/issues/10610)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n    - [Player client maintenance](https://github.com/yt-dlp/yt-dlp/commit/0e539617a41913c7da1edd74fb6543c10ad727b3) ([#10573](https://github.com/yt-dlp/yt-dlp/issues/10573)) by [bashonly](https://github.com/bashonly)\n\n#### Misc. changes\n- **cleanup**: Miscellaneous: [ffd7781](https://github.com/yt-dlp/yt-dlp/commit/ffd7781d6588926f820b44a34b9e6e3068fb9f97) by [bashonly](https://github.com/bashonly)\n\n### 2024.07.25\n\n#### Extractor changes\n- **abematv**: [Adapt key retrieval to request handler framework](https://github.com/yt-dlp/yt-dlp/commit/a3bab4752a2b3d56e5a59b4e0411bb8f695c010b) ([#10491](https://github.com/yt-dlp/yt-dlp/issues/10491)) by [bashonly](https://github.com/bashonly)\n- **facebook**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/1a34a802f44a1dab8f642c79c3cc810e21541d3b) ([#10531](https://github.com/yt-dlp/yt-dlp/issues/10531)) by [bashonly](https://github.com/bashonly)\n- **mlbtv**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/f0993391e6052ec8f7aacc286609564f226943b9) ([#10515](https://github.com/yt-dlp/yt-dlp/issues/10515)) by [bashonly](https://github.com/bashonly)\n- **tiktok**: [Fix and deprioritize JSON subtitles](https://github.com/yt-dlp/yt-dlp/commit/2f97779f335ac069ecccd9c7bf81abf4a83cfe7a) ([#10516](https://github.com/yt-dlp/yt-dlp/issues/10516)) by [bashonly](https://github.com/bashonly)\n- **vimeo**: [Fix chapters extraction](https://github.com/yt-dlp/yt-dlp/commit/a0a1bc3d8d8e3bb9a48a06e835815a0460e90e77) ([#10544](https://github.com/yt-dlp/yt-dlp/issues/10544)) by [bashonly](https://github.com/bashonly)\n- **youtube**: [Fix `n` function name extraction for player `3400486c`](https://github.com/yt-dlp/yt-dlp/commit/713b4cd18f00556771af8cfdd9cea6cc1a09e948) ([#10542](https://github.com/yt-dlp/yt-dlp/issues/10542)) by [bashonly](https://github.com/bashonly)\n\n#### Misc. changes\n- **build**: [Pin `setuptools` version](https://github.com/yt-dlp/yt-dlp/commit/e046db8a116b1c320d4785daadd48ea0b22a3987) ([#10493](https://github.com/yt-dlp/yt-dlp/issues/10493)) by [bashonly](https://github.com/bashonly)\n\n### 2024.07.16\n\n#### Core changes\n- [Fix `noprogress` if `test=True` with `--quiet` and `--verbose`](https://github.com/yt-dlp/yt-dlp/commit/66ce3d76d87af3f81cc9dfec4be4704016cb1cdb) ([#10454](https://github.com/yt-dlp/yt-dlp/issues/10454)) by [Grub4K](https://github.com/Grub4K)\n- [Support `auto-tty` and `no_color-tty` for `--color`](https://github.com/yt-dlp/yt-dlp/commit/d9cbced493cae2008508d94a2db5dd98be7c01fc) ([#10453](https://github.com/yt-dlp/yt-dlp/issues/10453)) by [Grub4K](https://github.com/Grub4K)\n- **update**: [Fix network error handling](https://github.com/yt-dlp/yt-dlp/commit/ed1b9ed93dd90d2cc960c0d8eaa9d919db224203) ([#10486](https://github.com/yt-dlp/yt-dlp/issues/10486)) by [bashonly](https://github.com/bashonly)\n- **utils**: `parse_codecs`: [Fix parsing of mixed case codec strings](https://github.com/yt-dlp/yt-dlp/commit/cc0070f6496e501d77352bad475fb02d6a86846a) by [bashonly](https://github.com/bashonly)\n\n#### Extractor changes\n- **adn**: [Adjust for .com domain change](https://github.com/yt-dlp/yt-dlp/commit/959b7a379b8e5da059d110a63339c964b6265736) ([#10399](https://github.com/yt-dlp/yt-dlp/issues/10399)) by [infanf](https://github.com/infanf)\n- **afreecatv**: [Fix login and use `legacy_ssl`](https://github.com/yt-dlp/yt-dlp/commit/4cd41469243624d90b7a2009b95cbe0609343efe) ([#10440](https://github.com/yt-dlp/yt-dlp/issues/10440)) by [bashonly](https://github.com/bashonly)\n- **box**: [Support enterprise URLs](https://github.com/yt-dlp/yt-dlp/commit/705f5b84dec75cc7af97f42fd1530e8062735970) ([#10419](https://github.com/yt-dlp/yt-dlp/issues/10419)) by [seproDev](https://github.com/seproDev)\n- **digitalconcerthall**: [Extract HEVC and FLAC formats](https://github.com/yt-dlp/yt-dlp/commit/e62fa6b0e0186f8c5666c2c5ab64cf191abdafc1) ([#10470](https://github.com/yt-dlp/yt-dlp/issues/10470)) by [bashonly](https://github.com/bashonly)\n- **dplay**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/39e6c4cb44b9292e89ac0afec3cd0afc2ae8775f) ([#10471](https://github.com/yt-dlp/yt-dlp/issues/10471)) by [bashonly](https://github.com/bashonly)\n- **epidemicsound**: [Support sound effects URLs](https://github.com/yt-dlp/yt-dlp/commit/8531d2b03bac9cc746f2ee8098aaf8f115505f5b) ([#10436](https://github.com/yt-dlp/yt-dlp/issues/10436)) by [iancmy](https://github.com/iancmy)\n- **generic**: [Fix direct video link extensions](https://github.com/yt-dlp/yt-dlp/commit/b9afb99e7c34d0eb15ddc6689cd7d20eebfda68e) ([#10468](https://github.com/yt-dlp/yt-dlp/issues/10468)) by [bashonly](https://github.com/bashonly)\n- **picarto**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/bacd18b7df08b4995644fd12cee1f8c8e8636bc7) ([#10414](https://github.com/yt-dlp/yt-dlp/issues/10414)) by [Frankgoji](https://github.com/Frankgoji)\n- **soundcloud**: permalink, user: [Extract tracks only](https://github.com/yt-dlp/yt-dlp/commit/22870b81bad97dfa6307a7add44753b2dffc76a9) ([#10463](https://github.com/yt-dlp/yt-dlp/issues/10463)) by [DunnesH](https://github.com/DunnesH)\n- **tiktok**: live: [Fix room ID extraction](https://github.com/yt-dlp/yt-dlp/commit/d2189d3d36987ebeac426fd70a60a5fe86325a2b) ([#10408](https://github.com/yt-dlp/yt-dlp/issues/10408)) by [mokrueger](https://github.com/mokrueger)\n- **tv5monde**: [Support browser impersonation](https://github.com/yt-dlp/yt-dlp/commit/9b95a6765a5f6325af99c4aca961587f0c426e8c) ([#10417](https://github.com/yt-dlp/yt-dlp/issues/10417)) by [bashonly](https://github.com/bashonly) (With fixes in [cc1a309](https://github.com/yt-dlp/yt-dlp/commit/cc1a3098c00995c6aebc2a16bd1050a66bad64db))\n- **youtube**\n    - [Avoid poToken experiment player responses](https://github.com/yt-dlp/yt-dlp/commit/8b8b442cb005a8d85315f301615f83fb736b967a) ([#10456](https://github.com/yt-dlp/yt-dlp/issues/10456)) by [seproDev](https://github.com/seproDev) (With fixes in [16da8ef](https://github.com/yt-dlp/yt-dlp/commit/16da8ef9937ff76632dfef02e5062c5ba99c8ea2))\n    - [Invalidate nsig cache from < 2024.07.09](https://github.com/yt-dlp/yt-dlp/commit/04e17ba20a139f1b3e30ec4bafa3fba26888f0b3) ([#10401](https://github.com/yt-dlp/yt-dlp/issues/10401)) by [bashonly](https://github.com/bashonly)\n    - [Reduce android client priority](https://github.com/yt-dlp/yt-dlp/commit/b85eef0a615a01304f88a3847309c667e09a20df) ([#10467](https://github.com/yt-dlp/yt-dlp/issues/10467)) by [seproDev](https://github.com/seproDev)\n\n#### Networking changes\n- [Add `legacy_ssl` request extension](https://github.com/yt-dlp/yt-dlp/commit/150ecc45d9cacc919550c13b04fd998ac5103a6b) ([#10448](https://github.com/yt-dlp/yt-dlp/issues/10448)) by [coletdjnz](https://github.com/coletdjnz)\n- **Request Handler**: curl_cffi: [Support `curl_cffi` 0.7.X](https://github.com/yt-dlp/yt-dlp/commit/42bfca00a6b460fc053514cdd7ac6f5b5daddf0c) by [coletdjnz](https://github.com/coletdjnz)\n\n#### Misc. changes\n- **build**\n    - [Include `curl_cffi` in `yt-dlp_linux`](https://github.com/yt-dlp/yt-dlp/commit/4521f30d1479315cd5c3bf4abdad19391952df98) by [bashonly](https://github.com/bashonly)\n    - [Pin `curl-cffi` to 0.5.10 for Windows](https://github.com/yt-dlp/yt-dlp/commit/ac30941ae682f71eab010877c9a977736a61d3cf) by [bashonly](https://github.com/bashonly)\n- **cleanup**: Miscellaneous: [89a161e](https://github.com/yt-dlp/yt-dlp/commit/89a161e8c62569a662deda1c948664152efcb6b4) by [bashonly](https://github.com/bashonly)\n\n### 2024.07.09\n\n#### Core changes\n- [Do not alter default format selection when simulated](https://github.com/yt-dlp/yt-dlp/commit/0b570f2a90ce2363ba06089217514d644e7be2e0) ([#9862](https://github.com/yt-dlp/yt-dlp/issues/9862)) by [seproDev](https://github.com/seproDev)\n\n#### Extractor changes\n- **youtube**: [Remove broken `n` function extraction fallback](https://github.com/yt-dlp/yt-dlp/commit/7ead7332af69422cee931aec3faa277288e9e212) ([#10396](https://github.com/yt-dlp/yt-dlp/issues/10396)) by [pukkandan](https://github.com/pukkandan), [seproDev](https://github.com/seproDev)\n\n### 2024.07.08\n\n#### Core changes\n- **jsinterp**: [Implement `Function.prototype` resolving for `call` and `apply`](https://github.com/yt-dlp/yt-dlp/commit/6c056ea7aeb03660281653a9668547f2548f194f) ([#10392](https://github.com/yt-dlp/yt-dlp/issues/10392)) by [Grub4K](https://github.com/Grub4K)\n\n#### Extractor changes\n- **soundcloud**: [Fix rate-limit handling](https://github.com/yt-dlp/yt-dlp/commit/4b50b292cc98534fb8c7cdf0ae5cb85862f7ebfc) ([#10389](https://github.com/yt-dlp/yt-dlp/issues/10389)) by [bashonly](https://github.com/bashonly)\n- **youtube**: [Fix JS `n` function name extraction](https://github.com/yt-dlp/yt-dlp/commit/297b0a379282a15c80d82d51f3757c961db2dae1) ([#10390](https://github.com/yt-dlp/yt-dlp/issues/10390)) by [bashonly](https://github.com/bashonly), [seproDev](https://github.com/seproDev)\n\n### 2024.07.07\n\n#### Important changes\n- Security: [[ie/douyutv] Do not use dangerous javascript source/URL](https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3v33-3wmw-3785)\n    - A dependency on potentially malicious third-party JavaScript code has been removed from the Douyu extractors\n\n#### Core changes\n- [Address gaps in allowed extensions](https://github.com/yt-dlp/yt-dlp/commit/2469119490d7e0397ebbf5c5ae327316f955eef2) ([#10362](https://github.com/yt-dlp/yt-dlp/issues/10362)) by [bashonly](https://github.com/bashonly)\n- [Fix `--ignore-no-formats-error`](https://github.com/yt-dlp/yt-dlp/commit/cc767e9490056efaaa11c186b0d032e4b4969180) ([#10345](https://github.com/yt-dlp/yt-dlp/issues/10345)) by [Grub4K](https://github.com/Grub4K)\n\n#### Extractor changes\n- **abematv**: [Extract availability](https://github.com/yt-dlp/yt-dlp/commit/2a1a1b8e67e864289ac7ba5d05ec63dbb19a639f) ([#10348](https://github.com/yt-dlp/yt-dlp/issues/10348)) by [middlingphys](https://github.com/middlingphys)\n- **chzzk**: [Extract with API v3](https://github.com/yt-dlp/yt-dlp/commit/4862a29854d4044120e3f97b52199711ad04bee1) ([#10363](https://github.com/yt-dlp/yt-dlp/issues/10363)) by [hui1601](https://github.com/hui1601)\n- **douyutv**: [Do not use dangerous javascript source/URL](https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41) ([#10347](https://github.com/yt-dlp/yt-dlp/issues/10347)) by [LeSuisse](https://github.com/LeSuisse)\n- **jiosaavn**: playlist: [Support featured playlists](https://github.com/yt-dlp/yt-dlp/commit/f0f867f008a1728f5f6ac1224b9e014b5d27f817) ([#10382](https://github.com/yt-dlp/yt-dlp/issues/10382)) by [harbhim](https://github.com/harbhim)\n- **vidyard**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/00766ece0c5c7a80781a4ff677198c5fb69d9dc0) ([#10155](https://github.com/yt-dlp/yt-dlp/issues/10155)) by [exterrestris](https://github.com/exterrestris)\n- **vimeo**: [Fix password-protected video extraction](https://github.com/yt-dlp/yt-dlp/commit/c1c9bb4adb42d0d93a2fb5d93a7de0a87b6ba884) ([#10341](https://github.com/yt-dlp/yt-dlp/issues/10341)) by [bashonly](https://github.com/bashonly)\n- **vtv**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/987a1f94c24275f2b0cd82e719956687415dd732) ([#10173](https://github.com/yt-dlp/yt-dlp/issues/10173)) by [DinhHuy2010](https://github.com/DinhHuy2010)\n- **yle_areena**\n    - [Fix metadata extraction](https://github.com/yt-dlp/yt-dlp/commit/4cdc976bd861b5835601ae402bef543eacd88f3d) ([#10380](https://github.com/yt-dlp/yt-dlp/issues/10380)) by [seproDev](https://github.com/seproDev)\n    - [Fix subtitle extraction](https://github.com/yt-dlp/yt-dlp/commit/0d174e8bed32081eb38ef7f5d1a1282ae154f517) ([#10379](https://github.com/yt-dlp/yt-dlp/issues/10379)) by [Grub4K](https://github.com/Grub4K)\n\n#### Misc. changes\n- **cleanup**: Miscellaneous: [b337d29](https://github.com/yt-dlp/yt-dlp/commit/b337d2989ce0614651d363383f6f743d977248ef) by [bashonly](https://github.com/bashonly)\n\n### 2024.07.02\n\n#### Core changes\n- [Fix `--compat-opt allow-unsafe-ext`](https://github.com/yt-dlp/yt-dlp/commit/773bbb181506856ffda95496ab60c1c9603f1f71) ([#10336](https://github.com/yt-dlp/yt-dlp/issues/10336)) by [bashonly](https://github.com/bashonly), [rdamas](https://github.com/rdamas)\n\n#### Extractor changes\n- **banbye**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/7509791385ba88cb7ec0ab17e826681f4af4b66e) ([#10332](https://github.com/yt-dlp/yt-dlp/issues/10332)) by [PatrykMis](https://github.com/PatrykMis), [seproDev](https://github.com/seproDev)\n- **murrtube**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/6403530e2dfe259a87afe444708c4f3024cc45b8) ([#9249](https://github.com/yt-dlp/yt-dlp/issues/9249)) by [DrakoCpp](https://github.com/DrakoCpp)\n- **zaiko**: [Support JWT video URLs](https://github.com/yt-dlp/yt-dlp/commit/7799e518956387bb3c1064c9beae26eab8d5044a) ([#10130](https://github.com/yt-dlp/yt-dlp/issues/10130)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n\n#### Postprocessor changes\n- **embedthumbnail**: [Fix embedding with mutagen](https://github.com/yt-dlp/yt-dlp/commit/d502f4c6d95b74896f40070d07229997f0850f31) ([#10337](https://github.com/yt-dlp/yt-dlp/issues/10337)) by [bashonly](https://github.com/bashonly)\n\n#### Misc. changes\n- **cleanup**: Miscellaneous: [93d33cb](https://github.com/yt-dlp/yt-dlp/commit/93d33cb29af9e2e84369ac43589d50ce8e0160ef) by [bashonly](https://github.com/bashonly)\n\n### 2024.07.01\n\n#### Important changes\n- Security: [[CVE-2024-38519](https://nvd.nist.gov/vuln/detail/CVE-2024-38519)] [Properly sanitize file-extension to prevent file system modification and RCE](https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j)\n    - Unsafe extensions are now blocked from being downloaded\n\n#### Core changes\n- [Add `playlist_channel` and `playlist_channel_id` fields](https://github.com/yt-dlp/yt-dlp/commit/55e3e6fd21e741ec5ae3d8624de5e5ea345810eb) ([#10266](https://github.com/yt-dlp/yt-dlp/issues/10266)) by [bashonly](https://github.com/bashonly)\n- [Disallow unsafe extensions (CVE-2024-38519)](https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a) by [Grub4K](https://github.com/Grub4K)\n- **cookies**: [Fix `--cookies-from-browser` DE detection on Linux](https://github.com/yt-dlp/yt-dlp/commit/a8520244b8642880e4d35925e9e49eff94d548de) ([#10237](https://github.com/yt-dlp/yt-dlp/issues/10237)) by [peisenwang](https://github.com/peisenwang)\n\n#### Extractor changes\n- **afreecatv**\n    - [Support browser impersonation](https://github.com/yt-dlp/yt-dlp/commit/e8352ad6599de7b5371dc39a1a1edc7890aaedb4) ([#10174](https://github.com/yt-dlp/yt-dlp/issues/10174)) by [hui1601](https://github.com/hui1601)\n    - catchstory: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/054a3ba7d1293f9fbe21800d62d1e5ddcbded238) ([#10235](https://github.com/yt-dlp/yt-dlp/issues/10235)) by [hui1601](https://github.com/hui1601)\n- **bilibili**: [Support legacy formats](https://github.com/yt-dlp/yt-dlp/commit/1d6ab17d0752ee9cf19e3e63c7dec7b600d3f228) ([#9117](https://github.com/yt-dlp/yt-dlp/issues/9117)) by [c-basalt](https://github.com/c-basalt), [GD-Slime](https://github.com/GD-Slime)\n- **bitchute**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/5b1a2aa978d0074cee278e7659f32f52ecc4ab53) ([#10301](https://github.com/yt-dlp/yt-dlp/issues/10301)) by [seproDev](https://github.com/seproDev)\n- **brightcove**: [Upgrade requests to HTTPS](https://github.com/yt-dlp/yt-dlp/commit/90c3721a322756bb7f4ca10ceb73744500bee37e) ([#10202](https://github.com/yt-dlp/yt-dlp/issues/10202)) by [bashonly](https://github.com/bashonly)\n- **cloudflarestream**: [Fix `_VALID_URL` and embed extraction](https://github.com/yt-dlp/yt-dlp/commit/7aa322c02cec54eb77154a89da7e400194f0bd03) ([#10215](https://github.com/yt-dlp/yt-dlp/issues/10215)) by [bashonly](https://github.com/bashonly)\n- **cloudycdn**: [Fix formats extraction](https://github.com/yt-dlp/yt-dlp/commit/b758877afa225747fba81c8a580e27583a231734) ([#10271](https://github.com/yt-dlp/yt-dlp/issues/10271)) by [Caesim404](https://github.com/Caesim404)\n- **digitalconcerthall**: [Rework extractor](https://github.com/yt-dlp/yt-dlp/commit/2a4f2e82dbeeb0c9130883c83dac689d5260c871) ([#10152](https://github.com/yt-dlp/yt-dlp/issues/10152)) by [seproDev](https://github.com/seproDev), [tippfehlr](https://github.com/tippfehlr)\n- **facebook**: reel: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/8ca1d57ed08d00efa117820a5a82f763b20e2d1d) ([#10232](https://github.com/yt-dlp/yt-dlp/issues/10232)) by [bashonly](https://github.com/bashonly)\n- **francetv**\n    - [Detect and raise errors for DRM](https://github.com/yt-dlp/yt-dlp/commit/3690c2f59827c79a1bbe388a7c1ae75db7477db2) ([#10165](https://github.com/yt-dlp/yt-dlp/issues/10165)) by [bashonly](https://github.com/bashonly)\n    - [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/081708d6074dfbb907e25af61ba530bba0d4b31d) ([#10177](https://github.com/yt-dlp/yt-dlp/issues/10177)) by [bashonly](https://github.com/bashonly)\n- **generic**: [Add `key_query` extractor-arg](https://github.com/yt-dlp/yt-dlp/commit/5dbac313ae4e3e8521dfe2e1a6a048a98ff4b4fe) by [bashonly](https://github.com/bashonly)\n- **graspop**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/1d369b4096d79233e0ac2c93762746a64d7a69c8) ([#10268](https://github.com/yt-dlp/yt-dlp/issues/10268)) by [Niluge-KiWi](https://github.com/Niluge-KiWi)\n- **jiocinema**: series: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/61714f46956f61612032bba857aed7ad1387eccd) ([#10139](https://github.com/yt-dlp/yt-dlp/issues/10139)) by [varunchopra](https://github.com/varunchopra)\n- **khanacademy**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/4093eb1fcc29a0e2aea9adfcba479787d9ae0c0c) ([#9136](https://github.com/yt-dlp/yt-dlp/issues/9136)) by [c-basalt](https://github.com/c-basalt)\n- **laracasts**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/b8da8a98f897599095d4ef1644b8c5fd39921118) ([#10055](https://github.com/yt-dlp/yt-dlp/issues/10055)) by [ASertacAkkaya](https://github.com/ASertacAkkaya), [seproDev](https://github.com/seproDev)\n- **matchtv**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/f3411af12e209bc5624e1ac31271b8aabe2d3c90) ([#10190](https://github.com/yt-dlp/yt-dlp/issues/10190)) by [megumintyan](https://github.com/megumintyan)\n- **mediasite**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/0953209a857c51648aee89d205c086b0e1dd3864) ([#10273](https://github.com/yt-dlp/yt-dlp/issues/10273)) by [bashonly](https://github.com/bashonly)\n- **microsoftembed**: [Add extractors for dev materials](https://github.com/yt-dlp/yt-dlp/commit/9200bc70c94546b2191bb6fbfc9cea98a919cc56) ([#9177](https://github.com/yt-dlp/yt-dlp/issues/9177)) by [c-basalt](https://github.com/c-basalt)\n- **mlbtv**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/61edf57f8f13f6dfd81154174e647eb5fdd26089) ([#10296](https://github.com/yt-dlp/yt-dlp/issues/10296)) by [bashonly](https://github.com/bashonly)\n- **neteasemusic**: [Extract more formats from new API](https://github.com/yt-dlp/yt-dlp/commit/7a03f88c40b80d3cf54f68edd9d4bdd6aa527570) ([#10258](https://github.com/yt-dlp/yt-dlp/issues/10258)) by [hafeoz](https://github.com/hafeoz)\n- **nhkradiru**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/b8e2a5e0e1030076f833917906e19bb6c7b318f6) ([#10106](https://github.com/yt-dlp/yt-dlp/issues/10106)) by [garret1317](https://github.com/garret1317)\n- **nuum**: [Fix formats extraction](https://github.com/yt-dlp/yt-dlp/commit/aefede25561a06cba398d4f593eee2fbe942693b) ([#10316](https://github.com/yt-dlp/yt-dlp/issues/10316)) by [DmitryScaletta](https://github.com/DmitryScaletta)\n- **orf**\n    - on\n        - [Add `prefer_segments_playlist` extractor-arg](https://github.com/yt-dlp/yt-dlp/commit/e6a22834df1776ec4e486526f6df2bf53cb7e06f) ([#10314](https://github.com/yt-dlp/yt-dlp/issues/10314)) by [seproDev](https://github.com/seproDev)\n        - [Support segmented episodes](https://github.com/yt-dlp/yt-dlp/commit/8b46ad4d8b8ee8c5472af0cde863baa89ca3f425) ([#10053](https://github.com/yt-dlp/yt-dlp/issues/10053)) by [seproDev](https://github.com/seproDev)\n- **patreoncampaign**: [Fix `campaign_id` extraction](https://github.com/yt-dlp/yt-dlp/commit/2e5a47da400b645aadbda6afd1156bd89c744f48) ([#10070](https://github.com/yt-dlp/yt-dlp/issues/10070)) by [bashonly](https://github.com/bashonly)\n- **podbayfm**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/d4b52ce3fcb8d9578ed12365648eaba8718c603e) ([#10195](https://github.com/yt-dlp/yt-dlp/issues/10195)) by [bashonly](https://github.com/bashonly), [seproDev](https://github.com/seproDev)\n- **pokergo**: [Make metadata extraction non-fatal](https://github.com/yt-dlp/yt-dlp/commit/36e8dd832579b5375a0f6626af4268b86b4eb21a) ([#10319](https://github.com/yt-dlp/yt-dlp/issues/10319)) by [axpauls](https://github.com/axpauls)\n- **qqmusic**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/4f5d7be3c5590bb257d8ff521572aee9839ab754) ([#9768](https://github.com/yt-dlp/yt-dlp/issues/9768)) by [c-basalt](https://github.com/c-basalt)\n- **rtvslo.si**: show: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/92a1c4abaeeba9a69d611c57b73555cb1a1f00ad) ([#8418](https://github.com/yt-dlp/yt-dlp/issues/8418)) by [JSubelj](https://github.com/JSubelj), [seproDev](https://github.com/seproDev)\n- **soundcloud**: [Fix `download` format extraction](https://github.com/yt-dlp/yt-dlp/commit/e53e56b73543799638fa6abb0c78f8b091aa84e1) ([#10125](https://github.com/yt-dlp/yt-dlp/issues/10125)) by [bashonly](https://github.com/bashonly)\n- **sproutvideo**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/d6c2c2bc84f1434255be5c73baeb17d893d2c0d4) ([#10098](https://github.com/yt-dlp/yt-dlp/issues/10098)) by [bashonly](https://github.com/bashonly), [TheZ3ro](https://github.com/TheZ3ro)\n- **tiktok**\n    - [Detect and raise when login is required](https://github.com/yt-dlp/yt-dlp/commit/ea88129784fcbb6987161df9ba05909325d8e2e9) ([#10124](https://github.com/yt-dlp/yt-dlp/issues/10124)) by [bashonly](https://github.com/bashonly)\n    - [Fix API extraction](https://github.com/yt-dlp/yt-dlp/commit/96472d72f29550c25c5dcedcde02c38c192b0011) ([#10216](https://github.com/yt-dlp/yt-dlp/issues/10216)) by [bashonly](https://github.com/bashonly)\n- **tubitv**\n    - [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/bef9a9e5361fd7a72e21d0f1a8c8afb70d89e8c5) ([#9975](https://github.com/yt-dlp/yt-dlp/issues/9975)) by [chilinux](https://github.com/chilinux)\n    - series: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/d7d861811c15585a4f7ec9d5ae68d2ac28de28a0) ([#10116](https://github.com/yt-dlp/yt-dlp/issues/10116)) by [bashonly](https://github.com/bashonly)\n- **vimeo**: [Support browser impersonation](https://github.com/yt-dlp/yt-dlp/commit/d4b99a233314bf31f9c842035ea9884673d5313a) ([#10327](https://github.com/yt-dlp/yt-dlp/issues/10327)) by [bashonly](https://github.com/bashonly)\n- **youtube**\n    - [Extract all formats from multi-language m3u8s](https://github.com/yt-dlp/yt-dlp/commit/9bd85019931927a99b0fe0dc58ac51acca9fbe72) ([#9875](https://github.com/yt-dlp/yt-dlp/issues/9875)) by [bashonly](https://github.com/bashonly), [clienthax](https://github.com/clienthax)\n    - [Skip formats if nsig decoding fails](https://github.com/yt-dlp/yt-dlp/commit/800ec085ccf98420584d8bb38c20a2c079669b09) ([#10223](https://github.com/yt-dlp/yt-dlp/issues/10223)) by [bashonly](https://github.com/bashonly)\n    - [Suppress \"Unavailable videos are hidden\" warning](https://github.com/yt-dlp/yt-dlp/commit/24f3097ea9a470a984d0454dc013cafa2325f5f8) ([#10159](https://github.com/yt-dlp/yt-dlp/issues/10159)) by [mgedmin](https://github.com/mgedmin)\n    - tab: [Fix channel metadata extraction](https://github.com/yt-dlp/yt-dlp/commit/a0d9967f6822fc279e86bce33464194985148727) ([#10071](https://github.com/yt-dlp/yt-dlp/issues/10071)) by [bashonly](https://github.com/bashonly), [shoxie007](https://github.com/shoxie007)\n\n#### Downloader changes\n- **hls**: [Apply `extra_param_to_key_url` from info dict](https://github.com/yt-dlp/yt-dlp/commit/ca8885edd93bdf8912af6c22ee335b6222cb9ba9) by [bashonly](https://github.com/bashonly)\n\n#### Postprocessor changes\n- **embedthumbnail**: [Fix postprocessor](https://github.com/yt-dlp/yt-dlp/commit/f2a4ea1794718e4dc0148bc172cb877f1080903b) ([#10248](https://github.com/yt-dlp/yt-dlp/issues/10248)) by [Grub4K](https://github.com/Grub4K)\n\n#### Networking changes\n- **Request Handler**: requests: [Bump minimum `requests` version to 2.32.2](https://github.com/yt-dlp/yt-dlp/commit/db50f19d76c6870a5a13d0cab9287d684fd7449a) ([#10079](https://github.com/yt-dlp/yt-dlp/issues/10079)) by [bashonly](https://github.com/bashonly)\n\n#### Misc. changes\n- **build**\n    - [Bump Pyinstaller to `>=6.7.0` for all builds](https://github.com/yt-dlp/yt-dlp/commit/5fdd13006a1c5d78642c8d3c4c7df0448273c2ae) ([#10069](https://github.com/yt-dlp/yt-dlp/issues/10069)) by [bashonly](https://github.com/bashonly), [seproDev](https://github.com/seproDev)\n    - [Cache dependencies for `macos` job](https://github.com/yt-dlp/yt-dlp/commit/46c1b7cfec1d0e6155083ca7e6948674c64ecb97) ([#10088](https://github.com/yt-dlp/yt-dlp/issues/10088)) by [bashonly](https://github.com/bashonly)\n    - [Use `macos-12` image for `yt-dlp_macos`](https://github.com/yt-dlp/yt-dlp/commit/03334d639d5282cd4107edb32c623ba400262fc4) ([#10063](https://github.com/yt-dlp/yt-dlp/issues/10063)) by [bashonly](https://github.com/bashonly)\n- **cleanup**\n    - [Add more ruff rules](https://github.com/yt-dlp/yt-dlp/commit/add96eb9f84cfffe85682bf2fb85135746994ee8) ([#10149](https://github.com/yt-dlp/yt-dlp/issues/10149)) by [seproDev](https://github.com/seproDev)\n    - [Bump ruff to 0.5.x](https://github.com/yt-dlp/yt-dlp/commit/7814c50948a2b9a4c746441ecbc509ae563d5d1f) ([#10282](https://github.com/yt-dlp/yt-dlp/issues/10282)) by [seproDev](https://github.com/seproDev)\n    - Miscellaneous: [6aaf96a](https://github.com/yt-dlp/yt-dlp/commit/6aaf96a3d6e7d0d426e97e11a2fcf52fda00e733) by [bashonly](https://github.com/bashonly), [c-basalt](https://github.com/c-basalt), [jucor](https://github.com/jucor), [seproDev](https://github.com/seproDev)\n- **test**: download: [Raise on network errors](https://github.com/yt-dlp/yt-dlp/commit/54a63e80af82791d2f0985bd0176bb182963fd5f) ([#10283](https://github.com/yt-dlp/yt-dlp/issues/10283)) by [bashonly](https://github.com/bashonly), [seproDev](https://github.com/seproDev)\n\n### 2024.05.27\n\n#### Extractor changes\n- [Fix parsing of base URL in SMIL manifest](https://github.com/yt-dlp/yt-dlp/commit/26603d0b34898818992bee4598e0607c07059511) ([#9225](https://github.com/yt-dlp/yt-dlp/issues/9225)) by [seproDev](https://github.com/seproDev)\n- **peertube**: [Support livestreams](https://github.com/yt-dlp/yt-dlp/commit/12b248ce60be1aa1362edd839d915bba70dbee4b) ([#10044](https://github.com/yt-dlp/yt-dlp/issues/10044)) by [bashonly](https://github.com/bashonly), [trueauracoral](https://github.com/trueauracoral)\n- **piksel**: [Update domain](https://github.com/yt-dlp/yt-dlp/commit/ae2194e1dd4a99d32eb3cab7c48a0ff03101ef3b) ([#9223](https://github.com/yt-dlp/yt-dlp/issues/9223)) by [seproDev](https://github.com/seproDev)\n- **tiktok**: user: [Fix extraction loop](https://github.com/yt-dlp/yt-dlp/commit/c53c2e40fde8f2e15c7c62f8ca1a5d9e90ddc079) ([#10035](https://github.com/yt-dlp/yt-dlp/issues/10035)) by [bashonly](https://github.com/bashonly)\n\n#### Misc. changes\n- **cleanup**: Miscellaneous: [5e3e19c](https://github.com/yt-dlp/yt-dlp/commit/5e3e19c93c52830da98d9d1ed84ea7a559efefbd) by [bashonly](https://github.com/bashonly)\n\n### 2024.05.26\n\n#### Core changes\n- [Better warning when requested subs format not found](https://github.com/yt-dlp/yt-dlp/commit/7e4259dff0b681a3f0e8a930799ce0394328c86e) ([#9873](https://github.com/yt-dlp/yt-dlp/issues/9873)) by [DaPotato69](https://github.com/DaPotato69)\n- [Merged with youtube-dl a08f2b7](https://github.com/yt-dlp/yt-dlp/commit/a4da9db87b6486b270c15dfa07ab5bfedc83f6bd) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n- [Warn if lack of ffmpeg alters format selection](https://github.com/yt-dlp/yt-dlp/commit/96da9525043f78aca4544d01761b13b2140e9ae6) ([#9805](https://github.com/yt-dlp/yt-dlp/issues/9805)) by [pukkandan](https://github.com/pukkandan), [seproDev](https://github.com/seproDev)\n- **cookies**\n    - [Add `--cookies-from-browser` support for Whale](https://github.com/yt-dlp/yt-dlp/commit/dd9ad97b1fbdd36c086b8ba82328a4d954f78f8e) ([#9649](https://github.com/yt-dlp/yt-dlp/issues/9649)) by [roeniss](https://github.com/roeniss)\n    - [Get chrome session cookies with `--cookies-from-browser`](https://github.com/yt-dlp/yt-dlp/commit/f1f158976e38d38a260762accafe7bbe6d451151) ([#9747](https://github.com/yt-dlp/yt-dlp/issues/9747)) by [StefanLobbenmeier](https://github.com/StefanLobbenmeier)\n- **windows**: [Improve shell quoting and tests](https://github.com/yt-dlp/yt-dlp/commit/64766459e37451b665c1464073c28361fbcf1c25) ([#9802](https://github.com/yt-dlp/yt-dlp/issues/9802)) by [Grub4K](https://github.com/Grub4K) (With fixes in [7e26bd5](https://github.com/yt-dlp/yt-dlp/commit/7e26bd53f9c5893518fde81dfd0079ec08dd841e))\n\n#### Extractor changes\n- [Add POST data hash to `--write-pages` filenames](https://github.com/yt-dlp/yt-dlp/commit/61b17437dc14a1c7e90ff48a6198df77828c6df4) ([#9879](https://github.com/yt-dlp/yt-dlp/issues/9879)) by [minamotorin](https://github.com/minamotorin) (With fixes in [c999bac](https://github.com/yt-dlp/yt-dlp/commit/c999bac02c5a4f755b2a82488a975e91c988ffd8) by [bashonly](https://github.com/bashonly))\n- [Make `_search_nextjs_data` non fatal](https://github.com/yt-dlp/yt-dlp/commit/3ee1194288981c4f2c4abd8315326de0c424d2ce) ([#8937](https://github.com/yt-dlp/yt-dlp/issues/8937)) by [Grub4K](https://github.com/Grub4K)\n- **afreecatv**: live: [Add `cdn` extractor-arg](https://github.com/yt-dlp/yt-dlp/commit/315b3544296bb83012e20ee3af9d3cbf5600dd1c) ([#9666](https://github.com/yt-dlp/yt-dlp/issues/9666)) by [bashonly](https://github.com/bashonly)\n- **alura**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/fc2879ecb05aaad36869609d154e4321362c1f63) ([#9658](https://github.com/yt-dlp/yt-dlp/issues/9658)) by [hugohaa](https://github.com/hugohaa)\n- **artetv**: [Label forced subtitles](https://github.com/yt-dlp/yt-dlp/commit/7b5674949fd03a33b47b67b31d56a5adf1c48c91) ([#9945](https://github.com/yt-dlp/yt-dlp/issues/9945)) by [vtexier](https://github.com/vtexier)\n- **bbc**: [Fix and extend extraction](https://github.com/yt-dlp/yt-dlp/commit/7975ddf245d22af034d5b983eeb1c5ec6c2ce053) ([#9705](https://github.com/yt-dlp/yt-dlp/issues/9705)) by [dirkf](https://github.com/dirkf), [kylegustavo](https://github.com/kylegustavo), [pukkandan](https://github.com/pukkandan)\n- **bilibili**: [Fix `--geo-verification-proxy` support](https://github.com/yt-dlp/yt-dlp/commit/2338827072dacab0f15348b70aec8685feefc8d1) ([#9817](https://github.com/yt-dlp/yt-dlp/issues/9817)) by [fireattack](https://github.com/fireattack)\n- **bilibilispacevideo**\n    - [Better error message](https://github.com/yt-dlp/yt-dlp/commit/06d52c87314e0bbc16c43c405090843885577b88) ([#9839](https://github.com/yt-dlp/yt-dlp/issues/9839)) by [fireattack](https://github.com/fireattack)\n    - [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/4cc99d7b6cce8b39506ead01407445d576b63ee4) ([#9905](https://github.com/yt-dlp/yt-dlp/issues/9905)) by [c-basalt](https://github.com/c-basalt)\n- **boosty**: [Add cookies support](https://github.com/yt-dlp/yt-dlp/commit/145dc6f6563e80d2da1b3e9aea2ffa795b71622c) ([#9522](https://github.com/yt-dlp/yt-dlp/issues/9522)) by [RasmusAntons](https://github.com/RasmusAntons)\n- **brilliantpala**: [Fix login](https://github.com/yt-dlp/yt-dlp/commit/eead3bbc01f6529862bdad1f0b2adeabda4f006e) ([#9788](https://github.com/yt-dlp/yt-dlp/issues/9788)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **canalalpha**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/00a9f2e1f7fa69499221f2e8dd73a08efeef79bc) ([#9675](https://github.com/yt-dlp/yt-dlp/issues/9675)) by [kclauhk](https://github.com/kclauhk)\n- **cbc.ca**: player: [Improve `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/c8bf48f3a8fa29587e7c73ef5a7710385a5ea725) ([#9866](https://github.com/yt-dlp/yt-dlp/issues/9866)) by [carusocr](https://github.com/carusocr)\n- **cda**: [Fix age-gated web extraction](https://github.com/yt-dlp/yt-dlp/commit/6d8a53d870ff6795f509085bfbf3981417999038) ([#9939](https://github.com/yt-dlp/yt-dlp/issues/9939)) by [dirkf](https://github.com/dirkf), [emqi](https://github.com/emqi), [Podiumnoche](https://github.com/Podiumnoche), [Szpachlarz](https://github.com/Szpachlarz)\n- **commonmistakes**: [Raise error on blob URLs](https://github.com/yt-dlp/yt-dlp/commit/98d71d8c5e5dab08b561ee6f137e968d2a004262) ([#9897](https://github.com/yt-dlp/yt-dlp/issues/9897)) by [seproDev](https://github.com/seproDev)\n- **crunchyroll**\n    - [Always make metadata available](https://github.com/yt-dlp/yt-dlp/commit/cb2fb4a643949322adba561ca73bcba3221ec0c5) ([#9772](https://github.com/yt-dlp/yt-dlp/issues/9772)) by [bashonly](https://github.com/bashonly)\n    - [Fix auth and remove cookies support](https://github.com/yt-dlp/yt-dlp/commit/ff38a011d57b763f3a69bebd25a5dc9044a717ce) ([#9749](https://github.com/yt-dlp/yt-dlp/issues/9749)) by [bashonly](https://github.com/bashonly)\n    - [Fix stream extraction](https://github.com/yt-dlp/yt-dlp/commit/f2816634e3be88fe158b342ee33918de3c272a54) ([#10005](https://github.com/yt-dlp/yt-dlp/issues/10005)) by [bashonly](https://github.com/bashonly)\n    - [Support browser impersonation](https://github.com/yt-dlp/yt-dlp/commit/5904853ae5788509fdc4892cb7ecdfa9ae7f78e6) ([#9857](https://github.com/yt-dlp/yt-dlp/issues/9857)) by [bashonly](https://github.com/bashonly)\n- **dangalplay**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/0d067e77c3f5527946fb0c22ee1c7011994cba40) ([#10021](https://github.com/yt-dlp/yt-dlp/issues/10021)) by [bashonly](https://github.com/bashonly)\n- **discoveryplus**: [Fix dmax.de and related extractors](https://github.com/yt-dlp/yt-dlp/commit/90d2da311bbb5dc06f385ee428c7e4590936e995) ([#10020](https://github.com/yt-dlp/yt-dlp/issues/10020)) by [bashonly](https://github.com/bashonly)\n- **eplus**: [Handle URLs without videos](https://github.com/yt-dlp/yt-dlp/commit/351dc0bc334c4e1b5f00c152818c3ec0ed71f788) ([#9855](https://github.com/yt-dlp/yt-dlp/issues/9855)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **europarlwebstream**: [Support new URL format](https://github.com/yt-dlp/yt-dlp/commit/800a43983e5fb719526ce4cb3956216085c63268) ([#9647](https://github.com/yt-dlp/yt-dlp/issues/9647)) by [seproDev](https://github.com/seproDev), [voidful](https://github.com/voidful)\n- **facebook**: [Fix DASH formats extraction](https://github.com/yt-dlp/yt-dlp/commit/e3b42d8b1b8bcfff7ba146c19fc3f6f6ba843cea) ([#9734](https://github.com/yt-dlp/yt-dlp/issues/9734)) by [bashonly](https://github.com/bashonly)\n- **godresource**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/65e709d23530959075816e966c42179ad46e8e3b) ([#9629](https://github.com/yt-dlp/yt-dlp/issues/9629)) by [HobbyistDev](https://github.com/HobbyistDev)\n- **googledrive**: [Fix formats extraction](https://github.com/yt-dlp/yt-dlp/commit/85ec2a337ac325cf6427cbafd56f0a034c1a5218) ([#9908](https://github.com/yt-dlp/yt-dlp/issues/9908)) by [WyohKnott](https://github.com/WyohKnott)\n- **hearthisat**: [Improve `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/5bbfdb7c999b22f1aeca0c3489c167d6eb73013b) ([#9949](https://github.com/yt-dlp/yt-dlp/issues/9949)) by [bohwaz](https://github.com/bohwaz), [seproDev](https://github.com/seproDev)\n- **hytale**: [Use `CloudflareStreamIE` explicitly](https://github.com/yt-dlp/yt-dlp/commit/31b417e1d1ccc67d5c027bf8878f483dc34cb118) ([#9672](https://github.com/yt-dlp/yt-dlp/issues/9672)) by [llamasblade](https://github.com/llamasblade)\n- **instagram**: [Support `/reels/` URLs](https://github.com/yt-dlp/yt-dlp/commit/06cb0638392b607b47d3c2ac48eb2ebecb0f060d) ([#9539](https://github.com/yt-dlp/yt-dlp/issues/9539)) by [amir16yp](https://github.com/amir16yp)\n- **jiocinema**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/1463945ae5fb05986a0bd1aa02e41d1a08d93a02) ([#10026](https://github.com/yt-dlp/yt-dlp/issues/10026)) by [bashonly](https://github.com/bashonly)\n- **jiosaavn**: [Extract via API and fix playlists](https://github.com/yt-dlp/yt-dlp/commit/0c21c53885cf03f4040467ae8c44d7ff51016116) ([#9656](https://github.com/yt-dlp/yt-dlp/issues/9656)) by [bashonly](https://github.com/bashonly)\n- **lci**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/5a2eebc76770fca91ffabeff658d560f716fec80) ([#10025](https://github.com/yt-dlp/yt-dlp/issues/10025)) by [ocococococ](https://github.com/ocococococ)\n- **mixch**: [Extract comments](https://github.com/yt-dlp/yt-dlp/commit/b38018b781b062d5169d104ab430489aef8e7f1e) ([#9860](https://github.com/yt-dlp/yt-dlp/issues/9860)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **moviepilot**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/296df0da1d38a44d34c99b60a18066c301774537) ([#9366](https://github.com/yt-dlp/yt-dlp/issues/9366)) by [panatexxa](https://github.com/panatexxa)\n- **netease**: program: [Improve `--no-playlist` message](https://github.com/yt-dlp/yt-dlp/commit/73f12119b52d98281804b0c072b2ed6aa841ec88) ([#9488](https://github.com/yt-dlp/yt-dlp/issues/9488)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **nfb**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/0a1a8e3005f66c44bf67633dccd4df19c3fccd1a) ([#9650](https://github.com/yt-dlp/yt-dlp/issues/9650)) by [rrgomes](https://github.com/rrgomes)\n- **ntslive**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/be7db1a5a8c483726c511c30ea4689cbb8b27962) ([#9641](https://github.com/yt-dlp/yt-dlp/issues/9641)) by [lostfictions](https://github.com/lostfictions)\n- **orf**: on: [Improve extraction](https://github.com/yt-dlp/yt-dlp/commit/0dd53faeca2ba0ce138e4092d07b5f2dbf2422f9) ([#9677](https://github.com/yt-dlp/yt-dlp/issues/9677)) by [TuxCoder](https://github.com/TuxCoder)\n- **orftvthek**: [Remove extractor](https://github.com/yt-dlp/yt-dlp/commit/3779f2a307ba3ef1d28e107cdd71b221dfb4eb36) ([#10011](https://github.com/yt-dlp/yt-dlp/issues/10011)) by [seproDev](https://github.com/seproDev)\n- **patreon**\n    - [Extract multiple embeds](https://github.com/yt-dlp/yt-dlp/commit/036e0d92c6052465673d459678322ea03e61483d) ([#9850](https://github.com/yt-dlp/yt-dlp/issues/9850)) by [bashonly](https://github.com/bashonly)\n    - [Fix Vimeo embed extraction](https://github.com/yt-dlp/yt-dlp/commit/c9ce57d9bf51541da2381d99bc096a9d0ddf1f27) ([#9712](https://github.com/yt-dlp/yt-dlp/issues/9712)) by [bashonly](https://github.com/bashonly)\n- **piapro**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/3ba8de62d61d782256f5c1e9939a0762039657de) ([#9311](https://github.com/yt-dlp/yt-dlp/issues/9311)) by [FinnRG](https://github.com/FinnRG), [seproDev](https://github.com/seproDev)\n- **pornhub**: [Fix login by email address](https://github.com/yt-dlp/yt-dlp/commit/518c1afc1592cae3e4eb39dc646b5bc059333112) ([#9914](https://github.com/yt-dlp/yt-dlp/issues/9914)) by [feederbox826](https://github.com/feederbox826)\n- **qub**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/6b54cccdcb892bca3e55993480d8b86f1c7e6da6) ([#7019](https://github.com/yt-dlp/yt-dlp/issues/7019)) by [alexhuot1](https://github.com/alexhuot1), [dirkf](https://github.com/dirkf)\n- **reddit**: [Fix subtitles extraction](https://github.com/yt-dlp/yt-dlp/commit/82f4f4444e26daf35b7302c406fe2312f78f619e) ([#10006](https://github.com/yt-dlp/yt-dlp/issues/10006)) by [kclauhk](https://github.com/kclauhk)\n- **soundcloud**\n    - [Add `formats` extractor-arg](https://github.com/yt-dlp/yt-dlp/commit/beaf832c7a9d57833f365ce18f6115b88071b296) ([#10004](https://github.com/yt-dlp/yt-dlp/issues/10004)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n    - [Extract `genres`](https://github.com/yt-dlp/yt-dlp/commit/231c2eacc41b06b65c63edf94c0d04768a5da607) ([#9821](https://github.com/yt-dlp/yt-dlp/issues/9821)) by [bashonly](https://github.com/bashonly)\n- **taptap**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/63b569bc5e7d461753637a20ad84a575adee4c0a) ([#9776](https://github.com/yt-dlp/yt-dlp/issues/9776)) by [c-basalt](https://github.com/c-basalt)\n- **tele5**: [Overhaul extractor](https://github.com/yt-dlp/yt-dlp/commit/c92e4e625e9e6bbbbf8e3b20c3e7ebe57c16072d) ([#10024](https://github.com/yt-dlp/yt-dlp/issues/10024)) by [bashonly](https://github.com/bashonly)\n- **theatercomplextown**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/8056a3026ed6ec6a6d0ed56fdd7ebcd16e928341) ([#9754](https://github.com/yt-dlp/yt-dlp/issues/9754)) by [bashonly](https://github.com/bashonly)\n- **tiktok**\n    - [Add `device_id` extractor-arg](https://github.com/yt-dlp/yt-dlp/commit/3584b8390bd21c0393a3079eeee71aed56a1c1d8) ([#9951](https://github.com/yt-dlp/yt-dlp/issues/9951)) by [bashonly](https://github.com/bashonly)\n    - [Extract all web formats](https://github.com/yt-dlp/yt-dlp/commit/4ccd73fea0f6f4be343e1ec7f22dd03799addcf8) ([#9960](https://github.com/yt-dlp/yt-dlp/issues/9960)) by [bashonly](https://github.com/bashonly)\n    - [Extract via mobile API only if extractor-arg is passed](https://github.com/yt-dlp/yt-dlp/commit/41ba4a808b597a3afed78c89675a30deb6844450) ([#9938](https://github.com/yt-dlp/yt-dlp/issues/9938)) by [bashonly](https://github.com/bashonly)\n    - [Fix subtitles extraction](https://github.com/yt-dlp/yt-dlp/commit/eef1e9f44ff14c5e65b759bb1eafa3946cdaf719) ([#9961](https://github.com/yt-dlp/yt-dlp/issues/9961)) by [bashonly](https://github.com/bashonly)\n    - collection: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/119d41f27061d220d276a2d38cfc8d873437452a) ([#9986](https://github.com/yt-dlp/yt-dlp/issues/9986)) by [bashonly](https://github.com/bashonly), [imanoreotwe](https://github.com/imanoreotwe)\n    - user: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/347f13dd9bccc2b4db3ea25689410d45d8370ed4) ([#9661](https://github.com/yt-dlp/yt-dlp/issues/9661)) by [bashonly](https://github.com/bashonly)\n- **tv5monde**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/6db96268c521e945d42649607db1574f5d92e082) ([#9143](https://github.com/yt-dlp/yt-dlp/issues/9143)) by [alard](https://github.com/alard), [seproDev](https://github.com/seproDev)\n- **twitter**\n    - [Fix auth for x.com migration](https://github.com/yt-dlp/yt-dlp/commit/3e35aa32c74bc108375be8c8b6b3bfc90dfff1b4) ([#9952](https://github.com/yt-dlp/yt-dlp/issues/9952)) by [bashonly](https://github.com/bashonly)\n    - [Support x.com URLs](https://github.com/yt-dlp/yt-dlp/commit/4813173e4544f125d6f2afc31e600727d761b8dd) ([#9926](https://github.com/yt-dlp/yt-dlp/issues/9926)) by [bashonly](https://github.com/bashonly)\n- **vk**: [Improve format extraction](https://github.com/yt-dlp/yt-dlp/commit/df5c9e733aaba703cf285c0372b6d61629330c82) ([#9885](https://github.com/yt-dlp/yt-dlp/issues/9885)) by [seproDev](https://github.com/seproDev)\n- **wrestleuniverse**: [Avoid partial stream formats](https://github.com/yt-dlp/yt-dlp/commit/c4853655cb9a793129280806af643de43c48f4d5) ([#9800](https://github.com/yt-dlp/yt-dlp/issues/9800)) by [bashonly](https://github.com/bashonly)\n- **xiaohongshu**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/a2e9031605d87c469be9ce98dbbdf4960b727338) ([#9646](https://github.com/yt-dlp/yt-dlp/issues/9646)) by [HobbyistDev](https://github.com/HobbyistDev)\n- **xvideos**: quickies: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/b207d26f83fb8ab0ce56df74dff43ff583a3264f) ([#9834](https://github.com/yt-dlp/yt-dlp/issues/9834)) by [JakeFinley96](https://github.com/JakeFinley96)\n- **youporn**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/351368cb9a6731b886a58f5a10fd6b302bbe47be) ([#8827](https://github.com/yt-dlp/yt-dlp/issues/8827)) by [The-MAGI](https://github.com/The-MAGI)\n- **youtube**\n    - [Add `mediaconnect` client](https://github.com/yt-dlp/yt-dlp/commit/cf212d0a331aba05c32117573f760cdf3af8c62f) ([#9546](https://github.com/yt-dlp/yt-dlp/issues/9546)) by [clienthax](https://github.com/clienthax)\n    - [Extract upload timestamp if available](https://github.com/yt-dlp/yt-dlp/commit/96a134dea6397a5f2131947c427aac52c8b4e677) ([#9856](https://github.com/yt-dlp/yt-dlp/issues/9856)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Fix comments extraction](https://github.com/yt-dlp/yt-dlp/commit/8e15177b4113c355989881e4e030f695a9b59c3a) ([#9775](https://github.com/yt-dlp/yt-dlp/issues/9775)) by [bbilly1](https://github.com/bbilly1), [jakeogh](https://github.com/jakeogh), [minamotorin](https://github.com/minamotorin), [shoxie007](https://github.com/shoxie007)\n    - [Remove `android` from default clients](https://github.com/yt-dlp/yt-dlp/commit/12d8ea8246fa901de302ff5cc748caddadc82f41) ([#9553](https://github.com/yt-dlp/yt-dlp/issues/9553)) by [bashonly](https://github.com/bashonly), [coletdjnz](https://github.com/coletdjnz)\n- **zenyandex**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/c4b87dd885ee5391e5f481e7c8bd550a7c543623) ([#9813](https://github.com/yt-dlp/yt-dlp/issues/9813)) by [src-tinkerer](https://github.com/src-tinkerer)\n\n#### Networking changes\n- [Add `extensions` attribute to `Response`](https://github.com/yt-dlp/yt-dlp/commit/bec9a59e8ec82c18e3bf9268eaa436793dd52e35) ([#9756](https://github.com/yt-dlp/yt-dlp/issues/9756)) by [bashonly](https://github.com/bashonly)\n- **Request Handler**\n    - requests\n        - [Patch support for `requests` 2.32.2+](https://github.com/yt-dlp/yt-dlp/commit/3f7999533ebe41c2a579d91b4e4cb211cfcd3bc0) ([#9992](https://github.com/yt-dlp/yt-dlp/issues/9992)) by [Grub4K](https://github.com/Grub4K)\n        - [Update to `requests` 2.32.0](https://github.com/yt-dlp/yt-dlp/commit/c36513f1be2ef3d3cec864accbffda1afaa06ffd) ([#9980](https://github.com/yt-dlp/yt-dlp/issues/9980)) by [coletdjnz](https://github.com/coletdjnz)\n\n#### Misc. changes\n- [Add `hatch`, `ruff`, `pre-commit` and improve dev docs](https://github.com/yt-dlp/yt-dlp/commit/e897bd8292a41999cf51dba91b390db5643c72db) ([#7409](https://github.com/yt-dlp/yt-dlp/issues/7409)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K), [seproDev](https://github.com/seproDev)\n- **build**\n    - [Migrate `linux_exe` to static musl builds](https://github.com/yt-dlp/yt-dlp/commit/ac817bc83efd939dca3e40c4b527d0ccfc77172b) ([#9811](https://github.com/yt-dlp/yt-dlp/issues/9811)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n    - [Normalize `curl_cffi` group to `curl-cffi`](https://github.com/yt-dlp/yt-dlp/commit/02483bea1c4dbe1bace8ca4d19700104fbb8a00f) ([#9698](https://github.com/yt-dlp/yt-dlp/issues/9698)) by [bashonly](https://github.com/bashonly) (With fixes in [89f535e](https://github.com/yt-dlp/yt-dlp/commit/89f535e2656964b4061c25a7739d4d6ba0a30568))\n    - [Run `macos_legacy` job on `macos-12`](https://github.com/yt-dlp/yt-dlp/commit/1a366403d9c26b992faa77e00f4d02ead57559e3) ([#9804](https://github.com/yt-dlp/yt-dlp/issues/9804)) by [bashonly](https://github.com/bashonly)\n    - [`macos` job requires `setuptools<70`](https://github.com/yt-dlp/yt-dlp/commit/78c57cc0e0998b8ed90e4306f410aa4be4115cd7) ([#9993](https://github.com/yt-dlp/yt-dlp/issues/9993)) by [bashonly](https://github.com/bashonly)\n- **cleanup**\n    - [Remove questionable extractors](https://github.com/yt-dlp/yt-dlp/commit/01395a34345d1c6ba1b73ca92f94dd200dc45341) ([#9911](https://github.com/yt-dlp/yt-dlp/issues/9911)) by [seproDev](https://github.com/seproDev)\n    - Miscellaneous: [5c019f6](https://github.com/yt-dlp/yt-dlp/commit/5c019f6328ad40d66561eac3c4de0b3cd070d0f6), [ae2af11](https://github.com/yt-dlp/yt-dlp/commit/ae2af1104f80caf2f47544763a33db2c17a3e1de) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K), [seproDev](https://github.com/seproDev)\n- **test**\n    - [Add HTTP proxy tests](https://github.com/yt-dlp/yt-dlp/commit/3c7a287e281d9f9a353dce8902ff78a84c24a040) ([#9578](https://github.com/yt-dlp/yt-dlp/issues/9578)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Fix connect timeout test](https://github.com/yt-dlp/yt-dlp/commit/53b4d44f55cca66ac33dab092ef2a30b1164b684) ([#9906](https://github.com/yt-dlp/yt-dlp/issues/9906)) by [coletdjnz](https://github.com/coletdjnz)\n\n### 2024.04.09\n\n#### Important changes\n- Security: [[CVE-2024-22423](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-22423)] [Prevent RCE when using `--exec` with `%q` on Windows](https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-hjq6-52gw-2g7p)\n    - The shell escape function now properly escapes `%`, `\\` and `\\n`.\n    - `utils.Popen` has been patched accordingly.\n\n#### Core changes\n- [Add new option `--progress-delta`](https://github.com/yt-dlp/yt-dlp/commit/9590cc6b4768e190183d7d071a6c78170889116a) ([#9082](https://github.com/yt-dlp/yt-dlp/issues/9082)) by [Grub4K](https://github.com/Grub4K)\n- [Add new options `--impersonate` and `--list-impersonate-targets`](https://github.com/yt-dlp/yt-dlp/commit/0b81d4d252bd065ccd352722987ea34fe17f9244) by [bashonly](https://github.com/bashonly), [coletdjnz](https://github.com/coletdjnz), [Grub4K](https://github.com/Grub4K), [pukkandan](https://github.com/pukkandan)\n- [Add option `--no-break-on-existing`](https://github.com/yt-dlp/yt-dlp/commit/16be117729150b2784f3b17755c886cb0cf73374) ([#9610](https://github.com/yt-dlp/yt-dlp/issues/9610)) by [bashonly](https://github.com/bashonly)\n- [Fix `filesize_approx` calculation](https://github.com/yt-dlp/yt-dlp/commit/86e3b82261e8ebc6c6707c09544c9dfb8907c0fd) ([#9560](https://github.com/yt-dlp/yt-dlp/issues/9560)) by [pukkandan](https://github.com/pukkandan), [seproDev](https://github.com/seproDev)\n- [Infer `acodec` for single-codec containers](https://github.com/yt-dlp/yt-dlp/commit/86a972033e05fea80e5fe7f2aff6723dbe2f3952) by [pukkandan](https://github.com/pukkandan)\n- [Prevent RCE when using `--exec` with `%q` (CVE-2024-22423)](https://github.com/yt-dlp/yt-dlp/commit/ff07792676f404ffff6ee61b5638c9dc1a33a37a) by [Grub4K](https://github.com/Grub4K)\n- **cookies**: [Add `--cookies-from-browser` support for Firefox Flatpak](https://github.com/yt-dlp/yt-dlp/commit/2ab2651a4a7be18939e2b4cb21be79fe477c797a) ([#9619](https://github.com/yt-dlp/yt-dlp/issues/9619)) by [un-def](https://github.com/un-def)\n- **utils**\n    - `traverse_obj`\n        - [Allow unbranching using `all` and `any`](https://github.com/yt-dlp/yt-dlp/commit/3699eeb67cad333272b14a42dd3843d93fda1a2e) ([#9571](https://github.com/yt-dlp/yt-dlp/issues/9571)) by [Grub4K](https://github.com/Grub4K)\n        - [Convenience improvements](https://github.com/yt-dlp/yt-dlp/commit/32abfb00bdbd119ca675fdc6d1719331f0a2741a) ([#9577](https://github.com/yt-dlp/yt-dlp/issues/9577)) by [Grub4K](https://github.com/Grub4K)\n\n#### Extractor changes\n- [Add extractor impersonate API](https://github.com/yt-dlp/yt-dlp/commit/50c29352312f5662acf9a64b0012766f5c40af61) ([#9474](https://github.com/yt-dlp/yt-dlp/issues/9474)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K), [pukkandan](https://github.com/pukkandan)\n- **afreecatv**\n    - [Overhaul extractor](https://github.com/yt-dlp/yt-dlp/commit/9415f1a5ef88482ebafe3083e8bcb778ac512df7) ([#9566](https://github.com/yt-dlp/yt-dlp/issues/9566)) by [bashonly](https://github.com/bashonly), [Tomoka1](https://github.com/Tomoka1)\n    - live: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/9073ae6458f4c6a832aa832c67174c61852869be) ([#9348](https://github.com/yt-dlp/yt-dlp/issues/9348)) by [hui1601](https://github.com/hui1601)\n- **asobistage**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/0284f1fee202302a78888420f933deae19d9f4e1) ([#8735](https://github.com/yt-dlp/yt-dlp/issues/8735)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **box**: [Support URLs without file IDs](https://github.com/yt-dlp/yt-dlp/commit/07f5b2f7570fd9ac85aed17f4c0118f6eac77beb) ([#9504](https://github.com/yt-dlp/yt-dlp/issues/9504)) by [shreyasminocha](https://github.com/shreyasminocha)\n- **cbc.ca**: player: [Support new URL format](https://github.com/yt-dlp/yt-dlp/commit/b49d5ffc53a72d8245ba319ff07bdc5b8c6a4f0c) ([#9561](https://github.com/yt-dlp/yt-dlp/issues/9561)) by [trainman261](https://github.com/trainman261)\n- **crunchyroll**\n    - [Extract `vo_adaptive_hls` formats by default](https://github.com/yt-dlp/yt-dlp/commit/be77923ffe842f667971019460f6005f3cad01eb) ([#9447](https://github.com/yt-dlp/yt-dlp/issues/9447)) by [bashonly](https://github.com/bashonly)\n    - [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/954e57e405f79188450eb30103a9308732cd318f) ([#9615](https://github.com/yt-dlp/yt-dlp/issues/9615)) by [bytedream](https://github.com/bytedream)\n- **dropbox**: [Fix formats extraction](https://github.com/yt-dlp/yt-dlp/commit/a48cc86d6f6b20427553620c2ddb990ede6a4b41) ([#9627](https://github.com/yt-dlp/yt-dlp/issues/9627)) by [bashonly](https://github.com/bashonly)\n- **fathom**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/bc2b8c0596fd6b75af24822c4f0f1da6783d71f7) ([#9495](https://github.com/yt-dlp/yt-dlp/issues/9495)) by [src-tinkerer](https://github.com/src-tinkerer)\n- **gofile**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/0da66980d3193cad3dae0120cddddbfcabddf7a1) ([#9446](https://github.com/yt-dlp/yt-dlp/issues/9446)) by [jazz1611](https://github.com/jazz1611)\n- **imgur**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/86d2f4d24849af0d1f3af7c0e2ac43bf8a058f74) ([#9471](https://github.com/yt-dlp/yt-dlp/issues/9471)) by [trwstin](https://github.com/trwstin)\n- **jiosaavn**\n    - [Extract artists](https://github.com/yt-dlp/yt-dlp/commit/0ae16ceb1846cc4e609b70ce7c5d8e7458efceb2) ([#9612](https://github.com/yt-dlp/yt-dlp/issues/9612)) by [bashonly](https://github.com/bashonly)\n    - [Fix format extensions](https://github.com/yt-dlp/yt-dlp/commit/443e206ec41e64ca2aef61d8ef91640fb69b3113) ([#9609](https://github.com/yt-dlp/yt-dlp/issues/9609)) by [bashonly](https://github.com/bashonly)\n    - [Support playlists](https://github.com/yt-dlp/yt-dlp/commit/2e94602f241f6e41bdc48576c61089435529339b) ([#9622](https://github.com/yt-dlp/yt-dlp/issues/9622)) by [bashonly](https://github.com/bashonly)\n- **joqrag**: [Fix live status detection](https://github.com/yt-dlp/yt-dlp/commit/f2fd449b46c4058222e1744f7a35caa20b2d003d) ([#9624](https://github.com/yt-dlp/yt-dlp/issues/9624)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **kick**: [Support browser impersonation](https://github.com/yt-dlp/yt-dlp/commit/c8a61a910096c77ce08dad5e1b2fbda5eb964156) ([#9611](https://github.com/yt-dlp/yt-dlp/issues/9611)) by [bashonly](https://github.com/bashonly)\n- **loom**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/f859ed3ba1e8b129ae6a467592c65687e73fbca1) ([#8686](https://github.com/yt-dlp/yt-dlp/issues/8686)) by [bashonly](https://github.com/bashonly), [hruzgar](https://github.com/hruzgar)\n- **medici**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/4cd9e251b9abada107b10830de997bf4d79ca369) ([#9518](https://github.com/yt-dlp/yt-dlp/issues/9518)) by [Offert4324](https://github.com/Offert4324)\n- **mixch**\n    - [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/4c3b7a0769706f7f0ea24adf1f219d5ae82d2b07) ([#9608](https://github.com/yt-dlp/yt-dlp/issues/9608)) by [bashonly](https://github.com/bashonly), [nipotan](https://github.com/nipotan)\n    - archive: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/c59de48e2bb4c681b03b93b584a05f52609ce4a0) ([#8761](https://github.com/yt-dlp/yt-dlp/issues/8761)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **nhk**: [Fix NHK World extractors](https://github.com/yt-dlp/yt-dlp/commit/4af9d5c2f6aa81403ae2a8a5ae3cc824730f0b86) ([#9623](https://github.com/yt-dlp/yt-dlp/issues/9623)) by [bashonly](https://github.com/bashonly)\n- **patreon**: [Do not extract dead embed URLs](https://github.com/yt-dlp/yt-dlp/commit/36b240f9a72af57eb2c9d927ebb7fd1c917ebf18) ([#9613](https://github.com/yt-dlp/yt-dlp/issues/9613)) by [johnvictorfs](https://github.com/johnvictorfs)\n- **radio1be**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/36baaa10e06715ccba06b78885b2042c4844c826) ([#9122](https://github.com/yt-dlp/yt-dlp/issues/9122)) by [HobbyistDev](https://github.com/HobbyistDev)\n- **sharepoint**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/ff349ff94aae0b2b148bd3670f7c91d39c2f1d8e) ([#6531](https://github.com/yt-dlp/yt-dlp/issues/6531)) by [bashonly](https://github.com/bashonly), [C0D3D3V](https://github.com/C0D3D3V)\n- **sonylivseries**: [Fix season extraction](https://github.com/yt-dlp/yt-dlp/commit/f2868b26e917354203f82a370ad2396646edb813) ([#9423](https://github.com/yt-dlp/yt-dlp/issues/9423)) by [bashonly](https://github.com/bashonly)\n- **soundcloud**\n    - [Adjust format sorting](https://github.com/yt-dlp/yt-dlp/commit/a2d0840739cddd585d24e0ce4796394fc8a4fa2e) ([#9584](https://github.com/yt-dlp/yt-dlp/issues/9584)) by [bashonly](https://github.com/bashonly)\n    - [Support cookies](https://github.com/yt-dlp/yt-dlp/commit/97362712a1f2b04e735bdf54f749ad99165a62fe) ([#9586](https://github.com/yt-dlp/yt-dlp/issues/9586)) by [bashonly](https://github.com/bashonly)\n    - [Support retries for API rate-limit](https://github.com/yt-dlp/yt-dlp/commit/246571ae1d867df8bf31a056bdf3bbbfd398366a) ([#9585](https://github.com/yt-dlp/yt-dlp/issues/9585)) by [bashonly](https://github.com/bashonly)\n- **thisoldhouse**: [Support Brightcove embeds](https://github.com/yt-dlp/yt-dlp/commit/0df63cce69026d2f4c0cbb4dd36163e83eac93dc) ([#9576](https://github.com/yt-dlp/yt-dlp/issues/9576)) by [bashonly](https://github.com/bashonly)\n- **tiktok**\n    - [Fix API extraction](https://github.com/yt-dlp/yt-dlp/commit/cb61e20c266facabb7a30f9ce53bd79dfc158475) ([#9548](https://github.com/yt-dlp/yt-dlp/issues/9548)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n    - [Prefer non-bytevc2 formats](https://github.com/yt-dlp/yt-dlp/commit/63f685f341f35f6f02b0368d1ba53bdb5b520410) ([#9575](https://github.com/yt-dlp/yt-dlp/issues/9575)) by [bashonly](https://github.com/bashonly)\n    - [Restore `carrier_region` API parameter](https://github.com/yt-dlp/yt-dlp/commit/fc53ec13ff1ee926a3e533a68cfca8acc887b661) ([#9637](https://github.com/yt-dlp/yt-dlp/issues/9637)) by [bashonly](https://github.com/bashonly)\n    - [Update API hostname](https://github.com/yt-dlp/yt-dlp/commit/8c05b3ebae23c5b444857549a85b84004c01a536) ([#9444](https://github.com/yt-dlp/yt-dlp/issues/9444)) by [bashonly](https://github.com/bashonly)\n- **twitch**: [Extract AV1 and HEVC formats](https://github.com/yt-dlp/yt-dlp/commit/02f93ff51b3ff9436d60c4993562b366eaae8851) ([#9158](https://github.com/yt-dlp/yt-dlp/issues/9158)) by [kasper93](https://github.com/kasper93)\n- **vkplay**: [Fix `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/b15b0c1d2106437ec61a5c436c543e8760eac160) ([#9636](https://github.com/yt-dlp/yt-dlp/issues/9636)) by [bashonly](https://github.com/bashonly)\n- **xvideos**: [Support new URL format](https://github.com/yt-dlp/yt-dlp/commit/aa7e9ae4f48276bd5d0173966c77db9484f65a0a) ([#9502](https://github.com/yt-dlp/yt-dlp/issues/9502)) by [sta1us](https://github.com/sta1us)\n- **youtube**\n    - [Calculate more accurate `filesize`](https://github.com/yt-dlp/yt-dlp/commit/a25a424323267e3f6f9f63c0b62df499bd7b8d46) by [pukkandan](https://github.com/pukkandan)\n    - [Update `android` params](https://github.com/yt-dlp/yt-dlp/commit/e7b17fce14775bd2448695c8eb7379b8d31d3537) by [pukkandan](https://github.com/pukkandan)\n    - search: [Fix params for uncensored results](https://github.com/yt-dlp/yt-dlp/commit/17d248a58781e2588d18a5ebe00c441d10011fcd) ([#9456](https://github.com/yt-dlp/yt-dlp/issues/9456)) by [alb](https://github.com/alb), [pukkandan](https://github.com/pukkandan)\n\n#### Downloader changes\n- **ffmpeg**: [Accept output args from info dict](https://github.com/yt-dlp/yt-dlp/commit/9c42b7eef547e826e9fcc7beb6706a2523949d05) ([#9278](https://github.com/yt-dlp/yt-dlp/issues/9278)) by [bashonly](https://github.com/bashonly)\n\n#### Networking changes\n- [Respect `SSLKEYLOGFILE` environment variable](https://github.com/yt-dlp/yt-dlp/commit/79a451e5763eda8b10d00684d5d3378f3255ee01) ([#9543](https://github.com/yt-dlp/yt-dlp/issues/9543)) by [luiso1979](https://github.com/luiso1979)\n- **Request Handler**\n    - curlcffi: [Add support for `curl_cffi`](https://github.com/yt-dlp/yt-dlp/commit/52f5be1f1e0dc45bb397ab950f564721976a39bf) by [bashonly](https://github.com/bashonly), [coletdjnz](https://github.com/coletdjnz), [Grub4K](https://github.com/Grub4K), [pukkandan](https://github.com/pukkandan)\n    - websockets: [Workaround race condition causing issues on PyPy](https://github.com/yt-dlp/yt-dlp/commit/e5d4f11104ce7ea1717a90eea82c0f7d230ea5d5) ([#9514](https://github.com/yt-dlp/yt-dlp/issues/9514)) by [coletdjnz](https://github.com/coletdjnz)\n\n#### Misc. changes\n- **build**\n    - [Do not include `curl_cffi` in `macos_legacy`](https://github.com/yt-dlp/yt-dlp/commit/b19ae095fdddd43c2a2c67d10fbe0d9a645bb98f) ([#9653](https://github.com/yt-dlp/yt-dlp/issues/9653)) by [bashonly](https://github.com/bashonly)\n    - [Optional dependencies cleanup](https://github.com/yt-dlp/yt-dlp/commit/58dd0f8d1eee6bc9fdc57f1923bed772fa3c946d) ([#9550](https://github.com/yt-dlp/yt-dlp/issues/9550)) by [bashonly](https://github.com/bashonly)\n    - [Print SHA sums to GHA logs](https://github.com/yt-dlp/yt-dlp/commit/e8032503b9517465b0e86d776fc1e60d8795d673) ([#9582](https://github.com/yt-dlp/yt-dlp/issues/9582)) by [bashonly](https://github.com/bashonly)\n    - [Update changelog for tarball and sdist](https://github.com/yt-dlp/yt-dlp/commit/17b96974a334688f76b57d350e07cae8cda46877) ([#9425](https://github.com/yt-dlp/yt-dlp/issues/9425)) by [bashonly](https://github.com/bashonly)\n- **cleanup**\n    - [Standardize `import datetime as dt`](https://github.com/yt-dlp/yt-dlp/commit/c305a25c1b16bcf7a5ec499c3b786ed1e2c748da) ([#8978](https://github.com/yt-dlp/yt-dlp/issues/8978)) by [pukkandan](https://github.com/pukkandan)\n    - ie: [No `from` stdlib imports in extractors](https://github.com/yt-dlp/yt-dlp/commit/e3a3ed8a981d9395c4859b6ef56cd02bc3148db2) by [pukkandan](https://github.com/pukkandan)\n    - Miscellaneous: [216f6a3](https://github.com/yt-dlp/yt-dlp/commit/216f6a3cb57824e6a3c859649ce058c199b1b247) by [bashonly](https://github.com/bashonly), [pukkandan](https://github.com/pukkandan)\n- **docs**\n    - [Update yt-dlp tagline](https://github.com/yt-dlp/yt-dlp/commit/388c979ac63a8774339fac2516fe1cc852b4276e) ([#9481](https://github.com/yt-dlp/yt-dlp/issues/9481)) by [bashonly](https://github.com/bashonly), [coletdjnz](https://github.com/coletdjnz), [Grub4K](https://github.com/Grub4K), [pukkandan](https://github.com/pukkandan), [seproDev](https://github.com/seproDev)\n    - [Various manpage fixes](https://github.com/yt-dlp/yt-dlp/commit/df0e138fc02ae2764a44f2f59fc93c756c4d3ee2) by [leoheitmannruiz](https://github.com/leoheitmannruiz)\n- **test**\n    - [Workaround websocket server hanging](https://github.com/yt-dlp/yt-dlp/commit/f849d77ab54788446b995d256e1ee0894c4fb927) ([#9467](https://github.com/yt-dlp/yt-dlp/issues/9467)) by [coletdjnz](https://github.com/coletdjnz)\n    - `traversal`: [Separate traversal tests](https://github.com/yt-dlp/yt-dlp/commit/979ce2e786f2ee3fc783b6dc1ef4188d8805c923) ([#9574](https://github.com/yt-dlp/yt-dlp/issues/9574)) by [Grub4K](https://github.com/Grub4K)\n\n### 2024.03.10\n\n#### Core changes\n- [Add `--compat-options 2023`](https://github.com/yt-dlp/yt-dlp/commit/3725b4f0c93ca3943e6300013a9670e4ab757fda) ([#9084](https://github.com/yt-dlp/yt-dlp/issues/9084)) by [Grub4K](https://github.com/Grub4K) (With fixes in [ffff1bc](https://github.com/yt-dlp/yt-dlp/commit/ffff1bc6598fc7a9258e51bc153cab812467f9f9) by [pukkandan](https://github.com/pukkandan))\n- [Create `ydl._request_director` when needed](https://github.com/yt-dlp/yt-dlp/commit/069b2aedae2279668b6051627a81fc4fbd9c146a) by [pukkandan](https://github.com/pukkandan) (With fixes in [dbd8b1b](https://github.com/yt-dlp/yt-dlp/commit/dbd8b1bff9afd8f05f982bcd52c20bc173c266ca) by [Grub4k](https://github.com/Grub4k))\n- [Don't select storyboard formats as fallback](https://github.com/yt-dlp/yt-dlp/commit/d63eae7e7ffb1f3e733e552b9e5e82355bfba214) by [bashonly](https://github.com/bashonly)\n- [Handle `--load-info-json` format selection errors](https://github.com/yt-dlp/yt-dlp/commit/263a4b55ac17a796e8991ca8d2d86a3c349f8a60) ([#9392](https://github.com/yt-dlp/yt-dlp/issues/9392)) by [bashonly](https://github.com/bashonly)\n- [Warn user when not launching through shell on Windows](https://github.com/yt-dlp/yt-dlp/commit/6a6cdcd1824a14e3b336332c8f31f65497b8c4b8) ([#9250](https://github.com/yt-dlp/yt-dlp/issues/9250)) by [Grub4K](https://github.com/Grub4K), [seproDev](https://github.com/seproDev)\n- **cookies**\n    - [Fix `--cookies-from-browser` for `snap` Firefox](https://github.com/yt-dlp/yt-dlp/commit/cbed249aaa053a3f425b9bafc97f8dbd71c44487) ([#9016](https://github.com/yt-dlp/yt-dlp/issues/9016)) by [Grub4K](https://github.com/Grub4K)\n    - [Fix `--cookies-from-browser` with macOS Firefox profiles](https://github.com/yt-dlp/yt-dlp/commit/85b33f5c163f60dbd089a6b9bc2ba1366d3ddf93) ([#8909](https://github.com/yt-dlp/yt-dlp/issues/8909)) by [RalphORama](https://github.com/RalphORama)\n    - [Improve error message for Windows `--cookies-from-browser chrome` issue](https://github.com/yt-dlp/yt-dlp/commit/2792092afd367e39251ace1fb2819c855ab8919f) ([#9080](https://github.com/yt-dlp/yt-dlp/issues/9080)) by [Grub4K](https://github.com/Grub4K)\n- **plugins**: [Handle `PermissionError`](https://github.com/yt-dlp/yt-dlp/commit/9a8afadd172b7cab143f0049959fa64973589d94) ([#9229](https://github.com/yt-dlp/yt-dlp/issues/9229)) by [pukkandan](https://github.com/pukkandan), [syntaxsurge](https://github.com/syntaxsurge)\n- **utils**\n    - [Improve `repr` of `DateRange`, `match_filter_func`](https://github.com/yt-dlp/yt-dlp/commit/45491a2a30da4d1723cfa9288cb664813bb09afb) by [pukkandan](https://github.com/pukkandan)\n    - `traverse_obj`: [Support `xml.etree.ElementTree.Element`](https://github.com/yt-dlp/yt-dlp/commit/ffbd4f2a02fee387ea5e0a267ce32df5259111ac) ([#8911](https://github.com/yt-dlp/yt-dlp/issues/8911)) by [Grub4K](https://github.com/Grub4K)\n- **webvtt**: [Don't parse single fragment files](https://github.com/yt-dlp/yt-dlp/commit/f24e44e8cbd88ce338d52f594a19330f64d38b50) ([#9034](https://github.com/yt-dlp/yt-dlp/issues/9034)) by [seproDev](https://github.com/seproDev)\n\n#### Extractor changes\n- [Migrate commonly plural fields to lists](https://github.com/yt-dlp/yt-dlp/commit/104a7b5a46dc1805157fb4cc11c05876934d37c1) ([#8917](https://github.com/yt-dlp/yt-dlp/issues/8917)) by [llistochek](https://github.com/llistochek), [pukkandan](https://github.com/pukkandan) (With fixes in [b136e2a](https://github.com/yt-dlp/yt-dlp/commit/b136e2af341f7a88028aea4c5cd50efe2fa9b182) by [bashonly](https://github.com/bashonly))\n- [Support multi-period MPD streams](https://github.com/yt-dlp/yt-dlp/commit/4ce57d3b873c2887814cbec03d029533e82f7db5) ([#6654](https://github.com/yt-dlp/yt-dlp/issues/6654)) by [alard](https://github.com/alard), [pukkandan](https://github.com/pukkandan)\n- **abematv**\n    - [Fix extraction with cache](https://github.com/yt-dlp/yt-dlp/commit/c51316f8a69fbd0080f2720777d42ab438e254a3) ([#8895](https://github.com/yt-dlp/yt-dlp/issues/8895)) by [sefidel](https://github.com/sefidel)\n    - [Support login for playlists](https://github.com/yt-dlp/yt-dlp/commit/8226a3818f804478c756cf460baa9bf3a3b062a5) ([#8901](https://github.com/yt-dlp/yt-dlp/issues/8901)) by [sefidel](https://github.com/sefidel)\n- **adn**\n    - [Add support for German site](https://github.com/yt-dlp/yt-dlp/commit/5eb1458be4767385a9bf1d570ff08e46100cbaa2) ([#8708](https://github.com/yt-dlp/yt-dlp/issues/8708)) by [infanf](https://github.com/infanf)\n    - [Improve auth error handling](https://github.com/yt-dlp/yt-dlp/commit/9526b1f179d19f75284eceaa5e0ee381af18cf19) ([#9068](https://github.com/yt-dlp/yt-dlp/issues/9068)) by [infanf](https://github.com/infanf)\n- **aenetworks**: [Rating should be optional for AP extraction](https://github.com/yt-dlp/yt-dlp/commit/014cb5774d7afe624b6eb4e07f7be924b9e5e186) ([#9005](https://github.com/yt-dlp/yt-dlp/issues/9005)) by [agibson-fl](https://github.com/agibson-fl)\n- **altcensored**: channel: [Fix playlist extraction](https://github.com/yt-dlp/yt-dlp/commit/e28e135d6fd6a430fed3e20dfe1a8c8bbc5f9185) ([#9297](https://github.com/yt-dlp/yt-dlp/issues/9297)) by [marcdumais](https://github.com/marcdumais)\n- **amadeustv**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/e641aab7a61df7406df60ebfe0c77bd5186b2b41) ([#8744](https://github.com/yt-dlp/yt-dlp/issues/8744)) by [ArnauvGilotra](https://github.com/ArnauvGilotra)\n- **ant1newsgrembed**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/1ed5ee2f045f717e814f84ba461dadc58e712266) ([#9191](https://github.com/yt-dlp/yt-dlp/issues/9191)) by [seproDev](https://github.com/seproDev)\n- **archiveorg**: [Fix format URL encoding](https://github.com/yt-dlp/yt-dlp/commit/3894ab9574748188bbacbd925a3971eda6fa2bb0) ([#9279](https://github.com/yt-dlp/yt-dlp/issues/9279)) by [bashonly](https://github.com/bashonly)\n- **ard**\n    - mediathek\n        - [Revert to using old id](https://github.com/yt-dlp/yt-dlp/commit/b6951271ac014761c9c317b9cecd5e8e139cfa7c) ([#8916](https://github.com/yt-dlp/yt-dlp/issues/8916)) by [Grub4K](https://github.com/Grub4K)\n        - [Support cookies to verify age](https://github.com/yt-dlp/yt-dlp/commit/c099ec9392b0283dde34b290d1a04158ad8eb882) ([#9037](https://github.com/yt-dlp/yt-dlp/issues/9037)) by [StefanLobbenmeier](https://github.com/StefanLobbenmeier)\n- **art19**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/999ea80beb053491089d256104c4188aced3110f) ([#9099](https://github.com/yt-dlp/yt-dlp/issues/9099)) by [seproDev](https://github.com/seproDev)\n- **artetv**: [Separate closed captions](https://github.com/yt-dlp/yt-dlp/commit/393b487a4ea391c44e811505ec98531031d7e81e) ([#8231](https://github.com/yt-dlp/yt-dlp/issues/8231)) by [Nicals](https://github.com/Nicals), [seproDev](https://github.com/seproDev)\n- **asobichannel**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/12f042740550c06552819374e2251deb7a519bab) ([#8700](https://github.com/yt-dlp/yt-dlp/issues/8700)) by [Snack-X](https://github.com/Snack-X)\n- **bigo**: [Fix JSON extraction](https://github.com/yt-dlp/yt-dlp/commit/85a2d07c1f82c2082b568963d1c32ad3fc848f61) ([#8893](https://github.com/yt-dlp/yt-dlp/issues/8893)) by [DmitryScaletta](https://github.com/DmitryScaletta)\n- **bilibili**\n    - [Add referer header and fix metadata extraction](https://github.com/yt-dlp/yt-dlp/commit/1713c882730a928ac344c099874d2093fc2c8b51) ([#8832](https://github.com/yt-dlp/yt-dlp/issues/8832)) by [SirElderling](https://github.com/SirElderling) (With fixes in [f1570ab](https://github.com/yt-dlp/yt-dlp/commit/f1570ab84d5f49564256c620063d2d3e9ed4acf0) by [TobiX](https://github.com/TobiX))\n    - [Support `--no-playlist`](https://github.com/yt-dlp/yt-dlp/commit/e439693f729daf6fb15457baea1bca10ef5da34d) ([#9139](https://github.com/yt-dlp/yt-dlp/issues/9139)) by [c-basalt](https://github.com/c-basalt)\n- **bilibilisearch**: [Set cookie to fix extraction](https://github.com/yt-dlp/yt-dlp/commit/ffa017cfc5973b265c92248546fcf5020dc43eaf) ([#9119](https://github.com/yt-dlp/yt-dlp/issues/9119)) by [c-basalt](https://github.com/c-basalt)\n- **biliintl**: [Fix and improve subtitles extraction](https://github.com/yt-dlp/yt-dlp/commit/cf6413e840476c15e5b166dc2f7cc2a90a4a9aad) ([#7077](https://github.com/yt-dlp/yt-dlp/issues/7077)) by [dirkf](https://github.com/dirkf), [HobbyistDev](https://github.com/HobbyistDev), [itachi-19](https://github.com/itachi-19), [seproDev](https://github.com/seproDev)\n- **boosty**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/540b68298192874c75ad5ee4589bed64d02a7d55) ([#9144](https://github.com/yt-dlp/yt-dlp/issues/9144)) by [un-def](https://github.com/un-def)\n- **ccma**: [Extract 1080p DASH formats](https://github.com/yt-dlp/yt-dlp/commit/4253e3b7f483127bd812bdac02466f4a5b47ff34) ([#9130](https://github.com/yt-dlp/yt-dlp/issues/9130)) by [seproDev](https://github.com/seproDev)\n- **cctv**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/6ad11fef65474bcf70f3a8556850d93c141e44a2) ([#9325](https://github.com/yt-dlp/yt-dlp/issues/9325)) by [src-tinkerer](https://github.com/src-tinkerer)\n- **chzzk**\n    - [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/ba6b0c8261e9f0a6373885736ff90a89dd1fb614) ([#8887](https://github.com/yt-dlp/yt-dlp/issues/8887)) by [DmitryScaletta](https://github.com/DmitryScaletta)\n    - live: [Support `--wait-for-video`](https://github.com/yt-dlp/yt-dlp/commit/804f2366117b7065552a1c3cddb9ec19b688a5c1) ([#9309](https://github.com/yt-dlp/yt-dlp/issues/9309)) by [hui1601](https://github.com/hui1601)\n- **cineverse**: [Detect when login required](https://github.com/yt-dlp/yt-dlp/commit/fc2cc626f07328a6c71b5e21853e4cfa7b1e6256) ([#9081](https://github.com/yt-dlp/yt-dlp/issues/9081)) by [garret1317](https://github.com/garret1317)\n- **cloudflarestream**\n    - [Extract subtitles](https://github.com/yt-dlp/yt-dlp/commit/4d9dc0abe24ad5d9d22a16f40fc61137dcd103f7) ([#9007](https://github.com/yt-dlp/yt-dlp/issues/9007)) by [Bibhav48](https://github.com/Bibhav48)\n    - [Improve `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/f3d5face83f948c24bcb91e06d4fa6e8622d7d79) ([#9280](https://github.com/yt-dlp/yt-dlp/issues/9280)) by [bashonly](https://github.com/bashonly)\n    - [Improve embed detection](https://github.com/yt-dlp/yt-dlp/commit/464c919ea82aefdf35f138a1ab2dd0bb8fb7fd0e) ([#9287](https://github.com/yt-dlp/yt-dlp/issues/9287)) by [bashonly](https://github.com/bashonly)\n- **cloudycdn, lsm**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/5dda3b291f59f388f953337e9fb09a94b64aaf34) ([#8643](https://github.com/yt-dlp/yt-dlp/issues/8643)) by [Caesim404](https://github.com/Caesim404)\n- **cnbc**: [Overhaul extractors](https://github.com/yt-dlp/yt-dlp/commit/998dffb5a2343ec709b3d6bbf2bf019649080239) ([#8741](https://github.com/yt-dlp/yt-dlp/issues/8741)) by [gonzalezjo](https://github.com/gonzalezjo), [Noor-5](https://github.com/Noor-5), [ruiminggu](https://github.com/ruiminggu), [seproDev](https://github.com/seproDev), [zhijinwuu](https://github.com/zhijinwuu)\n- **craftsy**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/96f3924bac174f2fd401f86f78e77d7e0c5ee008) ([#9384](https://github.com/yt-dlp/yt-dlp/issues/9384)) by [bashonly](https://github.com/bashonly)\n- **crooksandliars**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/03536126d32bd861e38536371f0cd5f1b71dcb7a) ([#9192](https://github.com/yt-dlp/yt-dlp/issues/9192)) by [seproDev](https://github.com/seproDev)\n- **crtvg**: [Fix `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/785ab1af7f131e73444634ad57b39478651a43d3) ([#9404](https://github.com/yt-dlp/yt-dlp/issues/9404)) by [Xpl0itU](https://github.com/Xpl0itU)\n- **dailymotion**: [Support search](https://github.com/yt-dlp/yt-dlp/commit/11ffa92a61e5847b3dfa8975f91ecb3ac2178841) ([#8292](https://github.com/yt-dlp/yt-dlp/issues/8292)) by [drzraf](https://github.com/drzraf), [seproDev](https://github.com/seproDev)\n- **douyin**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/9ff946645568e71046487571eefa9cb524a5189b) ([#9239](https://github.com/yt-dlp/yt-dlp/issues/9239)) by [114514ns](https://github.com/114514ns), [bashonly](https://github.com/bashonly) (With fixes in [e546e5d](https://github.com/yt-dlp/yt-dlp/commit/e546e5d3b33a50075e574a2e7b8eda7ea874d21e) by [bashonly](https://github.com/bashonly))\n- **duboku**: [Fix m3u8 formats extraction](https://github.com/yt-dlp/yt-dlp/commit/d3d4187da90a6b85f4ebae4bb07693cc9b412d75) ([#9161](https://github.com/yt-dlp/yt-dlp/issues/9161)) by [DmitryScaletta](https://github.com/DmitryScaletta)\n- **dumpert**: [Improve `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/eedb38ce4093500e19279d50b708fb9c18bf4dbf) ([#9320](https://github.com/yt-dlp/yt-dlp/issues/9320)) by [rvsit](https://github.com/rvsit)\n- **elementorembed**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/6171b050d70435008e64fa06aa6f19c4e5bec75f) ([#8948](https://github.com/yt-dlp/yt-dlp/issues/8948)) by [pompos02](https://github.com/pompos02), [seproDev](https://github.com/seproDev)\n- **eporner**: [Extract AV1 formats](https://github.com/yt-dlp/yt-dlp/commit/96d0f8c1cb8aec250c5614bfde6b5fb95f10819b) ([#9028](https://github.com/yt-dlp/yt-dlp/issues/9028)) by [michal-repo](https://github.com/michal-repo)\n- **errjupiter**\n    - [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/a514cc2feb1c3b265b19acab11487acad8bb3ab0) ([#8549](https://github.com/yt-dlp/yt-dlp/issues/8549)) by [glensc](https://github.com/glensc)\n    - [Improve `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/80ed8bdeba5a945f127ef9ab055a4823329a1210) ([#9218](https://github.com/yt-dlp/yt-dlp/issues/9218)) by [glensc](https://github.com/glensc)\n- **facebook**\n    - [Add new ID format](https://github.com/yt-dlp/yt-dlp/commit/cf9af2c7f1fedd881a157b3fbe725e5494b00924) ([#3824](https://github.com/yt-dlp/yt-dlp/issues/3824)) by [kclauhk](https://github.com/kclauhk), [Wikidepia](https://github.com/Wikidepia)\n    - [Improve extraction](https://github.com/yt-dlp/yt-dlp/commit/2e30b5567b5c6113d46b39163db5b044aea8667e) by [jingtra](https://github.com/jingtra), [ringus1](https://github.com/ringus1)\n    - [Improve thumbnail extraction](https://github.com/yt-dlp/yt-dlp/commit/3c4d3ee491b0ec22ed3cade51d943d3d27141ba7) ([#9060](https://github.com/yt-dlp/yt-dlp/issues/9060)) by [kclauhk](https://github.com/kclauhk)\n    - [Set format HTTP chunk size](https://github.com/yt-dlp/yt-dlp/commit/5b68c478fb0b93ea6b8fac23f50e12217fa063db) ([#9058](https://github.com/yt-dlp/yt-dlp/issues/9058)) by [bashonly](https://github.com/bashonly), [kclauhk](https://github.com/kclauhk)\n    - [Support events](https://github.com/yt-dlp/yt-dlp/commit/9b5efaf86b99a2664fff9fc725d275f766c3221d) ([#9055](https://github.com/yt-dlp/yt-dlp/issues/9055)) by [kclauhk](https://github.com/kclauhk)\n    - [Support permalink URLs](https://github.com/yt-dlp/yt-dlp/commit/87286e93af949c4e6a0f8ba34af6a1ab5aa102b6) ([#9061](https://github.com/yt-dlp/yt-dlp/issues/9061)) by [kclauhk](https://github.com/kclauhk)\n    - ads: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/a40b0070c2a00d3ed839897462171a82323aa875) ([#8870](https://github.com/yt-dlp/yt-dlp/issues/8870)) by [kclauhk](https://github.com/kclauhk)\n- **flextv**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/4f043479090dc8a7e06e0bb53691e5414320dfb2) ([#9178](https://github.com/yt-dlp/yt-dlp/issues/9178)) by [DmitryScaletta](https://github.com/DmitryScaletta)\n- **floatplane**: [Improve metadata extraction](https://github.com/yt-dlp/yt-dlp/commit/9cd90447907a59c8a2727583f4a755fb23ed8cd3) ([#8934](https://github.com/yt-dlp/yt-dlp/issues/8934)) by [chtk](https://github.com/chtk)\n- **francetv**\n    - [Fix DAI livestreams](https://github.com/yt-dlp/yt-dlp/commit/e4fbe5f886a6693f2466877c12e99c30c5442ace) ([#9380](https://github.com/yt-dlp/yt-dlp/issues/9380)) by [bashonly](https://github.com/bashonly)\n    - [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/9749ac7fecbfda391afbadf2870797ce0e382622) ([#9333](https://github.com/yt-dlp/yt-dlp/issues/9333)) by [bashonly](https://github.com/bashonly)\n    - [Fix m3u8 formats extraction](https://github.com/yt-dlp/yt-dlp/commit/ede624d1db649f5a4b61f8abbb746f365322de27) ([#9347](https://github.com/yt-dlp/yt-dlp/issues/9347)) by [bashonly](https://github.com/bashonly)\n- **funk**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/cd0443fb14e2ed805abb02792473457553a123d1) ([#9194](https://github.com/yt-dlp/yt-dlp/issues/9194)) by [seproDev](https://github.com/seproDev)\n- **generic**: [Follow https redirects properly](https://github.com/yt-dlp/yt-dlp/commit/c8c9039e640495700f76a13496e3418bdd4382ba) ([#9121](https://github.com/yt-dlp/yt-dlp/issues/9121)) by [seproDev](https://github.com/seproDev)\n- **getcourseru**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/4310b6650eeb5630295f4591b37720877878c57a) ([#8873](https://github.com/yt-dlp/yt-dlp/issues/8873)) by [divStar](https://github.com/divStar), [seproDev](https://github.com/seproDev)\n- **gofile**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/77c2472ca1ef9050a66aa68bc5fa1bee88706c66) ([#9074](https://github.com/yt-dlp/yt-dlp/issues/9074)) by [jazz1611](https://github.com/jazz1611)\n- **googledrive**: [Fix source file extraction](https://github.com/yt-dlp/yt-dlp/commit/5498729c59b03a9511c64552da3ba2f802166f8d) ([#8990](https://github.com/yt-dlp/yt-dlp/issues/8990)) by [jazz1611](https://github.com/jazz1611)\n- **goplay**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/7e90e34fa4617b53f8c8a9e69f460508cb1f51b0) ([#6654](https://github.com/yt-dlp/yt-dlp/issues/6654)) by [alard](https://github.com/alard)\n- **gopro**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/4a07a455bbf7acf87550053bbba949c828e350ba) ([#9019](https://github.com/yt-dlp/yt-dlp/issues/9019)) by [stilor](https://github.com/stilor)\n- **ilpost**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/aa5dcc4ee65916a36cbe1b1b5b29b9110c3163ed) ([#9001](https://github.com/yt-dlp/yt-dlp/issues/9001)) by [CapacitorSet](https://github.com/CapacitorSet)\n- **jiosaavnsong**: [Support more bitrates](https://github.com/yt-dlp/yt-dlp/commit/5154dc0a687528f995cde22b5ff63f82c740e98a) ([#8834](https://github.com/yt-dlp/yt-dlp/issues/8834)) by [alien-developers](https://github.com/alien-developers), [bashonly](https://github.com/bashonly)\n- **kukululive**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/20cdad5a2c0499d5a6746f5466a2ab0c97b75884) ([#8877](https://github.com/yt-dlp/yt-dlp/issues/8877)) by [DmitryScaletta](https://github.com/DmitryScaletta)\n- **lefigarovideoembed**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/9401736fd08767c58af45a1e36ff5929c5fa1ac9) ([#9198](https://github.com/yt-dlp/yt-dlp/issues/9198)) by [seproDev](https://github.com/seproDev)\n- **linkedin**: [Fix metadata and extract subtitles](https://github.com/yt-dlp/yt-dlp/commit/017adb28e7fe7b8c8fc472332d86740f31141519) ([#9056](https://github.com/yt-dlp/yt-dlp/issues/9056)) by [barsnick](https://github.com/barsnick)\n- **magellantv**: [Support episodes](https://github.com/yt-dlp/yt-dlp/commit/3dc9232e1aa58fe3c2d8cafb50e8162d6f0e891e) ([#9199](https://github.com/yt-dlp/yt-dlp/issues/9199)) by [seproDev](https://github.com/seproDev)\n- **magentamusik**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/5e2e24b2c5795756d81785b06b10723ddb6db7b2) ([#7790](https://github.com/yt-dlp/yt-dlp/issues/7790)) by [pwaldhauer](https://github.com/pwaldhauer), [seproDev](https://github.com/seproDev)\n- **medaltv**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/02e343f6ef6d7b3f9087ff69e4a1db0b4b4a5c5d) ([#9098](https://github.com/yt-dlp/yt-dlp/issues/9098)) by [Danish-H](https://github.com/Danish-H)\n- **mlbarticle**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/50e06e21a68e336198198bda332b8e7d2314f201) ([#9021](https://github.com/yt-dlp/yt-dlp/issues/9021)) by [HobbyistDev](https://github.com/HobbyistDev)\n- **motherless**: [Support uploader playlists](https://github.com/yt-dlp/yt-dlp/commit/9f1e9dab21bbe651544c8f4663b0e615dc450e4d) ([#8994](https://github.com/yt-dlp/yt-dlp/issues/8994)) by [dasidiot](https://github.com/dasidiot)\n- **mujrozhlas**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/4170b3d7120e06db3391eef39c5add18a1ddf2c3) ([#9306](https://github.com/yt-dlp/yt-dlp/issues/9306)) by [bashonly](https://github.com/bashonly)\n- **mx3**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/5a63454b3637b3603434026cddfeac509218b90e) ([#8736](https://github.com/yt-dlp/yt-dlp/issues/8736)) by [martinxyz](https://github.com/martinxyz)\n- **naver**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/a281beba8d8f007cf220f96dd1d9412bb070c7d8) ([#8883](https://github.com/yt-dlp/yt-dlp/issues/8883)) by [seproDev](https://github.com/seproDev)\n- **nebula**: [Support podcasts](https://github.com/yt-dlp/yt-dlp/commit/0de09c5b9ed619d4a93d7c451c6ddff0381de808) ([#9140](https://github.com/yt-dlp/yt-dlp/issues/9140)) by [c-basalt](https://github.com/c-basalt), [seproDev](https://github.com/seproDev)\n- **nerdcubedfeed**: [Overhaul extractor](https://github.com/yt-dlp/yt-dlp/commit/29a74a6126101aabaa1726ae41b1ca55cf26e7a7) ([#9269](https://github.com/yt-dlp/yt-dlp/issues/9269)) by [seproDev](https://github.com/seproDev)\n- **newgrounds**\n    - [Fix login and clean up extraction](https://github.com/yt-dlp/yt-dlp/commit/0fcefb92f3ebfc5cada19c1e85a715f020d0f333) ([#9356](https://github.com/yt-dlp/yt-dlp/issues/9356)) by [Grub4K](https://github.com/Grub4K), [mrmedieval](https://github.com/mrmedieval)\n    - user: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/3e083191cdc34dd8c482da9a9b4bc682f824cb9d) ([#9046](https://github.com/yt-dlp/yt-dlp/issues/9046)) by [u-spec-png](https://github.com/u-spec-png)\n- **nfb**: [Add support for onf.ca and series](https://github.com/yt-dlp/yt-dlp/commit/4b8b0dded8c65cd5b2ab2e858058ba98c9bf49ff) ([#8997](https://github.com/yt-dlp/yt-dlp/issues/8997)) by [bashonly](https://github.com/bashonly), [rrgomes](https://github.com/rrgomes)\n- **nhkradiru**: [Extract extended description](https://github.com/yt-dlp/yt-dlp/commit/4392447d9404e3c25cfeb8f5bdfff31b0448da39) ([#9162](https://github.com/yt-dlp/yt-dlp/issues/9162)) by [garret1317](https://github.com/garret1317)\n- **nhkradirulive**: [Make metadata extraction non-fatal](https://github.com/yt-dlp/yt-dlp/commit/5af1f19787f7d652fce72dd3ab9536cdd980fe85) ([#8956](https://github.com/yt-dlp/yt-dlp/issues/8956)) by [garret1317](https://github.com/garret1317)\n- **niconico**\n    - [Remove legacy danmaku extraction](https://github.com/yt-dlp/yt-dlp/commit/974d444039c8bbffb57265c6792cd52d169fe1b9) ([#9209](https://github.com/yt-dlp/yt-dlp/issues/9209)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n    - [Support DMS formats](https://github.com/yt-dlp/yt-dlp/commit/aa13a8e3dd3b698cc40ec438988b1ad834e11a41) ([#9282](https://github.com/yt-dlp/yt-dlp/issues/9282)) by [pzhlkj6612](https://github.com/pzhlkj6612), [xpadev-net](https://github.com/xpadev-net) (With fixes in [40966e8](https://github.com/yt-dlp/yt-dlp/commit/40966e8da27bbf770dacf9be9363fcc3ad72cc9f) by [pzhlkj6612](https://github.com/pzhlkj6612))\n- **ninaprotocol**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/62c65bfaf81e04e6746f6fdbafe384eb3edddfbc) ([#8946](https://github.com/yt-dlp/yt-dlp/issues/8946)) by [RaduManole](https://github.com/RaduManole), [seproDev](https://github.com/seproDev)\n- **ninenews**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/43694ce13c5a9f1afca8b02b8b2b9b1576d6503d) ([#8840](https://github.com/yt-dlp/yt-dlp/issues/8840)) by [SirElderling](https://github.com/SirElderling)\n- **nova**: [Fix embed extraction](https://github.com/yt-dlp/yt-dlp/commit/c168d8791d0974a8a8fcb3b4a4bc2d830df51622) ([#9221](https://github.com/yt-dlp/yt-dlp/issues/9221)) by [seproDev](https://github.com/seproDev)\n- **ntvru**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/7a29cbbd5fd7363e7e8535ee1506b7052465d13f) ([#9276](https://github.com/yt-dlp/yt-dlp/issues/9276)) by [bashonly](https://github.com/bashonly), [dirkf](https://github.com/dirkf)\n- **nuum**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/acaf806c15f0a802ba286c23af02a10cf4bd4731) ([#8868](https://github.com/yt-dlp/yt-dlp/issues/8868)) by [DmitryScaletta](https://github.com/DmitryScaletta), [seproDev](https://github.com/seproDev)\n- **nytimes**\n    - [Extract timestamp](https://github.com/yt-dlp/yt-dlp/commit/05420227aaab60a39c0f9ade069c5862be36b1fa) ([#9142](https://github.com/yt-dlp/yt-dlp/issues/9142)) by [SirElderling](https://github.com/SirElderling)\n    - [Overhaul extractors](https://github.com/yt-dlp/yt-dlp/commit/07256b9fee23960799024b95d5972abc7174aa81) ([#9075](https://github.com/yt-dlp/yt-dlp/issues/9075)) by [SirElderling](https://github.com/SirElderling)\n- **onefootball**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/644738ddaa45428cb0babd41ead22454e5a2545e) ([#9222](https://github.com/yt-dlp/yt-dlp/issues/9222)) by [seproDev](https://github.com/seproDev)\n- **openrec**: [Pass referer for m3u8 formats](https://github.com/yt-dlp/yt-dlp/commit/f591e605dfee4085ec007d6d056c943cbcacc429) ([#9253](https://github.com/yt-dlp/yt-dlp/issues/9253)) by [fireattack](https://github.com/fireattack)\n- **orf**: on: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/a0d50aabc5462aee302bd3f2663d3a3554875789) ([#9113](https://github.com/yt-dlp/yt-dlp/issues/9113)) by [HobbyistDev](https://github.com/HobbyistDev)\n- **patreon**: [Fix embedded HLS extraction](https://github.com/yt-dlp/yt-dlp/commit/f0e8bc7c60b61fe18b63116c975609d76b904771) ([#8993](https://github.com/yt-dlp/yt-dlp/issues/8993)) by [johnvictorfs](https://github.com/johnvictorfs)\n- **peertube**: [Update instances](https://github.com/yt-dlp/yt-dlp/commit/35d96982f1033e36215d323317981ee17e8ab0d5) ([#9070](https://github.com/yt-dlp/yt-dlp/issues/9070)) by [Chocobozzz](https://github.com/Chocobozzz)\n- **piapro**: [Improve `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/8e6e3651727b0b85764857fc6329fe5e0a3f00de) ([#8999](https://github.com/yt-dlp/yt-dlp/issues/8999)) by [FinnRG](https://github.com/FinnRG)\n- **playsuisse**: [Add login support](https://github.com/yt-dlp/yt-dlp/commit/cae6e461073fb7c32fd32052a3e6721447c469bc) ([#9077](https://github.com/yt-dlp/yt-dlp/issues/9077)) by [chkuendig](https://github.com/chkuendig)\n- **pornhub**: [Fix login support](https://github.com/yt-dlp/yt-dlp/commit/de954c1b4d3a6db8a6525507e65303c7bb03f39f) ([#9227](https://github.com/yt-dlp/yt-dlp/issues/9227)) by [feederbox826](https://github.com/feederbox826)\n- **pr0gramm**: [Enable POL filter and provide tags without login](https://github.com/yt-dlp/yt-dlp/commit/5f25f348f9eb5db842b1ec6799f95bebb7ba35a7) ([#9051](https://github.com/yt-dlp/yt-dlp/issues/9051)) by [Grub4K](https://github.com/Grub4K)\n- **prankcastpost**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/a2bac6b7adb7b0e955125838e20bb39eece630ce) ([#8933](https://github.com/yt-dlp/yt-dlp/issues/8933)) by [columndeeply](https://github.com/columndeeply)\n- **radiko**: [Extract more metadata](https://github.com/yt-dlp/yt-dlp/commit/e3ce2b385ec1f03fac9d4210c57fda77134495fc) ([#9115](https://github.com/yt-dlp/yt-dlp/issues/9115)) by [YoshichikaAAA](https://github.com/YoshichikaAAA)\n- **rai**\n    - [Filter unavailable formats](https://github.com/yt-dlp/yt-dlp/commit/f78814923748277e7067b796f25870686fb46205) ([#9189](https://github.com/yt-dlp/yt-dlp/issues/9189)) by [nixxo](https://github.com/nixxo)\n    - [Fix m3u8 formats extraction](https://github.com/yt-dlp/yt-dlp/commit/8f423cf8051fbfeedd57cca00d106012e6e86a97) ([#9291](https://github.com/yt-dlp/yt-dlp/issues/9291)) by [nixxo](https://github.com/nixxo)\n- **redcdnlivx, sejm**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/fcaa2e735b00b15a2b0d9f55f4187c654b4b5b39) ([#8676](https://github.com/yt-dlp/yt-dlp/issues/8676)) by [selfisekai](https://github.com/selfisekai)\n- **redtube**\n    - [Fix formats extraction](https://github.com/yt-dlp/yt-dlp/commit/c91d8b1899403daff6fc15206ad32de8db17fb8f) ([#9076](https://github.com/yt-dlp/yt-dlp/issues/9076)) by [jazz1611](https://github.com/jazz1611)\n    - [Support redtube.com.br URLs](https://github.com/yt-dlp/yt-dlp/commit/4a6ff0b47a700dee3ee5c54804c31965308479ae) ([#9103](https://github.com/yt-dlp/yt-dlp/issues/9103)) by [jazz1611](https://github.com/jazz1611)\n- **ridehome**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/cd7086c0d54ec1d7e02a30bd5bd934bdb2c54642) ([#8875](https://github.com/yt-dlp/yt-dlp/issues/8875)) by [SirElderling](https://github.com/SirElderling)\n- **rinsefmartistplaylist**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/1a36dbad712d359ec1c5b73d9bbbe562c03e9660) ([#8794](https://github.com/yt-dlp/yt-dlp/issues/8794)) by [SirElderling](https://github.com/SirElderling)\n- **roosterteeth**\n    - [Add Brightcove fallback](https://github.com/yt-dlp/yt-dlp/commit/b2cc150ad83ba20ceb2d6e73d09854eed3c2d05c) ([#9403](https://github.com/yt-dlp/yt-dlp/issues/9403)) by [bashonly](https://github.com/bashonly)\n    - [Extract ad-free streams](https://github.com/yt-dlp/yt-dlp/commit/dd29e6e5fdf0f3758cb0829e73749832768f1a4e) ([#9355](https://github.com/yt-dlp/yt-dlp/issues/9355)) by [jkmartindale](https://github.com/jkmartindale)\n    - [Extract release date and timestamp](https://github.com/yt-dlp/yt-dlp/commit/dfd8c0b69683b1c11beea039a96dd2949026c1d7) ([#9393](https://github.com/yt-dlp/yt-dlp/issues/9393)) by [bashonly](https://github.com/bashonly)\n    - [Support bonus features](https://github.com/yt-dlp/yt-dlp/commit/8993721ecb34867b52b79f6e92b233008d1cbe78) ([#9406](https://github.com/yt-dlp/yt-dlp/issues/9406)) by [Bl4Cc4t](https://github.com/Bl4Cc4t)\n- **rule34video**\n    - [Extract `creators`](https://github.com/yt-dlp/yt-dlp/commit/3d9dc2f3590e10abf1561ebdaed96734a740587c) ([#9258](https://github.com/yt-dlp/yt-dlp/issues/9258)) by [gmes78](https://github.com/gmes78)\n    - [Extract more metadata](https://github.com/yt-dlp/yt-dlp/commit/fee2d8d9c38f9b5f0a8df347c1e698983339c34d) ([#7416](https://github.com/yt-dlp/yt-dlp/issues/7416)) by [gmes78](https://github.com/gmes78)\n    - [Fix `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/c0ecceeefe6ebd27452d9d8f20658f83ae121d04) ([#9044](https://github.com/yt-dlp/yt-dlp/issues/9044)) by [gmes78](https://github.com/gmes78)\n- **rumblechannel**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/0023af81fbce01984f35b34ecaf8562739831227) ([#9092](https://github.com/yt-dlp/yt-dlp/issues/9092)) by [Pranaxcau](https://github.com/Pranaxcau), [vista-narvas](https://github.com/vista-narvas)\n- **screencastify**: [Update `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/0bee29493ca8f91a0055a3706c7c94f5860188df) ([#9232](https://github.com/yt-dlp/yt-dlp/issues/9232)) by [seproDev](https://github.com/seproDev)\n- **svtpage**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/ddd4b5e10a653bee78e656107710021c1b82934c) ([#8938](https://github.com/yt-dlp/yt-dlp/issues/8938)) by [diman8](https://github.com/diman8)\n- **swearnet**: [Raise for login required](https://github.com/yt-dlp/yt-dlp/commit/b05640d532c43a52c0a0da096bb2dbd51e105ec0) ([#9281](https://github.com/yt-dlp/yt-dlp/issues/9281)) by [bashonly](https://github.com/bashonly)\n- **tiktok**: [Fix webpage extraction](https://github.com/yt-dlp/yt-dlp/commit/d9b4154cbcb979d7e30af3a73b1bee422aae5aa3) ([#9327](https://github.com/yt-dlp/yt-dlp/issues/9327)) by [bashonly](https://github.com/bashonly)\n- **trtworld**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/8ab84650837e58046430c9f4b615c56a8886e071) ([#8701](https://github.com/yt-dlp/yt-dlp/issues/8701)) by [ufukk](https://github.com/ufukk)\n- **tvp**: [Support livestreams](https://github.com/yt-dlp/yt-dlp/commit/882e3b753c79c7799ce135c3a5edb72494b576af) ([#8860](https://github.com/yt-dlp/yt-dlp/issues/8860)) by [selfisekai](https://github.com/selfisekai)\n- **twitch**: [Fix m3u8 extraction](https://github.com/yt-dlp/yt-dlp/commit/5b8c69ae04444a4c80a5a99917e40f75a116c3b8) ([#8960](https://github.com/yt-dlp/yt-dlp/issues/8960)) by [DmitryScaletta](https://github.com/DmitryScaletta)\n- **twitter**\n    - [Extract bitrate for HLS audio formats](https://github.com/yt-dlp/yt-dlp/commit/28e53d60df9b8aadd52a93504e30e885c9c35262) ([#9257](https://github.com/yt-dlp/yt-dlp/issues/9257)) by [bashonly](https://github.com/bashonly)\n    - [Extract numeric `channel_id`](https://github.com/yt-dlp/yt-dlp/commit/55f1833376505ed1e4be0516b09bb3ea4425e8a4) ([#9263](https://github.com/yt-dlp/yt-dlp/issues/9263)) by [bashonly](https://github.com/bashonly)\n- **txxx**: [Extract thumbnails](https://github.com/yt-dlp/yt-dlp/commit/d79c7e9937c388c68b722ab7450960e43ef776d6) ([#9063](https://github.com/yt-dlp/yt-dlp/issues/9063)) by [shmohawk](https://github.com/shmohawk)\n- **utreon**: [Support playeur.com](https://github.com/yt-dlp/yt-dlp/commit/41d6b61e9852a5b97f47cc8a7718b31fb23f0aea) ([#9182](https://github.com/yt-dlp/yt-dlp/issues/9182)) by [DmitryScaletta](https://github.com/DmitryScaletta)\n- **vbox7**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/67bb70cd700c8d4c3149cd9e0539a5f32c3d1ce6) ([#9100](https://github.com/yt-dlp/yt-dlp/issues/9100)) by [seproDev](https://github.com/seproDev)\n- **viewlift**: [Add support for chorki.com](https://github.com/yt-dlp/yt-dlp/commit/41b6cdb4197aaf7ad82bdad6885eb5d5c64acd74) ([#9095](https://github.com/yt-dlp/yt-dlp/issues/9095)) by [NurTasin](https://github.com/NurTasin)\n- **vimeo**\n    - [Extract `live_status` and `release_timestamp`](https://github.com/yt-dlp/yt-dlp/commit/f0426e9ca57dd14b82e6c13afc17947614f1e8eb) ([#9290](https://github.com/yt-dlp/yt-dlp/issues/9290)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n    - [Fix API headers](https://github.com/yt-dlp/yt-dlp/commit/8e765755f7f4909e1b535e61b7376b2d66e1ba6a) ([#9125](https://github.com/yt-dlp/yt-dlp/issues/9125)) by [bashonly](https://github.com/bashonly)\n    - [Fix login](https://github.com/yt-dlp/yt-dlp/commit/2e8de097ad82da378e97005e8f1ff7e5aebca585) ([#9274](https://github.com/yt-dlp/yt-dlp/issues/9274)) by [bashonly](https://github.com/bashonly)\n- **viously**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/95e82347b398d8bb160767cdd975edecd62cbabd) ([#8927](https://github.com/yt-dlp/yt-dlp/issues/8927)) by [nbr23](https://github.com/nbr23), [seproDev](https://github.com/seproDev)\n- **youtube**\n    - [Better error when all player responses are skipped](https://github.com/yt-dlp/yt-dlp/commit/5eedc208ec89d6284777060c94aadd06502338b9) ([#9083](https://github.com/yt-dlp/yt-dlp/issues/9083)) by [Grub4K](https://github.com/Grub4K), [pukkandan](https://github.com/pukkandan)\n    - [Bump Android and iOS client versions](https://github.com/yt-dlp/yt-dlp/commit/413d3675804599bc8fe419c19e36490fd8f0b30f) ([#9317](https://github.com/yt-dlp/yt-dlp/issues/9317)) by [bashonly](https://github.com/bashonly)\n    - [Further bump client versions](https://github.com/yt-dlp/yt-dlp/commit/7aad06541e543fa3452d3d2513e6f079aad1f99b) ([#9395](https://github.com/yt-dlp/yt-dlp/issues/9395)) by [bashonly](https://github.com/bashonly)\n    - tab: [Fix `tags` extraction](https://github.com/yt-dlp/yt-dlp/commit/8828f4576bd862438d4fbf634f1d6ab18a217b0e) ([#9413](https://github.com/yt-dlp/yt-dlp/issues/9413)) by [x11x](https://github.com/x11x)\n- **zenporn**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/f00c0def7434fac3c88503c2a77c4b2419b8e5ca) ([#8509](https://github.com/yt-dlp/yt-dlp/issues/8509)) by [SirElderling](https://github.com/SirElderling)\n- **zetland**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/2f4b57594673035a59d72f7667588da848820034) ([#9116](https://github.com/yt-dlp/yt-dlp/issues/9116)) by [HobbyistDev](https://github.com/HobbyistDev)\n\n#### Downloader changes\n- **http**: [Reset resume length to handle `FileNotFoundError`](https://github.com/yt-dlp/yt-dlp/commit/2d91b9845621639c53dca7ee9d3d954f3624ba18) ([#8399](https://github.com/yt-dlp/yt-dlp/issues/8399)) by [boredzo](https://github.com/boredzo)\n\n#### Networking changes\n- [Remove `_CompatHTTPError`](https://github.com/yt-dlp/yt-dlp/commit/811d298b231cfa29e75c321b23a91d1c2b17602c) ([#8871](https://github.com/yt-dlp/yt-dlp/issues/8871)) by [coletdjnz](https://github.com/coletdjnz)\n- **Request Handler**\n    - [Remove additional logging handlers on close](https://github.com/yt-dlp/yt-dlp/commit/0085e2bab8465ee7d46d16fcade3ed5e96cc8a48) ([#9032](https://github.com/yt-dlp/yt-dlp/issues/9032)) by [coletdjnz](https://github.com/coletdjnz)\n    - requests: [Apply `remove_dot_segments` to absolute redirect locations](https://github.com/yt-dlp/yt-dlp/commit/35f4f764a786685ea45d84abe1cf1ad3847f4c97) by [coletdjnz](https://github.com/coletdjnz)\n\n#### Misc. changes\n- **build**\n    - [Add `default` optional dependency group](https://github.com/yt-dlp/yt-dlp/commit/cf91400a1dd6cc99b11a6d163e1af73b64d618c9) ([#9295](https://github.com/yt-dlp/yt-dlp/issues/9295)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n    - [Add transitional `setup.py` and `pyinst.py`](https://github.com/yt-dlp/yt-dlp/commit/0abf2f1f153ab47990edbeee3477dc55f74c7f89) ([#9296](https://github.com/yt-dlp/yt-dlp/issues/9296)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K), [pukkandan](https://github.com/pukkandan)\n    - [Bump `actions/upload-artifact` to v4 and adjust workflows](https://github.com/yt-dlp/yt-dlp/commit/3876429d72afb35247f4b2531eb9b16cfc7e0968) by [bashonly](https://github.com/bashonly)\n    - [Bump `conda-incubator/setup-miniconda` to v3](https://github.com/yt-dlp/yt-dlp/commit/b0059f0413a6ba6ab0a3aec1f00188ce083cd8bf) by [bashonly](https://github.com/bashonly)\n    - [Fix `secretstorage` for ARM builds](https://github.com/yt-dlp/yt-dlp/commit/920397634d1e84e76d2cb897bd6d69ba0c6bd5ca) by [bashonly](https://github.com/bashonly)\n    - [Migrate to `pyproject.toml` and `hatchling`](https://github.com/yt-dlp/yt-dlp/commit/775cde82dc5b1dc64ab0539a92dd8c7ba6c0ad33) by [bashonly](https://github.com/bashonly) (With fixes in [43cfd46](https://github.com/yt-dlp/yt-dlp/commit/43cfd462c0d01eff22c1d4290aeb96eb1ea2c0e1))\n    - [Move bundle scripts into `bundle` submodule](https://github.com/yt-dlp/yt-dlp/commit/a1b778428991b1779203bac243ef4e9b6baea90c) by [bashonly](https://github.com/bashonly)\n    - [Support failed build job re-runs](https://github.com/yt-dlp/yt-dlp/commit/eabbccc439720fba381919a88be4fe4d96464cbd) ([#9277](https://github.com/yt-dlp/yt-dlp/issues/9277)) by [bashonly](https://github.com/bashonly)\n    - Makefile\n        - [Add automated `CODE_FOLDERS` and `CODE_FILES`](https://github.com/yt-dlp/yt-dlp/commit/868d2f60a7cb59b410c8cbfb452cbdb072687b81) by [bashonly](https://github.com/bashonly)\n        - [Ensure compatibility with BSD `make`](https://github.com/yt-dlp/yt-dlp/commit/beaa1a44554d04d9fe63a743a5bb4431ca778f28) ([#9210](https://github.com/yt-dlp/yt-dlp/issues/9210)) by [bashonly](https://github.com/bashonly) (With fixes in [73fcfa3](https://github.com/yt-dlp/yt-dlp/commit/73fcfa39f59113a8728249de2c4cee3025f17dc2))\n        - [Fix man pages generated by `pandoc>=3`](https://github.com/yt-dlp/yt-dlp/commit/fb44020fa98e47620b3aa1dab94b4c5b7bfb40bd) ([#7047](https://github.com/yt-dlp/yt-dlp/issues/7047)) by [t-nil](https://github.com/t-nil)\n- **ci**: [Bump `actions/setup-python` to v5](https://github.com/yt-dlp/yt-dlp/commit/b14e818b37f62e3224da157b3ad768b3f0815fcd) by [bashonly](https://github.com/bashonly)\n- **cleanup**\n    - [Build files cleanup](https://github.com/yt-dlp/yt-dlp/commit/867f637b95b342e1cb9f1dc3c6cf0ffe727187ce) by [bashonly](https://github.com/bashonly)\n    - [Fix infodict returned fields](https://github.com/yt-dlp/yt-dlp/commit/f4f9f6d00edcac6d4eb2b3fb78bf81326235d492) ([#8906](https://github.com/yt-dlp/yt-dlp/issues/8906)) by [seproDev](https://github.com/seproDev)\n    - [Fix typo in README.md](https://github.com/yt-dlp/yt-dlp/commit/292d60b1ed3b9fe5bcb2775a894cca99b0f9473e) ([#8894](https://github.com/yt-dlp/yt-dlp/issues/8894)) by [antonkesy](https://github.com/antonkesy)\n    - [Mark broken and remove dead extractors](https://github.com/yt-dlp/yt-dlp/commit/df773c3d5d1cc1f877cf8582f0072e386fc49318) ([#9238](https://github.com/yt-dlp/yt-dlp/issues/9238)) by [seproDev](https://github.com/seproDev)\n    - [Match both `http` and `https` in `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/a687226b48f71b874fa18b0165ec528d591f53fb) ([#8968](https://github.com/yt-dlp/yt-dlp/issues/8968)) by [seproDev](https://github.com/seproDev)\n    - [Remove unused code](https://github.com/yt-dlp/yt-dlp/commit/ed3bb2b0a12c44334e0d09481752dabf2ca1dc13) ([#8968](https://github.com/yt-dlp/yt-dlp/issues/8968)) by [pukkandan](https://github.com/pukkandan), [seproDev](https://github.com/seproDev)\n    - Miscellaneous\n        - [93240fc](https://github.com/yt-dlp/yt-dlp/commit/93240fc1848de4a94f25844c96e0dcd282ef1d3b) by [bashonly](https://github.com/bashonly), [Grub4k](https://github.com/Grub4k), [pukkandan](https://github.com/pukkandan), [seproDev](https://github.com/seproDev)\n        - [615a844](https://github.com/yt-dlp/yt-dlp/commit/615a84447e8322720be77a0e64298d7f42848693) by [bashonly](https://github.com/bashonly), [pukkandan](https://github.com/pukkandan), [seproDev](https://github.com/seproDev)\n- **devscripts**\n    - `install_deps`: [Add script and migrate to it](https://github.com/yt-dlp/yt-dlp/commit/b8a433aaca86b15cb9f1a451b0f69371d2fc22a9) by [bashonly](https://github.com/bashonly)\n    - `tomlparse`: [Add makeshift toml parser](https://github.com/yt-dlp/yt-dlp/commit/fd647775e27e030ab17387c249e2ebeba68f8ff0) by [Grub4K](https://github.com/Grub4K)\n- **docs**: [Misc Cleanup](https://github.com/yt-dlp/yt-dlp/commit/47ab66db0f083a76c7fba0f6e136b21dd5a93e3b) ([#8977](https://github.com/yt-dlp/yt-dlp/issues/8977)) by [Arthurszzz](https://github.com/Arthurszzz), [bashonly](https://github.com/bashonly), [Grub4k](https://github.com/Grub4k), [pukkandan](https://github.com/pukkandan), [seproDev](https://github.com/seproDev)\n- **test**\n    - [Skip source address tests if the address cannot be bound to](https://github.com/yt-dlp/yt-dlp/commit/69d31914952dd33082ac7019c6f76b43c45b9d06) ([#8900](https://github.com/yt-dlp/yt-dlp/issues/8900)) by [coletdjnz](https://github.com/coletdjnz)\n    - websockets: [Fix timeout test on Windows](https://github.com/yt-dlp/yt-dlp/commit/ac340d0745a9de5d494033e3507ef624ba25add3) ([#9344](https://github.com/yt-dlp/yt-dlp/issues/9344)) by [seproDev](https://github.com/seproDev)\n\n### 2023.12.30\n\n#### Core changes\n- [Fix format selection parse error for CPython 3.12](https://github.com/yt-dlp/yt-dlp/commit/00cdda4f6fe18712ced13dbc64b7ea10f323e268) ([#8797](https://github.com/yt-dlp/yt-dlp/issues/8797)) by [Grub4K](https://github.com/Grub4K)\n- [Let `read_stdin` obey `--quiet`](https://github.com/yt-dlp/yt-dlp/commit/a174c453ee1e853c584ceadeac17eef2bd433dc5) by [pukkandan](https://github.com/pukkandan)\n- [Merged with youtube-dl be008e6](https://github.com/yt-dlp/yt-dlp/commit/65de7d204ce88c0225df1321060304baab85dbd8) by [bashonly](https://github.com/bashonly), [dirkf](https://github.com/dirkf), [Grub4K](https://github.com/Grub4K)\n- [Parse `release_year` from `release_date`](https://github.com/yt-dlp/yt-dlp/commit/1732eccc0a40256e076bf0435a29f0f1d8419280) ([#8524](https://github.com/yt-dlp/yt-dlp/issues/8524)) by [seproDev](https://github.com/seproDev)\n- [Release workflow and Updater cleanup](https://github.com/yt-dlp/yt-dlp/commit/632b8ee54eb2df8ac6e20746a0bd95b7ebb053aa) ([#8640](https://github.com/yt-dlp/yt-dlp/issues/8640)) by [bashonly](https://github.com/bashonly)\n- [Remove Python 3.7 support](https://github.com/yt-dlp/yt-dlp/commit/f4b95acafcd69a50040730dfdf732e797278fdcc) ([#8361](https://github.com/yt-dlp/yt-dlp/issues/8361)) by [bashonly](https://github.com/bashonly)\n- [Support `NO_COLOR` environment variable](https://github.com/yt-dlp/yt-dlp/commit/a0b19d319a6ce8b7059318fa17a34b144fde1785) ([#8385](https://github.com/yt-dlp/yt-dlp/issues/8385)) by [Grub4K](https://github.com/Grub4K), [prettykool](https://github.com/prettykool)\n- **outtmpl**: [Support multiplication](https://github.com/yt-dlp/yt-dlp/commit/993edd3f6e17e966c763bc86dc34125445cec6b6) by [pukkandan](https://github.com/pukkandan)\n- **utils**: `traverse_obj`: [Move `is_user_input` into output template](https://github.com/yt-dlp/yt-dlp/commit/0b6f829b1dfda15d3c1d7d1fbe4ea6102c26dd24) ([#8673](https://github.com/yt-dlp/yt-dlp/issues/8673)) by [Grub4K](https://github.com/Grub4K)\n- **webvtt**: [Allow spaces before newlines for CueBlock](https://github.com/yt-dlp/yt-dlp/commit/15f22b4880b6b3f71f350c64d70976ae65b9f1ca) ([#7681](https://github.com/yt-dlp/yt-dlp/issues/7681)) by [TSRBerry](https://github.com/TSRBerry) (With fixes in [298230e](https://github.com/yt-dlp/yt-dlp/commit/298230e550886b746c266724dd701d842ca2696e) by [pukkandan](https://github.com/pukkandan))\n\n#### Extractor changes\n- [Add `media_type` field](https://github.com/yt-dlp/yt-dlp/commit/e370f9ec36972d06100a3db893b397bfc1b07b4d) by [trainman261](https://github.com/trainman261)\n- [Extract from `media` elements in SMIL manifests](https://github.com/yt-dlp/yt-dlp/commit/ddb2d7588bea48bae965dbfabe6df6550c9d3d43) ([#8504](https://github.com/yt-dlp/yt-dlp/issues/8504)) by [seproDev](https://github.com/seproDev)\n- **abematv**: [Fix season metadata](https://github.com/yt-dlp/yt-dlp/commit/cc07f5cc85d9e2a6cd0bedb9d961665eea0d6047) ([#8607](https://github.com/yt-dlp/yt-dlp/issues/8607)) by [middlingphys](https://github.com/middlingphys)\n- **allstar**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/3237f8ba29fe13bf95ff42b1e48b5b5109715feb) ([#8274](https://github.com/yt-dlp/yt-dlp/issues/8274)) by [S-Aarab](https://github.com/S-Aarab)\n- **altcensored**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/3f90813f0617e0d21302398010de7496c9ae36aa) ([#8291](https://github.com/yt-dlp/yt-dlp/issues/8291)) by [drzraf](https://github.com/drzraf)\n- **ard**: [Overhaul extractors](https://github.com/yt-dlp/yt-dlp/commit/5f009a094f0e8450792b097c4c8273622778052d) ([#8878](https://github.com/yt-dlp/yt-dlp/issues/8878)) by [seproDev](https://github.com/seproDev)\n- **ardbetamediathek**: [Fix series extraction](https://github.com/yt-dlp/yt-dlp/commit/1f8bd8eba82ba10ddb49ee7cc0be4540dab103d5) ([#8687](https://github.com/yt-dlp/yt-dlp/issues/8687)) by [lstrojny](https://github.com/lstrojny)\n- **bbc**\n    - [Extract more formats](https://github.com/yt-dlp/yt-dlp/commit/c919b68f7e79ea5010f75f648d3c9e45405a8011) ([#8321](https://github.com/yt-dlp/yt-dlp/issues/8321)) by [barsnick](https://github.com/barsnick), [dirkf](https://github.com/dirkf)\n    - [Fix JSON parsing bug](https://github.com/yt-dlp/yt-dlp/commit/19741ab8a401ec64d5e84fdbfcfb141d105e7bc8) by [bashonly](https://github.com/bashonly)\n- **bfmtv**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/4903f452b68efb62dadf22e81be8c7934fc743e7) ([#8651](https://github.com/yt-dlp/yt-dlp/issues/8651)) by [bashonly](https://github.com/bashonly)\n- **bilibili**: [Support courses and interactive videos](https://github.com/yt-dlp/yt-dlp/commit/9f09bdcfcb8e2b4b2decdc30d35d34b993bc7a94) ([#8343](https://github.com/yt-dlp/yt-dlp/issues/8343)) by [c-basalt](https://github.com/c-basalt)\n- **bitchute**: [Fix and improve metadata extraction](https://github.com/yt-dlp/yt-dlp/commit/b1a1ec1540605d2ea7abdb63336ffb1c56bf6316) ([#8507](https://github.com/yt-dlp/yt-dlp/issues/8507)) by [SirElderling](https://github.com/SirElderling)\n- **box**: [Fix formats extraction](https://github.com/yt-dlp/yt-dlp/commit/5a230233d6fce06f4abd1fce0dc92b948e6f780b) ([#8649](https://github.com/yt-dlp/yt-dlp/issues/8649)) by [bashonly](https://github.com/bashonly)\n- **bundestag**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/00a3e47bf5440c96025a76e08337ff2a475ed83e) ([#8783](https://github.com/yt-dlp/yt-dlp/issues/8783)) by [Grub4K](https://github.com/Grub4K)\n- **drtv**: [Set default ext for m3u8 formats](https://github.com/yt-dlp/yt-dlp/commit/f96ab86cd837b1b5823baa87d144e15322ee9298) ([#8590](https://github.com/yt-dlp/yt-dlp/issues/8590)) by [seproDev](https://github.com/seproDev)\n- **duoplay**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/66a0127d45033c698bdbedf162cddc55d9e7b906) ([#8542](https://github.com/yt-dlp/yt-dlp/issues/8542)) by [glensc](https://github.com/glensc)\n- **eplus**: [Add login support and DRM detection](https://github.com/yt-dlp/yt-dlp/commit/d5d1517e7d838500800d193ac3234b06e89654cd) ([#8661](https://github.com/yt-dlp/yt-dlp/issues/8661)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **facebook**\n    - [Fix Memories extraction](https://github.com/yt-dlp/yt-dlp/commit/c39358a54bc6675ae0c50b81024e5a086e41656a) ([#8681](https://github.com/yt-dlp/yt-dlp/issues/8681)) by [kclauhk](https://github.com/kclauhk)\n    - [Improve subtitles extraction](https://github.com/yt-dlp/yt-dlp/commit/9cafb9ff17e14475a35c9a58b5bb010c86c9db4b) ([#8296](https://github.com/yt-dlp/yt-dlp/issues/8296)) by [kclauhk](https://github.com/kclauhk)\n- **floatplane**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/628fa244bbce2ad39775a5959e99588f30cac152) ([#8639](https://github.com/yt-dlp/yt-dlp/issues/8639)) by [seproDev](https://github.com/seproDev)\n- **francetv**: [Improve metadata extraction](https://github.com/yt-dlp/yt-dlp/commit/71f28097fec1c9e029f74b68a4eadc8915399840) ([#8409](https://github.com/yt-dlp/yt-dlp/issues/8409)) by [Fymyte](https://github.com/Fymyte)\n- **instagram**: [Fix stories extraction](https://github.com/yt-dlp/yt-dlp/commit/50eaea9fd7787546b53660e736325fa31c77765d) ([#8843](https://github.com/yt-dlp/yt-dlp/issues/8843)) by [bashonly](https://github.com/bashonly)\n- **joqrag**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/db8b4edc7d0bd27da462f6fe82ff6e13e3d68a04) ([#8384](https://github.com/yt-dlp/yt-dlp/issues/8384)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **litv**: [Fix premium content extraction](https://github.com/yt-dlp/yt-dlp/commit/f45c4efcd928a173e1300a8f1ce4258e70c969b1) ([#8842](https://github.com/yt-dlp/yt-dlp/issues/8842)) by [bashonly](https://github.com/bashonly)\n- **maariv**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/c5f01bf7d4b9426c87c3f8248de23934a56579e0) ([#8331](https://github.com/yt-dlp/yt-dlp/issues/8331)) by [amir16yp](https://github.com/amir16yp)\n- **mediastream**: [Fix authenticated format extraction](https://github.com/yt-dlp/yt-dlp/commit/b03c89309eb141be1a1eceeeb7475dd3b7529ad9) ([#8657](https://github.com/yt-dlp/yt-dlp/issues/8657)) by [NickCis](https://github.com/NickCis)\n- **nebula**: [Overhaul extractors](https://github.com/yt-dlp/yt-dlp/commit/45d82be65f71bb05506bd55376c6fdb36bc54142) ([#8566](https://github.com/yt-dlp/yt-dlp/issues/8566)) by [elyse0](https://github.com/elyse0), [pukkandan](https://github.com/pukkandan), [seproDev](https://github.com/seproDev)\n- **nintendo**: [Fix Nintendo Direct extraction](https://github.com/yt-dlp/yt-dlp/commit/1d24da6c899ef280d8b0a48a5e280ecd5d39cdf4) ([#8609](https://github.com/yt-dlp/yt-dlp/issues/8609)) by [Grub4K](https://github.com/Grub4K)\n- **ondemandkorea**: [Fix upgraded format extraction](https://github.com/yt-dlp/yt-dlp/commit/04a5e06350e3ef7c03f94f2f3f90dd96c6411152) ([#8677](https://github.com/yt-dlp/yt-dlp/issues/8677)) by [seproDev](https://github.com/seproDev)\n- **pr0gramm**: [Support variant formats and subtitles](https://github.com/yt-dlp/yt-dlp/commit/f98a3305eb124a0c375d03209d5c5a64fe1766c8) ([#8674](https://github.com/yt-dlp/yt-dlp/issues/8674)) by [Grub4K](https://github.com/Grub4K)\n- **rinsefm**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/c91af948e43570025e4aa887e248fd025abae394) ([#8778](https://github.com/yt-dlp/yt-dlp/issues/8778)) by [hashFactory](https://github.com/hashFactory)\n- **rudovideo**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/0d531c35eca4c2eb36e160530a7a333edbc727cc) ([#8664](https://github.com/yt-dlp/yt-dlp/issues/8664)) by [nicodato](https://github.com/nicodato)\n- **theguardian**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/1fa3f24d4b5d22176b11d78420f1f4b64a5af0a8) ([#8535](https://github.com/yt-dlp/yt-dlp/issues/8535)) by [SirElderling](https://github.com/SirElderling)\n- **theplatform**: [Extract more metadata](https://github.com/yt-dlp/yt-dlp/commit/7e09c147fdccb44806bbf601573adc4b77210a89) ([#8635](https://github.com/yt-dlp/yt-dlp/issues/8635)) by [trainman261](https://github.com/trainman261)\n- **twitcasting**: [Detect livestreams via API and `show` page](https://github.com/yt-dlp/yt-dlp/commit/585d0ed9abcfcb957f2b2684b8ad43c3af160383) ([#8601](https://github.com/yt-dlp/yt-dlp/issues/8601)) by [bashonly](https://github.com/bashonly), [JC-Chung](https://github.com/JC-Chung)\n- **twitcastinguser**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/ff2fde1b8f922fd34bae6172602008cd67c07c93) ([#8650](https://github.com/yt-dlp/yt-dlp/issues/8650)) by [bashonly](https://github.com/bashonly)\n- **twitter**\n    - [Extract stale tweets](https://github.com/yt-dlp/yt-dlp/commit/1c54a98e19d047e7c15184237b6ef8ad50af489c) ([#8724](https://github.com/yt-dlp/yt-dlp/issues/8724)) by [bashonly](https://github.com/bashonly)\n    - [Prioritize m3u8 formats](https://github.com/yt-dlp/yt-dlp/commit/e7d22348e77367740da78a3db27167ecf894b7c9) ([#8826](https://github.com/yt-dlp/yt-dlp/issues/8826)) by [bashonly](https://github.com/bashonly)\n    - [Work around API rate-limit](https://github.com/yt-dlp/yt-dlp/commit/116c268438ea4d3738f6fa502c169081ca8f0ee7) ([#8825](https://github.com/yt-dlp/yt-dlp/issues/8825)) by [bashonly](https://github.com/bashonly)\n    - broadcast: [Extract `concurrent_view_count`](https://github.com/yt-dlp/yt-dlp/commit/6fe82491ed622b948c512cf4aab46ac3a234ae0a) ([#8600](https://github.com/yt-dlp/yt-dlp/issues/8600)) by [sonmezberkay](https://github.com/sonmezberkay)\n- **vidly**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/34df1c1f60fa652c0a6a5c712b06c10e45daf6b7) ([#8612](https://github.com/yt-dlp/yt-dlp/issues/8612)) by [seproDev](https://github.com/seproDev)\n- **vocaroo**: [Do not use deprecated `getheader`](https://github.com/yt-dlp/yt-dlp/commit/f223b1b0789f65e06619dcc9fc9e74f50d259379) ([#8606](https://github.com/yt-dlp/yt-dlp/issues/8606)) by [qbnu](https://github.com/qbnu)\n- **vvvvid**: [Set user-agent to fix extraction](https://github.com/yt-dlp/yt-dlp/commit/1725e943b0e8a8b585305660d4611e684374409c) ([#8615](https://github.com/yt-dlp/yt-dlp/issues/8615)) by [Kyraminol](https://github.com/Kyraminol)\n- **youtube**\n    - [Fix `like_count` extraction](https://github.com/yt-dlp/yt-dlp/commit/6b5d93b0b0240e287389d1d43b2d5293e18aa4cc) ([#8763](https://github.com/yt-dlp/yt-dlp/issues/8763)) by [Ganesh910](https://github.com/Ganesh910)\n    - [Improve detection of faulty HLS formats](https://github.com/yt-dlp/yt-dlp/commit/bb5a54e6db2422bbd155d93a0e105b6616c09467) ([#8646](https://github.com/yt-dlp/yt-dlp/issues/8646)) by [bashonly](https://github.com/bashonly)\n    - [Return empty playlist when channel/tab has no videos](https://github.com/yt-dlp/yt-dlp/commit/044886c220620a7679109e92352890e18b6079e3) by [pukkandan](https://github.com/pukkandan)\n    - [Support cf.piped.video](https://github.com/yt-dlp/yt-dlp/commit/6a9c7a2b52655bacfa7ab2da24fd0d14a6fff495) ([#8514](https://github.com/yt-dlp/yt-dlp/issues/8514)) by [OIRNOIR](https://github.com/OIRNOIR)\n- **zingmp3**: [Add support for radio and podcasts](https://github.com/yt-dlp/yt-dlp/commit/64de1a4c25bada90374b88d7353754fe8fbfcc51) ([#7189](https://github.com/yt-dlp/yt-dlp/issues/7189)) by [hatienl0i261299](https://github.com/hatienl0i261299)\n\n#### Postprocessor changes\n- **ffmpegmetadata**: [Embed stream metadata in single format downloads](https://github.com/yt-dlp/yt-dlp/commit/deeb13eae82e60f82a2c0c5861f460399a997528) ([#8647](https://github.com/yt-dlp/yt-dlp/issues/8647)) by [bashonly](https://github.com/bashonly)\n\n#### Networking changes\n- [Strip whitespace around header values](https://github.com/yt-dlp/yt-dlp/commit/196eb0fe77b78e2e5ca02c506c3837c2b1a7964c) ([#8802](https://github.com/yt-dlp/yt-dlp/issues/8802)) by [coletdjnz](https://github.com/coletdjnz)\n- **Request Handler**: websockets: [Migrate websockets to networking framework](https://github.com/yt-dlp/yt-dlp/commit/ccfd70f4c24b579c72123ca76ab50164f8f122b7) ([#7720](https://github.com/yt-dlp/yt-dlp/issues/7720)) by [coletdjnz](https://github.com/coletdjnz)\n\n#### Misc. changes\n- **ci**\n    - [Concurrency optimizations](https://github.com/yt-dlp/yt-dlp/commit/f124fa458826308afc86cf364c509f857686ecfd) ([#8614](https://github.com/yt-dlp/yt-dlp/issues/8614)) by [Grub4K](https://github.com/Grub4K)\n    - [Run core tests only for core changes](https://github.com/yt-dlp/yt-dlp/commit/13b3cb3c2b7169a1e17d6fc62593bf744170521c) ([#8841](https://github.com/yt-dlp/yt-dlp/issues/8841)) by [Grub4K](https://github.com/Grub4K)\n- **cleanup**\n    - [Fix spelling of `IE_NAME`](https://github.com/yt-dlp/yt-dlp/commit/bc4ab17b38f01000d99c5c2bedec89721fee65ec) ([#8810](https://github.com/yt-dlp/yt-dlp/issues/8810)) by [barsnick](https://github.com/barsnick)\n    - [Remove dead extractors](https://github.com/yt-dlp/yt-dlp/commit/9751a457cfdb18bf99d9ee0d10e4e6a594502bbf) ([#8604](https://github.com/yt-dlp/yt-dlp/issues/8604)) by [seproDev](https://github.com/seproDev)\n    - Miscellaneous: [f9fb3ce](https://github.com/yt-dlp/yt-dlp/commit/f9fb3ce86e3c6a0c3c33b45392b8d7288bceba76) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K), [pukkandan](https://github.com/pukkandan), [seproDev](https://github.com/seproDev)\n- **devscripts**: `run_tests`: [Create Python script](https://github.com/yt-dlp/yt-dlp/commit/2d1d683a541d71f3d3bb999dfe8eeb1976fb91ce) ([#8720](https://github.com/yt-dlp/yt-dlp/issues/8720)) by [Grub4K](https://github.com/Grub4K) (With fixes in [225cf2b](https://github.com/yt-dlp/yt-dlp/commit/225cf2b830a1de2c5eacd257edd2a01aed1e1114))\n- **docs**: [Update youtube-dl merge commit in `README.md`](https://github.com/yt-dlp/yt-dlp/commit/f10589e3453009bb523f55849bba144c9b91cf2a) by [bashonly](https://github.com/bashonly)\n- **test**: networking: [Update tests for OpenSSL 3.2](https://github.com/yt-dlp/yt-dlp/commit/37755a037e612bfc608c3d4722e8ef2ce6a022ee) ([#8814](https://github.com/yt-dlp/yt-dlp/issues/8814)) by [bashonly](https://github.com/bashonly)\n\n### 2023.11.16\n\n#### Extractor changes\n- **abc.net.au**: iview, showseries: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/15cb3528cbda7b6198f49a6b5953c226d701696b) ([#8586](https://github.com/yt-dlp/yt-dlp/issues/8586)) by [bashonly](https://github.com/bashonly)\n- **beatbump**: [Update `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/21dc069bea2d4d99345dd969e098f4535c751d45) ([#8576](https://github.com/yt-dlp/yt-dlp/issues/8576)) by [seproDev](https://github.com/seproDev)\n- **dailymotion**: [Improve `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/a489f071508ec5caf5f32052d142afe86c28df7a) ([#7692](https://github.com/yt-dlp/yt-dlp/issues/7692)) by [TravisDupes](https://github.com/TravisDupes)\n- **drtv**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/0783fd558ed0d3a8bc754beb75a406256f8b97b2) ([#8484](https://github.com/yt-dlp/yt-dlp/issues/8484)) by [almx](https://github.com/almx), [seproDev](https://github.com/seproDev)\n- **eltrecetv**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/dcfad52812aa8ce007cefbfbe63f58b49f6b1046) ([#8216](https://github.com/yt-dlp/yt-dlp/issues/8216)) by [elivinsky](https://github.com/elivinsky)\n- **jiosaavn**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/b530118e7f48232cacf8050d79a6b20bdfcf5468) ([#8307](https://github.com/yt-dlp/yt-dlp/issues/8307)) by [awalgarg](https://github.com/awalgarg)\n- **njpwworld**: [Remove](https://github.com/yt-dlp/yt-dlp/commit/e569c2d1f4b665795a2b64f0aaf7f76930664233) ([#8570](https://github.com/yt-dlp/yt-dlp/issues/8570)) by [aarubui](https://github.com/aarubui)\n- **tv5mondeplus**: [Extract subtitles](https://github.com/yt-dlp/yt-dlp/commit/0f634dba3afdc429ece8839b02f6d56c27b7973a) ([#4209](https://github.com/yt-dlp/yt-dlp/issues/4209)) by [FrankZ85](https://github.com/FrankZ85)\n- **twitcasting**: [Fix livestream detection](https://github.com/yt-dlp/yt-dlp/commit/2325d03aa7bb80f56ba52cd6992258e44727b424) ([#8574](https://github.com/yt-dlp/yt-dlp/issues/8574)) by [JC-Chung](https://github.com/JC-Chung)\n- **zenyandex**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/5efe68b73cbf6e907c2e6a3aa338664385084184) ([#8454](https://github.com/yt-dlp/yt-dlp/issues/8454)) by [starius](https://github.com/starius)\n\n#### Misc. changes\n- **build**: [Make `secretstorage` an optional dependency](https://github.com/yt-dlp/yt-dlp/commit/24f827875c6ba513f12ed09a3aef2bbed223760d) ([#8585](https://github.com/yt-dlp/yt-dlp/issues/8585)) by [bashonly](https://github.com/bashonly)\n\n### 2023.11.14\n\n#### Important changes\n- **The release channels have been adjusted!**\n    * [`master`](https://github.com/yt-dlp/yt-dlp-master-builds) builds are made after each push, containing the latest fixes (but also possibly bugs). This was previously the `nightly` channel.\n    * [`nightly`](https://github.com/yt-dlp/yt-dlp-nightly-builds) builds are now made once a day, if there were any changes.\n- Security: [[CVE-2023-46121](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-46121)] Patch [Generic Extractor MITM Vulnerability via Arbitrary Proxy Injection](https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3ch3-jhc6-5r8x)\n    - Disallow smuggling of arbitrary `http_headers`; extractors now only use specific headers\n\n#### Core changes\n- [Add `--compat-option manifest-filesize-approx`](https://github.com/yt-dlp/yt-dlp/commit/10025b715ea01489557eb2c5a3cc04d361fcdb52) ([#8356](https://github.com/yt-dlp/yt-dlp/issues/8356)) by [bashonly](https://github.com/bashonly)\n- [Fix format sorting with `--load-info-json`](https://github.com/yt-dlp/yt-dlp/commit/595ea4a99b726b8fe9463e7853b7053978d0544e) ([#8521](https://github.com/yt-dlp/yt-dlp/issues/8521)) by [bashonly](https://github.com/bashonly)\n- [Include build origin in verbose output](https://github.com/yt-dlp/yt-dlp/commit/20314dd46f25e0e0a7e985a7804049aefa8b909f) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n- [Only ensure playlist thumbnail dir if writing thumbs](https://github.com/yt-dlp/yt-dlp/commit/a40e0b37dfc8c26916b0e01aa3f29f3bc42250b6) ([#8373](https://github.com/yt-dlp/yt-dlp/issues/8373)) by [bashonly](https://github.com/bashonly)\n- **update**: [Overhaul self-updater](https://github.com/yt-dlp/yt-dlp/commit/0b6ad22e6a432006a75df968f0283e6c6b3cfae6) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n\n#### Extractor changes\n- [Do not smuggle `http_headers`](https://github.com/yt-dlp/yt-dlp/commit/f04b5bedad7b281bee9814686bba1762bae092eb) by [coletdjnz](https://github.com/coletdjnz)\n- [Do not test truth value of `xml.etree.ElementTree.Element`](https://github.com/yt-dlp/yt-dlp/commit/d4f14a72dc1dd79396e0e80980268aee902b61e4) ([#8582](https://github.com/yt-dlp/yt-dlp/issues/8582)) by [bashonly](https://github.com/bashonly)\n- **brilliantpala**: [Fix cookies support](https://github.com/yt-dlp/yt-dlp/commit/9b5bedf13a3323074daceb0ec6ebb3cc6e0b9684) ([#8352](https://github.com/yt-dlp/yt-dlp/issues/8352)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **generic**: [Improve direct video link ext detection](https://github.com/yt-dlp/yt-dlp/commit/4ce2f29a50fcfb9920e6f2ffe42192945a2bad7e) ([#8340](https://github.com/yt-dlp/yt-dlp/issues/8340)) by [bashonly](https://github.com/bashonly)\n- **laxarxames**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/312a2d1e8bc247264f9d85c5ec764e33aa0133b5) ([#8412](https://github.com/yt-dlp/yt-dlp/issues/8412)) by [aniolpages](https://github.com/aniolpages)\n- **n-tv.de**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/8afd9468b0c822843bc480d366d1c86698daabfb) ([#8414](https://github.com/yt-dlp/yt-dlp/issues/8414)) by [1100101](https://github.com/1100101)\n- **neteasemusic**: [Improve metadata extraction](https://github.com/yt-dlp/yt-dlp/commit/46acc418a53470b7f32581b3309c3cb87aa8488d) ([#8531](https://github.com/yt-dlp/yt-dlp/issues/8531)) by [LoserFox](https://github.com/LoserFox)\n- **nhk**: [Improve metadata extraction](https://github.com/yt-dlp/yt-dlp/commit/54579be4364e148277c32e20a5c3efc2c3f52f5b) ([#8388](https://github.com/yt-dlp/yt-dlp/issues/8388)) by [garret1317](https://github.com/garret1317)\n- **novaembed**: [Improve `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/3ff494f6f41c27549420fa88be27555bd449ffdc) ([#8368](https://github.com/yt-dlp/yt-dlp/issues/8368)) by [peci1](https://github.com/peci1)\n- **npo**: [Send `POST` request to streams API endpoint](https://github.com/yt-dlp/yt-dlp/commit/8e02a4dcc800f9444e9d461edc41edd7b662f435) ([#8413](https://github.com/yt-dlp/yt-dlp/issues/8413)) by [bartbroere](https://github.com/bartbroere)\n- **ondemandkorea**: [Overhaul extractor](https://github.com/yt-dlp/yt-dlp/commit/05adfd883a4f2ecae0267e670a62a2e45c351aeb) ([#8386](https://github.com/yt-dlp/yt-dlp/issues/8386)) by [seproDev](https://github.com/seproDev)\n- **orf**: podcast: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/6ba3085616652cbf05d1858efc321fdbfc4c6119) ([#8486](https://github.com/yt-dlp/yt-dlp/issues/8486)) by [Esokrates](https://github.com/Esokrates)\n- **polskieradio**: audition: [Fix playlist extraction](https://github.com/yt-dlp/yt-dlp/commit/464327acdb353ceb91d2115163a5a9621b22fe0d) ([#8459](https://github.com/yt-dlp/yt-dlp/issues/8459)) by [shubhexists](https://github.com/shubhexists)\n- **qdance**: [Update `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/177f0d963e4b9db749805c482e6f288354c8be84) ([#8426](https://github.com/yt-dlp/yt-dlp/issues/8426)) by [bashonly](https://github.com/bashonly)\n- **radiocomercial**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/ef12dbdcd3e7264bd3d744c1e3107597bd23ad35) ([#8508](https://github.com/yt-dlp/yt-dlp/issues/8508)) by [SirElderling](https://github.com/SirElderling)\n- **sbs.co.kr**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/25a4bd345a0dcfece6fef752d4537eb403da94d9) ([#8326](https://github.com/yt-dlp/yt-dlp/issues/8326)) by [seproDev](https://github.com/seproDev)\n- **theatercomplextown**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/2863fcf2b6876d0c7965ff7d6d9242eea653dc6b) ([#8560](https://github.com/yt-dlp/yt-dlp/issues/8560)) by [bashonly](https://github.com/bashonly)\n- **thisav**: [Remove](https://github.com/yt-dlp/yt-dlp/commit/cb480e390d85fb3a598c1b6d5eef3438ce729fc9) ([#8346](https://github.com/yt-dlp/yt-dlp/issues/8346)) by [bashonly](https://github.com/bashonly)\n- **thisoldhouse**: [Add login support](https://github.com/yt-dlp/yt-dlp/commit/c76c96677ff6a056f5844a568ef05ee22c46d6f4) ([#8561](https://github.com/yt-dlp/yt-dlp/issues/8561)) by [bashonly](https://github.com/bashonly)\n- **twitcasting**: [Fix livestream extraction](https://github.com/yt-dlp/yt-dlp/commit/7b8b1cf5eb8bf44ce70bc24e1f56f0dba2737e98) ([#8427](https://github.com/yt-dlp/yt-dlp/issues/8427)) by [JC-Chung](https://github.com/JC-Chung), [saintliao](https://github.com/saintliao)\n- **twitter**\n    - broadcast\n        - [Improve metadata extraction](https://github.com/yt-dlp/yt-dlp/commit/7d337ca977d73a0a6c07ab481ed8faa8f6ff8726) ([#8383](https://github.com/yt-dlp/yt-dlp/issues/8383)) by [HitomaruKonpaku](https://github.com/HitomaruKonpaku)\n        - [Support `--wait-for-video`](https://github.com/yt-dlp/yt-dlp/commit/f6e97090d2ed9e05441ab0f4bec3559b816d7a00) ([#8475](https://github.com/yt-dlp/yt-dlp/issues/8475)) by [bashonly](https://github.com/bashonly)\n- **weibo**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/15b252dfd2c6807fe57afc5a95e59abadb32ccd2) ([#8463](https://github.com/yt-dlp/yt-dlp/issues/8463)) by [c-basalt](https://github.com/c-basalt)\n- **weverse**: [Fix login error handling](https://github.com/yt-dlp/yt-dlp/commit/4a601c9eff9fb42e24a4c8da3fa03628e035b35b) ([#8458](https://github.com/yt-dlp/yt-dlp/issues/8458)) by [seproDev](https://github.com/seproDev)\n- **youtube**: [Check newly uploaded iOS HLS formats](https://github.com/yt-dlp/yt-dlp/commit/ef79d20dc9d27ac002a7196f073b37f2f2721aed) ([#8336](https://github.com/yt-dlp/yt-dlp/issues/8336)) by [bashonly](https://github.com/bashonly)\n- **zoom**: [Extract combined view formats](https://github.com/yt-dlp/yt-dlp/commit/3906de07551fedb00b789345bf24cc27d6ddf128) ([#7847](https://github.com/yt-dlp/yt-dlp/issues/7847)) by [Mipsters](https://github.com/Mipsters)\n\n#### Downloader changes\n- **aria2c**: [Remove duplicate `--file-allocation=none`](https://github.com/yt-dlp/yt-dlp/commit/21b25281c51523620706b11bfc1c4a889858e1f2) ([#8332](https://github.com/yt-dlp/yt-dlp/issues/8332)) by [CrendKing](https://github.com/CrendKing)\n- **dash**: [Force native downloader for `--live-from-start`](https://github.com/yt-dlp/yt-dlp/commit/2622c804d1a5accc3045db398e0fc52074f4bdb3) ([#8339](https://github.com/yt-dlp/yt-dlp/issues/8339)) by [bashonly](https://github.com/bashonly)\n\n#### Networking changes\n- **Request Handler**: requests: [Add handler for `requests` HTTP library (#3668)](https://github.com/yt-dlp/yt-dlp/commit/8a8b54523addf46dfd50ef599761a81bc22362e6) by [bashonly](https://github.com/bashonly), [coletdjnz](https://github.com/coletdjnz), [Grub4K](https://github.com/Grub4K) (With fixes in [4e38e2a](https://github.com/yt-dlp/yt-dlp/commit/4e38e2ae9d7380015349e6aee59c78bb3938befd))\n\n    Adds support for HTTPS proxies and persistent connections (keep-alive)\n\n#### Misc. changes\n- **build**\n    - [Include secretstorage in Linux builds](https://github.com/yt-dlp/yt-dlp/commit/9970d74c8383432c6c8779aa47d3253dcf412b14) by [bashonly](https://github.com/bashonly)\n    - [Overhaul and unify release workflow](https://github.com/yt-dlp/yt-dlp/commit/1d03633c5a1621b9f3a756f0a4f9dc61fab3aeaa) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n- **ci**\n    - [Bump `actions/checkout` to v4](https://github.com/yt-dlp/yt-dlp/commit/5438593a35b7b042fc48fe29cad0b9039f07c9bb) by [bashonly](https://github.com/bashonly)\n    - [Run core tests with dependencies](https://github.com/yt-dlp/yt-dlp/commit/700444c23ddb65f618c2abd942acdc0c58c650b1) by [bashonly](https://github.com/bashonly), [coletdjnz](https://github.com/coletdjnz)\n- **cleanup**\n    - [Fix changelog typo](https://github.com/yt-dlp/yt-dlp/commit/a9d3f4b20a3533d2a40104c85bc2cc6c2564c800) by [bashonly](https://github.com/bashonly)\n    - [Update documentation for master and nightly channels](https://github.com/yt-dlp/yt-dlp/commit/a00af29853b8c7350ce086f4cab8c2c9cf2fcf1d) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n    - Miscellaneous: [b012271](https://github.com/yt-dlp/yt-dlp/commit/b012271d01b59759e4eefeab0308698cd9e7224c) by [bashonly](https://github.com/bashonly), [coletdjnz](https://github.com/coletdjnz), [dirkf](https://github.com/dirkf), [gamer191](https://github.com/gamer191), [Grub4K](https://github.com/Grub4K), [seproDev](https://github.com/seproDev)\n- **test**: update: [Implement simple updater unit tests](https://github.com/yt-dlp/yt-dlp/commit/87264d4fdadcddd91289b968dd0e4bf58d449267) by [bashonly](https://github.com/bashonly)\n\n### 2023.10.13\n\n#### Core changes\n- [Ensure thumbnail output directory exists](https://github.com/yt-dlp/yt-dlp/commit/2acd1d555ef89851c73773776715d3de9a0e30b9) ([#7985](https://github.com/yt-dlp/yt-dlp/issues/7985)) by [Riteo](https://github.com/Riteo)\n- **utils**\n    - `js_to_json`: [Fix `Date` constructor parsing](https://github.com/yt-dlp/yt-dlp/commit/9d7ded6419089c1bf252496073f73ad90ed71004) ([#8295](https://github.com/yt-dlp/yt-dlp/issues/8295)) by [awalgarg](https://github.com/awalgarg), [Grub4K](https://github.com/Grub4K)\n    - `write_xattr`: [Use `os.setxattr` if available](https://github.com/yt-dlp/yt-dlp/commit/84e26038d4002e763ea51ca1bdce4f7e63c540bf) ([#8205](https://github.com/yt-dlp/yt-dlp/issues/8205)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n\n#### Extractor changes\n- **artetv**: [Support age-restricted content](https://github.com/yt-dlp/yt-dlp/commit/09f815ad52843219a7ee3f2a0dddf6c250c91f0c) ([#8301](https://github.com/yt-dlp/yt-dlp/issues/8301)) by [StefanLobbenmeier](https://github.com/StefanLobbenmeier)\n- **jtbc**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/b286ec68f1f28798b3e371f888a2ed97d399cf77) ([#8314](https://github.com/yt-dlp/yt-dlp/issues/8314)) by [seproDev](https://github.com/seproDev)\n- **mbn**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/e030b6b6fba7b2f4614ad2ab9f7649d40a2dd305) ([#8312](https://github.com/yt-dlp/yt-dlp/issues/8312)) by [seproDev](https://github.com/seproDev)\n- **nhk**: [Fix Japanese-language VOD extraction](https://github.com/yt-dlp/yt-dlp/commit/4de94b9e165bfd6421a692f5f2eabcdb08edcb71) ([#8309](https://github.com/yt-dlp/yt-dlp/issues/8309)) by [garret1317](https://github.com/garret1317)\n- **radiko**: [Fix bug with `downloader_options`](https://github.com/yt-dlp/yt-dlp/commit/b9316642313bbc9e209ac0d2276d37ba60bceb49) by [bashonly](https://github.com/bashonly)\n- **tenplay**: [Add support for seasons](https://github.com/yt-dlp/yt-dlp/commit/88a99c87b680ae59002534a517e191f46c42cbd4) ([#7939](https://github.com/yt-dlp/yt-dlp/issues/7939)) by [midnightveil](https://github.com/midnightveil)\n- **youku**: [Improve tudou.com support](https://github.com/yt-dlp/yt-dlp/commit/b7098d46b552a9322c6cea39ba80be5229f922de) ([#8160](https://github.com/yt-dlp/yt-dlp/issues/8160)) by [naginatana](https://github.com/naginatana)\n- **youtube**: [Fix bug with `--extractor-retries inf`](https://github.com/yt-dlp/yt-dlp/commit/feebf6d02fc9651331eee2af5e08e6112288163b) ([#8328](https://github.com/yt-dlp/yt-dlp/issues/8328)) by [Grub4K](https://github.com/Grub4K)\n\n#### Downloader changes\n- **fragment**: [Improve progress calculation](https://github.com/yt-dlp/yt-dlp/commit/1c51c520f7b511ebd9e4eb7322285a8c31eedbbd) ([#8241](https://github.com/yt-dlp/yt-dlp/issues/8241)) by [Grub4K](https://github.com/Grub4K)\n\n#### Misc. changes\n- **cleanup**: Miscellaneous: [b634ba7](https://github.com/yt-dlp/yt-dlp/commit/b634ba742d8f38ce9ecfa0546485728b0c6c59d1) by [bashonly](https://github.com/bashonly), [gamer191](https://github.com/gamer191)\n\n### 2023.10.07\n\n#### Extractor changes\n- **abc.net.au**: iview: [Improve `episode` extraction](https://github.com/yt-dlp/yt-dlp/commit/a9efb4b8d74f3583450ffda0ee57259a47d39c70) ([#8201](https://github.com/yt-dlp/yt-dlp/issues/8201)) by [xofe](https://github.com/xofe)\n- **erocast**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/47c598783c98c179e04dd12c2a3fee0f3dc53087) ([#8264](https://github.com/yt-dlp/yt-dlp/issues/8264)) by [madewokherd](https://github.com/madewokherd)\n- **gofile**: [Fix token cookie bug](https://github.com/yt-dlp/yt-dlp/commit/0730d5a966fa8a937d84bfb7f68be5198acb039b) by [bashonly](https://github.com/bashonly)\n- **iq.com**: [Fix extraction and subtitles](https://github.com/yt-dlp/yt-dlp/commit/35d9cbaf9638ccc9daf8a863063b2e7c135bc664) ([#8260](https://github.com/yt-dlp/yt-dlp/issues/8260)) by [AS6939](https://github.com/AS6939)\n- **lbry**\n    - [Add playlist support](https://github.com/yt-dlp/yt-dlp/commit/48cceec1ddb8649b5e771df8df79eb9c39c82b90) ([#8213](https://github.com/yt-dlp/yt-dlp/issues/8213)) by [bashonly](https://github.com/bashonly), [drzraf](https://github.com/drzraf), [Grub4K](https://github.com/Grub4K)\n    - [Extract `uploader_id`](https://github.com/yt-dlp/yt-dlp/commit/0e722f2f3ca42e634fd7b06ee70b16bf833ce132) ([#8244](https://github.com/yt-dlp/yt-dlp/issues/8244)) by [drzraf](https://github.com/drzraf)\n- **litv**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/91a670a4f7babe9c8aa2018f57d8c8952a6f49d8) ([#7785](https://github.com/yt-dlp/yt-dlp/issues/7785)) by [jiru](https://github.com/jiru)\n- **neteasemusic**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/f980df734cf5c0eaded2f7b38c6c60bccfeebb48) ([#8181](https://github.com/yt-dlp/yt-dlp/issues/8181)) by [c-basalt](https://github.com/c-basalt)\n- **nhk**: [Fix VOD extraction](https://github.com/yt-dlp/yt-dlp/commit/e831c80e8b2fc025b3b67d82974cc59e3526fdc8) ([#8249](https://github.com/yt-dlp/yt-dlp/issues/8249)) by [garret1317](https://github.com/garret1317)\n- **radiko**: [Improve extraction](https://github.com/yt-dlp/yt-dlp/commit/2ad3873f0dfa9285c91d2160e36c039e69d597c7) ([#8221](https://github.com/yt-dlp/yt-dlp/issues/8221)) by [garret1317](https://github.com/garret1317)\n- **substack**\n    - [Fix download cookies bug](https://github.com/yt-dlp/yt-dlp/commit/2f2dda3a7e85148773da3cdbc03ac9949ec1bc45) ([#8219](https://github.com/yt-dlp/yt-dlp/issues/8219)) by [handlerug](https://github.com/handlerug)\n    - [Fix embed extraction](https://github.com/yt-dlp/yt-dlp/commit/fbcc299bd8a19cf8b3c8805d6c268a9110230973) ([#8218](https://github.com/yt-dlp/yt-dlp/issues/8218)) by [handlerug](https://github.com/handlerug)\n- **theta**: [Remove extractors](https://github.com/yt-dlp/yt-dlp/commit/792f1e64f6a2beac51e85408d142b3118115c4fd) ([#8251](https://github.com/yt-dlp/yt-dlp/issues/8251)) by [alerikaisattera](https://github.com/alerikaisattera)\n- **wrestleuniversevod**: [Call API with device ID](https://github.com/yt-dlp/yt-dlp/commit/b095fd3fa9d58a65dc9b830bd63b9d909422aa86) ([#8272](https://github.com/yt-dlp/yt-dlp/issues/8272)) by [bashonly](https://github.com/bashonly)\n- **xhamster**: user: [Support creator urls](https://github.com/yt-dlp/yt-dlp/commit/cc8d8441524ec3442d7c0d3f8f33f15b66aa06f3) ([#8232](https://github.com/yt-dlp/yt-dlp/issues/8232)) by [Grub4K](https://github.com/Grub4K)\n- **youtube**\n    - [Fix `heatmap` extraction](https://github.com/yt-dlp/yt-dlp/commit/03e85ea99db76a2fddb65bf46f8819bda780aaf3) ([#8299](https://github.com/yt-dlp/yt-dlp/issues/8299)) by [bashonly](https://github.com/bashonly)\n    - [Raise a warning for `Incomplete Data` instead of an error](https://github.com/yt-dlp/yt-dlp/commit/eb5bdbfa70126c7d5355cc0954b63720522e462c) ([#8238](https://github.com/yt-dlp/yt-dlp/issues/8238)) by [coletdjnz](https://github.com/coletdjnz)\n\n#### Misc. changes\n- **cleanup**\n    - [Update extractor tests](https://github.com/yt-dlp/yt-dlp/commit/19c90e405b4137c06dfe6f9aaa02396df0da93e5) ([#7718](https://github.com/yt-dlp/yt-dlp/issues/7718)) by [trainman261](https://github.com/trainman261)\n    - Miscellaneous: [377e85a](https://github.com/yt-dlp/yt-dlp/commit/377e85a1797db9e98b78b38203ed9d4ded229991) by [dirkf](https://github.com/dirkf), [gamer191](https://github.com/gamer191), [Grub4K](https://github.com/Grub4K)\n\n### 2023.09.24\n\n#### Important changes\n- **The minimum *recommended* Python version has been raised to 3.8**\nSince Python 3.7 has reached end-of-life, support for it will be dropped soon. [Read more](https://github.com/yt-dlp/yt-dlp/issues/7803)\n- Security: [[CVE-2023-40581](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-40581)] [Prevent RCE when using `--exec` with `%q` on Windows](https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg)\n    - The shell escape function is now using `\"\"` instead of `\\\"`.\n    - `utils.Popen` has been patched to properly quote commands.\n\n#### Core changes\n- [Fix HTTP headers and cookie handling](https://github.com/yt-dlp/yt-dlp/commit/6c5211cebeacfc53ad5d5ddf4a659be76039656f) by [bashonly](https://github.com/bashonly), [pukkandan](https://github.com/pukkandan)\n- [Fix `--check-formats`](https://github.com/yt-dlp/yt-dlp/commit/8cb7fc44db010e965d808ee679ef0725cb6e147c) by [pukkandan](https://github.com/pukkandan)\n- [Fix support for upcoming Python 3.12](https://github.com/yt-dlp/yt-dlp/commit/836e06d246512f286f30c1371b2c54b72c9ecd93) ([#8130](https://github.com/yt-dlp/yt-dlp/issues/8130)) by [Grub4K](https://github.com/Grub4K)\n- [Merged with youtube-dl 66ab08](https://github.com/yt-dlp/yt-dlp/commit/9d6254069c75877bc88bc3584f4326fb1853a543) by [coletdjnz](https://github.com/coletdjnz)\n- [Prevent RCE when using `--exec` with `%q` (CVE-2023-40581)](https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e) by [Grub4K](https://github.com/Grub4K)\n- [Raise minimum recommended Python version to 3.8](https://github.com/yt-dlp/yt-dlp/commit/61bdf15fc7400601c3da1aa7a43917310a5bf391) ([#8183](https://github.com/yt-dlp/yt-dlp/issues/8183)) by [Grub4K](https://github.com/Grub4K)\n- [`FFmpegFixupM3u8PP` may need to run with ffmpeg](https://github.com/yt-dlp/yt-dlp/commit/f73c11803579889dc8e1c99e25dba9a22fef39d8) by [pukkandan](https://github.com/pukkandan)\n- **compat**\n    - [Add `types.NoneType`](https://github.com/yt-dlp/yt-dlp/commit/e0c4db04dc82a699bdabd9821ddc239ebe17d30a) by [pukkandan](https://github.com/pukkandan) (With fixes in [25b6e8f](https://github.com/yt-dlp/yt-dlp/commit/25b6e8f94679b4458550702b46e61249b875a4fd))\n    - [Deprecate old functions](https://github.com/yt-dlp/yt-dlp/commit/3d2623a898196640f7cc0fc8b70118ff19e6925d) ([#2861](https://github.com/yt-dlp/yt-dlp/issues/2861)) by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n    - [Ensure submodules are imported correctly](https://github.com/yt-dlp/yt-dlp/commit/a250b247334ce9f641e709cbb64974da6034a2b3) by [pukkandan](https://github.com/pukkandan)\n- **cookies**: [Containers JSON should be opened as utf-8](https://github.com/yt-dlp/yt-dlp/commit/dab87ca23650fd87184ff5286b53e6985b59f71d) ([#7800](https://github.com/yt-dlp/yt-dlp/issues/7800)) by [bashonly](https://github.com/bashonly)\n- **dependencies**: [Handle deprecation of `sqlite3.version`](https://github.com/yt-dlp/yt-dlp/commit/35f9a306e6934793cff100200cd03f288ec33f11) ([#8167](https://github.com/yt-dlp/yt-dlp/issues/8167)) by [bashonly](https://github.com/bashonly)\n- **outtmpl**: [Fix replacement for `playlist_index`](https://github.com/yt-dlp/yt-dlp/commit/a264433c9fba147ecae2420091614186cfeeb895) by [pukkandan](https://github.com/pukkandan)\n- **utils**\n    - [Add temporary shim for logging](https://github.com/yt-dlp/yt-dlp/commit/1b392f905d20ef1f1b300b180f867d43c9ce49b8) by [pukkandan](https://github.com/pukkandan)\n    - [Improve `parse_duration`](https://github.com/yt-dlp/yt-dlp/commit/af86873218c24c3859ccf575a87f2b00a73b49d0) by [bashonly](https://github.com/bashonly)\n    - HTTPHeaderDict: [Handle byte values](https://github.com/yt-dlp/yt-dlp/commit/3f7965105d8d2048359e67c1e8b8ebd51588143b) by [pukkandan](https://github.com/pukkandan)\n    - `clean_podcast_url`: [Handle more trackers](https://github.com/yt-dlp/yt-dlp/commit/2af4eeb77246b8183aae75a0a8d19f18c08115b2) ([#7556](https://github.com/yt-dlp/yt-dlp/issues/7556)) by [bashonly](https://github.com/bashonly), [mabdelfattah](https://github.com/mabdelfattah)\n    - `js_to_json`: [Handle `Array` objects](https://github.com/yt-dlp/yt-dlp/commit/52414d64ca7b92d3f83964cdd68247989b0c4625) by [Grub4K](https://github.com/Grub4K), [std-move](https://github.com/std-move)\n\n#### Extractor changes\n- [Extract subtitles from SMIL manifests](https://github.com/yt-dlp/yt-dlp/commit/550e65410a7a1b105923494ac44460a4dc1a15d9) ([#7667](https://github.com/yt-dlp/yt-dlp/issues/7667)) by [bashonly](https://github.com/bashonly), [pukkandan](https://github.com/pukkandan)\n- [Fix `--load-pages`](https://github.com/yt-dlp/yt-dlp/commit/81b4712bca608b9015aa68a4d96661d56e9cb894) by [pukkandan](https://github.com/pukkandan)\n- [Make `_search_nuxt_data` more lenient](https://github.com/yt-dlp/yt-dlp/commit/904a19ee93195ce0bd4b08bd22b186120afb5b17) by [std-move](https://github.com/std-move)\n- **abematv**\n    - [Fix proxy handling](https://github.com/yt-dlp/yt-dlp/commit/497bbbbd7328cb705f70eced94dbd90993819a46) ([#8046](https://github.com/yt-dlp/yt-dlp/issues/8046)) by [SevenLives](https://github.com/SevenLives)\n    - [Temporary fix for protocol handler](https://github.com/yt-dlp/yt-dlp/commit/9f66247289b9f8ecf931833b3f5f127274dd2161) by [pukkandan](https://github.com/pukkandan)\n- **amazonminitv**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/538d37671a17e0782d17f08df17800e2e3bd57c8) by [bashonly](https://github.com/bashonly), [GautamMKGarg](https://github.com/GautamMKGarg)\n- **antenna**: [Support antenna.gr](https://github.com/yt-dlp/yt-dlp/commit/665876034c8d3c031443f6b4958bed02ccdf4164) ([#7584](https://github.com/yt-dlp/yt-dlp/issues/7584)) by [stdedos](https://github.com/stdedos)\n- **artetv**: [Fix HLS formats extraction](https://github.com/yt-dlp/yt-dlp/commit/c2da0b5ea215298135f76e3dc14b972a3c4afacb) by [bashonly](https://github.com/bashonly)\n- **axs**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/aee6b9b88c0bcccf27fd23b7e00fc0b7b168928f) ([#8094](https://github.com/yt-dlp/yt-dlp/issues/8094)) by [barsnick](https://github.com/barsnick)\n- **banbye**: [Support video ids containing a hyphen](https://github.com/yt-dlp/yt-dlp/commit/578a82e497502b951036ce9da6fe0dac6937ac27) ([#8059](https://github.com/yt-dlp/yt-dlp/issues/8059)) by [kshitiz305](https://github.com/kshitiz305)\n- **bbc**: [Extract tracklist as chapters](https://github.com/yt-dlp/yt-dlp/commit/eda0e415d26eb084e570cf5372d38ee1f616b70f) ([#7788](https://github.com/yt-dlp/yt-dlp/issues/7788)) by [garret1317](https://github.com/garret1317)\n- **bild.de**: [Extract HLS formats](https://github.com/yt-dlp/yt-dlp/commit/b4c1c408c63724339eb12b16c91b253a7ee62cfa) ([#8032](https://github.com/yt-dlp/yt-dlp/issues/8032)) by [barsnick](https://github.com/barsnick)\n- **bilibili**\n    - [Add support for series, favorites and watch later](https://github.com/yt-dlp/yt-dlp/commit/9e68747f9607f05e92bb7d9b6e79d678b50070e1) ([#7518](https://github.com/yt-dlp/yt-dlp/issues/7518)) by [c-basalt](https://github.com/c-basalt)\n    - [Extract Dolby audio formats](https://github.com/yt-dlp/yt-dlp/commit/b84fda7388dd20d38921e23b469147f3957c1812) ([#8142](https://github.com/yt-dlp/yt-dlp/issues/8142)) by [ClosedPort22](https://github.com/ClosedPort22)\n    - [Extract `format_id`](https://github.com/yt-dlp/yt-dlp/commit/5336bf57a7061e0955a37f0542fc8ebf50d55b17) ([#7555](https://github.com/yt-dlp/yt-dlp/issues/7555)) by [c-basalt](https://github.com/c-basalt)\n- **bilibilibangumi**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/bdd0b75e3f41ff35440eda6d395008beef19ef2f) ([#7337](https://github.com/yt-dlp/yt-dlp/issues/7337)) by [GD-Slime](https://github.com/GD-Slime)\n- **bpb**: [Overhaul extractor](https://github.com/yt-dlp/yt-dlp/commit/f659e6439444ac64305b5c80688cd82f59d2279c) ([#8119](https://github.com/yt-dlp/yt-dlp/issues/8119)) by [Grub4K](https://github.com/Grub4K)\n- **brilliantpala**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/92feb5654c5a4c81ba872904a618700fcbb3e546) ([#6680](https://github.com/yt-dlp/yt-dlp/issues/6680)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **canal1, caracoltvplay**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/b3febedbeb662dfdf9b5c1d5799039ad4fc969de) ([#7151](https://github.com/yt-dlp/yt-dlp/issues/7151)) by [elyse0](https://github.com/elyse0)\n- **cbc**: [Ignore any 426 from API](https://github.com/yt-dlp/yt-dlp/commit/9bf14be775289bd88cc1f5c89fd761ae51879484) ([#7689](https://github.com/yt-dlp/yt-dlp/issues/7689)) by [makew0rld](https://github.com/makew0rld)\n- **cbcplayer**: [Extract HLS formats and subtitles](https://github.com/yt-dlp/yt-dlp/commit/339c339fec095ff4141b20e6aa83629117fb26df) ([#7484](https://github.com/yt-dlp/yt-dlp/issues/7484)) by [trainman261](https://github.com/trainman261)\n- **cbcplayerplaylist**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/ed711897814f3ee0b1822e4205e74133467e8f1c) ([#7870](https://github.com/yt-dlp/yt-dlp/issues/7870)) by [trainman261](https://github.com/trainman261)\n- **cineverse**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/15591940ff102d1ae337d603a46d8f238c83a61f) ([#8146](https://github.com/yt-dlp/yt-dlp/issues/8146)) by [garret1317](https://github.com/garret1317)\n- **crunchyroll**: [Remove initial state extraction](https://github.com/yt-dlp/yt-dlp/commit/9b16762f48914de9ac914601769c76668e433325) ([#7632](https://github.com/yt-dlp/yt-dlp/issues/7632)) by [Grub4K](https://github.com/Grub4K)\n- **douyutv**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/21f40e75dfc0055ea9cdbd7fe2c46c6f9b561afd) ([#7652](https://github.com/yt-dlp/yt-dlp/issues/7652)) by [c-basalt](https://github.com/c-basalt)\n- **dropbox**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/b9f2bc2dbed2323734a0d18e65e1e2e23dc833d8) ([#7926](https://github.com/yt-dlp/yt-dlp/issues/7926)) by [bashonly](https://github.com/bashonly), [denhotte](https://github.com/denhotte), [nathantouze](https://github.com/nathantouze) (With fixes in [099fb1b](https://github.com/yt-dlp/yt-dlp/commit/099fb1b35cf835303306549f5113d1802d79c9c7) by [bashonly](https://github.com/bashonly))\n- **eplus**: inbound: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/295fbb3ae3a7d0dd50e286be5c487cf145ed5778) ([#5782](https://github.com/yt-dlp/yt-dlp/issues/5782)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **expressen**: [Improve `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/a5e264d74b4bd60c6e7ec4e38f1a23af4e420531) ([#8153](https://github.com/yt-dlp/yt-dlp/issues/8153)) by [kylegustavo](https://github.com/kylegustavo)\n- **facebook**\n    - [Add dash manifest URL](https://github.com/yt-dlp/yt-dlp/commit/a854fbec56d5004f5147116a41d1dd050632a579) ([#7743](https://github.com/yt-dlp/yt-dlp/issues/7743)) by [ringus1](https://github.com/ringus1)\n    - [Fix webpage extraction](https://github.com/yt-dlp/yt-dlp/commit/d3d81cc98f554d0adb87d24bfd6fabaaa803944d) ([#7890](https://github.com/yt-dlp/yt-dlp/issues/7890)) by [ringus1](https://github.com/ringus1)\n    - [Improve format sorting](https://github.com/yt-dlp/yt-dlp/commit/308936619c8a4f3a52d73c829c2006ff6c55fea2) ([#8074](https://github.com/yt-dlp/yt-dlp/issues/8074)) by [fireattack](https://github.com/fireattack)\n    - reel: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/bb5d84c9d2f1e978c3eddfb5ccbe138036682a36) ([#7564](https://github.com/yt-dlp/yt-dlp/issues/7564)) by [bashonly](https://github.com/bashonly), [demon071](https://github.com/demon071)\n- **fox**: [Support foxsports.com](https://github.com/yt-dlp/yt-dlp/commit/30b29f37159e9226e2f2d5434c9a4096ac4efa2e) ([#7724](https://github.com/yt-dlp/yt-dlp/issues/7724)) by [ischmidt20](https://github.com/ischmidt20)\n- **funker530**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/0ce1f48bf1cb78d40d734ce73ee1c90eccf92274) ([#8040](https://github.com/yt-dlp/yt-dlp/issues/8040)) by [04-pasha-04](https://github.com/04-pasha-04)\n- **generic**\n    - [Fix KVS thumbnail extraction](https://github.com/yt-dlp/yt-dlp/commit/53675852195d8dd859555d4789944a6887171ff8) by [bashonly](https://github.com/bashonly)\n    - [Fix generic title for embeds](https://github.com/yt-dlp/yt-dlp/commit/994f7ef8e6003f4b7b258528755d0b6adcc31714) by [pukkandan](https://github.com/pukkandan)\n- **gofile**: [Update token](https://github.com/yt-dlp/yt-dlp/commit/99c99c7185f5d8e9b3699a6fc7f86ec663d7b97e) by [bashonly](https://github.com/bashonly)\n- **hotstar**\n    - [Extract `release_year`](https://github.com/yt-dlp/yt-dlp/commit/7237c8dca0590aa7438ade93f927df88c9381ec7) ([#7869](https://github.com/yt-dlp/yt-dlp/issues/7869)) by [Rajeshwaran2001](https://github.com/Rajeshwaran2001)\n    - [Make metadata extraction non-fatal](https://github.com/yt-dlp/yt-dlp/commit/30ea88591b728cca0896018dbf67c2298070c669) by [bashonly](https://github.com/bashonly)\n    - [Support `/clips/` URLs](https://github.com/yt-dlp/yt-dlp/commit/86eeb044c2342d68c6ef177577f87852e6badd85) ([#7710](https://github.com/yt-dlp/yt-dlp/issues/7710)) by [bashonly](https://github.com/bashonly)\n- **hungama**: [Overhaul extractors](https://github.com/yt-dlp/yt-dlp/commit/4b3a6ef1b3e235ba9a45142830b6edb357c71696) ([#7757](https://github.com/yt-dlp/yt-dlp/issues/7757)) by [bashonly](https://github.com/bashonly), [Yalab7](https://github.com/Yalab7)\n- **indavideoembed**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/63e0c5748c0eb461a2ccca4181616eb930b4b750) ([#8129](https://github.com/yt-dlp/yt-dlp/issues/8129)) by [aky-01](https://github.com/aky-01)\n- **iprima**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/568f08051841aedea968258889539741e26009e9) ([#7216](https://github.com/yt-dlp/yt-dlp/issues/7216)) by [std-move](https://github.com/std-move)\n- **lbry**: [Fix original format extraction](https://github.com/yt-dlp/yt-dlp/commit/127a22460658ac39cbe5c4b3fb88d578363e0dfa) ([#7711](https://github.com/yt-dlp/yt-dlp/issues/7711)) by [bashonly](https://github.com/bashonly)\n- **lecturio**: [Improve `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/efa2339502a37cf13ae7f143bd8b2c28f452d1cd) ([#7649](https://github.com/yt-dlp/yt-dlp/issues/7649)) by [simon300000](https://github.com/simon300000)\n- **magellantv**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/f4ea501551526ebcb54d19b84cf0ebe798583a85) ([#7616](https://github.com/yt-dlp/yt-dlp/issues/7616)) by [bashonly](https://github.com/bashonly)\n- **massengeschmack.tv**: [Fix title extraction](https://github.com/yt-dlp/yt-dlp/commit/81f46ac573dc443ad48560f308582a26784d3015) ([#7813](https://github.com/yt-dlp/yt-dlp/issues/7813)) by [sb0stn](https://github.com/sb0stn)\n- **media.ccc.de**: lists: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/cf11b40ac40e3d23a6352753296f3a732886efb9) ([#8144](https://github.com/yt-dlp/yt-dlp/issues/8144)) by [Rohxn16](https://github.com/Rohxn16)\n- **mediaite**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/630a55df8de7747e79aa680959d785dfff2c4b76) ([#7923](https://github.com/yt-dlp/yt-dlp/issues/7923)) by [Grabien](https://github.com/Grabien)\n- **mediaklikk**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/6e07e4bc7e59f5bdb60e93c011e57b18b009f2b5) ([#8086](https://github.com/yt-dlp/yt-dlp/issues/8086)) by [bashonly](https://github.com/bashonly), [zhallgato](https://github.com/zhallgato)\n- **mediastream**: [Make embed extraction non-fatal](https://github.com/yt-dlp/yt-dlp/commit/635ae31f68a3ac7f6393d59657ed711e34ee3552) by [bashonly](https://github.com/bashonly)\n- **mixcloud**: [Update API URL](https://github.com/yt-dlp/yt-dlp/commit/7b71643cc986de9a3768dac4ac9b64f4d05e7f5e) ([#8114](https://github.com/yt-dlp/yt-dlp/issues/8114)) by [garret1317](https://github.com/garret1317)\n- **monstercat**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/eaee21bf71889d495076037cbe590c8c0b21ef3a) ([#8133](https://github.com/yt-dlp/yt-dlp/issues/8133)) by [garret1317](https://github.com/garret1317)\n- **motortrendondemand**: [Update `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/c03a58ec9933e4a42c2d8fa80b8a0ddb2cde64e6) ([#7683](https://github.com/yt-dlp/yt-dlp/issues/7683)) by [AmirAflak](https://github.com/AmirAflak)\n- **museai**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/65cfa2b057d7946fbe322155a778fe206556d0c6) ([#7614](https://github.com/yt-dlp/yt-dlp/issues/7614)) by [bashonly](https://github.com/bashonly)\n- **mzaalo**: [Improve `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/d7aee8e310b2c4f21d50aac0b420e1b3abde21a4) by [bashonly](https://github.com/bashonly)\n- **n1info**: article: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/8ac5b6d96ae5c60cd5ae2495949e0068a6754c45) ([#7373](https://github.com/yt-dlp/yt-dlp/issues/7373)) by [u-spec-png](https://github.com/u-spec-png)\n- **nfl.com**: plus, replay: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/1eaca74bc2ca0f5b1ec532f24c61de44f2e8cb2d) ([#7838](https://github.com/yt-dlp/yt-dlp/issues/7838)) by [bashonly](https://github.com/bashonly)\n- **niconicochannelplus**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/698beb9a497f51693e64d167e572ff9efa4bc25f) ([#5686](https://github.com/yt-dlp/yt-dlp/issues/5686)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **nitter**: [Fix title extraction fallback](https://github.com/yt-dlp/yt-dlp/commit/a83da3717d30697102e76f63a6f29d77f9373c2a) ([#8102](https://github.com/yt-dlp/yt-dlp/issues/8102)) by [ApoorvShah111](https://github.com/ApoorvShah111)\n- **noodlemagazine**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/bae4834245a708fff97219849ec880c319c88bc6) ([#7830](https://github.com/yt-dlp/yt-dlp/issues/7830)) by [RedDeffender](https://github.com/RedDeffender) (With fixes in [69dbfe0](https://github.com/yt-dlp/yt-dlp/commit/69dbfe01c47cd078682a87f179f5846e2679e927) by [bashonly](https://github.com/bashonly))\n- **novaembed**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/2269065ad60cb0ab62408ae6a7b20283e5252232) ([#7910](https://github.com/yt-dlp/yt-dlp/issues/7910)) by [std-move](https://github.com/std-move)\n- **patreoncampaign**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/11de6fec9c9b8d34d1f90c8e6218ec58a3471b58) ([#7664](https://github.com/yt-dlp/yt-dlp/issues/7664)) by [bashonly](https://github.com/bashonly)\n- **pbs**: [Add extractor `PBSKidsIE`](https://github.com/yt-dlp/yt-dlp/commit/6d6081dda1290a85bdab6717f239289e3aa74c8e) ([#7602](https://github.com/yt-dlp/yt-dlp/issues/7602)) by [snixon](https://github.com/snixon)\n- **piapro**: [Support `/content` URL](https://github.com/yt-dlp/yt-dlp/commit/1bcb9fe8715b1f288efc322be3de409ee0597080) ([#7592](https://github.com/yt-dlp/yt-dlp/issues/7592)) by [FinnRG](https://github.com/FinnRG)\n- **piaulizaportal**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/6636021206dad17c7745ae6bce6cb73d6f2ef319) ([#7903](https://github.com/yt-dlp/yt-dlp/issues/7903)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **picartovod**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/db9743894071760f994f640a4c24358f749a78c0) ([#7727](https://github.com/yt-dlp/yt-dlp/issues/7727)) by [Frankgoji](https://github.com/Frankgoji)\n- **pornbox**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/40999467f72db074a3f13057da9bf82a857530fe) ([#7386](https://github.com/yt-dlp/yt-dlp/issues/7386)) by [niemands](https://github.com/niemands)\n- **pornhub**: [Update access cookies for UK](https://github.com/yt-dlp/yt-dlp/commit/1d3d579c2142f69831b6ae140e1d8e824e07fa0e) ([#7591](https://github.com/yt-dlp/yt-dlp/issues/7591)) by [zhong-yiyu](https://github.com/zhong-yiyu)\n- **pr0gramm**: [Rewrite extractor](https://github.com/yt-dlp/yt-dlp/commit/b532556d0a85e7d76f8f0880861232fb706ddbc5) ([#8151](https://github.com/yt-dlp/yt-dlp/issues/8151)) by [Grub4K](https://github.com/Grub4K)\n- **radiofrance**: [Add support for livestreams, podcasts, playlists](https://github.com/yt-dlp/yt-dlp/commit/ba8e9eb2c8bbb699f314169fab8e544437ad731e) ([#7006](https://github.com/yt-dlp/yt-dlp/issues/7006)) by [elyse0](https://github.com/elyse0)\n- **rbgtum**: [Fix extraction and support new URL format](https://github.com/yt-dlp/yt-dlp/commit/5fccabac27ca3c1165ade1b0df6fbadc24258dc2) ([#7690](https://github.com/yt-dlp/yt-dlp/issues/7690)) by [simon300000](https://github.com/simon300000)\n- **reddit**\n    - [Extract subtitles](https://github.com/yt-dlp/yt-dlp/commit/20c3c9b433dd47faf0dbde6b46e4e34eb76109a5) by [bashonly](https://github.com/bashonly)\n    - [Fix thumbnail extraction](https://github.com/yt-dlp/yt-dlp/commit/9a04113dfbb69b904e4e2bea736da293505786b8) by [bashonly](https://github.com/bashonly)\n- **rtvslo**: [Fix format extraction](https://github.com/yt-dlp/yt-dlp/commit/94389b225d9bcf29aa7ba8afaf1bbd7c62204eae) ([#8131](https://github.com/yt-dlp/yt-dlp/issues/8131)) by [bashonly](https://github.com/bashonly)\n- **rule34video**: [Extract tags](https://github.com/yt-dlp/yt-dlp/commit/58493923e9b6f774947a2131e5258e9f3cf816be) ([#7117](https://github.com/yt-dlp/yt-dlp/issues/7117)) by [soundchaser128](https://github.com/soundchaser128)\n- **rumble**: [Fix embed extraction](https://github.com/yt-dlp/yt-dlp/commit/23d829a3420450bcfb0788e6fb2cf4f6acdbe596) ([#8035](https://github.com/yt-dlp/yt-dlp/issues/8035)) by [trislee](https://github.com/trislee)\n- **s4c**\n    - [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/b9de629d78ce31699f2de886071dc257830f9676) ([#7730](https://github.com/yt-dlp/yt-dlp/issues/7730)) by [ifan-t](https://github.com/ifan-t)\n    - [Add series support and extract subs/thumbs](https://github.com/yt-dlp/yt-dlp/commit/fe371dcf0ba5ce8d42480eade54eeeac99ab3cb0) ([#7776](https://github.com/yt-dlp/yt-dlp/issues/7776)) by [ifan-t](https://github.com/ifan-t)\n- **sohu**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/5be7e978867b5f66ad6786c674d79d40e950ae16) ([#7628](https://github.com/yt-dlp/yt-dlp/issues/7628)) by [bashonly](https://github.com/bashonly), [c-basalt](https://github.com/c-basalt)\n- **stageplus**: [Fix m3u8 extraction](https://github.com/yt-dlp/yt-dlp/commit/56b3dc03354b75be995759d8441d2754c0442b9a) ([#7929](https://github.com/yt-dlp/yt-dlp/issues/7929)) by [bashonly](https://github.com/bashonly)\n- **streamanity**: [Remove](https://github.com/yt-dlp/yt-dlp/commit/2cfe221fbbe46faa3f46552c08d947a51f424903) ([#7571](https://github.com/yt-dlp/yt-dlp/issues/7571)) by [alerikaisattera](https://github.com/alerikaisattera)\n- **svtplay**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/2301b5c1b77a65abbb46b72f91e1e4666fd5d985) ([#7789](https://github.com/yt-dlp/yt-dlp/issues/7789)) by [dirkf](https://github.com/dirkf), [wader](https://github.com/wader)\n- **tbsjp**: [Add episode, program, playlist extractors](https://github.com/yt-dlp/yt-dlp/commit/876b70c8edf4c0147f180bd981fbc4d625cbfb9c) ([#7765](https://github.com/yt-dlp/yt-dlp/issues/7765)) by [garret1317](https://github.com/garret1317)\n- **tiktok**\n    - [Fix audio-only format extraction](https://github.com/yt-dlp/yt-dlp/commit/b09bd0c19648f60c59fb980cd454cb0069959fb9) ([#7712](https://github.com/yt-dlp/yt-dlp/issues/7712)) by [bashonly](https://github.com/bashonly)\n    - [Fix webpage extraction](https://github.com/yt-dlp/yt-dlp/commit/069cbece9dba6384f1cc5fcfc7ce562a31af42fc) by [bashonly](https://github.com/bashonly)\n- **triller**: [Fix unlisted video extraction](https://github.com/yt-dlp/yt-dlp/commit/39837ae3199aa934299badbd0d63243ed639e6c8) ([#7670](https://github.com/yt-dlp/yt-dlp/issues/7670)) by [bashonly](https://github.com/bashonly)\n- **tv5mondeplus**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/7d3d658f4c558ee7d72b1c01b46f2126948681cd) ([#7952](https://github.com/yt-dlp/yt-dlp/issues/7952)) by [dirkf](https://github.com/dirkf), [korli](https://github.com/korli)\n- **twitcasting**\n    - [Improve `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/cebbd33b1c678149fc8f0e254db6fc0da317ea80) ([#8120](https://github.com/yt-dlp/yt-dlp/issues/8120)) by [c-basalt](https://github.com/c-basalt)\n    - [Support `--wait-for-video`](https://github.com/yt-dlp/yt-dlp/commit/c1d71d0d9f41db5e4306c86af232f5f6220a130b) ([#7975](https://github.com/yt-dlp/yt-dlp/issues/7975)) by [at-wat](https://github.com/at-wat)\n- **twitter**\n    - [Add fallback, improve error handling](https://github.com/yt-dlp/yt-dlp/commit/6014355c6142f68e20c8374e3787e5b5820f19e2) ([#7621](https://github.com/yt-dlp/yt-dlp/issues/7621)) by [bashonly](https://github.com/bashonly)\n    - [Fix GraphQL and legacy API](https://github.com/yt-dlp/yt-dlp/commit/92315c03774cfabb3a921884326beb4b981f786b) ([#7516](https://github.com/yt-dlp/yt-dlp/issues/7516)) by [bashonly](https://github.com/bashonly)\n    - [Fix retweet extraction and syndication API](https://github.com/yt-dlp/yt-dlp/commit/a006ce2b27357c15792eb5c18f06765e640b801c) ([#8016](https://github.com/yt-dlp/yt-dlp/issues/8016)) by [bashonly](https://github.com/bashonly)\n    - [Revert 92315c03774cfabb3a921884326beb4b981f786b](https://github.com/yt-dlp/yt-dlp/commit/b03fa7834579a01cc5fba48c0e73488a16683d48) by [pukkandan](https://github.com/pukkandan)\n    - spaces\n        - [Fix format protocol](https://github.com/yt-dlp/yt-dlp/commit/613dbce177d34ffc31053e8e01acf4bb107bcd1e) ([#7550](https://github.com/yt-dlp/yt-dlp/issues/7550)) by [bashonly](https://github.com/bashonly)\n        - [Pass referer header to downloader](https://github.com/yt-dlp/yt-dlp/commit/c6ef553792ed48462f9fd0e78143bef6b1a71c2e) by [bashonly](https://github.com/bashonly)\n- **unsupported**: [List more sites with DRM](https://github.com/yt-dlp/yt-dlp/commit/e7057383380d7d53815f8feaf90ca3dcbde88983) by [pukkandan](https://github.com/pukkandan)\n- **videa**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/98eac0e6ba0e510ae7dfdfd249d42ee71fb272b1) ([#8003](https://github.com/yt-dlp/yt-dlp/issues/8003)) by [aky-01](https://github.com/aky-01), [hatsomatt](https://github.com/hatsomatt)\n- **vrt**: [Update token signing key](https://github.com/yt-dlp/yt-dlp/commit/325191d0c9bf3fe257b8a7c2eb95080f44f6ddfc) ([#7519](https://github.com/yt-dlp/yt-dlp/issues/7519)) by [Zprokkel](https://github.com/Zprokkel)\n- **wat.tv**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/7cccab79e7d00ed965b48b8cefce1da8a0513409) ([#7898](https://github.com/yt-dlp/yt-dlp/issues/7898)) by [davinkevin](https://github.com/davinkevin)\n- **wdr**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/5d0395498d7065aa5e55bac85fa9354b4b0d48eb) ([#7979](https://github.com/yt-dlp/yt-dlp/issues/7979)) by [szabyg](https://github.com/szabyg)\n- **web.archive**: vlive: [Remove extractor](https://github.com/yt-dlp/yt-dlp/commit/9652bca1bd02f6bc1b8cb1e186f2ccbf32225561) ([#8132](https://github.com/yt-dlp/yt-dlp/issues/8132)) by [bashonly](https://github.com/bashonly)\n- **weibo**: [Fix extractor and support user extraction](https://github.com/yt-dlp/yt-dlp/commit/69b03f84f8378b0b5a2fbae56f9b7d860b2f529e) ([#7657](https://github.com/yt-dlp/yt-dlp/issues/7657)) by [c-basalt](https://github.com/c-basalt)\n- **weverse**: [Support extraction without auth](https://github.com/yt-dlp/yt-dlp/commit/c2d8ee0000302aba63476b7d5bd8793e57b6c8c6) ([#7924](https://github.com/yt-dlp/yt-dlp/issues/7924)) by [seproDev](https://github.com/seproDev)\n- **wimbledon**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/a15fcd299e767a510debd8dc1646fe863b96ce0e) ([#7551](https://github.com/yt-dlp/yt-dlp/issues/7551)) by [nnoboa](https://github.com/nnoboa)\n- **wrestleuniverseppv**: [Fix HLS AES key extraction](https://github.com/yt-dlp/yt-dlp/commit/dae349da97cafe7357106a8f3187fd48a2ad1210) by [bashonly](https://github.com/bashonly)\n- **youtube**\n    - [Add `player_params` extractor arg](https://github.com/yt-dlp/yt-dlp/commit/ba06d77a316650ff057347d224b5afa8b203ad65) ([#7719](https://github.com/yt-dlp/yt-dlp/issues/7719)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Fix `player_params` arg being converted to lowercase](https://github.com/yt-dlp/yt-dlp/commit/546b2c28a106cf8101d481b215b676d1b091d276) by [coletdjnz](https://github.com/coletdjnz)\n    - [Fix consent cookie](https://github.com/yt-dlp/yt-dlp/commit/378ae9f9fb8e8c86e6ac89c4c5b815b48ce93620) ([#7774](https://github.com/yt-dlp/yt-dlp/issues/7774)) by [coletdjnz](https://github.com/coletdjnz)\n    - tab: [Detect looping feeds](https://github.com/yt-dlp/yt-dlp/commit/1ba6fe9db5f660d5538588315c23ad6cf0371c5f) ([#6621](https://github.com/yt-dlp/yt-dlp/issues/6621)) by [coletdjnz](https://github.com/coletdjnz)\n- **zaiko**: [Improve thumbnail extraction](https://github.com/yt-dlp/yt-dlp/commit/ecef42c3adbcb6a84405139047923c4967316f28) ([#8054](https://github.com/yt-dlp/yt-dlp/issues/8054)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **zee5**: [Update access token endpoint](https://github.com/yt-dlp/yt-dlp/commit/a0de8bb8601146b8f87bf7cd562eef8bfb4690be) ([#7914](https://github.com/yt-dlp/yt-dlp/issues/7914)) by [bashonly](https://github.com/bashonly)\n- **zoom**: [Extract duration](https://github.com/yt-dlp/yt-dlp/commit/66cc64ff6696f9921ff112a278542f8d999ffea4) by [bashonly](https://github.com/bashonly)\n\n#### Downloader changes\n- **external**\n    - [Fix ffmpeg input from stdin](https://github.com/yt-dlp/yt-dlp/commit/e57eb98222d29cc4c09ee975d3c492274a6e5be3) ([#7655](https://github.com/yt-dlp/yt-dlp/issues/7655)) by [bashonly](https://github.com/bashonly)\n    - [Fixes to cookie handling](https://github.com/yt-dlp/yt-dlp/commit/42ded0a429c20ec13dc006825e1508d9a02f0ad4) by [bashonly](https://github.com/bashonly)\n\n#### Postprocessor changes\n- **embedthumbnail**: [Support `m4v`](https://github.com/yt-dlp/yt-dlp/commit/8a4cd12c8f8e93292e3e95200b9d17a3af39624c) ([#7583](https://github.com/yt-dlp/yt-dlp/issues/7583)) by [Neurognostic](https://github.com/Neurognostic)\n\n#### Networking changes\n- [Add module](https://github.com/yt-dlp/yt-dlp/commit/c365dba8430ee33abda85d31f95128605bf240eb) ([#2861](https://github.com/yt-dlp/yt-dlp/issues/2861)) by [pukkandan](https://github.com/pukkandan)\n- [Add request handler preference framework](https://github.com/yt-dlp/yt-dlp/commit/db7b054a6111ca387220d0eb87bf342f9c130eb8) ([#7603](https://github.com/yt-dlp/yt-dlp/issues/7603)) by [coletdjnz](https://github.com/coletdjnz)\n- [Add strict Request extension checking](https://github.com/yt-dlp/yt-dlp/commit/86aea0d3a213da3be1da638b9b828e6f0ee1d59f) ([#7604](https://github.com/yt-dlp/yt-dlp/issues/7604)) by [coletdjnz](https://github.com/coletdjnz)\n- [Fix POST requests with zero-length payloads](https://github.com/yt-dlp/yt-dlp/commit/71baa490ebd3655746430f208a9b605d120cd315) ([#7648](https://github.com/yt-dlp/yt-dlp/issues/7648)) by [bashonly](https://github.com/bashonly)\n- [Fix `--legacy-server-connect`](https://github.com/yt-dlp/yt-dlp/commit/75dc8e673b481a82d0688aeec30f6c65d82bb359) ([#7645](https://github.com/yt-dlp/yt-dlp/issues/7645)) by [bashonly](https://github.com/bashonly)\n- [Fix various socks proxy bugs](https://github.com/yt-dlp/yt-dlp/commit/20fbbd9249a2f26c7ae579bde5ba5d69aa8fac69) ([#8065](https://github.com/yt-dlp/yt-dlp/issues/8065)) by [coletdjnz](https://github.com/coletdjnz)\n- [Ignore invalid proxies in env](https://github.com/yt-dlp/yt-dlp/commit/bbeacff7fcaa3b521066088a5ccbf34ef5070d1d) ([#7704](https://github.com/yt-dlp/yt-dlp/issues/7704)) by [coletdjnz](https://github.com/coletdjnz)\n- [Rewrite architecture](https://github.com/yt-dlp/yt-dlp/commit/227bf1a33be7b89cd7d44ad046844c4ccba104f4) ([#2861](https://github.com/yt-dlp/yt-dlp/issues/2861)) by [coletdjnz](https://github.com/coletdjnz)\n- **Request Handler**\n    - urllib\n        - [Remove dot segments during URL normalization](https://github.com/yt-dlp/yt-dlp/commit/4bf912282a34b58b6b35d8f7e6be535770c89c76) ([#7662](https://github.com/yt-dlp/yt-dlp/issues/7662)) by [coletdjnz](https://github.com/coletdjnz)\n        - [Simplify gzip decoding](https://github.com/yt-dlp/yt-dlp/commit/59e92b1f1833440bb2190f847eb735cf0f90bc85) ([#7611](https://github.com/yt-dlp/yt-dlp/issues/7611)) by [Grub4K](https://github.com/Grub4K) (With fixes in [77bff23](https://github.com/yt-dlp/yt-dlp/commit/77bff23ee97565bab2e0d75b893a21bf7983219a))\n\n#### Misc. changes\n- **build**: [Make sure deprecated modules are added](https://github.com/yt-dlp/yt-dlp/commit/131d132da5c98c6c78bd7eed4b37f4458561b3d9) by [pukkandan](https://github.com/pukkandan)\n- **cleanup**\n    - [Add color to `download-archive` message](https://github.com/yt-dlp/yt-dlp/commit/2b029ca0a9f9105c4f7626993fa60e54c9782749) ([#5138](https://github.com/yt-dlp/yt-dlp/issues/5138)) by [aaruni96](https://github.com/aaruni96), [Grub4K](https://github.com/Grub4K), [pukkandan](https://github.com/pukkandan)\n    - Miscellaneous\n        - [6148833](https://github.com/yt-dlp/yt-dlp/commit/6148833f5ceb7674142ddb8d761ffe03cee7df69), [62b5c94](https://github.com/yt-dlp/yt-dlp/commit/62b5c94cadaa5f596dc1a7083db9db12efe357be) by [pukkandan](https://github.com/pukkandan)\n        - [5ca095c](https://github.com/yt-dlp/yt-dlp/commit/5ca095cbcde3e32642a4fe5b2d69e8e3c785a021) by [barsnick](https://github.com/barsnick), [bashonly](https://github.com/bashonly), [coletdjnz](https://github.com/coletdjnz), [gamer191](https://github.com/gamer191), [Grub4K](https://github.com/Grub4K), [sqrtNOT](https://github.com/sqrtNOT)\n        - [088add9](https://github.com/yt-dlp/yt-dlp/commit/088add9567d39b758737e4299a0e619fd89d2e8f) by [Grub4K](https://github.com/Grub4K)\n- **devscripts**: `make_changelog`: [Fix changelog grouping and add networking group](https://github.com/yt-dlp/yt-dlp/commit/30ba233d4cee945756ed7344e7ddb3a90d2ae608) ([#8124](https://github.com/yt-dlp/yt-dlp/issues/8124)) by [Grub4K](https://github.com/Grub4K)\n- **docs**: [Update collaborators](https://github.com/yt-dlp/yt-dlp/commit/1be0a96a4d14f629097509fcc89d15f69a8243c7) by [Grub4K](https://github.com/Grub4K)\n- **test**\n    - [Add tests for socks proxies](https://github.com/yt-dlp/yt-dlp/commit/fcd6a76adc49d5cd8783985c7ce35384b72e545f) ([#7908](https://github.com/yt-dlp/yt-dlp/issues/7908)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Fix `httplib_validation_errors` test for old Python versions](https://github.com/yt-dlp/yt-dlp/commit/95abea9a03289da1384e5bda3d590223ccc0a238) ([#7677](https://github.com/yt-dlp/yt-dlp/issues/7677)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Fix `test_load_certifi`](https://github.com/yt-dlp/yt-dlp/commit/de20687ee6b742646128a7629b57096631a20619) by [pukkandan](https://github.com/pukkandan)\n    - download: [Test for `expected_exception`](https://github.com/yt-dlp/yt-dlp/commit/661c9a1d029296b28e0b2f8be8a72a43abaf6536) by [at-wat](https://github.com/at-wat)\n\n### 2023.07.06\n\n#### Important changes\n- Security: [[CVE-2023-35934](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-35934)] Fix [Cookie leak](https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj)\n    - `--add-header Cookie:` is deprecated and auto-scoped to input URL domains\n    - Cookies are scoped when passed to external downloaders\n    - Add `cookies` field to info.json and deprecate `http_headers.Cookie`\n\n#### Core changes\n- [Allow extractors to mark formats as potentially DRM](https://github.com/yt-dlp/yt-dlp/commit/bc344cd456380999c1ee74554dfd432a38f32ec7) ([#7396](https://github.com/yt-dlp/yt-dlp/issues/7396)) by [pukkandan](https://github.com/pukkandan)\n- [Bugfix for b4e0d75848e9447cee2cd3646ce54d4744a7ff56](https://github.com/yt-dlp/yt-dlp/commit/e59e20744eb32ce4b6ea0dece7c673be8376a710) by [pukkandan](https://github.com/pukkandan)\n- [Change how `Cookie` headers are handled](https://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07) by [Grub4K](https://github.com/Grub4K)\n- [Prevent `Cookie` leaks on HTTP redirect](https://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641) by [coletdjnz](https://github.com/coletdjnz)\n- **formats**: [Fix best fallback for storyboards](https://github.com/yt-dlp/yt-dlp/commit/906c0bdcd8974340d619e99ccd613c163eb0d0c2) by [pukkandan](https://github.com/pukkandan)\n- **outtmpl**: [Pad `playlist_index` etc even when with internal formatting](https://github.com/yt-dlp/yt-dlp/commit/47bcd437247152e0af5b3ebc5592db7bb66855c2) by [pukkandan](https://github.com/pukkandan)\n- **utils**: clean_podcast_url: [Handle protocol in redirect URL](https://github.com/yt-dlp/yt-dlp/commit/91302ed349f34dc26cc1d661bb45a4b71f4417f7) by [pukkandan](https://github.com/pukkandan)\n\n#### Extractor changes\n- **abc**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/8f05fbae2a79ce0713077ccc68b354e63216bf20) ([#7434](https://github.com/yt-dlp/yt-dlp/issues/7434)) by [meliber](https://github.com/meliber)\n- **AdultSwim**: [Extract subtitles from m3u8](https://github.com/yt-dlp/yt-dlp/commit/5e16cf92eb496b7c1541a6b1d727cb87542984db) ([#7421](https://github.com/yt-dlp/yt-dlp/issues/7421)) by [nnoboa](https://github.com/nnoboa)\n- **crunchyroll**: music: [Fix `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/5b4b92769afcc398475e481bfa839f1158902fe9) ([#7439](https://github.com/yt-dlp/yt-dlp/issues/7439)) by [AmanSal1](https://github.com/AmanSal1), [rdamas](https://github.com/rdamas)\n- **Douyin**: [Fix extraction from webpage](https://github.com/yt-dlp/yt-dlp/commit/a2be9781fbf4d7e4db245c277ca2ecc41cf3a7b2) by [bashonly](https://github.com/bashonly)\n- **googledrive**: [Fix source format extraction](https://github.com/yt-dlp/yt-dlp/commit/3b7f5300c577fef40464d46d4e4037a69d51fe82) ([#7395](https://github.com/yt-dlp/yt-dlp/issues/7395)) by [RfadnjdExt](https://github.com/RfadnjdExt)\n- **kick**: [Fix `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/ef8509c300ea50da86aea447eb214d3d6f6db6bb) by [bashonly](https://github.com/bashonly)\n- **qdance**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/f0a1ff118145b6449982ba401f9a9f656ecd8062) ([#7420](https://github.com/yt-dlp/yt-dlp/issues/7420)) by [bashonly](https://github.com/bashonly)\n- **sbs**: [Python 3.7 compat](https://github.com/yt-dlp/yt-dlp/commit/f393bbe724b1fc6c7f754a5da507e807b2b40ad2) by [pukkandan](https://github.com/pukkandan)\n- **stacommu**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/af1fd12f675220df6793fc019dff320bc76e8080) ([#7432](https://github.com/yt-dlp/yt-dlp/issues/7432)) by [urectanc](https://github.com/urectanc)\n- **twitter**\n    - [Fix unauthenticated extraction](https://github.com/yt-dlp/yt-dlp/commit/49296437a8e5fa91dacb5446e51ab588474c85d3) ([#7476](https://github.com/yt-dlp/yt-dlp/issues/7476)) by [bashonly](https://github.com/bashonly)\n    - spaces: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/1cffd621cb371f1563563cfb2fe37d137e8a7bee) ([#7512](https://github.com/yt-dlp/yt-dlp/issues/7512)) by [bashonly](https://github.com/bashonly)\n- **vidlii**: [Handle relative URLs](https://github.com/yt-dlp/yt-dlp/commit/ad8902f616ad2541f9b9626738f1393fad89a64c) by [pukkandan](https://github.com/pukkandan)\n- **vk**: VKPlay, VKPlayLive: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/8776349ef6b1f644584a92dfa00a05208a48edc4) ([#7358](https://github.com/yt-dlp/yt-dlp/issues/7358)) by [c-basalt](https://github.com/c-basalt)\n- **youtube**\n    - [Add extractor-arg `formats`](https://github.com/yt-dlp/yt-dlp/commit/58786a10f212bd63f9ad1d0b4d9e4d31c3b385e2) by [pukkandan](https://github.com/pukkandan)\n    - [Avoid false DRM detection](https://github.com/yt-dlp/yt-dlp/commit/94ed638a437fc766699d440e978982e24ce6a30a) ([#7396](https://github.com/yt-dlp/yt-dlp/issues/7396)) by [pukkandan](https://github.com/pukkandan)\n    - [Fix comments' `is_favorited`](https://github.com/yt-dlp/yt-dlp/commit/89bed013741a776506f60380b7fd89d27d0710b4) ([#7390](https://github.com/yt-dlp/yt-dlp/issues/7390)) by [bbilly1](https://github.com/bbilly1)\n    - [Ignore incomplete data for comment threads by default](https://github.com/yt-dlp/yt-dlp/commit/4dc4d8473c085900edc841c87c20041233d25b1f) ([#7475](https://github.com/yt-dlp/yt-dlp/issues/7475)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Process `post_live` over 2 hours](https://github.com/yt-dlp/yt-dlp/commit/d949c10c45bfc359bdacd52e6a180169b8128958) by [pukkandan](https://github.com/pukkandan)\n    - stories: [Remove](https://github.com/yt-dlp/yt-dlp/commit/90db9a3c00ca80492c6a58c542e4cbf4c2710866) ([#7459](https://github.com/yt-dlp/yt-dlp/issues/7459)) by [pukkandan](https://github.com/pukkandan)\n    - tab: [Support shorts-only playlists](https://github.com/yt-dlp/yt-dlp/commit/fcbc9ed760be6e3455bbadfaf277b4504b06f068) ([#7425](https://github.com/yt-dlp/yt-dlp/issues/7425)) by [coletdjnz](https://github.com/coletdjnz)\n\n#### Downloader changes\n- **aria2c**: [Add `--no-conf`](https://github.com/yt-dlp/yt-dlp/commit/8a8af356e3bba98a7f7d333aff0777d5d92130c8) by [pukkandan](https://github.com/pukkandan)\n- **external**: [Scope cookies](https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729) by [bashonly](https://github.com/bashonly), [coletdjnz](https://github.com/coletdjnz)\n- **http**: [Avoid infinite loop when no data is received](https://github.com/yt-dlp/yt-dlp/commit/662ef1e910b72e57957f06589925b2332ba52821) by [pukkandan](https://github.com/pukkandan)\n\n#### Misc. changes\n- [Add CodeQL workflow](https://github.com/yt-dlp/yt-dlp/commit/6355b5f1e1e8e7f4ef866d71d51e03baf0e82f17) ([#7497](https://github.com/yt-dlp/yt-dlp/issues/7497)) by [jorgectf](https://github.com/jorgectf)\n- **cleanup**: Miscellaneous: [337734d](https://github.com/yt-dlp/yt-dlp/commit/337734d4a8a6500bc65434843db346b5cbd05e81) by [pukkandan](https://github.com/pukkandan)\n- **docs**: [Minor fixes](https://github.com/yt-dlp/yt-dlp/commit/b532a3481046e1eabb6232ee8196fb696c356ff6) by [pukkandan](https://github.com/pukkandan)\n- **make_changelog**: [Skip reverted commits](https://github.com/yt-dlp/yt-dlp/commit/fa44802809d189fca0f4782263d48d6533384503) by [pukkandan](https://github.com/pukkandan)\n\n### 2023.06.22\n\n#### Core changes\n- [Fix bug in db3ad8a67661d7b234a6954d9c6a4a9b1749f5eb](https://github.com/yt-dlp/yt-dlp/commit/d7cd97e8d8d42b500fea9abb2aa4ac9b0f98b2ad) by [pukkandan](https://github.com/pukkandan)\n- [Improve `--download-sections`](https://github.com/yt-dlp/yt-dlp/commit/b4e0d75848e9447cee2cd3646ce54d4744a7ff56) by [pukkandan](https://github.com/pukkandan)\n    - Support negative time-ranges\n    - Add `*from-url` to obey time-ranges in URL\n- [Indicate `filesize` approximated from `tbr` better](https://github.com/yt-dlp/yt-dlp/commit/0dff8e4d1e6e9fb938f4256ea9af7d81f42fd54f) by [pukkandan](https://github.com/pukkandan)\n\n#### Extractor changes\n- [Support multiple `_VALID_URL`s](https://github.com/yt-dlp/yt-dlp/commit/5fd8367496b42c7b900b896a0d5460561a2859de) ([#5812](https://github.com/yt-dlp/yt-dlp/issues/5812)) by [nixxo](https://github.com/nixxo)\n- **dplay**: GlobalCyclingNetworkPlus: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/774aa09dd6aa61ced9ec818d1f67e53414d22762) ([#7360](https://github.com/yt-dlp/yt-dlp/issues/7360)) by [bashonly](https://github.com/bashonly)\n- **dropout**: [Fix season extraction](https://github.com/yt-dlp/yt-dlp/commit/db22142f6f817ff673d417b4b78e8db497bf8ab3) ([#7304](https://github.com/yt-dlp/yt-dlp/issues/7304)) by [OverlordQ](https://github.com/OverlordQ)\n- **motherless**: [Add gallery support, fix groups](https://github.com/yt-dlp/yt-dlp/commit/f2ff0f6f1914b82d4a51681a72cc0828115dcb4a) ([#7211](https://github.com/yt-dlp/yt-dlp/issues/7211)) by [rexlambert22](https://github.com/rexlambert22), [Ti4eeT4e](https://github.com/Ti4eeT4e)\n- **nebula**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/3f756c8c4095b942cf49788eb0862ceaf57847f2) ([#7156](https://github.com/yt-dlp/yt-dlp/issues/7156)) by [Lamieur](https://github.com/Lamieur), [rohieb](https://github.com/rohieb)\n- **rheinmaintv**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/98cb1eda7a4cf67c96078980dbd63e6c06ad7f7c) ([#7311](https://github.com/yt-dlp/yt-dlp/issues/7311)) by [barthelmannk](https://github.com/barthelmannk)\n- **youtube**\n    - [Add `ios` to default clients used](https://github.com/yt-dlp/yt-dlp/commit/1e75d97db21152acc764b30a688e516f04b8a142) by [pukkandan](https://github.com/pukkandan)\n        - IOS is affected neither by 403 nor by nsig so helps mitigate them preemptively\n        - IOS also has higher bit-rate 'premium' formats though they are not labeled as such\n    - [Improve description parsing performance](https://github.com/yt-dlp/yt-dlp/commit/71dc18fa29263a1ff0472c23d81bfc8dd4422d48) ([#7315](https://github.com/yt-dlp/yt-dlp/issues/7315)) by [berkanteber](https://github.com/berkanteber), [pukkandan](https://github.com/pukkandan)\n    - [Improve nsig function name extraction](https://github.com/yt-dlp/yt-dlp/commit/cd810afe2ac5567c822b7424800fc470ef2d0045) by [pukkandan](https://github.com/pukkandan)\n    - [Workaround 403 for android formats](https://github.com/yt-dlp/yt-dlp/commit/81ca451480051d7ce1a31c017e005358345a9149) by [pukkandan](https://github.com/pukkandan)\n\n#### Misc. changes\n- [Revert \"Add automatic duplicate issue detection\"](https://github.com/yt-dlp/yt-dlp/commit/a4486bfc1dc7057efca9dd3fe70d7fa25c56f700) by [pukkandan](https://github.com/pukkandan)\n- **cleanup**\n    - Miscellaneous\n        - [7f9c6a6](https://github.com/yt-dlp/yt-dlp/commit/7f9c6a63b16e145495479e9f666f5b9e2ee69e2f) by [bashonly](https://github.com/bashonly)\n        - [812cdfa](https://github.com/yt-dlp/yt-dlp/commit/812cdfa06c33a40e73a8e04b3e6f42c084666a43) by [pukkandan](https://github.com/pukkandan)\n\n### 2023.06.21\n\n#### Important changes\n- YouTube: Improved throttling and signature fixes\n\n#### Core changes\n- [Add `--compat-option playlist-match-filter`](https://github.com/yt-dlp/yt-dlp/commit/93b39cdbd9dcf351bfa0c4ee252805b4617fdca9) by [pukkandan](https://github.com/pukkandan)\n- [Add `--no-quiet`](https://github.com/yt-dlp/yt-dlp/commit/d669772c65e8630162fd6555d0a578b246591921) by [pukkandan](https://github.com/pukkandan)\n- [Add option `--color`](https://github.com/yt-dlp/yt-dlp/commit/8417f26b8a819cd7ffcd4e000ca3e45033e670fb) ([#6904](https://github.com/yt-dlp/yt-dlp/issues/6904)) by [Grub4K](https://github.com/Grub4K)\n- [Add option `--netrc-cmd`](https://github.com/yt-dlp/yt-dlp/commit/db3ad8a67661d7b234a6954d9c6a4a9b1749f5eb) ([#6682](https://github.com/yt-dlp/yt-dlp/issues/6682)) by [NDagestad](https://github.com/NDagestad), [pukkandan](https://github.com/pukkandan)\n- [Add option `--xff`](https://github.com/yt-dlp/yt-dlp/commit/c16644642b08e2bf4130a6c5fa01395d8718c990) by [pukkandan](https://github.com/pukkandan)\n- [Auto-select default format in `-f-`](https://github.com/yt-dlp/yt-dlp/commit/372a0f3b9dadd1e52234b498aa4c7040ef868c7d) ([#7101](https://github.com/yt-dlp/yt-dlp/issues/7101)) by [ivanskodje](https://github.com/ivanskodje), [pukkandan](https://github.com/pukkandan)\n- [Deprecate internal `Youtubedl-no-compression` header](https://github.com/yt-dlp/yt-dlp/commit/955c89584b66fcd0fcfab3e611f1edeb1ca63886) ([#6876](https://github.com/yt-dlp/yt-dlp/issues/6876)) by [coletdjnz](https://github.com/coletdjnz)\n- [Do not translate newlines in `--print-to-file`](https://github.com/yt-dlp/yt-dlp/commit/9874e82b5a61582169300bea561b3e8899ad1ef7) by [pukkandan](https://github.com/pukkandan)\n- [Ensure pre-processor errors do not block `--print`](https://github.com/yt-dlp/yt-dlp/commit/f005a35aa7e4f67a0c603a946c0dd714c151b2d6) by [pukkandan](https://github.com/pukkandan) (With fixes in [17ba434](https://github.com/yt-dlp/yt-dlp/commit/17ba4343cf99701692a7f4798fd42b50f644faba))\n- [Fix `filepath` being copied to underlying format dict](https://github.com/yt-dlp/yt-dlp/commit/84078a8b38f403495d00b46654c8750774d821de) by [pukkandan](https://github.com/pukkandan)\n- [Improve HTTP redirect handling](https://github.com/yt-dlp/yt-dlp/commit/08916a49c777cb6e000eec092881eb93ec22076c) ([#7094](https://github.com/yt-dlp/yt-dlp/issues/7094)) by [coletdjnz](https://github.com/coletdjnz)\n- [Populate `filename` and `urls` fields at all stages of `--print`](https://github.com/yt-dlp/yt-dlp/commit/170605840ea9d5ad75da6576485ea7d125b428ee) by [pukkandan](https://github.com/pukkandan) (With fixes in [b5f61b6](https://github.com/yt-dlp/yt-dlp/commit/b5f61b69d4561b81fc98c226b176f0c15493e688))\n- [Relaxed validation for numeric format filters](https://github.com/yt-dlp/yt-dlp/commit/c3f624ef0a5d7a6ae1c5ffeb243087e9fc7d79dc) by [pukkandan](https://github.com/pukkandan)\n- [Support decoding multiple content encodings](https://github.com/yt-dlp/yt-dlp/commit/daafbf49b3482edae4d70dd37070be99742a926e) ([#7142](https://github.com/yt-dlp/yt-dlp/issues/7142)) by [coletdjnz](https://github.com/coletdjnz)\n- [Support loading info.json with a list at it's root](https://github.com/yt-dlp/yt-dlp/commit/ab1de9cb1e39cf421c2b7dc6756c6ff1955bb313) by [pukkandan](https://github.com/pukkandan)\n- [Workaround erroneous urllib Windows proxy parsing](https://github.com/yt-dlp/yt-dlp/commit/3f66b6fe50f8d5b545712f8b19d5ae62f5373980) ([#7092](https://github.com/yt-dlp/yt-dlp/issues/7092)) by [coletdjnz](https://github.com/coletdjnz)\n- **cookies**\n    - [Defer extraction of v11 key from keyring](https://github.com/yt-dlp/yt-dlp/commit/9b7a48abd1b187eae1e3f6c9839c47d43ccec00b) by [Grub4K](https://github.com/Grub4K)\n    - [Move `YoutubeDLCookieJar` to cookies module](https://github.com/yt-dlp/yt-dlp/commit/b87e01c123fd560b6a674ce00f45a9459d82d98a) ([#7091](https://github.com/yt-dlp/yt-dlp/issues/7091)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Support custom Safari cookies path](https://github.com/yt-dlp/yt-dlp/commit/a58182b75a05fe0a10c5e94a536711d3ade19c20) ([#6783](https://github.com/yt-dlp/yt-dlp/issues/6783)) by [NextFire](https://github.com/NextFire)\n    - [Update for chromium changes](https://github.com/yt-dlp/yt-dlp/commit/b38d4c941d1993ab27e4c0f8e024e23c2ec0f8f8) ([#6897](https://github.com/yt-dlp/yt-dlp/issues/6897)) by [mbway](https://github.com/mbway)\n- **Cryptodome**: [Fix `__bool__`](https://github.com/yt-dlp/yt-dlp/commit/98ac902c4979e4529b166e873473bef42baa2e3e) by [pukkandan](https://github.com/pukkandan)\n- **jsinterp**\n    - [Do not compile regex](https://github.com/yt-dlp/yt-dlp/commit/7aeda6cc9e73ada0b0a0b6a6748c66bef63a20a8) by [pukkandan](https://github.com/pukkandan)\n    - [Fix division](https://github.com/yt-dlp/yt-dlp/commit/b4a252fba81f53631c07ca40ce7583f5d19a8a36) ([#7279](https://github.com/yt-dlp/yt-dlp/issues/7279)) by [bashonly](https://github.com/bashonly)\n    - [Fix global object extraction](https://github.com/yt-dlp/yt-dlp/commit/01aba2519a0884ef17d5f85608dbd2a455577147) by [pukkandan](https://github.com/pukkandan)\n    - [Handle `NaN` in bitwise operators](https://github.com/yt-dlp/yt-dlp/commit/1d7656184c6b8aa46b29149893894b3c24f1df00) by [pukkandan](https://github.com/pukkandan)\n    - [Handle negative numbers better](https://github.com/yt-dlp/yt-dlp/commit/7cf51f21916292cd80bdeceb37489f5322f166dd) by [pukkandan](https://github.com/pukkandan)\n- **outtmpl**\n    - [Allow `\\n` in replacements and default.](https://github.com/yt-dlp/yt-dlp/commit/78fde6e3398ff11e5d383a66b28664badeab5180) by [pukkandan](https://github.com/pukkandan)\n    - [Fix some minor bugs](https://github.com/yt-dlp/yt-dlp/commit/ebe1b4e34f43c3acad30e4bcb8484681a030c114) by [pukkandan](https://github.com/pukkandan) (With fixes in [1619ab3](https://github.com/yt-dlp/yt-dlp/commit/1619ab3e67d8dc4f86fc7ed292c79345bc0d91a0))\n    - [Support `str.format` syntax inside replacements](https://github.com/yt-dlp/yt-dlp/commit/ec9311c41b111110bc52cfbd6ea682c6fb23f77a) by [pukkandan](https://github.com/pukkandan)\n- **update**\n    - [Better error handling](https://github.com/yt-dlp/yt-dlp/commit/d2e84d5eb01c66fc5304e8566348d65a7be24ed7) by [pukkandan](https://github.com/pukkandan)\n    - [Do not restart into versions without `--update-to`](https://github.com/yt-dlp/yt-dlp/commit/02948a17d903f544363bb20b51a6d8baed7bba08) by [pukkandan](https://github.com/pukkandan)\n    - [Implement `--update-to` repo](https://github.com/yt-dlp/yt-dlp/commit/665472a7de3880578c0b7b3f95c71570c056368e) by [Grub4K](https://github.com/Grub4K), [pukkandan](https://github.com/pukkandan)\n- **upstream**\n    - [Merged with youtube-dl 07af47](https://github.com/yt-dlp/yt-dlp/commit/42f2d40b475db66486a4b4fe5b56751a640db5db) by [pukkandan](https://github.com/pukkandan)\n    - [Merged with youtube-dl d1c6c5](https://github.com/yt-dlp/yt-dlp/commit/4823ec9f461512daa1b8ab362893bb86a6320b26) by [pukkandan](https://github.com/pukkandan) (With fixes in [edbe5b5](https://github.com/yt-dlp/yt-dlp/commit/edbe5b589dd0860a67b4e03f58db3cd2539d91c2) by [bashonly](https://github.com/bashonly))\n- **utils**\n    - `FormatSorter`: [Improve `size` and `br`](https://github.com/yt-dlp/yt-dlp/commit/eedda5252c05327748dede204a8fccafa0288118) by [pukkandan](https://github.com/pukkandan), [u-spec-png](https://github.com/u-spec-png)\n    - `js_to_json`: [Implement template strings](https://github.com/yt-dlp/yt-dlp/commit/0898c5c8ccadfc404472456a7a7751b72afebadd) ([#6623](https://github.com/yt-dlp/yt-dlp/issues/6623)) by [Grub4K](https://github.com/Grub4K)\n    - `locked_file`: [Fix for virtiofs](https://github.com/yt-dlp/yt-dlp/commit/45998b3e371b819ce0dbe50da703809a048cc2fe) ([#6840](https://github.com/yt-dlp/yt-dlp/issues/6840)) by [brandon-dacrib](https://github.com/brandon-dacrib)\n    - `strftime_or_none`: [Handle negative timestamps](https://github.com/yt-dlp/yt-dlp/commit/a35af4306d24c56c6358f89cdf204860d1cd62b4) by [dirkf](https://github.com/dirkf), [pukkandan](https://github.com/pukkandan)\n    - `traverse_obj`\n        - [Allow iterables in traversal](https://github.com/yt-dlp/yt-dlp/commit/21b5ec86c2c37d10c5bb97edd7051d3aac16bb3e) ([#6902](https://github.com/yt-dlp/yt-dlp/issues/6902)) by [Grub4K](https://github.com/Grub4K)\n        - [More fixes](https://github.com/yt-dlp/yt-dlp/commit/b079c26f0af8085bccdadc72c61c8164ca5ab0f8) ([#6959](https://github.com/yt-dlp/yt-dlp/issues/6959)) by [Grub4K](https://github.com/Grub4K)\n    - `write_string`: [Fix noconsole behavior](https://github.com/yt-dlp/yt-dlp/commit/3b479100df02e20dd949e046003ae96ddbfced57) by [Grub4K](https://github.com/Grub4K)\n\n#### Extractor changes\n- [Do not exit early for unsuitable `url_result`](https://github.com/yt-dlp/yt-dlp/commit/baa922b5c74b10e3b86ff5e6cf6529b3aae8efab) by [pukkandan](https://github.com/pukkandan)\n- [Do not warn for invalid chapter data in description](https://github.com/yt-dlp/yt-dlp/commit/84ffeb7d5e72e3829319ba7720a8480fc4c7503b) by [pukkandan](https://github.com/pukkandan)\n- [Extract more metadata from ISM](https://github.com/yt-dlp/yt-dlp/commit/f68434cc74cfd3db01b266476a2eac8329fbb267) by [pukkandan](https://github.com/pukkandan)\n- **abematv**: [Add fallback for title and description extraction and extract more metadata](https://github.com/yt-dlp/yt-dlp/commit/c449c0655d7c8549e6e1389c26b628053b253d39) ([#6994](https://github.com/yt-dlp/yt-dlp/issues/6994)) by [Lesmiscore](https://github.com/Lesmiscore)\n- **acast**: [Support embeds](https://github.com/yt-dlp/yt-dlp/commit/c91ac833ea99b00506e470a44cf930e4e23378c9) ([#7212](https://github.com/yt-dlp/yt-dlp/issues/7212)) by [pabs3](https://github.com/pabs3)\n- **adobepass**: [Handle `Charter_Direct` MSO as `Spectrum`](https://github.com/yt-dlp/yt-dlp/commit/ea0570820336a0fe9c3b530d1b0d1e59313274f4) ([#6824](https://github.com/yt-dlp/yt-dlp/issues/6824)) by [bashonly](https://github.com/bashonly)\n- **aeonco**: [Support Youtube embeds](https://github.com/yt-dlp/yt-dlp/commit/ed81b74802b4247ee8d9dc0ef87eb52baefede1c) ([#6591](https://github.com/yt-dlp/yt-dlp/issues/6591)) by [alexklapheke](https://github.com/alexklapheke)\n- **afreecatv**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/fdd69db38924c38194ef236b26325d66ac815c88) ([#6283](https://github.com/yt-dlp/yt-dlp/issues/6283)) by [blmarket](https://github.com/blmarket)\n- **ARDBetaMediathek**: [Add thumbnail](https://github.com/yt-dlp/yt-dlp/commit/f78eb41e1c0f1dcdb10317358a26bf541dc7ee15) ([#6890](https://github.com/yt-dlp/yt-dlp/issues/6890)) by [StefanLobbenmeier](https://github.com/StefanLobbenmeier)\n- **bibeltv**: [Fix extraction, support live streams and series](https://github.com/yt-dlp/yt-dlp/commit/4ad58667c102bd82a7c4cca8aa395ec1682e3b4c) ([#6505](https://github.com/yt-dlp/yt-dlp/issues/6505)) by [flashdagger](https://github.com/flashdagger)\n- **bilibili**\n    - [Support festival videos](https://github.com/yt-dlp/yt-dlp/commit/ab29e47029e2f5b48abbbab78e82faf7cf6e9506) ([#6547](https://github.com/yt-dlp/yt-dlp/issues/6547)) by [qbnu](https://github.com/qbnu)\n    - SpaceVideo: [Extract signature](https://github.com/yt-dlp/yt-dlp/commit/6f10cdcf7eeaeae5b75e0a4428cd649c156a2d83) ([#7149](https://github.com/yt-dlp/yt-dlp/issues/7149)) by [elyse0](https://github.com/elyse0)\n- **biliIntl**: [Add comment extraction](https://github.com/yt-dlp/yt-dlp/commit/b093c38cc9f26b59a8504211d792f053142c847d) ([#6079](https://github.com/yt-dlp/yt-dlp/issues/6079)) by [HobbyistDev](https://github.com/HobbyistDev)\n- **bitchute**: [Add more fallback subdomains](https://github.com/yt-dlp/yt-dlp/commit/0c4e0fbcade0fc92d14c2a6d63e360fe067f6192) ([#6907](https://github.com/yt-dlp/yt-dlp/issues/6907)) by [Neurognostic](https://github.com/Neurognostic)\n- **booyah**: [Remove extractor](https://github.com/yt-dlp/yt-dlp/commit/f7f7a877bf8e87fd4eb0ad2494ad948ca7691114) by [pukkandan](https://github.com/pukkandan)\n- **BrainPOP**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/979568f26ece80bca72b48f0dd57d676e431059a) ([#6106](https://github.com/yt-dlp/yt-dlp/issues/6106)) by [MinePlayersPE](https://github.com/MinePlayersPE)\n- **bravotv**\n    - [Detect DRM](https://github.com/yt-dlp/yt-dlp/commit/1fe5bf240e6ade487d18079a62aa36bcc440a27a) ([#7171](https://github.com/yt-dlp/yt-dlp/issues/7171)) by [bashonly](https://github.com/bashonly)\n    - [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/06966cb8966b9aa4f60ab9c44c182a057d4ca3a3) ([#6568](https://github.com/yt-dlp/yt-dlp/issues/6568)) by [bashonly](https://github.com/bashonly)\n- **camfm**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/4cbfa570a1b9bd65b0f48770693377e8d842dcb0) ([#7083](https://github.com/yt-dlp/yt-dlp/issues/7083)) by [garret1317](https://github.com/garret1317)\n- **cbc**\n    - [Fix live extractor, playlist `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/7a7b1376fbce0067cf37566bb47131bc0022638d) ([#6625](https://github.com/yt-dlp/yt-dlp/issues/6625)) by [makew0rld](https://github.com/makew0rld)\n    - [Ignore 426 from API](https://github.com/yt-dlp/yt-dlp/commit/4afb208cf07b59291ae3b0c4efc83945ee5b8812) ([#6781](https://github.com/yt-dlp/yt-dlp/issues/6781)) by [jo-nike](https://github.com/jo-nike)\n    - gem: [Update `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/871c907454693940cb56906ed9ea49fcb7154829) ([#6499](https://github.com/yt-dlp/yt-dlp/issues/6499)) by [makeworld-the-better-one](https://github.com/makeworld-the-better-one)\n- **cbs**: [Add `ParamountPressExpress` extractor](https://github.com/yt-dlp/yt-dlp/commit/44369c9afa996e14e9f466754481d878811b5b4a) ([#6604](https://github.com/yt-dlp/yt-dlp/issues/6604)) by [bashonly](https://github.com/bashonly)\n- **cbsnews**: [Overhaul extractors](https://github.com/yt-dlp/yt-dlp/commit/f6e43d6fa9804c24525e1fed0a87782754dab7ed) ([#6681](https://github.com/yt-dlp/yt-dlp/issues/6681)) by [bashonly](https://github.com/bashonly)\n- **chilloutzone**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/6f4fc5660f40f3458882a8f51601eae4af7be609) ([#6445](https://github.com/yt-dlp/yt-dlp/issues/6445)) by [bashonly](https://github.com/bashonly)\n- **clipchamp**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/2f07c4c1da4361af213e5791279b9d152d2e4ce3) ([#6978](https://github.com/yt-dlp/yt-dlp/issues/6978)) by [bashonly](https://github.com/bashonly)\n- **comedycentral**: [Add support for movies](https://github.com/yt-dlp/yt-dlp/commit/66468bbf49562ff82670cbbd456c5e8448a6df34) ([#7108](https://github.com/yt-dlp/yt-dlp/issues/7108)) by [sqrtNOT](https://github.com/sqrtNOT)\n- **crtvg**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/26c517b29c8727e47948d6fff749d5297f0efb60) ([#7168](https://github.com/yt-dlp/yt-dlp/issues/7168)) by [ItzMaxTV](https://github.com/ItzMaxTV)\n- **crunchyroll**: [Rework with support for movies, music and artists](https://github.com/yt-dlp/yt-dlp/commit/032de83ea9ff2f4977d9c71a93bbc1775597b762) ([#6237](https://github.com/yt-dlp/yt-dlp/issues/6237)) by [Grub4K](https://github.com/Grub4K)\n- **dacast**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/c25cac2f8e5fbac2737a426d7778fd2f0efc5381) ([#6896](https://github.com/yt-dlp/yt-dlp/issues/6896)) by [bashonly](https://github.com/bashonly)\n- **daftsex**: [Update domain and embed player url](https://github.com/yt-dlp/yt-dlp/commit/fc5a7f9b27d2a89b1f3ca7d33a95301c21d832cd) ([#5966](https://github.com/yt-dlp/yt-dlp/issues/5966)) by [JChris246](https://github.com/JChris246)\n- **DigitalConcertHall**: [Support films](https://github.com/yt-dlp/yt-dlp/commit/55ed4ff73487feb3177b037dfc2ea527e777da3e) ([#7202](https://github.com/yt-dlp/yt-dlp/issues/7202)) by [ItzMaxTV](https://github.com/ItzMaxTV)\n- **discogs**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/6daaf21092888beff11b807cd46f832f1f9c46a0) ([#6624](https://github.com/yt-dlp/yt-dlp/issues/6624)) by [rjy](https://github.com/rjy)\n- **dlf**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/b423b6a48e0b19260bc95ab7d72d2138d7f124dc) ([#6697](https://github.com/yt-dlp/yt-dlp/issues/6697)) by [nick-cd](https://github.com/nick-cd)\n- **drtv**: [Fix radio page extraction](https://github.com/yt-dlp/yt-dlp/commit/9a06b7b1891b48cebbe275652ae8025a36d97d97) ([#6552](https://github.com/yt-dlp/yt-dlp/issues/6552)) by [viktor-enzell](https://github.com/viktor-enzell)\n- **Dumpert**: [Fix m3u8 and support new URL pattern](https://github.com/yt-dlp/yt-dlp/commit/f8ae441501596733e2b967430471643a1d7cacb8) ([#6091](https://github.com/yt-dlp/yt-dlp/issues/6091)) by [DataGhost](https://github.com/DataGhost), [pukkandan](https://github.com/pukkandan)\n- **elevensports**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/ecfe47973f6603b5367fe2cc3c65274627d94516) ([#7172](https://github.com/yt-dlp/yt-dlp/issues/7172)) by [ItzMaxTV](https://github.com/ItzMaxTV)\n- **ettutv**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/83465fc4100a2fb2c188898fbc2f3021f6a9b4dd) ([#6579](https://github.com/yt-dlp/yt-dlp/issues/6579)) by [elyse0](https://github.com/elyse0)\n- **europarl**: [Rewrite extractor](https://github.com/yt-dlp/yt-dlp/commit/03789976d301eaed3e957dbc041573098f6af059) ([#7114](https://github.com/yt-dlp/yt-dlp/issues/7114)) by [HobbyistDev](https://github.com/HobbyistDev)\n- **eurosport**: [Improve `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/45e87ea106ad37b2a002663fa30ee41ce97b16cd) ([#7076](https://github.com/yt-dlp/yt-dlp/issues/7076)) by [HobbyistDev](https://github.com/HobbyistDev)\n- **facebook**: [Fix metadata extraction](https://github.com/yt-dlp/yt-dlp/commit/3b52a606881e6adadc33444abdeacce562b79330) ([#6856](https://github.com/yt-dlp/yt-dlp/issues/6856)) by [ringus1](https://github.com/ringus1)\n- **foxnews**: [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/97d60ad8cd6c99f01e463a9acfce8693aff2a609) ([#7222](https://github.com/yt-dlp/yt-dlp/issues/7222)) by [bashonly](https://github.com/bashonly)\n- **funker530**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/cab94a0cd8b6d3fffed5a6faff030274adbed182) ([#7291](https://github.com/yt-dlp/yt-dlp/issues/7291)) by [Cyberes](https://github.com/Cyberes)\n- **generic**\n    - [Accept values for `fragment_query`, `variant_query`](https://github.com/yt-dlp/yt-dlp/commit/5cc0a8fd2e9fec50026fb92170b57993af939e4a) ([#6600](https://github.com/yt-dlp/yt-dlp/issues/6600)) by [bashonly](https://github.com/bashonly) (With fixes in [9bfe0d1](https://github.com/yt-dlp/yt-dlp/commit/9bfe0d15bd7dbdc6b0e6378fa9f5e2e289b2373b))\n    - [Add extractor-args `hls_key`, `variant_query`](https://github.com/yt-dlp/yt-dlp/commit/c2e0fc40a73dd85ab3920f977f579d475e66ef59) ([#6567](https://github.com/yt-dlp/yt-dlp/issues/6567)) by [bashonly](https://github.com/bashonly)\n    - [Attempt to detect live HLS](https://github.com/yt-dlp/yt-dlp/commit/93e7c6995e07dafb9dcc06c0d06acf6c5bdfecc5) ([#6775](https://github.com/yt-dlp/yt-dlp/issues/6775)) by [bashonly](https://github.com/bashonly)\n- **genius**: [Add support for articles](https://github.com/yt-dlp/yt-dlp/commit/460da07439718d9af1e3661da2a23e05a913a2e6) ([#6474](https://github.com/yt-dlp/yt-dlp/issues/6474)) by [bashonly](https://github.com/bashonly)\n- **globalplayer**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/30647668a92a0ca5cd108776804baac0996bd9f7) ([#6903](https://github.com/yt-dlp/yt-dlp/issues/6903)) by [garret1317](https://github.com/garret1317)\n- **gmanetwork**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/2d97d154fe4fb84fe2ed3a4e1ed5819e89b71e88) ([#5945](https://github.com/yt-dlp/yt-dlp/issues/5945)) by [HobbyistDev](https://github.com/HobbyistDev)\n- **gronkh**: [Extract duration and chapters](https://github.com/yt-dlp/yt-dlp/commit/9c92b803fa24e48543ce969468d5404376e315b7) ([#6817](https://github.com/yt-dlp/yt-dlp/issues/6817)) by [satan1st](https://github.com/satan1st)\n- **hentaistigma**: [Remove extractor](https://github.com/yt-dlp/yt-dlp/commit/04f8018a0544736a18494bc3899d06b05b78fae6) by [pukkandan](https://github.com/pukkandan)\n- **hidive**: [Fix login](https://github.com/yt-dlp/yt-dlp/commit/e6ab678e36c40ded0aae305bbb866cdab554d417) by [pukkandan](https://github.com/pukkandan)\n- **hollywoodreporter**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/6bdb64e2a2a6d504d8ce1dc830fbfb8a7f199c63) ([#6614](https://github.com/yt-dlp/yt-dlp/issues/6614)) by [bashonly](https://github.com/bashonly)\n- **hotstar**: [Support `/shows/` URLs](https://github.com/yt-dlp/yt-dlp/commit/7f8ddebbb51c9fd4a347306332a718ba41b371b8) ([#7225](https://github.com/yt-dlp/yt-dlp/issues/7225)) by [bashonly](https://github.com/bashonly)\n- **hrefli**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/7e35526d5b970a034b9d76215ee3e4bd7631edcd) ([#6762](https://github.com/yt-dlp/yt-dlp/issues/6762)) by [selfisekai](https://github.com/selfisekai)\n- **idolplus**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/5c14b213679ed4401288bdc86ae696932e219222) ([#6732](https://github.com/yt-dlp/yt-dlp/issues/6732)) by [ping](https://github.com/ping)\n- **iq**: [Set more language codes](https://github.com/yt-dlp/yt-dlp/commit/2d5cae9636714ff922d28c548c349d5f2b48f317) ([#6476](https://github.com/yt-dlp/yt-dlp/issues/6476)) by [D0LLYNH0](https://github.com/D0LLYNH0)\n- **iwara**\n    - [Accept old URLs](https://github.com/yt-dlp/yt-dlp/commit/ab92d8651c48d247dfb7d3f0a824cc986e47c7ed) by [Lesmiscore](https://github.com/Lesmiscore)\n    - [Fix authentication](https://github.com/yt-dlp/yt-dlp/commit/0a5d7c39e17bb9bd50c9db42bcad40eb82d7f784) ([#7137](https://github.com/yt-dlp/yt-dlp/issues/7137)) by [toomyzoom](https://github.com/toomyzoom)\n    - [Fix format sorting](https://github.com/yt-dlp/yt-dlp/commit/56793f74c36899742d7abd52afb0deca97d469e1) ([#6651](https://github.com/yt-dlp/yt-dlp/issues/6651)) by [hasezoey](https://github.com/hasezoey)\n    - [Fix typo](https://github.com/yt-dlp/yt-dlp/commit/d1483ec693c79f0b4ddf493870bcb840aca4da08) by [Lesmiscore](https://github.com/Lesmiscore)\n    - [Implement login](https://github.com/yt-dlp/yt-dlp/commit/21b9413cf7dd4830b2ece57af21589dd4538fc52) ([#6721](https://github.com/yt-dlp/yt-dlp/issues/6721)) by [toomyzoom](https://github.com/toomyzoom)\n    - [Overhaul extractors](https://github.com/yt-dlp/yt-dlp/commit/c14af7a741931b364bab3d9546c0f4359f318f8c) ([#6557](https://github.com/yt-dlp/yt-dlp/issues/6557)) by [Lesmiscore](https://github.com/Lesmiscore)\n    - [Report private videos](https://github.com/yt-dlp/yt-dlp/commit/95a383be1b6fb00c92ee3fb091732c4f6009acb6) ([#6641](https://github.com/yt-dlp/yt-dlp/issues/6641)) by [Lesmiscore](https://github.com/Lesmiscore)\n- **JStream**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/3459d3c5af3b2572ed51e8ecfda6c11022a838c6) ([#6252](https://github.com/yt-dlp/yt-dlp/issues/6252)) by [Lesmiscore](https://github.com/Lesmiscore)\n- **jwplatform**: [Update `_extract_embed_urls`](https://github.com/yt-dlp/yt-dlp/commit/cf9fd52fabe71d6e7c30d3ea525029ffa561fc9c) ([#6383](https://github.com/yt-dlp/yt-dlp/issues/6383)) by [carusocr](https://github.com/carusocr)\n- **kick**: [Make initial request non-fatal](https://github.com/yt-dlp/yt-dlp/commit/0a6918a4a1431960181d8c50e0bbbcb0afbaff9a) by [bashonly](https://github.com/bashonly)\n- **LastFM**: [Rewrite playlist extraction](https://github.com/yt-dlp/yt-dlp/commit/026435714cb7c39613a0d7d2acd15d3823b78d94) ([#6379](https://github.com/yt-dlp/yt-dlp/issues/6379)) by [hatienl0i261299](https://github.com/hatienl0i261299), [pukkandan](https://github.com/pukkandan)\n- **lbry**: [Extract original quality formats](https://github.com/yt-dlp/yt-dlp/commit/44c0d66442b568d9e1359e669d8b029b08a77fa7) ([#7257](https://github.com/yt-dlp/yt-dlp/issues/7257)) by [bashonly](https://github.com/bashonly)\n- **line**: [Remove extractors](https://github.com/yt-dlp/yt-dlp/commit/faa0332ed69e070cf3bd31390589a596e962f392) ([#6734](https://github.com/yt-dlp/yt-dlp/issues/6734)) by [sian1468](https://github.com/sian1468)\n- **livestream**: [Support videos with account id](https://github.com/yt-dlp/yt-dlp/commit/bfdf144c7e5d7a93fbfa9d8e65598c72bf2b542a) ([#6324](https://github.com/yt-dlp/yt-dlp/issues/6324)) by [theperfectpunk](https://github.com/theperfectpunk)\n- **medaltv**: [Fix clips](https://github.com/yt-dlp/yt-dlp/commit/1e3c2b6ec28d7ab5e31341fa93c47b65be4fbff4) ([#6502](https://github.com/yt-dlp/yt-dlp/issues/6502)) by [xenova](https://github.com/xenova)\n- **mediastream**: [Improve `WinSports` and embed extraction](https://github.com/yt-dlp/yt-dlp/commit/03025b6e105139d01cd415ddc51fd692957fd2ba) ([#6426](https://github.com/yt-dlp/yt-dlp/issues/6426)) by [bashonly](https://github.com/bashonly)\n- **mgtv**: [Fix formats extraction](https://github.com/yt-dlp/yt-dlp/commit/59d9fe08312bbb76ee26238d207a8ca35410a48d) ([#7234](https://github.com/yt-dlp/yt-dlp/issues/7234)) by [bashonly](https://github.com/bashonly)\n- **Mzaalo**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/dc3c44f349ba85af320e706e2a27ad81a78b1c6e) ([#7163](https://github.com/yt-dlp/yt-dlp/issues/7163)) by [ItzMaxTV](https://github.com/ItzMaxTV)\n- **nbc**: [Fix `NBCStations` direct mp4 formats](https://github.com/yt-dlp/yt-dlp/commit/9be0fe1fd967f62cbf3c60bd14e1021a70abc147) ([#6637](https://github.com/yt-dlp/yt-dlp/issues/6637)) by [bashonly](https://github.com/bashonly)\n- **nebula**: [Add `beta.nebula.tv`](https://github.com/yt-dlp/yt-dlp/commit/cbfe2e5cbe0f4649a91e323a82b8f5f774f36662) ([#6516](https://github.com/yt-dlp/yt-dlp/issues/6516)) by [unbeatable-101](https://github.com/unbeatable-101)\n- **nekohacker**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/489f51279d00318018478fd7461eddbe3b45297e) ([#7003](https://github.com/yt-dlp/yt-dlp/issues/7003)) by [hasezoey](https://github.com/hasezoey)\n- **nhk**\n    - [Add `NhkRadiru` extractor](https://github.com/yt-dlp/yt-dlp/commit/8f0be90ecb3b8d862397177bb226f17b245ef933) ([#6819](https://github.com/yt-dlp/yt-dlp/issues/6819)) by [garret1317](https://github.com/garret1317)\n    - [Fix API extraction](https://github.com/yt-dlp/yt-dlp/commit/f41b949a2ef646fbc36375febbe3f0c19d742c0f) ([#7180](https://github.com/yt-dlp/yt-dlp/issues/7180)) by [menschel](https://github.com/menschel), [sjthespian](https://github.com/sjthespian)\n    - `NhkRadiruLive`: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/81c8b9bdd9841b72cbfc1bbff9dab5fb4aa038b0) ([#7332](https://github.com/yt-dlp/yt-dlp/issues/7332)) by [garret1317](https://github.com/garret1317)\n- **niconico**\n    - [Download comments from the new endpoint](https://github.com/yt-dlp/yt-dlp/commit/52ecc33e221f7de7eb6fed6c22489f0c5fdd2c6d) ([#6773](https://github.com/yt-dlp/yt-dlp/issues/6773)) by [Lesmiscore](https://github.com/Lesmiscore)\n    - live: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/f8f9250fe280d37f0988646cd5cc0072f4d33a6d) ([#5764](https://github.com/yt-dlp/yt-dlp/issues/5764)) by [Lesmiscore](https://github.com/Lesmiscore)\n    - series: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/c86e433c35fe5da6cb29f3539eef97497f84ed38) ([#6898](https://github.com/yt-dlp/yt-dlp/issues/6898)) by [sqrtNOT](https://github.com/sqrtNOT)\n- **nubilesporn**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/d4e6ef40772e0560a8ed33b844ef7549e86837be) ([#6231](https://github.com/yt-dlp/yt-dlp/issues/6231)) by [permunkle](https://github.com/permunkle)\n- **odnoklassniki**: [Fix formats extraction](https://github.com/yt-dlp/yt-dlp/commit/1a2eb5bda51d8b7a78a65acebf72a0dcf9da196b) ([#7217](https://github.com/yt-dlp/yt-dlp/issues/7217)) by [bashonly](https://github.com/bashonly)\n- **opencast**\n    - [Add ltitools to `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/3588be59cee429a0ab5c4ceb2f162298bb44147d) ([#6371](https://github.com/yt-dlp/yt-dlp/issues/6371)) by [C0D3D3V](https://github.com/C0D3D3V)\n    - [Fix format bug](https://github.com/yt-dlp/yt-dlp/commit/89dbf0848370deaa55af88c3593a2a264124caf5) ([#6512](https://github.com/yt-dlp/yt-dlp/issues/6512)) by [C0D3D3V](https://github.com/C0D3D3V)\n- **owncloud**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/c6d4b82a8b8bce59b1c9ce5e6d349ea428dac0a7) ([#6533](https://github.com/yt-dlp/yt-dlp/issues/6533)) by [C0D3D3V](https://github.com/C0D3D3V)\n- **Parler**: [Rewrite extractor](https://github.com/yt-dlp/yt-dlp/commit/80ea6d3dea8483cddd39fc89b5ee1fc06670c33c) ([#6446](https://github.com/yt-dlp/yt-dlp/issues/6446)) by [JChris246](https://github.com/JChris246)\n- **pgatour**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/3ae182ad89e1427ff7b1684d6a44ff93fa857a0c) ([#6613](https://github.com/yt-dlp/yt-dlp/issues/6613)) by [bashonly](https://github.com/bashonly)\n- **playsuisse**: [Support new url format](https://github.com/yt-dlp/yt-dlp/commit/94627c5dde12a72766bdba36e056916c29c40ed1) ([#6528](https://github.com/yt-dlp/yt-dlp/issues/6528)) by [sbor23](https://github.com/sbor23)\n- **polskieradio**: [Improve extractors](https://github.com/yt-dlp/yt-dlp/commit/738c90a463257634455ada3e5c18b714c531dede) ([#5948](https://github.com/yt-dlp/yt-dlp/issues/5948)) by [selfisekai](https://github.com/selfisekai)\n- **pornez**: [Support new URL formats](https://github.com/yt-dlp/yt-dlp/commit/cbdf9408e6f1e35e98fd6477b3d6902df5b8a47f) ([#6792](https://github.com/yt-dlp/yt-dlp/issues/6792)) by [zhgwn](https://github.com/zhgwn)\n- **pornhub**: [Set access cookies to fix extraction](https://github.com/yt-dlp/yt-dlp/commit/62beefa818c75c20b6941389bb197051554a5d41) ([#6685](https://github.com/yt-dlp/yt-dlp/issues/6685)) by [arobase-che](https://github.com/arobase-che), [Schmoaaaaah](https://github.com/Schmoaaaaah)\n- **rai**: [Rewrite extractors](https://github.com/yt-dlp/yt-dlp/commit/c6d3f81a4077aaf9cffc6aa2d0dec92f38e74bb0) ([#5940](https://github.com/yt-dlp/yt-dlp/issues/5940)) by [danog](https://github.com/danog), [nixxo](https://github.com/nixxo)\n- **recurbate**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/c2502cfed91415c7ccfff925fd3404d230046484) ([#6297](https://github.com/yt-dlp/yt-dlp/issues/6297)) by [mrscrapy](https://github.com/mrscrapy)\n- **reddit**\n    - [Add login support](https://github.com/yt-dlp/yt-dlp/commit/4d9280c9c853733534dda60486fa949bcca36c9e) ([#6950](https://github.com/yt-dlp/yt-dlp/issues/6950)) by [bashonly](https://github.com/bashonly)\n    - [Support cookies and short URLs](https://github.com/yt-dlp/yt-dlp/commit/7a6f6f24592a8065376f11a58e44878807732cf6) ([#6825](https://github.com/yt-dlp/yt-dlp/issues/6825)) by [bashonly](https://github.com/bashonly)\n- **rokfin**: [Re-construct manifest url](https://github.com/yt-dlp/yt-dlp/commit/7a6c8a0807941dd24fbf0d6172e811884f98e027) ([#6507](https://github.com/yt-dlp/yt-dlp/issues/6507)) by [vampirefrog](https://github.com/vampirefrog)\n- **rottentomatoes**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/2d306c03d6f2697fcbabb7da35aa62cc078359d3) ([#6844](https://github.com/yt-dlp/yt-dlp/issues/6844)) by [JChris246](https://github.com/JChris246)\n- **rozhlas**\n    - [Extract manifest formats](https://github.com/yt-dlp/yt-dlp/commit/e4cf7741f9302b3faa092962f2895b55cb3d89bb) ([#6590](https://github.com/yt-dlp/yt-dlp/issues/6590)) by [bashonly](https://github.com/bashonly)\n    - `MujRozhlas`: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/c2b801fea59628d5c873e06a0727fbf2051bbd1f) ([#7129](https://github.com/yt-dlp/yt-dlp/issues/7129)) by [stanoarn](https://github.com/stanoarn)\n- **rtvc**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/9b30cd3dfce83c2f0201b28a7a3ef44ab9722664) ([#6578](https://github.com/yt-dlp/yt-dlp/issues/6578)) by [elyse0](https://github.com/elyse0)\n- **rumble**\n    - [Detect timeline format](https://github.com/yt-dlp/yt-dlp/commit/78bc1868ff3352108ab2911033d1ac67a55f151e) by [pukkandan](https://github.com/pukkandan)\n    - [Fix videos without quality selection](https://github.com/yt-dlp/yt-dlp/commit/6994afc030d2a786d8032075ed71a14d7eac5a4f) by [pukkandan](https://github.com/pukkandan)\n- **sbs**: [Overhaul extractor for new API](https://github.com/yt-dlp/yt-dlp/commit/6a765f135ccb654861336ea27a2c1c24ea8e286f) ([#6839](https://github.com/yt-dlp/yt-dlp/issues/6839)) by [bashonly](https://github.com/bashonly), [dirkf](https://github.com/dirkf), [vidiot720](https://github.com/vidiot720)\n- **shemaroome**: [Pass `stream_key` header to downloader](https://github.com/yt-dlp/yt-dlp/commit/7bc92517463f5766e9d9b92c3823b5cf403c0e3d) ([#7224](https://github.com/yt-dlp/yt-dlp/issues/7224)) by [bashonly](https://github.com/bashonly)\n- **sonyliv**: [Fix login with token](https://github.com/yt-dlp/yt-dlp/commit/4815d35c191e7d375b94492a6486dd2ba43a8954) ([#7223](https://github.com/yt-dlp/yt-dlp/issues/7223)) by [bashonly](https://github.com/bashonly)\n- **stageplus**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/e5265dc6517478e589ee3c1ff0cb19bdf4e35ce1) ([#6838](https://github.com/yt-dlp/yt-dlp/issues/6838)) by [bashonly](https://github.com/bashonly)\n- **stripchat**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/f9213f8a2d7ba46b912afe1dd3ce6bb700a33d72) ([#7306](https://github.com/yt-dlp/yt-dlp/issues/7306)) by [foreignBlade](https://github.com/foreignBlade)\n- **substack**: [Fix extraction](https://github.com/yt-dlp/yt-dlp/commit/12037d8b0a578fcc78a5c8f98964e48ee6060e25) ([#7218](https://github.com/yt-dlp/yt-dlp/issues/7218)) by [bashonly](https://github.com/bashonly)\n- **sverigesradio**: [Support slug URLs](https://github.com/yt-dlp/yt-dlp/commit/5ee9a7d6e18ceea956e831994cf11c423979354f) ([#7220](https://github.com/yt-dlp/yt-dlp/issues/7220)) by [bashonly](https://github.com/bashonly)\n- **tagesschau**: [Fix single audio urls](https://github.com/yt-dlp/yt-dlp/commit/af7585c824a1e405bd8afa46d87b4be322edc93c) ([#6626](https://github.com/yt-dlp/yt-dlp/issues/6626)) by [flashdagger](https://github.com/flashdagger)\n- **teamcoco**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/c459d45dd4d417fb80a52e1a04e607776a44baa4) ([#6437](https://github.com/yt-dlp/yt-dlp/issues/6437)) by [bashonly](https://github.com/bashonly)\n- **telecaribe**: [Expand livestream support](https://github.com/yt-dlp/yt-dlp/commit/69b2f838d3d3e37dc17367ef64d978db1bea45cf) ([#6601](https://github.com/yt-dlp/yt-dlp/issues/6601)) by [bashonly](https://github.com/bashonly)\n- **tencent**: [Fix fatal metadata extraction](https://github.com/yt-dlp/yt-dlp/commit/971d901d129403e875a04dd92109507a03fbc070) ([#7219](https://github.com/yt-dlp/yt-dlp/issues/7219)) by [bashonly](https://github.com/bashonly)\n- **thesun**: [Update `_VALID_URL`](https://github.com/yt-dlp/yt-dlp/commit/0181b9a1b31db3fde943f7cd3fe9662f23bff292) ([#6522](https://github.com/yt-dlp/yt-dlp/issues/6522)) by [hatienl0i261299](https://github.com/hatienl0i261299)\n- **tiktok**\n    - [Extract 1080p adaptive formats](https://github.com/yt-dlp/yt-dlp/commit/c2a1bdb00931969193f2a31ea27b9c66a07aaec2) ([#7228](https://github.com/yt-dlp/yt-dlp/issues/7228)) by [bashonly](https://github.com/bashonly)\n    - [Fix and improve metadata extraction](https://github.com/yt-dlp/yt-dlp/commit/925936908a3c3ee0e508621db14696b9f6a8b563) ([#6777](https://github.com/yt-dlp/yt-dlp/issues/6777)) by [bashonly](https://github.com/bashonly)\n    - [Fix mp3 formats](https://github.com/yt-dlp/yt-dlp/commit/8ceb07e870424c219dced8f4348729553f05c5cc) ([#6615](https://github.com/yt-dlp/yt-dlp/issues/6615)) by [bashonly](https://github.com/bashonly)\n    - [Fix resolution extraction](https://github.com/yt-dlp/yt-dlp/commit/ab6057ec80aa75db6303b8206916d00c376c622c) ([#7237](https://github.com/yt-dlp/yt-dlp/issues/7237)) by [puc9](https://github.com/puc9)\n    - [Improve `TikTokLive` extractor](https://github.com/yt-dlp/yt-dlp/commit/216bcb66d7dce0762767d751dad10650cb57da9d) ([#6520](https://github.com/yt-dlp/yt-dlp/issues/6520)) by [bashonly](https://github.com/bashonly)\n- **triller**: [Support short URLs, detect removed videos](https://github.com/yt-dlp/yt-dlp/commit/33b737bedf8383c0d00d4e1d06a5273dcdfdb756) ([#6636](https://github.com/yt-dlp/yt-dlp/issues/6636)) by [bashonly](https://github.com/bashonly)\n- **tv4**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/125ffaa1737dd04716f2f6fbb0595ad3eb7a4b1c) ([#5649](https://github.com/yt-dlp/yt-dlp/issues/5649)) by [dirkf](https://github.com/dirkf), [TxI5](https://github.com/TxI5)\n- **tvp**: [Use new API](https://github.com/yt-dlp/yt-dlp/commit/0c7ce146e4d2a84e656d78f6857952bfd25ab389) ([#6989](https://github.com/yt-dlp/yt-dlp/issues/6989)) by [selfisekai](https://github.com/selfisekai)\n- **tvplay**: [Remove outdated domains](https://github.com/yt-dlp/yt-dlp/commit/937264419f9bf375d5656785ae6e53282587c15d) ([#7106](https://github.com/yt-dlp/yt-dlp/issues/7106)) by [ivanskodje](https://github.com/ivanskodje)\n- **twitch**\n    - [Extract original size thumbnail](https://github.com/yt-dlp/yt-dlp/commit/80b732b7a9585b2a61e456dc0d2d014a439cbaee) ([#6629](https://github.com/yt-dlp/yt-dlp/issues/6629)) by [JC-Chung](https://github.com/JC-Chung)\n    - [Fix `is_live`](https://github.com/yt-dlp/yt-dlp/commit/0551511b45f7847f40e4314aa9e624e80d086539) ([#6500](https://github.com/yt-dlp/yt-dlp/issues/6500)) by [elyse0](https://github.com/elyse0)\n    - [Support mobile clips](https://github.com/yt-dlp/yt-dlp/commit/02312c03cf53eb1da24c9ad022ee79af26060733) ([#6699](https://github.com/yt-dlp/yt-dlp/issues/6699)) by [bepvte](https://github.com/bepvte)\n    - [Update `_CLIENT_ID` and add extractor-arg](https://github.com/yt-dlp/yt-dlp/commit/01231feb142e80828985aabdec04ac608e3d43e2) ([#7200](https://github.com/yt-dlp/yt-dlp/issues/7200)) by [bashonly](https://github.com/bashonly)\n    - vod: [Support links from schedule tab](https://github.com/yt-dlp/yt-dlp/commit/dbce5afa6bb61f6272ade613f2e9a3d66b88c7ea) ([#7071](https://github.com/yt-dlp/yt-dlp/issues/7071)) by [falbrechtskirchinger](https://github.com/falbrechtskirchinger)\n- **twitter**\n    - [Add login support](https://github.com/yt-dlp/yt-dlp/commit/d1795f4a6af99c976c9d3ea2dabe5cf4f8965d3c) ([#7258](https://github.com/yt-dlp/yt-dlp/issues/7258)) by [bashonly](https://github.com/bashonly)\n    - [Default to GraphQL, handle auth errors](https://github.com/yt-dlp/yt-dlp/commit/147e62fc584c3ea6fdb09bb7a47905df68553a22) ([#6957](https://github.com/yt-dlp/yt-dlp/issues/6957)) by [bashonly](https://github.com/bashonly)\n    - spaces: [Add `release_timestamp`](https://github.com/yt-dlp/yt-dlp/commit/1c16d9df5330819cc79ad588b24aa5b72765c168) ([#7186](https://github.com/yt-dlp/yt-dlp/issues/7186)) by [CeruleanSky](https://github.com/CeruleanSky)\n- **urplay**: [Extract all subtitles](https://github.com/yt-dlp/yt-dlp/commit/7bcd4813215ac98daa4949af2ffc677c78307a38) ([#7309](https://github.com/yt-dlp/yt-dlp/issues/7309)) by [hoaluvn](https://github.com/hoaluvn)\n- **voot**: [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/4f7b11cc1c1cebf598107e00cd7295588ed484da) ([#7227](https://github.com/yt-dlp/yt-dlp/issues/7227)) by [bashonly](https://github.com/bashonly)\n- **vrt**: [Overhaul extractors](https://github.com/yt-dlp/yt-dlp/commit/1a7dcca378e80a387923ee05c250d8ba122441c6) ([#6244](https://github.com/yt-dlp/yt-dlp/issues/6244)) by [bashonly](https://github.com/bashonly), [bergoid](https://github.com/bergoid), [jeroenj](https://github.com/jeroenj)\n- **weverse**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/b844a3f8b16500663e7ab6c6ec061cc9b30f71ac) ([#6711](https://github.com/yt-dlp/yt-dlp/issues/6711)) by [bashonly](https://github.com/bashonly) (With fixes in [fd5d93f](https://github.com/yt-dlp/yt-dlp/commit/fd5d93f7040f9776fd541f4e4079dad7d3b3fb4f))\n- **wevidi**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/1ea15603d852971ed7d92f4de12808b27b3d9370) ([#6868](https://github.com/yt-dlp/yt-dlp/issues/6868)) by [truedread](https://github.com/truedread)\n- **weyyak**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/6dc00acf0f1f1107a626c21befd1691403e6aeeb) ([#7124](https://github.com/yt-dlp/yt-dlp/issues/7124)) by [ItzMaxTV](https://github.com/ItzMaxTV)\n- **whyp**: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/2c566ed14101673c651c08c306c30fa5b4010b85) ([#6803](https://github.com/yt-dlp/yt-dlp/issues/6803)) by [CoryTibbettsDev](https://github.com/CoryTibbettsDev)\n- **wrestleuniverse**\n    - [Fix cookies support](https://github.com/yt-dlp/yt-dlp/commit/c8561c6d03f025268d6d3972abeb47987c8d7cbb) by [bashonly](https://github.com/bashonly)\n    - [Fix extraction, add login](https://github.com/yt-dlp/yt-dlp/commit/ef8fb7f029b816dfc95600727d84400591a3b5c5) ([#6982](https://github.com/yt-dlp/yt-dlp/issues/6982)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n- **wykop**: [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/aed945e1b9b7d3af2a907e1a12e6508cc81d6a20) ([#6140](https://github.com/yt-dlp/yt-dlp/issues/6140)) by [selfisekai](https://github.com/selfisekai)\n- **ximalaya**: [Sort playlist entries](https://github.com/yt-dlp/yt-dlp/commit/8790ea7b2536332777bce68590386b1aa935fac7) ([#7292](https://github.com/yt-dlp/yt-dlp/issues/7292)) by [linsui](https://github.com/linsui)\n- **YahooGyaOIE, YahooGyaOPlayerIE**: [Delete extractors due to website close](https://github.com/yt-dlp/yt-dlp/commit/68be95bd0ca3f76aa63c9812935bd826b3a42e53) ([#6218](https://github.com/yt-dlp/yt-dlp/issues/6218)) by [Lesmiscore](https://github.com/Lesmiscore)\n- **yappy**: YappyProfile: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/6f69101dc912690338d32e2aab085c32e44eba3f) ([#7346](https://github.com/yt-dlp/yt-dlp/issues/7346)) by [7vlad7](https://github.com/7vlad7)\n- **youku**: [Improve error message](https://github.com/yt-dlp/yt-dlp/commit/ef0848abd425dfda6db62baa8d72897eefb0007f) ([#6690](https://github.com/yt-dlp/yt-dlp/issues/6690)) by [carusocr](https://github.com/carusocr)\n- **youporn**: [Extract m3u8 formats](https://github.com/yt-dlp/yt-dlp/commit/ddae33754ae1f32dd9c64cf895c47d20f6b5f336) by [pukkandan](https://github.com/pukkandan)\n- **youtube**\n    - [Add client name to `format_note` when `-v`](https://github.com/yt-dlp/yt-dlp/commit/c795c39f27244cbce846067891827e4847036441) ([#6254](https://github.com/yt-dlp/yt-dlp/issues/6254)) by [Lesmiscore](https://github.com/Lesmiscore), [pukkandan](https://github.com/pukkandan)\n    - [Add extractor-arg `include_duplicate_formats`](https://github.com/yt-dlp/yt-dlp/commit/86cb922118b236306310a72657f70426c20e28bb) by [pukkandan](https://github.com/pukkandan)\n    - [Bypass throttling for `-f17`](https://github.com/yt-dlp/yt-dlp/commit/c9abebb851e6188cb34b9eb744c1863dd46af919) by [pukkandan](https://github.com/pukkandan)\n    - [Construct fragment list lazily](https://github.com/yt-dlp/yt-dlp/commit/2a23d92d9ec44a0168079e38bcf3d383e5c4c7bb) by [pukkandan](https://github.com/pukkandan) (With fixes in [e389d17](https://github.com/yt-dlp/yt-dlp/commit/e389d172b6f42e4f332ae679dc48543fb7b9b61d))\n    - [Define strict uploader metadata mapping](https://github.com/yt-dlp/yt-dlp/commit/7666b93604b97e9ada981c6b04ccf5605dd1bd44) ([#6384](https://github.com/yt-dlp/yt-dlp/issues/6384)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Determine audio language using automatic captions](https://github.com/yt-dlp/yt-dlp/commit/ff9b0e071ffae5543cc309e6f9e647ac51e5846e) by [pukkandan](https://github.com/pukkandan)\n    - [Extract `channel_is_verified`](https://github.com/yt-dlp/yt-dlp/commit/8213ce28a485e200f6a7e1af1434a987c8e702bd) ([#7213](https://github.com/yt-dlp/yt-dlp/issues/7213)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Extract `heatmap` data](https://github.com/yt-dlp/yt-dlp/commit/5caf30dbc34f10b0be60676fece635b5c59f0d72) ([#7100](https://github.com/yt-dlp/yt-dlp/issues/7100)) by [tntmod54321](https://github.com/tntmod54321)\n    - [Extract more metadata for comments](https://github.com/yt-dlp/yt-dlp/commit/c35448b7b14113b35c4415dbfbf488c4731f006f) ([#7179](https://github.com/yt-dlp/yt-dlp/issues/7179)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Extract uploader metadata for feed/playlist items](https://github.com/yt-dlp/yt-dlp/commit/93e12ed76ef49252dc6869b59d21d0777e5e11af) by [coletdjnz](https://github.com/coletdjnz)\n    - [Fix comment loop detection for pinned comments](https://github.com/yt-dlp/yt-dlp/commit/141a8dff98874a426d7fbe772e0a8421bb42656f) ([#6714](https://github.com/yt-dlp/yt-dlp/issues/6714)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Fix continuation loop with no comments](https://github.com/yt-dlp/yt-dlp/commit/18f8fba7c89a87f99cc3313a1795848867e84fff) ([#7148](https://github.com/yt-dlp/yt-dlp/issues/7148)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Fix parsing `comment_count`](https://github.com/yt-dlp/yt-dlp/commit/071670cbeaa01ddf2cc20a95ae6da25f8f086431) ([#6523](https://github.com/yt-dlp/yt-dlp/issues/6523)) by [nick-cd](https://github.com/nick-cd)\n    - [Handle incomplete initial data from watch page](https://github.com/yt-dlp/yt-dlp/commit/607510b9f2f67bfe7d33d74031a5c1fe22a24862) ([#6510](https://github.com/yt-dlp/yt-dlp/issues/6510)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Ignore wrong fps of some formats](https://github.com/yt-dlp/yt-dlp/commit/97afb093d4cbe5df889145afa5f9ede4535e93e4) by [pukkandan](https://github.com/pukkandan)\n    - [Misc cleanup](https://github.com/yt-dlp/yt-dlp/commit/14a14335b280766fbf5a469ae26836d6c1fe450a) by [coletdjnz](https://github.com/coletdjnz)\n    - [Prioritize premium formats](https://github.com/yt-dlp/yt-dlp/commit/51a07b0dca4c079d58311c19b6d1c097c24bb021) by [pukkandan](https://github.com/pukkandan)\n    - [Revert default formats to `https`](https://github.com/yt-dlp/yt-dlp/commit/c6786ff3baaf72a5baa4d56d34058e54cbcf8ceb) by [pukkandan](https://github.com/pukkandan)\n    - [Support podcasts and releases tabs](https://github.com/yt-dlp/yt-dlp/commit/447afb9eaa65bc677e3245c83e53a8e69c174a3c) by [coletdjnz](https://github.com/coletdjnz)\n    - [Support shorter relative time format](https://github.com/yt-dlp/yt-dlp/commit/2fb35f6004c7625f0dd493da4a5abf0690f7777c) ([#7191](https://github.com/yt-dlp/yt-dlp/issues/7191)) by [coletdjnz](https://github.com/coletdjnz)\n    - music_search_url: [Extract title](https://github.com/yt-dlp/yt-dlp/commit/69a40e4a7f6caa5662527ebd2f3c4e8aa02857a2) ([#7102](https://github.com/yt-dlp/yt-dlp/issues/7102)) by [kangalio](https://github.com/kangalio)\n- **zaiko**\n    - [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/345b4c0aedd9d19898ce00d5cef35fe0d277a052) ([#7254](https://github.com/yt-dlp/yt-dlp/issues/7254)) by [c-basalt](https://github.com/c-basalt)\n    - ZaikoETicket: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/5cc09c004bd5edbbada9b041c08a720cadc4f4df) ([#7347](https://github.com/yt-dlp/yt-dlp/issues/7347)) by [pzhlkj6612](https://github.com/pzhlkj6612)\n- **zdf**: [Fix formats extraction](https://github.com/yt-dlp/yt-dlp/commit/ee0ed0338df328cd986f97315c8162b5a151476d) by [bashonly](https://github.com/bashonly)\n- **zee5**: [Fix extraction of new content](https://github.com/yt-dlp/yt-dlp/commit/9d7fde89a40360396f0baa2ee8bf507f92108b32) ([#7280](https://github.com/yt-dlp/yt-dlp/issues/7280)) by [bashonly](https://github.com/bashonly)\n- **zingmp3**: [Fix and improve extractors](https://github.com/yt-dlp/yt-dlp/commit/17d7ca84ea723c20668bd9bfa938be7ea0e64f6b) ([#6367](https://github.com/yt-dlp/yt-dlp/issues/6367)) by [hatienl0i261299](https://github.com/hatienl0i261299)\n- **zoom**\n    - [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/79c77e85b70ae3b9942d5a88c14d021a9bd24222) ([#6741](https://github.com/yt-dlp/yt-dlp/issues/6741)) by [shreyasminocha](https://github.com/shreyasminocha)\n    - [Fix share URL extraction](https://github.com/yt-dlp/yt-dlp/commit/90c1f5120694105496a6ad9e3ecfc6c25de6cae1) ([#6789](https://github.com/yt-dlp/yt-dlp/issues/6789)) by [bashonly](https://github.com/bashonly)\n\n#### Downloader changes\n- **curl**: [Fix progress reporting](https://github.com/yt-dlp/yt-dlp/commit/66aeaac9aa30b5959069ba84e53a5508232deb38) by [pukkandan](https://github.com/pukkandan)\n- **fragment**: [Do not sleep between fragments](https://github.com/yt-dlp/yt-dlp/commit/424f3bf03305088df6e01d62f7311be8601ad3f4) by [pukkandan](https://github.com/pukkandan)\n\n#### Postprocessor changes\n- [Fix chapters if duration is not extracted](https://github.com/yt-dlp/yt-dlp/commit/01ddec7e661bf90dc4c34e6924eb9d7629886cef) ([#6037](https://github.com/yt-dlp/yt-dlp/issues/6037)) by [bashonly](https://github.com/bashonly)\n- [Print newline for `--progress-template`](https://github.com/yt-dlp/yt-dlp/commit/13ff78095372fd98900a32572cf817994c07ccb5) by [pukkandan](https://github.com/pukkandan)\n- **EmbedThumbnail, FFmpegMetadata**: [Fix error on attaching thumbnails and info json for mkv/mka](https://github.com/yt-dlp/yt-dlp/commit/0f0875ed555514f32522a0f30554fb08825d5124) ([#6647](https://github.com/yt-dlp/yt-dlp/issues/6647)) by [Lesmiscore](https://github.com/Lesmiscore)\n- **FFmpegFixupM3u8PP**: [Check audio codec before fixup](https://github.com/yt-dlp/yt-dlp/commit/3f7e2bd80e3c5d8a1682f20a1b245fcd974f295d) ([#6778](https://github.com/yt-dlp/yt-dlp/issues/6778)) by [bashonly](https://github.com/bashonly)\n- **FixupDuplicateMoov**: [Fix bug in triggering](https://github.com/yt-dlp/yt-dlp/commit/26010b5cec50193b98ad7845d1d77450f9f14c2b) by [pukkandan](https://github.com/pukkandan)\n\n#### Misc. changes\n- [Add automatic duplicate issue detection](https://github.com/yt-dlp/yt-dlp/commit/15b2d3db1d40b0437fca79d8874d392aa54b3cdd) by [pukkandan](https://github.com/pukkandan)\n- **build**\n    - [Fix macOS target](https://github.com/yt-dlp/yt-dlp/commit/44a79958f0b596ee71e1eb25f158610aada29d1b) by [Grub4K](https://github.com/Grub4K)\n    - [Implement build verification using `--update-to`](https://github.com/yt-dlp/yt-dlp/commit/b73193c99aa23b135732408a5fcf655c68d731c6) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n    - [Pin `pyinstaller` version for MacOS](https://github.com/yt-dlp/yt-dlp/commit/427a8fafbb0e18c28d0ed7960be838d7b26b88d3) by [pukkandan](https://github.com/pukkandan)\n    - [Various build workflow improvements](https://github.com/yt-dlp/yt-dlp/commit/c4efa0aefec8daef1de62fd1693f13edf3c8b03c) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K)\n- **cleanup**\n    - Miscellaneous\n        - [6f2287c](https://github.com/yt-dlp/yt-dlp/commit/6f2287cb18cbfb27518f068d868fa9390fee78ad) by [pukkandan](https://github.com/pukkandan)\n        - [ad54c91](https://github.com/yt-dlp/yt-dlp/commit/ad54c9130e793ce433bf9da334fa80df9f3aee58) by [freezboltz](https://github.com/freezboltz), [mikf](https://github.com/mikf), [pukkandan](https://github.com/pukkandan)\n- **cleanup, utils**: [Split into submodules](https://github.com/yt-dlp/yt-dlp/commit/69bec6730ec9d724bcedeab199d9d684d61423ba) ([#7090](https://github.com/yt-dlp/yt-dlp/issues/7090)) by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n- **cli_to_api**: [Add script](https://github.com/yt-dlp/yt-dlp/commit/46f1370e9af6f8af8762f67e27e5acb8f0c48a47) by [pukkandan](https://github.com/pukkandan)\n- **devscripts**: `make_changelog`: [Various improvements](https://github.com/yt-dlp/yt-dlp/commit/23c39a4beadee382060bb47fdaa21316ca707d38) by [Grub4K](https://github.com/Grub4K)\n- **docs**: [Misc improvements](https://github.com/yt-dlp/yt-dlp/commit/c8bc203fbf3bb09914e53f0833eed622ab7edbb9) by [pukkandan](https://github.com/pukkandan)\n\n### 2023.03.04\n\n#### Extractor changes\n- bilibili\n    - [Fix for downloading wrong subtitles](https://github.com/yt-dlp/yt-dlp/commit/8a83baaf218ab89e6e7faa76b7c7be3a2ec19e3a) ([#6358](https://github.com/yt-dlp/yt-dlp/issues/6358)) by [LXYan2333](https://github.com/LXYan2333)\n- ESPNcricinfo\n    - [Handle new URL pattern](https://github.com/yt-dlp/yt-dlp/commit/640c934823fc2d1ec77ec932566078014058635f) ([#6321](https://github.com/yt-dlp/yt-dlp/issues/6321)) by [venkata-krishnas](https://github.com/venkata-krishnas)\n- lefigaro\n    - [Add extractors](https://github.com/yt-dlp/yt-dlp/commit/eb8fd6d044e8926532772b72be0645c6b8ecb3aa) ([#6309](https://github.com/yt-dlp/yt-dlp/issues/6309)) by [elyse0](https://github.com/elyse0)\n- lumni\n    - [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/1f8489cccbdc6e96027ef527b88717458f0900e8) ([#6302](https://github.com/yt-dlp/yt-dlp/issues/6302)) by [carusocr](https://github.com/carusocr)\n- Prankcast\n    - [Fix tags](https://github.com/yt-dlp/yt-dlp/commit/ed4cc4ea793314c50ae3f82e98248c1de1c25694) ([#6316](https://github.com/yt-dlp/yt-dlp/issues/6316)) by [columndeeply](https://github.com/columndeeply)\n- rutube\n    - [Extract chapters from description](https://github.com/yt-dlp/yt-dlp/commit/22ccd5420b3eb0782776071f12cccd1fedaa1fd0) ([#6345](https://github.com/yt-dlp/yt-dlp/issues/6345)) by [mushbite](https://github.com/mushbite)\n- SportDeutschland\n    - [Rewrite extractor](https://github.com/yt-dlp/yt-dlp/commit/45db357289b4e1eec09093c8bc5446520378f426) by [pukkandan](https://github.com/pukkandan)\n- telecaribe\n    - [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/b40471282286bd2b09c485bf79afd271d229272c) ([#6311](https://github.com/yt-dlp/yt-dlp/issues/6311)) by [elyse0](https://github.com/elyse0)\n- tubetugraz\n    - [Support `--twofactor` (#6424)](https://github.com/yt-dlp/yt-dlp/commit/f44cb4e77bb9be8be291d02ab6f79dc0b4c0d4a1) ([#6427](https://github.com/yt-dlp/yt-dlp/issues/6427)) by [Ferdi265](https://github.com/Ferdi265)\n- tunein\n    - [Fix extractors](https://github.com/yt-dlp/yt-dlp/commit/46580ced56c90b559885aded6aa8f46f20a9cdce) ([#6310](https://github.com/yt-dlp/yt-dlp/issues/6310)) by [elyse0](https://github.com/elyse0)\n- twitch\n    - [Update for GraphQL API changes](https://github.com/yt-dlp/yt-dlp/commit/4a6272c6d1bff89969b67cd22b26ebe6d7e72279) ([#6318](https://github.com/yt-dlp/yt-dlp/issues/6318)) by [elyse0](https://github.com/elyse0)\n- twitter\n    - [Fix retweet extraction](https://github.com/yt-dlp/yt-dlp/commit/cf605226521e99c89fc8dff26a319025810e63a0) ([#6422](https://github.com/yt-dlp/yt-dlp/issues/6422)) by [selfisekai](https://github.com/selfisekai)\n- xvideos\n    - quickies: [Add extractor](https://github.com/yt-dlp/yt-dlp/commit/283a0b5bc511f3b350eead4488158f50c20ec526) ([#6414](https://github.com/yt-dlp/yt-dlp/issues/6414)) by [Yakabuff](https://github.com/Yakabuff)\n\n#### Misc. changes\n- build\n    - [Fix publishing to PyPI and homebrew](https://github.com/yt-dlp/yt-dlp/commit/55676fe498345a389a2539d8baaba958d6d61c3e) by [bashonly](https://github.com/bashonly)\n    - [Only archive if `vars.ARCHIVE_REPO` is set](https://github.com/yt-dlp/yt-dlp/commit/08ff6d59f97b5f5f0128f6bf6fbef56fd836cc52) by [Grub4K](https://github.com/Grub4K)\n- cleanup\n    - Miscellaneous: [392389b](https://github.com/yt-dlp/yt-dlp/commit/392389b7df7b818f794b231f14dc396d4875fbad) by [pukkandan](https://github.com/pukkandan)\n- devscripts\n    - `make_changelog`: [Stop at `Release ...` commit](https://github.com/yt-dlp/yt-dlp/commit/7accdd9845fe7ce9d0aa5a9d16faaa489c1294eb) by [pukkandan](https://github.com/pukkandan)\n\n### 2023.03.03\n\n#### Important changes\n- **A new release type has been added!**\n    * [`nightly`](https://github.com/yt-dlp/yt-dlp/releases/tag/nightly) builds will be made after each push, containing the latest fixes (but also possibly bugs).\n    * When using `--update`/`-U`, a release binary will only update to its current channel (either `stable` or `nightly`).\n    * The `--update-to` option has been added allowing the user more control over program upgrades (or downgrades).\n    * `--update-to` can change the release channel (`stable`, `nightly`) and also upgrade or downgrade to specific tags.\n    * **Usage**: `--update-to CHANNEL`, `--update-to TAG`, `--update-to CHANNEL@TAG`\n- **YouTube throttling fixes!**\n\n#### Core changes\n- [Add option `--break-match-filters`](https://github.com/yt-dlp/yt-dlp/commit/fe2ce85aff0aa03735fc0152bb8cb9c3d4ef0753) by [pukkandan](https://github.com/pukkandan)\n- [Fix `--break-on-existing` with `--lazy-playlist`](https://github.com/yt-dlp/yt-dlp/commit/d21056f4cf0a1623daa107f9181074f5725ac436) by [pukkandan](https://github.com/pukkandan)\n- dependencies\n    - [Simplify `Cryptodome`](https://github.com/yt-dlp/yt-dlp/commit/65f6e807804d2af5e00f2aecd72bfc43af19324a) by [pukkandan](https://github.com/pukkandan)\n- jsinterp\n    - [Handle `Date` at epoch 0](https://github.com/yt-dlp/yt-dlp/commit/9acf1ee25f7ad3920ede574a9de95b8c18626af4) by [pukkandan](https://github.com/pukkandan)\n- plugins\n    - [Don't look in `.egg` directories](https://github.com/yt-dlp/yt-dlp/commit/b059188383eee4fa336ef728dda3ff4bb7335625) by [pukkandan](https://github.com/pukkandan)\n- update\n    - [Add option `--update-to`, including to nightly](https://github.com/yt-dlp/yt-dlp/commit/77df20f14cc9ed41dfe3a1fe2d77fd27f5365a94) ([#6220](https://github.com/yt-dlp/yt-dlp/issues/6220)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K), [pukkandan](https://github.com/pukkandan)\n- utils\n    - `LenientJSONDecoder`: [Parse unclosed objects](https://github.com/yt-dlp/yt-dlp/commit/cc09083636ce21e58ff74f45eac2dbda507462b0) by [pukkandan](https://github.com/pukkandan)\n    - `Popen`: [Shim undocumented `text_mode` property](https://github.com/yt-dlp/yt-dlp/commit/da8e2912b165005f76779a115a071cd6132ceedf) by [Grub4K](https://github.com/Grub4K)\n\n#### Extractor changes\n- [Fix DRM detection in m3u8](https://github.com/yt-dlp/yt-dlp/commit/43a3eaf96393b712d60cbcf5c6cb1e90ed7f42f5) by [pukkandan](https://github.com/pukkandan)\n- generic\n    - [Detect manifest links via extension](https://github.com/yt-dlp/yt-dlp/commit/b38cae49e6f4849c8ee2a774bdc3c1c647ae5f0e) by [bashonly](https://github.com/bashonly)\n    - [Handle basic-auth when checking redirects](https://github.com/yt-dlp/yt-dlp/commit/8e9fe43cd393e69fa49b3d842aa3180c1d105b8f) by [pukkandan](https://github.com/pukkandan)\n- GoogleDrive\n    - [Fix some audio](https://github.com/yt-dlp/yt-dlp/commit/4d248e29d20d983ededab0b03d4fe69dff9eb4ed) by [pukkandan](https://github.com/pukkandan)\n- iprima\n    - [Fix extractor](https://github.com/yt-dlp/yt-dlp/commit/9fddc12ab022a31754e0eaa358fc4e1dfa974587) ([#6291](https://github.com/yt-dlp/yt-dlp/issues/6291)) by [std-move](https://github.com/std-move)\n- mediastream\n    - [Improve WinSports support](https://github.com/yt-dlp/yt-dlp/commit/2d5a8c5db2bd4ff1c2e45e00cd890a10f8ffca9e) ([#6401](https://github.com/yt-dlp/yt-dlp/issues/6401)) by [bashonly](https://github.com/bashonly)\n- ntvru\n    - [Extract HLS and DASH formats](https://github.com/yt-dlp/yt-dlp/commit/77d6d136468d0c23c8e79bc937898747804f585a) ([#6403](https://github.com/yt-dlp/yt-dlp/issues/6403)) by [bashonly](https://github.com/bashonly)\n- tencent\n    - [Add more formats and info](https://github.com/yt-dlp/yt-dlp/commit/18d295c9e0f95adc179eef345b7af64d6372db78) ([#5950](https://github.com/yt-dlp/yt-dlp/issues/5950)) by [Hill-98](https://github.com/Hill-98)\n- yle_areena\n    - [Extract non-Kaltura videos](https://github.com/yt-dlp/yt-dlp/commit/40d77d89027cd0e0ce31d22aec81db3e1d433900) ([#6402](https://github.com/yt-dlp/yt-dlp/issues/6402)) by [bashonly](https://github.com/bashonly)\n- youtube\n    - [Construct dash formats with `range` query](https://github.com/yt-dlp/yt-dlp/commit/5038f6d713303e0967d002216e7a88652401c22a) by [pukkandan](https://github.com/pukkandan) (With fixes in [f34804b](https://github.com/yt-dlp/yt-dlp/commit/f34804b2f920f62a6e893a14a9e2a2144b14dd23) by [bashonly](https://github.com/bashonly), [coletdjnz](https://github.com/coletdjnz))\n    - [Detect and break on looping comments](https://github.com/yt-dlp/yt-dlp/commit/7f51861b1820c37b157a239b1fe30628d907c034) ([#6301](https://github.com/yt-dlp/yt-dlp/issues/6301)) by [coletdjnz](https://github.com/coletdjnz)\n    - [Extract channel `view_count` when `/about` tab is passed](https://github.com/yt-dlp/yt-dlp/commit/31e183557fcd1b937582f9429f29207c1261f501) by [pukkandan](https://github.com/pukkandan)\n\n#### Misc. changes\n- build\n    - [Add `cffi` as a dependency for `yt_dlp_linux`](https://github.com/yt-dlp/yt-dlp/commit/776d1c3f0c9b00399896dd2e40e78e9a43218109) by [bashonly](https://github.com/bashonly)\n    - [Automated builds and nightly releases](https://github.com/yt-dlp/yt-dlp/commit/29cb20bd563c02671b31dd840139e93dd37150a1) ([#6220](https://github.com/yt-dlp/yt-dlp/issues/6220)) by [bashonly](https://github.com/bashonly), [Grub4K](https://github.com/Grub4K) (With fixes in [bfc861a](https://github.com/yt-dlp/yt-dlp/commit/bfc861a91ee65c9b0ac169754f512e052c6827cf) by [pukkandan](https://github.com/pukkandan))\n    - [Sign SHA files and release public key](https://github.com/yt-dlp/yt-dlp/commit/12647e03d417feaa9ea6a458bea5ebd747494a53) by [Grub4K](https://github.com/Grub4K)\n- cleanup\n    - [Fix `Changelog`](https://github.com/yt-dlp/yt-dlp/commit/17ca19ab60a6a13eb8a629c51442b5248b0d8394) by [pukkandan](https://github.com/pukkandan)\n    - jsinterp: [Give functions names to help debugging](https://github.com/yt-dlp/yt-dlp/commit/b2e0343ba0fc5d8702e90f6ba2b71358e2677e0b) by [pukkandan](https://github.com/pukkandan)\n    - Miscellaneous: [4815bbf](https://github.com/yt-dlp/yt-dlp/commit/4815bbfc41cf641e4a0650289dbff968cb3bde76), [5b28cef](https://github.com/yt-dlp/yt-dlp/commit/5b28cef72db3b531680d89c121631c73ae05354f) by [pukkandan](https://github.com/pukkandan)\n- devscripts\n    - [Script to generate changelog](https://github.com/yt-dlp/yt-dlp/commit/d400e261cf029a3f20d364113b14de973be75404) ([#6220](https://github.com/yt-dlp/yt-dlp/issues/6220)) by [Grub4K](https://github.com/Grub4K) (With fixes in [9344964](https://github.com/yt-dlp/yt-dlp/commit/93449642815a6973a4b09b289982ca7e1f961b5f))\n\n### 2023.02.17\n\n* Merge youtube-dl: Upto [commit/2dd6c6e](https://github.com/ytdl-org/youtube-dl/commit/2dd6c6e)\n* Fix `--concat-playlist`\n* Imply `--no-progress` when `--print`\n* Improve default subtitle language selection by [sdht0](https://github.com/sdht0)\n* Make `title` completely non-fatal\n* Sanitize formats before sorting by [pukkandan](https://github.com/pukkandan)\n* Support module level `__bool__` and `property`\n* [dependencies] Standardize `Cryptodome` imports\n* [hls] Allow extractors to provide AES key by [Grub4K](https://github.com/Grub4K), [bashonly](https://github.com/bashonly)\n* [ExtractAudio] Handle outtmpl without ext by [carusocr](https://github.com/carusocr)\n* [extractor/common] Fix `_search_nuxt_data` by [LowSuggestion912](https://github.com/LowSuggestion912)\n* [extractor/generic] Avoid catastrophic backtracking in KVS regex by [bashonly](https://github.com/bashonly)\n* [jsinterp] Support `if` statements\n* [plugins] Fix zip search paths\n* [utils] `traverse_obj`:  Various improvements by [Grub4K](https://github.com/Grub4K)\n* [utils] `traverse_obj`: Fix more bugs\n* [utils] `traverse_obj`: Fix several behavioral problems by [Grub4K](https://github.com/Grub4K)\n* [utils] Don't use Content-length with encoding by [felixonmars](https://github.com/felixonmars)\n* [utils] Fix `time_seconds` to use the provided TZ by [Grub4K](https://github.com/Grub4K), [Lesmiscore](https://github.com/Lesmiscore)\n* [utils] Fix race condition in `make_dir` by [aionescu](https://github.com/aionescu)\n* [utils] Use local kernel32 for file locking on Windows by [Grub4K](https://github.com/Grub4K)\n* [compat_utils] Improve `passthrough_module`\n* [compat_utils] Simplify `EnhancedModule`\n* [build] Update pyinstaller\n* [pyinst] Fix for pyinstaller 5.8\n* [devscripts] Provide `pyinstaller` hooks\n* [devscripts/pyinstaller] Analyze sub-modules of `Cryptodome`\n* [cleanup] Misc fixes and cleanup\n* [extractor/anchorfm] Add episode extractor by [HobbyistDev](https://github.com/HobbyistDev), [bashonly](https://github.com/bashonly)\n* [extractor/boxcast] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/ebay] Add extractor by [JChris246](https://github.com/JChris246)\n* [extractor/hypergryph] Add extractor by [HobbyistDev](https://github.com/HobbyistDev), [bashonly](https://github.com/bashonly)\n* [extractor/NZOnScreen] Add extractor by [gregsadetsky](https://github.com/gregsadetsky), [pukkandan](https://github.com/pukkandan)\n* [extractor/rozhlas] Add extractor RozhlasVltavaIE by [amra](https://github.com/amra)\n* [extractor/tempo] Add IVXPlayer extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/txxx] Add extractors by [chio0hai](https://github.com/chio0hai)\n* [extractor/vocaroo] Add extractor by [SuperSonicHub1](https://github.com/SuperSonicHub1), [qbnu](https://github.com/qbnu)\n* [extractor/wrestleuniverse] Add extractors by [Grub4K](https://github.com/Grub4K), [bashonly](https://github.com/bashonly)\n* [extractor/yappy] Add extractor by [HobbyistDev](https://github.com/HobbyistDev), [dirkf](https://github.com/dirkf)\n* [extractor/youtube] **Fix `uploader_id` extraction** by [bashonly](https://github.com/bashonly)\n* [extractor/youtube] Add hyperpipe instances by [Generator](https://github.com/Generator)\n* [extractor/youtube] Handle `consent.youtube`\n* [extractor/youtube] Support `/live/` URL\n* [extractor/youtube] Update invidious and piped instances by [rohieb](https://github.com/rohieb)\n* [extractor/91porn] Fix title and comment extraction by [pmitchell86](https://github.com/pmitchell86)\n* [extractor/AbemaTV] Cache user token whenever appropriate by [Lesmiscore](https://github.com/Lesmiscore)\n* [extractor/bfmtv] Support `rmc` prefix by [carusocr](https://github.com/carusocr)\n* [extractor/biliintl] Add intro and ending chapters by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/clyp] Support `wav` by [qulaz](https://github.com/qulaz)\n* [extractor/crunchyroll] Add intro chapter by [ByteDream](https://github.com/ByteDream)\n* [extractor/crunchyroll] Better message for premium videos\n* [extractor/crunchyroll] Fix incorrect premium-only error by [Grub4K](https://github.com/Grub4K)\n* [extractor/DouyuTV] Use new API by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [extractor/embedly] Embedded links may be for other extractors\n* [extractor/freesound] Workaround invalid URL in webpage by [rebane2001](https://github.com/rebane2001)\n* [extractor/GoPlay] Use new API by [jeroenj](https://github.com/jeroenj)\n* [extractor/Hidive] Fix subtitles and age-restriction by [chexxor](https://github.com/chexxor)\n* [extractor/huya] Support HD streams by [felixonmars](https://github.com/felixonmars)\n* [extractor/moviepilot] Fix extractor by [panatexxa](https://github.com/panatexxa)\n* [extractor/nbc] Fix `NBC` and `NBCStations` extractors by [bashonly](https://github.com/bashonly)\n* [extractor/nbc] Fix XML parsing by [bashonly](https://github.com/bashonly)\n* [extractor/nebula] Remove broken cookie support by [hheimbuerger](https://github.com/hheimbuerger)\n* [extractor/nfl] Add `NFLPlus` extractors by [bashonly](https://github.com/bashonly)\n* [extractor/niconico] Add support for like history by [Matumo](https://github.com/Matumo), [pukkandan](https://github.com/pukkandan)\n* [extractor/nitter] Update instance list by [OIRNOIR](https://github.com/OIRNOIR)\n* [extractor/npo] Fix extractor and add HD support by [seproDev](https://github.com/seproDev)\n* [extractor/odkmedia] Add `OnDemandChinaEpisodeIE` by [HobbyistDev](https://github.com/HobbyistDev), [pukkandan](https://github.com/pukkandan)\n* [extractor/pornez] Handle relative URLs in iframe by [JChris246](https://github.com/JChris246)\n* [extractor/radiko] Fix format sorting for Time Free by [road-master](https://github.com/road-master)\n* [extractor/rcs] Fix extractors by [nixxo](https://github.com/nixxo), [pukkandan](https://github.com/pukkandan)\n* [extractor/reddit] Support user posts by [OMEGARAZER](https://github.com/OMEGARAZER)\n* [extractor/rumble] Fix format sorting by [pukkandan](https://github.com/pukkandan)\n* [extractor/servus] Rewrite extractor by [Ashish0804](https://github.com/Ashish0804), [FrankZ85](https://github.com/FrankZ85), [StefanLobbenmeier](https://github.com/StefanLobbenmeier)\n* [extractor/slideslive] Fix slides and chapters/duration by [bashonly](https://github.com/bashonly)\n* [extractor/SportDeutschland] Fix extractor by [FriedrichRehren](https://github.com/FriedrichRehren)\n* [extractor/Stripchat] Fix extractor by [JChris246](https://github.com/JChris246), [bashonly](https://github.com/bashonly)\n* [extractor/tnaflix] Fix extractor by [bashonly](https://github.com/bashonly), [oxamun](https://github.com/oxamun)\n* [extractor/tvp] Support `stream.tvp.pl` by [selfisekai](https://github.com/selfisekai)\n* [extractor/twitter] Fix `--no-playlist` and add media `view_count` when using GraphQL by [Grub4K](https://github.com/Grub4K)\n* [extractor/twitter] Fix graphql extraction on some tweets by [selfisekai](https://github.com/selfisekai)\n* [extractor/vimeo] Fix `playerConfig` extraction by [LeoniePhiline](https://github.com/LeoniePhiline), [bashonly](https://github.com/bashonly)\n* [extractor/viu] Add `ViuOTTIndonesiaIE` extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/vk] Fix playlists for new API by [the-marenga](https://github.com/the-marenga)\n* [extractor/vlive] Replace with `VLiveWebArchiveIE` by [seproDev](https://github.com/seproDev)\n* [extractor/ximalaya] Update album `_VALID_URL` by [carusocr](https://github.com/carusocr)\n* [extractor/zdf] Use android API endpoint for UHD downloads by [seproDev](https://github.com/seproDev)\n* [extractor/drtv] Fix bug in [ab4cbef](https://github.com/yt-dlp/yt-dlp/commit/ab4cbef) by [bashonly](https://github.com/bashonly)\n\n\n### 2023.01.06\n\n* Fix config locations by [Grub4K](https://github.com/Grub4K), [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* [downloader/aria2c] Disable native progress\n* [utils] `mimetype2ext`: `weba` is not standard\n* [utils] `windows_enable_vt_mode`: Better error handling\n* [build] Add minimal `pyproject.toml`\n* [update] Fix updater file removal on windows by [Grub4K](https://github.com/Grub4K)\n* [cleanup] Misc fixes and cleanup\n* [extractor/aitube] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/drtv] Add series extractors by [FrederikNS](https://github.com/FrederikNS)\n* [extractor/volejtv] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/xanimu] Add extractor by [JChris246](https://github.com/JChris246)\n* [extractor/youtube] Retry manifest refresh for live-from-start by [mzhou](https://github.com/mzhou)\n* [extractor/biliintl] Add `/media` to `VALID_URL` by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/biliIntl] Add fallback to `video_data` by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/crunchyroll:show] Add `language` to entries by [Chrissi2812](https://github.com/Chrissi2812)\n* [extractor/joj] Fix extractor by [OndrejBakan](https://github.com/OndrejBakan), [pukkandan](https://github.com/pukkandan)\n* [extractor/nbc] Update graphql query by [jacobtruman](https://github.com/jacobtruman)\n* [extractor/reddit] Add subreddit as `channel_id` by [gschizas](https://github.com/gschizas)\n* [extractor/tiktok] Add `TikTokLive` extractor by [JC-Chung](https://github.com/JC-Chung)\n\n### 2023.01.02\n\n* **Improve plugin architecture** by [Grub4K](https://github.com/Grub4K), [coletdjnz](https://github.com/coletdjnz), [flashdagger](https://github.com/flashdagger), [pukkandan](https://github.com/pukkandan)\n    * Plugins can be loaded in any distribution of yt-dlp (binary, pip, source, etc.) and can be distributed and installed as packages. See [the readme](https://github.com/yt-dlp/yt-dlp/tree/05997b6e98e638d97d409c65bb5eb86da68f3b64#plugins) for more information\n* Add `--compat-options 2021,2022`\n    * This allows devs to change defaults and make other potentially breaking changes more easily. If you need everything to work exactly as-is, put Use `--compat 2022` in your config to guard against future compat changes.\n* [downloader/aria2c] Native progress for aria2c via RPC by [Lesmiscore](https://github.com/Lesmiscore), [pukkandan](https://github.com/pukkandan)\n* Merge youtube-dl: Upto [commit/195f22f](https://github.com/ytdl-org/youtube-dl/commit/195f22f6) by [Grub4K](https://github.com/Grub4K), [pukkandan](https://github.com/pukkandan)\n* Add pre-processor stage `video`\n* Let `--parse/replace-in-metadata` run at any post-processing stage\n* Add `--enable-file-urls` by [coletdjnz](https://github.com/coletdjnz)\n* Add new field `aspect_ratio`\n* Add `ac4` to known codecs\n* Add `weba` to known extensions\n* [FFmpegVideoConvertor] Add `gif` to `--recode-video`\n* Add message when there are no subtitles/thumbnails\n* Deprioritize HEVC-over-FLV formats by [Lesmiscore](https://github.com/Lesmiscore)\n* Make early reject of `--match-filter` stricter\n* Fix `--cookies-from-browser` CLI parsing\n* Fix `original_url` in playlists\n* Fix bug in writing playlist info-json\n* Fix bugs in `PlaylistEntries`\n* [downloader/ffmpeg] Fix headers for video+audio formats by [Grub4K](https://github.com/Grub4K), [bashonly](https://github.com/bashonly)\n* [extractor] Add a way to distinguish IEs that returns only videos\n* [extractor] Implement universal format sorting and deprecate `_sort_formats`\n* [extractor] Let `_extract_format` functions obey `--ignore-no-formats`\n* [extractor/generic] Add `fragment_query` extractor arg for DASH and HLS by [bashonly](https://github.com/bashonly), [pukkandan](https://github.com/pukkandan)\n* [extractor/generic] Decode unicode-escaped embed URLs by [bashonly](https://github.com/bashonly)\n* [extractor/generic] Don't report redirect to https\n* [extractor/generic] Fix JSON LD manifest extraction by [bashonly](https://github.com/bashonly), [pukkandan](https://github.com/pukkandan)\n* [extractor/generic] Use `Accept-Encoding: identity` for initial request by [coletdjnz](https://github.com/coletdjnz)\n* [FormatSort] Add `mov` to `vext`\n* [jsinterp] Escape regex that looks like nested set\n* [webvtt] Handle premature EOF by [flashdagger](https://github.com/flashdagger)\n* [utils] `classproperty`: Add cache support\n* [utils] `get_exe_version`: Detect broken executables by [dirkf](https://github.com/dirkf), [pukkandan](https://github.com/pukkandan)\n* [utils] `js_to_json`: Fix bug in [f55523c](https://github.com/yt-dlp/yt-dlp/commit/f55523c) by [ChillingPepper](https://github.com/ChillingPepper), [pukkandan](https://github.com/pukkandan)\n* [utils] Make `ExtractorError` mutable\n* [utils] Move `FileDownloader.parse_bytes` into utils\n* [utils] Move format sorting code into `utils`\n* [utils] `windows_enable_vt_mode`: Proper implementation by [Grub4K](https://github.com/Grub4K)\n* [update] Workaround [#5632](https://github.com/yt-dlp/yt-dlp/issues/5632)\n* [docs] Improvements\n* [cleanup] Misc fixes and cleanup\n* [cleanup] Use `random.choices` by [freezboltz](https://github.com/freezboltz)\n* [extractor/airtv] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/amazonminitv] Add extractors by [GautamMKGarg](https://github.com/GautamMKGarg), [nyuszika7h](https://github.com/nyuszika7h)\n* [extractor/beatbump] Add extractors by [Bobscorn](https://github.com/Bobscorn), [pukkandan](https://github.com/pukkandan)\n* [extractor/europarl] Add EuroParlWebstream extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/kanal2] Add extractor by [bashonly](https://github.com/bashonly), [glensc](https://github.com/glensc), [pukkandan](https://github.com/pukkandan)\n* [extractor/kankanews] Add extractor by [synthpop123](https://github.com/synthpop123)\n* [extractor/kick] Add extractor by [bashonly](https://github.com/bashonly)\n* [extractor/mediastream] Add extractor by [HobbyistDev](https://github.com/HobbyistDev), [elyse0](https://github.com/elyse0)\n* [extractor/noice] Add NoicePodcast extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/oneplace] Add OnePlacePodcast extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/rumble] Add RumbleIE extractor by [flashdagger](https://github.com/flashdagger)\n* [extractor/screencastify] Add extractor by [bashonly](https://github.com/bashonly)\n* [extractor/trtcocuk] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/Veoh] Add user extractor by [tntmod54321](https://github.com/tntmod54321)\n* [extractor/videoken] Add extractors by [bashonly](https://github.com/bashonly)\n* [extractor/webcamerapl] Add extractor by [milkknife](https://github.com/milkknife)\n* [extractor/amazon] Add `AmazonReviews` extractor by [bashonly](https://github.com/bashonly)\n* [extractor/netverse] Add `NetverseSearch` extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/vimeo] Add `VimeoProIE` by [bashonly](https://github.com/bashonly), [pukkandan](https://github.com/pukkandan)\n* [extractor/xiami] Remove extractors by [synthpop123](https://github.com/synthpop123)\n* [extractor/youtube] Add `piped.video` by [Bnyro](https://github.com/Bnyro)\n* [extractor/youtube] Consider language in format de-duplication\n* [extractor/youtube] Extract DRC formats\n* [extractor/youtube] Fix `ytuser:`\n* [extractor/youtube] Fix bug in handling of music URLs\n* [extractor/youtube] Subtitles cannot be translated to `und`\n* [extractor/youtube:tab] Extract metadata from channel items by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/ARD] Add vtt subtitles by [CapacitorSet](https://github.com/CapacitorSet)\n* [extractor/ArteTV] Extract chapters by [bashonly](https://github.com/bashonly), [iw0nderhow](https://github.com/iw0nderhow)\n* [extractor/bandcamp] Add `album_artist` by [stelcodes](https://github.com/stelcodes)\n* [extractor/bilibili] Fix `--no-playlist` for anthology\n* [extractor/bilibili] Improve `_VALID_URL` by [skbeh](https://github.com/skbeh)\n* [extractor/biliintl:series] Make partial download of series faster\n* [extractor/BiliLive] Fix extractor\n* [extractor/brightcove] Add `BrightcoveNewBaseIE` and fix embed extraction\n* [extractor/cda] Support premium and misc improvements by [selfisekai](https://github.com/selfisekai)\n* [extractor/ciscowebex] Support password-protected videos by [damianoamatruda](https://github.com/damianoamatruda)\n* [extractor/curiositystream] Fix auth by [mnn](https://github.com/mnn)\n* [extractor/embedly] Handle vimeo embeds\n* [extractor/fifa] Fix Preplay extraction by [dirkf](https://github.com/dirkf)\n* [extractor/foxsports] Fix extractor by [bashonly](https://github.com/bashonly)\n* [extractor/gronkh] Fix `_VALID_URL` by [muddi900](https://github.com/muddi900)\n* [extractor/hotstar] Improve format metadata\n* [extractor/iqiyi] Fix `Iq` JS regex by [bashonly](https://github.com/bashonly)\n* [extractor/la7] Improve extractor by [nixxo](https://github.com/nixxo)\n* [extractor/mediaset] Better embed detection and error messages by [nixxo](https://github.com/nixxo)\n* [extractor/mixch] Support `--wait-for-video`\n* [extractor/naver] Improve `_VALID_URL` for `NaverNowIE` by [bashonly](https://github.com/bashonly)\n* [extractor/naver] Treat fan subtitles as separate language\n* [extractor/netverse] Extract comments by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/nosnl] Add support for /video by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/odnoklassniki] Extract subtitles by [bashonly](https://github.com/bashonly)\n* [extractor/pinterest] Fix extractor by [bashonly](https://github.com/bashonly)\n* [extractor/plutotv] Fix videos with non-zero start by [digitall](https://github.com/digitall)\n* [extractor/polskieradio] Adapt to next.js redesigns by [selfisekai](https://github.com/selfisekai)\n* [extractor/reddit] Add vcodec to fallback format by [chengzhicn](https://github.com/chengzhicn)\n* [extractor/reddit] Extract crossposted media by [bashonly](https://github.com/bashonly)\n* [extractor/reddit] Extract video embeds in text posts by [bashonly](https://github.com/bashonly)\n* [extractor/rutube] Support private videos by [mexus](https://github.com/mexus)\n* [extractor/sibnet] Separate from VKIE\n* [extractor/slideslive] Fix extractor by [Grub4K](https://github.com/Grub4K), [bashonly](https://github.com/bashonly)\n* [extractor/slideslive] Support embeds and slides by [Grub4K](https://github.com/Grub4K), [bashonly](https://github.com/bashonly), [pukkandan](https://github.com/pukkandan)\n* [extractor/soundcloud] Support user permalink by [nosoop](https://github.com/nosoop)\n* [extractor/spankbang] Fix extractor by [JChris246](https://github.com/JChris246)\n* [extractor/stv] Detect DRM\n* [extractor/swearnet] Fix description bug\n* [extractor/tencent] Fix geo-restricted video by [elyse0](https://github.com/elyse0)\n* [extractor/tiktok] Fix subs, `DouyinIE`, improve `_VALID_URL` by [bashonly](https://github.com/bashonly)\n* [extractor/tiktok] Update `_VALID_URL`, add `api_hostname` arg by [bashonly](https://github.com/bashonly)\n* [extractor/tiktok] Update API hostname by [redraskal](https://github.com/redraskal)\n* [extractor/twitcasting] Fix videos with password by [Spicadox](https://github.com/Spicadox), [bashonly](https://github.com/bashonly)\n* [extractor/twitter] Heed `--no-playlist` for multi-video tweets by [Grub4K](https://github.com/Grub4K), [bashonly](https://github.com/bashonly)\n* [extractor/twitter] Refresh guest token when expired by [Grub4K](https://github.com/Grub4K), [bashonly](https://github.com/bashonly)\n* [extractor/twitter:spaces] Add `Referer` to m3u8 by [nixxo](https://github.com/nixxo)\n* [extractor/udemy] Fix lectures that have no URL and detect DRM\n* [extractor/unsupported] Add more URLs\n* [extractor/urplay] Support for audio-only formats by [barsnick](https://github.com/barsnick)\n* [extractor/wistia] Improve extension detection by [Grub4K](https://github.com/Grub4K), [bashonly](https://github.com/bashonly), [pukkandan](https://github.com/pukkandan)\n* [extractor/yle_areena] Support restricted videos by [docbender](https://github.com/docbender)\n* [extractor/youku] Fix extractor by [KurtBestor](https://github.com/KurtBestor)\n* [extractor/youporn] Fix metadata by [marieell](https://github.com/marieell)\n* [extractor/redgifs] Fix bug in [8c188d5](https://github.com/yt-dlp/yt-dlp/commit/8c188d5d09177ed213a05c900d3523867c5897fd)\n\n\n### 2022.11.11\n\n* Merge youtube-dl: Upto [commit/de39d12](https://github.com/ytdl-org/youtube-dl/commit/de39d128)\n* Backport SSL configuration from Python 3.10 by [coletdjnz](https://github.com/coletdjnz)\n* Do more processing in `--flat-playlist`\n* Fix `--list` options not implying `-s` in some cases by [Grub4K](https://github.com/Grub4K), [bashonly](https://github.com/bashonly)\n* Fix end time of clips by [cruel-efficiency](https://github.com/cruel-efficiency)\n* Fix for `formats=None`\n* Write API params in debug head\n* [outtmpl] Ensure ASCII in json and add option for Unicode\n* [SponsorBlock] Add `type` field, obey `--retry-sleep extractor`, relax duration check for large segments\n* [SponsorBlock] **Support `chapter` category** by [ajayyy](https://github.com/ajayyy), [pukkandan](https://github.com/pukkandan)\n* [ThumbnailsConvertor] Fix filename escaping by [dirkf](https://github.com/dirkf), [pukkandan](https://github.com/pukkandan)\n* [ModifyChapters] Handle the entire video being marked for removal\n* [embedthumbnail] Fix thumbnail name in mp3 by [How-Bout-No](https://github.com/How-Bout-No)\n* [downloader/fragment] HLS download can continue without first fragment\n* [cookies] Improve `LenientSimpleCookie` by [Grub4K](https://github.com/Grub4K)\n* [jsinterp] Improve separating regex\n* [extractor/common] Fix `fatal=False` for `_search_nuxt_data`\n* [extractor/common] Improve `_generic_title`\n* [extractor/common] Fix `json_ld` type checks by [Grub4K](https://github.com/Grub4K)\n* [extractor/generic] Separate embed extraction into own function\n* [extractor/generic:quoted-html] Add extractor by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* [extractor/unsupported] Raise error on known DRM-only sites by [coletdjnz](https://github.com/coletdjnz)\n* [utils] `js_to_json`: Improve escape handling by [Grub4K](https://github.com/Grub4K)\n* [utils] `strftime_or_none`: Workaround Python bug on Windows\n* [utils] `traverse_obj`: Always return list when branching, allow `re.Match` objects by [Grub4K](https://github.com/Grub4K)\n* [build, test] Harden workflows' security by [sashashura](https://github.com/sashashura)\n* [build] `py2exe`: Migrate to freeze API by [SG5](https://github.com/SG5), [pukkandan](https://github.com/pukkandan)\n* [build] Create `armv7l` and `aarch64` releases by [MrOctopus](https://github.com/MrOctopus), [pukkandan](https://github.com/pukkandan)\n* [build] Make linux binary truly standalone using `conda` by [mlampe](https://github.com/mlampe)\n* [build] Replace `set-output` with `GITHUB_OUTPUT` by [Lesmiscore](https://github.com/Lesmiscore)\n* [update] Use error code `100` for update errors\n* [compat] Fix `shutils.move` in restricted ACL mode on BSD by [ClosedPort22](https://github.com/ClosedPort22), [pukkandan](https://github.com/pukkandan)\n* [docs, devscripts] Document `pyinst`'s argument passthrough by [jahway603](https://github.com/jahway603)\n* [test] Allow `extract_flat` in download tests by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* [cleanup] Misc fixes and cleanup by [pukkandan](https://github.com/pukkandan), [Alienmaster](https://github.com/Alienmaster)\n* [extractor/aeon] Add extractor by [DoubleCouponDay](https://github.com/DoubleCouponDay)\n* [extractor/agora] Add extractors by [selfisekai](https://github.com/selfisekai)\n* [extractor/camsoda] Add extractor by [zulaport](https://github.com/zulaport)\n* [extractor/cinetecamilano] Add extractor by [timendum](https://github.com/timendum)\n* [extractor/deuxm] Add extractors by [CrankDatSouljaBoy](https://github.com/CrankDatSouljaBoy)\n* [extractor/genius] Add extractors by [bashonly](https://github.com/bashonly)\n* [extractor/japandiet] Add extractors by [Lesmiscore](https://github.com/Lesmiscore)\n* [extractor/listennotes] Add extractor by [lksj](https://github.com/lksj), [pukkandan](https://github.com/pukkandan)\n* [extractor/nos.nl] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/oftv] Add extractors by [DoubleCouponDay](https://github.com/DoubleCouponDay)\n* [extractor/podbayfm] Add extractor by [schnusch](https://github.com/schnusch)\n* [extractor/qingting] Add extractor by [bashonly](https://github.com/bashonly), [changren-wcr](https://github.com/changren-wcr)\n* [extractor/screen9] Add extractor by [tpikonen](https://github.com/tpikonen)\n* [extractor/swearnet] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/YleAreena] Add extractor by [pukkandan](https://github.com/pukkandan), [vitkhab](https://github.com/vitkhab)\n* [extractor/zeenews] Add extractor by [m4tu4g](https://github.com/m4tu4g), [pukkandan](https://github.com/pukkandan)\n* [extractor/youtube:tab] **Update tab handling for redesign** by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n    * Channel URLs download all uploads of the channel as multiple playlists, separated by tab\n* [extractor/youtube] Differentiate between no comments and disabled comments by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/youtube] Extract `concurrent_view_count` for livestreams by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/youtube] Fix `duration` for premieres by [nosoop](https://github.com/nosoop)\n* [extractor/youtube] Fix `live_status` by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* [extractor/youtube] Ignore incomplete data error for comment replies by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/youtube] Improve chapter parsing from description\n* [extractor/youtube] Mark videos as fully watched by [bsun0000](https://github.com/bsun0000)\n* [extractor/youtube] Update piped instances by [Generator](https://github.com/Generator)\n* [extractor/youtube] Update playlist metadata extraction for new layout by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/youtube:tab] Fix video metadata from tabs by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/youtube:tab] Let `approximate_date` return timestamp\n* [extractor/americastestkitchen] Fix extractor by [bashonly](https://github.com/bashonly)\n* [extractor/bbc] Support onion domains by [DoubleCouponDay](https://github.com/DoubleCouponDay)\n* [extractor/bilibili] Add chapters and misc cleanup by [lockmatrix](https://github.com/lockmatrix), [pukkandan](https://github.com/pukkandan)\n* [extractor/bilibili] Fix BilibiliIE and Bangumi extractors by [lockmatrix](https://github.com/lockmatrix), [pukkandan](https://github.com/pukkandan)\n* [extractor/bitchute] Better error for geo-restricted videos by [flashdagger](https://github.com/flashdagger)\n* [extractor/bitchute] Improve `BitChuteChannelIE` by [flashdagger](https://github.com/flashdagger), [pukkandan](https://github.com/pukkandan)\n* [extractor/bitchute] Simplify extractor by [flashdagger](https://github.com/flashdagger), [pukkandan](https://github.com/pukkandan)\n* [extractor/cda] Support login through API by [selfisekai](https://github.com/selfisekai)\n* [extractor/crunchyroll] Beta is now the only layout by [tejing1](https://github.com/tejing1)\n* [extractor/detik] Avoid unnecessary extraction\n* [extractor/doodstream] Remove extractor\n* [extractor/dplay] Add MotorTrendOnDemand extractor by [bashonly](https://github.com/bashonly)\n* [extractor/epoch] Support videos without data-trailer by [gibson042](https://github.com/gibson042), [pukkandan](https://github.com/pukkandan)\n* [extractor/fox] Extract thumbnail by [vitkhab](https://github.com/vitkhab)\n* [extractor/foxnews] Add `FoxNewsVideo` extractor\n* [extractor/hotstar] Add season support by [m4tu4g](https://github.com/m4tu4g)\n* [extractor/hotstar] Refactor v1 API calls\n* [extractor/iprima] Make json+ld non-fatal by [bashonly](https://github.com/bashonly)\n* [extractor/iq] Increase phantomjs timeout\n* [extractor/kaltura] Support playlists by [jwoglom](https://github.com/jwoglom), [pukkandan](https://github.com/pukkandan)\n* [extractor/lbry] Authenticate with cookies by [flashdagger](https://github.com/flashdagger)\n* [extractor/livestreamfails] Support posts by [invertico](https://github.com/invertico)\n* [extractor/mlb] Add `MLBArticle` extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/mxplayer] Improve extractor by [m4tu4g](https://github.com/m4tu4g)\n* [extractor/niconico] Always use HTTPS for requests\n* [extractor/nzherald] Support new video embed by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/odnoklassniki] Support boosty.to embeds by [Lesmiscore](https://github.com/Lesmiscore), [megapro17](https://github.com/megapro17), [pukkandan](https://github.com/pukkandan)\n* [extractor/paramountplus] Update API token by [bashonly](https://github.com/bashonly)\n* [extractor/reddit] Add fallback format by [bashonly](https://github.com/bashonly)\n* [extractor/redgifs] Fix extractors by [bashonly](https://github.com/bashonly), [pukkandan](https://github.com/pukkandan)\n* [extractor/redgifs] Refresh auth token for 401 by [endotronic](https://github.com/endotronic), [pukkandan](https://github.com/pukkandan)\n* [extractor/rumble] Add HLS formats and extract more metadata by [flashdagger](https://github.com/flashdagger)\n* [extractor/sbs] Improve `_VALID_URL` by [bashonly](https://github.com/bashonly)\n* [extractor/skyit] Fix extractors by [nixxo](https://github.com/nixxo)\n* [extractor/stripchat] Fix hostname for HLS stream by [zulaport](https://github.com/zulaport)\n* [extractor/stripchat] Improve error message by [freezboltz](https://github.com/freezboltz)\n* [extractor/telegram] Add playlist support and more metadata by [bashonly](https://github.com/bashonly), [bsun0000](https://github.com/bsun0000)\n* [extractor/Tnaflix] Fix for HTTP 500 by [SG5](https://github.com/SG5), [pukkandan](https://github.com/pukkandan)\n* [extractor/tubitv] Better DRM detection by [bashonly](https://github.com/bashonly)\n* [extractor/tvp] Update extractors by [selfisekai](https://github.com/selfisekai)\n* [extractor/twitcasting] Fix `data-movie-playlist` extraction by [Lesmiscore](https://github.com/Lesmiscore)\n* [extractor/twitter] Add onion site to `_VALID_URL` by [DoubleCouponDay](https://github.com/DoubleCouponDay)\n* [extractor/twitter] Add Spaces extractor and GraphQL API by [Grub4K](https://github.com/Grub4K), [bashonly](https://github.com/bashonly), [nixxo](https://github.com/nixxo), [pukkandan](https://github.com/pukkandan)\n* [extractor/twitter] Support multi-video posts by [Grub4K](https://github.com/Grub4K)\n* [extractor/uktvplay] Fix `_VALID_URL`\n* [extractor/viu] Support subtitles of on-screen text by [tkgmomosheep](https://github.com/tkgmomosheep)\n* [extractor/VK] Fix playlist URLs by [the-marenga](https://github.com/the-marenga)\n* [extractor/vlive] Extract `release_timestamp`\n* [extractor/voot] Improve `_VALID_URL` by [freezboltz](https://github.com/freezboltz)\n* [extractor/wordpress:mb.miniAudioPlayer] Add embed extractor by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/YoutubeWebArchive] Improve metadata extraction by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/zee5] Improve `_VALID_URL` by [m4tu4g](https://github.com/m4tu4g)\n* [extractor/zenyandex] Fix extractors by [lksj](https://github.com/lksj), [puc9](https://github.com/puc9), [pukkandan](https://github.com/pukkandan)\n\n\n### 2022.10.04\n\n* Allow a `set` to be passed as `download_archive` by [pukkandan](https://github.com/pukkandan), [bashonly](https://github.com/bashonly)\n* Allow open ranges for time ranges by [Lesmiscore](https://github.com/Lesmiscore)\n* Allow plugin extractors to replace the built-in ones\n* Don't download entire video when no matching `--download-sections`\n* Fix `--config-location -`\n* Improve [5736d79](https://github.com/yt-dlp/yt-dlp/pull/5044/commits/5736d79172c47ff84740d5720467370a560febad)\n* Fix for when playlists don't have `webpage_url`\n* Support environment variables in `--ffmpeg-location`\n* Workaround `libc_ver` not be available on Windows Store version of Python\n* [outtmpl] Curly braces to filter keys by [pukkandan](https://github.com/pukkandan)\n* [outtmpl] Make `%s` work in strfformat for all systems\n* [jsinterp] Workaround operator associativity issue\n* [cookies] Let `_get_mac_keyring_password` fail gracefully\n* [cookies] Parse cookies leniently by [Grub4K](https://github.com/Grub4K)\n* [phantomjs] Fix bug in [587021c](https://github.com/yt-dlp/yt-dlp/commit/587021cd9f717181b44e881941aca3f8d753758b) by [elyse0](https://github.com/elyse0)\n* [downloader/aria2c] Fix filename containing leading whitespace by [std-move](https://github.com/std-move)\n* [downloader/ism] Support ec-3 codec by [nixxo](https://github.com/nixxo)\n* [extractor] Fix `fatal=False` in `RetryManager`\n* [extractor] Improve json-ld extraction\n* [extractor] Make `_search_json` able to parse lists\n* [extractor] Escape `%` in `representation_id` of m3u8\n* [extractor/generic] Pass through referer from json-ld\n* [utils] `base_url`: URL paths can contain `&` by [elyse0](https://github.com/elyse0)\n* [utils] `js_to_json`: Improve\n* [utils] `Popen.run`: Fix default return in binary mode\n* [utils] `traverse_obj`: Rewrite, document and add tests by [Grub4K](https://github.com/Grub4K)\n* [devscripts] `make_lazy_extractors`: Fix for Docker by [josanabr](https://github.com/josanabr)\n* [docs] Misc Improvements\n* [cleanup] Misc fixes and cleanup by [pukkandan](https://github.com/pukkandan), [gamer191](https://github.com/gamer191)\n* [extractor/24tv.ua] Add extractors by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/BerufeTV] Add extractor by [Fabi019](https://github.com/Fabi019)\n* [extractor/booyah] Add extractor by [HobbyistDev](https://github.com/HobbyistDev), [elyse0](https://github.com/elyse0)\n* [extractor/bundesliga] Add extractor by [Fabi019](https://github.com/Fabi019)\n* [extractor/GoPlay] Add extractor by [CNugteren](https://github.com/CNugteren), [basrieter](https://github.com/basrieter), [jeroenj](https://github.com/jeroenj)\n* [extractor/iltalehti] Add extractor by [tpikonen](https://github.com/tpikonen)\n* [extractor/IsraelNationalNews] Add extractor by [Bobscorn](https://github.com/Bobscorn)\n* [extractor/mediaworksnzvod] Add extractor by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/MicrosoftEmbed] Add extractor by [DoubleCouponDay](https://github.com/DoubleCouponDay)\n* [extractor/nbc] Add NBCStations extractor by [bashonly](https://github.com/bashonly)\n* [extractor/onenewsnz] Add extractor by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/prankcast] Add extractor by [HobbyistDev](https://github.com/HobbyistDev), [columndeeply](https://github.com/columndeeply)\n* [extractor/Smotrim] Add extractor by [Lesmiscore](https://github.com/Lesmiscore), [nikita-moor](https://github.com/nikita-moor)\n* [extractor/tencent] Add Iflix extractor by [elyse0](https://github.com/elyse0)\n* [extractor/unscripted] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/adobepass] Add MSO AlticeOne (Optimum TV) by [CplPwnies](https://github.com/CplPwnies)\n* [extractor/youtube] **Download `post_live` videos from start** by [Lesmiscore](https://github.com/Lesmiscore), [pukkandan](https://github.com/pukkandan)\n* [extractor/youtube] Add support for Shorts audio pivot feed by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* [extractor/youtube] Detect `lazy-load-for-videos` embeds\n* [extractor/youtube] Do not warn on duplicate chapters\n* [extractor/youtube] Fix video like count extraction by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/youtube] Support changing extraction language by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/youtube:tab] Improve continuation items extraction\n* [extractor/youtube:tab] Support `reporthistory` page\n* [extractor/amazonstore] Fix JSON extraction by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* [extractor/amazonstore] Retry to avoid captcha page by [Lesmiscore](https://github.com/Lesmiscore)\n* [extractor/animeondemand] Remove extractor by [TokyoBlackHole](https://github.com/TokyoBlackHole)\n* [extractor/anvato] Fix extractor and refactor by [bashonly](https://github.com/bashonly)\n* [extractor/artetv] Remove duplicate stream urls by [Grub4K](https://github.com/Grub4K)\n* [extractor/audioboom] Support direct URLs and refactor by [pukkandan](https://github.com/pukkandan), [tpikonen](https://github.com/tpikonen)\n* [extractor/bandcamp] Extract `uploader_url`\n* [extractor/bilibili] Add space.bilibili extractors by [lockmatrix](https://github.com/lockmatrix)\n* [extractor/BilibiliSpace] Fix extractor and better error message by [lockmatrix](https://github.com/lockmatrix)\n* [extractor/BiliIntl] Support uppercase lang in `_VALID_URL` by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/BiliIntlSeries] Fix `_VALID_URL`\n* [extractor/bongacams] Update `_VALID_URL` by [0xGodspeed](https://github.com/0xGodspeed)\n* [extractor/crunchyroll:beta] Improve handling of hardsubs by [Grub4K](https://github.com/Grub4K)\n* [extractor/detik] Generalize extractors by [HobbyistDev](https://github.com/HobbyistDev), [coletdjnz](https://github.com/coletdjnz)\n* [extractor/dplay:italy] Add default authentication by [Timendum](https://github.com/Timendum)\n* [extractor/heise] Fix extractor by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/holodex] Fix `_VALID_URL` by [LiviaMedeiros](https://github.com/LiviaMedeiros)\n* [extractor/hrfensehen] Fix extractor by [snapdgn](https://github.com/snapdgn)\n* [extractor/hungama] Add subtitle by [GautamMKGarg](https://github.com/GautamMKGarg), [pukkandan](https://github.com/pukkandan)\n* [extractor/instagram] Extract more metadata by [pritam20ps05](https://github.com/pritam20ps05)\n* [extractor/JWPlatform] Fix extractor by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/malltv] Fix video_id extraction by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/MLBTV] Detect live streams\n* [extractor/motorsport] Support native embeds\n* [extractor/Mxplayer] Fix extractor by [itachi-19](https://github.com/itachi-19)\n* [extractor/nebula] Add nebula.tv by [tannertechnology](https://github.com/tannertechnology)\n* [extractor/nfl] Fix extractor by [bashonly](https://github.com/bashonly)\n* [extractor/ondemandkorea] Update `jw_config` regex by [julien-hadleyjack](https://github.com/julien-hadleyjack)\n* [extractor/paramountplus] Better DRM detection by [bashonly](https://github.com/bashonly)\n* [extractor/patreon] Sort formats\n* [extractor/rcs] Fix embed extraction by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/redgifs] Fix extractor by [jhwgh1968](https://github.com/jhwgh1968)\n* [extractor/rutube] Fix `_EMBED_REGEX` by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/RUTV] Fix warnings for livestreams by [Lesmiscore](https://github.com/Lesmiscore)\n* [extractor/soundcloud:search] More metadata in `--flat-playlist` by [SuperSonicHub1](https://github.com/SuperSonicHub1)\n* [extractor/telegraaf] Use mobile GraphQL API endpoint by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/tennistv] Fix timestamp by [zenerdi0de](https://github.com/zenerdi0de)\n* [extractor/tiktok] Fix TikTokIE by [bashonly](https://github.com/bashonly)\n* [extractor/triller] Fix auth token by [bashonly](https://github.com/bashonly)\n* [extractor/trovo] Fix extractors by [Mehavoid](https://github.com/Mehavoid)\n* [extractor/tv2] Support new url format by [tobi1805](https://github.com/tobi1805)\n* [extractor/web.archive:youtube] Fix `_YT_INITIAL_PLAYER_RESPONSE_RE`\n* [extractor/wistia] Add support for channels by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/wistia] Match IDs in embed URLs by [bashonly](https://github.com/bashonly)\n* [extractor/wordpress:playlist] Add generic embed extractor by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/yandexvideopreview] Update `_VALID_URL` by [Grub4K](https://github.com/Grub4K)\n* [extractor/zee5] Fix `_VALID_URL` by [m4tu4g](https://github.com/m4tu4g)\n* [extractor/zee5] Generate device ids by [freezboltz](https://github.com/freezboltz)\n\n\n### 2022.09.01\n\n* Add option `--use-extractors`\n* Merge youtube-dl: Upto [commit/ed5c44e](https://github.com/ytdl-org/youtube-dl/commit/ed5c44e7)\n* Add yt-dlp version to infojson\n* Fix `--break-per-url --max-downloads`\n* Fix bug in `--alias`\n* [cookies] Support firefox container in `--cookies-from-browser` by [bashonly](https://github.com/bashonly), [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* [downloader/external] Smarter detection of executable\n* [extractor/generic] Don't return JW player without formats\n* [FormatSort] Fix `aext` for `--prefer-free-formats`\n* [jsinterp] Various improvements by [pukkandan](https://github.com/pukkandan), [dirkf](https://github.com/dirkf), [elyse0](https://github.com/elyse0)\n* [cache] Mechanism to invalidate old cache\n* [utils] Add `deprecation_warning`\n* [utils] Add `orderedSet_from_options`\n* [utils] `Popen`: Restore `LD_LIBRARY_PATH` when using PyInstaller by [Lesmiscore](https://github.com/Lesmiscore)\n* [build] `make tar` should not follow `DESTDIR` by [satan1st](https://github.com/satan1st)\n* [build] Update pyinstaller by [shirt-dev](https://github.com/shirt-dev)\n* [test] Fix `test_youtube_signature`\n* [cleanup] Misc fixes and cleanup by [DavidH-2022](https://github.com/DavidH-2022), [MrRawes](https://github.com/MrRawes), [pukkandan](https://github.com/pukkandan)\n* [extractor/epoch] Add extractor by [tejasa97](https://github.com/tejasa97)\n* [extractor/eurosport] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/IslamChannel] Add extractors by [Lesmiscore](https://github.com/Lesmiscore)\n* [extractor/newspicks] Add extractor by [Lesmiscore](https://github.com/Lesmiscore)\n* [extractor/triller] Add extractor by [bashonly](https://github.com/bashonly)\n* [extractor/VQQ] Add extractors by [elyse0](https://github.com/elyse0)\n* [extractor/youtube] Improvements to nsig extraction\n* [extractor/youtube] Fix bug in format sorting\n* [extractor/youtube] Update iOS Innertube clients by [SamantazFox](https://github.com/SamantazFox)\n* [extractor/youtube] Use device-specific user agent by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/youtube] Add `--compat-option no-youtube-prefer-utc-upload-date` by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/arte] Bug fix by [cgrigis](https://github.com/cgrigis)\n* [extractor/bilibili] Extract `flac` with premium account by [jackyyf](https://github.com/jackyyf)\n* [extractor/BiliBiliSearch] Don't sort by date\n* [extractor/BiliBiliSearch] Fix infinite loop\n* [extractor/bitchute] Mark errors as expected\n* [extractor/crunchyroll:beta] Use anonymous access by [tejing1](https://github.com/tejing1)\n* [extractor/huya] Fix stream extraction by [ohaiibuzzle](https://github.com/ohaiibuzzle)\n* [extractor/medaltv] Fix extraction by [xenova](https://github.com/xenova)\n* [extractor/mediaset] Fix embed extraction\n* [extractor/mixcloud] All formats are audio-only\n* [extractor/rtbf] Fix jwt extraction by [elyse0](https://github.com/elyse0)\n* [extractor/screencastomatic] Support `--video-password` by [shreyasminocha](https://github.com/shreyasminocha)\n* [extractor/stripchat] Don't modify input URL by [dfaker](https://github.com/dfaker)\n* [extractor/uktv] Improve `_VALID_URL` by [dirkf](https://github.com/dirkf)\n* [extractor/vimeo:user] Fix `_VALID_URL`\n\n\n### 2022.08.19\n\n* Fix bug in `--download-archive`\n* [jsinterp] **Fix for new youtube players** and related improvements by [dirkf](https://github.com/dirkf), [pukkandan](https://github.com/pukkandan)\n* [phantomjs] Add function to execute JS without a DOM by [MinePlayersPE](https://github.com/MinePlayersPE), [pukkandan](https://github.com/pukkandan)\n* [build] Exclude devscripts from installs by [Lesmiscore](https://github.com/Lesmiscore)\n* [cleanup] Misc fixes and cleanup\n* [extractor/youtube] **Add fallback to phantomjs** for nsig\n* [extractor/youtube] Fix error reporting of \"Incomplete data\"\n* [extractor/youtube] Improve format sorting for IOS formats\n* [extractor/youtube] Improve signature caching\n* [extractor/instagram] Fix extraction by [bashonly](https://github.com/bashonly), [pritam20ps05](https://github.com/pritam20ps05)\n* [extractor/rai] Minor fix by [nixxo](https://github.com/nixxo)\n* [extractor/rtbf] Fix stream extractor by [elyse0](https://github.com/elyse0)\n* [extractor/SovietsCloset] Fix extractor by [ChillingPepper](https://github.com/ChillingPepper)\n* [extractor/zattoo] Fix Zattoo resellers by [goggle](https://github.com/goggle)\n\n### 2022.08.14\n\n* Merge youtube-dl: Upto [commit/d231b56](https://github.com/ytdl-org/youtube-dl/commit/d231b56)\n* [jsinterp] Handle **new youtube signature functions**\n* [jsinterp] Truncate error messages\n* [extractor] Fix format sorting of `channels`\n* [ffmpeg] Disable avconv unless `--prefer-avconv`\n* [ffmpeg] Smarter detection of ffprobe filename\n* [embedthumbnail] Detect `libatomicparsley.so`\n* [ThumbnailsConvertor] Fix conversion after `fixup_webp`\n* [utils] Fix `get_compatible_ext`\n* [build] Fix changelog\n* [update] Set executable bit-mask by [pukkandan](https://github.com/pukkandan), [Lesmiscore](https://github.com/Lesmiscore)\n* [devscripts] Fix import\n* [docs] Consistent use of `e.g.` by [Lesmiscore](https://github.com/Lesmiscore)\n* [cleanup] Misc fixes and cleanup\n* [extractor/moview] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/parler] Add extractor by [palewire](https://github.com/palewire)\n* [extractor/patreon] Ignore erroneous media attachments by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/truth] Add extractor by [palewire](https://github.com/palewire)\n* [extractor/aenetworks] Add formats parameter by [jacobtruman](https://github.com/jacobtruman)\n* [extractor/crunchyroll] Improve `_VALID_URL`s\n* [extractor/doodstream] Add `wf` domain by [aldoridhoni](https://github.com/aldoridhoni)\n* [extractor/facebook] Add reel support by [bashonly](https://github.com/bashonly)\n* [extractor/MLB] New extractor by [ischmidt20](https://github.com/ischmidt20)\n* [extractor/rai] Misc fixes by [nixxo](https://github.com/nixxo)\n* [extractor/toggo] Improve `_VALID_URL` by [masta79](https://github.com/masta79)\n* [extractor/tubitv] Extract additional formats by [shirt-dev](https://github.com/shirt-dev)\n* [extractor/zattoo] Potential fix for resellers\n\n\n### 2022.08.08\n\n* **Remove Python 3.6 support**\n* Determine merge container better by [pukkandan](https://github.com/pukkandan), [selfisekai](https://github.com/selfisekai)\n* Framework for embed detection by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* Merge youtube-dl: Upto [commit/adb5294](https://github.com/ytdl-org/youtube-dl/commit/adb5294)\n* `--compat-option no-live-chat` should disable danmaku\n* Fix misleading DRM message\n* Import ctypes only when necessary\n* Minor bugfixes\n* Reject entire playlists faster with `--match-filter`\n* Remove filtered entries from `-J`\n* Standardize retry mechanism\n* Validate `--merge-output-format`\n* [downloader] Add average speed to final progress line\n* [extractor] Add field `audio_channels`\n* [extractor] Support multiple archive ids for one video\n* [ffmpeg] Set `ffmpeg_location` in a contextvar\n* [FFmpegThumbnailsConvertor] Fix conversion from GIF\n* [MetadataParser] Don't set `None` when the field didn't match\n* [outtmpl] Smarter replacing of unsupported characters\n* [outtmpl] Treat empty values as None in filenames\n* [utils] sanitize_open: Allow any IO stream as stdout\n* [build, devscripts] Add devscript to set a build variant\n* [build] Improve build process by [shirt-dev](https://github.com/shirt-dev)\n* [build] Update pyinstaller\n* [devscripts] Create `utils` and refactor\n* [docs] Clarify `best*`\n* [docs] Fix bug report issue template\n* [docs] Fix capitalization in references by [christoph-heinrich](https://github.com/christoph-heinrich)\n* [cleanup, mhtml] Use imghdr\n* [cleanup, utils] Consolidate known media extensions\n* [cleanup] Misc fixes and cleanup\n* [extractor/angel] Add extractor by [AxiosDeminence](https://github.com/AxiosDeminence)\n* [extractor/dplay] Add MotorTrend extractor by [Sipherdrakon](https://github.com/Sipherdrakon)\n* [extractor/harpodeon] Add extractor by [eren-kemer](https://github.com/eren-kemer)\n* [extractor/holodex] Add extractor by [pukkandan](https://github.com/pukkandan), [sqrtNOT](https://github.com/sqrtNOT)\n* [extractor/kompas] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/rai] Add raisudtirol extractor by [nixxo](https://github.com/nixxo)\n* [extractor/tempo] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/youtube] **Fixes for third party client detection** by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/youtube] Add `live_status=post_live` by [lazypete365](https://github.com/lazypete365)\n* [extractor/youtube] Extract more format info\n* [extractor/youtube] Parse translated subtitles only when requested\n* [extractor/youtube, extractor/twitch] Allow waiting for channels to become live\n* [extractor/youtube, webvtt] Extract auto-subs from livestream VODs by [fstirlitz](https://github.com/fstirlitz), [pukkandan](https://github.com/pukkandan)\n* [extractor/AbemaTVTitle] Implement paging by [Lesmiscore](https://github.com/Lesmiscore)\n* [extractor/archiveorg] Improve handling of formats by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* [extractor/arte] Fix title extraction\n* [extractor/arte] **Move to v2 API** by [fstirlitz](https://github.com/fstirlitz), [pukkandan](https://github.com/pukkandan)\n* [extractor/bbc] Fix news articles by [ajj8](https://github.com/ajj8)\n* [extractor/camtasia] Separate into own extractor by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/cloudflarestream] Fix video_id padding by [haobinliang](https://github.com/haobinliang)\n* [extractor/crunchyroll] Fix conversion of thumbnail from GIF\n* [extractor/crunchyroll] Handle missing metadata correctly by [Burve](https://github.com/Burve), [pukkandan](https://github.com/pukkandan)\n* [extractor/crunchyroll:beta] Extract timestamp and fix tests by [tejing1](https://github.com/tejing1)\n* [extractor/crunchyroll:beta] Use streams API by [tejing1](https://github.com/tejing1)\n* [extractor/doodstream] Support more domains by [Galiley](https://github.com/Galiley)\n* [extractor/ESPN] Extract duration by [ischmidt20](https://github.com/ischmidt20)\n* [extractor/FIFA] Change API endpoint by [Bricio](https://github.com/Bricio), [yashkc2025](https://github.com/yashkc2025)\n* [extractor/globo:article] Remove false positives by [Bricio](https://github.com/Bricio)\n* [extractor/Go] Extract timestamp by [ischmidt20](https://github.com/ischmidt20)\n* [extractor/hidive] Fix cookie login when netrc is also given by [winterbird-code](https://github.com/winterbird-code)\n* [extractor/html5] Separate into own extractor by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* [extractor/ina] Improve extractor by [elyse0](https://github.com/elyse0)\n* [extractor/NaverNow] Change endpoint by [ping](https://github.com/ping)\n* [extractor/ninegag] Extract uploader by [DjesonPV](https://github.com/DjesonPV)\n* [extractor/NovaPlay] Fix extractor by [Bojidarist](https://github.com/Bojidarist)\n* [extractor/orf:radio] Rewrite extractors\n* [extractor/patreon] Fix and improve extractors by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* [extractor/rai] Fix RaiNews extraction by [nixxo](https://github.com/nixxo)\n* [extractor/redbee] Unify and update extractors by [elyse0](https://github.com/elyse0)\n* [extractor/stripchat] Fix _VALID_URL by [freezboltz](https://github.com/freezboltz)\n* [extractor/tubi] Exclude playlists from playlist entries by [sqrtNOT](https://github.com/sqrtNOT)\n* [extractor/tviplayer] Improve `_VALID_URL` by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/twitch] Extract chapters for single chapter VODs by [mpeter50](https://github.com/mpeter50)\n* [extractor/vgtv] Support tv.vg.no by [sqrtNOT](https://github.com/sqrtNOT)\n* [extractor/vidio] Support embed link by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/vk] Fix extractor by [Mehavoid](https://github.com/Mehavoid)\n* [extractor/WASDTV:record] Fix `_VALID_URL`\n* [extractor/xfileshare] Add Referer by [Galiley](https://github.com/Galiley)\n* [extractor/YahooJapanNews] Fix extractor by [Lesmiscore](https://github.com/Lesmiscore)\n* [extractor/yandexmusic] Extract higher quality format\n* [extractor/zee5] Update Device ID by [m4tu4g](https://github.com/m4tu4g)\n\n\n### 2022.07.18\n\n* Allow users to specify encoding in each config files by [Lesmiscore](https://github.com/Lesmiscore)\n* Discard infodict from memory if no longer needed\n* Do not allow extractors to return `None`\n* Do not load system certificates when `certifi` is used\n* Fix rounding of integers in format table\n* Improve chapter sanitization\n* Skip some fixup if remux/recode is needed by [Lesmiscore](https://github.com/Lesmiscore)\n* Support `--no-progress` for `--wait-for-video`\n* Fix bug in [612f2be](https://github.com/yt-dlp/yt-dlp/commit/612f2be5d3924540158dfbe5f25d841f04cff8c6)\n* [outtmpl] Add alternate form `h` for HTML escaping\n* [aes] Add multiple padding modes in CBC by [elyse0](https://github.com/elyse0)\n* [extractor/common] Passthrough `errnote=False` to parsers\n* [extractor/generic] Remove HEAD request\n* [http] Ensure the file handle is always closed\n* [ModifyChapters] Modify duration in infodict\n* [options] Fix aliases to `--config-location`\n* [utils] Fix `get_domain`\n* [build] Consistent order for lazy extractors by [lamby](https://github.com/lamby)\n* [build] Fix architecture suffix of executables by [odo2063](https://github.com/odo2063)\n* [build] Improve `setup.py`\n* [update] Do not check `_update_spec` when up to date\n* [update] Prepare to remove Python 3.6 support\n* [compat] Let PyInstaller detect _legacy module\n* [devscripts/update-formulae] Do not change dependency section\n* [test] Split download tests so they can be more easily run in CI\n* [docs] Improve docstring of `download_ranges` by [FirefoxMetzger](https://github.com/FirefoxMetzger)\n* [docs] Improve issue templates\n* [build] Fix bug in [6d916fe](https://github.com/yt-dlp/yt-dlp/commit/6d916fe709a38e8c4c69b73843acf170b5165931)\n* [cleanup, utils] Refactor parse_codecs\n* [cleanup] Misc fixes and cleanup\n* [extractor/acfun] Add extractors by [lockmatrix](https://github.com/lockmatrix)\n* [extractor/Audiodraft] Add extractors by [Ashish0804](https://github.com/Ashish0804), [fstirlitz](https://github.com/fstirlitz)\n* [extractor/cellebrite] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/detik] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/hytale] Add extractor by [llamasblade](https://github.com/llamasblade), [pukkandan](https://github.com/pukkandan)\n* [extractor/liputan6] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/mocha] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/rtl.lu] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/rtvsl] Add extractor by [iw0nderhow](https://github.com/iw0nderhow), [pukkandan](https://github.com/pukkandan)\n* [extractor/StarTrek] Add extractor by [scy](https://github.com/scy)\n* [extractor/syvdk] Add extractor by [misaelaguayo](https://github.com/misaelaguayo)\n* [extractor/theholetv] Add extractor by [dosy4ev](https://github.com/dosy4ev)\n* [extractor/TubeTuGraz] Add extractor by [Ferdi265](https://github.com/Ferdi265), [pukkandan](https://github.com/pukkandan)\n* [extractor/tviplayer] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/wetv] Add extractors by [elyse0](https://github.com/elyse0)\n* [extractor/wikimedia] Add extractor by [EhtishamSabir](https://github.com/EhtishamSabir), [pukkandan](https://github.com/pukkandan)\n* [extractor/youtube] Fix duration check for post-live manifestless mode\n* [extractor/youtube] More metadata for storyboards by [ftk](https://github.com/ftk)\n* [extractor/bigo] Fix extractor by [Lesmiscore](https://github.com/Lesmiscore)\n* [extractor/BiliIntl] Fix subtitle extraction by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [extractor/crunchyroll] Improve `_VALID_URL`\n* [extractor/fifa] Fix extractor by [ischmidt20](https://github.com/ischmidt20)\n* [extractor/instagram] Fix post/story extractors by [pritam20ps05](https://github.com/pritam20ps05), [pukkandan](https://github.com/pukkandan)\n* [extractor/iq] Set language correctly for Korean subtitles\n* [extractor/MangoTV] Fix subtitle languages\n* [extractor/Netverse] Improve playlist extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/philharmoniedeparis] Fix extractor by [sqrtNOT](https://github.com/sqrtNOT)\n* [extractor/Trovo] Fix extractor by [u-spec-png](https://github.com/u-spec-png)\n* [extractor/twitch] Support storyboards for VODs by [ftk](https://github.com/ftk)\n* [extractor/WatchESPN] Improve `_VALID_URL` by [IONECarter](https://github.com/IONECarter), [dirkf](https://github.com/dirkf)\n* [extractor/WSJArticle] Fix video id extraction by [sqrtNOT](https://github.com/sqrtNOT)\n* [extractor/Ximalaya] Fix extractors by [lockmatrix](https://github.com/lockmatrix)\n* [cleanup, extractor/youtube] Fix tests by [sheerluck](https://github.com/sheerluck)\n\n\n### 2022.06.29\n\n* Fix `--downloader native`\n* Fix `section_end` of clips\n* Fix playlist error handling\n* Sanitize `chapters`\n* [extractor] Fix `_create_request` when headers is None\n* [extractor] Fix empty `BaseURL` in MPD\n* [ffmpeg] Write full output to debug on error\n* [hls] Warn user when trying to download live HLS\n* [options] Fix `parse_known_args` for `--`\n* [utils] Fix inconsistent default handling between HTTP and HTTPS requests by [coletdjnz](https://github.com/coletdjnz)\n* [build] Draft release until complete\n* [build] Fix release tag commit\n* [build] Standalone x64 builds for MacOS 10.9 by [StefanLobbenmeier](https://github.com/StefanLobbenmeier)\n* [update] Ability to set a maximum version for specific variants\n* [compat] Fix `compat.WINDOWS_VT_MODE`\n* [compat] Remove deprecated functions from core code\n* [compat] Remove more functions\n* [cleanup, extractor] Reduce direct use of `_downloader`\n* [cleanup] Consistent style for file heads\n* [cleanup] Fix some typos by [crazymoose77756](https://github.com/crazymoose77756)\n* [cleanup] Misc fixes and cleanup\n* [extractor/Scrolller] Add extractor by [LunarFang416](https://github.com/LunarFang416)\n* [extractor/ViMP] Add playlist extractor by [FestplattenSchnitzel](https://github.com/FestplattenSchnitzel)\n* [extractor/fuyin] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/livestreamfails] Add extractor by [nomevi](https://github.com/nomevi)\n* [extractor/premiershiprugby] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/steam] Add broadcast extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/youtube] Mark videos as fully watched by [Brett824](https://github.com/Brett824)\n* [extractor/CWTV] Extract thumbnail by [ischmidt20](https://github.com/ischmidt20)\n* [extractor/ViMP] Add thumbnail and support more sites by [FestplattenSchnitzel](https://github.com/FestplattenSchnitzel)\n* [extractor/dropout] Support cookies and login only as needed by [pingiun](https://github.com/pingiun), [pukkandan](https://github.com/pukkandan)\n* [extractor/ertflix] Improve `_VALID_URL`\n* [extractor/lbry] Use HEAD request for redirect URL by [flashdagger](https://github.com/flashdagger)\n* [extractor/mediaset] Improve `_VALID_URL`\n* [extractor/npr] Implement [e50c350](https://github.com/yt-dlp/yt-dlp/commit/e50c3500b43d80e4492569c4b4523c4379c6fbb2) differently\n* [extractor/tennistv] Rewrite extractor by [pukkandan](https://github.com/pukkandan), [zenerdi0de](https://github.com/zenerdi0de)\n\n### 2022.06.22.1\n\n* [build] Fix updating homebrew formula\n\n### 2022.06.22\n\n* [**Deprecate support for Python 3.6**](https://github.com/yt-dlp/yt-dlp/issues/3764#issuecomment-1154051119)\n* **Add option `--download-sections` to download video partially**\n    * Chapter regex and time ranges are accepted, e.g. `--download-sections *1:10-2:20`\n* Add option `--alias`\n* Add option `--lazy-playlist` to process entries as they are received\n* Add option `--retry-sleep`\n* Add slicing notation to `--playlist-items`\n    * Adds support for negative indices and step\n    * Add `-I` as alias for `--playlist-index`\n    * Makes `--playlist-start`, `--playlist-end`, `--playlist-reverse`, `--no-playlist-reverse` redundant\n* `--config-location -` to provide options interactively\n* [build] Add Linux standalone builds\n* [update] Self-restart after update\n* Merge youtube-dl: Upto [commit/8a158a9](https://github.com/ytdl-org/youtube-dl/commit/8a158a9)\n* Add `--no-update`\n* Allow extractors to specify section_start/end for clips\n* Do not print progress to `stderr` with `-q`\n* Ensure pre-processor errors do not block video download\n* Fix `--simulate --max-downloads`\n* Improve error handling of bad config files\n* Return an error code if update fails\n* Fix bug in [3a408f9](https://github.com/yt-dlp/yt-dlp/commit/3a408f9d199127ca2626359e21a866a09ab236b3)\n* [ExtractAudio] Allow conditional conversion\n* [ModifyChapters] Fix repeated removal of small segments\n* [ThumbnailsConvertor] Allow conditional conversion\n* [cookies] Detect profiles for cygwin/BSD by [moench-tegeder](https://github.com/moench-tegeder)\n* [dash] Show fragment count with `--live-from-start` by [flashdagger](https://github.com/flashdagger)\n* [extractor] Add `_search_json` by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* [extractor] Add `default` parameter to `_search_json` by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* [extractor] Add dev option `--load-pages`\n* [extractor] Handle `json_ld` with multiple `@type`s\n* [extractor] Import `_ALL_CLASSES` lazily\n* [extractor] Recognize `src` attribute from HTML5 media elements by [Lesmiscore](https://github.com/Lesmiscore)\n* [extractor/generic] Revert e6ae51c123897927eb3c9899923d8ffd31c7f85d\n* [f4m] Bugfix\n* [ffmpeg] Check version lazily\n* [jsinterp] Some optimizations and refactoring by [dirkf](https://github.com/dirkf), [pukkandan](https://github.com/pukkandan)\n* [utils] Improve performance using `functools.cache`\n* [utils] Send HTTP/1.1 ALPN extension by [coletdjnz](https://github.com/coletdjnz)\n* [utils] `ExtractorError`: Fix `exc_info`\n* [utils] `ISO3166Utils`: Add `EU` and `AP`\n* [utils] `Popen`: Refactor to use contextmanager\n* [utils] `locked_file`: Fix for PyPy on Windows\n* [update] Expose more functionality to API\n* [update] Use `.git` folder to distinguish `source`/`unknown`\n* [compat] Add `functools.cached_property`\n* [test] Fix `FakeYDL` signatures by [coletdjnz](https://github.com/coletdjnz)\n* [docs] Improvements\n* [cleanup, ExtractAudio] Refactor\n* [cleanup, downloader] Refactor `report_progress`\n* [cleanup, extractor] Refactor `_download_...` methods\n* [cleanup, extractor] Rename `extractors.py` to `_extractors.py`\n* [cleanup, utils] Don't use kwargs for `format_field`\n* [cleanup, build] Refactor\n* [cleanup, docs] Re-indent \"Usage and Options\" section\n* [cleanup] Deprecate `YoutubeDL.parse_outtmpl`\n* [cleanup] Misc fixes and cleanup by [Lesmiscore](https://github.com/Lesmiscore), [MrRawes](https://github.com/MrRawes), [christoph-heinrich](https://github.com/christoph-heinrich), [flashdagger](https://github.com/flashdagger), [gamer191](https://github.com/gamer191), [kwconder](https://github.com/kwconder), [pukkandan](https://github.com/pukkandan)\n* [extractor/DailyWire] Add extractors by [HobbyistDev](https://github.com/HobbyistDev), [pukkandan](https://github.com/pukkandan)\n* [extractor/fourzerostudio] Add extractors by [Lesmiscore](https://github.com/Lesmiscore)\n* [extractor/GoogleDrive] Add folder extractor by [evansp](https://github.com/evansp), [pukkandan](https://github.com/pukkandan)\n* [extractor/MirrorCoUK] Add extractor by [LunarFang416](https://github.com/LunarFang416), [pukkandan](https://github.com/pukkandan)\n* [extractor/atscaleconfevent] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [extractor/freetv] Add extractor by [elyse0](https://github.com/elyse0)\n* [extractor/ixigua] Add Extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/kicker.de] Add extractor by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/netverse] Add extractors by [HobbyistDev](https://github.com/HobbyistDev), [pukkandan](https://github.com/pukkandan)\n* [extractor/playsuisse] Add extractor by [pukkandan](https://github.com/pukkandan), [sbor23](https://github.com/sbor23)\n* [extractor/substack] Add extractor by [elyse0](https://github.com/elyse0)\n* [extractor/youtube] **Support downloading clips**\n* [extractor/youtube] Add `innertube_host` and `innertube_key` extractor args by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/youtube] Add warning for PostLiveDvr\n* [extractor/youtube] Bring back `_extract_chapters_from_description`\n* [extractor/youtube] Extract `comment_count` from webpage\n* [extractor/youtube] Fix `:ytnotifications` extractor by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/youtube] Fix initial player response extraction by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* [extractor/youtube] Fix live chat for videos with content warning by [coletdjnz](https://github.com/coletdjnz)\n* [extractor/youtube] Make signature extraction non-fatal\n* [extractor/youtube:tab] Detect `videoRenderer` in `_post_thread_continuation_entries`\n* [extractor/BiliIntl] Fix metadata extraction\n* [extractor/BiliIntl] Fix subtitle extraction by [HobbyistDev](https://github.com/HobbyistDev)\n* [extractor/FranceCulture] Fix extractor by [aurelg](https://github.com/aurelg), [pukkandan](https://github.com/pukkandan)\n* [extractor/PokemonSoundLibrary] Remove extractor by [Lesmiscore](https://github.com/Lesmiscore)\n* [extractor/StreamCZ] Fix extractor by [adamanldo](https://github.com/adamanldo), [dirkf](https://github.com/dirkf)\n* [extractor/WatchESPN] Support free videos and BAM_DTC by [ischmidt20](https://github.com/ischmidt20)\n* [extractor/animelab] Remove extractor by [gamer191](https://github.com/gamer191)\n* [extractor/bloomberg] Change playback endpoint by [m4tu4g](https://github.com/m4tu4g)\n* [extractor/ccc] Extract view_count by [vkorablin](https://github.com/vkorablin)\n* [extractor/crunchyroll:beta] Fix extractor after API change by [Burve](https://github.com/Burve), [tejing1](https://github.com/tejing1)\n* [extractor/curiositystream] Get `auth_token` from cookie by [mnn](https://github.com/mnn)\n* [extractor/digitalconcerthall] Fix extractor by [ZhymabekRoman](https://github.com/ZhymabekRoman)\n* [extractor/dropbox] Extract the correct `mountComponent`\n* [extractor/dropout] Login is not mandatory\n* [extractor/duboku] Fix for hostname change by [mozbugbox](https://github.com/mozbugbox)\n* [extractor/espn] Add `WatchESPN` extractor by [ischmidt20](https://github.com/ischmidt20), [pukkandan](https://github.com/pukkandan)\n* [extractor/expressen] Fix extractor by [aejdl](https://github.com/aejdl)\n* [extractor/foxnews] Update embed extraction by [elyse0](https://github.com/elyse0)\n* [extractor/ina] Fix extractor by [elyse0](https://github.com/elyse0)\n* [extractor/iwara:user] Make paging better by [Lesmiscore](https://github.com/Lesmiscore)\n* [extractor/jwplatform] Look for `data-video-jw-id`\n* [extractor/lbry] Update livestream API by [flashdagger](https://github.com/flashdagger)\n* [extractor/mediaset] Improve `_VALID_URL`\n* [extractor/naver] Add `navernow` extractor by [ping](https://github.com/ping)\n* [extractor/niconico:series] Fix extractor by [sqrtNOT](https://github.com/sqrtNOT)\n* [extractor/npr] Use stream url from json-ld by [r5d](https://github.com/r5d)\n* [extractor/pornhub] Extract `uploader_id` field by [Lesmiscore](https://github.com/Lesmiscore)\n* [extractor/radiofrance] Add more radios by [bubbleguuum](https://github.com/bubbleguuum)\n* [extractor/rumble] Detect JS embed\n* [extractor/rumble] Extract subtitles by [fstirlitz](https://github.com/fstirlitz)\n* [extractor/southpark] Add `southpark.lat` extractor by [darkxex](https://github.com/darkxex)\n* [extractor/spotify:show] Fix extractor\n* [extractor/tiktok] Detect embeds\n* [extractor/tiktok] Extract `SIGI_STATE` by [dirkf](https://github.com/dirkf), [pukkandan](https://github.com/pukkandan), [sulyi](https://github.com/sulyi)\n* [extractor/tver] Fix extractor by [Lesmiscore](https://github.com/Lesmiscore)\n* [extractor/vevo] Fix extractor by [Lesmiscore](https://github.com/Lesmiscore)\n* [extractor/yahoo:gyao] Fix extractor\n* [extractor/zattoo] Fix live streams by [miseran](https://github.com/miseran)\n* [extractor/zdf] Improve format sorting by [elyse0](https://github.com/elyse0)\n\n\n### 2022.05.18\n\n* Add support for SSL client certificate authentication by [coletdjnz](https://github.com/coletdjnz), [dirkf](https://github.com/dirkf)\n    * Adds `--client-certificate`, `--client-certificate-key`, `--client-certificate-password`\n* Add `--match-filter -` to interactively ask for each video\n* `--max-downloads` should obey `--break-per-input`\n* Allow use of weaker ciphers with `--legacy-server-connect`\n* Don't imply `-s` for later stages of `-O`\n* Fix `--date today`\n* Fix `--skip-unavailable-fragments`\n* Fix color in `-q -F`\n* Fix redirect HTTP method handling by [coletdjnz](https://github.com/coletdjnz)\n* Improve `--clean-infojson`\n* Remove warning for videos with an empty title\n* Run `FFmpegFixupM3u8PP` for live-streams if needed\n* Show name of downloader in verbose log\n* [cookies] Allow `cookiefile` to be a text stream\n* [cookies] Report progress when importing cookies\n* [downloader/ffmpeg] Specify headers for each URL by [elyse0](https://github.com/elyse0)\n* [fragment] Do not change chunk-size when `--test`\n* [fragment] Make single thread download work for `--live-from-start` by [Lesmiscore](https://github.com/Lesmiscore)\n* [hls] Fix `byte_range` for `EXT-X-MAP` fragment by [fstirlitz](https://github.com/fstirlitz)\n* [http] Fix retrying on read timeout by [coletdjnz](https://github.com/coletdjnz)\n* [ffmpeg] Fix features detection\n* [EmbedSubtitle] Enable for more video extensions\n* [EmbedThumbnail] Disable thumbnail conversion for mkv by [evansp](https://github.com/evansp)\n* [EmbedThumbnail] Do not obey `-k`\n* [EmbedThumbnail] Do not remove id3v1 tags\n* [FFmpegMetadata] Remove `\\0` from metadata\n* [FFmpegMetadata] Remove filename from attached info-json\n* [FixupM3u8] Obey `--hls-prefer-mpegts`\n* [Sponsorblock] Don't crash when duration is unknown\n* [XAttrMetadata] Refactor and document dependencies\n* [extractor] Document netrc machines\n* [extractor] Update `manifest_url`s after redirect by [elyse0](https://github.com/elyse0)\n* [extractor] Update dash `manifest_url` after redirects by [elyse0](https://github.com/elyse0)\n* [extractor] Use `classmethod`/`property` where possible\n* [generic] Refactor `_extract_rss`\n* [utils] `is_html`: Handle double BOM\n* [utils] `locked_file`: Ignore illegal seek on `truncate` by [jakeogh](https://github.com/jakeogh)\n* [utils] `sanitize_path`: Fix when path is empty string\n* [utils] `write_string`: Workaround newline issue in `conhost`\n* [utils] `certifi`: Make sure the pem file exists\n* [utils] Fix `WebSocketsWrapper`\n* [utils] `locked_file`: Do not give executable bits for newly created files by [Lesmiscore](https://github.com/Lesmiscore)\n* [utils] `YoutubeDLCookieJar`: Detect and reject JSON file by [Lesmiscore](https://github.com/Lesmiscore)\n* [test] Convert warnings into errors and fix some existing warnings by [fstirlitz](https://github.com/fstirlitz)\n* [dependencies] Create module with all dependency imports\n* [compat] Split into sub-modules by [fstirlitz](https://github.com/fstirlitz), [pukkandan](https://github.com/pukkandan)\n* [compat] Implement `compat.imghdr`\n* [build] Add `make uninstall` by [MrRawes](https://github.com/MrRawes)\n* [build] Avoid use of `install -D`\n* [build] Fix `Makefile` by [putnam](https://github.com/putnam)\n* [build] Fix `--onedir` on macOS\n* [build] Add more test-runners\n* [cleanup] Deprecate some compat vars by [fstirlitz](https://github.com/fstirlitz), [pukkandan](https://github.com/pukkandan)\n* [cleanup] Remove unused code paths, extractors, scripts and tests by [fstirlitz](https://github.com/fstirlitz)\n* [cleanup] Upgrade syntax (`pyupgrade`) and sort imports (`isort`)\n* [cleanup, docs, build] Misc fixes\n* [BilibiliLive] Add extractor by [HE7086](https://github.com/HE7086), [pukkandan](https://github.com/pukkandan)\n* [Fifa] Add Extractor by [Bricio](https://github.com/Bricio)\n* [goodgame] Add extractor by [nevack](https://github.com/nevack)\n* [gronkh] Add playlist extractors by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [icareus] Add extractor by [tpikonen](https://github.com/tpikonen), [pukkandan](https://github.com/pukkandan)\n* [iwara] Add playlist extractors by [i6t](https://github.com/i6t)\n* [Likee] Add extractor by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [masters] Add extractor by [m4tu4g](https://github.com/m4tu4g)\n* [nebula] Add support for subscriptions by [hheimbuerger](https://github.com/hheimbuerger)\n* [Podchaser] Add extractors by [connercsbn](https://github.com/connercsbn)\n* [rokfin:search] Add extractor by [P-reducible](https://github.com/P-reducible), [pukkandan](https://github.com/pukkandan)\n* [youtube] Add `:ytnotifications` extractor by [krichbanana](https://github.com/krichbanana)\n* [youtube] Add YoutubeStoriesIE (`ytstories:<channel UCID>`) by [coletdjnz](https://github.com/coletdjnz)\n* [ZingMp3] Add chart and user extractors by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [adn] Update AES key by [elyse0](https://github.com/elyse0)\n* [adobepass] Allow cookies for authenticating MSO\n* [bandcamp] Exclude merch links by [Yipten](https://github.com/Yipten)\n* [chingari] Fix archiving and tests\n* [DRTV] Improve `_VALID_URL` by [vertan](https://github.com/vertan)\n* [facebook] Improve thumbnail extraction by [Wikidepia](https://github.com/Wikidepia)\n* [fc2] Stop heatbeating once FFmpeg finishes by [Lesmiscore](https://github.com/Lesmiscore)\n* [Gofile] Fix extraction and support password-protected links by [mehq](https://github.com/mehq)\n* [hotstar, cleanup] Refactor extractors\n* [InfoQ] Don't fail on missing audio format by [evansp](https://github.com/evansp)\n* [Jamendo] Extract more metadata by [evansp](https://github.com/evansp)\n* [kaltura] Update API calls by [flashdagger](https://github.com/flashdagger)\n* [KhanAcademy] Fix extractor by [rand-net](https://github.com/rand-net)\n* [LCI] Fix extractor by [MarwenDallel](https://github.com/MarwenDallel)\n* [lrt] Support livestreams by [GiedriusS](https://github.com/GiedriusS)\n* [niconico] Set `expected_protocol` to a public field\n* [Niconico] Support 2FA by [ekangmonyet](https://github.com/ekangmonyet)\n* [Olympics] Fix format extension\n* [openrec:movie] Enable fallback for /movie/ URLs\n* [PearVideo] Add fallback for formats by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [radiko] Fix extractor by [Lesmiscore](https://github.com/Lesmiscore)\n* [rai] Add `release_year`\n* [reddit] Prevent infinite loop\n* [rokfin] Implement login by [P-reducible](https://github.com/P-reducible), [pukkandan](https://github.com/pukkandan)\n* [ruutu] Support hs.fi embeds by [tpikonen](https://github.com/tpikonen), [pukkandan](https://github.com/pukkandan)\n* [spotify] Detect iframe embeds by [fstirlitz](https://github.com/fstirlitz)\n* [telegram] Fix metadata extraction\n* [tmz, cleanup] Update tests by [diegorodriguezv](https://github.com/diegorodriguezv)\n* [toggo] Fix `_VALID_URL` by [ca-za](https://github.com/ca-za)\n* [trovo] Update to new API by [nyuszika7h](https://github.com/nyuszika7h)\n* [TVer] Improve extraction by [Lesmiscore](https://github.com/Lesmiscore)\n* [twitcasting] Pass headers for each formats by [Lesmiscore](https://github.com/Lesmiscore)\n* [VideocampusSachsen] Improve extractor by [FestplattenSchnitzel](https://github.com/FestplattenSchnitzel)\n* [vimeo] Fix extractors\n* [wat] Fix extraction of multi-language videos and subtitles by [elyse0](https://github.com/elyse0)\n* [wistia] Fix `_VALID_URL` by [dirkf](https://github.com/dirkf)\n* [youtube, cleanup] Minor refactoring by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* [youtube] Added piped instance urls by [JordanWeatherby](https://github.com/JordanWeatherby)\n* [youtube] Deprioritize auto-generated thumbnails\n* [youtube] Deprioritize format 22 (often damaged)\n* [youtube] Fix episode metadata extraction\n* [zee5] Fix extractor by [Ashish0804](https://github.com/Ashish0804)\n* [zingmp3, cleanup] Refactor extractors\n\n\n### 2022.04.08\n\n* Use certificates from `certifi` if installed by [coletdjnz](https://github.com/coletdjnz)\n* Treat multiple `--match-filters` as OR\n* File locking improvements:\n    * Do not lock downloading file on Windows\n    * Do not prevent download if locking is unsupported\n    * Do not truncate files before locking by [jakeogh](https://github.com/jakeogh), [pukkandan](https://github.com/pukkandan)\n    * Fix non-blocking non-exclusive lock\n* De-prioritize automatic-subtitles when no `--sub-lang` is given\n* Exit after `--dump-user-agent`\n* Fallback to video-only format when selecting by extension\n* Fix `--abort-on-error` for subtitles\n* Fix `--no-overwrite` for playlist infojson\n* Fix `--print` with `--ignore-no-formats` when url is `None` by [flashdagger](https://github.com/flashdagger)\n* Fix `--sleep-interval`\n* Fix `--throttled-rate`\n* Fix `autonumber`\n* Fix case of `http_headers`\n* Fix filepath sanitization in `--print-to-file`\n* Handle float in `--wait-for-video`\n* Ignore `mhtml` formats from `-f mergeall`\n* Ignore format-specific fields in initial pass of `--match-filter`\n* Protect stdout from unexpected progress and console-title\n* Remove `Accept-Encoding` header from `std_headers` by [coletdjnz](https://github.com/coletdjnz)\n* Remove incorrect warning for `--dateafter`\n* Show warning when all media formats have DRM\n* [downloader] Fix invocation of `HttpieFD`\n* [http] Fix #3215\n* [http] Reject broken range before request by [Lesmiscore](https://github.com/Lesmiscore), [Jules-A](https://github.com/Jules-A), [pukkandan](https://github.com/pukkandan)\n* [fragment] Read downloaded fragments only when needed by [Lesmiscore](https://github.com/Lesmiscore)\n* [http] Retry on more errors by [coletdjnz](https://github.com/coletdjnz)\n* [mhtml] Fix fragments with absolute urls by [coletdjnz](https://github.com/coletdjnz)\n* [extractor] Add `_perform_login` function\n* [extractor] Allow control characters inside json\n* [extractor] Support merging subtitles with data by [coletdjnz](https://github.com/coletdjnz)\n* [generic] Extract subtitles from video.js by [Lesmiscore](https://github.com/Lesmiscore)\n* [ffmpeg] Cache version data\n* [FFmpegConcat] Ensure final directory exists\n* [FfmpegMetadata] Write id3v1 tags\n* [FFmpegVideoConvertor] Add more formats to `--remux-video`\n* [FFmpegVideoConvertor] Ensure all streams are copied\n* [MetadataParser] Validate outtmpl early\n* [outtmpl] Fix replacement/default when used with alternate\n* [outtmpl] Limit changes during sanitization\n* [phantomjs] Fix bug\n* [test] Add `test_locked_file`\n* [utils] `format_decimal_suffix`: Fix for very large numbers by [s0u1h](https://github.com/s0u1h)\n* [utils] `traverse_obj`: Allow filtering by value\n* [utils] Add `filter_dict`, `get_first`, `try_call`\n* [utils] ExtractorError: Fix for older Python versions\n* [utils] WebSocketsWrapper: Allow omitting `__enter__` invocation by [Lesmiscore](https://github.com/Lesmiscore)\n* [docs] Add an `.editorconfig` file by [fstirlitz](https://github.com/fstirlitz)\n* [docs] Clarify the exact `BSD` license of dependencies by [MrRawes](https://github.com/MrRawes)\n* [docs] Minor improvements by [pukkandan](https://github.com/pukkandan), [cffswb](https://github.com/cffswb), [danielyli](https://github.com/danielyli)\n* [docs] Remove readthedocs\n* [build] Add `requirements.txt` to pip distributions\n* [cleanup, postprocessor] Create `_download_json`\n* [cleanup, vimeo] Fix tests\n* [cleanup] Misc fixes and minor cleanup\n* [cleanup] Use `_html_extract_title`\n* [AfreecaTV] Add `AfreecaTVUserIE` by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [arte] Add `format_note` to m3u8 formats\n* [azmedien] Add TVO Online to supported hosts by [1-Byte](https://github.com/1-Byte)\n* [BanBye] Add extractor by [mehq](https://github.com/mehq)\n* [bilibili] Fix extraction of title with quotes by [dzek69](https://github.com/dzek69)\n* [Craftsy] Add extractor by [Bricio](https://github.com/Bricio)\n* [Cybrary] Add extractor by [aaearon](https://github.com/aaearon)\n* [Huya] Add extractor by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [ITProTV] Add extractor by [aaearon](https://github.com/aaearon)\n* [Jable] Add extractors by [mehq](https://github.com/mehq)\n* [LastFM] Add extractors by [mehq](https://github.com/mehq)\n* [Moviepilot] Add extractor by [panatexxa](https://github.com/panatexxa)\n* [panopto] Add extractors by [coletdjnz](https://github.com/coletdjnz), [kmark](https://github.com/kmark)\n* [PokemonSoundLibrary] Add extractor by [Lesmiscore](https://github.com/Lesmiscore)\n* [WasdTV] Add extractor by [un-def](https://github.com/un-def), [hatienl0i261299](https://github.com/hatienl0i261299)\n* [adobepass] Fix Suddenlink MSO by [CplPwnies](https://github.com/CplPwnies)\n* [afreecatv] Match new vod url by [wlritchi](https://github.com/wlritchi)\n* [AZMedien] Support `tv.telezueri.ch` by [goggle](https://github.com/goggle)\n* [BiliIntl] Support user-generated videos by [wlritchi](https://github.com/wlritchi)\n* [BRMediathek] Fix VALID_URL\n* [crunchyroll:playlist] Implement beta API by [tejing1](https://github.com/tejing1)\n* [crunchyroll] Fix inheritance\n* [daftsex] Fix extractor by [Soebb](https://github.com/Soebb)\n* [dailymotion] Support `geo.dailymotion.com` by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [ellentube] Extract subtitles from manifest\n* [elonet] Rewrite extractor by [Fam0r](https://github.com/Fam0r), [pukkandan](https://github.com/pukkandan)\n* [fptplay] Fix metadata extraction by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [FranceCulture] Support playlists by [bohwaz](https://github.com/bohwaz)\n* [go, viu] Extract subtitles from the m3u8 manifest by [fstirlitz](https://github.com/fstirlitz)\n* [Imdb] Improve extractor by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [MangoTV] Improve extractor by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [Nebula] Fix bug in 52efa4b31200119adaa8acf33e50b84fcb6948f0\n* [niconico] Fix extraction of thumbnails and uploader (#3266)\n* [niconico] Rewrite NiconicoIE by [Lesmiscore](https://github.com/Lesmiscore)\n* [nitter] Minor fixes and update instance list by [foghawk](https://github.com/foghawk)\n* [NRK] Extract timestamp by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [openrec] Download archived livestreams by [Lesmiscore](https://github.com/Lesmiscore)\n* [openrec] Refactor extractors by [Lesmiscore](https://github.com/Lesmiscore)\n* [panopto] Improve subtitle extraction and support slides by [coletdjnz](https://github.com/coletdjnz)\n* [ParamountPlus, CBS] Change VALID_URL by [Sipherdrakon](https://github.com/Sipherdrakon)\n* [ParamountPlusSeries] Support multiple pages by [dodrian](https://github.com/dodrian)\n* [Piapro] Extract description with break lines by [Lesmiscore](https://github.com/Lesmiscore)\n* [rai] Fix extraction of http formas by [nixxo](https://github.com/nixxo)\n* [rumble] unescape title\n* [RUTV] Fix format sorting by [Lesmiscore](https://github.com/Lesmiscore)\n* [ruutu] Detect embeds by [tpikonen](https://github.com/tpikonen)\n* [tenplay] Improve extractor by [aarubui](https://github.com/aarubui)\n* [TikTok] Fix URLs with user id by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [TikTokVM] Fix redirect to user URL\n* [TVer] Fix extractor by [Lesmiscore](https://github.com/Lesmiscore)\n* [TVer] Support landing page by [vvto33](https://github.com/vvto33)\n* [twitcasting] Don't return multi_video for archive with single hls manifest by [Lesmiscore](https://github.com/Lesmiscore)\n* [veo] Fix `_VALID_URL`\n* [Veo] Fix extractor by [i6t](https://github.com/i6t)\n* [viki] Don't attempt to modify URLs with signature by [nyuszika7h](https://github.com/nyuszika7h)\n* [viu] Fix bypass for preview by [zackmark29](https://github.com/zackmark29)\n* [viu] Fixed extractor by [zackmark29](https://github.com/zackmark29), [pukkandan](https://github.com/pukkandan)\n* [web.archive:youtube] Make CDX API requests non-fatal by [coletdjnz](https://github.com/coletdjnz)\n* [wget] Fix proxy by [kikuyan](https://github.com/kikuyan), [coletdjnz](https://github.com/coletdjnz)\n* [xnxx] Add `xnxx3.com` by [rozari0](https://github.com/rozari0)\n* [youtube] **Add new age-gate bypass** by [zerodytrash](https://github.com/zerodytrash), [pukkandan](https://github.com/pukkandan)\n* [youtube] Add extractor-arg to skip auto-translated subs\n* [youtube] Avoid false positives when detecting damaged formats\n* [youtube] Detect DRM better by [shirt](https://github.com/shirt-dev)\n* [youtube] Fix auto-translated automatic captions\n* [youtube] Fix pagination of `membership` tab\n* [youtube] Fix uploader for collaborative playlists by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Improve video upload date handling by [coletdjnz](https://github.com/coletdjnz)\n* [youtube:api] Prefer minified JSON response by [coletdjnz](https://github.com/coletdjnz)\n* [youtube:search] Support hashtag entries by [coletdjnz](https://github.com/coletdjnz)\n* [youtube:tab] Fix duration extraction for shorts by [coletdjnz](https://github.com/coletdjnz)\n* [youtube:tab] Minor improvements\n* [youtube:tab] Return shorts url if video is a short by [coletdjnz](https://github.com/coletdjnz)\n* [Zattoo] Fix extractors by [goggle](https://github.com/goggle)\n* [Zingmp3] Fix signature by [hatienl0i261299](https://github.com/hatienl0i261299)\n\n\n### 2022.03.08.1\n\n* [cleanup] Refactor `__init__.py`\n* [build] Fix bug\n\n### 2022.03.08\n\n* Merge youtube-dl: Upto [commit/6508688](https://github.com/ytdl-org/youtube-dl/commit/6508688e88c83bb811653083db9351702cd39a6a) (except NDR)\n* Add regex operator and quoting to format filters by [lukasfink1](https://github.com/lukasfink1)\n* Add brotli content-encoding support by [coletdjnz](https://github.com/coletdjnz)\n* Add pre-processor stage `after_filter`\n* Better error message when no `--live-from-start` format\n* Create necessary directories for `--print-to-file`\n* Fill more fields for playlists by [Lesmiscore](https://github.com/Lesmiscore)\n* Fix `-all` for `--sub-langs`\n* Fix doubling of `video_id` in `ExtractorError`\n* Fix for when stdout/stderr encoding is `None`\n* Handle negative duration from extractor\n* Implement `--add-header` without modifying `std_headers`\n* Obey `--abort-on-error` for \"ffmpeg not installed\"\n* Set `webpage_url_...` from `webpage_url` and not input URL\n* Tolerate failure to `--write-link` due to unknown URL\n* [aria2c] Add `--http-accept-gzip=true`\n* [build] Update pyinstaller to 4.10 by [shirt](https://github.com/shirt-dev)\n* [cookies] Update MacOS12 `Cookies.binarycookies` location by [mdpauley](https://github.com/mdpauley)\n* [devscripts] Improve `prepare_manpage`\n* [downloader] Do not use aria2c for non-native `m3u8`\n* [downloader] Obey `--file-access-retries` when deleting/renaming by [ehoogeveen-medweb](https://github.com/ehoogeveen-medweb)\n* [extractor] Allow `http_headers` to be specified for `thumbnails`\n* [extractor] Extract subtitles from manifests for vimeo, globo, kaltura, svt by [fstirlitz](https://github.com/fstirlitz)\n* [extractor] Fix for manifests without period duration by [dirkf](https://github.com/dirkf), [pukkandan](https://github.com/pukkandan)\n* [extractor] Support `--mark-watched` without `_NETRC_MACHINE` by [coletdjnz](https://github.com/coletdjnz)\n* [FFmpegConcat] Abort on `--simulate`\n* [FormatSort] Consider `acodec`=`ogg` as `vorbis`\n* [fragment] Fix bugs around resuming with Range by [Lesmiscore](https://github.com/Lesmiscore)\n* [fragment] Improve `--live-from-start` for YouTube livestreams by [Lesmiscore](https://github.com/Lesmiscore)\n* [generic] Pass referer to extracted formats\n* [generic] Set rss `guid` as video id by [Bricio](https://github.com/Bricio)\n* [options] Better ambiguous option resolution\n* [options] Rename `--clean-infojson` to `--clean-info-json`\n* [SponsorBlock] Fixes for highlight and \"full video labels\" by [nihil-admirari](https://github.com/nihil-admirari)\n* [Sponsorblock] minor fixes by [nihil-admirari](https://github.com/nihil-admirari)\n* [utils] Better traceback for `ExtractorError`\n* [utils] Fix file locking for AOSP by [jakeogh](https://github.com/jakeogh)\n* [utils] Improve file locking\n* [utils] OnDemandPagedList: Do not download pages after error\n* [utils] render_table: Fix character calculation for removing extra gap by [Lesmiscore](https://github.com/Lesmiscore)\n* [utils] Use `locked_file` for `sanitize_open` by [jakeogh](https://github.com/jakeogh)\n* [utils] Validate `DateRange` input\n* [utils] WebSockets wrapper for non-async functions by [Lesmiscore](https://github.com/Lesmiscore)\n* [cleanup] Don't pass protocol to `_extract_m3u8_formats` for live videos\n* [cleanup] Remove extractors for some dead websites by [marieell](https://github.com/marieell)\n* [cleanup, docs] Misc cleanup\n* [AbemaTV] Add extractors by [Lesmiscore](https://github.com/Lesmiscore)\n* [adobepass] Add Suddenlink MSO by [CplPwnies](https://github.com/CplPwnies)\n* [ant1newsgr] Add extractor by [zmousm](https://github.com/zmousm)\n* [bigo] Add extractor by [Lesmiscore](https://github.com/Lesmiscore)\n* [Caltrans] Add extractor by [Bricio](https://github.com/Bricio)\n* [daystar] Add extractor by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [fc2:live] Add extractor by [Lesmiscore](https://github.com/Lesmiscore)\n* [fptplay] Add extractor by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [murrtube] Add extractor by [cyberfox1691](https://github.com/cyberfox1691)\n* [nfb] Add extractor by [ofkz](https://github.com/ofkz)\n* [niconico] Add playlist extractors and refactor by [Lesmiscore](https://github.com/Lesmiscore)\n* [peekvids] Add extractor by [schn0sch](https://github.com/schn0sch)\n* [piapro] Add extractor by [pycabbage](https://github.com/pycabbage), [Lesmiscore](https://github.com/Lesmiscore)\n* [rokfin] Add extractor by [P-reducible](https://github.com/P-reducible), [pukkandan](https://github.com/pukkandan)\n* [rokfin] Add stack and channel extractors by [P-reducible](https://github.com/P-reducible), [pukkandan](https://github.com/pukkandan)\n* [ruv.is] Add extractor by [iw0nderhow](https://github.com/iw0nderhow)\n* [telegram] Add extractor by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [VideocampusSachsen] Add extractors by [FestplattenSchnitzel](https://github.com/FestplattenSchnitzel)\n* [xinpianchang] Add extractor by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [abc] Support 1080p by [Ronnnny](https://github.com/Ronnnny)\n* [afreecatv] Support password-protected livestreams by [wlritchi](https://github.com/wlritchi)\n* [ard] Fix valid URL\n* [ATVAt] Detect geo-restriction by [marieell](https://github.com/marieell)\n* [bandcamp] Detect acodec\n* [bandcamp] Fix user URLs by [lyz-code](https://github.com/lyz-code)\n* [bbc] Fix extraction of news articles by [ajj8](https://github.com/ajj8)\n* [beeg] Fix extractor by [Bricio](https://github.com/Bricio)\n* [bigo] Fix extractor to not to use `form_params`\n* [Bilibili] Pass referer for all formats by [blackgear](https://github.com/blackgear)\n* [Biqle] Fix extractor by [Bricio](https://github.com/Bricio)\n* [ccma] Fix timestamp parsing by [nyuszika7h](https://github.com/nyuszika7h)\n* [crunchyroll] Better error reporting on login failure by [tejing1](https://github.com/tejing1)\n* [cspan] Support of C-Span congress videos by [Grabien](https://github.com/Grabien)\n* [dropbox] fix regex by [zenerdi0de](https://github.com/zenerdi0de)\n* [fc2] Fix extraction by [Lesmiscore](https://github.com/Lesmiscore)\n* [fujitv] Extract resolution for free sources by [YuenSzeHong](https://github.com/YuenSzeHong)\n* [Gettr] Add `GettrStreamingIE` by [i6t](https://github.com/i6t)\n* [Gettr] Fix formats order by [i6t](https://github.com/i6t)\n* [Gettr] Improve extractor by [i6t](https://github.com/i6t)\n* [globo] Expand valid URL by [Bricio](https://github.com/Bricio)\n* [lbry] Fix `--ignore-no-formats-error`\n* [manyvids] Extract `uploader` by [regarten](https://github.com/regarten)\n* [mildom] Fix linter\n* [mildom] Rework extractors by [Lesmiscore](https://github.com/Lesmiscore)\n* [mirrativ] Cleanup extractor code by [Lesmiscore](https://github.com/Lesmiscore)\n* [nhk] Add support for NHK for School by [Lesmiscore](https://github.com/Lesmiscore)\n* [niconico:tag] Add support for searching tags\n* [nrk] Add fallback API\n* [peekvids] Use JSON-LD by [schn0sch](https://github.com/schn0sch)\n* [peertube] Add media.fsfe.org by [mxmehl](https://github.com/mxmehl)\n* [rtvs] Fix extractor by [Bricio](https://github.com/Bricio)\n* [spiegel] Fix `_VALID_URL`\n* [ThumbnailsConvertor] Support `webp`\n* [tiktok] Fix `vm.tiktok`/`vt.tiktok` URLs\n* [tubitv] Fix/improve TV series extraction by [bbepis](https://github.com/bbepis)\n* [tumblr] Fix extractor by [foghawk](https://github.com/foghawk)\n* [twitcasting] Add fallback for finding running live by [Lesmiscore](https://github.com/Lesmiscore)\n* [TwitCasting] Check for password protection by [Lesmiscore](https://github.com/Lesmiscore)\n* [twitcasting] Fix extraction by [Lesmiscore](https://github.com/Lesmiscore)\n* [twitch] Fix field name of `view_count`\n* [twitter] Fix for private videos by [iphoting](https://github.com/iphoting)\n* [washingtonpost] Fix extractor by [Bricio](https://github.com/Bricio)\n* [youtube:tab] Add `approximate_date` extractor-arg\n* [youtube:tab] Follow redirect to regional channel  by [coletdjnz](https://github.com/coletdjnz)\n* [youtube:tab] Reject webpage data if redirected to home page\n* [youtube] De-prioritize potentially damaged formats\n* [youtube] Differentiate descriptive audio by language code\n* [youtube] Ensure subtitle urls are absolute by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Escape possible `$` in `_extract_n_function_name` regex by [Lesmiscore](https://github.com/Lesmiscore)\n* [youtube] Fix automatic captions\n* [youtube] Fix n-sig extraction for phone player JS by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [youtube] Further de-prioritize 3gp format\n* [youtube] Label original auto-subs\n* [youtube] Prefer UTC upload date for videos by [coletdjnz](https://github.com/coletdjnz)\n* [zaq1] Remove dead extractor by [marieell](https://github.com/marieell)\n* [zee5] Support web-series by [Aniruddh-J](https://github.com/Aniruddh-J)\n* [zingmp3] Fix extractor by [hatienl0i261299](https://github.com/hatienl0i261299)\n* [zoom] Add support for screen cast by [Mipsters](https://github.com/Mipsters)\n\n\n### 2022.02.04\n\n* [youtube:search] Fix extractor by [coletdjnz](https://github.com/coletdjnz)\n* [youtube:search] Add tests\n* [twitcasting] Enforce UTF-8 for POST payload by [Lesmiscore](https://github.com/Lesmiscore)\n* [mediaset] Fix extractor by [nixxo](https://github.com/nixxo)\n* [websocket] Make syntax error in `websockets` module non-fatal\n\n### 2022.02.03\n\n* Merge youtube-dl: Upto [commit/78ce962](https://github.com/ytdl-org/youtube-dl/commit/78ce962f4fe020994c216dd2671546fbe58a5c67)\n* Add option `--print-to-file`\n* Make nested --config-locations relative to parent file\n* Ensure `_type` is present in `info.json`\n* Fix `--compat-options list-formats`\n* Fix/improve `InAdvancePagedList`\n* [downloader/ffmpeg] Handle unknown formats better\n* [outtmpl] Handle `-o \"\"` better\n* [outtmpl] Handle hard-coded file extension better\n* [extractor] Add convenience function `_yes_playlist`\n* [extractor] Allow non-fatal `title` extraction\n* [extractor] Extract video inside `Article` json_ld\n* [generic] Allow further processing of json_ld URL\n* [cookies] Fix keyring selection for unsupported desktops\n* [utils] Strip double spaces in `clean_html` by [dirkf](https://github.com/dirkf)\n* [aes] Add `unpad_pkcs7`\n* [test] Fix `test_youtube_playlist_noplaylist`\n* [docs,cleanup] Misc cleanup\n* [dplay] Add extractors for site changes by [Sipherdrakon](https://github.com/Sipherdrakon)\n* [ertgr] Add  extractors by [zmousm](https://github.com/zmousm), [dirkf](https://github.com/dirkf)\n* [Musicdex] Add extractors by [Ashish0804](https://github.com/Ashish0804)\n* [YandexVideoPreview] Add extractor by [KiberInfinity](https://github.com/KiberInfinity)\n* [youtube] Add extractor `YoutubeMusicSearchURLIE`\n* [archive.org] Ignore unnecessary files\n* [Bilibili] Add 8k support by [u-spec-png](https://github.com/u-spec-png)\n* [bilibili] Fix extractor, make anthology title non-fatal\n* [CAM4] Add thumbnail extraction by [alerikaisattera](https://github.com/alerikaisattera)\n* [cctv] De-prioritize sample format\n* [crunchyroll:beta] Add cookies support by [tejing1](https://github.com/tejing1)\n* [crunchyroll] Fix login by [tejing1](https://github.com/tejing1)\n* [doodstream] Fix extractor\n* [fc2] Fix extraction by [Lesmiscore](https://github.com/Lesmiscore)\n* [FFmpegConcat] Abort on --skip-download and download errors\n* [Fujitv] Extract metadata and support premium by [YuenSzeHong](https://github.com/YuenSzeHong)\n* [globo] Fix extractor by [Bricio](https://github.com/Bricio)\n* [glomex] Simplify embed detection\n* [GoogleSearch] Fix extractor\n* [Instagram] Fix extraction when logged in by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [iq.com] Add VIP support by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [mildom] Fix extractor by [lazypete365](https://github.com/lazypete365)\n* [MySpass] Fix video url processing by [trassshhub](https://github.com/trassshhub)\n* [Odnoklassniki] Improve embedded players extraction by [KiberInfinity](https://github.com/KiberInfinity)\n* [orf:tvthek] Lazy playlist extraction and obey --no-playlist\n* [Pladform] Fix redirection to external player by [KiberInfinity](https://github.com/KiberInfinity)\n* [ThisOldHouse] Improve Premium URL check by [Ashish0804](https://github.com/Ashish0804)\n* [TikTok] Iterate through app versions by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [tumblr] Fix 403 errors and handle vimeo embeds by [foghawk](https://github.com/foghawk)\n* [viki] Fix \"Bad request\" for manifest by [nyuszika7h](https://github.com/nyuszika7h)\n* [Vimm] add recording extractor by [alerikaisattera](https://github.com/alerikaisattera)\n* [web.archive:youtube] Add `ytarchive:` prefix and misc cleanup\n* [youtube:api] Do not use seek when reading HTTPError response by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Fix n-sig for player e06dea74\n* [youtube, cleanup] Misc fixes and cleanup\n\n\n### 2022.01.21\n\n* Add option `--concat-playlist` to **concat videos in a playlist**\n* Allow **multiple and nested configuration files**\n* Add more post-processing stages (`after_video`, `playlist`)\n* Allow `--exec` to be run at any post-processing stage (Deprecates `--exec-before-download`)\n* Allow `--print` to be run at any post-processing stage\n* Allow listing formats, thumbnails, subtitles using `--print` by [pukkandan](https://github.com/pukkandan), [Zirro](https://github.com/Zirro)\n* Add fields `video_autonumber`, `modified_date`, `modified_timestamp`, `playlist_count`, `channel_follower_count`\n* Add key `requested_downloads` in the root `info_dict`\n* Write `download_archive` only after all formats are downloaded\n* [FfmpegMetadata] Allow setting metadata of individual streams using `meta<n>_` prefix\n* Add option `--legacy-server-connect` by [xtkoba](https://github.com/xtkoba)\n* Allow escaped `,` in `--extractor-args`\n* Allow unicode characters in `info.json`\n* Check for existing thumbnail/subtitle in final directory\n* Don't treat empty containers as `None` in `sanitize_info`\n* Fix `-s --ignore-no-formats --force-write-archive`\n* Fix live title for multiple formats\n* List playlist thumbnails in `--list-thumbnails`\n* Raise error if subtitle download fails\n* [cookies] Fix bug when keyring is unspecified\n* [ffmpeg] Ignore unknown streams, standardize use of `-map 0`\n* [outtmpl] Alternate form for `D` and fix suffix's case\n* [utils] Add `Sec-Fetch-Mode` to `std_headers`\n* [utils] Fix `format_bytes` output for Bytes by [pukkandan](https://github.com/pukkandan), [mdawar](https://github.com/mdawar)\n* [utils] Handle `ss:xxx` in `parse_duration`\n* [utils] Improve parsing for nested HTML elements by [zmousm](https://github.com/zmousm), [pukkandan](https://github.com/pukkandan)\n* [utils] Use key `None` in `traverse_obj` to return as-is\n* [extractor] Detect more subtitle codecs in MPD manifests by [fstirlitz](https://github.com/fstirlitz)\n* [extractor] Extract chapters from JSON-LD by [iw0nderhow](https://github.com/iw0nderhow), [pukkandan](https://github.com/pukkandan)\n* [extractor] Extract thumbnails from JSON-LD by [nixxo](https://github.com/nixxo)\n* [extractor] Improve `url_result` and related\n* [generic] Improve KVS player extraction by [trassshhub](https://github.com/trassshhub)\n* [build] Reduce dependency on third party workflows\n* [extractor,cleanup] Use `_search_nextjs_data`, `format_field`\n* [cleanup] Minor fixes and cleanup\n* [docs] Improvements\n* [test] Fix TestVerboseOutput\n* [afreecatv] Add livestreams extractor by [wlritchi](https://github.com/wlritchi)\n* [callin] Add extractor by [foghawk](https://github.com/foghawk)\n* [CrowdBunker] Add extractors by [Ashish0804](https://github.com/Ashish0804)\n* [daftsex] Add extractors by [k3ns1n](https://github.com/k3ns1n)\n* [digitalconcerthall] Add extractor by [teridon](https://github.com/teridon)\n* [Drooble] Add extractor by [u-spec-png](https://github.com/u-spec-png)\n* [EuropeanTour] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [iq.com] Add extractors by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [KelbyOne] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [LnkIE] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [MainStreaming] Add extractor by [coletdjnz](https://github.com/coletdjnz)\n* [megatvcom] Add extractors by [zmousm](https://github.com/zmousm)\n* [Newsy] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [noodlemagazine] Add extractor by [trassshhub](https://github.com/trassshhub)\n* [PokerGo] Add extractors by [Ashish0804](https://github.com/Ashish0804)\n* [Pornez] Add extractor by [mozlima](https://github.com/mozlima)\n* [PRX] Add Extractors by [coletdjnz](https://github.com/coletdjnz)\n* [RTNews] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [Rule34video] Add extractor by [trassshhub](https://github.com/trassshhub)\n* [tvopengr] Add extractors by [zmousm](https://github.com/zmousm)\n* [Vimm] Add extractor by [alerikaisattera](https://github.com/alerikaisattera)\n* [glomex] Add extractors by [zmousm](https://github.com/zmousm)\n* [instagram] Add story/highlight extractor by [u-spec-png](https://github.com/u-spec-png)\n* [openrec] Add movie extractor by [Lesmiscore](https://github.com/Lesmiscore)\n* [rai] Add Raiplaysound extractors by [nixxo](https://github.com/nixxo), [pukkandan](https://github.com/pukkandan)\n* [aparat] Fix extractor\n* [ard] Extract subtitles by [fstirlitz](https://github.com/fstirlitz)\n* [BiliIntl] Add login by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [CeskaTelevize] Use `http` for manifests\n* [CTVNewsIE] Add fallback for video search by [Ashish0804](https://github.com/Ashish0804)\n* [dplay] Migrate DiscoveryPlusItaly to DiscoveryPlus by [timendum](https://github.com/timendum)\n* [dplay] Re-structure DiscoveryPlus extractors\n* [Dropbox] Support password protected files and more formats by [zenerdi0de](https://github.com/zenerdi0de)\n* [facebook] Fix extraction from groups\n* [facebook] Improve title and uploader extraction\n* [facebook] Parse dash manifests\n* [fox] Extract m3u8 from preview by [ischmidt20](https://github.com/ischmidt20)\n* [funk] Support origin URLs\n* [gfycat] Fix `uploader`\n* [gfycat] Support embeds by [coletdjnz](https://github.com/coletdjnz)\n* [hotstar] Add extractor args to ignore tags by [Ashish0804](https://github.com/Ashish0804)\n* [hrfernsehen] Fix ardloader extraction by [CreaValix](https://github.com/CreaValix)\n* [instagram] Fix username extraction for stories and highlights by [nyuszika7h](https://github.com/nyuszika7h)\n* [kakao] Detect geo-restriction\n* [line] Remove `tv.line.me` by [sian1468](https://github.com/sian1468)\n* [mixch] Add `MixchArchiveIE` by [Lesmiscore](https://github.com/Lesmiscore)\n* [mixcloud] Detect restrictions by [llacb47](https://github.com/llacb47)\n* [NBCSports] Fix extraction of platform URLs by [ischmidt20](https://github.com/ischmidt20)\n* [Nexx] Extract more metadata by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [Nexx] Support 3q CDN by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [pbs] de-prioritize AD formats\n* [PornHub,YouTube] Refresh onion addresses by [unit193](https://github.com/unit193)\n* [RedBullTV] Parse subtitles from manifest by [Ashish0804](https://github.com/Ashish0804)\n* [streamcz] Fix extractor by [arkamar](https://github.com/arkamar), [pukkandan](https://github.com/pukkandan)\n* [Ted] Rewrite extractor by [pukkandan](https://github.com/pukkandan), [trassshhub](https://github.com/trassshhub)\n* [Theta] Fix valid URL by [alerikaisattera](https://github.com/alerikaisattera)\n* [ThisOldHouseIE] Add support for premium videos by [Ashish0804](https://github.com/Ashish0804)\n* [TikTok] Fix extraction for sigi-based webpages, add API fallback by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [TikTok] Pass cookies to formats, and misc fixes by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [TikTok] Extract captions, user thumbnail by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [TikTok] Change app version by [MinePlayersPE](https://github.com/MinePlayersPE), [llacb47](https://github.com/llacb47)\n* [TVer] Extract message for unaired live by [Lesmiscore](https://github.com/Lesmiscore)\n* [twitcasting] Refactor extractor by [Lesmiscore](https://github.com/Lesmiscore)\n* [twitter] Fix video in quoted tweets\n* [veoh] Improve extractor by [foghawk](https://github.com/foghawk)\n* [vk] Capture `clip` URLs\n* [vk] Fix VKUserVideosIE by [Ashish0804](https://github.com/Ashish0804)\n* [vk] Improve `_VALID_URL` by [k3ns1n](https://github.com/k3ns1n)\n* [VrtNU] Handle empty title by [pgaig](https://github.com/pgaig)\n* [XVideos] Check HLS formats by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [yahoo:gyao] Improved playlist handling by [hyano](https://github.com/hyano)\n* [youtube:tab] Extract more playlist metadata by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* [youtube:tab] Raise error on tab redirect by [krichbanana](https://github.com/krichbanana), [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Update Innertube clients by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Detect live-stream embeds\n* [youtube] Do not return `upload_date` for playlists\n* [youtube] Extract channel subscriber count by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Make invalid storyboard URL non-fatal\n* [youtube] Enforce UTC, update innertube clients and tests by [coletdjnz](https://github.com/coletdjnz)\n* [zdf] Add chapter extraction by [iw0nderhow](https://github.com/iw0nderhow)\n* [zee5] Add geo-bypass\n\n\n### 2021.12.27\n\n* Avoid recursion error when re-extracting info\n* [ffmpeg] Fix position of `--ppa`\n* [aria2c] Don't show progress when `--no-progress`\n* [cookies] Support other keyrings by [mbway](https://github.com/mbway)\n* [EmbedThumbnail] Prefer AtomicParsley over ffmpeg if available\n* [generic] Fix HTTP KVS Player by [git-anony-mouse](https://github.com/git-anony-mouse)\n* [ThumbnailsConvertor] Fix for when there are no thumbnails\n* [docs] Add examples for using `TYPES:` in `-P`/`-o`\n* [PixivSketch] Add extractors by [nao20010128nao](https://github.com/nao20010128nao)\n* [tiktok] Add music, sticker and tag IEs by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [BiliIntl] Fix extractor by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [CBC] Fix URL regex\n* [tiktok] Fix `extractor_key` used in archive\n* [youtube] **End `live-from-start` properly when stream ends with 403**\n* [Zee5] Fix VALID_URL for tv-shows by [Ashish0804](https://github.com/Ashish0804)\n\n### 2021.12.25\n\n* [dash,youtube] **Download live from start to end** by [nao20010128nao](https://github.com/nao20010128nao), [pukkandan](https://github.com/pukkandan)\n    * Add option `--live-from-start` to enable downloading live videos from start\n    * Add key `is_from_start` in formats to identify formats (of live videos) that downloads from start\n    * [dash] Create protocol `http_dash_segments_generator` that allows a function to be passed instead of fragments\n    * [fragment] Allow multiple live dash formats to download simultaneously\n    * [youtube] Implement fragment re-fetching for the live dash formats\n    * [youtube] Re-extract dash manifest every 5 hours (manifest expires in 6hrs)\n    * [postprocessor/ffmpeg] Add `FFmpegFixupDuplicateMoovPP` to fixup duplicated moov atoms\n    * Known issues:\n        * Ctrl+C doesn't work on Windows when downloading multiple formats\n        * If video becomes private, download hangs\n* [SponsorBlock] Add `Filler` and `Highlight` categories by [nihil-admirari](https://github.com/nihil-admirari), [pukkandan](https://github.com/pukkandan)\n    * Change `--sponsorblock-cut all` to `--sponsorblock-cut default` if you do not want filler sections to be removed\n* Add field `webpage_url_domain`\n* Add interactive format selection with `-f -`\n* Add option `--file-access-retries` by [ehoogeveen-medweb](https://github.com/ehoogeveen-medweb)\n* [outtmpl] Add alternate forms `S`, `D` and improve `id` detection\n* [outtmpl] Add operator `&` for replacement text by [PilzAdam](https://github.com/PilzAdam)\n* [EmbedSubtitle] Disable duration check temporarily\n* [extractor] Add `_search_nuxt_data` by [nao20010128nao](https://github.com/nao20010128nao)\n* [extractor] Ignore errors in comment extraction when `-i` is given\n* [extractor] Standardize `_live_title`\n* [FormatSort] Prevent incorrect deprecation warning\n* [generic] Extract m3u8 formats from JSON-LD\n* [postprocessor/ffmpeg] Always add `faststart`\n* [utils] Fix parsing `YYYYMMDD` dates in Nov/Dec by [wlritchi](https://github.com/wlritchi)\n* [utils] Improve `parse_count`\n* [utils] Update `std_headers` by [kikuyan](https://github.com/kikuyan), [fstirlitz](https://github.com/fstirlitz)\n* [lazy_extractors] Fix for search IEs\n* [extractor] Support default implicit graph in JSON-LD by [zmousm](https://github.com/zmousm)\n* Allow `--no-write-thumbnail` to override `--write-all-thumbnail`\n* Fix `--throttled-rate`\n* Fix control characters being printed to `--console-title`\n* Fix PostProcessor hooks not registered for some PPs\n* Pre-process when using `--flat-playlist`\n* Remove known invalid thumbnails from `info_dict`\n* Add warning when using `-f best`\n* Use `parse_duration` for `--wait-for-video` and some minor fix\n* [test/download] Add more fields\n* [test/download] Ignore field `webpage_url_domain` by [std-move](https://github.com/std-move)\n* [compat] Suppress errors in enabling VT mode\n* [docs] Improve manpage format by [iw0nderhow](https://github.com/iw0nderhow), [pukkandan](https://github.com/pukkandan)\n* [docs,cleanup] Minor fixes and cleanup\n* [cleanup] Fix some typos by [unit193](https://github.com/unit193)\n* [ABC:iview] Add show extractor by [pabs3](https://github.com/pabs3)\n* [dropout] Add extractor by [TwoThousandHedgehogs](https://github.com/TwoThousandHedgehogs), [pukkandan](https://github.com/pukkandan)\n* [GameJolt] Add extractors by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [gofile] Add extractor by [Jertzukka](https://github.com/Jertzukka), [Ashish0804](https://github.com/Ashish0804)\n* [hse] Add extractors by [cypheron](https://github.com/cypheron), [pukkandan](https://github.com/pukkandan)\n* [NateTV] Add NateIE and NateProgramIE by [Ashish0804](https://github.com/Ashish0804), [Hyeeji](https://github.com/Hyeeji)\n* [OpenCast] Add extractors by [bwildenhain](https://github.com/bwildenhain), [C0D3D3V](https://github.com/C0D3D3V)\n* [rtve] Add `RTVEAudioIE` by [kebianizao](https://github.com/kebianizao)\n* [Rutube] Add RutubeChannelIE by [Ashish0804](https://github.com/Ashish0804)\n* [skeb] Add extractor by [nao20010128nao](https://github.com/nao20010128nao)\n* [soundcloud] Add related tracks extractor by [Lapin0t](https://github.com/Lapin0t)\n* [toggo] Add extractor by [nyuszika7h](https://github.com/nyuszika7h)\n* [TrueID] Add extractor by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [audiomack] Update album and song VALID_URL by [abdullah-if](https://github.com/abdullah-if), [dirkf](https://github.com/dirkf)\n* [CBC Gem] Extract 1080p formats by [DavidSkrundz](https://github.com/DavidSkrundz)\n* [ceskatelevize] Fetch iframe from nextJS data by [mkubecek](https://github.com/mkubecek)\n* [crackle] Look for non-DRM formats by [raleeper](https://github.com/raleeper)\n* [dplay] Temporary fix for `discoveryplus.com/it`\n* [DiscoveryPlusShowBaseIE] yield actual video id by [Ashish0804](https://github.com/Ashish0804)\n* [Facebook] Handle redirect URLs\n* [fujitv] Extract 1080p from `tv_android` m3u8 by [YuenSzeHong](https://github.com/YuenSzeHong)\n* [gronkh] Support new URL pattern by [Sematre](https://github.com/Sematre)\n* [instagram] Expand valid URL by [u-spec-png](https://github.com/u-spec-png)\n* [Instagram] Try bypassing login wall with embed page by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [Jamendo] Fix use of `_VALID_URL_RE` by [jaller94](https://github.com/jaller94)\n* [LBRY] Support livestreams by [Ashish0804](https://github.com/Ashish0804), [pukkandan](https://github.com/pukkandan)\n* [NJPWWorld] Extract formats from m3u8 by [aarubui](https://github.com/aarubui)\n* [NovaEmbed] update player regex by [std-move](https://github.com/std-move)\n* [npr] Make SMIL extraction non-fatal by [r5d](https://github.com/r5d)\n* [ntvcojp] Extract NUXT data by [nao20010128nao](https://github.com/nao20010128nao)\n* [ok.ru] add mobile fallback by [nao20010128nao](https://github.com/nao20010128nao)\n* [olympics] Add uploader and cleanup by [u-spec-png](https://github.com/u-spec-png)\n* [ondemandkorea] Update `jw_config` regex by [julien-hadleyjack](https://github.com/julien-hadleyjack)\n* [PlutoTV] Expand `_VALID_URL`\n* [RaiNews] Fix extractor by [nixxo](https://github.com/nixxo)\n* [RCTIPlusSeries] Lazy extraction and video type selection by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [redtube] Handle formats delivered inside a JSON by [dirkf](https://github.com/dirkf), [nixxo](https://github.com/nixxo)\n* [SonyLiv] Add OTP login support by [Ashish0804](https://github.com/Ashish0804)\n* [Steam] Fix extractor by [u-spec-png](https://github.com/u-spec-png)\n* [TikTok] Pass cookies to mobile API by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [trovo] Fix inheritance of `TrovoChannelBaseIE`\n* [TVer] Extract better thumbnails by [YuenSzeHong](https://github.com/YuenSzeHong)\n* [vimeo] Extract chapters\n* [web.archive:youtube] Improve metadata extraction by [coletdjnz](https://github.com/coletdjnz)\n* [youtube:comments] Add more options for limiting number of comments extracted by [coletdjnz](https://github.com/coletdjnz)\n* [youtube:tab] Extract more metadata from feeds/channels/playlists by [coletdjnz](https://github.com/coletdjnz)\n* [youtube:tab] Extract video thumbnails from playlist by [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* [youtube:tab] Ignore query when redirecting channel to playlist and cleanup of related code\n* [youtube] Fix `ytsearchdate`\n* [zdf] Support videos with different ptmd location by [iw0nderhow](https://github.com/iw0nderhow)\n* [zee5] Support /episodes in URL\n\n\n### 2021.12.01\n\n* **Add option `--wait-for-video` to wait for scheduled streams**\n* Add option `--break-per-input` to apply --break-on... to each input URL\n* Add option `--embed-info-json` to embed info.json in mkv\n* Add compat-option `embed-metadata`\n* Allow using a custom format selector through API\n* [AES] Add ECB mode by [nao20010128nao](https://github.com/nao20010128nao)\n* [build] Fix MacOS Build\n* [build] Save Git HEAD at release alongside version info\n* [build] Use `workflow_dispatch` for release\n* [downloader/ffmpeg] Fix for direct videos inside mpd manifests\n* [downloader] Add colors to download progress\n* [EmbedSubtitles] Slightly relax duration check and related cleanup\n* [ExtractAudio] Fix conversion to `wav` and `vorbis`\n* [ExtractAudio] Support `alac`\n* [extractor] Extract `average_rating` from JSON-LD\n* [FixupM3u8] Fixup MPEG-TS in MP4 container\n* [generic] Support mpd manifests without extension by [shirt](https://github.com/shirt-dev)\n* [hls] Better FairPlay DRM detection by [nyuszika7h](https://github.com/nyuszika7h)\n* [jsinterp] Fix splice to handle float (for youtube js player f1ca6900)\n* [utils] Allow alignment in `render_table` and add tests\n* [utils] Fix `PagedList`\n* [utils] Fix error when copying `LazyList`\n* Clarify video/audio-only formats in -F\n* Ensure directory exists when checking formats\n* Ensure path for link files exists by [Zirro](https://github.com/Zirro)\n* Ensure same config file is not loaded multiple times\n* Fix `postprocessor_hooks`\n* Fix `--break-on-archive` when pre-checking\n* Fix `--check-formats` for `mhtml`\n* Fix `--load-info-json` of playlists with failed entries\n* Fix `--trim-filename` when filename has `.`\n* Fix bug in parsing `--add-header`\n* Fix error in `report_unplayable_conflict` by [shirt](https://github.com/shirt-dev)\n* Fix writing playlist infojson with `--no-clean-infojson`\n* Validate --get-bypass-country\n* [blogger] Add extractor by [pabs3](https://github.com/pabs3)\n* [breitbart] Add extractor by [Grabien](https://github.com/Grabien)\n* [CableAV] Add extractor by [j54vc1bk](https://github.com/j54vc1bk)\n* [CanalAlpha] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [CozyTV] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [CPTwentyFour] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [DiscoveryPlus] Add `DiscoveryPlusItalyShowIE` by [Ashish0804](https://github.com/Ashish0804)\n* [ESPNCricInfo] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [LinkedIn] Add extractor by [u-spec-png](https://github.com/u-spec-png)\n* [mixch] Add extractor by [nao20010128nao](https://github.com/nao20010128nao)\n* [nebula] Add `NebulaCollectionIE` and rewrite extractor by [hheimbuerger](https://github.com/hheimbuerger)\n* [OneFootball] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [peer.tv] Add extractor by [u-spec-png](https://github.com/u-spec-png)\n* [radiozet] Add extractor by [0xA7404A](https://github.com/0xA7404A) (Aurora)\n* [redgifs] Add extractor by [chio0hai](https://github.com/chio0hai)\n* [RedGifs] Add Search and User extractors by [Deer-Spangle](https://github.com/Deer-Spangle)\n* [rtrfm] Add extractor by [pabs3](https://github.com/pabs3)\n* [Streamff] Add extractor by [cntrl-s](https://github.com/cntrl-s)\n* [Stripchat] Add extractor by [zulaport](https://github.com/zulaport)\n* [Aljazeera] Fix extractor by [u-spec-png](https://github.com/u-spec-png)\n* [AmazonStoreIE] Fix regex to not match vdp urls by [Ashish0804](https://github.com/Ashish0804)\n* [ARDBetaMediathek] Handle new URLs\n* [bbc] Get all available formats by [nyuszika7h](https://github.com/nyuszika7h)\n* [Bilibili] Fix title extraction by [u-spec-png](https://github.com/u-spec-png)\n* [CBC Gem] Fix for shows that don't have all seasons by [makeworld-the-better-one](https://github.com/makeworld-the-better-one)\n* [curiositystream] Add more metadata\n* [CuriosityStream] Fix series\n* [DiscoveryPlus] Rewrite extractors by [Ashish0804](https://github.com/Ashish0804), [pukkandan](https://github.com/pukkandan)\n* [HotStar] Set language field from tags by [Ashish0804](https://github.com/Ashish0804)\n* [instagram, cleanup] Refactor extractors\n* [Instagram] Display more login errors by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [itv] Fix extractor by [staubichsauger](https://github.com/staubichsauger), [pukkandan](https://github.com/pukkandan)\n* [mediaklikk] Expand valid URL\n* [MTV] Improve mgid extraction by [Sipherdrakon](https://github.com/Sipherdrakon), [kikuyan](https://github.com/kikuyan)\n* [nexx] Better error message for unsupported format\n* [NovaEmbed] Fix extractor by [pukkandan](https://github.com/pukkandan), [std-move](https://github.com/std-move)\n* [PatreonUser] Do not capture RSS URLs\n* [Reddit] Add support for 1080p videos by [xenova](https://github.com/xenova)\n* [RoosterTeethSeries] Fix for multiple pages by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [sbs] Fix for movies and livestreams\n* [Senate.gov] Add SenateGovIE and fix SenateISVPIE by [Grabien](https://github.com/Grabien), [pukkandan](https://github.com/pukkandan)\n* [soundcloud:search] Fix pagination\n* [tiktok:user] Set `webpage_url` correctly\n* [Tokentube] Fix description by [u-spec-png](https://github.com/u-spec-png)\n* [trovo] Fix extractor by [nyuszika7h](https://github.com/nyuszika7h)\n* [tv2] Expand valid URL\n* [Tvplayhome] Fix extractor by [pukkandan](https://github.com/pukkandan), [18928172992817182](https://github.com/18928172992817182)\n* [Twitch:vod] Add chapters by [mpeter50](https://github.com/mpeter50)\n* [twitch:vod] Extract live status by [DEvmIb](https://github.com/DEvmIb)\n* [VidLii] Add 720p support by [mrpapersonic](https://github.com/mrpapersonic)\n* [vimeo] Add fallback for config URL\n* [vimeo] Sort http formats higher\n* [WDR] Expand valid URL\n* [willow] Add extractor by [aarubui](https://github.com/aarubui)\n* [xvideos] Detect embed URLs by [4a1e2y5](https://github.com/4a1e2y5)\n* [xvideos] Fix extractor by [Yakabuff](https://github.com/Yakabuff)\n* [youtube, cleanup] Reorganize Tab and Search extractor inheritances\n* [youtube:search_url] Add playlist/channel support\n* [youtube] Add `default` player client by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Add storyboard formats\n* [youtube] Decrypt n-sig for URLs with `ratebypass`\n* [youtube] Minor improvement to format sorting\n* [cleanup] Add deprecation warnings\n* [cleanup] Refactor `JSInterpreter._seperate`\n* [Cleanup] Remove some unnecessary groups in regexes by [Ashish0804](https://github.com/Ashish0804)\n* [cleanup] Misc cleanup\n\n\n### 2021.11.10.1\n\n* Temporarily disable MacOS Build\n\n### 2021.11.10\n\n* [youtube] **Fix throttling by decrypting n-sig**\n* Merging extractors from [haruhi-dl](https://git.sakamoto.pl/laudom/haruhi-dl) by [selfisekai](https://github.com/selfisekai)\n    * [extractor] Add `_search_nextjs_data`\n    * [tvp] Fix extractors\n    * [tvp] Add TVPStreamIE\n    * [wppilot] Add extractors\n    * [polskieradio] Add extractors\n    * [radiokapital] Add extractors\n    * [polsatgo] Add extractor by [selfisekai](https://github.com/selfisekai), [sdomi](https://github.com/sdomi)\n* Separate `--check-all-formats` from `--check-formats`\n* Approximate filesize from bitrate\n* Don't create console in `windows_enable_vt_mode`\n* Fix bug in `--load-infojson` of playlists\n* [minicurses] Add colors to `-F` and standardize color-printing code\n* [outtmpl] Add type `link` for internet shortcut files\n* [outtmpl] Add alternate forms for `q` and `j`\n* [outtmpl] Do not traverse `None`\n* [fragment] Fix progress display in fragmented downloads\n* [downloader/ffmpeg] Fix vtt download with ffmpeg\n* [ffmpeg] Detect presence of setts and libavformat version\n* [ExtractAudio] Rescale `--audio-quality` correctly by [CrypticSignal](https://github.com/CrypticSignal), [pukkandan](https://github.com/pukkandan)\n* [ExtractAudio] Use `libfdk_aac` if available by [CrypticSignal](https://github.com/CrypticSignal)\n* [FormatSort] `eac3` is better than `ac3`\n* [FormatSort] Fix some fields' defaults\n* [generic] Detect more json_ld\n* [generic] parse jwplayer with only the json URL\n* [extractor] Add keyword automatically to SearchIE descriptions\n* [extractor] Fix some errors being converted to `ExtractorError`\n* [utils] Add `join_nonempty`\n* [utils] Add `jwt_decode_hs256` by [Ashish0804](https://github.com/Ashish0804)\n* [utils] Create `DownloadCancelled` exception\n* [utils] Parse `vp09` as vp9\n* [utils] Sanitize URL when determining protocol\n* [test/download] Fallback test to `bv`\n* [docs] Minor documentation improvements\n* [cleanup] Improvements to error and debug messages\n* [cleanup] Minor fixes and cleanup\n* [3speak] Add extractors by [Ashish0804](https://github.com/Ashish0804)\n* [AmazonStore] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [Gab] Add extractor by [u-spec-png](https://github.com/u-spec-png)\n* [mediaset] Add playlist support by [nixxo](https://github.com/nixxo)\n* [MLSScoccer] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [N1] Add support for nova.rs by [u-spec-png](https://github.com/u-spec-png)\n* [PlanetMarathi] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [RaiplayRadio] Add extractors by [frafra](https://github.com/frafra)\n* [roosterteeth] Add series extractor\n* [sky] Add `SkyNewsStoryIE` by [ajj8](https://github.com/ajj8)\n* [youtube] Fix sorting for some videos\n* [youtube] Populate `thumbnail` with the best \"known\" thumbnail\n* [youtube] Refactor itag processing\n* [youtube] Remove unnecessary no-playlist warning\n* [youtube:tab] Add Invidious list for playlists/channels by [rhendric](https://github.com/rhendric)\n* [Bilibili:comments] Fix infinite loop by [u-spec-png](https://github.com/u-spec-png)\n* [ceskatelevize] Fix extractor by [flashdagger](https://github.com/flashdagger)\n* [Coub] Fix media format identification by [wlritchi](https://github.com/wlritchi)\n* [crunchyroll] Add extractor-args `language` and `hardsub`\n* [DiscoveryPlus] Allow language codes in URL\n* [imdb] Fix thumbnail by [ozburo](https://github.com/ozburo)\n* [instagram] Add IOS URL support by [u-spec-png](https://github.com/u-spec-png)\n* [instagram] Improve login code by [u-spec-png](https://github.com/u-spec-png)\n* [Instagram] Improve metadata extraction by [u-spec-png](https://github.com/u-spec-png)\n* [iPrima] Fix extractor by [stanoarn](https://github.com/stanoarn)\n* [itv] Add support for ITV News by [ajj8](https://github.com/ajj8)\n* [la7] Fix extractor by [nixxo](https://github.com/nixxo)\n* [linkedin] Don't login multiple times\n* [mtv] Fix some videos by [Sipherdrakon](https://github.com/Sipherdrakon)\n* [Newgrounds] Fix description by [u-spec-png](https://github.com/u-spec-png)\n* [Nrk] Minor fixes by [fractalf](https://github.com/fractalf)\n* [Olympics] Fix extractor by [u-spec-png](https://github.com/u-spec-png)\n* [piksel] Fix sorting\n* [twitter] Do not sort by codec\n* [viewlift] Add cookie-based login and series support by [Ashish0804](https://github.com/Ashish0804), [pukkandan](https://github.com/pukkandan)\n* [vimeo] Detect source extension and misc cleanup by [flashdagger](https://github.com/flashdagger)\n* [vimeo] Fix ondemand videos and direct URLs with hash\n* [vk] Fix login and add subtitles by [kaz-us](https://github.com/kaz-us)\n* [VLive] Add upload_date and thumbnail by [Ashish0804](https://github.com/Ashish0804)\n* [VRT] Fix login by [pgaig](https://github.com/pgaig)\n* [Vupload] Fix extractor by [u-spec-png](https://github.com/u-spec-png)\n* [wakanim] Add support for MPD manifests by [nyuszika7h](https://github.com/nyuszika7h)\n* [wakanim] Detect geo-restriction by [nyuszika7h](https://github.com/nyuszika7h)\n* [ZenYandex] Fix extractor by [u-spec-png](https://github.com/u-spec-png)\n\n\n### 2021.10.22\n\n* [build] Improvements\n    * Build standalone MacOS packages by [smplayer-dev](https://github.com/smplayer-dev)\n    * Release windows exe built with `py2exe`\n    * Enable lazy-extractors in releases\n        * Set env var `YTDLP_NO_LAZY_EXTRACTORS` to forcefully disable this (experimental)\n    * Clean up error reporting in update\n    * Refactor `pyinst.py`, misc cleanup and improve docs\n* [docs] Migrate issues to use forms by [Ashish0804](https://github.com/Ashish0804)\n* [downloader] **Fix slow progress hooks**\n    * This was causing HLS/DASH downloads to be extremely slow in some situations\n* [downloader/ffmpeg] Improve simultaneous download and merge\n* [EmbedMetadata] Allow overwriting all default metadata with `meta_default` key\n* [ModifyChapters] Add ability for `--remove-chapters` to remove sections by timestamp\n* [utils] Allow duration strings in `--match-filter`\n* Add HDR information to formats\n* Add negative option `--no-batch-file` by [Zirro](https://github.com/Zirro)\n* Calculate more fields for merged formats\n* Do not verify thumbnail URLs unless `--check-formats` is specified\n* Don't create console for subprocesses on Windows\n* Fix `--restrict-filename` when used with default template\n* Fix `check_formats` output being written to stdout when `-qv`\n* Fix bug in storyboards\n* Fix conflict b/w id and ext in format selection\n* Fix verbose head not showing custom configs\n* Load archive only after printing verbose head\n* Make `duration_string` and `resolution` available in --match-filter\n* Re-implement deprecated option `--id`\n* Reduce default `--socket-timeout`\n* Write verbose header to logger\n* [outtmpl] Fix bug in expanding environment variables\n* [cookies] Local State should be opened as utf-8\n* [extractor,utils] Detect more codecs/mimetypes\n* [extractor] Detect `EXT-X-KEY` Apple FairPlay\n* [utils] Use `importlib` to load plugins by [sulyi](https://github.com/sulyi)\n* [http] Retry on socket timeout and show the last encountered error\n* [fragment] Print error message when skipping fragment\n* [aria2c] Fix `--skip-unavailable-fragment`\n* [SponsorBlock] Obey `extractor-retries` and `sleep-requests`\n* [Merger] Do not add `aac_adtstoasc` to non-hls audio\n* [ModifyChapters] Do not mutate original chapters by [nihil-admirari](https://github.com/nihil-admirari)\n* [devscripts/run_tests] Use markers to filter tests by [sulyi](https://github.com/sulyi)\n* [7plus] Add cookie based authentication by [nyuszika7h](https://github.com/nyuszika7h)\n* [AdobePass] Fix RCN MSO by [jfogelman](https://github.com/jfogelman)\n* [CBC] Fix Gem livestream by [makeworld-the-better-one](https://github.com/makeworld-the-better-one)\n* [CBC] Support CBC Gem member content by [makeworld-the-better-one](https://github.com/makeworld-the-better-one)\n* [crunchyroll] Add season to flat-playlist\n* [crunchyroll] Add support for `beta.crunchyroll` URLs and fix series URLs with language code\n* [EUScreen] Add Extractor by [Ashish0804](https://github.com/Ashish0804)\n* [Gronkh] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [hidive] Fix typo\n* [Hotstar] Mention Dynamic Range in `format_id` by [Ashish0804](https://github.com/Ashish0804)\n* [Hotstar] Raise appropriate error for DRM\n* [instagram] Add login by [u-spec-png](https://github.com/u-spec-png)\n* [instagram] Show appropriate error when login is needed\n* [microsoftstream] Add extractor by [damianoamatruda](https://github.com/damianoamatruda), [nixklai](https://github.com/nixklai)\n* [on24] Add extractor by [damianoamatruda](https://github.com/damianoamatruda)\n* [patreon] Fix vimeo player regex by [zenerdi0de](https://github.com/zenerdi0de)\n* [SkyNewsAU] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [tagesschau] Fix extractor by [u-spec-png](https://github.com/u-spec-png)\n* [tbs] Add tbs live streams by [llacb47](https://github.com/llacb47)\n* [tiktok] Fix typo and update tests\n* [trovo] Support channel clips and VODs by [Ashish0804](https://github.com/Ashish0804)\n* [Viafree] Add support for Finland by [18928172992817182](https://github.com/18928172992817182)\n* [vimeo] Fix embedded `player.vimeo`\n* [vlive:channel] Fix extraction by [kikuyan](https://github.com/kikuyan), [pukkandan](https://github.com/pukkandan)\n* [youtube] Add auto-translated subtitles\n* [youtube] Expose different formats with same itag\n* [youtube:comments] Fix for new layout by [coletdjnz](https://github.com/coletdjnz)\n* [cleanup] Cleanup bilibili code by [pukkandan](https://github.com/pukkandan), [u-spec-png](https://github.com/u-spec-png)\n* [cleanup] Remove broken youtube login code\n* [cleanup] Standardize timestamp formatting code\n* [cleanup] Generalize `getcomments` implementation for extractors\n* [cleanup] Simplify search extractors code\n* [cleanup] misc\n\n\n### 2021.10.10\n\n* [downloader/ffmpeg] Fix bug in initializing `FFmpegPostProcessor`\n* [minicurses] Fix when printing to file\n* [downloader] Fix throttledratelimit\n* [francetv] Fix extractor by [fstirlitz](https://github.com/fstirlitz), [sarnoud](https://github.com/sarnoud)\n* [NovaPlay] Add extractor by [Bojidarist](https://github.com/Bojidarist)\n* [ffmpeg] Revert \"Set max probesize\" - No longer needed\n* [docs] Remove incorrect dependency on VC++10\n* [build] Allow to release without changelog\n\n### 2021.10.09\n\n* Improved progress reporting\n    * Separate `--console-title` and `--no-progress`\n    * Add option `--progress` to show progress-bar even in quiet mode\n    * Fix and refactor `minicurses` and use it for all progress reporting\n    * Standardize use of terminal sequences and enable color support for windows 10\n    * Add option `--progress-template` to customize progress-bar and console-title\n    * Add postprocessor hooks and progress reporting\n* [postprocessor] Add plugin support with option `--use-postprocessor`\n* [extractor] Extract storyboards from SMIL manifests by [fstirlitz](https://github.com/fstirlitz)\n* [outtmpl] Alternate form of format type `l` for `\\n` delimited list\n* [outtmpl] Format type `U` for unicode normalization\n* [outtmpl] Allow empty output template to skip a type of file\n* Merge webm formats into mkv if thumbnails are to be embedded\n* [adobepass] Add RCN as MSO by [jfogelman](https://github.com/jfogelman)\n* [ciscowebex] Add extractor by [damianoamatruda](https://github.com/damianoamatruda)\n* [Gettr] Add extractor by [i6t](https://github.com/i6t)\n* [GoPro] Add extractor by [i6t](https://github.com/i6t)\n* [N1] Add extractor by [u-spec-png](https://github.com/u-spec-png)\n* [Theta] Add video extractor by [alerikaisattera](https://github.com/alerikaisattera)\n* [Veo] Add extractor by [i6t](https://github.com/i6t)\n* [Vupload] Add extractor by [u-spec-png](https://github.com/u-spec-png)\n* [bbc] Extract better quality videos by [ajj8](https://github.com/ajj8)\n* [Bilibili] Add subtitle converter by [u-spec-png](https://github.com/u-spec-png)\n* [CBC] Cleanup tests by [makeworld-the-better-one](https://github.com/makeworld-the-better-one)\n* [Douyin] Rewrite extractor by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [Funimation] Fix for /v/ urls by [pukkandan](https://github.com/pukkandan), [Jules-A](https://github.com/Jules-A)\n* [Funimation] Sort formats according to the relevant extractor-args\n* [Hidive] Fix duplicate and incorrect formats\n* [HotStarSeries] Fix cookies by [Ashish0804](https://github.com/Ashish0804)\n* [LinkedInLearning] Add subtitles by [Ashish0804](https://github.com/Ashish0804)\n* [Mediaite] Relax valid url by [coletdjnz](https://github.com/coletdjnz)\n* [Newgrounds] Add age_limit and fix duration by [u-spec-png](https://github.com/u-spec-png)\n* [Newgrounds] Fix view count on songs by [u-spec-png](https://github.com/u-spec-png)\n* [parliamentlive.tv] Fix extractor by [u-spec-png](https://github.com/u-spec-png)\n* [PolskieRadio] Fix extractors by [jakubadamw](https://github.com/jakubadamw), [u-spec-png](https://github.com/u-spec-png)\n* [reddit] Add embedded url by [u-spec-png](https://github.com/u-spec-png)\n* [reddit] Fix 429 by generating a random `reddit_session` by [AjaxGb](https://github.com/AjaxGb)\n* [Rumble] Add RumbleChannelIE by [Ashish0804](https://github.com/Ashish0804)\n* [soundcloud:playlist] Detect last page correctly\n* [SovietsCloset] Add duration from m3u8 by [ChillingPepper](https://github.com/ChillingPepper)\n* [Streamable] Add codecs by [u-spec-png](https://github.com/u-spec-png)\n* [vidme] Remove extractor by [alerikaisattera](https://github.com/alerikaisattera)\n* [youtube:tab] Fallback to API when webpage fails to download by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Fix non-fatal errors in fetching player\n* Fix `--flat-playlist` when neither IE nor id is known\n* Fix `-f mp4` behaving differently from youtube-dl\n* Workaround for bug in `ssl.SSLContext.load_default_certs`\n* [aes] Improve performance slightly by [sulyi](https://github.com/sulyi)\n* [cookies] Fix keyring fallback by [mbway](https://github.com/mbway)\n* [embedsubtitle] Fix error when duration is unknown\n* [ffmpeg] Fix error when subtitle file is missing\n* [ffmpeg] Set max probesize to workaround AAC HLS stream issues by [shirt](https://github.com/shirt-dev)\n* [FixupM3u8] Remove redundant run if merged is needed\n* [hls] Fix decryption issues by [shirt](https://github.com/shirt-dev), [pukkandan](https://github.com/pukkandan)\n* [http] Respect user-provided chunk size over extractor's\n* [utils] Let traverse_obj accept functions as keys\n* [docs] Add note about our custom ffmpeg builds\n* [docs] Write embedding and contributing documentation by [pukkandan](https://github.com/pukkandan), [timethrow](https://github.com/timethrow)\n* [update] Check for new version even if not updateable\n* [build] Add more files to the tarball\n* [build] Allow building with py2exe (and misc fixes)\n* [build] Use pycryptodomex by [shirt](https://github.com/shirt-dev), [pukkandan](https://github.com/pukkandan)\n* [cleanup] Some minor refactoring, improve docs and misc cleanup\n\n\n### 2021.09.25\n\n* Add new option `--netrc-location`\n* [outtmpl] Allow alternate fields using `,`\n* [outtmpl] Add format type `B` to treat the value as bytes, e.g. to limit the filename to a certain number of bytes\n* Separate the options `--ignore-errors` and `--no-abort-on-error`\n* Basic framework for simultaneous download of multiple formats by [nao20010128nao](https://github.com/nao20010128nao)\n* [17live] Add 17.live extractor by [nao20010128nao](https://github.com/nao20010128nao)\n* [bilibili] Add BiliIntlIE and BiliIntlSeriesIE by [Ashish0804](https://github.com/Ashish0804)\n* [CAM4] Add extractor by [alerikaisattera](https://github.com/alerikaisattera)\n* [Chingari] Add extractors by [Ashish0804](https://github.com/Ashish0804)\n* [CGTN] Add extractor by [chao813](https://github.com/chao813)\n* [damtomo] Add extractor by [nao20010128nao](https://github.com/nao20010128nao)\n* [gotostage] Add extractor by [poschi3](https://github.com/poschi3)\n* [Koo] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [Mediaite] Add Extractor by [Ashish0804](https://github.com/Ashish0804)\n* [Mediaklikk] Add Extractor by [tmarki](https://github.com/tmarki), [mrx23dot](https://github.com/mrx23dot), [coletdjnz](https://github.com/coletdjnz)\n* [MuseScore] Add Extractor by [Ashish0804](https://github.com/Ashish0804)\n* [Newgrounds] Add NewgroundsUserIE and improve extractor by [u-spec-png](https://github.com/u-spec-png)\n* [nzherald] Add NZHeraldIE by [coletdjnz](https://github.com/coletdjnz)\n* [Olympics] Add replay extractor by [Ashish0804](https://github.com/Ashish0804)\n* [Peertube] Add channel and playlist extractors by [u-spec-png](https://github.com/u-spec-png)\n* [radlive] Add extractor by [nyuszika7h](https://github.com/nyuszika7h)\n* [SovietsCloset] Add extractor by [ChillingPepper](https://github.com/ChillingPepper)\n* [Streamanity] Add Extractor by [alerikaisattera](https://github.com/alerikaisattera)\n* [Theta] Add extractor by [alerikaisattera](https://github.com/alerikaisattera)\n* [Yandex] Add ZenYandexIE and ZenYandexChannelIE by [Ashish0804](https://github.com/Ashish0804)\n* [9Now] handle episodes of series by [dalanmiller](https://github.com/dalanmiller)\n* [AnimalPlanet] Fix extractor by [Sipherdrakon](https://github.com/Sipherdrakon)\n* [Arte] Improve description extraction by [renalid](https://github.com/renalid)\n* [atv.at] Use jwt for API by [NeroBurner](https://github.com/NeroBurner)\n* [brightcove] Extract subtitles from manifests\n* [CBC] Fix CBC Gem extractors by [makeworld-the-better-one](https://github.com/makeworld-the-better-one)\n* [cbs] Report appropriate error for DRM\n* [comedycentral] Support `collection-playlist` by [nixxo](https://github.com/nixxo)\n* [DIYNetwork] Support new format by [Sipherdrakon](https://github.com/Sipherdrakon)\n* [downloader/niconico] Pass custom headers by [nao20010128nao](https://github.com/nao20010128nao)\n* [dw] Fix extractor\n* [Fancode] Fix live streams by [zenerdi0de](https://github.com/zenerdi0de)\n* [funimation] Fix for locations outside US by [Jules-A](https://github.com/Jules-A), [pukkandan](https://github.com/pukkandan)\n* [globo] Fix GloboIE by [Ashish0804](https://github.com/Ashish0804)\n* [HiDive] Fix extractor by [Ashish0804](https://github.com/Ashish0804)\n* [Hotstar] Add referer for subs by [Ashish0804](https://github.com/Ashish0804)\n* [itv] Fix extractor, add subtitles and thumbnails by [coletdjnz](https://github.com/coletdjnz), [sleaux-meaux](https://github.com/sleaux-meaux), [Vangelis66](https://github.com/Vangelis66)\n* [lbry] Show error message from API response\n* [Mxplayer] Use mobile API by [Ashish0804](https://github.com/Ashish0804)\n* [NDR] Rewrite NDRIE by [Ashish0804](https://github.com/Ashish0804)\n* [Nuvid] Fix extractor by [u-spec-png](https://github.com/u-spec-png)\n* [Oreilly] Handle new web url by [MKSherbini](https://github.com/MKSherbini)\n* [pbs] Fix subtitle extraction by [coletdjnz](https://github.com/coletdjnz), [gesa](https://github.com/gesa), [raphaeldore](https://github.com/raphaeldore)\n* [peertube] Update instances by [u-spec-png](https://github.com/u-spec-png)\n* [plutotv] Fix extractor for URLs with `/en`\n* [reddit] Workaround for 429 by redirecting to old.reddit.com\n* [redtube] Fix exts\n* [soundcloud] Make playlist extraction lazy\n* [soundcloud] Retry playlist pages on `502` error and update `_CLIENT_ID`\n* [southpark] Fix SouthParkDE by [coletdjnz](https://github.com/coletdjnz)\n* [SovietsCloset] Fix playlists for games with only named categories by [ConquerorDopy](https://github.com/ConquerorDopy)\n* [SpankBang] Fix uploader by [f4pp3rk1ng](https://github.com/f4pp3rk1ng), [coletdjnz](https://github.com/coletdjnz)\n* [tiktok] Use API to fetch higher quality video by [MinePlayersPE](https://github.com/MinePlayersPE), [llacb47](https://github.com/llacb47)\n* [TikTokUser] Fix extractor using mobile API by [MinePlayersPE](https://github.com/MinePlayersPE), [llacb47](https://github.com/llacb47)\n* [videa] Fix some extraction errors by [nyuszika7h](https://github.com/nyuszika7h)\n* [VrtNU] Handle login errors by [llacb47](https://github.com/llacb47)\n* [vrv] Don't raise error when thumbnails are missing\n* [youtube] Cleanup authentication code by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Fix `--mark-watched` with `--cookies-from-browser`\n* [youtube] Improvements to JS player extraction and add extractor-args to skip it by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Retry on 'Unknown Error' by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Return full URL instead of just ID\n* [youtube] Warn when trying to download clips\n* [zdf] Improve format sorting\n* [zype] Extract subtitles from the m3u8 manifest by [fstirlitz](https://github.com/fstirlitz)\n* Allow `--force-write-archive` to work with `--flat-playlist`\n* Download subtitles in order of `--sub-langs`\n* Allow `0` in `--playlist-items`\n* Handle more playlist errors with `-i`\n* Fix `--no-get-comments`\n* Fix `extra_info` being reused across runs\n* Fix compat options `no-direct-merge` and `playlist-index`\n* Dump files should obey `--trim-filename` by [sulyi](https://github.com/sulyi)\n* [aes] Add `aes_gcm_decrypt_and_verify` by [sulyi](https://github.com/sulyi), [pukkandan](https://github.com/pukkandan)\n* [aria2c] Fix IV for some AES-128 streams by [shirt](https://github.com/shirt-dev)\n* [compat] Don't ignore `HOME` (if set) on windows\n* [cookies] Make browser names case insensitive\n* [cookies] Print warning for cookie decoding error only once\n* [extractor] Fix root-relative URLs in MPD by [DigitalDJ](https://github.com/DigitalDJ)\n* [ffmpeg] Add `aac_adtstoasc` when merging if needed\n* [fragment,aria2c] Generalize and refactor some code\n* [fragment] Avoid repeated request for AES key\n* [fragment] Fix range header when using `-N` and media sequence by [shirt](https://github.com/shirt-dev)\n* [hls,aes] Fallback to native implementation for AES-CBC and detect `Cryptodome` in addition to `Crypto`\n* [hls] Byterange + AES128 is supported by native downloader\n* [ModifyChapters] Improve sponsor chapter merge algorithm by [nihil-admirari](https://github.com/nihil-admirari)\n* [ModifyChapters] Minor fixes\n* [WebVTT] Adjust parser to accommodate PBS subtitles\n* [utils] Improve `extract_timezone` by [dirkf](https://github.com/dirkf)\n* [options] Fix `--no-config` and refactor reading of config files\n* [options] Strip spaces and ignore empty entries in list-like switches\n* [test/cookies] Improve logging\n* [build] Automate more of the release process by [animelover1984](https://github.com/animelover1984), [pukkandan](https://github.com/pukkandan)\n* [build] Fix sha256 by [nihil-admirari](https://github.com/nihil-admirari)\n* [build] Bring back brew taps by [nao20010128nao](https://github.com/nao20010128nao)\n* [build] Provide `--onedir` zip for windows\n* [cleanup,docs] Add deprecation warning in docs for some counter intuitive behaviour\n* [cleanup] Fix line endings for `nebula.py` by [glenn-slayden](https://github.com/glenn-slayden)\n* [cleanup] Improve `make clean-test` by [sulyi](https://github.com/sulyi)\n* [cleanup] Misc\n\n\n### 2021.09.02\n\n* **Native SponsorBlock** implementation by [nihil-admirari](https://github.com/nihil-admirari), [pukkandan](https://github.com/pukkandan)\n    * `--sponsorblock-remove CATS` removes specified chapters from file\n    * `--sponsorblock-mark CATS` marks the specified sponsor sections as chapters\n    * `--sponsorblock-chapter-title TMPL` to specify sponsor chapter template\n    * `--sponsorblock-api URL` to use a different API\n    * No re-encoding is done unless `--force-keyframes-at-cuts` is used\n    * The fetched sponsor sections are written to the infojson\n    * Deprecates: `--sponskrub`, `--no-sponskrub`, `--sponskrub-cut`, `--no-sponskrub-cut`, `--sponskrub-force`, `--no-sponskrub-force`, `--sponskrub-location`, `--sponskrub-args`\n* Split `--embed-chapters` from `--embed-metadata` (it still implies the former by default)\n* Add option `--remove-chapters` to remove arbitrary chapters by [nihil-admirari](https://github.com/nihil-admirari), [pukkandan](https://github.com/pukkandan)\n* Add option `--force-keyframes-at-cuts` for more accurate cuts when removing and splitting chapters by [nihil-admirari](https://github.com/nihil-admirari)\n* Let `--match-filter` reject entries early\n    * Makes redundant: `--match-title`, `--reject-title`, `--min-views`, `--max-views`\n* [lazy_extractor] Improvements (It now passes all tests)\n    * Bugfix for when plugin directory doesn't exist by [kidonng](https://github.com/kidonng)\n    * Create instance only after pre-checking archive\n    * Import actual class if an attribute is accessed\n    * Fix `suitable` and add flake8 test\n* [downloader/ffmpeg] Experimental support for DASH manifests (including live)\n    * Your ffmpeg must have [this patch](https://github.com/FFmpeg/FFmpeg/commit/3249c757aed678780e22e99a1a49f4672851bca9) applied for YouTube DASH to work\n* [downloader/ffmpeg] Allow passing custom arguments before `-i`\n* [BannedVideo] Add extractor by [smege1001](https://github.com/smege1001), [blackjack4494](https://github.com/blackjack4494), [pukkandan](https://github.com/pukkandan)\n* [bilibili] Add category extractor by [animelover1984](https://github.com/animelover1984)\n* [Epicon] Add extractors by [Ashish0804](https://github.com/Ashish0804)\n* [filmmodu] Add extractor by [mzbaulhaque](https://github.com/mzbaulhaque)\n* [GabTV] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [Hungama] Fix `HungamaSongIE` and add `HungamaAlbumPlaylistIE` by [Ashish0804](https://github.com/Ashish0804)\n* [ManotoTV] Add new extractors by [tandy1000](https://github.com/tandy1000)\n* [Niconico] Add Search extractors by [animelover1984](https://github.com/animelover1984), [pukkandan](https://github.com/pukkandan)\n* [Patreon] Add `PatreonUserIE` by [zenerdi0de](https://github.com/zenerdi0de)\n* [peloton] Add extractor by [IONECarter](https://github.com/IONECarter), [capntrips](https://github.com/capntrips), [pukkandan](https://github.com/pukkandan)\n* [ProjectVeritas] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [radiko] Add extractors by [nao20010128nao](https://github.com/nao20010128nao)\n* [StarTV] Add extractor for `startv.com.tr` by [mrfade](https://github.com/mrfade), [coletdjnz](https://github.com/coletdjnz)\n* [tiktok] Add `TikTokUserIE` by [Ashish0804](https://github.com/Ashish0804), [pukkandan](https://github.com/pukkandan)\n* [Tokentube] Add extractor by [u-spec-png](https://github.com/u-spec-png)\n* [TV2Hu] Fix `TV2HuIE` and add `TV2HuSeriesIE` by [Ashish0804](https://github.com/Ashish0804)\n* [voicy] Add extractor by [nao20010128nao](https://github.com/nao20010128nao)\n* [adobepass] Fix Verizon SAML login by [nyuszika7h](https://github.com/nyuszika7h), [ParadoxGBB](https://github.com/ParadoxGBB)\n* [afreecatv] Fix adult VODs by [wlritchi](https://github.com/wlritchi)\n* [afreecatv] Tolerate failure to parse date string by [wlritchi](https://github.com/wlritchi)\n* [aljazeera] Fix extractor by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [ATV.at] Fix extractor for ATV.at by [NeroBurner](https://github.com/NeroBurner), [coletdjnz](https://github.com/coletdjnz)\n* [bitchute] Fix test by [mahanstreamer](https://github.com/mahanstreamer)\n* [camtube] Remove obsolete extractor by [alerikaisattera](https://github.com/alerikaisattera)\n* [CDA] Add more formats by [u-spec-png](https://github.com/u-spec-png)\n* [eroprofile] Fix page skipping in albums by [jhwgh1968](https://github.com/jhwgh1968)\n* [facebook] Fix format sorting\n* [facebook] Fix metadata extraction by [kikuyan](https://github.com/kikuyan)\n* [facebook] Update onion URL by [Derkades](https://github.com/Derkades)\n* [HearThisAtIE] Fix extractor by [Ashish0804](https://github.com/Ashish0804)\n* [instagram] Add referrer to prevent throttling by [u-spec-png](https://github.com/u-spec-png), [kikuyan](https://github.com/kikuyan)\n* [iwara.tv] Extract more metadata by [BunnyHelp](https://github.com/BunnyHelp)\n* [iwara] Add thumbnail by [i6t](https://github.com/i6t)\n* [kakao] Fix extractor\n* [mediaset] Fix extraction for some videos by [nyuszika7h](https://github.com/nyuszika7h)\n* [Motherless] Fix extractor by [coletdjnz](https://github.com/coletdjnz)\n* [Nova] fix extractor by [std-move](https://github.com/std-move)\n* [ParamountPlus] Fix geo verification by [shirt](https://github.com/shirt-dev)\n* [peertube] handle new video URL format by [Chocobozzz](https://github.com/Chocobozzz)\n* [pornhub] Separate and fix playlist extractor by [mzbaulhaque](https://github.com/mzbaulhaque)\n* [reddit] Fix for quarantined subreddits by [ouwou](https://github.com/ouwou)\n* [ShemarooMe] Fix extractor by [Ashish0804](https://github.com/Ashish0804)\n* [soundcloud] Refetch `client_id` on 403\n* [tiktok] Fix metadata extraction\n* [TV2] Fix extractor by [Ashish0804](https://github.com/Ashish0804)\n* [tv5mondeplus] Fix extractor by [korli](https://github.com/korli)\n* [VH1,TVLand] Fix extractors by [Sipherdrakon](https://github.com/Sipherdrakon)\n* [Viafree] Fix extractor and extract subtitles by [coletdjnz](https://github.com/coletdjnz)\n* [XHamster] Extract `uploader_id` by [octotherp](https://github.com/octotherp)\n* [youtube] Add `shorts` to `_VALID_URL`\n* [youtube] Add av01 itags to known formats list by [blackjack4494](https://github.com/blackjack4494)\n* [youtube] Extract error messages from HTTPError response by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Fix subtitle names\n* [youtube] Prefer audio stream that YouTube considers default\n* [youtube] Remove annotations and deprecate `--write-annotations` by [coletdjnz](https://github.com/coletdjnz)\n* [Zee5] Fix extractor and add subtitles by [Ashish0804](https://github.com/Ashish0804)\n* [aria2c] Obey `--rate-limit`\n* [EmbedSubtitle] Continue even if some files are missing\n* [extractor] Better error message for DRM\n* [extractor] Common function `_match_valid_url`\n* [extractor] Show video id in error messages if possible\n* [FormatSort] Remove priority of `lang`\n* [options] Add `_set_from_options_callback`\n* [SubtitleConvertor] Fix bug during subtitle conversion\n* [utils] Add `parse_qs`\n* [webvtt] Fix timestamp overflow adjustment by [fstirlitz](https://github.com/fstirlitz)\n* Bugfix for `--replace-in-metadata`\n* Don't try to merge with final extension\n* Fix `--force-overwrites` when using `-k`\n* Fix `--no-prefer-free-formats` by [CeruleanSky](https://github.com/CeruleanSky)\n* Fix `-F` for extractors that directly return url\n* Fix `-J` when there are failed videos\n* Fix `extra_info` being reused across runs\n* Fix `playlist_index` not obeying `playlist_start` and add tests\n* Fix resuming of single formats when using `--no-part`\n* Revert erroneous use of the `Content-Length` header by [fstirlitz](https://github.com/fstirlitz)\n* Use `os.replace` where applicable by; paulwrubel\n* [build] Add homebrew taps `yt-dlp/taps/yt-dlp` by [nao20010128nao](https://github.com/nao20010128nao)\n* [build] Fix bug in making `yt-dlp.tar.gz`\n* [docs] Fix some typos by [pukkandan](https://github.com/pukkandan), [zootedb0t](https://github.com/zootedb0t)\n* [cleanup] Replace improper use of tab in trovo by [glenn-slayden](https://github.com/glenn-slayden)\n\n\n### 2021.08.10\n\n* Add option `--replace-in-metadata`\n* Add option `--no-simulate` to not simulate even when `--print` or `--list...` are used - Deprecates `--print-json`\n* Allow entire infodict to be printed using `%()s` - makes `--dump-json` redundant\n* Allow multiple `--exec` and `--exec-before-download`\n* Add regex to `--match-filter`\n* Add all format filtering operators also to `--match-filter` by [max-te](https://github.com/max-te)\n* Add compat-option `no-keep-subs`\n* [adobepass] Add MSO Cablevision by [Jessecar96](https://github.com/Jessecar96)\n* [BandCamp] Add BandcampMusicIE by [Ashish0804](https://github.com/Ashish0804)\n* [blackboardcollaborate] Add new extractor by [mzbaulhaque](https://github.com/mzbaulhaque)\n* [eroprofile] Add album downloader by [jhwgh1968](https://github.com/jhwgh1968)\n* [mirrativ] Add extractors by [nao20010128nao](https://github.com/nao20010128nao)\n* [openrec] Add extractors by [nao20010128nao](https://github.com/nao20010128nao)\n* [nbcolympics:stream] Fix extractor by [nchilada](https://github.com/nchilada), [pukkandan](https://github.com/pukkandan)\n* [nbcolympics] Update extractor for 2020 olympics by [wesnm](https://github.com/wesnm)\n* [paramountplus] Separate extractor and fix some titles by [shirt](https://github.com/shirt-dev), [pukkandan](https://github.com/pukkandan)\n* [RCTIPlus] Support events and TV by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [Newgrounds] Improve extractor and fix playlist by [u-spec-png](https://github.com/u-spec-png)\n* [aenetworks] Update `_THEPLATFORM_KEY` and `_THEPLATFORM_SECRET` by [wesnm](https://github.com/wesnm)\n* [crunchyroll] Fix thumbnail by [funniray](https://github.com/funniray)\n* [HotStar] Use API for metadata and extract subtitles by [Ashish0804](https://github.com/Ashish0804)\n* [instagram] Fix comments extraction by [u-spec-png](https://github.com/u-spec-png)\n* [peertube] Fix videos without description by [u-spec-png](https://github.com/u-spec-png)\n* [twitch:clips] Extract `display_id` by [dirkf](https://github.com/dirkf)\n* [viki] Print error message from API request\n* [Vine] Remove invalid formats by [u-spec-png](https://github.com/u-spec-png)\n* [VrtNU] Fix XSRF token by [pgaig](https://github.com/pgaig)\n* [vrv] Fix thumbnail extraction by [funniray](https://github.com/funniray)\n* [youtube] Add extractor-arg `include-live-dash` to show live dash formats\n* [youtube] Improve signature function detection by [PSlava](https://github.com/PSlava)\n* [youtube] Raise appropriate error when API pages can't be downloaded\n* Ensure `_write_ytdl_file` closes file handle on error\n* Fix `--compat-options filename` by [stdedos](https://github.com/stdedos)\n* Fix issues with infodict sanitization\n* Fix resuming when using `--no-part`\n* Fix wrong extension for intermediate files\n* Handle `BrokenPipeError` by [kikuyan](https://github.com/kikuyan)\n* Show libraries present in verbose head\n* [extractor] Detect `sttp` as subtitles in MPD by [fstirlitz](https://github.com/fstirlitz)\n* [extractor] Reset non-repeating warnings per video\n* [ffmpeg] Fix streaming `mp4` to `stdout`\n* [ffpmeg] Allow `--ffmpeg-location` to be a file with different name\n* [utils] Fix `InAdvancePagedList.__getitem__`\n* [utils] Fix `traverse_obj` depth when `is_user_input`\n* [webvtt] Merge daisy-chained duplicate cues by [fstirlitz](https://github.com/fstirlitz)\n* [build] Use custom build of `pyinstaller` by [shirt](https://github.com/shirt-dev)\n* [tests:download] Add batch testing for extractors (`test_YourExtractor_all`)\n* [docs] Document which fields `--add-metadata` adds to the file\n* [docs] Fix some mistakes and improve doc\n* [cleanup] Misc code cleanup\n\n\n### 2021.08.02\n\n* Add logo, banner and donate links\n* [outtmpl] Expand and escape environment variables\n* [outtmpl] Add format types `j` (json), `l` (comma delimited list), `q` (quoted for terminal)\n* [downloader] Allow streaming some unmerged formats to stdout using ffmpeg\n* [youtube] **Age-gate bypass**\n    * Add `agegate` clients by [pukkandan](https://github.com/pukkandan), [MinePlayersPE](https://github.com/MinePlayersPE)\n    * Add `thirdParty` to agegate clients to bypass more videos\n    * Simplify client definitions, expose `embedded` clients\n    * Improve age-gate detection by [coletdjnz](https://github.com/coletdjnz)\n    * Fix default global API key by [coletdjnz](https://github.com/coletdjnz)\n    * Add `creator` clients for age-gate bypass using unverified accounts by [zerodytrash](https://github.com/zerodytrash), [coletdjnz](https://github.com/coletdjnz), [pukkandan](https://github.com/pukkandan)\n* [adobepass] Add MSO Sling TV by [wesnm](https://github.com/wesnm)\n* [CBS] Add ParamountPlusSeriesIE by [Ashish0804](https://github.com/Ashish0804)\n* [dplay] Add `ScienceChannelIE` by [Sipherdrakon](https://github.com/Sipherdrakon)\n* [UtreonIE] Add extractor by [Ashish0804](https://github.com/Ashish0804)\n* [youtube] Add `mweb` client by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Add `player_client=all`\n* [youtube] Force `hl=en` for comments by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Fix format sorting when using alternate clients\n* [youtube] Misc cleanup by [pukkandan](https://github.com/pukkandan), [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Extract SAPISID only once\n* [CBS] Add fallback by [llacb47](https://github.com/llacb47), [pukkandan](https://github.com/pukkandan)\n* [Hotstar] Support cookies by [Ashish0804](https://github.com/Ashish0804)\n* [HotStarSeriesIE] Fix regex by [Ashish0804](https://github.com/Ashish0804)\n* [bilibili] Improve `_VALID_URL`\n* [mediaset] Fix extraction by [nixxo](https://github.com/nixxo)\n* [Mxplayer] Add h265 formats by [Ashish0804](https://github.com/Ashish0804)\n* [RCTIPlus] Remove PhantomJS dependency by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [tenplay] Add MA15+ age limit by [pento](https://github.com/pento)\n* [vidio] Fix login error detection by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [vimeo] Better extraction of original file by [Ashish0804](https://github.com/Ashish0804)\n* [generic] Support KVS player (replaces ThisVidIE) by [rigstot](https://github.com/rigstot)\n* Add compat-option `no-clean-infojson`\n* Remove `asr` appearing twice in `-F`\n* Set `home:` as the default key for `-P`\n* [utils] Fix slicing of reversed `LazyList`\n* [FormatSort] Fix bug for audio with unknown codec\n* [test:download] Support testing with `ignore_no_formats_error`\n* [cleanup] Refactor some code\n\n\n### 2021.07.24\n\n* [youtube:tab] Extract video duration early\n* [downloader] Pass `info_dict` to `progress_hook`s\n* [youtube] Fix age-gated videos for API clients when cookies are supplied by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Disable `get_video_info` age-gate workaround - This endpoint seems to be completely dead\n* [youtube] Try all clients even if age-gated\n* [youtube] Fix subtitles only being extracted from the first client\n* [youtube] Simplify `_get_text`\n* [cookies] bugfix for microsoft edge on macOS\n* [cookies] Handle `sqlite` `ImportError` gracefully by [mbway](https://github.com/mbway)\n* [cookies] Handle errors when importing `keyring`\n\n### 2021.07.21\n\n* **Add option `--cookies-from-browser`** to load cookies from a browser by [mbway](https://github.com/mbway)\n    * Usage: `--cookies-from-browser BROWSER[:PROFILE_NAME_OR_PATH]`\n    * Also added `--no-cookies-from-browser`\n    * To decrypt chromium cookies, `keyring` is needed for UNIX and `pycryptodome` for Windows\n* Add option `--exec-before-download`\n* Add field `live_status`\n* [FFmpegMetadata] Add language of each stream and some refactoring\n* [douyin] Add extractor by [pukkandan](https://github.com/pukkandan), [pyx](https://github.com/pyx)\n* [pornflip] Add extractor by [mzbaulhaque](https://github.com/mzbaulhaque)\n* **[youtube] Extract data from multiple clients** by [pukkandan](https://github.com/pukkandan), [coletdjnz](https://github.com/coletdjnz)\n    * `player_client` now accepts multiple clients\n    * Default `player_client` = `android,web`\n        * This uses twice as many requests, but avoids throttling for most videos while also not losing any formats\n    * Music clients can be specifically requested and is enabled by default if `music.youtube.com`\n    * Added `player_client=ios` (Known issue: formats from ios are not sorted correctly)\n    * Add age-gate bypass for android and ios clients\n* [youtube] Extract more thumbnails\n    * The thumbnail URLs are hard-coded and their actual existence is tested lazily\n    * Added option `--no-check-formats` to not test them\n* [youtube] Misc fixes\n    * Improve extraction of livestream metadata by [pukkandan](https://github.com/pukkandan), [krichbanana](https://github.com/krichbanana)\n    * Hide live dash formats since they can't be downloaded anyway\n    * Fix authentication when using multiple accounts by [coletdjnz](https://github.com/coletdjnz)\n    * Fix controversial videos when requested via API by [coletdjnz](https://github.com/coletdjnz)\n    * Fix session index extraction and headers for non-web player clients by [coletdjnz](https://github.com/coletdjnz)\n    * Make `--extractor-retries` work for more errors\n    * Fix sorting of 3gp format\n    * Sanity check `chapters` (and refactor related code)\n    * Make `parse_time_text` and `_extract_chapters` non-fatal\n    * Misc cleanup and bug fixes by [coletdjnz](https://github.com/coletdjnz)\n* [youtube:tab] Fix channels tab\n* [youtube:tab] Extract playlist availability by [coletdjnz](https://github.com/coletdjnz)\n* **[youtube:comments] Move comment extraction to new API** by [coletdjnz](https://github.com/coletdjnz)\n    * Adds extractor-args `comment_sort` (`top`/`new`), `max_comments`, `max_comment_depth`\n* [youtube:comments] Fix `is_favorited`, improve `like_count` parsing by [coletdjnz](https://github.com/coletdjnz)\n* [BravoTV] Improve metadata extraction by [kevinoconnor7](https://github.com/kevinoconnor7)\n* [crunchyroll:playlist] Force http\n* [yahoo:gyao:player] Relax `_VALID_URL` by [nao20010128nao](https://github.com/nao20010128nao)\n* [nebula] Authentication via tokens from cookie jar by [hheimbuerger](https://github.com/hheimbuerger), [TpmKranz](https://github.com/TpmKranz)\n* [RTP] Fix extraction and add subtitles by [fstirlitz](https://github.com/fstirlitz)\n* [viki] Rewrite extractors and add extractor-arg `video_types` to `vikichannel` by [zackmark29](https://github.com/zackmark29), [pukkandan](https://github.com/pukkandan)\n* [vlive] Extract thumbnail directly in addition to the one from Naver\n* [generic] Extract previously missed subtitles by [fstirlitz](https://github.com/fstirlitz)\n* [generic] Extract everything in the SMIL manifest and detect discarded subtitles by [fstirlitz](https://github.com/fstirlitz)\n* [embedthumbnail] Fix `_get_thumbnail_resolution`\n* [metadatafromfield] Do not detect numbers as field names\n* Fix selectors `all`, `mergeall` and add tests\n* Errors in playlist extraction should obey `--ignore-errors`\n* Fix bug where `original_url` was not propagated when `_type`=`url`\n* Revert \"Merge webm formats into mkv if thumbnails are to be embedded (#173)\"\n    * This was wrongly checking for `write_thumbnail`\n* Improve `extractor_args` parsing\n* Rename `NOTE` in `-F` to `MORE INFO` since it's often confused to be the same as `format_note`\n* Add `only_once` param for `write_debug` and `report_warning`\n* [extractor] Allow extracting multiple groups in `_search_regex` by [fstirlitz](https://github.com/fstirlitz)\n* [utils] Improve `traverse_obj`\n* [utils] Add `variadic`\n* [utils] Improve `js_to_json` comment regex by [fstirlitz](https://github.com/fstirlitz)\n* [webtt] Fix timestamps\n* [compat] Remove unnecessary code\n* [docs] fix default of multistreams\n\n\n### 2021.07.07\n\n* Merge youtube-dl: Upto [commit/a803582](https://github.com/ytdl-org/youtube-dl/commit/a8035827177d6b59aca03bd717acb6a9bdd75ada)\n* Add `--extractor-args` to pass some extractor-specific arguments. See [readme](https://github.com/yt-dlp/yt-dlp#extractor-arguments)\n    * Add extractor option `skip` for `youtube`, e.g. `--extractor-args youtube:skip=hls,dash`\n    * Deprecates `--youtube-skip-dash-manifest`, `--youtube-skip-hls-manifest`, `--youtube-include-dash-manifest`, `--youtube-include-hls-manifest`\n* Allow `--list...` options to work with `--print`, `--quiet` and other `--list...` options\n* [youtube] Use `player` API for additional video extraction requests by [coletdjnz](https://github.com/coletdjnz)\n    * **Fixes youtube premium music** (format 141) extraction\n    * Adds extractor option `player_client` = `web`/`android`\n        * **`--extractor-args youtube:player_client=android` works around the throttling** for the time-being\n    * Adds extractor option `player_skip=config`\n    * Adds age-gate fallback using embedded client\n* [youtube] Choose correct Live chat API for upcoming streams by [krichbanana](https://github.com/krichbanana)\n* [youtube] Fix subtitle names for age-gated videos\n* [youtube:comments] Fix error handling and add `itct` to params by [coletdjnz](https://github.com/coletdjnz)\n* [youtube_live_chat] Fix download with cookies by [siikamiika](https://github.com/siikamiika)\n* [youtube_live_chat] use `clickTrackingParams` by [siikamiika](https://github.com/siikamiika)\n* [Funimation] Rewrite extractor\n    * Add `FunimationShowIE` by [Mevious](https://github.com/Mevious)\n    * **Treat the different versions of an episode as different formats of a single video**\n        * This changes the video `id` and will break break existing archives\n        * Compat option `seperate-video-versions` to fall back to old behavior including using the old video ids\n    * Support direct `/player/` URL\n    * Extractor options `language` and `version` to pre-select them during extraction\n        * These options may be removed in the future if we can extract all formats without additional network requests\n        * Do not rely on these for format selection and use `-f` filters instead\n* [AdobePass] Add Spectrum MSO by [kevinoconnor7](https://github.com/kevinoconnor7), [ohmybahgosh](https://github.com/ohmybahgosh)\n* [facebook] Extract description and fix title\n* [fancode] Fix extraction, support live and allow login with refresh token by [zenerdi0de](https://github.com/zenerdi0de)\n* [plutotv] Improve `_VALID_URL`\n* [RCTIPlus] Add extractor by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [Soundcloud] Allow login using oauth token by [blackjack4494](https://github.com/blackjack4494)\n* [TBS] Support livestreams by [llacb47](https://github.com/llacb47)\n* [videa] Fix extraction by [nyuszika7h](https://github.com/nyuszika7h)\n* [yahoo] Fix extraction by [llacb47](https://github.com/llacb47), [pukkandan](https://github.com/pukkandan)\n* Process videos when using `--ignore-no-formats-error` by [krichbanana](https://github.com/krichbanana)\n* Fix `--throttled-rate` when using `--load-info-json`\n* Fix `--flat-playlist` when entry has no `ie_key`\n* Fix `check_formats` catching `ExtractorError` instead of `DownloadError`\n* Fix deprecated option `--list-formats-old`\n* [downloader/ffmpeg] Fix `--ppa` when using simultaneous download\n* [extractor] Prevent unnecessary download of hls manifests and refactor `hls_split_discontinuity`\n* [fragment] Handle status of download and errors in threads correctly; and minor refactoring\n* [thumbnailsconvertor] Treat `jpeg` as `jpg`\n* [utils] Fix issues with `LazyList` reversal\n* [extractor] Allow extractors to set their own login hint\n* [cleanup] Simplify format selector code with `LazyList` and `yield from`\n* [cleanup] Clean `extractor.common._merge_subtitles` signature\n* [cleanup] Fix some typos\n\n\n### 2021.06.23\n\n* Merge youtube-dl: Upto [commit/379f52a](https://github.com/ytdl-org/youtube-dl/commit/379f52a4954013767219d25099cce9e0f9401961)\n* **Add option `--throttled-rate`** below which video data is re-extracted\n* [fragment] **Merge during download for `-N`**, and refactor `hls`/`dash`\n* [websockets] Add `WebSocketFragmentFD` by [nao20010128nao](https://github.com/nao20010128nao), [pukkandan](https://github.com/pukkandan)\n* Allow `images` formats in addition to video/audio\n* [downloader/mhtml] Add new downloader for slideshows/storyboards by [fstirlitz](https://github.com/fstirlitz)\n* [youtube] Temporary **fix for age-gate**\n* [youtube] Support ongoing live chat by [siikamiika](https://github.com/siikamiika)\n* [youtube] Improve SAPISID cookie handling by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Login is not needed for `:ytrec`\n* [youtube] Non-fatal alert reporting for unavailable videos page by [coletdjnz](https://github.com/coletdjnz)\n* [twitcasting] Websocket support by [nao20010128nao](https://github.com/nao20010128nao)\n* [mediasite] Extract slides by [fstirlitz](https://github.com/fstirlitz)\n* [funimation] Extract subtitles\n* [pornhub] Extract `cast`\n* [hotstar] Use server time for authentication instead of local time\n* [EmbedThumbnail] Fix for already downloaded thumbnail\n* [EmbedThumbnail] Add compat-option `embed-thumbnail-atomicparsley`\n* Expand `--check-formats` to thumbnails\n* Fix id sanitization in filenames\n* Skip fixup of existing files and add `--fixup force` to force it\n* Better error handling of syntax errors in `-f`\n* Use `NamedTemporaryFile` for `--check-formats`\n* [aria2c] Lower `--min-split-size` for HTTP downloads\n* [options] Rename `--add-metadata` to `--embed-metadata`\n* [utils] Improve `LazyList` and add tests\n* [build] Build Windows x86 version with py3.7 and remove redundant tests by [pukkandan](https://github.com/pukkandan), [shirt](https://github.com/shirt-dev)\n* [docs] Clarify that `--embed-metadata` embeds chapter markers\n* [cleanup] Refactor fixup\n\n\n### 2021.06.09\n\n* Fix bug where `%(field)d` in filename template throws error\n* [outtmpl] Improve offset parsing\n* [test] More rigorous tests for `prepare_filename`\n\n### 2021.06.08\n\n* Remove support for obsolete Python versions: Only 3.6+ is now supported\n* Merge youtube-dl: Upto [commit/c2350ca](https://github.com/ytdl-org/youtube-dl/commit/c2350cac243ba1ec1586fe85b0d62d1b700047a2)\n* [hls] Fix decryption for multithreaded downloader\n* [extractor] Fix pre-checking archive for some extractors\n* [extractor] Fix FourCC fallback when parsing ISM by [fstirlitz](https://github.com/fstirlitz)\n* [twitcasting] Add TwitCastingUserIE, TwitCastingLiveIE by [pukkandan](https://github.com/pukkandan), [nao20010128nao](https://github.com/nao20010128nao)\n* [vidio] Add VidioPremierIE and VidioLiveIE by [MinePlayersPE](Https://github.com/MinePlayersPE)\n* [viki] Fix extraction from [ytdl-org/youtube-dl@59e583f](https://github.com/ytdl-org/youtube-dl/commit/59e583f7e8530ca92776c866897d895c072e2a82)\n* [youtube] Support shorts URL\n* [zoom] Extract transcripts as subtitles\n* Add field `original_url` with the user-inputted URL\n* Fix and refactor `prepare_outtmpl`\n* Make more fields available for `--print` when used with `--flat-playlist`\n* [utils] Generalize `traverse_dict` to `traverse_obj`\n* [downloader/ffmpeg] Hide FFmpeg banner unless in verbose mode by [fstirlitz](https://github.com/fstirlitz)\n* [build] Release `yt-dlp.tar.gz`\n* [build,update] Add GNU-style SHA512 and prepare updater for similar SHA256 by [nihil-admirari](https://github.com/nihil-admirari)\n* [pyinst] Show Python version in exe metadata by [nihil-admirari](https://github.com/nihil-admirari)\n* [docs] Improve documentation of dependencies\n* [cleanup] Mark unused files\n* [cleanup] Point all shebang to `python3` by [fstirlitz](https://github.com/fstirlitz)\n* [cleanup] Remove duplicate file `trovolive.py`\n\n\n### 2021.06.01\n\n* Merge youtube-dl: Upto [commit/d495292](https://github.com/ytdl-org/youtube-dl/commit/d495292852b6c2f1bd58bc2141ff2b0265c952cf)\n* Pre-check archive and filters during playlist extraction\n* Handle Basic Auth `user:pass` in URLs by [hhirtz](https://github.com/hhirtz) and [pukkandan](https://github.com/pukkandan)\n* [archiveorg] Add YoutubeWebArchiveIE by [coletdjnz](https://github.com/coletdjnz) and [alex-gedeon](https://github.com/alex-gedeon)\n* [fancode] Add extractor by [rhsmachine](https://github.com/rhsmachine)\n* [patreon] Support vimeo embeds by [rhsmachine](https://github.com/rhsmachine)\n* [Saitosan] Add new extractor by [llacb47](https://github.com/llacb47)\n* [ShemarooMe] Add extractor by [Ashish0804](https://github.com/Ashish0804) and [pukkandan](https://github.com/pukkandan)\n* [telemundo] Add extractor by [king-millez](https://github.com/king-millez)\n* [SonyLIV] Add SonyLIVSeriesIE and subtitle support by [Ashish0804](https://github.com/Ashish0804)\n* [Hotstar] Add HotStarSeriesIE by [Ashish0804](https://github.com/Ashish0804)\n* [Voot] Add VootSeriesIE by [Ashish0804](https://github.com/Ashish0804)\n* [vidio] Support login and premium videos by [MinePlayersPE](https://github.com/MinePlayersPE)\n* [fragment] When using `-N`, do not keep the fragment content in memory\n* [ffmpeg] Download and merge in a single step if possible\n* [ThumbnailsConvertor] Support conversion to `png` and make it the default by [louie-github](https://github.com/louie-github)\n* [VideoConvertor] Generalize with remuxer and allow conditional recoding\n* [EmbedThumbnail] Embed in `mp4`/`m4a` using mutagen by [tripulse](https://github.com/tripulse) and [pukkandan](https://github.com/pukkandan)\n* [EmbedThumbnail] Embed if any thumbnail was downloaded, not just the best\n* [EmbedThumbnail] Correctly escape filename\n* [update] replace self without launching a subprocess in windows\n* [update] Block further update for unsupported systems\n* Refactor `__process_playlist` by creating `LazyList`\n* Write messages to `stderr` when both `quiet` and `verbose`\n* Sanitize and sort playlist thumbnails\n* Remove `None` values from `info.json`\n* [extractor] Always prefer native hls downloader by default\n* [extractor] Skip subtitles without URI in m3u8 manifests by [hheimbuerger](https://github.com/hheimbuerger)\n* [extractor] Functions to parse `socket.io` response as `json` by [pukkandan](https://github.com/pukkandan) and [llacb47](https://github.com/llacb47)\n* [extractor] Allow `note=False` when extracting manifests\n* [utils] Escape URLs in `sanitized_Request`, not `sanitize_url`\n* [hls] Disable external downloader for `webtt`\n* [youtube] `/live` URLs should raise error if channel is not live\n* [youtube] Bug fixes\n* [zee5] Fix m3u8 formats' extension\n* [ard] Allow URLs without `-` before id by [olifre](https://github.com/olifre)\n* [cleanup] `YoutubeDL._match_entry`\n* [cleanup] Refactor updater\n* [cleanup] Refactor ffmpeg convertors\n* [cleanup] setup.py\n\n\n### 2021.05.20\n\n* **Youtube improvements**:\n    * Support youtube music `MP`, `VL` and `browse` pages\n    * Extract more formats for youtube music by [craftingmod](https://github.com/craftingmod), [coletdjnz](https://github.com/coletdjnz) and [pukkandan](https://github.com/pukkandan)\n    * Extract multiple subtitles in same language by [pukkandan](https://github.com/pukkandan) and [tpikonen](https://github.com/tpikonen)\n    * Redirect channels that doesn't have a `videos` tab to their `UU` playlists\n    * Support in-channel search\n    * Sort audio-only formats correctly\n    * Always extract `maxresdefault` thumbnail\n    * Extract audio language\n    * Add subtitle language names by [nixxo](https://github.com/nixxo) and [tpikonen](https://github.com/tpikonen)\n    * Show alerts only from the final webpage\n    * Add `html5=1` param to `get_video_info` page requests by [coletdjnz](https://github.com/coletdjnz)\n    * Better message when login required\n* **Add option `--print`**: to print any field/template\n    * Makes redundant: `--get-description`, `--get-duration`, `--get-filename`, `--get-format`, `--get-id`, `--get-thumbnail`, `--get-title`, `--get-url`\n* Field `additional_urls` to download additional videos from metadata using [`--parse-metadata`](https://github.com/yt-dlp/yt-dlp#modifying-metadata)\n* Merge youtube-dl: Upto [commit/dfbbe29](https://github.com/ytdl-org/youtube-dl/commit/dfbbe2902fc67f0f93ee47a8077c148055c67a9b)\n* Write thumbnail of playlist and add `pl_thumbnail` outtmpl key\n* [embedthumbnail] Add `flac` support and refactor `mutagen` code by [pukkandan](https://github.com/pukkandan) and [tripulse](https://github.com/tripulse)\n* [audius:artist] Add extractor by [king-millez](https://github.com/king-millez)\n* [parlview] Add extractor by [king-millez](https://github.com/king-millez)\n* [tenplay] Fix extractor by [king-millez](https://github.com/king-millez)\n* [rmcdecouverte] Generalize `_VALID_URL`\n* Add compat-option `no-attach-infojson`\n* Add field `name` for subtitles\n* Ensure `post_extract` and `pre_process` only run once\n* Fix `--check-formats` when there is network error\n* Standardize `write_debug` and `get_param`\n* [options] Alias `--write-comments`, `--no-write-comments`\n* [options] Refactor callbacks\n* [test:download] Only extract enough videos for `playlist_mincount`\n* [extractor] bugfix for when `compat_opts` is not given\n* [build] Fix x86 build by [shirt](https://github.com/shirt-dev)\n* [cleanup] code formatting, youtube tests and readme\n\n### 2021.05.11\n* **Deprecate support for Python versions < 3.6**\n* **Subtitle extraction from manifests** by [fstirlitz](https://github.com/fstirlitz). See [be6202f](https://github.com/yt-dlp/yt-dlp/commit/be6202f12b97858b9d716e608394b51065d0419f) for details\n* **Improve output template:**\n    * Allow slicing lists/strings using `field.start:end:step`\n    * A field can also be used as offset like `field1+num+field2`\n    * A default value can be given using `field|default`\n    * Prevent invalid fields from causing errors\n* **Merge youtube-dl**: Upto [commit/a726009](https://github.com/ytdl-org/youtube-dl/commit/a7260099873acc6dc7d76cafad2f6b139087afd0)\n* **Remove options** `-l`, `-t`, `-A` completely and disable `--auto-number`, `--title`, `--literal`, `--id`\n* [Plugins] Prioritize plugins over standard extractors and prevent plugins from overwriting the standard extractor classes\n* [downloader] Fix `quiet` and `to_stderr`\n* [fragment] Ensure the file is closed on error\n* [fragment] Make sure first segment is not skipped\n* [aria2c] Fix whitespace being stripped off\n* [embedthumbnail] Fix bug where jpeg thumbnails were converted again\n* [FormatSort] Fix for when some formats have quality and others don't\n* [utils] Add `network_exceptions`\n* [utils] Escape URL while sanitizing\n* [ukcolumn] Add Extractor\n* [whowatch] Add extractor by [nao20010128nao](https://github.com/nao20010128nao)\n* [CBS] Improve `_VALID_URL` to support movies\n* [crackle] Improve extraction\n* [curiositystream] Fix collections\n* [francetvinfo] Improve video id extraction\n* [generic] Respect the encoding in manifest\n* [limelight] Obey `allow_unplayable_formats`\n* [mediasite] Generalize URL pattern by [fstirlitz](https://github.com/fstirlitz)\n* [mxplayer] Add MxplayerShowIE by [Ashish0804](https://github.com/Ashish0804)\n* [nebula] Move to nebula.app by [Lamieur](https://github.com/Lamieur)\n* [niconico] Fix HLS formats by [CXwudi](https://github.com/CXwudi), [tsukumijima](https://github.com/tsukumijima), [nao20010128nao](https://github.com/nao20010128nao) and [pukkandan](https://github.com/pukkandan)\n* [niconico] Fix title and thumbnail extraction by [CXwudi](https://github.com/CXwudi)\n* [plutotv] Extract subtitles from manifests\n* [plutotv] Fix format extraction for some urls\n* [rmcdecouverte] Improve `_VALID_URL`\n* [sonyliv] Fix `title` and `series` extraction by [Ashish0804](https://github.com/Ashish0804)\n* [tubi] Raise \"no video formats\" error when video url is empty\n* [youtube:tab] Detect playlists inside community posts\n* [youtube] Add `oembed` to reserved names\n* [zee5] Fix extraction for some URLs by [Hadi0609](https://github.com/Hadi0609)\n* [zee5] Fix py2 compatibility\n* Fix `playlist_index` and add `playlist_autonumber`. See [#302](https://github.com/yt-dlp/yt-dlp/issues/302) for details\n* Add experimental option `--check-formats` to test the URLs before format selection\n* Option `--compat-options` to revert [some of yt-dlp's changes](https://github.com/yt-dlp/yt-dlp#differences-in-default-behavior)\n    * Deprecates `--list-formats-as-table`, `--list-formats-old`\n* Fix number of digits in `%(playlist_index)s`\n* Fix case sensitivity of format selector\n* Revert \"[core] be able to hand over id and title using url_result\"\n* Do not strip out whitespaces in `-o` and `-P`\n* Fix `preload_download_archive` writing verbose message to `stdout`\n* Move option warnings to `YoutubeDL`so that they obey `--no-warnings` and can output colors\n* Py2 compatibility for `FileNotFoundError`\n\n\n### 2021.04.22\n* **Improve output template:**\n    * Objects can be traversed like `%(field.key1.key2)s`\n    * An offset can be added to numeric fields as `%(field+N)s`\n    * Deprecates `--autonumber-start`\n* **Improve `--sub-langs`:**\n    * Treat `--sub-langs` entries as regex\n    * `all` can be used to refer to all the subtitles\n    * language codes can be prefixed with `-` to exclude it\n    * Deprecates `--all-subs`\n* Add option `--ignore-no-formats-error` to ignore the \"no video format\" and similar errors\n* Add option `--skip-playlist-after-errors` to skip the rest of a playlist after a given number of errors are encountered\n* Merge youtube-dl: Upto [commit/7e8b3f9](https://github.com/ytdl-org/youtube-dl/commit/7e8b3f9439ebefb3a3a4e5da9c0bd2b595976438)\n* [downloader] Fix bug in downloader selection\n* [BilibiliChannel] Fix pagination by [nao20010128nao](https://github.com/nao20010128nao) and [pukkandan](https://github.com/pukkandan)\n* [rai] Add support for http formats by [nixxo](https://github.com/nixxo)\n* [TubiTv] Add TubiTvShowIE by [Ashish0804](https://github.com/Ashish0804)\n* [twitcasting] Fix extractor\n* [viu:ott] Fix extractor and support series by [lkho](https://github.com/lkho) and [pukkandan](https://github.com/pukkandan)\n* [youtube:tab] Show unavailable videos in playlists by [coletdjnz](https://github.com/coletdjnz)\n* [youtube:tab] Reload with unavailable videos for all playlists\n* [youtube] Ignore invalid stretch ratio\n* [youtube] Improve channel syncid extraction to support ytcfg by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Standardize API calls for tabs, mixes and search by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Bugfix in `_extract_ytcfg`\n* [mildom:user:vod] Download only necessary amount of pages\n* [mildom] Remove proxy completely by [fstirlitz](https://github.com/fstirlitz)\n* [go] Fix `_VALID_URL`\n* [MetadataFromField] Improve regex and add tests\n* [Exec] Ensure backward compatibility when the command contains `%`\n* [extractor] Fix inconsistent use of `report_warning`\n* Ensure `mergeall` selects best format when multistreams are disabled\n* Improve the yt-dlp.sh script by [fstirlitz](https://github.com/fstirlitz)\n* [lazy_extractor] Do not load plugins\n* [ci] Disable fail-fast\n* [docs] Clarify which deprecated options still work\n* [docs] Fix typos\n\n\n### 2021.04.11\n* Add option `--convert-thumbnails` (only jpg currently supported)\n* Format selector `mergeall` to download and merge all formats\n* Pass any field to `--exec` using similar syntax to output template\n* Choose downloader for each protocol using `--downloader PROTO:NAME`\n    * Alias `--downloader` for `--external-downloader`\n    * Added `native` as an option for the downloader\n* Merge youtube-dl: Upto [commit/4fb25ff](https://github.com/ytdl-org/youtube-dl/commit/4fb25ff5a3be5206bb72e5c4046715b1529fb2c7) (except vimeo)\n* [DiscoveryPlusIndia] Add DiscoveryPlusIndiaShowIE by [Ashish0804](https://github.com/Ashish0804)\n* [NFHSNetwork] Add extractor by [llacb47](https://github.com/llacb47)\n* [nebula] Add extractor (watchnebula.com) by [hheimbuerger](https://github.com/hheimbuerger)\n* [nitter] Fix extraction of reply tweets and update instance list by [B0pol](https://github.com/B0pol)\n* [nitter] Fix thumbnails by [B0pol](https://github.com/B0pol)\n* [youtube] Fix thumbnail URL\n* [youtube] Parse API parameters from initial webpage by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Extract comments' approximate timestamp by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Fix alert extraction\n* [bilibili] Fix uploader\n* [utils] Add `datetime_from_str` and `datetime_add_months` by [coletdjnz](https://github.com/coletdjnz)\n* Run some `postprocessors` before actual download\n* Improve argument parsing for `-P`, `-o`, `-S`\n* Fix some `m3u8` not obeying `--allow-unplayable-formats`\n* Fix default of `dynamic_mpd`\n* Deprecate `--all-formats`, `--include-ads`, `--hls-prefer-native`, `--hls-prefer-ffmpeg`\n* [docs] Improvements\n\n### 2021.04.03\n* Merge youtube-dl: Upto [commit/654b4f4](https://github.com/ytdl-org/youtube-dl/commit/654b4f4ff2718f38b3182c1188c5d569c14cc70a)\n* Ability to set a specific field in the file's metadata using `--parse-metadata`\n* Ability to select n'th best format like `-f bv*.2`\n* [DiscoveryPlus] Add discoveryplus.in\n* [la7] Add podcasts and podcast playlists by [nixxo](https://github.com/nixxo)\n* [mildom] Update extractor with current proxy by [nao20010128nao](https://github.com/nao20010128nao)\n* [ard:mediathek] Fix video id extraction\n* [generic] Detect Invidious' link element\n* [youtube] Show premium state in `availability` by [coletdjnz](https://github.com/coletdjnz)\n* [viewsource] Add extractor to handle `view-source:`\n* [sponskrub] Run before embedding thumbnail\n* [docs] Improve `--parse-metadata` documentation\n\n\n### 2021.03.24.1\n* Revert [commit/8562218](https://github.com/ytdl-org/youtube-dl/commit/8562218350a79d4709da8593bb0c538aa0824acf)\n\n### 2021.03.24\n* Merge youtube-dl: Upto 2021.03.25 ([commit/8562218](https://github.com/ytdl-org/youtube-dl/commit/8562218350a79d4709da8593bb0c538aa0824acf))\n* Parse metadata from multiple fields using `--parse-metadata`\n* Ability to load playlist infojson using `--load-info-json`\n* Write current epoch to infojson when using `--no-clean-infojson`\n* [youtube_live_chat] fix bug when trying to set cookies\n* [niconico] Fix for when logged in by [CXwudi](https://github.com/CXwudi) and [xtkoba](https://github.com/xtkoba)\n* [linuxacadamy] Fix login\n\n\n### 2021.03.21\n* Merge youtube-dl: Upto [commit/7e79ba7](https://github.com/ytdl-org/youtube-dl/commit/7e79ba7dd6e6649dd2ce3a74004b2044f2182881)\n* Option `--no-clean-infojson` to keep private keys in the infojson\n* [aria2c] Support retry/abort unavailable fragments by [damianoamatruda](https://github.com/damianoamatruda)\n* [aria2c] Better default arguments\n* [movefiles] Fix bugs and make more robust\n* [formatSort] Fix `quality` being ignored\n* [splitchapters] Fix for older ffmpeg\n* [sponskrub] Pass proxy to sponskrub\n* Make sure `post_hook` gets the final filename\n* Recursively remove any private keys from infojson\n* Embed video URL metadata inside `mp4` by [damianoamatruda](https://github.com/damianoamatruda) and [pukkandan](https://github.com/pukkandan)\n* Merge `webm` formats into `mkv` if thumbnails are to be embedded by [damianoamatruda](https://github.com/damianoamatruda)\n* Use headers and cookies when downloading subtitles by [damianoamatruda](https://github.com/damianoamatruda)\n* Parse resolution in info dictionary by [damianoamatruda](https://github.com/damianoamatruda)\n* More consistent warning messages by [damianoamatruda](https://github.com/damianoamatruda) and [pukkandan](https://github.com/pukkandan)\n* [docs] Add deprecated options and aliases in readme\n* [docs] Fix some minor mistakes\n\n* [niconico] Partial fix adapted from [animelover1984/youtube-dl@b5eff52](https://github.com/animelover1984/youtube-dl/commit/b5eff52dd9ed5565672ea1694b38c9296db3fade) (login and smile formats still don't work)\n* [niconico] Add user extractor by [animelover1984](https://github.com/animelover1984)\n* [bilibili] Add anthology support by [animelover1984](https://github.com/animelover1984)\n* [amcnetworks] Fix extractor by [2ShedsJackson](https://github.com/2ShedsJackson)\n* [stitcher] Merge from youtube-dl by [nixxo](https://github.com/nixxo)\n* [rcs] Improved extraction by [nixxo](https://github.com/nixxo)\n* [linuxacadamy] Improve regex\n* [youtube] Show if video is `private`, `unlisted` etc in info (`availability`) by [coletdjnz](https://github.com/coletdjnz) and [pukkandan](https://github.com/pukkandan)\n* [youtube] bugfix for channel playlist extraction\n* [nbc] Improve metadata extraction by [2ShedsJackson](https://github.com/2ShedsJackson)\n\n\n### 2021.03.15\n* **Split video by chapters**: using option `--split-chapters`\n    * The output file of the split files can be set with `-o`/`-P` using the prefix `chapter:`\n    * Additional keys `section_title`, `section_number`, `section_start`, `section_end` are available in the output template\n* **Parallel fragment downloads** by [shirt](https://github.com/shirt-dev)\n    * Use option `--concurrent-fragments` (`-N`) to set the number of threads (default 1)\n* Merge youtube-dl: Upto [commit/3be0980](https://github.com/ytdl-org/youtube-dl/commit/3be098010f667b14075e3dfad1e74e5e2becc8ea)\n* [zee5] Add Show Extractor by [Ashish0804](https://github.com/Ashish0804) and [pukkandan](https://github.com/pukkandan)\n* [rai] fix drm check [nixxo](https://github.com/nixxo)\n* [wimtv] Add extractor by [nixxo](https://github.com/nixxo)\n* [mtv] Add mtv.it and extract series metadata by [nixxo](https://github.com/nixxo)\n* [pluto.tv] Add extractor by [kevinoconnor7](https://github.com/kevinoconnor7)\n* [youtube] Rewrite comment extraction by [coletdjnz](https://github.com/coletdjnz)\n* [embedthumbnail] Set mtime correctly\n* Refactor some postprocessor/downloader code by [pukkandan](https://github.com/pukkandan) and [shirt](https://github.com/shirt-dev)\n\n\n### 2021.03.07\n* [youtube] Fix history, mixes, community pages and trending by [pukkandan](https://github.com/pukkandan) and [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Fix private feeds/playlists on multi-channel accounts by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Extract alerts from continuation by [coletdjnz](https://github.com/coletdjnz)\n* [cbs] Add support for ParamountPlus by [shirt](https://github.com/shirt-dev)\n* [mxplayer] Rewrite extractor with show support by [pukkandan](https://github.com/pukkandan) and [Ashish0804](https://github.com/Ashish0804)\n* [gedi] Improvements from youtube-dl by [nixxo](https://github.com/nixxo)\n* [vimeo] Fix videos with password by [teesid](https://github.com/teesid)\n* [lbry] Support `lbry://` url by [nixxo](https://github.com/nixxo)\n* [bilibili] Change `Accept` header by [pukkandan](https://github.com/pukkandan) and [animelover1984](https://github.com/animelover1984)\n* [trovo] Pass origin header\n* [rai] Check for DRM by [nixxo](https://github.com/nixxo)\n* [downloader] Fix bug for `ffmpeg`/`httpie`\n* [update] Fix updater removing the executable bit on some UNIX distros\n* [update] Fix current build hash for UNIX\n* [docs] Include wget/curl/aria2c install instructions for Unix by [Ashish0804](https://github.com/Ashish0804)\n* Fix some videos downloading with `m3u8` extension\n* Remove \"fixup is ignored\" warning when fixup wasn't passed by user\n\n\n### 2021.03.03.2\n* [build] Fix bug\n\n### 2021.03.03\n* [youtube] Use new browse API for continuation page extraction by [coletdjnz](https://github.com/coletdjnz) and [pukkandan](https://github.com/pukkandan)\n* Fix HLS playlist downloading by [shirt](https://github.com/shirt-dev)\n* Merge youtube-dl: Upto [2021.03.03](https://github.com/ytdl-org/youtube-dl/releases/tag/2021.03.03)\n* [mtv] Fix extractor\n* [nick] Fix extractor by [DennyDai](https://github.com/DennyDai)\n* [mxplayer] Add new extractor by [codeasashu](https://github.com/codeasashu)\n* [youtube] Throw error when `--extractor-retries` are exhausted\n* Reduce default of `--extractor-retries` to 3\n* Fix packaging bugs by [hseg](https://github.com/hseg)\n\n\n### 2021.03.01\n* Allow specifying path in `--external-downloader`\n* Add option `--sleep-requests` to sleep b/w requests\n* Add option `--extractor-retries` to retry on known extractor errors\n* Extract comments only when needed\n* `--get-comments` doesn't imply `--write-info-json` if `-J`, `-j` or `--print-json` are used\n* Fix `get_executable_path` by [shirt](https://github.com/shirt-dev)\n* [youtube] Retry on more known errors than just HTTP-5xx\n* [youtube] Fix inconsistent `webpage_url`\n* [tennistv] Fix format sorting\n* [bilibiliaudio] Recognize the file as audio-only\n* [hrfensehen] Fix wrong import\n* [viki] Fix viki play pass authentication by [RobinD42](https://github.com/RobinD42)\n* [readthedocs] Improvements by [shirt](https://github.com/shirt-dev)\n* [hls] Fix bug with m3u8 format extraction\n* [hls] Enable `--hls-use-mpegts` by default when downloading live-streams\n* [embedthumbnail] Fix bug with deleting original thumbnail\n* [build] Fix completion paths, zsh pip completion install by [hseg](https://github.com/hseg)\n* [ci] Disable download tests unless specifically invoked\n* Cleanup some code and fix typos\n\n\n### 2021.02.24\n* Moved project to an organization [yt-dlp](https://github.com/yt-dlp)\n* **Completely changed project name to yt-dlp** by [Pccode66](https://github.com/Pccode66) and [pukkandan](https://github.com/pukkandan)\n    * Also, `youtube-dlc` config files are no longer loaded\n* Merge youtube-dl: Upto [commit/4460329](https://github.com/ytdl-org/youtube-dl/commit/44603290e5002153f3ebad6230cc73aef42cc2cd) (except tmz, gedi)\n* [Readthedocs](https://yt-dlp.readthedocs.io) support by [shirt](https://github.com/shirt-dev)\n* [youtube] Show if video was a live stream in info (`was_live`)\n* [Zee5] Add new extractor by [Ashish0804](https://github.com/Ashish0804) and [pukkandan](https://github.com/pukkandan)\n* [jwplatform] Add support for `hyland.com`\n* [tennistv] Fix extractor\n* [hls] Support media initialization by [shirt](https://github.com/shirt-dev)\n* [hls] Added options `--hls-split-discontinuity` to better support media discontinuity by [shirt](https://github.com/shirt-dev)\n* [ffmpeg] Allow passing custom arguments before -i using `--ppa \"ffmpeg_i1:ARGS\"` syntax\n* Fix `--windows-filenames` removing `/` from UNIX paths\n* [hls] Show warning if pycryptodome is not found\n* [docs] Improvements\n    * Fix documentation of `Extractor Options`\n    * Document `all` in format selection\n    * Document `playable_in_embed` in output templates\n\n\n### 2021.02.19\n* Merge youtube-dl: Upto [commit/cf2dbec](https://github.com/ytdl-org/youtube-dl/commit/cf2dbec6301177a1fddf72862de05fa912d9869d) (except kakao)\n* [viki] Fix extractor\n* [niconico] Extract `channel` and `channel_id` by [kurumigi](https://github.com/kurumigi)\n* [youtube] Multiple page support for hashtag URLs\n* [youtube] Add more invidious instances\n* [youtube] Fix comment extraction when comment text is empty\n* Option `--windows-filenames` to force use of windows compatible filenames\n* [ExtractAudio] Bugfix\n* Don't raise `parser.error` when exiting for update\n* [MoveFiles] Fix for when merger can't run\n* Changed `--trim-file-name` to `--trim-filenames` to be similar to related options\n* Format Sort improvements:\n    * Prefer `vp9.2` more than other `vp9` codecs\n    * Remove forced priority of `quality`\n    * Remove unnecessary `field_preference` and misuse of `preference` from extractors\n* Build improvements:\n    * Fix hash output by [shirt](https://github.com/shirt-dev)\n    * Lock Python package versions for x86 and use `wheels` by [shirt](https://github.com/shirt-dev)\n    * Exclude `vcruntime140.dll` from UPX by [jbruchon](https://github.com/jbruchon)\n    * Set version number based on UTC time, not local time\n    * Publish on PyPi only if token is set\n* [docs] Better document `--prefer-free-formats` and add `--no-prefer-free-format`\n\n\n### 2021.02.15\n* Merge youtube-dl: Upto [2021.02.10](https://github.com/ytdl-org/youtube-dl/releases/tag/2021.02.10) (except archive.org)\n* [niconico] Improved extraction and support encrypted/SMILE movies by [kurumigi](https://github.com/kurumigi), [tsukumijima](https://github.com/tsukumijima), [bbepis](https://github.com/bbepis), [pukkandan](https://github.com/pukkandan)\n* Fix HLS AES-128 with multiple keys in external downloaders by [shirt](https://github.com/shirt-dev)\n* [youtube_live_chat] Fix by using POST API by [siikamiika](https://github.com/siikamiika)\n* [rumble] Add support for video page\n* Option `--allow-unplayable-formats` to allow downloading unplayable video formats\n* [ExtractAudio] Don't re-encode when file is already in a common audio format\n* [youtube] Fix search continuations\n* [youtube] Fix for new accounts\n* Improve build/updater: by [pukkandan](https://github.com/pukkandan) and [shirt](https://github.com/shirt-dev)\n    * Fix SHA256 calculation in build and implement hash checking for updater\n    * Exit immediately in windows once the update process starts\n    * Fix updater for `x86.exe`\n    * Updater looks for both `yt-dlp` and `youtube-dlc` in releases for future-proofing\n    * Change optional dependency to `pycryptodome`\n* Fix issue with unicode filenames in aria2c by [shirt](https://github.com/shirt-dev)\n* Fix `allow_playlist_files` not being correctly passed through\n* Fix for empty HTTP head requests by [shirt](https://github.com/shirt-dev)\n* Fix `get_executable_path` in UNIX\n* [sponskrub] Print ffmpeg output and errors to terminal\n* `__real_download` should be false when ffmpeg unavailable and no download\n* Show `exe`/`zip`/`source` and 32/64bit in verbose message\n\n\n### 2021.02.09\n* **aria2c support for DASH/HLS**: by [shirt](https://github.com/shirt-dev)\n* **Implement Updater** (`-U`) by [shirt](https://github.com/shirt-dev)\n* [youtube] Fix comment extraction\n* [youtube_live_chat] Improve extraction\n* [youtube] Fix for channel URLs sometimes not downloading all pages\n* [aria2c] Changed default arguments to `--console-log-level=warn --summary-interval=0 --file-allocation=none -x16 -j16 -s16`\n* Add fallback for thumbnails\n* [embedthumbnail] Keep original thumbnail after conversion if write_thumbnail given\n* [embedsubtitle] Keep original subtitle after conversion if write_subtitles given\n* [pyinst.py] Move back to root dir\n* [youtube] Simplified renderer parsing and bugfixes\n* [movefiles] Fix compatibility with python2\n* [remuxvideo] Fix validation of conditional remux\n* [sponskrub] Don't raise error when the video does not exist\n* [docs] Crypto is an optional dependency\n\n\n### 2021.02.04\n* Merge youtube-dl: Upto [2021.02.04.1](https://github.com/ytdl-org/youtube-dl/releases/tag/2021.02.04.1)\n* **Date/time formatting in output template:**\n    * You can use [`strftime`](https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes) to format date/time fields. Example: `%(upload_date>%Y-%m-%d)s`\n* **Multiple output templates:**\n    * Separate output templates can be given for the different metadata files by using `-o TYPE:TEMPLATE`\n    * The allowed types are: `subtitle|thumbnail|description|annotation|infojson|pl_description|pl_infojson`\n* [youtube] More metadata extraction for channel/playlist URLs (channel, uploader, thumbnail, tags)\n* New option `--no-write-playlist-metafiles` to prevent writing playlist metadata files\n* [audius] Fix extractor\n* [youtube_live_chat] Fix `parse_yt_initial_data` and add `fragment_retries`\n* [postprocessor] Raise errors correctly\n* [metadatafromtitle] Fix bug when extracting data from numeric fields\n* Fix issue with overwriting files\n* Fix \"Default format spec\" appearing in quiet mode\n* [FormatSort] Allow user to prefer av01 over vp9 (The default is still vp9)\n* [FormatSort] fix bug where `quality` had more priority than `hasvid`\n* [pyinst] Automatically detect Python architecture and working directory\n* Strip out internal fields such as `_filename` from infojson\n\n\n### 2021.01.29\n* **Features from [animelover1984/youtube-dl](https://github.com/animelover1984/youtube-dl)**: by [animelover1984](https://github.com/animelover1984) and [bbepis](https://github.com/bbepis)\n    * Add `--get-comments`\n    * [youtube] Extract comments\n    * [billibilli] Added BiliBiliSearchIE, BilibiliChannelIE\n    * [billibilli] Extract comments\n    * [billibilli] Better video extraction\n    * Write playlist data to infojson\n    * [FFmpegMetadata] Embed infojson inside the video\n    * [EmbedThumbnail] Try embedding in mp4 using ffprobe and `-disposition`\n    * [EmbedThumbnail] Treat mka like mkv and mov like mp4\n    * [EmbedThumbnail] Embed in ogg/opus\n    * [VideoRemuxer] Conditionally remux video\n    * [VideoRemuxer] Add `-movflags +faststart` when remuxing to mp4\n    * [ffmpeg] Print entire stderr in verbose when there is error\n    * [EmbedSubtitle] Warn when embedding ass in mp4\n    * [anvato] Use NFLTokenGenerator if possible\n* **Parse additional metadata**: New option `--parse-metadata` to extract additional metadata from existing fields\n    * The extracted fields can be used in `--output`\n    * Deprecated `--metadata-from-title`\n* [Audius] Add extractor\n* [youtube] Extract playlist description and write it to `.description` file\n* Detect existing files even when using `recode`/`remux` (`extract-audio` is partially fixed)\n* Fix wrong user config from v2021.01.24\n* [youtube] Report error message from youtube as error instead of warning\n* [FormatSort] Fix some fields not sorting from v2021.01.24\n* [postprocessor] Deprecate `avconv`/`avprobe`.  All current functionality is left untouched. But don't expect any new features to work with avconv\n* [postprocessor] fix `write_debug` to not throw error when there is no `_downloader`\n* [movefiles] Don't give \"cant find\" warning when move is unnecessary\n* Refactor `update-version`, `pyinst.py` and related files\n* [ffmpeg] Document more formats that are supported for remux/recode\n\n\n### 2021.01.24\n* Merge youtube-dl: Upto [2021.01.24](https://github.com/ytdl-org/youtube-dl/releases/tag/2021.01.16)\n* Plugin support ([documentation](https://github.com/yt-dlp/yt-dlp#plugins))\n* **Multiple paths**: New option `-P`/`--paths` to give different paths for different types of files\n    * The syntax is `-P \"type:path\" -P \"type:path\"`\n    * Valid types are: home, temp, description, annotation, subtitle, infojson, thumbnail\n    * Additionally, configuration file is taken from home directory or current directory\n* Allow passing different arguments to different external downloaders\n* [mildom] Add extractor by [nao20010128nao](https://github.com/nao20010128nao)\n* Warn when using old style `--external-downloader-args` and `--post-processor-args`\n* Fix `--no-overwrite` when using `--write-link`\n* [sponskrub] Output `unrecognized argument` error message correctly\n* [cbs] Make failure to extract title non-fatal\n* Fix typecasting when pre-checking archive\n* Fix issue with setting title on UNIX\n* Deprecate redundant aliases in `formatSort`. The aliases remain functional for backward compatibility, but will be left undocumented\n* [tests] Fix test_post_hooks\n* [tests] Split core and download tests\n\n\n### 2021.01.20\n* [TrovoLive] Add extractor (only VODs)\n* [pokemon] Add `/#/player` URLs\n* Improved parsing of multiple postprocessor-args, add `--ppa` as alias\n* [EmbedThumbnail] Simplify embedding in mkv\n* [sponskrub] Encode filenames correctly, better debug output and error message\n* [readme] Cleanup options\n\n\n### 2021.01.16\n* Merge youtube-dl: Upto [2021.01.16](https://github.com/ytdl-org/youtube-dl/releases/tag/2021.01.16)\n* **Configuration files:**\n    * Portable configuration file: `./yt-dlp.conf`\n    * Allow the configuration files to be named `yt-dlp` instead of `youtube-dlc`. See [this](https://github.com/yt-dlp/yt-dlp#configuration) for details\n* Add PyPI release\n\n\n### 2021.01.14\n* Added option `--break-on-reject`\n* [roosterteeth.com] Fix for bonus episodes by [Zocker1999NET](https://github.com/Zocker1999NET)\n* [tiktok] Fix for when share_info is empty\n* [EmbedThumbnail] Fix bug due to incorrect function name\n* [docs] Changed sponskrub links to point to [yt-dlp/SponSkrub](https://github.com/yt-dlp/SponSkrub) since I am now providing both linux and windows releases\n* [docs] Change all links to correctly point to new fork URL\n* [docs] Fixes typos\n\n\n### 2021.01.12\n* [roosterteeth.com] Add subtitle support by [samiksome](https://github.com/samiksome)\n* Added `--force-overwrites`, `--no-force-overwrites` by [alxnull](https://github.com/alxnull)\n* Changed fork name to `yt-dlp`\n* Fix typos by [FelixFrog](https://github.com/FelixFrog)\n* [ci] Option to skip\n* [changelog] Added unreleased changes in blackjack4494/yt-dlc\n\n\n### 2021.01.10\n* [archive.org] Fix extractor and add support for audio and playlists by [wporr](https://github.com/wporr)\n* [Animelab] Added by [mariuszskon](https://github.com/mariuszskon)\n* [youtube:search] Fix view_count by [ohnonot](https://github.com/ohnonot)\n* [youtube] Show if video is embeddable in info (`playable_in_embed`)\n* Update version badge automatically in README\n* Enable `test_youtube_search_matching`\n* Create `to_screen` and similar functions in postprocessor/common\n\n\n### 2021.01.09\n* [youtube] Fix bug in automatic caption extraction\n* Add `post_hooks` to YoutubeDL by [alexmerkel](https://github.com/alexmerkel)\n* Batch file enumeration improvements by [glenn-slayden](https://github.com/glenn-slayden)\n* Stop immediately when reaching `--max-downloads` by [glenn-slayden](https://github.com/glenn-slayden)\n* Fix incorrect ANSI sequence for restoring console-window title by [glenn-slayden](https://github.com/glenn-slayden)\n* Kill child processes when yt-dlc is killed by [Unrud](https://github.com/Unrud)\n\n\n### 2021.01.08\n* Merge youtube-dl: Upto [2021.01.08](https://github.com/ytdl-org/youtube-dl/releases/tag/2021.01.08) except stitcher ([1](https://github.com/ytdl-org/youtube-dl/commit/bb38a1215718cdf36d73ff0a7830a64cd9fa37cc), [2](https://github.com/ytdl-org/youtube-dl/commit/a563c97c5cddf55f8989ed7ea8314ef78e30107f))\n* Moved changelog to separate file\n\n\n### 2021.01.07-1\n* [Akamai] fix by [nixxo](https://github.com/nixxo)\n* [Tiktok] merge youtube-dl tiktok extractor by [GreyAlien502](https://github.com/GreyAlien502)\n* [vlive] add support for playlists by [kyuyeunk](https://github.com/kyuyeunk)\n* [youtube_live_chat] make sure playerOffsetMs is positive by [siikamiika](https://github.com/siikamiika)\n* Ignore extra data streams in ffmpeg by [jbruchon](https://github.com/jbruchon)\n* Allow passing different arguments to different postprocessors using `--postprocessor-args`\n* Deprecated `--sponskrub-args`. The same can now be done using `--postprocessor-args \"sponskrub:<args>\"`\n* [CI] Split tests into core-test and full-test\n\n\n### 2021.01.07\n* Removed priority of `av01` codec in `-S` since most devices don't support it yet\n* Added `duration_string` to be used in `--output`\n* Created First Release\n\n\n### 2021.01.05-1\n* **Changed defaults:**\n    * Enabled `--ignore`\n    * Disabled `--video-multistreams` and `--audio-multistreams`\n    * Changed default format selection to `bv*+ba/b` when `--audio-multistreams` is disabled\n    * Changed default format sort order to `res,fps,codec,size,br,asr,proto,ext,has_audio,source,format_id`\n    * Changed `webm` to be more preferable than `flv` in format sorting\n    * Changed default output template to `%(title)s [%(id)s].%(ext)s`\n    * Enabled `--list-formats-as-table`\n\n\n### 2021.01.05\n* **Format Sort:** Added `--format-sort` (`-S`), `--format-sort-force` (`--S-force`) - See [Sorting Formats](README.md#sorting-formats) for details\n* **Format Selection:** See [Format Selection](README.md#format-selection) for details\n    * New format selectors: `best*`, `worst*`, `bestvideo*`, `bestaudio*`, `worstvideo*`, `worstaudio*`\n    * Changed video format sorting to show video only files and video+audio files together\n    * Added `--video-multistreams`, `--no-video-multistreams`, `--audio-multistreams`, `--no-audio-multistreams`\n    * Added `b`,`w`,`v`,`a` as alias for `best`, `worst`, `video` and `audio` respectively\n* Shortcut Options: Added `--write-link`, `--write-url-link`, `--write-webloc-link`, `--write-desktop-link` by [h-h-h-h](https://github.com/h-h-h-h) - See [Internet Shortcut Options](README.md#internet-shortcut-options) for details\n* **Sponskrub integration:** Added `--sponskrub`, `--sponskrub-cut`, `--sponskrub-force`, `--sponskrub-location`, `--sponskrub-args` - See [SponSkrub Options](README.md#sponskrub-sponsorblock-options) for details\n* Added `--force-download-archive` (`--force-write-archive`) by [h-h-h-h](https://github.com/h-h-h-h)\n* Added `--list-formats-as-table`,  `--list-formats-old`\n* **Negative Options:** Makes it possible to negate most boolean options by adding a `no-` to the switch. Usefull when you want to reverse an option that is defined in a config file\n    * Added `--no-ignore-dynamic-mpd`, `--no-allow-dynamic-mpd`, `--allow-dynamic-mpd`, `--youtube-include-hls-manifest`, `--no-youtube-include-hls-manifest`, `--no-youtube-skip-hls-manifest`, `--no-download`, `--no-download-archive`, `--resize-buffer`, `--part`, `--mtime`, `--no-keep-fragments`, `--no-cookies`, `--no-write-annotations`, `--no-write-info-json`, `--no-write-description`, `--no-write-thumbnail`, `--youtube-include-dash-manifest`, `--post-overwrites`, `--no-keep-video`, `--no-embed-subs`, `--no-embed-thumbnail`, `--no-add-metadata`, `--no-include-ads`, `--no-write-sub`, `--no-write-auto-sub`, `--no-playlist-reverse`, `--no-restrict-filenames`, `--youtube-include-dash-manifest`, `--no-format-sort-force`, `--flat-videos`, `--no-list-formats-as-table`, `--no-sponskrub`, `--no-sponskrub-cut`, `--no-sponskrub-force`\n    * Renamed: `--write-subs`, `--no-write-subs`, `--no-write-auto-subs`, `--write-auto-subs`. Note that these can still be used without the ending \"s\"\n* Relaxed validation for format filters so that any arbitrary field can be used\n* Fix for embedding thumbnail in mp3 by [pauldubois98](https://github.com/pauldubois98) ([ytdl-org/youtube-dl#21569](https://github.com/ytdl-org/youtube-dl/pull/21569))\n* Make Twitch Video ID output from Playlist and VOD extractor same. This is only a temporary fix\n* Merge youtube-dl: Upto [2021.01.03](https://github.com/ytdl-org/youtube-dl/commit/8e953dcbb10a1a42f4e12e4e132657cb0100a1f8) - See [blackjack4494/yt-dlc#280](https://github.com/blackjack4494/yt-dlc/pull/280) for details\n    * Extractors [tiktok](https://github.com/ytdl-org/youtube-dl/commit/fb626c05867deab04425bad0c0b16b55473841a2) and [hotstar](https://github.com/ytdl-org/youtube-dl/commit/bb38a1215718cdf36d73ff0a7830a64cd9fa37cc) have not been merged\n* Cleaned up the fork for public use\n\n\n**Note**: All uncredited changes above this point are authored by [pukkandan](https://github.com/pukkandan)\n\n### Unreleased changes in [blackjack4494/yt-dlc](https://github.com/blackjack4494/yt-dlc)\n* Updated to youtube-dl release 2020.11.26 by [pukkandan](https://github.com/pukkandan)\n* Youtube improvements by [pukkandan](https://github.com/pukkandan)\n    * Implemented all Youtube Feeds (ytfav, ytwatchlater, ytsubs, ythistory, ytrec) and SearchURL\n    * Fix some improper Youtube URLs\n    * Redirect channel home to /video\n    * Print youtube's warning message\n    * Handle Multiple pages for feeds better\n* [youtube] Fix ytsearch not returning results sometimes due to promoted content by [coletdjnz](https://github.com/coletdjnz)\n* [youtube] Temporary fix for automatic captions - disable json3 by [blackjack4494](https://github.com/blackjack4494)\n* Add --break-on-existing by [gergesh](https://github.com/gergesh)\n* Pre-check video IDs in the archive before downloading by [pukkandan](https://github.com/pukkandan)\n* [bitwave.tv] New extractor by [lorpus](https://github.com/lorpus)\n* [Gedi] Add extractor by [nixxo](https://github.com/nixxo)\n* [Rcs] Add new extractor by [nixxo](https://github.com/nixxo)\n* [skyit] New skyitalia extractor by [nixxo](https://github.com/nixxo)\n* [france.tv] Fix thumbnail URL by [renalid](https://github.com/renalid)\n* [ina] support mobile links by [B0pol](https://github.com/B0pol)\n* [instagram] Fix thumbnail extractor by [nao20010128nao](https://github.com/nao20010128nao)\n* [SouthparkDe] Support for English URLs by [xypwn](https://github.com/xypwn)\n* [spreaker] fix SpreakerShowIE test URL by [pukkandan](https://github.com/pukkandan)\n* [Vlive] Fix playlist handling when downloading a channel by [kyuyeunk](https://github.com/kyuyeunk)\n* [tmz] Fix extractor by [diegorodriguezv](https://github.com/diegorodriguezv)\n* [ITV] BTCC URL update by [WolfganP](https://github.com/WolfganP)\n* [generic] Detect embedded bitchute videos by [pukkandan](https://github.com/pukkandan)\n* [generic] Extract embedded youtube and twitter videos by [diegorodriguezv](https://github.com/diegorodriguezv)\n* [ffmpeg] Ensure all streams are copied by [pukkandan](https://github.com/pukkandan)\n* [embedthumbnail] Fix for os.rename error by [pukkandan](https://github.com/pukkandan)\n* make_win.bat: don't use UPX to pack vcruntime140.dll by [jbruchon](https://github.com/jbruchon)\n\n\n### Changelog of [blackjack4494/yt-dlc](https://github.com/blackjack4494/yt-dlc) till release 2020.11.11-3\n\n**Note**: This was constructed from the merge commit messages and may not be entirely accurate\n\n* [bandcamp] fix failing test. remove subclass hack by [insaneracist](https://github.com/insaneracist)\n* [bandcamp] restore album downloads by [insaneracist](https://github.com/insaneracist)\n* [francetv] fix extractor by [Surkal](https://github.com/Surkal)\n* [gdcvault] fix extractor by [blackjack4494](https://github.com/blackjack4494)\n* [hotstar] Move to API v1 by [theincognito-inc](https://github.com/theincognito-inc)\n* [hrfernsehen] add extractor by [blocktrron](https://github.com/blocktrron)\n* [kakao] new apis by [blackjack4494](https://github.com/blackjack4494)\n* [la7] fix missing protocol by [nixxo](https://github.com/nixxo)\n* [mailru] removed escaped braces, use urljoin, added tests by [nixxo](https://github.com/nixxo)\n* [MTV/Nick] universal mgid extractor + fix nick.de feed by [blackjack4494](https://github.com/blackjack4494)\n* [mtv] Fix a missing match_id by [nixxo](https://github.com/nixxo)\n* [Mtv] updated extractor logic & more by [blackjack4494](https://github.com/blackjack4494)\n* [ndr] support Daserste ndr by [blackjack4494](https://github.com/blackjack4494)\n* [Netzkino] Only use video id to find metadata by [TobiX](https://github.com/TobiX)\n* [newgrounds] fix: video download by [insaneracist](https://github.com/insaneracist)\n* [nitter] Add new extractor by [B0pol](https://github.com/B0pol)\n* [soundcloud] Resolve audio/x-wav by [tfvlrue](https://github.com/tfvlrue)\n* [soundcloud] sets pattern and tests by [blackjack4494](https://github.com/blackjack4494)\n* [SouthparkDE/MTV] another mgid extraction (mtv_base) feed url updated by [blackjack4494](https://github.com/blackjack4494)\n* [StoryFire] Add new extractor by [sgstair](https://github.com/sgstair)\n* [twitch] by [geauxlo](https://github.com/geauxlo)\n* [videa] Adapt to updates by [adrianheine](https://github.com/adrianheine)\n* [Viki] subtitles, formats by [blackjack4494](https://github.com/blackjack4494)\n* [vlive] fix extractor for revamped website by [exwm](https://github.com/exwm)\n* [xtube] fix extractor by [insaneracist](https://github.com/insaneracist)\n* [youtube] Convert subs when download is skipped by [blackjack4494](https://github.com/blackjack4494)\n* [youtube] Fix age gate detection by [random-nick](https://github.com/random-nick)\n* [youtube] fix yt-only playback when age restricted/gated - requires cookies by [blackjack4494](https://github.com/blackjack4494)\n* [youtube] fix: extract artist metadata from ytInitialData by [insaneracist](https://github.com/insaneracist)\n* [youtube] fix: extract mix playlist ids from ytInitialData by [insaneracist](https://github.com/insaneracist)\n* [youtube] fix: mix playlist title by [insaneracist](https://github.com/insaneracist)\n* [youtube] fix: Youtube Music playlists by [insaneracist](https://github.com/insaneracist)\n* [Youtube] Fixed problem with new youtube player by [peet1993](https://github.com/peet1993)\n* [zoom] Fix url parsing for url's containing /share/ and dots by [Romern](https://github.com/Romern)\n* [zoom] new extractor by [insaneracist](https://github.com/insaneracist)\n* abc by [adrianheine](https://github.com/adrianheine)\n* Added Comcast_SSO fix by [merval](https://github.com/merval)\n* Added DRM logic to brightcove by [merval](https://github.com/merval)\n* Added regex for ABC.com site. by [kucksdorfs](https://github.com/kucksdorfs)\n* alura by [hugohaa](https://github.com/hugohaa)\n* Arbitrary merges by [fstirlitz](https://github.com/fstirlitz)\n* ard.py_add_playlist_support by [martin54](https://github.com/martin54)\n* Bugfix/youtube/chapters fix extractor by [gschizas](https://github.com/gschizas)\n* bugfix_youtube_like_extraction by [RedpointsBots](https://github.com/RedpointsBots)\n* Create build workflow by [blackjack4494](https://github.com/blackjack4494)\n* deezer by [LucBerge](https://github.com/LucBerge)\n* Detect embedded bitchute videos by [pukkandan](https://github.com/pukkandan)\n* Don't install tests by [l29ah](https://github.com/l29ah)\n* Don't try to embed/convert json subtitles generated by [youtube](https://github.com/youtube) livechat by [pukkandan](https://github.com/pukkandan)\n* Doodstream by [sxvghd](https://github.com/sxvghd)\n* duboku by [lkho](https://github.com/lkho)\n* elonet by [tpikonen](https://github.com/tpikonen)\n* ext/remuxe-video by [Zocker1999NET](https://github.com/Zocker1999NET)\n* fall-back to the old way to fetch subtitles, if needed by [RobinD42](https://github.com/RobinD42)\n* feature_subscriber_count by [RedpointsBots](https://github.com/RedpointsBots)\n* Fix external downloader when there is no http_header by [pukkandan](https://github.com/pukkandan)\n* Fix issue triggered by [tubeup](https://github.com/tubeup) by [nsapa](https://github.com/nsapa)\n* Fix YoutubePlaylistsIE by [ZenulAbidin](https://github.com/ZenulAbidin)\n* fix-mitele' by [DjMoren](https://github.com/DjMoren)\n* fix/google-drive-cookie-issue by [legraphista](https://github.com/legraphista)\n* fix_tiktok by [mervel-mervel](https://github.com/mervel-mervel)\n* Fixed problem with JS player URL by [peet1993](https://github.com/peet1993)\n* fixYTSearch by [xarantolus](https://github.com/xarantolus)\n* FliegendeWurst-3sat-zdf-merger-bugfix-feature\n* gilou-bandcamp_update\n* implement ThisVid extractor by [rigstot](https://github.com/rigstot)\n* JensTimmerman-patch-1 by [JensTimmerman](https://github.com/JensTimmerman)\n* Keep download archive in memory for better performance by [jbruchon](https://github.com/jbruchon)\n* la7-fix by [iamleot](https://github.com/iamleot)\n* magenta by [adrianheine](https://github.com/adrianheine)\n* Merge 26564 from [adrianheine](https://github.com/adrianheine)\n* Merge code from [ddland](https://github.com/ddland)\n* Merge code from [nixxo](https://github.com/nixxo)\n* Merge code from [ssaqua](https://github.com/ssaqua)\n* Merge code from [zubearc](https://github.com/zubearc)\n* mkvthumbnail by [MrDoritos](https://github.com/MrDoritos)\n* myvideo_ge by [fonkap](https://github.com/fonkap)\n* naver by [SeonjaeHyeon](https://github.com/SeonjaeHyeon)\n* ondemandkorea by [julien-hadleyjack](https://github.com/julien-hadleyjack)\n* rai-update by [iamleot](https://github.com/iamleot)\n* RFC: youtube: Polymer UI and JSON endpoints for playlists by [wlritchi](https://github.com/wlritchi)\n* rutv by [adrianheine](https://github.com/adrianheine)\n* Sc extractor web auth by [blackjack4494](https://github.com/blackjack4494)\n* Switch from binary search tree to Python sets by [jbruchon](https://github.com/jbruchon)\n* tiktok by [skyme5](https://github.com/skyme5)\n* tvnow by [TinyToweringTree](https://github.com/TinyToweringTree)\n* twitch-fix by [lel-amri](https://github.com/lel-amri)\n* Twitter shortener by [blackjack4494](https://github.com/blackjack4494)\n* Update README.md by [JensTimmerman](https://github.com/JensTimmerman)\n* Update to reflect website changes. by [amigatomte](https://github.com/amigatomte)\n* use webarchive to fix a dead link in README by [B0pol](https://github.com/B0pol)\n* Viki the second by [blackjack4494](https://github.com/blackjack4494)\n* wdr-subtitles by [mrtnmtth](https://github.com/mrtnmtth)\n* Webpfix by [alexmerkel](https://github.com/alexmerkel)\n* Youtube live chat by [siikamiika](https://github.com/siikamiika)\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "Collaborators.md", "size": 3592, "license": "Unlicense", "content_sha": "ee748eb7fd98e9298f0b0d5f78562c1a52ccb4c9", "findings": [], "content": "# Collaborators\n\nThis is a list of the collaborators of the project and their major contributions. See the [Changelog](Changelog.md) for more details.\n\nYou can also find lists of all [contributors of yt-dlp](CONTRIBUTORS) and [authors of youtube-dl](https://github.com/ytdl-org/youtube-dl/blob/master/AUTHORS)\n\n\n## [pukkandan](https://github.com/pukkandan)\n\n[![ko-fi](https://img.shields.io/badge/_-Ko--fi-red.svg?logo=kofi&labelColor=555555&style=for-the-badge)](https://ko-fi.com/pukkandan)\n[![gh-sponsor](https://img.shields.io/badge/_-Github-white.svg?logo=github&labelColor=555555&style=for-the-badge)](https://github.com/sponsors/pukkandan)\n\n* Owner of the fork\n\n\n\n## [shirt](https://github.com/shirt-dev)\n\n[![ko-fi](https://img.shields.io/badge/_-Ko--fi-red.svg?logo=kofi&labelColor=555555&style=for-the-badge)](https://ko-fi.com/shirt)\n\n* Multithreading (`-N`) and aria2c support for fragment downloads\n* Support for media initialization and discontinuity in HLS\n* The self-updater (`-U`)\n\n\n\n## [coletdjnz](https://github.com/coletdjnz)\n\n[![gh-sponsor](https://img.shields.io/badge/_-Github-white.svg?logo=github&labelColor=555555&style=for-the-badge)](https://github.com/sponsors/coletdjnz)\n\n* Improved plugin architecture\n* Rewrote the networking infrastructure, implemented support for `requests`\n* YouTube improvements including: age-gate bypass, private playlists, multiple-clients (to avoid throttling) and a lot of under-the-hood improvements\n* Added support for new websites YoutubeWebArchive, MainStreaming, PRX, nzherald, Mediaklikk, StarTV etc\n* Improved/fixed support for Patreon, panopto, gfycat, itv, pbs, SouthParkDE etc\n\n\n\n## [Ashish0804](https://github.com/Ashish0804) <sub><sup>[Inactive]</sup></sub>\n\n[![ko-fi](https://img.shields.io/badge/_-Ko--fi-red.svg?logo=kofi&labelColor=555555&style=for-the-badge)](https://ko-fi.com/ashish0804)\n\n* Added support for new websites BiliIntl, DiscoveryPlusIndia, OlympicsReplay, PlanetMarathi, ShemarooMe, Utreon, Zee5 etc\n* Added playlist/series downloads for Hotstar, ParamountPlus, Rumble, SonyLIV, Trovo, TubiTv, Voot etc\n* Improved/fixed support for HiDive, HotStar, Hungama, LBRY, LinkedInLearning, Mxplayer, SonyLiv, TV2, Vimeo, VLive etc\n\n\n## [bashonly](https://github.com/bashonly)\n\n* `--update-to`, self-updater rewrite, automated/nightly/master releases\n* `--cookies-from-browser` support for Firefox containers, external downloader cookie handling overhaul\n* Added support for new websites like Dacast, Kick, NBCStations, Triller, VideoKen, Weverse, WrestleUniverse etc\n* Improved/fixed support for Anvato, Brightcove, Reddit, SlidesLive, TikTok, Twitter, Vimeo etc\n\n\n## [Grub4K](https://github.com/Grub4K)\n\n[![gh-sponsor](https://img.shields.io/badge/_-Github-white.svg?logo=github&labelColor=555555&style=for-the-badge)](https://github.com/sponsors/Grub4K) [![ko-fi](https://img.shields.io/badge/_-Ko--fi-red.svg?logo=kofi&labelColor=555555&style=for-the-badge)](https://ko-fi.com/Grub4K)\n\n* `--update-to`, self-updater rewrite, automated/nightly/master releases\n* Reworked internals like `traverse_obj`, various core refactors and bugs fixes\n* Implemented proper progress reporting for parallel downloads\n* Improved/fixed/added Bundestag, crunchyroll, pr0gramm, Twitter, WrestleUniverse etc\n\n\n## [sepro](https://github.com/seproDev)\n\n* UX improvements: Warn when ffmpeg is missing, warn when double-clicking exe\n* Code cleanup: Remove dead extractors, mark extractors as broken, enable/apply ruff rules\n* Improved/fixed/added ArdMediathek, DRTV, Floatplane, MagentaMusik, Naver, Nebula, OnDemandKorea, Vbox7 etc\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "README.md", "size": 167434, "license": "Unlicense", "content_sha": "d7d3ce34954650c328e9e2f42340f9cf52d4b727", "findings": [{"type": "pii_email", "matches": ["myaccount@gmail.com"]}], "content": "<!-- MANPAGE: BEGIN EXCLUDED SECTION -->\n<div align=\"center\">\n\n[![YT-DLP](https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/.github/banner.svg)](#readme)\n\n[![Release version](https://img.shields.io/github/v/release/yt-dlp/yt-dlp?color=brightgreen&label=Download&style=for-the-badge)](#installation \"Installation\")\n[![PyPI](https://img.shields.io/badge/-PyPI-blue.svg?logo=pypi&labelColor=555555&style=for-the-badge)](https://pypi.org/project/yt-dlp \"PyPI\")\n[![Donate](https://img.shields.io/badge/_-Donate-red.svg?logo=githubsponsors&labelColor=555555&style=for-the-badge)](Collaborators.md#collaborators \"Donate\")\n[![Discord](https://img.shields.io/discord/807245652072857610?color=blue&labelColor=555555&label=&logo=discord&style=for-the-badge)](https://discord.gg/H5MNcFW63r \"Discord\")\n[![Supported Sites](https://img.shields.io/badge/-Supported_Sites-brightgreen.svg?style=for-the-badge)](supportedsites.md \"Supported Sites\")\n[![License: Unlicense](https://img.shields.io/badge/-Unlicense-blue.svg?style=for-the-badge)](LICENSE \"License\")\n[![CI Status](https://img.shields.io/github/actions/workflow/status/yt-dlp/yt-dlp/core.yml?branch=master&label=Tests&style=for-the-badge)](https://github.com/yt-dlp/yt-dlp/actions \"CI Status\")\n[![Commits](https://img.shields.io/github/commit-activity/m/yt-dlp/yt-dlp?label=commits&style=for-the-badge)](https://github.com/yt-dlp/yt-dlp/commits \"Commit History\")\n[![Last Commit](https://img.shields.io/github/last-commit/yt-dlp/yt-dlp/master?label=&style=for-the-badge&display_timestamp=committer)](https://github.com/yt-dlp/yt-dlp/pulse/monthly \"Last activity\")\n\n</div>\n<!-- MANPAGE: END EXCLUDED SECTION -->\n\nyt-dlp is a feature-rich command-line audio/video downloader with support for [thousands of sites](supportedsites.md). The project is a fork of [youtube-dl](https://github.com/ytdl-org/youtube-dl) based on the now inactive [youtube-dlc](https://github.com/blackjack4494/yt-dlc).\n\n<!-- MANPAGE: MOVE \"USAGE AND OPTIONS\" SECTION HERE -->\n\n<!-- MANPAGE: BEGIN EXCLUDED SECTION -->\n* [INSTALLATION](#installation)\n    * [Detailed instructions](https://github.com/yt-dlp/yt-dlp/wiki/Installation)\n    * [Release Files](#release-files)\n    * [Update](#update)\n    * [Dependencies](#dependencies)\n    * [Compile](#compile)\n* [USAGE AND OPTIONS](#usage-and-options)\n    * [General Options](#general-options)\n    * [Network Options](#network-options)\n    * [Geo-restriction](#geo-restriction)\n    * [Video Selection](#video-selection)\n    * [Download Options](#download-options)\n    * [Filesystem Options](#filesystem-options)\n    * [Thumbnail Options](#thumbnail-options)\n    * [Internet Shortcut Options](#internet-shortcut-options)\n    * [Verbosity and Simulation Options](#verbosity-and-simulation-options)\n    * [Workarounds](#workarounds)\n    * [Video Format Options](#video-format-options)\n    * [Subtitle Options](#subtitle-options)\n    * [Authentication Options](#authentication-options)\n    * [Post-processing Options](#post-processing-options)\n    * [SponsorBlock Options](#sponsorblock-options)\n    * [Extractor Options](#extractor-options)\n* [CONFIGURATION](#configuration)\n    * [Configuration file encoding](#configuration-file-encoding)\n    * [Authentication with netrc](#authentication-with-netrc)\n    * [Notes about environment variables](#notes-about-environment-variables)\n* [OUTPUT TEMPLATE](#output-template)\n    * [Output template examples](#output-template-examples)\n* [FORMAT SELECTION](#format-selection)\n    * [Filtering Formats](#filtering-formats)\n    * [Sorting Formats](#sorting-formats)\n    * [Format Selection examples](#format-selection-examples)\n* [MODIFYING METADATA](#modifying-metadata)\n    * [Modifying metadata examples](#modifying-metadata-examples)\n* [EXTRACTOR ARGUMENTS](#extractor-arguments)\n* [PLUGINS](#plugins)\n    * [Installing Plugins](#installing-plugins)\n    * [Developing Plugins](#developing-plugins)\n* [EMBEDDING YT-DLP](#embedding-yt-dlp)\n    * [Embedding examples](#embedding-examples)\n* [CHANGES FROM YOUTUBE-DL](#changes-from-youtube-dl)\n    * [New features](#new-features)\n    * [Differences in default behavior](#differences-in-default-behavior)\n    * [Deprecated options](#deprecated-options)\n* [CONTRIBUTING](CONTRIBUTING.md#contributing-to-yt-dlp)\n    * [Opening an Issue](CONTRIBUTING.md#opening-an-issue)\n    * [Developer Instructions](CONTRIBUTING.md#developer-instructions)\n* [WIKI](https://github.com/yt-dlp/yt-dlp/wiki)\n    * [FAQ](https://github.com/yt-dlp/yt-dlp/wiki/FAQ)\n<!-- MANPAGE: END EXCLUDED SECTION -->\n\n\n# INSTALLATION\n\n<!-- MANPAGE: BEGIN EXCLUDED SECTION -->\n[![Windows](https://img.shields.io/badge/-Windows_x64-blue.svg?style=for-the-badge&logo=windows)](https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe)\n[![Unix](https://img.shields.io/badge/-Linux/BSD-red.svg?style=for-the-badge&logo=linux)](https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp)\n[![MacOS](https://img.shields.io/badge/-MacOS-lightblue.svg?style=for-the-badge&logo=apple)](https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_macos)\n[![PyPI](https://img.shields.io/badge/-PyPI-blue.svg?logo=pypi&labelColor=555555&style=for-the-badge)](https://pypi.org/project/yt-dlp)\n[![Source Tarball](https://img.shields.io/badge/-Source_tar-green.svg?style=for-the-badge)](https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.tar.gz)\n[![Other variants](https://img.shields.io/badge/-Other-grey.svg?style=for-the-badge)](#release-files)\n[![All versions](https://img.shields.io/badge/-All_Versions-lightgrey.svg?style=for-the-badge)](https://github.com/yt-dlp/yt-dlp/releases)\n<!-- MANPAGE: END EXCLUDED SECTION -->\n\nYou can install yt-dlp using [the binaries](#release-files), [pip](https://pypi.org/project/yt-dlp) or one using a third-party package manager. See [the wiki](https://github.com/yt-dlp/yt-dlp/wiki/Installation) for detailed instructions\n\n\n<!-- MANPAGE: BEGIN EXCLUDED SECTION -->\n## RELEASE FILES\n\n#### Recommended\n\nFile|Description\n:---|:---\n[yt-dlp](https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp)|Platform-independent [zipimport](https://docs.python.org/3/library/zipimport.html) binary. Needs Python (recommended for **Linux/BSD**)\n[yt-dlp.exe](https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe)|Windows (Win8+) standalone x64 binary (recommended for **Windows**)\n[yt-dlp_macos](https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_macos)|Universal MacOS (10.15+) standalone executable (recommended for **MacOS**)\n\n#### Alternatives\n\nFile|Description\n:---|:---\n[yt-dlp_x86.exe](https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_x86.exe)|Windows (Win8+) standalone x86 (32-bit) binary\n[yt-dlp_linux](https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_linux)|Linux standalone x64 binary\n[yt-dlp_linux_armv7l](https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_linux_armv7l)|Linux standalone armv7l (32-bit) binary\n[yt-dlp_linux_aarch64](https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_linux_aarch64)|Linux standalone aarch64 (64-bit) binary\n[yt-dlp_win.zip](https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_win.zip)|Unpackaged Windows executable (no auto-update)\n[yt-dlp_macos.zip](https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_macos.zip)|Unpackaged MacOS (10.15+) executable (no auto-update)\n[yt-dlp_macos_legacy](https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_macos_legacy)|MacOS (10.9+) standalone x64 executable\n\n#### Misc\n\nFile|Description\n:---|:---\n[yt-dlp.tar.gz](https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.tar.gz)|Source tarball\n[SHA2-512SUMS](https://github.com/yt-dlp/yt-dlp/releases/latest/download/SHA2-512SUMS)|GNU-style SHA512 sums\n[SHA2-512SUMS.sig](https://github.com/yt-dlp/yt-dlp/releases/latest/download/SHA2-512SUMS.sig)|GPG signature file for SHA512 sums\n[SHA2-256SUMS](https://github.com/yt-dlp/yt-dlp/releases/latest/download/SHA2-256SUMS)|GNU-style SHA256 sums\n[SHA2-256SUMS.sig](https://github.com/yt-dlp/yt-dlp/releases/latest/download/SHA2-256SUMS.sig)|GPG signature file for SHA256 sums\n\nThe public key that can be used to verify the GPG signatures is [available here](https://github.com/yt-dlp/yt-dlp/blob/master/public.key)\nExample usage:\n```\ncurl -L https://github.com/yt-dlp/yt-dlp/raw/master/public.key | gpg --import\ngpg --verify SHA2-256SUMS.sig SHA2-256SUMS\ngpg --verify SHA2-512SUMS.sig SHA2-512SUMS\n```\n<!-- MANPAGE: END EXCLUDED SECTION -->\n\n**Note**: The manpages, shell completion (autocomplete) files etc. are available inside the [source tarball](https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.tar.gz)\n\n\n## UPDATE\nYou can use `yt-dlp -U` to update if you are using the [release binaries](#release-files)\n\nIf you [installed with pip](https://github.com/yt-dlp/yt-dlp/wiki/Installation#with-pip), simply re-run the same command that was used to install the program\n\nFor other third-party package managers, see [the wiki](https://github.com/yt-dlp/yt-dlp/wiki/Installation#third-party-package-managers) or refer to their documentation\n\n<a id=\"update-channels\"></a>\n\nThere are currently three release channels for binaries: `stable`, `nightly` and `master`.\n\n* `stable` is the default channel, and many of its changes have been tested by users of the `nightly` and `master` channels.\n* The `nightly` channel has releases scheduled to build every day around midnight UTC, for a snapshot of the project's new patches and changes. This is the **recommended channel for regular users** of yt-dlp. The `nightly` releases are available from [yt-dlp/yt-dlp-nightly-builds](https://github.com/yt-dlp/yt-dlp-nightly-builds/releases) or as development releases of the `yt-dlp` PyPI package (which can be installed with pip's `--pre` flag).\n* The `master` channel features releases that are built after each push to the master branch, and these will have the very latest fixes and additions, but may also be more prone to regressions. They are available from [yt-dlp/yt-dlp-master-builds](https://github.com/yt-dlp/yt-dlp-master-builds/releases).\n\nWhen using `--update`/`-U`, a release binary will only update to its current channel.\n`--update-to CHANNEL` can be used to switch to a different channel when a newer version is available. `--update-to [CHANNEL@]TAG` can also be used to upgrade or downgrade to specific tags from a channel.\n\nYou may also use `--update-to <repository>` (`<owner>/<repository>`) to update to a channel on a completely different repository. Be careful with what repository you are updating to though, there is no verification done for binaries from different repositories.\n\nExample usage:\n\n* `yt-dlp --update-to master` switch to the `master` channel and update to its latest release\n* `yt-dlp --update-to stable@2023.07.06` upgrade/downgrade to release to `stable` channel tag `2023.07.06`\n* `yt-dlp --update-to 2023.10.07` upgrade/downgrade to tag `2023.10.07` if it exists on the current channel\n* `yt-dlp --update-to example/yt-dlp@2023.09.24` upgrade/downgrade to the release from the `example/yt-dlp` repository, tag `2023.09.24`\n\n**Important**: Any user experiencing an issue with the `stable` release should install or update to the `nightly` release before submitting a bug report:\n```\n# To update to nightly from stable executable/binary:\nyt-dlp --update-to nightly\n\n# To install nightly with pip:\npython3 -m pip install -U --pre \"yt-dlp[default]\"\n```\n\n## DEPENDENCIES\nPython versions 3.9+ (CPython) and 3.10+ (PyPy) are supported. Other versions and implementations may or may not work correctly.\n\n<!-- Python 3.5+ uses VC++14 and it is already embedded in the binary created\n<!x-- https://www.microsoft.com/en-us/download/details.aspx?id=26999 --x>\nOn Windows, [Microsoft Visual C++ 2010 SP1 Redistributable Package (x86)](https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x86.exe) is also necessary to run yt-dlp. You probably already have this, but if the executable throws an error due to missing `MSVCR100.dll` you need to install it manually.\n-->\n\nWhile all the other dependencies are optional, `ffmpeg` and `ffprobe` are highly recommended\n\n### Strongly recommended\n\n* [**ffmpeg** and **ffprobe**](https://www.ffmpeg.org) - Required for [merging separate video and audio files](#format-selection), as well as for various [post-processing](#post-processing-options) tasks. License [depends on the build](https://www.ffmpeg.org/legal.html)\n\n    There are bugs in ffmpeg that cause various issues when used alongside yt-dlp. Since ffmpeg is such an important dependency, we provide [custom builds](https://github.com/yt-dlp/FFmpeg-Builds#ffmpeg-static-auto-builds) with patches for some of these issues at [yt-dlp/FFmpeg-Builds](https://github.com/yt-dlp/FFmpeg-Builds). See [the readme](https://github.com/yt-dlp/FFmpeg-Builds#patches-applied) for details on the specific issues solved by these builds\n\n    **Important**: What you need is ffmpeg *binary*, **NOT** [the Python package of the same name](https://pypi.org/project/ffmpeg)\n\n### Networking\n* [**certifi**](https://github.com/certifi/python-certifi)\\* - Provides Mozilla's root certificate bundle. Licensed under [MPLv2](https://github.com/certifi/python-certifi/blob/master/LICENSE)\n* [**brotli**](https://github.com/google/brotli)\\* or [**brotlicffi**](https://github.com/python-hyper/brotlicffi) - [Brotli](https://en.wikipedia.org/wiki/Brotli) content encoding support. Both licensed under MIT <sup>[1](https://github.com/google/brotli/blob/master/LICENSE) [2](https://github.com/python-hyper/brotlicffi/blob/master/LICENSE) </sup>\n* [**websockets**](https://github.com/aaugustin/websockets)\\* - For downloading over websocket. Licensed under [BSD-3-Clause](https://github.com/aaugustin/websockets/blob/main/LICENSE)\n* [**requests**](https://github.com/psf/requests)\\* - HTTP library. For HTTPS proxy and persistent connections support. Licensed under [Apache-2.0](https://github.com/psf/requests/blob/main/LICENSE)\n\n#### Impersonation\n\nThe following provide support for impersonating browser requests. This may be required for some sites that employ TLS fingerprinting.\n\n* [**curl_cffi**](https://github.com/lexiforest/curl_cffi) (recommended) - Python binding for [curl-impersonate](https://github.com/lexiforest/curl-impersonate). Provides impersonation targets for Chrome, Edge and Safari. Licensed under [MIT](https://github.com/lexiforest/curl_cffi/blob/main/LICENSE)\n  * Can be installed with the `curl-cffi` group, e.g. `pip install \"yt-dlp[default,curl-cffi]\"`\n  * Currently included in `yt-dlp.exe`, `yt-dlp_linux` and `yt-dlp_macos` builds\n\n\n### Metadata\n\n* [**mutagen**](https://github.com/quodlibet/mutagen)\\* - For `--embed-thumbnail` in certain formats. Licensed under [GPLv2+](https://github.com/quodlibet/mutagen/blob/master/COPYING)\n* [**AtomicParsley**](https://github.com/wez/atomicparsley) - For `--embed-thumbnail` in `mp4`/`m4a` files when `mutagen`/`ffmpeg` cannot. Licensed under [GPLv2+](https://github.com/wez/atomicparsley/blob/master/COPYING)\n* [**xattr**](https://github.com/xattr/xattr), [**pyxattr**](https://github.com/iustin/pyxattr) or [**setfattr**](http://savannah.nongnu.org/projects/attr) - For writing xattr metadata (`--xattr`) on **Mac** and **BSD**. Licensed under [MIT](https://github.com/xattr/xattr/blob/master/LICENSE.txt), [LGPL2.1](https://github.com/iustin/pyxattr/blob/master/COPYING) and [GPLv2+](http://git.savannah.nongnu.org/cgit/attr.git/tree/doc/COPYING) respectively\n\n### Misc\n\n* [**pycryptodomex**](https://github.com/Legrandin/pycryptodome)\\* - For decrypting AES-128 HLS streams and various other data. Licensed under [BSD-2-Clause](https://github.com/Legrandin/pycryptodome/blob/master/LICENSE.rst)\n* [**phantomjs**](https://github.com/ariya/phantomjs) - Used in extractors where javascript needs to be run. Licensed under [BSD-3-Clause](https://github.com/ariya/phantomjs/blob/master/LICENSE.BSD)\n* [**secretstorage**](https://github.com/mitya57/secretstorage)\\* - For `--cookies-from-browser` to access the **Gnome** keyring while decrypting cookies of **Chromium**-based browsers on **Linux**. Licensed under [BSD-3-Clause](https://github.com/mitya57/secretstorage/blob/master/LICENSE)\n* Any external downloader that you want to use with `--downloader`\n\n### Deprecated\n\n* [**avconv** and **avprobe**](https://www.libav.org) - Now **deprecated** alternative to ffmpeg. License [depends on the build](https://libav.org/legal)\n* [**sponskrub**](https://github.com/faissaloo/SponSkrub) - For using the now **deprecated** [sponskrub options](#sponskrub-options). Licensed under [GPLv3+](https://github.com/faissaloo/SponSkrub/blob/master/LICENCE.md)\n* [**rtmpdump**](http://rtmpdump.mplayerhq.hu) - For downloading `rtmp` streams. ffmpeg can be used instead with `--downloader ffmpeg`. Licensed under [GPLv2+](http://rtmpdump.mplayerhq.hu)\n* [**mplayer**](http://mplayerhq.hu/design7/info.html) or [**mpv**](https://mpv.io) - For downloading `rstp`/`mms` streams. ffmpeg can be used instead with `--downloader ffmpeg`. Licensed under [GPLv2+](https://github.com/mpv-player/mpv/blob/master/Copyright)\n\nTo use or redistribute the dependencies, you must agree to their respective licensing terms.\n\nThe standalone release binaries are built with the Python interpreter and the packages marked with **\\*** included.\n\nIf you do not have the necessary dependencies for a task you are attempting, yt-dlp will warn you. All the currently available dependencies are visible at the top of the `--verbose` output\n\n\n## COMPILE\n\n### Standalone PyInstaller Builds\nTo build the standalone executable, you must have Python and `pyinstaller` (plus any of yt-dlp's [optional dependencies](#dependencies) if needed). The executable will be built for the same CPU architecture as the Python used.\n\nYou can run the following commands:\n\n```\npython3 devscripts/install_deps.py --include pyinstaller\npython3 devscripts/make_lazy_extractors.py\npython3 -m bundle.pyinstaller\n```\n\nOn some systems, you may need to use `py` or `python` instead of `python3`.\n\n`python -m bundle.pyinstaller` accepts any arguments that can be passed to `pyinstaller`, such as `--onefile/-F` or `--onedir/-D`, which is further [documented here](https://pyinstaller.org/en/stable/usage.html#what-to-generate).\n\n**Note**: Pyinstaller versions below 4.4 [do not support](https://github.com/pyinstaller/pyinstaller#requirements-and-tested-platforms) Python installed from the Windows store without using a virtual environment.\n\n**Important**: Running `pyinstaller` directly **instead of** using `python -m bundle.pyinstaller` is **not** officially supported. This may or may not work correctly.\n\n### Platform-independent Binary (UNIX)\nYou will need the build tools `python` (3.9+), `zip`, `make` (GNU), `pandoc`\\* and `pytest`\\*.\n\nAfter installing these, simply run `make`.\n\nYou can also run `make yt-dlp` instead to compile only the binary without updating any of the additional files. (The build tools marked with **\\*** are not needed for this)\n\n### Related scripts\n\n* **`devscripts/install_deps.py`** - Install dependencies for yt-dlp.\n* **`devscripts/update-version.py`** - Update the version number based on the current date.\n* **`devscripts/set-variant.py`** - Set the build variant of the executable.\n* **`devscripts/make_changelog.py`** - Create a markdown changelog using short commit messages and update `CONTRIBUTORS` file.\n* **`devscripts/make_lazy_extractors.py`** - Create lazy extractors. Running this before building the binaries (any variant) will improve their startup performance. Set the environment variable `YTDLP_NO_LAZY_EXTRACTORS` to something nonempty to forcefully disable lazy extractor loading.\n\nNote: See their `--help` for more info.\n\n### Forking the project\nIf you fork the project on GitHub, you can run your fork's [build workflow](.github/workflows/build.yml) to automatically build the selected version(s) as artifacts. Alternatively, you can run the [release workflow](.github/workflows/release.yml) or enable the [nightly workflow](.github/workflows/release-nightly.yml) to create full (pre-)releases.\n\n# USAGE AND OPTIONS\n\n<!-- MANPAGE: BEGIN EXCLUDED SECTION -->\n    yt-dlp [OPTIONS] [--] URL [URL...]\n\n`Ctrl+F` is your friend :D\n<!-- MANPAGE: END EXCLUDED SECTION -->\n\n<!-- Auto generated -->\n## General Options:\n    -h, --help                      Print this help text and exit\n    --version                       Print program version and exit\n    -U, --update                    Update this program to the latest version\n    --no-update                     Do not check for updates (default)\n    --update-to [CHANNEL]@[TAG]     Upgrade/downgrade to a specific version.\n                                    CHANNEL can be a repository as well. CHANNEL\n                                    and TAG default to \"stable\" and \"latest\"\n                                    respectively if omitted; See \"UPDATE\" for\n                                    details. Supported channels: stable,\n                                    nightly, master\n    -i, --ignore-errors             Ignore download and postprocessing errors.\n                                    The download will be considered successful\n                                    even if the postprocessing fails\n    --no-abort-on-error             Continue with next video on download errors;\n                                    e.g. to skip unavailable videos in a\n                                    playlist (default)\n    --abort-on-error                Abort downloading of further videos if an\n                                    error occurs (Alias: --no-ignore-errors)\n    --dump-user-agent               Display the current user-agent and exit\n    --list-extractors               List all supported extractors and exit\n    --extractor-descriptions        Output descriptions of all supported\n                                    extractors and exit\n    --use-extractors NAMES          Extractor names to use separated by commas.\n                                    You can also use regexes, \"all\", \"default\"\n                                    and \"end\" (end URL matching); e.g. --ies\n                                    \"holodex.*,end,youtube\". Prefix the name\n                                    with a \"-\" to exclude it, e.g. --ies\n                                    default,-generic. Use --list-extractors for\n                                    a list of extractor names. (Alias: --ies)\n    --default-search PREFIX         Use this prefix for unqualified URLs. E.g.\n                                    \"gvsearch2:python\" downloads two videos from\n                                    google videos for the search term \"python\".\n                                    Use the value \"auto\" to let yt-dlp guess\n                                    (\"auto_warning\" to emit a warning when\n                                    guessing). \"error\" just throws an error. The\n                                    default value \"fixup_error\" repairs broken\n                                    URLs, but emits an error if this is not\n                                    possible instead of searching\n    --ignore-config                 Don't load any more configuration files\n                                    except those given to --config-locations.\n                                    For backward compatibility, if this option\n                                    is found inside the system configuration\n                                    file, the user configuration is not loaded.\n                                    (Alias: --no-config)\n    --no-config-locations           Do not load any custom configuration files\n                                    (default). When given inside a configuration\n                                    file, ignore all previous --config-locations\n                                    defined in the current file\n    --config-locations PATH         Location of the main configuration file;\n                                    either the path to the config or its\n                                    containing directory (\"-\" for stdin). Can be\n                                    used multiple times and inside other\n                                    configuration files\n    --plugin-dirs PATH              Path to an additional directory to search\n                                    for plugins. This option can be used\n                                    multiple times to add multiple directories.\n                                    Use \"default\" to search the default plugin\n                                    directories (default)\n    --no-plugin-dirs                Clear plugin directories to search,\n                                    including defaults and those provided by\n                                    previous --plugin-dirs\n    --flat-playlist                 Do not extract a playlist's URL result\n                                    entries; some entry metadata may be missing\n                                    and downloading may be bypassed\n    --no-flat-playlist              Fully extract the videos of a playlist\n                                    (default)\n    --live-from-start               Download livestreams from the start.\n                                    Currently only supported for YouTube\n                                    (Experimental)\n    --no-live-from-start            Download livestreams from the current time\n                                    (default)\n    --wait-for-video MIN[-MAX]      Wait for scheduled streams to become\n                                    available. Pass the minimum number of\n                                    seconds (or range) to wait between retries\n    --no-wait-for-video             Do not wait for scheduled streams (default)\n    --mark-watched                  Mark videos watched (even with --simulate)\n    --no-mark-watched               Do not mark videos watched (default)\n    --color [STREAM:]POLICY         Whether to emit color codes in output,\n                                    optionally prefixed by the STREAM (stdout or\n                                    stderr) to apply the setting to. Can be one\n                                    of \"always\", \"auto\" (default), \"never\", or\n                                    \"no_color\" (use non color terminal\n                                    sequences). Use \"auto-tty\" or \"no_color-tty\"\n                                    to decide based on terminal support only.\n                                    Can be used multiple times\n    --compat-options OPTS           Options that can help keep compatibility\n                                    with youtube-dl or youtube-dlc\n                                    configurations by reverting some of the\n                                    changes made in yt-dlp. See \"Differences in\n                                    default behavior\" for details\n    --alias ALIASES OPTIONS         Create aliases for an option string. Unless\n                                    an alias starts with a dash \"-\", it is\n                                    prefixed with \"--\". Arguments are parsed\n                                    according to the Python string formatting\n                                    mini-language. E.g. --alias get-audio,-X\n                                    \"-S=aext:{0},abr -x --audio-format {0}\"\n                                    creates options \"--get-audio\" and \"-X\" that\n                                    takes an argument (ARG0) and expands to\n                                    \"-S=aext:ARG0,abr -x --audio-format ARG0\".\n                                    All defined aliases are listed in the --help\n                                    output. Alias options can trigger more\n                                    aliases; so be careful to avoid defining\n                                    recursive options. As a safety measure, each\n                                    alias may be triggered a maximum of 100\n                                    times. This option can be used multiple times\n\n## Network Options:\n    --proxy URL                     Use the specified HTTP/HTTPS/SOCKS proxy. To\n                                    enable SOCKS proxy, specify a proper scheme,\n                                    e.g. socks5://user:pass@127.0.0.1:1080/.\n                                    Pass in an empty string (--proxy \"\") for\n                                    direct connection\n    --socket-timeout SECONDS        Time to wait before giving up, in seconds\n    --source-address IP             Client-side IP address to bind to\n    --impersonate CLIENT[:OS]       Client to impersonate for requests. E.g.\n                                    chrome, chrome-110, chrome:windows-10. Pass\n                                    --impersonate=\"\" to impersonate any client.\n                                    Note that forcing impersonation for all\n                                    requests may have a detrimental impact on\n                                    download speed and stability\n    --list-impersonate-targets      List available clients to impersonate.\n    -4, --force-ipv4                Make all connections via IPv4\n    -6, --force-ipv6                Make all connections via IPv6\n    --enable-file-urls              Enable file:// URLs. This is disabled by\n                                    default for security reasons.\n\n## Geo-restriction:\n    --geo-verification-proxy URL    Use this proxy to verify the IP address for\n                                    some geo-restricted sites. The default proxy\n                                    specified by --proxy (or none, if the option\n                                    is not present) is used for the actual\n                                    downloading\n    --xff VALUE                     How to fake X-Forwarded-For HTTP header to\n                                    try bypassing geographic restriction. One of\n                                    \"default\" (only when known to be useful),\n                                    \"never\", an IP block in CIDR notation, or a\n                                    two-letter ISO 3166-2 country code\n\n## Video Selection:\n    -I, --playlist-items ITEM_SPEC  Comma separated playlist_index of the items\n                                    to download. You can specify a range using\n                                    \"[START]:[STOP][:STEP]\". For backward\n                                    compatibility, START-STOP is also supported.\n                                    Use negative indices to count from the right\n                                    and negative STEP to download in reverse\n                                    order. E.g. \"-I 1:3,7,-5::2\" used on a\n                                    playlist of size 15 will download the items\n                                    at index 1,2,3,7,11,13,15\n    --min-filesize SIZE             Abort download if filesize is smaller than\n                                    SIZE, e.g. 50k or 44.6M\n    --max-filesize SIZE             Abort download if filesize is larger than\n                                    SIZE, e.g. 50k or 44.6M\n    --date DATE                     Download only videos uploaded on this date.\n                                    The date can be \"YYYYMMDD\" or in the format \n                                    [now|today|yesterday][-N[day|week|month|year]].\n                                    E.g. \"--date today-2weeks\" downloads only\n                                    videos uploaded on the same day two weeks ago\n    --datebefore DATE               Download only videos uploaded on or before\n                                    this date. The date formats accepted are the\n                                    same as --date\n    --dateafter DATE                Download only videos uploaded on or after\n                                    this date. The date formats accepted are the\n                                    same as --date\n    --match-filters FILTER          Generic video filter. Any \"OUTPUT TEMPLATE\"\n                                    field can be compared with a number or a\n                                    string using the operators defined in\n                                    \"Filtering Formats\". You can also simply\n                                    specify a field to match if the field is\n                                    present, use \"!field\" to check if the field\n                                    is not present, and \"&\" to check multiple\n                                    conditions. Use a \"\\\" to escape \"&\" or\n                                    quotes if needed. If used multiple times,\n                                    the filter matches if at least one of the\n                                    conditions is met. E.g. --match-filters\n                                    !is_live --match-filters \"like_count>?100 &\n                                    description~='(?i)\\bcats \\& dogs\\b'\" matches\n                                    only videos that are not live OR those that\n                                    have a like count more than 100 (or the like\n                                    field is not available) and also has a\n                                    description that contains the phrase \"cats &\n                                    dogs\" (caseless). Use \"--match-filters -\" to\n                                    interactively ask whether to download each\n                                    video\n    --no-match-filters              Do not use any --match-filters (default)\n    --break-match-filters FILTER    Same as \"--match-filters\" but stops the\n                                    download process when a video is rejected\n    --no-break-match-filters        Do not use any --break-match-filters (default)\n    --no-playlist                   Download only the video, if the URL refers\n                                    to a video and a playlist\n    --yes-playlist                  Download the playlist, if the URL refers to\n                                    a video and a playlist\n    --age-limit YEARS               Download only videos suitable for the given\n                                    age\n    --download-archive FILE         Download only videos not listed in the\n                                    archive file. Record the IDs of all\n                                    downloaded videos in it\n    --no-download-archive           Do not use archive file (default)\n    --max-downloads NUMBER          Abort after downloading NUMBER files\n    --break-on-existing             Stop the download process when encountering\n                                    a file that is in the archive supplied with\n                                    the --download-archive option\n    --no-break-on-existing          Do not stop the download process when\n                                    encountering a file that is in the archive\n                                    (default)\n    --break-per-input               Alters --max-downloads, --break-on-existing,\n                                    --break-match-filters, and autonumber to\n                                    reset per input URL\n    --no-break-per-input            --break-on-existing and similar options\n                                    terminates the entire download queue\n    --skip-playlist-after-errors N  Number of allowed failures until the rest of\n                                    the playlist is skipped\n\n## Download Options:\n    -N, --concurrent-fragments N    Number of fragments of a dash/hlsnative\n                                    video that should be downloaded concurrently\n                                    (default is 1)\n    -r, --limit-rate RATE           Maximum download rate in bytes per second,\n                                    e.g. 50K or 4.2M\n    --throttled-rate RATE           Minimum download rate in bytes per second\n                                    below which throttling is assumed and the\n                                    video data is re-extracted, e.g. 100K\n    -R, --retries RETRIES           Number of retries (default is 10), or\n                                    \"infinite\"\n    --file-access-retries RETRIES   Number of times to retry on file access\n                                    error (default is 3), or \"infinite\"\n    --fragment-retries RETRIES      Number of retries for a fragment (default is\n                                    10), or \"infinite\" (DASH, hlsnative and ISM)\n    --retry-sleep [TYPE:]EXPR       Time to sleep between retries in seconds\n                                    (optionally) prefixed by the type of retry\n                                    (http (default), fragment, file_access,\n                                    extractor) to apply the sleep to. EXPR can\n                                    be a number, linear=START[:END[:STEP=1]] or\n                                    exp=START[:END[:BASE=2]]. This option can be\n                                    used multiple times to set the sleep for the\n                                    different retry types, e.g. --retry-sleep\n                                    linear=1::2 --retry-sleep fragment:exp=1:20\n    --skip-unavailable-fragments    Skip unavailable fragments for DASH,\n                                    hlsnative and ISM downloads (default)\n                                    (Alias: --no-abort-on-unavailable-fragments)\n    --abort-on-unavailable-fragments\n                                    Abort download if a fragment is unavailable\n                                    (Alias: --no-skip-unavailable-fragments)\n    --keep-fragments                Keep downloaded fragments on disk after\n                                    downloading is finished\n    --no-keep-fragments             Delete downloaded fragments after\n                                    downloading is finished (default)\n    --buffer-size SIZE              Size of download buffer, e.g. 1024 or 16K\n                                    (default is 1024)\n    --resize-buffer                 The buffer size is automatically resized\n                                    from an initial value of --buffer-size\n                                    (default)\n    --no-resize-buffer              Do not automatically adjust the buffer size\n    --http-chunk-size SIZE          Size of a chunk for chunk-based HTTP\n                                    downloading, e.g. 10485760 or 10M (default\n                                    is disabled). May be useful for bypassing\n                                    bandwidth throttling imposed by a webserver\n                                    (experimental)\n    --playlist-random               Download playlist videos in random order\n    --lazy-playlist                 Process entries in the playlist as they are\n                                    received. This disables n_entries,\n                                    --playlist-random and --playlist-reverse\n    --no-lazy-playlist              Process videos in the playlist only after\n                                    the entire playlist is parsed (default)\n    --xattr-set-filesize            Set file xattribute ytdl.filesize with\n                                    expected file size\n    --hls-use-mpegts                Use the mpegts container for HLS videos;\n                                    allowing some players to play the video\n                                    while downloading, and reducing the chance\n                                    of file corruption if download is\n                                    interrupted. This is enabled by default for\n                                    live streams\n    --no-hls-use-mpegts             Do not use the mpegts container for HLS\n                                    videos. This is default when not downloading\n                                    live streams\n    --download-sections REGEX       Download only chapters that match the\n                                    regular expression. A \"*\" prefix denotes\n                                    time-range instead of chapter. Negative\n                                    timestamps are calculated from the end.\n                                    \"*from-url\" can be used to download between\n                                    the \"start_time\" and \"end_time\" extracted\n                                    from the URL. Needs ffmpeg. This option can\n                                    be used multiple times to download multiple\n                                    sections, e.g. --download-sections\n                                    \"*10:15-inf\" --download-sections \"intro\"\n    --downloader [PROTO:]NAME       Name or path of the external downloader to\n                                    use (optionally) prefixed by the protocols\n                                    (http, ftp, m3u8, dash, rstp, rtmp, mms) to\n                                    use it for. Currently supports native,\n                                    aria2c, avconv, axel, curl, ffmpeg, httpie,\n                                    wget. You can use this option multiple times\n                                    to set different downloaders for different\n                                    protocols. E.g. --downloader aria2c\n                                    --downloader \"dash,m3u8:native\" will use\n                                    aria2c for http/ftp downloads, and the\n                                    native downloader for dash/m3u8 downloads\n                                    (Alias: --external-downloader)\n    --downloader-args NAME:ARGS     Give these arguments to the external\n                                    downloader. Specify the downloader name and\n                                    the arguments separated by a colon \":\". For\n                                    ffmpeg, arguments can be passed to different\n                                    positions using the same syntax as\n                                    --postprocessor-args. You can use this\n                                    option multiple times to give different\n                                    arguments to different downloaders (Alias:\n                                    --external-downloader-args)\n\n## Filesystem Options:\n    -a, --batch-file FILE           File containing URLs to download (\"-\" for\n                                    stdin), one URL per line. Lines starting\n                                    with \"#\", \";\" or \"]\" are considered as\n                                    comments and ignored\n    --no-batch-file                 Do not read URLs from batch file (default)\n    -P, --paths [TYPES:]PATH        The paths where the files should be\n                                    downloaded. Specify the type of file and the\n                                    path separated by a colon \":\". All the same\n                                    TYPES as --output are supported.\n                                    Additionally, you can also provide \"home\"\n                                    (default) and \"temp\" paths. All intermediary\n                                    files are first downloaded to the temp path\n                                    and then the final files are moved over to\n                                    the home path after download is finished.\n                                    This option is ignored if --output is an\n                                    absolute path\n    -o, --output [TYPES:]TEMPLATE   Output filename template; see \"OUTPUT\n                                    TEMPLATE\" for details\n    --output-na-placeholder TEXT    Placeholder for unavailable fields in\n                                    --output (default: \"NA\")\n    --restrict-filenames            Restrict filenames to only ASCII characters,\n                                    and avoid \"&\" and spaces in filenames\n    --no-restrict-filenames         Allow Unicode characters, \"&\" and spaces in\n                                    filenames (default)\n    --windows-filenames             Force filenames to be Windows-compatible\n    --no-windows-filenames          Sanitize filenames only minimally\n    --trim-filenames LENGTH         Limit the filename length (excluding\n                                    extension) to the specified number of\n                                    characters\n    -w, --no-overwrites             Do not overwrite any files\n    --force-overwrites              Overwrite all video and metadata files. This\n                                    option includes --no-continue\n    --no-force-overwrites           Do not overwrite the video, but overwrite\n                                    related files (default)\n    -c, --continue                  Resume partially downloaded files/fragments\n                                    (default)\n    --no-continue                   Do not resume partially downloaded\n                                    fragments. If the file is not fragmented,\n                                    restart download of the entire file\n    --part                          Use .part files instead of writing directly\n                                    into output file (default)\n    --no-part                       Do not use .part files - write directly into\n                                    output file\n    --mtime                         Use the Last-modified header to set the file\n                                    modification time (default)\n    --no-mtime                      Do not use the Last-modified header to set\n                                    the file modification time\n    --write-description             Write video description to a .description file\n    --no-write-description          Do not write video description (default)\n    --write-info-json               Write video metadata to a .info.json file\n                                    (this may contain personal information)\n    --no-write-info-json            Do not write video metadata (default)\n    --write-playlist-metafiles      Write playlist metadata in addition to the\n                                    video metadata when using --write-info-json,\n                                    --write-description etc. (default)\n    --no-write-playlist-metafiles   Do not write playlist metadata when using\n                                    --write-info-json, --write-description etc.\n    --clean-info-json               Remove some internal metadata such as\n                                    filenames from the infojson (default)\n    --no-clean-info-json            Write all fields to the infojson\n    --write-comments                Retrieve video comments to be placed in the\n                                    infojson. The comments are fetched even\n                                    without this option if the extraction is\n                                    known to be quick (Alias: --get-comments)\n    --no-write-comments             Do not retrieve video comments unless the\n                                    extraction is known to be quick (Alias:\n                                    --no-get-comments)\n    --load-info-json FILE           JSON file containing the video information\n                                    (created with the \"--write-info-json\" option)\n    --cookies FILE                  Netscape formatted file to read cookies from\n                                    and dump cookie jar in\n    --no-cookies                    Do not read/dump cookies from/to file\n                                    (default)\n    --cookies-from-browser BROWSER[+KEYRING][:PROFILE][::CONTAINER]\n                                    The name of the browser to load cookies\n                                    from. Currently supported browsers are:\n                                    brave, chrome, chromium, edge, firefox,\n                                    opera, safari, vivaldi, whale. Optionally,\n                                    the KEYRING used for decrypting Chromium\n                                    cookies on Linux, the name/path of the\n                                    PROFILE to load cookies from, and the\n                                    CONTAINER name (if Firefox) (\"none\" for no\n                                    container) can be given with their\n                                    respective separators. By default, all\n                                    containers of the most recently accessed\n                                    profile are used. Currently supported\n                                    keyrings are: basictext, gnomekeyring,\n                                    kwallet, kwallet5, kwallet6\n    --no-cookies-from-browser       Do not load cookies from browser (default)\n    --cache-dir DIR                 Location in the filesystem where yt-dlp can\n                                    store some downloaded information (such as\n                                    client ids and signatures) permanently. By\n                                    default ${XDG_CACHE_HOME}/yt-dlp\n    --no-cache-dir                  Disable filesystem caching\n    --rm-cache-dir                  Delete all filesystem cache files\n\n## Thumbnail Options:\n    --write-thumbnail               Write thumbnail image to disk\n    --no-write-thumbnail            Do not write thumbnail image to disk (default)\n    --write-all-thumbnails          Write all thumbnail image formats to disk\n    --list-thumbnails               List available thumbnails of each video.\n                                    Simulate unless --no-simulate is used\n\n## Internet Shortcut Options:\n    --write-link                    Write an internet shortcut file, depending\n                                    on the current platform (.url, .webloc or\n                                    .desktop). The URL may be cached by the OS\n    --write-url-link                Write a .url Windows internet shortcut. The\n                                    OS caches the URL based on the file path\n    --write-webloc-link             Write a .webloc macOS internet shortcut\n    --write-desktop-link            Write a .desktop Linux internet shortcut\n\n## Verbosity and Simulation Options:\n    -q, --quiet                     Activate quiet mode. If used with --verbose,\n                                    print the log to stderr\n    --no-quiet                      Deactivate quiet mode. (Default)\n    --no-warnings                   Ignore warnings\n    -s, --simulate                  Do not download the video and do not write\n                                    anything to disk\n    --no-simulate                   Download the video even if printing/listing\n                                    options are used\n    --ignore-no-formats-error       Ignore \"No video formats\" error. Useful for\n                                    extracting metadata even if the videos are\n                                    not actually available for download\n                                    (experimental)\n    --no-ignore-no-formats-error    Throw error when no downloadable video\n                                    formats are found (default)\n    --skip-download                 Do not download the video but write all\n                                    related files (Alias: --no-download)\n    -O, --print [WHEN:]TEMPLATE     Field name or output template to print to\n                                    screen, optionally prefixed with when to\n                                    print it, separated by a \":\". Supported\n                                    values of \"WHEN\" are the same as that of\n                                    --use-postprocessor (default: video).\n                                    Implies --quiet. Implies --simulate unless\n                                    --no-simulate or later stages of WHEN are\n                                    used. This option can be used multiple times\n    --print-to-file [WHEN:]TEMPLATE FILE\n                                    Append given template to the file. The\n                                    values of WHEN and TEMPLATE are the same as\n                                    that of --print. FILE uses the same syntax\n                                    as the output template. This option can be\n                                    used multiple times\n    -j, --dump-json                 Quiet, but print JSON information for each\n                                    video. Simulate unless --no-simulate is\n                                    used. See \"OUTPUT TEMPLATE\" for a\n                                    description of available keys\n    -J, --dump-single-json          Quiet, but print JSON information for each\n                                    URL or infojson passed. Simulate unless\n                                    --no-simulate is used. If the URL refers to\n                                    a playlist, the whole playlist information\n                                    is dumped in a single line\n    --force-write-archive           Force download archive entries to be written\n                                    as far as no errors occur, even if -s or\n                                    another simulation option is used (Alias:\n                                    --force-download-archive)\n    --newline                       Output progress bar as new lines\n    --no-progress                   Do not print progress bar\n    --progress                      Show progress bar, even if in quiet mode\n    --console-title                 Display progress in console titlebar\n    --progress-template [TYPES:]TEMPLATE\n                                    Template for progress outputs, optionally\n                                    prefixed with one of \"download:\" (default),\n                                    \"download-title:\" (the console title),\n                                    \"postprocess:\",  or \"postprocess-title:\".\n                                    The video's fields are accessible under the\n                                    \"info\" key and the progress attributes are\n                                    accessible under \"progress\" key. E.g.\n                                    --console-title --progress-template\n                                    \"download-title:%(info.id)s-%(progress.eta)s\"\n    --progress-delta SECONDS        Time between progress output (default: 0)\n    -v, --verbose                   Print various debugging information\n    --dump-pages                    Print downloaded pages encoded using base64\n                                    to debug problems (very verbose)\n    --write-pages                   Write downloaded intermediary pages to files\n                                    in the current directory to debug problems\n    --print-traffic                 Display sent and read HTTP traffic\n\n## Workarounds:\n    --encoding ENCODING             Force the specified encoding (experimental)\n    --legacy-server-connect         Explicitly allow HTTPS connection to servers\n                                    that do not support RFC 5746 secure\n                                    renegotiation\n    --no-check-certificates         Suppress HTTPS certificate validation\n    --prefer-insecure               Use an unencrypted connection to retrieve\n                                    information about the video (Currently\n                                    supported only for YouTube)\n    --add-headers FIELD:VALUE       Specify a custom HTTP header and its value,\n                                    separated by a colon \":\". You can use this\n                                    option multiple times\n    --bidi-workaround               Work around terminals that lack\n                                    bidirectional text support. Requires bidiv\n                                    or fribidi executable in PATH\n    --sleep-requests SECONDS        Number of seconds to sleep between requests\n                                    during data extraction\n    --sleep-interval SECONDS        Number of seconds to sleep before each\n                                    download. This is the minimum time to sleep\n                                    when used along with --max-sleep-interval\n                                    (Alias: --min-sleep-interval)\n    --max-sleep-interval SECONDS    Maximum number of seconds to sleep. Can only\n                                    be used along with --min-sleep-interval\n    --sleep-subtitles SECONDS       Number of seconds to sleep before each\n                                    subtitle download\n\n## Video Format Options:\n    -f, --format FORMAT             Video format code, see \"FORMAT SELECTION\"\n                                    for more details\n    -S, --format-sort SORTORDER     Sort the formats by the fields given, see\n                                    \"Sorting Formats\" for more details\n    --format-sort-force             Force user specified sort order to have\n                                    precedence over all fields, see \"Sorting\n                                    Formats\" for more details (Alias: --S-force)\n    --no-format-sort-force          Some fields have precedence over the user\n                                    specified sort order (default)\n    --video-multistreams            Allow multiple video streams to be merged\n                                    into a single file\n    --no-video-multistreams         Only one video stream is downloaded for each\n                                    output file (default)\n    --audio-multistreams            Allow multiple audio streams to be merged\n                                    into a single file\n    --no-audio-multistreams         Only one audio stream is downloaded for each\n                                    output file (default)\n    --prefer-free-formats           Prefer video formats with free containers\n                                    over non-free ones of the same quality. Use\n                                    with \"-S ext\" to strictly prefer free\n                                    containers irrespective of quality\n    --no-prefer-free-formats        Don't give any special preference to free\n                                    containers (default)\n    --check-formats                 Make sure formats are selected only from\n                                    those that are actually downloadable\n    --check-all-formats             Check all formats for whether they are\n                                    actually downloadable\n    --no-check-formats              Do not check that the formats are actually\n                                    downloadable\n    -F, --list-formats              List available formats of each video.\n                                    Simulate unless --no-simulate is used\n    --merge-output-format FORMAT    Containers that may be used when merging\n                                    formats, separated by \"/\", e.g. \"mp4/mkv\".\n                                    Ignored if no merge is required. (currently\n                                    supported: avi, flv, mkv, mov, mp4, webm)\n\n## Subtitle Options:\n    --write-subs                    Write subtitle file\n    --no-write-subs                 Do not write subtitle file (default)\n    --write-auto-subs               Write automatically generated subtitle file\n                                    (Alias: --write-automatic-subs)\n    --no-write-auto-subs            Do not write auto-generated subtitles\n                                    (default) (Alias: --no-write-automatic-subs)\n    --list-subs                     List available subtitles of each video.\n                                    Simulate unless --no-simulate is used\n    --sub-format FORMAT             Subtitle format; accepts formats preference\n                                    separated by \"/\", e.g. \"srt\" or \"ass/srt/best\"\n    --sub-langs LANGS               Languages of the subtitles to download (can\n                                    be regex) or \"all\" separated by commas, e.g.\n                                    --sub-langs \"en.*,ja\" (where \"en.*\" is a\n                                    regex pattern that matches \"en\" followed by\n                                    0 or more of any character). You can prefix\n                                    the language code with a \"-\" to exclude it\n                                    from the requested languages, e.g. --sub-\n                                    langs all,-live_chat. Use --list-subs for a\n                                    list of available language tags\n\n## Authentication Options:\n    -u, --username USERNAME         Login with this account ID\n    -p, --password PASSWORD         Account password. If this option is left\n                                    out, yt-dlp will ask interactively\n    -2, --twofactor TWOFACTOR       Two-factor authentication code\n    -n, --netrc                     Use .netrc authentication data\n    --netrc-location PATH           Location of .netrc authentication data;\n                                    either the path or its containing directory.\n                                    Defaults to ~/.netrc\n    --netrc-cmd NETRC_CMD           Command to execute to get the credentials\n                                    for an extractor.\n    --video-password PASSWORD       Video-specific password\n    --ap-mso MSO                    Adobe Pass multiple-system operator (TV\n                                    provider) identifier, use --ap-list-mso for\n                                    a list of available MSOs\n    --ap-username USERNAME          Multiple-system operator account login\n    --ap-password PASSWORD          Multiple-system operator account password.\n                                    If this option is left out, yt-dlp will ask\n                                    interactively\n    --ap-list-mso                   List all supported multiple-system operators\n    --client-certificate CERTFILE   Path to client certificate file in PEM\n                                    format. May include the private key\n    --client-certificate-key KEYFILE\n                                    Path to private key file for client\n                                    certificate\n    --client-certificate-password PASSWORD\n                                    Password for client certificate private key,\n                                    if encrypted. If not provided, and the key\n                                    is encrypted, yt-dlp will ask interactively\n\n## Post-Processing Options:\n    -x, --extract-audio             Convert video files to audio-only files\n                                    (requires ffmpeg and ffprobe)\n    --audio-format FORMAT           Format to convert the audio to when -x is\n                                    used. (currently supported: best (default),\n                                    aac, alac, flac, m4a, mp3, opus, vorbis,\n                                    wav). You can specify multiple rules using\n                                    similar syntax as --remux-video\n    --audio-quality QUALITY         Specify ffmpeg audio quality to use when\n                                    converting the audio with -x. Insert a value\n                                    between 0 (best) and 10 (worst) for VBR or a\n                                    specific bitrate like 128K (default 5)\n    --remux-video FORMAT            Remux the video into another container if\n                                    necessary (currently supported: avi, flv,\n                                    gif, mkv, mov, mp4, webm, aac, aiff, alac,\n                                    flac, m4a, mka, mp3, ogg, opus, vorbis,\n                                    wav). If the target container does not\n                                    support the video/audio codec, remuxing will\n                                    fail. You can specify multiple rules; e.g.\n                                    \"aac>m4a/mov>mp4/mkv\" will remux aac to m4a,\n                                    mov to mp4 and anything else to mkv\n    --recode-video FORMAT           Re-encode the video into another format if\n                                    necessary. The syntax and supported formats\n                                    are the same as --remux-video\n    --postprocessor-args NAME:ARGS  Give these arguments to the postprocessors.\n                                    Specify the postprocessor/executable name\n                                    and the arguments separated by a colon \":\"\n                                    to give the argument to the specified\n                                    postprocessor/executable. Supported PP are:\n                                    Merger, ModifyChapters, SplitChapters,\n                                    ExtractAudio, VideoRemuxer, VideoConvertor,\n                                    Metadata, EmbedSubtitle, EmbedThumbnail,\n                                    SubtitlesConvertor, ThumbnailsConvertor,\n                                    FixupStretched, FixupM4a, FixupM3u8,\n                                    FixupTimestamp and FixupDuration. The\n                                    supported executables are: AtomicParsley,\n                                    FFmpeg and FFprobe. You can also specify\n                                    \"PP+EXE:ARGS\" to give the arguments to the\n                                    specified executable only when being used by\n                                    the specified postprocessor. Additionally,\n                                    for ffmpeg/ffprobe, \"_i\"/\"_o\" can be\n                                    appended to the prefix optionally followed\n                                    by a number to pass the argument before the\n                                    specified input/output file, e.g. --ppa\n                                    \"Merger+ffmpeg_i1:-v quiet\". You can use\n                                    this option multiple times to give different\n                                    arguments to different postprocessors.\n                                    (Alias: --ppa)\n    -k, --keep-video                Keep the intermediate video file on disk\n                                    after post-processing\n    --no-keep-video                 Delete the intermediate video file after\n                                    post-processing (default)\n    --post-overwrites               Overwrite post-processed files (default)\n    --no-post-overwrites            Do not overwrite post-processed files\n    --embed-subs                    Embed subtitles in the video (only for mp4,\n                                    webm and mkv videos)\n    --no-embed-subs                 Do not embed subtitles (default)\n    --embed-thumbnail               Embed thumbnail in the video as cover art\n    --no-embed-thumbnail            Do not embed thumbnail (default)\n    --embed-metadata                Embed metadata to the video file. Also\n                                    embeds chapters/infojson if present unless\n                                    --no-embed-chapters/--no-embed-info-json are\n                                    used (Alias: --add-metadata)\n    --no-embed-metadata             Do not add metadata to file (default)\n                                    (Alias: --no-add-metadata)\n    --embed-chapters                Add chapter markers to the video file\n                                    (Alias: --add-chapters)\n    --no-embed-chapters             Do not add chapter markers (default) (Alias:\n                                    --no-add-chapters)\n    --embed-info-json               Embed the infojson as an attachment to\n                                    mkv/mka video files\n    --no-embed-info-json            Do not embed the infojson as an attachment\n                                    to the video file\n    --parse-metadata [WHEN:]FROM:TO\n                                    Parse additional metadata like title/artist\n                                    from other fields; see \"MODIFYING METADATA\"\n                                    for details. Supported values of \"WHEN\" are\n                                    the same as that of --use-postprocessor\n                                    (default: pre_process)\n    --replace-in-metadata [WHEN:]FIELDS REGEX REPLACE\n                                    Replace text in a metadata field using the\n                                    given regex. This option can be used\n                                    multiple times. Supported values of \"WHEN\"\n                                    are the same as that of --use-postprocessor\n                                    (default: pre_process)\n    --xattrs                        Write metadata to the video file's xattrs\n                                    (using Dublin Core and XDG standards)\n    --concat-playlist POLICY        Concatenate videos in a playlist. One of\n                                    \"never\", \"always\", or \"multi_video\"\n                                    (default; only when the videos form a single\n                                    show). All the video files must have the\n                                    same codecs and number of streams to be\n                                    concatenable. The \"pl_video:\" prefix can be\n                                    used with \"--paths\" and \"--output\" to set\n                                    the output filename for the concatenated\n                                    files. See \"OUTPUT TEMPLATE\" for details\n    --fixup POLICY                  Automatically correct known faults of the\n                                    file. One of never (do nothing), warn (only\n                                    emit a warning), detect_or_warn (the\n                                    default; fix the file if we can, warn\n                                    otherwise), force (try fixing even if the\n                                    file already exists)\n    --ffmpeg-location PATH          Location of the ffmpeg binary; either the\n                                    path to the binary or its containing directory\n    --exec [WHEN:]CMD               Execute a command, optionally prefixed with\n                                    when to execute it, separated by a \":\".\n                                    Supported values of \"WHEN\" are the same as\n                                    that of --use-postprocessor (default:\n                                    after_move). The same syntax as the output\n                                    template can be used to pass any field as\n                                    arguments to the command. If no fields are\n                                    passed, %(filepath,_filename|)q is appended\n                                    to the end of the command. This option can\n                                    be used multiple times\n    --no-exec                       Remove any previously defined --exec\n    --convert-subs FORMAT           Convert the subtitles to another format\n                                    (currently supported: ass, lrc, srt, vtt).\n                                    Use \"--convert-subs none\" to disable\n                                    conversion (default) (Alias: --convert-\n                                    subtitles)\n    --convert-thumbnails FORMAT     Convert the thumbnails to another format\n                                    (currently supported: jpg, png, webp). You\n                                    can specify multiple rules using similar\n                                    syntax as \"--remux-video\". Use \"--convert-\n                                    thumbnails none\" to disable conversion\n                                    (default)\n    --split-chapters                Split video into multiple files based on\n                                    internal chapters. The \"chapter:\" prefix can\n                                    be used with \"--paths\" and \"--output\" to set\n                                    the output filename for the split files. See\n                                    \"OUTPUT TEMPLATE\" for details\n    --no-split-chapters             Do not split video based on chapters (default)\n    --remove-chapters REGEX         Remove chapters whose title matches the\n                                    given regular expression. The syntax is the\n                                    same as --download-sections. This option can\n                                    be used multiple times\n    --no-remove-chapters            Do not remove any chapters from the file\n                                    (default)\n    --force-keyframes-at-cuts       Force keyframes at cuts when\n                                    downloading/splitting/removing sections.\n                                    This is slow due to needing a re-encode, but\n                                    the resulting video may have fewer artifacts\n                                    around the cuts\n    --no-force-keyframes-at-cuts    Do not force keyframes around the chapters\n                                    when cutting/splitting (default)\n    --use-postprocessor NAME[:ARGS]\n                                    The (case-sensitive) name of plugin\n                                    postprocessors to be enabled, and\n                                    (optionally) arguments to be passed to it,\n                                    separated by a colon \":\". ARGS are a\n                                    semicolon \";\" delimited list of NAME=VALUE.\n                                    The \"when\" argument determines when the\n                                    postprocessor is invoked. It can be one of\n                                    \"pre_process\" (after video extraction),\n                                    \"after_filter\" (after video passes filter),\n                                    \"video\" (after --format; before\n                                    --print/--output), \"before_dl\" (before each\n                                    video download), \"post_process\" (after each\n                                    video download; default), \"after_move\"\n                                    (after moving the video file to its final\n                                    location), \"after_video\" (after downloading\n                                    and processing all formats of a video), or\n                                    \"playlist\" (at end of playlist). This option\n                                    can be used multiple times to add different\n                                    postprocessors\n\n## SponsorBlock Options:\nMake chapter entries for, or remove various segments (sponsor,\n    introductions, etc.) from downloaded YouTube videos using the\n    [SponsorBlock API](https://sponsor.ajay.app)\n\n    --sponsorblock-mark CATS        SponsorBlock categories to create chapters\n                                    for, separated by commas. Available\n                                    categories are sponsor, intro, outro,\n                                    selfpromo, preview, filler, interaction,\n                                    music_offtopic, poi_highlight, chapter, all\n                                    and default (=all). You can prefix the\n                                    category with a \"-\" to exclude it. See [1]\n                                    for descriptions of the categories. E.g.\n                                    --sponsorblock-mark all,-preview\n                                    [1] https://wiki.sponsor.ajay.app/w/Segment_Categories\n    --sponsorblock-remove CATS      SponsorBlock categories to be removed from\n                                    the video file, separated by commas. If a\n                                    category is present in both mark and remove,\n                                    remove takes precedence. The syntax and\n                                    available categories are the same as for\n                                    --sponsorblock-mark except that \"default\"\n                                    refers to \"all,-filler\" and poi_highlight,\n                                    chapter are not available\n    --sponsorblock-chapter-title TEMPLATE\n                                    An output template for the title of the\n                                    SponsorBlock chapters created by\n                                    --sponsorblock-mark. The only available\n                                    fields are start_time, end_time, category,\n                                    categories, name, category_names. Defaults\n                                    to \"[SponsorBlock]: %(category_names)l\"\n    --no-sponsorblock               Disable both --sponsorblock-mark and\n                                    --sponsorblock-remove\n    --sponsorblock-api URL          SponsorBlock API location, defaults to\n                                    https://sponsor.ajay.app\n\n## Extractor Options:\n    --extractor-retries RETRIES     Number of retries for known extractor errors\n                                    (default is 3), or \"infinite\"\n    --allow-dynamic-mpd             Process dynamic DASH manifests (default)\n                                    (Alias: --no-ignore-dynamic-mpd)\n    --ignore-dynamic-mpd            Do not process dynamic DASH manifests\n                                    (Alias: --no-allow-dynamic-mpd)\n    --hls-split-discontinuity       Split HLS playlists to different formats at\n                                    discontinuities such as ad breaks\n    --no-hls-split-discontinuity    Do not split HLS playlists into different\n                                    formats at discontinuities such as ad breaks\n                                    (default)\n    --extractor-args IE_KEY:ARGS    Pass ARGS arguments to the IE_KEY extractor.\n                                    See \"EXTRACTOR ARGUMENTS\" for details. You\n                                    can use this option multiple times to give\n                                    arguments for different extractors\n\n# CONFIGURATION\n\nYou can configure yt-dlp by placing any supported command line option in a configuration file. The configuration is loaded from the following locations:\n\n1. **Main Configuration**:\n    * The file given to `--config-location`\n1. **Portable Configuration**: (Recommended for portable installations)\n    * If using a binary, `yt-dlp.conf` in the same directory as the binary\n    * If running from source-code, `yt-dlp.conf` in the parent directory of `yt_dlp`\n1. **Home Configuration**:\n    * `yt-dlp.conf` in the home path given to `-P`\n    * If `-P` is not given, the current directory is searched\n1. **User Configuration**:\n    * `${XDG_CONFIG_HOME}/yt-dlp.conf`\n    * `${XDG_CONFIG_HOME}/yt-dlp/config` (recommended on Linux/macOS)\n    * `${XDG_CONFIG_HOME}/yt-dlp/config.txt`\n    * `${APPDATA}/yt-dlp.conf`\n    * `${APPDATA}/yt-dlp/config` (recommended on Windows)\n    * `${APPDATA}/yt-dlp/config.txt`\n    * `~/yt-dlp.conf`\n    * `~/yt-dlp.conf.txt`\n    * `~/.yt-dlp/config`\n    * `~/.yt-dlp/config.txt`\n\n    See also: [Notes about environment variables](#notes-about-environment-variables)\n1. **System Configuration**:\n    * `/etc/yt-dlp.conf`\n    * `/etc/yt-dlp/config`\n    * `/etc/yt-dlp/config.txt`\n\nE.g. with the following configuration file, yt-dlp will always extract the audio, not copy the mtime, use a proxy and save all videos under `YouTube` directory in your home directory:\n```\n# Lines starting with # are comments\n\n# Always extract audio\n-x\n\n# Do not copy the mtime\n--no-mtime\n\n# Use this proxy\n--proxy 127.0.0.1:3128\n\n# Save all videos under YouTube directory in your home directory\n-o ~/YouTube/%(title)s.%(ext)s\n```\n\n**Note**: Options in a configuration file are just the same options aka switches used in regular command line calls; thus there **must be no whitespace** after `-` or `--`, e.g. `-o` or `--proxy` but not `- o` or `-- proxy`. They must also be quoted when necessary, as if it were a UNIX shell.\n\nYou can use `--ignore-config` if you want to disable all configuration files for a particular yt-dlp run. If `--ignore-config` is found inside any configuration file, no further configuration will be loaded. For example, having the option in the portable configuration file prevents loading of home, user, and system configurations. Additionally, (for backward compatibility) if `--ignore-config` is found inside the system configuration file, the user configuration is not loaded.\n\n### Configuration file encoding\n\nThe configuration files are decoded according to the UTF BOM if present, and in the encoding from system locale otherwise.\n\nIf you want your file to be decoded differently, add `# coding: ENCODING` to the beginning of the file (e.g. `# coding: shift-jis`). There must be no characters before that, even spaces or BOM.\n\n### Authentication with netrc\n\nYou may also want to configure automatic credentials storage for extractors that support authentication (by providing login and password with `--username` and `--password`) in order not to pass credentials as command line arguments on every yt-dlp execution and prevent tracking plain text passwords in the shell command history. You can achieve this using a [`.netrc` file](https://stackoverflow.com/tags/.netrc/info) on a per-extractor basis. For that, you will need to create a `.netrc` file in `--netrc-location` and restrict permissions to read/write by only you:\n```\ntouch ${HOME}/.netrc\nchmod a-rwx,u+rw ${HOME}/.netrc\n```\nAfter that, you can add credentials for an extractor in the following format, where *extractor* is the name of the extractor in lowercase:\n```\nmachine <extractor> login <username> password <password>\n```\nE.g.\n```\nmachine youtube login myaccount@gmail.com password my_youtube_password\nmachine twitch login my_twitch_account_name password my_twitch_password\n```\nTo activate authentication with the `.netrc` file you should pass `--netrc` to yt-dlp or place it in the [configuration file](#configuration).\n\nThe default location of the .netrc file is `~` (see below).\n\nAs an alternative to using the `.netrc` file, which has the disadvantage of keeping your passwords in a plain text file, you can configure a custom shell command to provide the credentials for an extractor. This is done by providing the `--netrc-cmd` parameter, it shall output the credentials in the netrc format and return `0` on success, other values will be treated as an error. `{}` in the command will be replaced by the name of the extractor to make it possible to select the credentials for the right extractor.\n\nE.g. To use an encrypted `.netrc` file stored as `.authinfo.gpg`\n```\nyt-dlp --netrc-cmd 'gpg --decrypt ~/.authinfo.gpg' 'https://www.youtube.com/watch?v=BaW_jenozKc'\n```\n\n\n### Notes about environment variables\n* Environment variables are normally specified as `${VARIABLE}`/`$VARIABLE` on UNIX and `%VARIABLE%` on Windows; but is always shown as `${VARIABLE}` in this documentation\n* yt-dlp also allows using UNIX-style variables on Windows for path-like options; e.g. `--output`, `--config-location`\n* If unset, `${XDG_CONFIG_HOME}` defaults to `~/.config` and `${XDG_CACHE_HOME}` to `~/.cache`\n* On Windows, `~` points to `${HOME}` if present; or, `${USERPROFILE}` or `${HOMEDRIVE}${HOMEPATH}` otherwise\n* On Windows, `${USERPROFILE}` generally points to `C:\\Users\\<user name>` and `${APPDATA}` to `${USERPROFILE}\\AppData\\Roaming`\n\n# OUTPUT TEMPLATE\n\nThe `-o` option is used to indicate a template for the output file names while `-P` option is used to specify the path each type of file should be saved to.\n\n<!-- MANPAGE: BEGIN EXCLUDED SECTION -->\n**tl;dr:** [navigate me to examples](#output-template-examples).\n<!-- MANPAGE: END EXCLUDED SECTION -->\n\nThe simplest usage of `-o` is not to set any template arguments when downloading a single file, like in `yt-dlp -o funny_video.flv \"https://some/video\"` (hard-coding file extension like this is _not_ recommended and could break some post-processing).\n\nIt may however also contain special sequences that will be replaced when downloading each video. The special sequences may be formatted according to [Python string formatting operations](https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting), e.g. `%(NAME)s` or `%(NAME)05d`. To clarify, that is a percent symbol followed by a name in parentheses, followed by formatting operations.\n\nThe field names themselves (the part inside the parenthesis) can also have some special formatting:\n\n1. **Object traversal**: The dictionaries and lists available in metadata can be traversed by using a dot `.` separator; e.g. `%(tags.0)s`, `%(subtitles.en.-1.ext)s`. You can do Python slicing with colon `:`; E.g. `%(id.3:7)s`, `%(id.6:2:-1)s`, `%(formats.:.format_id)s`. Curly braces `{}` can be used to build dictionaries with only specific keys; e.g. `%(formats.:.{format_id,height})#j`. An empty field name `%()s` refers to the entire infodict; e.g. `%(.{id,title})s`. Note that all the fields that become available using this method are not listed below. Use `-j` to see such fields\n\n1. **Arithmetic**: Simple arithmetic can be done on numeric fields using `+`, `-` and `*`. E.g. `%(playlist_index+10)03d`, `%(n_entries+1-playlist_index)d`\n\n1. **Date/time Formatting**: Date/time fields can be formatted according to [strftime formatting](https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes) by specifying it separated from the field name using a `>`. E.g. `%(duration>%H-%M-%S)s`, `%(upload_date>%Y-%m-%d)s`, `%(epoch-3600>%H-%M-%S)s`\n\n1. **Alternatives**: Alternate fields can be specified separated with a `,`. E.g. `%(release_date>%Y,upload_date>%Y|Unknown)s`\n\n1. **Replacement**: A replacement value can be specified using a `&` separator according to the [`str.format` mini-language](https://docs.python.org/3/library/string.html#format-specification-mini-language). If the field is *not* empty, this replacement value will be used instead of the actual field content. This is done after alternate fields are considered; thus the replacement is used if *any* of the alternative fields is *not* empty. E.g. `%(chapters&has chapters|no chapters)s`, `%(title&TITLE={:>20}|NO TITLE)s`\n\n1. **Default**: A literal default value can be specified for when the field is empty using a `|` separator. This overrides `--output-na-placeholder`. E.g. `%(uploader|Unknown)s`\n\n1. **More Conversions**: In addition to the normal format types `diouxXeEfFgGcrs`, yt-dlp additionally supports converting to `B` = **B**ytes, `j` = **j**son (flag `#` for pretty-printing, `+` for Unicode), `h` = HTML escaping, `l` = a comma separated **l**ist (flag `#` for `\\n` newline-separated), `q` = a string **q**uoted for the terminal (flag `#` to split a list into different arguments), `D` = add **D**ecimal suffixes (e.g. 10M) (flag `#` to use 1024 as factor), and `S` = **S**anitize as filename (flag `#` for restricted)\n\n1. **Unicode normalization**: The format type `U` can be used for NFC [Unicode normalization](https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize). The alternate form flag (`#`) changes the normalization to NFD and the conversion flag `+` can be used for NFKC/NFKD compatibility equivalence normalization. E.g. `%(title)+.100U` is NFKC\n\nTo summarize, the general syntax for a field is:\n```\n%(name[.keys][addition][>strf][,alternate][&replacement][|default])[flags][width][.precision][length]type\n```\n\nAdditionally, you can set different output templates for the various metadata files separately from the general output template by specifying the type of file followed by the template separated by a colon `:`. The different file types supported are `subtitle`, `thumbnail`, `description`, `annotation` (deprecated), `infojson`, `link`, `pl_thumbnail`, `pl_description`, `pl_infojson`, `chapter`, `pl_video`. E.g. `-o \"%(title)s.%(ext)s\" -o \"thumbnail:%(title)s\\%(title)s.%(ext)s\"` will put the thumbnails in a folder with the same name as the video. If any of the templates is empty, that type of file will not be written. E.g. `--write-thumbnail -o \"thumbnail:\"` will write thumbnails only for playlists and not for video.\n\n<a id=\"outtmpl-postprocess-note\"></a>\n\n**Note**: Due to post-processing (i.e. merging etc.), the actual output filename might differ. Use `--print after_move:filepath` to get the name after all post-processing is complete.\n\nThe available fields are:\n\n - `id` (string): Video identifier\n - `title` (string): Video title\n - `fulltitle` (string): Video title ignoring live timestamp and generic title\n - `ext` (string): Video filename extension\n - `alt_title` (string): A secondary title of the video\n - `description` (string): The description of the video\n - `display_id` (string): An alternative identifier for the video\n - `uploader` (string): Full name of the video uploader\n - `uploader_id` (string): Nickname or id of the video uploader\n - `uploader_url` (string): URL to the video uploader's profile\n - `license` (string): License name the video is licensed under\n - `creators` (list): The creators of the video\n - `creator` (string): The creators of the video; comma-separated\n - `timestamp` (numeric): UNIX timestamp of the moment the video became available\n - `upload_date` (string): Video upload date in UTC (YYYYMMDD)\n - `release_timestamp` (numeric): UNIX timestamp of the moment the video was released\n - `release_date` (string): The date (YYYYMMDD) when the video was released in UTC\n - `release_year` (numeric): Year (YYYY) when the video or album was released\n - `modified_timestamp` (numeric): UNIX timestamp of the moment the video was last modified\n - `modified_date` (string): The date (YYYYMMDD) when the video was last modified in UTC\n - `channel` (string): Full name of the channel the video is uploaded on\n - `channel_id` (string): Id of the channel\n - `channel_url` (string): URL of the channel\n - `channel_follower_count` (numeric): Number of followers of the channel\n - `channel_is_verified` (boolean): Whether the channel is verified on the platform\n - `location` (string): Physical location where the video was filmed\n - `duration` (numeric): Length of the video in seconds\n - `duration_string` (string): Length of the video (HH:mm:ss)\n - `view_count` (numeric): How many users have watched the video on the platform\n - `concurrent_view_count` (numeric): How many users are currently watching the video on the platform.\n - `like_count` (numeric): Number of positive ratings of the video\n - `dislike_count` (numeric): Number of negative ratings of the video\n - `repost_count` (numeric): Number of reposts of the video\n - `average_rating` (numeric): Average rating given by users, the scale used depends on the webpage\n - `comment_count` (numeric): Number of comments on the video (For some extractors, comments are only downloaded at the end, and so this field cannot be used)\n - `age_limit` (numeric): Age restriction for the video (years)\n - `live_status` (string): One of \"not_live\", \"is_live\", \"is_upcoming\", \"was_live\", \"post_live\" (was live, but VOD is not yet processed)\n - `is_live` (boolean): Whether this video is a live stream or a fixed-length video\n - `was_live` (boolean): Whether this video was originally a live stream\n - `playable_in_embed` (string): Whether this video is allowed to play in embedded players on other sites\n - `availability` (string): Whether the video is \"private\", \"premium_only\", \"subscriber_only\", \"needs_auth\", \"unlisted\" or \"public\"\n - `media_type` (string): The type of media as classified by the site, e.g. \"episode\", \"clip\", \"trailer\"\n - `start_time` (numeric): Time in seconds where the reproduction should start, as specified in the URL\n - `end_time` (numeric): Time in seconds where the reproduction should end, as specified in the URL\n - `extractor` (string): Name of the extractor\n - `extractor_key` (string): Key name of the extractor\n - `epoch` (numeric): Unix epoch of when the information extraction was completed\n - `autonumber` (numeric): Number that will be increased with each download, starting at `--autonumber-start`, padded with leading zeros to 5 digits\n - `video_autonumber` (numeric): Number that will be increased with each video\n - `n_entries` (numeric): Total number of extracted items in the playlist\n - `playlist_id` (string): Identifier of the playlist that contains the video\n - `playlist_title` (string): Name of the playlist that contains the video\n - `playlist` (string): `playlist_title` if available or else `playlist_id`\n - `playlist_count` (numeric): Total number of items in the playlist. May not be known if entire playlist is not extracted\n - `playlist_index` (numeric): Index of the video in the playlist padded with leading zeros according the final index\n - `playlist_autonumber` (numeric): Position of the video in the playlist download queue padded with leading zeros according to the total length of the playlist\n - `playlist_uploader` (string): Full name of the playlist uploader\n - `playlist_uploader_id` (string): Nickname or id of the playlist uploader\n - `playlist_channel` (string): Display name of the channel that uploaded the playlist\n - `playlist_channel_id` (string): Identifier of the channel that uploaded the playlist\n - `playlist_webpage_url` (string): URL of the playlist webpage\n - `webpage_url` (string): A URL to the video webpage which, if given to yt-dlp, should yield the same result again\n - `webpage_url_basename` (string): The basename of the webpage URL\n - `webpage_url_domain` (string): The domain of the webpage URL\n - `original_url` (string): The URL given by the user (or the same as `webpage_url` for playlist entries)\n - `categories` (list): List of categories the video belongs to\n - `tags` (list): List of tags assigned to the video\n - `cast` (list): List of cast members\n\nAll the fields in [Filtering Formats](#filtering-formats) can also be used\n\nAvailable for the video that belongs to some logical chapter or section:\n\n - `chapter` (string): Name or title of the chapter the video belongs to\n - `chapter_number` (numeric): Number of the chapter the video belongs to\n - `chapter_id` (string): Id of the chapter the video belongs to\n\nAvailable for the video that is an episode of some series or program:\n\n - `series` (string): Title of the series or program the video episode belongs to\n - `series_id` (string): Id of the series or program the video episode belongs to\n - `season` (string): Title of the season the video episode belongs to\n - `season_number` (numeric): Number of the season the video episode belongs to\n - `season_id` (string): Id of the season the video episode belongs to\n - `episode` (string): Title of the video episode\n - `episode_number` (numeric): Number of the video episode within a season\n - `episode_id` (string): Id of the video episode\n\nAvailable for the media that is a track or a part of a music album:\n\n - `track` (string): Title of the track\n - `track_number` (numeric): Number of the track within an album or a disc\n - `track_id` (string): Id of the track\n - `artists` (list): Artist(s) of the track\n - `artist` (string): Artist(s) of the track; comma-separated\n - `genres` (list): Genre(s) of the track\n - `genre` (string): Genre(s) of the track; comma-separated\n - `composers` (list): Composer(s) of the piece\n - `composer` (string): Composer(s) of the piece; comma-separated\n - `album` (string): Title of the album the track belongs to\n - `album_type` (string): Type of the album\n - `album_artists` (list): All artists appeared on the album\n - `album_artist` (string): All artists appeared on the album; comma-separated\n - `disc_number` (numeric): Number of the disc or other physical medium the track belongs to\n\nAvailable only when using `--download-sections` and for `chapter:` prefix when using `--split-chapters` for videos with internal chapters:\n\n - `section_title` (string): Title of the chapter\n - `section_number` (numeric): Number of the chapter within the file\n - `section_start` (numeric): Start time of the chapter in seconds\n - `section_end` (numeric): End time of the chapter in seconds\n\nAvailable only when used in `--print`:\n\n - `urls` (string): The URLs of all requested formats, one in each line\n - `filename` (string): Name of the video file. Note that the [actual filename may differ](#outtmpl-postprocess-note)\n - `formats_table` (table): The video format table as printed by `--list-formats`\n - `thumbnails_table` (table): The thumbnail format table as printed by `--list-thumbnails`\n - `subtitles_table` (table): The subtitle format table as printed by `--list-subs`\n - `automatic_captions_table` (table): The automatic subtitle format table as printed by `--list-subs`\n\n Available only after the video is downloaded (`post_process`/`after_move`):\n\n - `filepath`: Actual path of downloaded video file\n\nAvailable only in `--sponsorblock-chapter-title`:\n\n - `start_time` (numeric): Start time of the chapter in seconds\n - `end_time` (numeric): End time of the chapter in seconds\n - `categories` (list): The [SponsorBlock categories](https://wiki.sponsor.ajay.app/w/Types#Category) the chapter belongs to\n - `category` (string): The smallest SponsorBlock category the chapter belongs to\n - `category_names` (list): Friendly names of the categories\n - `name` (string): Friendly name of the smallest category\n - `type` (string): The [SponsorBlock action type](https://wiki.sponsor.ajay.app/w/Types#Action_Type) of the chapter\n\nEach aforementioned sequence when referenced in an output template will be replaced by the actual value corresponding to the sequence name. E.g. for `-o %(title)s-%(id)s.%(ext)s` and an mp4 video with title `yt-dlp test video` and id `BaW_jenozKc`, this will result in a `yt-dlp test video-BaW_jenozKc.mp4` file created in the current directory.\n\n**Note**: Some of the sequences are not guaranteed to be present, since they depend on the metadata obtained by a particular extractor. Such sequences will be replaced with placeholder value provided with `--output-na-placeholder` (`NA` by default).\n\n**Tip**: Look at the `-j` output to identify which fields are available for the particular URL\n\nFor numeric sequences, you can use [numeric related formatting](https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting); e.g. `%(view_count)05d` will result in a string with view count padded with zeros up to 5 characters, like in `00042`.\n\nOutput templates can also contain arbitrary hierarchical path, e.g. `-o \"%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s\"` which will result in downloading each video in a directory corresponding to this path template. Any missing directory will be automatically created for you.\n\nTo use percent literals in an output template use `%%`. To output to stdout use `-o -`.\n\nThe current default template is `%(title)s [%(id)s].%(ext)s`.\n\nIn some cases, you don't want special characters such as \u4e2d, spaces, or &, such as when transferring the downloaded filename to a Windows system or the filename through an 8bit-unsafe channel. In these cases, add the `--restrict-filenames` flag to get a shorter title.\n\n#### Output template examples\n\n```bash\n$ yt-dlp --print filename -o \"test video.%(ext)s\" BaW_jenozKc\ntest video.webm    # Literal name with correct extension\n\n$ yt-dlp --print filename -o \"%(title)s.%(ext)s\" BaW_jenozKc\nyoutube-dl test video ''_\u00e4\u21ad\ud835\udd50.webm    # All kinds of weird characters\n\n$ yt-dlp --print filename -o \"%(title)s.%(ext)s\" BaW_jenozKc --restrict-filenames\nyoutube-dl_test_video_.webm    # Restricted file name\n\n# Download YouTube playlist videos in separate directory indexed by video order in a playlist\n$ yt-dlp -o \"%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s\" \"https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re\"\n\n# Download YouTube playlist videos in separate directories according to their uploaded year\n$ yt-dlp -o \"%(upload_date>%Y)s/%(title)s.%(ext)s\" \"https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re\"\n\n# Prefix playlist index with \" - \" separator, but only if it is available\n$ yt-dlp -o \"%(playlist_index&{} - |)s%(title)s.%(ext)s\" BaW_jenozKc \"https://www.youtube.com/user/TheLinuxFoundation/playlists\"\n\n# Download all playlists of YouTube channel/user keeping each playlist in separate directory:\n$ yt-dlp -o \"%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s\" \"https://www.youtube.com/user/TheLinuxFoundation/playlists\"\n\n# Download Udemy course keeping each chapter in separate directory under MyVideos directory in your home\n$ yt-dlp -u user -p password -P \"~/MyVideos\" -o \"%(playlist)s/%(chapter_number)s - %(chapter)s/%(title)s.%(ext)s\" \"https://www.udemy.com/java-tutorial\"\n\n# Download entire series season keeping each series and each season in separate directory under C:/MyVideos\n$ yt-dlp -P \"C:/MyVideos\" -o \"%(series)s/%(season_number)s - %(season)s/%(episode_number)s - %(episode)s.%(ext)s\" \"https://videomore.ru/kino_v_detalayah/5_sezon/367617\"\n\n# Download video as \"C:\\MyVideos\\uploader\\title.ext\", subtitles as \"C:\\MyVideos\\subs\\uploader\\title.ext\"\n# and put all temporary files in \"C:\\MyVideos\\tmp\"\n$ yt-dlp -P \"C:/MyVideos\" -P \"temp:tmp\" -P \"subtitle:subs\" -o \"%(uploader)s/%(title)s.%(ext)s\" BaW_jenozKc --write-subs\n\n# Download video as \"C:\\MyVideos\\uploader\\title.ext\" and subtitles as \"C:\\MyVideos\\uploader\\subs\\title.ext\"\n$ yt-dlp -P \"C:/MyVideos\" -o \"%(uploader)s/%(title)s.%(ext)s\" -o \"subtitle:%(uploader)s/subs/%(title)s.%(ext)s\" BaW_jenozKc --write-subs\n\n# Stream the video being downloaded to stdout\n$ yt-dlp -o - BaW_jenozKc\n```\n\n# FORMAT SELECTION\n\nBy default, yt-dlp tries to download the best available quality if you **don't** pass any options.\nThis is generally equivalent to using `-f bestvideo*+bestaudio/best`. However, if multiple audiostreams is enabled (`--audio-multistreams`), the default format changes to `-f bestvideo+bestaudio/best`. Similarly, if ffmpeg is unavailable, or if you use yt-dlp to stream to `stdout` (`-o -`), the default becomes `-f best/bestvideo+bestaudio`.\n\n**Deprecation warning**: Latest versions of yt-dlp can stream multiple formats to the stdout simultaneously using ffmpeg. So, in future versions, the default for this will be set to `-f bv*+ba/b` similar to normal downloads. If you want to preserve the `-f b/bv+ba` setting, it is recommended to explicitly specify it in the configuration options.\n\nThe general syntax for format selection is `-f FORMAT` (or `--format FORMAT`) where `FORMAT` is a *selector expression*, i.e. an expression that describes format or formats you would like to download.\n\n<!-- MANPAGE: BEGIN EXCLUDED SECTION -->\n**tl;dr:** [navigate me to examples](#format-selection-examples).\n<!-- MANPAGE: END EXCLUDED SECTION -->\n\nThe simplest case is requesting a specific format; e.g. with `-f 22` you can download the format with format code equal to 22. You can get the list of available format codes for particular video using `--list-formats` or `-F`. Note that these format codes are extractor specific.\n\nYou can also use a file extension (currently `3gp`, `aac`, `flv`, `m4a`, `mp3`, `mp4`, `ogg`, `wav`, `webm` are supported) to download the best quality format of a particular file extension served as a single file, e.g. `-f webm` will download the best quality format with the `webm` extension served as a single file.\n\nYou can use `-f -` to interactively provide the format selector *for each video*\n\nYou can also use special names to select particular edge case formats:\n\n - `all`: Select **all formats** separately\n - `mergeall`: Select and **merge all formats** (Must be used with `--audio-multistreams`, `--video-multistreams` or both)\n - `b*`, `best*`: Select the best quality format that **contains either** a video or an audio or both (i.e.; `vcodec!=none or acodec!=none`)\n - `b`, `best`: Select the best quality format that **contains both** video and audio. Equivalent to `best*[vcodec!=none][acodec!=none]`\n - `bv`, `bestvideo`: Select the best quality **video-only** format. Equivalent to `best*[acodec=none]`\n - `bv*`, `bestvideo*`: Select the best quality format that **contains video**. It may also contain audio. Equivalent to `best*[vcodec!=none]`\n - `ba`, `bestaudio`: Select the best quality **audio-only** format. Equivalent to `best*[vcodec=none]`\n - `ba*`, `bestaudio*`: Select the best quality format that **contains audio**. It may also contain video. Equivalent to `best*[acodec!=none]` ([Do not use!](https://github.com/yt-dlp/yt-dlp/issues/979#issuecomment-919629354))\n - `w*`, `worst*`: Select the worst quality format that contains either a video or an audio\n - `w`, `worst`: Select the worst quality format that contains both video and audio. Equivalent to `worst*[vcodec!=none][acodec!=none]`\n - `wv`, `worstvideo`: Select the worst quality video-only format. Equivalent to `worst*[acodec=none]`\n - `wv*`, `worstvideo*`: Select the worst quality format that contains video. It may also contain audio. Equivalent to `worst*[vcodec!=none]`\n - `wa`, `worstaudio`: Select the worst quality audio-only format. Equivalent to `worst*[vcodec=none]`\n - `wa*`, `worstaudio*`: Select the worst quality format that contains audio. It may also contain video. Equivalent to `worst*[acodec!=none]`\n\nFor example, to download the worst quality video-only format you can use `-f worstvideo`. It is, however, recommended not to use `worst` and related options. When your format selector is `worst`, the format which is worst in all respects is selected. Most of the time, what you actually want is the video with the smallest filesize instead. So it is generally better to use `-S +size` or more rigorously, `-S +size,+br,+res,+fps` instead of `-f worst`. See [Sorting Formats](#sorting-formats) for more details.\n\nYou can select the n'th best format of a type by using `best<type>.<n>`. For example, `best.2` will select the 2nd best combined format. Similarly, `bv*.3` will select the 3rd best format that contains a video stream.\n\nIf you want to download multiple videos, and they don't have the same formats available, you can specify the order of preference using slashes. Note that formats on the left hand side are preferred; e.g. `-f 22/17/18` will download format 22 if it's available, otherwise it will download format 17 if it's available, otherwise it will download format 18 if it's available, otherwise it will complain that no suitable formats are available for download.\n\nIf you want to download several formats of the same video use a comma as a separator, e.g. `-f 22,17,18` will download all these three formats, of course if they are available. Or a more sophisticated example combined with the precedence feature: `-f 136/137/mp4/bestvideo,140/m4a/bestaudio`.\n\nYou can merge the video and audio of multiple formats into a single file using `-f <format1>+<format2>+...` (requires ffmpeg installed); e.g. `-f bestvideo+bestaudio` will download the best video-only format, the best audio-only format and mux them together with ffmpeg.\n\n**Deprecation warning**: Since the *below* described behavior is complex and counter-intuitive, this will be removed and multistreams will be enabled by default in the future. A new operator will be instead added to limit formats to single audio/video\n\nUnless `--video-multistreams` is used, all formats with a video stream except the first one are ignored. Similarly, unless `--audio-multistreams` is used, all formats with an audio stream except the first one are ignored. E.g. `-f bestvideo+best+bestaudio --video-multistreams --audio-multistreams` will download and merge all 3 given formats. The resulting file will have 2 video streams and 2 audio streams. But `-f bestvideo+best+bestaudio --no-video-multistreams` will download and merge only `bestvideo` and `bestaudio`. `best` is ignored since another format containing a video stream (`bestvideo`) has already been selected. The order of the formats is therefore important. `-f best+bestaudio --no-audio-multistreams` will download only `best` while `-f bestaudio+best --no-audio-multistreams` will ignore `best` and download only `bestaudio`.\n\n## Filtering Formats\n\nYou can also filter the video formats by putting a condition in brackets, as in `-f \"best[height=720]\"` (or `-f \"[filesize>10M]\"` since filters without a selector are interpreted as `best`).\n\nThe following numeric meta fields can be used with comparisons `<`, `<=`, `>`, `>=`, `=` (equals), `!=` (not equals):\n\n - `filesize`: The number of bytes, if known in advance\n - `filesize_approx`: An estimate for the number of bytes\n - `width`: Width of the video, if known\n - `height`: Height of the video, if known\n - `aspect_ratio`: Aspect ratio of the video, if known\n - `tbr`: Average bitrate of audio and video in [kbps](## \"1000 bits/sec\")\n - `abr`: Average audio bitrate in [kbps](## \"1000 bits/sec\")\n - `vbr`: Average video bitrate in [kbps](## \"1000 bits/sec\")\n - `asr`: Audio sampling rate in Hertz\n - `fps`: Frame rate\n - `audio_channels`: The number of audio channels\n - `stretched_ratio`: `width:height` of the video's pixels, if not square\n\nAlso filtering work for comparisons `=` (equals), `^=` (starts with), `$=` (ends with), `*=` (contains), `~=` (matches regex) and following string meta fields:\n\n - `url`: Video URL\n - `ext`: File extension\n - `acodec`: Name of the audio codec in use\n - `vcodec`: Name of the video codec in use\n - `container`: Name of the container format\n - `protocol`: The protocol that will be used for the actual download, lower-case (`http`, `https`, `rtsp`, `rtmp`, `rtmpe`, `mms`, `f4m`, `ism`, `http_dash_segments`, `m3u8`, or `m3u8_native`)\n - `language`: Language code\n - `dynamic_range`: The dynamic range of the video\n - `format_id`: A short description of the format\n - `format`: A human-readable description of the format\n - `format_note`: Additional info about the format\n - `resolution`: Textual description of width and height\n\nAny string comparison may be prefixed with negation `!` in order to produce an opposite comparison, e.g. `!*=` (does not contain). The comparand of a string comparison needs to be quoted with either double or single quotes if it contains spaces or special characters other than `._-`.\n\n**Note**: None of the aforementioned meta fields are guaranteed to be present since this solely depends on the metadata obtained by the particular extractor, i.e. the metadata offered by the website. Any other field made available by the extractor can also be used for filtering.\n\nFormats for which the value is not known are excluded unless you put a question mark (`?`) after the operator. You can combine format filters, so `-f \"bv[height<=?720][tbr>500]\"` selects up to 720p videos (or videos where the height is not known) with a bitrate of at least 500 kbps. You can also use the filters with `all` to download all formats that satisfy the filter, e.g. `-f \"all[vcodec=none]\"` selects all audio-only formats.\n\nFormat selectors can also be grouped using parentheses; e.g. `-f \"(mp4,webm)[height<480]\"` will download the best pre-merged mp4 and webm formats with a height lower than 480.\n\n## Sorting Formats\n\nYou can change the criteria for being considered the `best` by using `-S` (`--format-sort`). The general format for this is `--format-sort field1,field2...`.\n\nThe available fields are:\n\n - `hasvid`: Gives priority to formats that have a video stream\n - `hasaud`: Gives priority to formats that have an audio stream\n - `ie_pref`: The format preference\n - `lang`: The language preference as determined by the extractor (e.g. original language preferred over audio description)\n - `quality`: The quality of the format\n - `source`: The preference of the source\n - `proto`: Protocol used for download (`https`/`ftps` > `http`/`ftp` > `m3u8_native`/`m3u8` > `http_dash_segments`> `websocket_frag` > `mms`/`rtsp` > `f4f`/`f4m`)\n - `vcodec`: Video Codec (`av01` > `vp9.2` > `vp9` > `h265` > `h264` > `vp8` > `h263` > `theora` > other)\n - `acodec`: Audio Codec (`flac`/`alac` > `wav`/`aiff` > `opus` > `vorbis` > `aac` > `mp4a` > `mp3` > `ac4` > `eac3` > `ac3` > `dts` > other)\n - `codec`: Equivalent to `vcodec,acodec`\n - `vext`: Video Extension (`mp4` > `mov` > `webm` > `flv` > other). If `--prefer-free-formats` is used, `webm` is preferred.\n - `aext`: Audio Extension (`m4a` > `aac` > `mp3` > `ogg` > `opus` > `webm` > other). If `--prefer-free-formats` is used, the order changes to `ogg` > `opus` > `webm` > `mp3` > `m4a` > `aac`\n - `ext`: Equivalent to `vext,aext`\n - `filesize`: Exact filesize, if known in advance\n - `fs_approx`: Approximate filesize\n - `size`: Exact filesize if available, otherwise approximate filesize\n - `height`: Height of video\n - `width`: Width of video\n - `res`: Video resolution, calculated as the smallest dimension.\n - `fps`: Framerate of video\n - `hdr`: The dynamic range of the video (`DV` > `HDR12` > `HDR10+` > `HDR10` > `HLG` > `SDR`)\n - `channels`: The number of audio channels\n - `tbr`: Total average bitrate in [kbps](## \"1000 bits/sec\")\n - `vbr`: Average video bitrate in [kbps](## \"1000 bits/sec\")\n - `abr`: Average audio bitrate in [kbps](## \"1000 bits/sec\")\n - `br`: Average bitrate in [kbps](## \"1000 bits/sec\"), `tbr`/`vbr`/`abr`\n - `asr`: Audio sample rate in Hz\n\n**Deprecation warning**: Many of these fields have (currently undocumented) aliases, that may be removed in a future version. It is recommended to use only the documented field names.\n\nAll fields, unless specified otherwise, are sorted in descending order. To reverse this, prefix the field with a `+`. E.g. `+res` prefers format with the smallest resolution. Additionally, you can suffix a preferred value for the fields, separated by a `:`. E.g. `res:720` prefers larger videos, but no larger than 720p and the smallest video if there are no videos less than 720p. For `codec` and `ext`, you can provide two preferred values, the first for video and the second for audio. E.g. `+codec:avc:m4a` (equivalent to `+vcodec:avc,+acodec:m4a`) sets the video codec preference to `h264` > `h265` > `vp9` > `vp9.2` > `av01` > `vp8` > `h263` > `theora` and audio codec preference to `mp4a` > `aac` > `vorbis` > `opus` > `mp3` > `ac3` > `dts`. You can also make the sorting prefer the nearest values to the provided by using `~` as the delimiter. E.g. `filesize~1G` prefers the format with filesize closest to 1 GiB.\n\nThe fields `hasvid` and `ie_pref` are always given highest priority in sorting, irrespective of the user-defined order. This behavior can be changed by using `--format-sort-force`. Apart from these, the default order used is: `lang,quality,res,fps,hdr:12,vcodec,channels,acodec,size,br,asr,proto,ext,hasaud,source,id`. The extractors may override this default order, but they cannot override the user-provided order.\n\nNote that the default for hdr is `hdr:12`; i.e. Dolby Vision is not preferred. This choice was made since DV formats are not yet fully compatible with most devices. This may be changed in the future.\n\nIf your format selector is `worst`, the last item is selected after sorting. This means it will select the format that is worst in all respects. Most of the time, what you actually want is the video with the smallest filesize instead. So it is generally better to use `-f best -S +size,+br,+res,+fps`.\n\n**Tip**: You can use the `-v -F` to see how the formats have been sorted (worst to best).\n\n## Format Selection examples\n\n```bash\n# Download and merge the best video-only format and the best audio-only format,\n# or download the best combined format if video-only format is not available\n$ yt-dlp -f \"bv+ba/b\"\n\n# Download best format that contains video,\n# and if it doesn't already have an audio stream, merge it with best audio-only format\n$ yt-dlp -f \"bv*+ba/b\"\n\n# Same as above\n$ yt-dlp\n\n# Download the best video-only format and the best audio-only format without merging them\n# For this case, an output template should be used since\n# by default, bestvideo and bestaudio will have the same file name.\n$ yt-dlp -f \"bv,ba\" -o \"%(title)s.f%(format_id)s.%(ext)s\"\n\n# Download and merge the best format that has a video stream,\n# and all audio-only formats into one file\n$ yt-dlp -f \"bv*+mergeall[vcodec=none]\" --audio-multistreams\n\n# Download and merge the best format that has a video stream,\n# and the best 2 audio-only formats into one file\n$ yt-dlp -f \"bv*+ba+ba.2\" --audio-multistreams\n\n\n# The following examples show the old method (without -S) of format selection\n# and how to use -S to achieve a similar but (generally) better result\n\n# Download the worst video available (old method)\n$ yt-dlp -f \"wv*+wa/w\"\n\n# Download the best video available but with the smallest resolution\n$ yt-dlp -S \"+res\"\n\n# Download the smallest video available\n$ yt-dlp -S \"+size,+br\"\n\n\n\n# Download the best mp4 video available, or the best video if no mp4 available\n$ yt-dlp -f \"bv*[ext=mp4]+ba[ext=m4a]/b[ext=mp4] / bv*+ba/b\"\n\n# Download the best video with the best extension\n# (For video, mp4 > mov > webm > flv. For audio, m4a > aac > mp3 ...)\n$ yt-dlp -S \"ext\"\n\n\n\n# Download the best video available but no better than 480p,\n# or the worst video if there is no video under 480p\n$ yt-dlp -f \"bv*[height<=480]+ba/b[height<=480] / wv*+ba/w\"\n\n# Download the best video available with the largest height but no better than 480p,\n# or the best video with the smallest resolution if there is no video under 480p\n$ yt-dlp -S \"height:480\"\n\n# Download the best video available with the largest resolution but no better than 480p,\n# or the best video with the smallest resolution if there is no video under 480p\n# Resolution is determined by using the smallest dimension.\n# So this works correctly for vertical videos as well\n$ yt-dlp -S \"res:480\"\n\n\n\n# Download the best video (that also has audio) but no bigger than 50 MB,\n# or the worst video (that also has audio) if there is no video under 50 MB\n$ yt-dlp -f \"b[filesize<50M] / w\"\n\n# Download the largest video (that also has audio) but no bigger than 50 MB,\n# or the smallest video (that also has audio) if there is no video under 50 MB\n$ yt-dlp -f \"b\" -S \"filesize:50M\"\n\n# Download the best video (that also has audio) that is closest in size to 50 MB\n$ yt-dlp -f \"b\" -S \"filesize~50M\"\n\n\n\n# Download best video available via direct link over HTTP/HTTPS protocol,\n# or the best video available via any protocol if there is no such video\n$ yt-dlp -f \"(bv*+ba/b)[protocol^=http][protocol!*=dash] / (bv*+ba/b)\"\n\n# Download best video available via the best protocol\n# (https/ftps > http/ftp > m3u8_native > m3u8 > http_dash_segments ...)\n$ yt-dlp -S \"proto\"\n\n\n\n# Download the best video with either h264 or h265 codec,\n# or the best video if there is no such video\n$ yt-dlp -f \"(bv*[vcodec~='^((he|a)vc|h26[45])']+ba) / (bv*+ba/b)\"\n\n# Download the best video with best codec no better than h264,\n# or the best video with worst codec if there is no such video\n$ yt-dlp -S \"codec:h264\"\n\n# Download the best video with worst codec no worse than h264,\n# or the best video with best codec if there is no such video\n$ yt-dlp -S \"+codec:h264\"\n\n\n\n# More complex examples\n\n# Download the best video no better than 720p preferring framerate greater than 30,\n# or the worst video (still preferring framerate greater than 30) if there is no such video\n$ yt-dlp -f \"((bv*[fps>30]/bv*)[height<=720]/(wv*[fps>30]/wv*)) + ba / (b[fps>30]/b)[height<=720]/(w[fps>30]/w)\"\n\n# Download the video with the largest resolution no better than 720p,\n# or the video with the smallest resolution available if there is no such video,\n# preferring larger framerate for formats with the same resolution\n$ yt-dlp -S \"res:720,fps\"\n\n\n\n# Download the video with smallest resolution no worse than 480p,\n# or the video with the largest resolution available if there is no such video,\n# preferring better codec and then larger total bitrate for the same resolution\n$ yt-dlp -S \"+res:480,codec,br\"\n```\n\n# MODIFYING METADATA\n\nThe metadata obtained by the extractors can be modified by using `--parse-metadata` and `--replace-in-metadata`\n\n`--replace-in-metadata FIELDS REGEX REPLACE` is used to replace text in any metadata field using [Python regular expression](https://docs.python.org/3/library/re.html#regular-expression-syntax). [Backreferences](https://docs.python.org/3/library/re.html?highlight=backreferences#re.sub) can be used in the replace string for advanced use.\n\nThe general syntax of `--parse-metadata FROM:TO` is to give the name of a field or an [output template](#output-template) to extract data from, and the format to interpret it as, separated by a colon `:`. Either a [Python regular expression](https://docs.python.org/3/library/re.html#regular-expression-syntax) with named capture groups, a single field name, or a similar syntax to the [output template](#output-template) (only `%(field)s` formatting is supported) can be used for `TO`. The option can be used multiple times to parse and modify various fields.\n\nNote that these options preserve their relative order, allowing replacements to be made in parsed fields and vice versa. Also, any field thus created can be used in the [output template](#output-template) and will also affect the media file's metadata added when using `--embed-metadata`.\n\nThis option also has a few special uses:\n\n* You can download an additional URL based on the metadata of the currently downloaded video. To do this, set the field `additional_urls` to the URL that you want to download. E.g. `--parse-metadata \"description:(?P<additional_urls>https?://www\\.vimeo\\.com/\\d+)\"` will download the first vimeo video found in the description\n\n* You can use this to change the metadata that is embedded in the media file. To do this, set the value of the corresponding field with a `meta_` prefix. For example, any value you set to `meta_description` field will be added to the `description` field in the file - you can use this to set a different \"description\" and \"synopsis\". To modify the metadata of individual streams, use the `meta<n>_` prefix (e.g. `meta1_language`). Any value set to the `meta_` field will overwrite all default values.\n\n**Note**: Metadata modification happens before format selection, post-extraction and other post-processing operations. Some fields may be added or changed during these steps, overriding your changes.\n\nFor reference, these are the fields yt-dlp adds by default to the file metadata:\n\nMetadata fields            | From\n:--------------------------|:------------------------------------------------\n`title`                    | `track` or `title`\n`date`                     | `upload_date`\n`description`,  `synopsis` | `description`\n`purl`, `comment`          | `webpage_url`\n`track`                    | `track_number`\n`artist`                   | `artist`, `artists`, `creator`, `creators`, `uploader` or `uploader_id`\n`composer`                 | `composer` or `composers`\n`genre`                    | `genre` or `genres`\n`album`                    | `album`\n`album_artist`             | `album_artist` or `album_artists`\n`disc`                     | `disc_number`\n`show`                     | `series`\n`season_number`            | `season_number`\n`episode_id`               | `episode` or `episode_id`\n`episode_sort`             | `episode_number`\n`language` of each stream  | the format's `language`\n\n**Note**: The file format may not support some of these fields\n\n\n## Modifying metadata examples\n\n```bash\n# Interpret the title as \"Artist - Title\"\n$ yt-dlp --parse-metadata \"title:%(artist)s - %(title)s\"\n\n# Regex example\n$ yt-dlp --parse-metadata \"description:Artist - (?P<artist>.+)\"\n\n# Set title as \"Series name S01E05\"\n$ yt-dlp --parse-metadata \"%(series)s S%(season_number)02dE%(episode_number)02d:%(title)s\"\n\n# Prioritize uploader as the \"artist\" field in video metadata\n$ yt-dlp --parse-metadata \"%(uploader|)s:%(meta_artist)s\" --embed-metadata\n\n# Set \"comment\" field in video metadata using description instead of webpage_url,\n# handling multiple lines correctly\n$ yt-dlp --parse-metadata \"description:(?s)(?P<meta_comment>.+)\" --embed-metadata\n\n# Do not set any \"synopsis\" in the video metadata\n$ yt-dlp --parse-metadata \":(?P<meta_synopsis>)\"\n\n# Remove \"formats\" field from the infojson by setting it to an empty string\n$ yt-dlp --parse-metadata \"video::(?P<formats>)\" --write-info-json\n\n# Replace all spaces and \"_\" in title and uploader with a `-`\n$ yt-dlp --replace-in-metadata \"title,uploader\" \"[ _]\" \"-\"\n\n```\n\n# EXTRACTOR ARGUMENTS\n\nSome extractors accept additional arguments which can be passed using `--extractor-args KEY:ARGS`. `ARGS` is a `;` (semicolon) separated string of `ARG=VAL1,VAL2`. E.g. `--extractor-args \"youtube:player-client=tv,mweb;formats=incomplete\" --extractor-args \"twitter:api=syndication\"`\n\nNote: In CLI, `ARG` can use `-` instead of `_`; e.g. `youtube:player-client\"` becomes `youtube:player_client\"`\n\nThe following extractors use this feature:\n\n#### youtube\n* `lang`: Prefer translated metadata (`title`, `description` etc) of this language code (case-sensitive). By default, the video primary language metadata is preferred, with a fallback to `en` translated. See [youtube.py](https://github.com/yt-dlp/yt-dlp/blob/c26f9b991a0681fd3ea548d535919cec1fbbd430/yt_dlp/extractor/youtube.py#L381-L390) for list of supported content language codes\n* `skip`: One or more of `hls`, `dash` or `translated_subs` to skip extraction of the m3u8 manifests, dash manifests and [auto-translated subtitles](https://github.com/yt-dlp/yt-dlp/issues/4090#issuecomment-1158102032) respectively\n* `player_client`: Clients to extract video data from. The currently available clients are `web`, `web_safari`, `web_embedded`, `web_music`, `web_creator`, `mweb`, `ios`, `android`, `android_vr`, `tv` and `tv_embedded`. By default, `tv,ios,web` is used, or `tv,web` is used when authenticating with cookies. The `web_music` client is added for `music.youtube.com` URLs when logged-in cookies are used. The `tv_embedded` and `web_creator` clients are added for age-restricted videos if account age-verification is required. Some clients, such as `web` and `web_music`, require a `po_token` for their formats to be downloadable. Some clients, such as `web_creator`, will only work with authentication. Not all clients support authentication via cookies. You can use `default` for the default clients, or you can use `all` for all clients (not recommended). You can prefix a client with `-` to exclude it, e.g. `youtube:player_client=default,-ios`\n* `player_skip`: Skip some network requests that are generally needed for robust extraction. One or more of `configs` (skip client configs), `webpage` (skip initial webpage), `js` (skip js player), `initial_data` (skip initial data/next ep request). While these options can help reduce the number of requests needed or avoid some rate-limiting, they could cause issues such as missing formats or metadata.  See [#860](https://github.com/yt-dlp/yt-dlp/pull/860) and [#12826](https://github.com/yt-dlp/yt-dlp/issues/12826) for more details\n* `player_params`: YouTube player parameters to use for player requests. Will overwrite any default ones set by yt-dlp.\n* `comment_sort`: `top` or `new` (default) - choose comment sorting mode (on YouTube's side)\n* `max_comments`: Limit the amount of comments to gather. Comma-separated list of integers representing `max-comments,max-parents,max-replies,max-replies-per-thread`. Default is `all,all,all,all`\n    * E.g. `all,all,1000,10` will get a maximum of 1000 replies total, with up to 10 replies per thread. `1000,all,100` will get a maximum of 1000 comments, with a maximum of 100 replies total\n* `formats`: Change the types of formats to return. `dashy` (convert HTTP to DASH), `duplicate` (identical content but different URLs or protocol; includes `dashy`), `incomplete` (cannot be downloaded completely - live dash and post-live m3u8), `missing_pot` (include formats that require a PO Token but are missing one)\n* `innertube_host`: Innertube API host to use for all API requests; e.g. `studio.youtube.com`, `youtubei.googleapis.com`. Note that cookies exported from one subdomain will not work on others\n* `innertube_key`: Innertube API key to use for all API requests. By default, no API key is used\n* `raise_incomplete_data`: `Incomplete Data Received` raises an error instead of reporting a warning\n* `data_sync_id`: Overrides the account Data Sync ID used in Innertube API requests. This may be needed if you are using an account with `youtube:player_skip=webpage,configs` or `youtubetab:skip=webpage`\n* `visitor_data`: Overrides the Visitor Data used in Innertube API requests. This should be used with `player_skip=webpage,configs` and without cookies. Note: this may have adverse effects if used improperly. If a session from a browser is wanted, you should pass cookies instead (which contain the Visitor ID)\n* `po_token`:  Proof of Origin (PO) Token(s) to use. Comma seperated list of PO Tokens in the format `CLIENT.CONTEXT+PO_TOKEN`, e.g. `youtube:po_token=web.gvs+XXX,web.player=XXX,web_safari.gvs+YYY`. Context can be either `gvs` (Google Video Server URLs) or `player` (Innertube player request)\n* `player_js_variant`: The player javascript variant to use for signature and nsig deciphering. The known variants are: `main`, `tce`, `tv`, `tv_es6`, `phone`, `tablet`. Only `main` is recommended as a possible workaround; the others are for debugging purposes. The default is to use what is prescribed by the site, and can be selected with `actual`\n\n#### youtubetab (YouTube playlists, channels, feeds, etc.)\n* `skip`: One or more of `webpage` (skip initial webpage download), `authcheck` (allow the download of playlists requiring authentication when no initial webpage is downloaded. This may cause unwanted behavior, see [#1122](https://github.com/yt-dlp/yt-dlp/pull/1122) for more details)\n* `approximate_date`: Extract approximate `upload_date` and `timestamp` in flat-playlist. This may cause date-based filters to be slightly off\n\n#### generic\n* `fragment_query`: Passthrough any query in mpd/m3u8 manifest URLs to their fragments if no value is provided, or else apply the query string given as `fragment_query=VALUE`. Note that if the stream has an HLS AES-128 key, then the query parameters will be passed to the key URI as well, unless the `key_query` extractor-arg is passed, or unless an external key URI is provided via the `hls_key` extractor-arg. Does not apply to ffmpeg\n* `variant_query`: Passthrough the master m3u8 URL query to its variant playlist URLs if no value is provided, or else apply the query string given as `variant_query=VALUE`\n* `key_query`: Passthrough the master m3u8 URL query to its HLS AES-128 decryption key URI if no value is provided, or else apply the query string given as `key_query=VALUE`. Note that this will have no effect if the key URI is provided via the `hls_key` extractor-arg. Does not apply to ffmpeg\n* `hls_key`: An HLS AES-128 key URI *or* key (as hex), and optionally the IV (as hex), in the form of `(URI|KEY)[,IV]`; e.g. `generic:hls_key=ABCDEF1234567980,0xFEDCBA0987654321`. Passing any of these values will force usage of the native HLS downloader and override the corresponding values found in the m3u8 playlist\n* `is_live`: Bypass live HLS detection and manually set `live_status` - a value of `false` will set `not_live`, any other value (or no value) will set `is_live`\n* `impersonate`: Target(s) to try and impersonate with the initial webpage request; e.g. `generic:impersonate=safari,chrome-110`. Use `generic:impersonate` to impersonate any available target, and use `generic:impersonate=false` to disable impersonation (default)\n\n#### vikichannel\n* `video_types`: Types of videos to download - one or more of `episodes`, `movies`, `clips`, `trailers`\n\n#### youtubewebarchive\n* `check_all`: Try to check more at the cost of more requests. One or more of `thumbnails`, `captures`\n\n#### gamejolt\n* `comment_sort`: `hot` (default), `you` (cookies needed), `top`, `new` - choose comment sorting mode (on GameJolt's side)\n\n#### hotstar\n* `res`: resolution to ignore - one or more of `sd`, `hd`, `fhd`\n* `vcodec`: vcodec to ignore - one or more of `h264`, `h265`, `dvh265`\n* `dr`: dynamic range to ignore - one or more of `sdr`, `hdr10`, `dv`\n\n#### instagram\n* `app_id`: The value of the `X-IG-App-ID` header used for API requests. Default is the web app ID, `936619743392459`\n\n#### niconicochannelplus\n* `max_comments`: Maximum number of comments to extract - default is `120`\n\n#### tiktok\n* `api_hostname`: Hostname to use for mobile API calls, e.g. `api22-normal-c-alisg.tiktokv.com`\n* `app_name`: Default app name to use with mobile API calls, e.g. `trill`\n* `app_version`: Default app version to use with mobile API calls - should be set along with `manifest_app_version`, e.g. `34.1.2`\n* `manifest_app_version`: Default numeric app version to use with mobile API calls, e.g. `2023401020`\n* `aid`: Default app ID to use with mobile API calls, e.g. `1180`\n* `app_info`: Enable mobile API extraction with one or more app info strings in the format of `<iid>/[app_name]/[app_version]/[manifest_app_version]/[aid]`, where `iid` is the unique app install ID. `iid` is the only required value; all other values and their `/` separators can be omitted, e.g. `tiktok:app_info=1234567890123456789` or `tiktok:app_info=123,456/trill///1180,789//34.0.1/340001`\n* `device_id`: Enable mobile API extraction with a genuine device ID to be used with mobile API calls. Default is a random 19-digit string\n\n#### rokfinchannel\n* `tab`: Which tab to download - one of `new`, `top`, `videos`, `podcasts`, `streams`, `stacks`\n\n#### twitter\n* `api`: Select one of `graphql` (default), `legacy` or `syndication` as the API for tweet extraction. Has no effect if logged in\n\n#### stacommu, wrestleuniverse\n* `device_id`: UUID value assigned by the website and used to enforce device limits for paid livestream content. Can be found in browser local storage\n\n#### twitch\n* `client_id`: Client ID value to be sent with GraphQL requests, e.g. `twitch:client_id=kimne78kx3ncx6brgo4mv6wki5h1ko`\n\n#### nhkradirulive (NHK \u3089\u3058\u308b\u2605\u3089\u3058\u308b LIVE)\n* `area`: Which regional variation to extract. Valid areas are: `sapporo`, `sendai`, `tokyo`, `nagoya`, `osaka`, `hiroshima`, `matsuyama`, `fukuoka`. Defaults to `tokyo`\n\n#### nflplusreplay\n* `type`: Type(s) of game replays to extract. Valid types are: `full_game`, `full_game_spanish`, `condensed_game` and `all_22`. You can use `all` to extract all available replay types, which is the default\n\n#### jiocinema\n* `refresh_token`: The `refreshToken` UUID from browser local storage can be passed to extend the life of your login session when logging in with `token` as username and the `accessToken` from browser local storage as password\n\n#### jiosaavn\n* `bitrate`: Audio bitrates to request. One or more of `16`, `32`, `64`, `128`, `320`. Default is `128,320`\n\n#### afreecatvlive\n* `cdn`: One or more CDN IDs to use with the API call for stream URLs, e.g. `gcp_cdn`, `gs_cdn_pc_app`, `gs_cdn_mobile_web`, `gs_cdn_pc_web`\n\n#### soundcloud\n* `formats`: Formats to request from the API. Requested values should be in the format of `{protocol}_{codec}`, e.g. `hls_opus,http_aac`. The `*` character functions as a wildcard, e.g. `*_mp3`, and can be passed by itself to request all formats. Known protocols include `http`, `hls` and `hls-aes`; known codecs include `aac`, `opus` and `mp3`. Original `download` formats are always extracted. Default is `http_aac,hls_aac,http_opus,hls_opus,http_mp3,hls_mp3`\n\n#### orfon (orf:on)\n* `prefer_segments_playlist`: Prefer a playlist of program segments instead of a single complete video when available. If individual segments are desired, use `--concat-playlist never --extractor-args \"orfon:prefer_segments_playlist\"`\n\n#### bilibili\n* `prefer_multi_flv`: Prefer extracting flv formats over mp4 for older videos that still provide legacy formats\n\n#### sonylivseries\n* `sort_order`: Episode sort order for series extraction - one of `asc` (ascending, oldest first) or `desc` (descending, newest first). Default is `asc`\n\n#### tver\n* `backend`: Backend API to use for extraction - one of `streaks` (default) or `brightcove` (deprecated)\n\n**Note**: These options may be changed/removed in the future without concern for backward compatibility\n\n<!-- MANPAGE: MOVE \"INSTALLATION\" SECTION HERE -->\n\n\n# PLUGINS\n\nNote that **all** plugins are imported even if not invoked, and that **there are no checks** performed on plugin code. **Use plugins at your own risk and only if you trust the code!**\n\nPlugins can be of `<type>`s `extractor` or `postprocessor`.\n- Extractor plugins do not need to be enabled from the CLI and are automatically invoked when the input URL is suitable for it.\n- Extractor plugins take priority over built-in extractors.\n- Postprocessor plugins can be invoked using `--use-postprocessor NAME`.\n\n\nPlugins are loaded from the namespace packages `yt_dlp_plugins.extractor` and `yt_dlp_plugins.postprocessor`.\n\nIn other words, the file structure on the disk looks something like:\n\n        yt_dlp_plugins/\n            extractor/\n                myplugin.py\n            postprocessor/\n                myplugin.py\n\nyt-dlp looks for these `yt_dlp_plugins` namespace folders in many locations (see below) and loads in plugins from **all** of them.\nSet the environment variable `YTDLP_NO_PLUGINS` to something nonempty to disable loading plugins entirely.\n\nSee the [wiki for some known plugins](https://github.com/yt-dlp/yt-dlp/wiki/Plugins)\n\n## Installing Plugins\n\nPlugins can be installed using various methods and locations.\n\n1. **Configuration directories**:\n   Plugin packages (containing a `yt_dlp_plugins` namespace folder) can be dropped into the following standard [configuration locations](#configuration):\n    * **User Plugins**\n      * `${XDG_CONFIG_HOME}/yt-dlp/plugins/<package name>/yt_dlp_plugins/` (recommended on Linux/macOS)\n      * `${XDG_CONFIG_HOME}/yt-dlp-plugins/<package name>/yt_dlp_plugins/`\n      * `${APPDATA}/yt-dlp/plugins/<package name>/yt_dlp_plugins/` (recommended on Windows)\n      * `${APPDATA}/yt-dlp-plugins/<package name>/yt_dlp_plugins/`\n      * `~/.yt-dlp/plugins/<package name>/yt_dlp_plugins/`\n      * `~/yt-dlp-plugins/<package name>/yt_dlp_plugins/`\n    * **System Plugins**\n      * `/etc/yt-dlp/plugins/<package name>/yt_dlp_plugins/`\n      * `/etc/yt-dlp-plugins/<package name>/yt_dlp_plugins/`\n2. **Executable location**: Plugin packages can similarly be installed in a `yt-dlp-plugins` directory under the executable location (recommended for portable installations):\n    * Binary: where `<root-dir>/yt-dlp.exe`, `<root-dir>/yt-dlp-plugins/<package name>/yt_dlp_plugins/`\n    * Source: where `<root-dir>/yt_dlp/__main__.py`, `<root-dir>/yt-dlp-plugins/<package name>/yt_dlp_plugins/`\n\n3. **pip and other locations in `PYTHONPATH`**\n    * Plugin packages can be installed and managed using `pip`. See [yt-dlp-sample-plugins](https://github.com/yt-dlp/yt-dlp-sample-plugins) for an example.\n      * Note: plugin files between plugin packages installed with pip must have unique filenames.\n    * Any path in `PYTHONPATH` is searched in for the `yt_dlp_plugins` namespace folder.\n      * Note: This does not apply for Pyinstaller builds.\n\n\n`.zip`, `.egg` and `.whl` archives containing a `yt_dlp_plugins` namespace folder in their root are also supported as plugin packages.\n\n* e.g. `${XDG_CONFIG_HOME}/yt-dlp/plugins/mypluginpkg.zip` where `mypluginpkg.zip` contains `yt_dlp_plugins/<type>/myplugin.py`\n\nRun yt-dlp with `--verbose` to check if the plugin has been loaded.\n\n## Developing Plugins\n\nSee the [yt-dlp-sample-plugins](https://github.com/yt-dlp/yt-dlp-sample-plugins) repo for a template plugin package and the [Plugin Development](https://github.com/yt-dlp/yt-dlp/wiki/Plugin-Development) section of the wiki for a plugin development guide.\n\nAll public classes with a name ending in `IE`/`PP` are imported from each file for extractors and postprocessors respectively. This respects underscore prefix (e.g. `_MyBasePluginIE` is private) and `__all__`. Modules can similarly be excluded by prefixing the module name with an underscore (e.g. `_myplugin.py`).\n\nTo replace an existing extractor with a subclass of one, set the `plugin_name` class keyword argument (e.g. `class MyPluginIE(ABuiltInIE, plugin_name='myplugin')` will replace `ABuiltInIE` with `MyPluginIE`). Since the extractor replaces the parent, you should exclude the subclass extractor from being imported separately by making it private using one of the methods described above.\n\nIf you are a plugin author, add [yt-dlp-plugins](https://github.com/topics/yt-dlp-plugins) as a topic to your repository for discoverability.\n\nSee the [Developer Instructions](https://github.com/yt-dlp/yt-dlp/blob/master/CONTRIBUTING.md#developer-instructions) on how to write and test an extractor.\n\n# EMBEDDING YT-DLP\n\nyt-dlp makes the best effort to be a good command-line program, and thus should be callable from any programming language.\n\nYour program should avoid parsing the normal stdout since they may change in future versions. Instead, they should use options such as `-J`, `--print`, `--progress-template`, `--exec` etc to create console output that you can reliably reproduce and parse.\n\nFrom a Python program, you can embed yt-dlp in a more powerful fashion, like this:\n\n```python\nfrom yt_dlp import YoutubeDL\n\nURLS = ['https://www.youtube.com/watch?v=BaW_jenozKc']\nwith YoutubeDL() as ydl:\n    ydl.download(URLS)\n```\n\nMost likely, you'll want to use various options. For a list of options available, have a look at [`yt_dlp/YoutubeDL.py`](yt_dlp/YoutubeDL.py#L183) or `help(yt_dlp.YoutubeDL)` in a Python shell. If you are already familiar with the CLI, you can use [`devscripts/cli_to_api.py`](https://github.com/yt-dlp/yt-dlp/blob/master/devscripts/cli_to_api.py) to translate any CLI switches to `YoutubeDL` params.\n\n**Tip**: If you are porting your code from youtube-dl to yt-dlp, one important point to look out for is that we do not guarantee the return value of `YoutubeDL.extract_info` to be json serializable, or even be a dictionary. It will be dictionary-like, but if you want to ensure it is a serializable dictionary, pass it through `YoutubeDL.sanitize_info` as shown in the [example below](#extracting-information)\n\n## Embedding examples\n\n#### Extracting information\n\n```python\nimport json\nimport yt_dlp\n\nURL = 'https://www.youtube.com/watch?v=BaW_jenozKc'\n\n# \u2139\ufe0f See help(yt_dlp.YoutubeDL) for a list of available options and public functions\nydl_opts = {}\nwith yt_dlp.YoutubeDL(ydl_opts) as ydl:\n    info = ydl.extract_info(URL, download=False)\n\n    # \u2139\ufe0f ydl.sanitize_info makes the info json-serializable\n    print(json.dumps(ydl.sanitize_info(info)))\n```\n#### Download using an info-json\n\n```python\nimport yt_dlp\n\nINFO_FILE = 'path/to/video.info.json'\n\nwith yt_dlp.YoutubeDL() as ydl:\n    error_code = ydl.download_with_info_file(INFO_FILE)\n\nprint('Some videos failed to download' if error_code\n      else 'All videos successfully downloaded')\n```\n\n#### Extract audio\n\n```python\nimport yt_dlp\n\nURLS = ['https://www.youtube.com/watch?v=BaW_jenozKc']\n\nydl_opts = {\n    'format': 'm4a/bestaudio/best',\n    # \u2139\ufe0f See help(yt_dlp.postprocessor) for a list of available Postprocessors and their arguments\n    'postprocessors': [{  # Extract audio using ffmpeg\n        'key': 'FFmpegExtractAudio',\n        'preferredcodec': 'm4a',\n    }]\n}\n\nwith yt_dlp.YoutubeDL(ydl_opts) as ydl:\n    error_code = ydl.download(URLS)\n```\n\n#### Filter videos\n\n```python\nimport yt_dlp\n\nURLS = ['https://www.youtube.com/watch?v=BaW_jenozKc']\n\ndef longer_than_a_minute(info, *, incomplete):\n    \"\"\"Download only videos longer than a minute (or with unknown duration)\"\"\"\n    duration = info.get('duration')\n    if duration and duration < 60:\n        return 'The video is too short'\n\nydl_opts = {\n    'match_filter': longer_than_a_minute,\n}\n\nwith yt_dlp.YoutubeDL(ydl_opts) as ydl:\n    error_code = ydl.download(URLS)\n```\n\n#### Adding logger and progress hook\n\n```python\nimport yt_dlp\n\nURLS = ['https://www.youtube.com/watch?v=BaW_jenozKc']\n\nclass MyLogger:\n    def debug(self, msg):\n        # For compatibility with youtube-dl, both debug and info are passed into debug\n        # You can distinguish them by the prefix '[debug] '\n        if msg.startswith('[debug] '):\n            pass\n        else:\n            self.info(msg)\n\n    def info(self, msg):\n        pass\n\n    def warning(self, msg):\n        pass\n\n    def error(self, msg):\n        print(msg)\n\n\n# \u2139\ufe0f See \"progress_hooks\" in help(yt_dlp.YoutubeDL)\ndef my_hook(d):\n    if d['status'] == 'finished':\n        print('Done downloading, now post-processing ...')\n\n\nydl_opts = {\n    'logger': MyLogger(),\n    'progress_hooks': [my_hook],\n}\n\nwith yt_dlp.YoutubeDL(ydl_opts) as ydl:\n    ydl.download(URLS)\n```\n\n#### Add a custom PostProcessor\n\n```python\nimport yt_dlp\n\nURLS = ['https://www.youtube.com/watch?v=BaW_jenozKc']\n\n# \u2139\ufe0f See help(yt_dlp.postprocessor.PostProcessor)\nclass MyCustomPP(yt_dlp.postprocessor.PostProcessor):\n    def run(self, info):\n        self.to_screen('Doing stuff')\n        return [], info\n\n\nwith yt_dlp.YoutubeDL() as ydl:\n    # \u2139\ufe0f \"when\" can take any value in yt_dlp.utils.POSTPROCESS_WHEN\n    ydl.add_post_processor(MyCustomPP(), when='pre_process')\n    ydl.download(URLS)\n```\n\n\n#### Use a custom format selector\n\n```python\nimport yt_dlp\n\nURLS = ['https://www.youtube.com/watch?v=BaW_jenozKc']\n\ndef format_selector(ctx):\n    \"\"\" Select the best video and the best audio that won't result in an mkv.\n    NOTE: This is just an example and does not handle all cases \"\"\"\n\n    # formats are already sorted worst to best\n    formats = ctx.get('formats')[::-1]\n\n    # acodec='none' means there is no audio\n    best_video = next(f for f in formats\n                      if f['vcodec'] != 'none' and f['acodec'] == 'none')\n\n    # find compatible audio extension\n    audio_ext = {'mp4': 'm4a', 'webm': 'webm'}[best_video['ext']]\n    # vcodec='none' means there is no video\n    best_audio = next(f for f in formats if (\n        f['acodec'] != 'none' and f['vcodec'] == 'none' and f['ext'] == audio_ext))\n\n    # These are the minimum required fields for a merged format\n    yield {\n        'format_id': f'{best_video[\"format_id\"]}+{best_audio[\"format_id\"]}',\n        'ext': best_video['ext'],\n        'requested_formats': [best_video, best_audio],\n        # Must be + separated list of protocols\n        'protocol': f'{best_video[\"protocol\"]}+{best_audio[\"protocol\"]}'\n    }\n\n\nydl_opts = {\n    'format': format_selector,\n}\n\nwith yt_dlp.YoutubeDL(ydl_opts) as ydl:\n    ydl.download(URLS)\n```\n\n\n# CHANGES FROM YOUTUBE-DL\n\n### New features\n\n* Forked from [**yt-dlc@f9401f2**](https://github.com/blackjack4494/yt-dlc/commit/f9401f2a91987068139c5f757b12fc711d4c0cee) and merged with [**youtube-dl@a08f2b7**](https://github.com/ytdl-org/youtube-dl/commit/a08f2b7e4567cdc50c0614ee0a4ffdff49b8b6e6) ([exceptions](https://github.com/yt-dlp/yt-dlp/issues/21))\n\n* **[SponsorBlock Integration](#sponsorblock-options)**: You can mark/remove sponsor sections in YouTube videos by utilizing the [SponsorBlock](https://sponsor.ajay.app) API\n\n* **[Format Sorting](#sorting-formats)**: The default format sorting options have been changed so that higher resolution and better codecs will be now preferred instead of simply using larger bitrate. Furthermore, you can now specify the sort order using `-S`. This allows for much easier format selection than what is possible by simply using `--format` ([examples](#format-selection-examples))\n\n* **Merged with animelover1984/youtube-dl**: You get most of the features and improvements from [animelover1984/youtube-dl](https://github.com/animelover1984/youtube-dl) including `--write-comments`, `BiliBiliSearch`, `BilibiliChannel`, Embedding thumbnail in mp4/ogg/opus, playlist infojson etc. Note that NicoNico livestreams are not available. See [#31](https://github.com/yt-dlp/yt-dlp/pull/31) for details.\n\n* **YouTube improvements**:\n    * Supports Clips, Stories (`ytstories:<channel UCID>`), Search (including filters)**\\***, YouTube Music Search, Channel-specific search, Search prefixes (`ytsearch:`, `ytsearchdate:`)**\\***, Mixes, and Feeds (`:ytfav`, `:ytwatchlater`, `:ytsubs`, `:ythistory`, `:ytrec`, `:ytnotif`)\n    * Fix for [n-sig based throttling](https://github.com/ytdl-org/youtube-dl/issues/29326) **\\***\n    * Download livestreams from the start using `--live-from-start` (*experimental*)\n    * Channel URLs download all uploads of the channel, including shorts and live\n    * Support for [logging in with OAuth](https://github.com/yt-dlp/yt-dlp/wiki/Extractors#logging-in-with-oauth)\n\n* **Cookies from browser**: Cookies can be automatically extracted from all major web browsers using `--cookies-from-browser BROWSER[+KEYRING][:PROFILE][::CONTAINER]`\n\n* **Download time range**: Videos can be downloaded partially based on either timestamps or chapters using `--download-sections`\n\n* **Split video by chapters**: Videos can be split into multiple files based on chapters using `--split-chapters`\n\n* **Multi-threaded fragment downloads**: Download multiple fragments of m3u8/mpd videos in parallel. Use `--concurrent-fragments` (`-N`) option to set the number of threads used\n\n* **Aria2c with HLS/DASH**: You can use `aria2c` as the external downloader for DASH(mpd) and HLS(m3u8) formats\n\n* **New and fixed extractors**: Many new extractors have been added and a lot of existing ones have been fixed. See the [changelog](Changelog.md) or the [list of supported sites](supportedsites.md)\n\n* **New MSOs**: Philo, Spectrum, SlingTV, Cablevision, RCN etc.\n\n* **Subtitle extraction from manifests**: Subtitles can be extracted from streaming media manifests. See [commit/be6202f](https://github.com/yt-dlp/yt-dlp/commit/be6202f12b97858b9d716e608394b51065d0419f) for details\n\n* **Multiple paths and output templates**: You can give different [output templates](#output-template) and download paths for different types of files. You can also set a temporary path where intermediary files are downloaded to using `--paths` (`-P`)\n\n* **Portable Configuration**: Configuration files are automatically loaded from the home and root directories. See [CONFIGURATION](#configuration) for details\n\n* **Output template improvements**: Output templates can now have date-time formatting, numeric offsets, object traversal etc. See [output template](#output-template) for details. Even more advanced operations can also be done with the help of `--parse-metadata` and `--replace-in-metadata`\n\n* **Other new options**: Many new options have been added such as `--alias`, `--print`, `--concat-playlist`, `--wait-for-video`, `--retry-sleep`, `--sleep-requests`, `--convert-thumbnails`, `--force-download-archive`, `--force-overwrites`, `--break-match-filters` etc\n\n* **Improvements**: Regex and other operators in `--format`/`--match-filters`, multiple `--postprocessor-args` and `--downloader-args`, faster archive checking, more [format selection options](#format-selection), merge multi-video/audio, multiple `--config-locations`, `--exec` at different stages, etc\n\n* **Plugins**: Extractors and PostProcessors can be loaded from an external file. See [plugins](#plugins) for details\n\n* **Self updater**: The releases can be updated using `yt-dlp -U`, and downgraded using `--update-to` if required\n\n* **Automated builds**: [Nightly/master builds](#update-channels) can be used with `--update-to nightly` and `--update-to master`\n\nSee [changelog](Changelog.md) or [commits](https://github.com/yt-dlp/yt-dlp/commits) for the full list of changes\n\nFeatures marked with a **\\*** have been back-ported to youtube-dl\n\n### Differences in default behavior\n\nSome of yt-dlp's default options are different from that of youtube-dl and youtube-dlc:\n\n* yt-dlp supports only [Python 3.9+](## \"Windows 8\"), and will remove support for more versions as they [become EOL](https://devguide.python.org/versions/#python-release-cycle); while [youtube-dl still supports Python 2.6+ and 3.2+](https://github.com/ytdl-org/youtube-dl/issues/30568#issue-1118238743)\n* The options `--auto-number` (`-A`), `--title` (`-t`) and `--literal` (`-l`), no longer work. See [removed options](#Removed) for details\n* `avconv` is not supported as an alternative to `ffmpeg`\n* yt-dlp stores config files in slightly different locations to youtube-dl. See [CONFIGURATION](#configuration) for a list of correct locations\n* The default [output template](#output-template) is `%(title)s [%(id)s].%(ext)s`. There is no real reason for this change. This was changed before yt-dlp was ever made public and now there are no plans to change it back to `%(title)s-%(id)s.%(ext)s`. Instead, you may use `--compat-options filename`\n* The default [format sorting](#sorting-formats) is different from youtube-dl and prefers higher resolution and better codecs rather than higher bitrates. You can use the `--format-sort` option to change this to any order you prefer, or use `--compat-options format-sort` to use youtube-dl's sorting order. Older versions of yt-dlp preferred VP9 due to its broader compatibility; you can use `--compat-options prefer-vp9-sort` to revert to that format sorting preference. These two compat options cannot be used together\n* The default format selector is `bv*+ba/b`. This means that if a combined video + audio format that is better than the best video-only format is found, the former will be preferred. Use `-f bv+ba/b` or `--compat-options format-spec` to revert this\n* Unlike youtube-dlc, yt-dlp does not allow merging multiple audio/video streams into one file by default (since this conflicts with the use of `-f bv*+ba`). If needed, this feature must be enabled using `--audio-multistreams` and `--video-multistreams`. You can also use `--compat-options multistreams` to enable both\n* `--no-abort-on-error` is enabled by default. Use `--abort-on-error` or `--compat-options abort-on-error` to abort on errors instead\n* When writing metadata files such as thumbnails, description or infojson, the same information (if available) is also written for playlists. Use `--no-write-playlist-metafiles` or `--compat-options no-playlist-metafiles` to not write these files\n* `--add-metadata` attaches the `infojson` to `mkv` files in addition to writing the metadata when used with `--write-info-json`. Use `--no-embed-info-json` or `--compat-options no-attach-info-json` to revert this\n* Some metadata are embedded into different fields when using `--add-metadata` as compared to youtube-dl. Most notably, `comment` field contains the `webpage_url` and `synopsis` contains the `description`. You can [use `--parse-metadata`](#modifying-metadata) to modify this to your liking or use `--compat-options embed-metadata` to revert this\n* `playlist_index` behaves differently when used with options like `--playlist-reverse` and `--playlist-items`. See [#302](https://github.com/yt-dlp/yt-dlp/issues/302) for details. You can use `--compat-options playlist-index` if you want to keep the earlier behavior\n* The output of `-F` is listed in a new format. Use `--compat-options list-formats` to revert this\n* Live chats (if available) are considered as subtitles. Use `--sub-langs all,-live_chat` to download all subtitles except live chat. You can also use `--compat-options no-live-chat` to prevent any live chat/danmaku from downloading\n* YouTube channel URLs download all uploads of the channel. To download only the videos in a specific tab, pass the tab's URL. If the channel does not show the requested tab, an error will be raised. Also, `/live` URLs raise an error if there are no live videos instead of silently downloading the entire channel. You may use `--compat-options no-youtube-channel-redirect` to revert all these redirections\n* Unavailable videos are also listed for YouTube playlists. Use `--compat-options no-youtube-unavailable-videos` to remove this\n* The upload dates extracted from YouTube are in UTC.\n* If `ffmpeg` is used as the downloader, the downloading and merging of formats happen in a single step when possible. Use `--compat-options no-direct-merge` to revert this\n* Thumbnail embedding in `mp4` is done with mutagen if possible. Use `--compat-options embed-thumbnail-atomicparsley` to force the use of AtomicParsley instead\n* Some internal metadata such as filenames are removed by default from the infojson. Use `--no-clean-infojson` or `--compat-options no-clean-infojson` to revert this\n* When `--embed-subs` and `--write-subs` are used together, the subtitles are written to disk and also embedded in the media file. You can use just `--embed-subs` to embed the subs and automatically delete the separate file. See [#630 (comment)](https://github.com/yt-dlp/yt-dlp/issues/630#issuecomment-893659460) for more info. `--compat-options no-keep-subs` can be used to revert this\n* `certifi` will be used for SSL root certificates, if installed. If you want to use system certificates (e.g. self-signed), use `--compat-options no-certifi`\n* yt-dlp's sanitization of invalid characters in filenames is different/smarter than in youtube-dl. You can use `--compat-options filename-sanitization` to revert to youtube-dl's behavior\n* ~~yt-dlp tries to parse the external downloader outputs into the standard progress output if possible (Currently implemented: [aria2c](https://github.com/yt-dlp/yt-dlp/issues/5931)). You can use `--compat-options no-external-downloader-progress` to get the downloader output as-is~~\n* yt-dlp versions between 2021.09.01 and 2023.01.02 applies `--match-filters` to nested playlists. This was an unintentional side-effect of [8f18ac](https://github.com/yt-dlp/yt-dlp/commit/8f18aca8717bb0dd49054555af8d386e5eda3a88) and is fixed in [d7b460](https://github.com/yt-dlp/yt-dlp/commit/d7b460d0e5fc710950582baed2e3fc616ed98a80). Use `--compat-options playlist-match-filter` to revert this\n* yt-dlp versions between 2021.11.10 and 2023.06.21 estimated `filesize_approx` values for fragmented/manifest formats. This was added for convenience in [f2fe69](https://github.com/yt-dlp/yt-dlp/commit/f2fe69c7b0d208bdb1f6292b4ae92bc1e1a7444a), but was reverted in [0dff8e](https://github.com/yt-dlp/yt-dlp/commit/0dff8e4d1e6e9fb938f4256ea9af7d81f42fd54f) due to the potentially extreme inaccuracy of the estimated values. Use `--compat-options manifest-filesize-approx` to keep extracting the estimated values\n* yt-dlp uses modern http client backends such as `requests`. Use `--compat-options prefer-legacy-http-handler` to prefer the legacy http handler (`urllib`) to be used for standard http requests.\n* The sub-modules `swfinterp`, `casefold` are removed.\n* Passing `--simulate` (or calling `extract_info` with `download=False`) no longer alters the default format selection. See [#9843](https://github.com/yt-dlp/yt-dlp/issues/9843) for details.\n\nFor ease of use, a few more compat options are available:\n\n* `--compat-options all`: Use all compat options (**Do NOT use this!**)\n* `--compat-options youtube-dl`: Same as `--compat-options all,-multistreams,-playlist-match-filter,-manifest-filesize-approx,-allow-unsafe-ext,-prefer-vp9-sort`\n* `--compat-options youtube-dlc`: Same as `--compat-options all,-no-live-chat,-no-youtube-channel-redirect,-playlist-match-filter,-manifest-filesize-approx,-allow-unsafe-ext,-prefer-vp9-sort`\n* `--compat-options 2021`: Same as `--compat-options 2022,no-certifi,filename-sanitization`\n* `--compat-options 2022`: Same as `--compat-options 2023,playlist-match-filter,no-external-downloader-progress,prefer-legacy-http-handler,manifest-filesize-approx`\n* `--compat-options 2023`: Same as `--compat-options 2024,prefer-vp9-sort`\n* `--compat-options 2024`: Currently does nothing. Use this to enable all future compat options\n\nThe following compat options restore vulnerable behavior from before security patches:\n\n* `--compat-options allow-unsafe-ext`: Allow files with any extension (including unsafe ones) to be downloaded ([GHSA-79w7-vh3h-8g4j](<https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j>))\n\n    > :warning: Only use if a valid file download is rejected because its extension is detected as uncommon\n    >\n    > **This option can enable remote code execution! Consider [opening an issue](<https://github.com/yt-dlp/yt-dlp/issues/new/choose>) instead!**\n\n### Deprecated options\n\nThese are all the deprecated options and the current alternative to achieve the same effect\n\n#### Almost redundant options\nWhile these options are almost the same as their new counterparts, there are some differences that prevents them being redundant\n\n    -j, --dump-json                  --print \"%()j\"\n    -F, --list-formats               --print formats_table\n    --list-thumbnails                --print thumbnails_table --print playlist:thumbnails_table\n    --list-subs                      --print automatic_captions_table --print subtitles_table\n\n#### Redundant options\nWhile these options are redundant, they are still expected to be used due to their ease of use\n\n    --get-description                --print description\n    --get-duration                   --print duration_string\n    --get-filename                   --print filename\n    --get-format                     --print format\n    --get-id                         --print id\n    --get-thumbnail                  --print thumbnail\n    -e, --get-title                  --print title\n    -g, --get-url                    --print urls\n    --match-title REGEX              --match-filters \"title ~= (?i)REGEX\"\n    --reject-title REGEX             --match-filters \"title !~= (?i)REGEX\"\n    --min-views COUNT                --match-filters \"view_count >=? COUNT\"\n    --max-views COUNT                --match-filters \"view_count <=? COUNT\"\n    --break-on-reject                Use --break-match-filters\n    --user-agent UA                  --add-headers \"User-Agent:UA\"\n    --referer URL                    --add-headers \"Referer:URL\"\n    --playlist-start NUMBER          -I NUMBER:\n    --playlist-end NUMBER            -I :NUMBER\n    --playlist-reverse               -I ::-1\n    --no-playlist-reverse            Default\n    --no-colors                      --color no_color\n\n#### Not recommended\nWhile these options still work, their use is not recommended since there are other alternatives to achieve the same\n\n    --force-generic-extractor        --ies generic,default\n    --exec-before-download CMD       --exec \"before_dl:CMD\"\n    --no-exec-before-download        --no-exec\n    --all-formats                    -f all\n    --all-subs                       --sub-langs all --write-subs\n    --print-json                     -j --no-simulate\n    --autonumber-size NUMBER         Use string formatting, e.g. %(autonumber)03d\n    --autonumber-start NUMBER        Use internal field formatting like %(autonumber+NUMBER)s\n    --id                             -o \"%(id)s.%(ext)s\"\n    --metadata-from-title FORMAT     --parse-metadata \"%(title)s:FORMAT\"\n    --hls-prefer-native              --downloader \"m3u8:native\"\n    --hls-prefer-ffmpeg              --downloader \"m3u8:ffmpeg\"\n    --list-formats-old               --compat-options list-formats (Alias: --no-list-formats-as-table)\n    --list-formats-as-table          --compat-options -list-formats [Default] (Alias: --no-list-formats-old)\n    --youtube-skip-dash-manifest     --extractor-args \"youtube:skip=dash\" (Alias: --no-youtube-include-dash-manifest)\n    --youtube-skip-hls-manifest      --extractor-args \"youtube:skip=hls\" (Alias: --no-youtube-include-hls-manifest)\n    --youtube-include-dash-manifest  Default (Alias: --no-youtube-skip-dash-manifest)\n    --youtube-include-hls-manifest   Default (Alias: --no-youtube-skip-hls-manifest)\n    --geo-bypass                     --xff \"default\"\n    --no-geo-bypass                  --xff \"never\"\n    --geo-bypass-country CODE        --xff CODE\n    --geo-bypass-ip-block IP_BLOCK   --xff IP_BLOCK\n\n#### Developer options\nThese options are not intended to be used by the end-user\n\n    --test                           Download only part of video for testing extractors\n    --load-pages                     Load pages dumped by --write-pages\n    --youtube-print-sig-code         For testing youtube signatures\n    --allow-unplayable-formats       List unplayable formats also\n    --no-allow-unplayable-formats    Default\n\n#### Old aliases\nThese are aliases that are no longer documented for various reasons\n\n    --avconv-location                --ffmpeg-location\n    --clean-infojson                 --clean-info-json\n    --cn-verification-proxy URL      --geo-verification-proxy URL\n    --dump-headers                   --print-traffic\n    --dump-intermediate-pages        --dump-pages\n    --force-write-download-archive   --force-write-archive\n    --load-info                      --load-info-json\n    --no-clean-infojson              --no-clean-info-json\n    --no-split-tracks                --no-split-chapters\n    --no-write-srt                   --no-write-subs\n    --prefer-unsecure                --prefer-insecure\n    --rate-limit RATE                --limit-rate RATE\n    --split-tracks                   --split-chapters\n    --srt-lang LANGS                 --sub-langs LANGS\n    --trim-file-names LENGTH         --trim-filenames LENGTH\n    --write-srt                      --write-subs\n    --yes-overwrites                 --force-overwrites\n\n#### Sponskrub Options\nSupport for [SponSkrub](https://github.com/faissaloo/SponSkrub) has been deprecated in favor of the `--sponsorblock` options\n\n    --sponskrub                      --sponsorblock-mark all\n    --no-sponskrub                   --no-sponsorblock\n    --sponskrub-cut                  --sponsorblock-remove all\n    --no-sponskrub-cut               --sponsorblock-remove -all\n    --sponskrub-force                Not applicable\n    --no-sponskrub-force             Not applicable\n    --sponskrub-location             Not applicable\n    --sponskrub-args                 Not applicable\n\n#### No longer supported\nThese options may no longer work as intended\n\n    --prefer-avconv                  avconv is not officially supported by yt-dlp (Alias: --no-prefer-ffmpeg)\n    --prefer-ffmpeg                  Default (Alias: --no-prefer-avconv)\n    -C, --call-home                  Not implemented\n    --no-call-home                   Default\n    --include-ads                    No longer supported\n    --no-include-ads                 Default\n    --write-annotations              No supported site has annotations now\n    --no-write-annotations           Default\n    --compat-options seperate-video-versions  No longer needed\n    --compat-options no-youtube-prefer-utc-upload-date  No longer supported\n\n#### Removed\nThese options were deprecated since 2014 and have now been entirely removed\n\n    -A, --auto-number                -o \"%(autonumber)s-%(id)s.%(ext)s\"\n    -t, -l, --title, --literal       -o \"%(title)s-%(id)s.%(ext)s\"\n\n\n# CONTRIBUTING\nSee [CONTRIBUTING.md](CONTRIBUTING.md#contributing-to-yt-dlp) for instructions on [Opening an Issue](CONTRIBUTING.md#opening-an-issue) and [Contributing code to the project](CONTRIBUTING.md#developer-instructions)\n\n# WIKI\nSee the [Wiki](https://github.com/yt-dlp/yt-dlp/wiki) for more information\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "bundle/pyinstaller.py", "size": 4183, "license": "Unlicense", "content_sha": "4184c4bc9f5109784408d7e314692e66b6533dd1", "findings": [{"type": "pii_email", "matches": ["pukkandan.ytdlp@gmail.com"]}], "content": "#!/usr/bin/env python3\n\n# Allow direct execution\nimport os\nimport sys\n\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nimport platform\n\nfrom PyInstaller.__main__ import run as run_pyinstaller\n\nfrom devscripts.utils import read_version\n\nOS_NAME, MACHINE, ARCH = sys.platform, platform.machine().lower(), platform.architecture()[0][:2]\nif MACHINE in ('x86', 'x86_64', 'amd64', 'i386', 'i686'):\n    MACHINE = 'x86' if ARCH == '32' else ''\n\n\ndef main():\n    opts, version = parse_options(), read_version()\n\n    onedir = '--onedir' in opts or '-D' in opts\n    if not onedir and '-F' not in opts and '--onefile' not in opts:\n        opts.append('--onefile')\n\n    name, final_file = exe(onedir)\n    print(f'Building yt-dlp v{version} for {OS_NAME} {platform.machine()} with options {opts}')\n    print('Remember to update the version using  \"devscripts/update-version.py\"')\n    if not os.path.isfile('yt_dlp/extractor/lazy_extractors.py'):\n        print('WARNING: Building without lazy_extractors. Run  '\n              '\"devscripts/make_lazy_extractors.py\"  to build lazy extractors', file=sys.stderr)\n    print(f'Destination: {final_file}\\n')\n\n    opts = [\n        f'--name={name}',\n        '--icon=devscripts/logo.ico',\n        '--upx-exclude=vcruntime140.dll',\n        '--noconfirm',\n        '--additional-hooks-dir=yt_dlp/__pyinstaller',\n        *opts,\n        'yt_dlp/__main__.py',\n    ]\n\n    print(f'Running PyInstaller with {opts}')\n    run_pyinstaller(opts)\n    set_version_info(final_file, version)\n\n\ndef parse_options():\n    # Compatibility with older arguments\n    opts = sys.argv[1:]\n    if opts[0:1] in (['32'], ['64']):\n        if ARCH != opts[0]:\n            raise Exception(f'{opts[0]}bit executable cannot be built on a {ARCH}bit system')\n        opts = opts[1:]\n    return opts\n\n\ndef exe(onedir):\n    \"\"\"@returns (name, path)\"\"\"\n    name = '_'.join(filter(None, (\n        'yt-dlp',\n        {'win32': '', 'darwin': 'macos'}.get(OS_NAME, OS_NAME),\n        MACHINE,\n    )))\n    return name, ''.join(filter(None, (\n        'dist/',\n        onedir and f'{name}/',\n        name,\n        OS_NAME == 'win32' and '.exe',\n    )))\n\n\ndef version_to_list(version):\n    version_list = version.split('.')\n    return list(map(int, version_list)) + [0] * (4 - len(version_list))\n\n\ndef set_version_info(exe, version):\n    if OS_NAME == 'win32':\n        windows_set_version(exe, version)\n\n\ndef windows_set_version(exe, version):\n    from PyInstaller.utils.win32.versioninfo import (\n        FixedFileInfo,\n        StringFileInfo,\n        StringStruct,\n        StringTable,\n        VarFileInfo,\n        VarStruct,\n        VSVersionInfo,\n    )\n\n    try:\n        from PyInstaller.utils.win32.versioninfo import SetVersion\n    except ImportError:  # Pyinstaller >= 5.8\n        from PyInstaller.utils.win32.versioninfo import write_version_info_to_executable as SetVersion\n\n    version_list = version_to_list(version)\n    suffix = MACHINE and f'_{MACHINE}'\n    SetVersion(exe, VSVersionInfo(\n        ffi=FixedFileInfo(\n            filevers=version_list,\n            prodvers=version_list,\n            mask=0x3F,\n            flags=0x0,\n            OS=0x4,\n            fileType=0x1,\n            subtype=0x0,\n            date=(0, 0),\n        ),\n        kids=[\n            StringFileInfo([StringTable('040904B0', [\n                StringStruct('Comments', f'yt-dlp{suffix} Command Line Interface'),\n                StringStruct('CompanyName', 'https://github.com/yt-dlp'),\n                StringStruct('FileDescription', 'yt-dlp%s' % (MACHINE and f' ({MACHINE})')),\n                StringStruct('FileVersion', version),\n                StringStruct('InternalName', f'yt-dlp{suffix}'),\n                StringStruct('LegalCopyright', 'pukkandan.ytdlp@gmail.com | UNLICENSE'),\n                StringStruct('OriginalFilename', f'yt-dlp{suffix}.exe'),\n                StringStruct('ProductName', f'yt-dlp{suffix}'),\n                StringStruct(\n                    'ProductVersion', f'{version}{suffix} on Python {platform.python_version()}'),\n            ])]), VarFileInfo([VarStruct('Translation', [0, 1200])]),\n        ],\n    ))\n\n\nif __name__ == '__main__':\n    main()\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "devscripts/bash-completion.py", "size": 854, "license": "Unlicense", "content_sha": "3918ebde86de1649cdf2662871470b7d13a10443", "findings": [], "content": "#!/usr/bin/env python3\n\n# Allow direct execution\nimport os\nimport sys\n\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\n\nimport yt_dlp\n\nBASH_COMPLETION_FILE = 'completions/bash/yt-dlp'\nBASH_COMPLETION_TEMPLATE = 'devscripts/bash-completion.in'\n\n\ndef build_completion(opt_parser):\n    opts_flag = []\n    for group in opt_parser.option_groups:\n        for option in group.option_list:\n            # for every long flag\n            opts_flag.append(option.get_opt_string())\n    with open(BASH_COMPLETION_TEMPLATE) as f:\n        template = f.read()\n    with open(BASH_COMPLETION_FILE, 'w') as f:\n        # just using the special char\n        filled_template = template.replace('{{flags}}', ' '.join(opts_flag))\n        f.write(filled_template)\n\n\nparser = yt_dlp.parseOpts(ignore_config_files=True)[0]\nbuild_completion(parser)\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "devscripts/check-porn.py", "size": 1801, "license": "Unlicense", "content_sha": "fc72c3051e9b1bc916695ffb8be85f5fad7c0399", "findings": [], "content": "#!/usr/bin/env python3\n\"\"\"\nThis script employs a VERY basic heuristic ('porn' in webpage.lower()) to check\nif we are not 'age_limit' tagging some porn site\n\nA second approach implemented relies on a list of porn domains, to activate it\npass the list filename as the only argument\n\"\"\"\n\n# Allow direct execution\nimport os\nimport sys\n\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\n\nimport urllib.parse\nimport urllib.request\n\nfrom test.helper import gettestcases\n\nif len(sys.argv) > 1:\n    METHOD = 'LIST'\n    LIST = open(sys.argv[1]).read().decode('utf8').strip()\nelse:\n    METHOD = 'EURISTIC'\n\nfor test in gettestcases():\n    if METHOD == 'EURISTIC':\n        try:\n            webpage = urllib.request.urlopen(test['url'], timeout=10).read()\n        except Exception:\n            print('\\nFail: {}'.format(test['name']))\n            continue\n\n        webpage = webpage.decode('utf8', 'replace')\n\n        RESULT = 'porn' in webpage.lower()\n\n    elif METHOD == 'LIST':\n        domain = urllib.parse.urlparse(test['url']).netloc\n        if not domain:\n            print('\\nFail: {}'.format(test['name']))\n            continue\n        domain = '.'.join(domain.split('.')[-2:])\n\n        RESULT = ('.' + domain + '\\n' in LIST or '\\n' + domain + '\\n' in LIST)\n\n    if RESULT and ('info_dict' not in test or 'age_limit' not in test['info_dict']\n                   or test['info_dict']['age_limit'] != 18):\n        print('\\nPotential missing age_limit check: {}'.format(test['name']))\n\n    elif not RESULT and ('info_dict' in test and 'age_limit' in test['info_dict']\n                         and test['info_dict']['age_limit'] == 18):\n        print('\\nPotential false negative: {}'.format(test['name']))\n\n    else:\n        sys.stdout.write('.')\n    sys.stdout.flush()\n\nprint()\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "devscripts/cli_to_api.py", "size": 1384, "license": "Unlicense", "content_sha": "9c2710e09f3852d9e24fe2dd43b2f2434a38f352", "findings": [], "content": "#!/usr/bin/env python3\n\n# Allow direct execution\nimport os\nimport sys\n\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nimport yt_dlp\nimport yt_dlp.options\n\ncreate_parser = yt_dlp.options.create_parser\n\n\ndef parse_patched_options(opts):\n    patched_parser = create_parser()\n    patched_parser.defaults.update({\n        'ignoreerrors': False,\n        'retries': 0,\n        'fragment_retries': 0,\n        'extract_flat': False,\n        'concat_playlist': 'never',\n    })\n    yt_dlp.options.create_parser = lambda: patched_parser\n    try:\n        return yt_dlp.parse_options(opts)\n    finally:\n        yt_dlp.options.create_parser = create_parser\n\n\ndefault_opts = parse_patched_options([]).ydl_opts\n\n\ndef cli_to_api(opts, cli_defaults=False):\n    opts = (yt_dlp.parse_options if cli_defaults else parse_patched_options)(opts).ydl_opts\n\n    diff = {k: v for k, v in opts.items() if default_opts[k] != v}\n    if 'postprocessors' in diff:\n        diff['postprocessors'] = [pp for pp in diff['postprocessors']\n                                  if pp not in default_opts['postprocessors']]\n    return diff\n\n\nif __name__ == '__main__':\n    from pprint import pprint\n\n    print('\\nThe arguments passed translate to:\\n')\n    pprint(cli_to_api(sys.argv[1:]))\n    print('\\nCombining these with the CLI defaults gives:\\n')\n    pprint(cli_to_api(sys.argv[1:], True))\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "devscripts/fish-completion.py", "size": 1670, "license": "Unlicense", "content_sha": "5d2f68a489556ffedeb186ea00aa3b122000f775", "findings": [], "content": "#!/usr/bin/env python3\n\n# Allow direct execution\nimport os\nimport sys\n\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\n\nimport optparse\n\nimport yt_dlp\nfrom yt_dlp.utils import shell_quote\n\nFISH_COMPLETION_FILE = 'completions/fish/yt-dlp.fish'\nFISH_COMPLETION_TEMPLATE = 'devscripts/fish-completion.in'\n\nEXTRA_ARGS = {\n    'remux-video': ['--arguments', 'mp4 mkv', '--exclusive'],\n    'recode-video': ['--arguments', 'mp4 flv ogg webm mkv', '--exclusive'],\n\n    # Options that need a file parameter\n    'download-archive': ['--require-parameter'],\n    'cookies': ['--require-parameter'],\n    'load-info': ['--require-parameter'],\n    'batch-file': ['--require-parameter'],\n}\n\n\ndef build_completion(opt_parser):\n    commands = []\n\n    for group in opt_parser.option_groups:\n        for option in group.option_list:\n            long_option = option.get_opt_string().strip('-')\n            complete_cmd = ['complete', '--command', 'yt-dlp', '--long-option', long_option]\n            if option._short_opts:\n                complete_cmd += ['--short-option', option._short_opts[0].strip('-')]\n            if option.help != optparse.SUPPRESS_HELP:\n                complete_cmd += ['--description', option.help]\n            complete_cmd.extend(EXTRA_ARGS.get(long_option, []))\n            commands.append(shell_quote(complete_cmd))\n\n    with open(FISH_COMPLETION_TEMPLATE) as f:\n        template = f.read()\n    filled_template = template.replace('{{commands}}', '\\n'.join(commands))\n    with open(FISH_COMPLETION_FILE, 'w') as f:\n        f.write(filled_template)\n\n\nparser = yt_dlp.parseOpts(ignore_config_files=True)[0]\nbuild_completion(parser)\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "devscripts/generate_aes_testdata.py", "size": 1086, "license": "Unlicense", "content_sha": "73cf803b8f6d140670a7a2029da9264e090a161e", "findings": [], "content": "#!/usr/bin/env python3\n\n# Allow direct execution\nimport os\nimport sys\n\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\n\nimport codecs\nimport subprocess\n\nfrom yt_dlp.aes import aes_encrypt, key_expansion\n\nsecret_msg = b'Secret message goes here'\n\n\ndef hex_str(int_list):\n    return codecs.encode(bytes(int_list), 'hex')\n\n\ndef openssl_encode(algo, key, iv):\n    cmd = ['openssl', 'enc', '-e', '-' + algo, '-K', hex_str(key), '-iv', hex_str(iv)]\n    prog = subprocess.Popen(cmd, stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n    out, _ = prog.communicate(secret_msg)\n    return out\n\n\niv = key = [0x20, 0x15] + 14 * [0]\n\nr = openssl_encode('aes-128-cbc', key, iv)\nprint('aes_cbc_decrypt')\nprint(repr(r))\n\npassword = key\nnew_key = aes_encrypt(password, key_expansion(password))\nr = openssl_encode('aes-128-ctr', new_key, iv)\nprint('aes_decrypt_text 16')\nprint(repr(r))\n\npassword = key + 16 * [0]\nnew_key = aes_encrypt(password, key_expansion(password)) * (32 // 16)\nr = openssl_encode('aes-256-ctr', new_key, iv)\nprint('aes_decrypt_text 32')\nprint(repr(r))\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "devscripts/install_deps.py", "size": 2653, "license": "Unlicense", "content_sha": "d292505458b7b95e80c846ac0714073a6f3b5179", "findings": [], "content": "#!/usr/bin/env python3\n\n# Allow execution from anywhere\nimport os\nimport sys\n\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nimport argparse\nimport re\nimport subprocess\n\nfrom pathlib import Path\n\nfrom devscripts.tomlparse import parse_toml\nfrom devscripts.utils import read_file\n\n\ndef parse_args():\n    parser = argparse.ArgumentParser(description='Install dependencies for yt-dlp')\n    parser.add_argument(\n        'input', nargs='?', metavar='TOMLFILE', default=Path(__file__).parent.parent / 'pyproject.toml',\n        help='input file (default: %(default)s)')\n    parser.add_argument(\n        '-e', '--exclude', metavar='DEPENDENCY', action='append',\n        help='exclude a dependency')\n    parser.add_argument(\n        '-i', '--include', metavar='GROUP', action='append',\n        help='include an optional dependency group')\n    parser.add_argument(\n        '-o', '--only-optional', action='store_true',\n        help='only install optional dependencies')\n    parser.add_argument(\n        '-p', '--print', action='store_true',\n        help='only print requirements to stdout')\n    parser.add_argument(\n        '-u', '--user', action='store_true',\n        help='install with pip as --user')\n    return parser.parse_args()\n\n\ndef main():\n    args = parse_args()\n    project_table = parse_toml(read_file(args.input))['project']\n    recursive_pattern = re.compile(rf'{project_table[\"name\"]}\\[(?P<group_name>[\\w-]+)\\]')\n    optional_groups = project_table['optional-dependencies']\n    excludes = args.exclude or []\n\n    def yield_deps(group):\n        for dep in group:\n            if mobj := recursive_pattern.fullmatch(dep):\n                yield from optional_groups.get(mobj.group('group_name'), [])\n            else:\n                yield dep\n\n    targets = []\n    if not args.only_optional:  # `-o` should exclude 'dependencies' and the 'default' group\n        targets.extend(project_table['dependencies'])\n        if 'default' not in excludes:  # `--exclude default` should exclude entire 'default' group\n            targets.extend(yield_deps(optional_groups['default']))\n\n    for include in filter(None, map(optional_groups.get, args.include or [])):\n        targets.extend(yield_deps(include))\n\n    targets = [t for t in targets if re.match(r'[\\w-]+', t).group(0).lower() not in excludes]\n\n    if args.print:\n        for target in targets:\n            print(target)\n        return\n\n    pip_args = [sys.executable, '-m', 'pip', 'install', '-U']\n    if args.user:\n        pip_args.append('--user')\n    pip_args.extend(targets)\n\n    return subprocess.call(pip_args)\n\n\nif __name__ == '__main__':\n    sys.exit(main())\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "devscripts/lazy_load_template.py", "size": 1242, "license": "Unlicense", "content_sha": "6f52165c5c551fe58d37d63696eb7c9660d588c2", "findings": [], "content": "import importlib\nimport random\nimport re\n\nfrom ..utils import (\n    age_restricted,\n    bug_reports_message,\n    classproperty,\n    variadic,\n    write_string,\n)\n\n# These bloat the lazy_extractors, so allow them to passthrough silently\nALLOWED_CLASSMETHODS = {'extract_from_webpage', 'get_testcases', 'get_webpage_testcases'}\n_WARNED = False\n\n\nclass LazyLoadMetaClass(type):\n    def __getattr__(cls, name):\n        global _WARNED\n        if ('_real_class' not in cls.__dict__\n                and name not in ALLOWED_CLASSMETHODS and not _WARNED):\n            _WARNED = True\n            write_string('WARNING: Falling back to normal extractor since lazy extractor '\n                         f'{cls.__name__} does not have attribute {name}{bug_reports_message()}\\n')\n        return getattr(cls.real_class, name)\n\n\nclass LazyLoadExtractor(metaclass=LazyLoadMetaClass):\n    @classproperty\n    def real_class(cls):\n        if '_real_class' not in cls.__dict__:\n            cls._real_class = getattr(importlib.import_module(cls._module), cls.__name__)\n        return cls._real_class\n\n    def __new__(cls, *args, **kwargs):\n        instance = cls.real_class.__new__(cls.real_class)\n        instance.__init__(*args, **kwargs)\n        return instance\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "devscripts/make_changelog.py", "size": 18406, "license": "Unlicense", "content_sha": "7c876101b49deae91e7bb31c354c223f577fea0c", "findings": [], "content": "from __future__ import annotations\n\n# Allow direct execution\nimport os\nimport sys\n\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nimport enum\nimport itertools\nimport json\nimport logging\nimport re\nfrom collections import defaultdict\nfrom dataclasses import dataclass\nfrom functools import lru_cache\nfrom pathlib import Path\n\nfrom devscripts.utils import read_file, run_process, write_file\n\nBASE_URL = 'https://github.com'\nLOCATION_PATH = Path(__file__).parent\nHASH_LENGTH = 7\n\nlogger = logging.getLogger(__name__)\n\n\nclass CommitGroup(enum.Enum):\n    PRIORITY = 'Important'\n    CORE = 'Core'\n    EXTRACTOR = 'Extractor'\n    DOWNLOADER = 'Downloader'\n    POSTPROCESSOR = 'Postprocessor'\n    NETWORKING = 'Networking'\n    MISC = 'Misc.'\n\n    @classmethod\n    @lru_cache\n    def subgroup_lookup(cls):\n        return {\n            name: group\n            for group, names in {\n                cls.MISC: {\n                    'build',\n                    'ci',\n                    'cleanup',\n                    'devscripts',\n                    'docs',\n                    'test',\n                },\n                cls.NETWORKING: {\n                    'rh',\n                },\n            }.items()\n            for name in names\n        }\n\n    @classmethod\n    @lru_cache\n    def group_lookup(cls):\n        result = {\n            'fd': cls.DOWNLOADER,\n            'ie': cls.EXTRACTOR,\n            'pp': cls.POSTPROCESSOR,\n            'upstream': cls.CORE,\n        }\n        result.update({item.name.lower(): item for item in iter(cls)})\n        return result\n\n    @classmethod\n    def get(cls, value: str) -> tuple[CommitGroup | None, str | None]:\n        group, _, subgroup = (group.strip().lower() for group in value.partition('/'))\n\n        if result := cls.group_lookup().get(group):\n            return result, subgroup or None\n\n        if subgroup:\n            return None, value\n\n        return cls.subgroup_lookup().get(group), group or None\n\n\n@dataclass\nclass Commit:\n    hash: str | None\n    short: str\n    authors: list[str]\n\n    def __str__(self):\n        result = f'{self.short!r}'\n\n        if self.hash:\n            result += f' ({self.hash[:HASH_LENGTH]})'\n\n        if self.authors:\n            authors = ', '.join(self.authors)\n            result += f' by {authors}'\n\n        return result\n\n\n@dataclass\nclass CommitInfo:\n    details: str | None\n    sub_details: tuple[str, ...]\n    message: str\n    issues: list[str]\n    commit: Commit\n    fixes: list[Commit]\n\n    def key(self):\n        return ((self.details or '').lower(), self.sub_details, self.message)\n\n\ndef unique(items):\n    return sorted({item.strip().lower(): item for item in items if item}.values())\n\n\nclass Changelog:\n    MISC_RE = re.compile(r'(?:^|\\b)(?:lint(?:ing)?|misc|format(?:ting)?|fixes)(?:\\b|$)', re.IGNORECASE)\n    ALWAYS_SHOWN = (CommitGroup.PRIORITY,)\n\n    def __init__(self, groups, repo, collapsible=False):\n        self._groups = groups\n        self._repo = repo\n        self._collapsible = collapsible\n\n    def __str__(self):\n        return '\\n'.join(self._format_groups(self._groups)).replace('\\t', '    ')\n\n    def _format_groups(self, groups):\n        first = True\n        for item in CommitGroup:\n            if self._collapsible and item not in self.ALWAYS_SHOWN and first:\n                first = False\n                yield '\\n<details><summary><h3>Changelog</h3></summary>\\n'\n\n            if group := groups[item]:\n                yield self.format_module(item.value, group)\n\n        if self._collapsible:\n            yield '\\n</details>'\n\n    def format_module(self, name, group):\n        result = f'\\n#### {name} changes\\n' if name else '\\n'\n        return result + '\\n'.join(self._format_group(group))\n\n    def _format_group(self, group):\n        sorted_group = sorted(group, key=CommitInfo.key)\n        detail_groups = itertools.groupby(sorted_group, lambda item: (item.details or '').lower())\n        for _, items in detail_groups:\n            items = list(items)\n            details = items[0].details\n\n            if details == 'cleanup':\n                items = self._prepare_cleanup_misc_items(items)\n\n            prefix = '-'\n            if details:\n                if len(items) == 1:\n                    prefix = f'- **{details}**:'\n                else:\n                    yield f'- **{details}**'\n                    prefix = '\\t-'\n\n            sub_detail_groups = itertools.groupby(items, lambda item: tuple(map(str.lower, item.sub_details)))\n            for sub_details, entries in sub_detail_groups:\n                if not sub_details:\n                    for entry in entries:\n                        yield f'{prefix} {self.format_single_change(entry)}'\n                    continue\n\n                entries = list(entries)\n                sub_prefix = f'{prefix} {\", \".join(entries[0].sub_details)}'\n                if len(entries) == 1:\n                    yield f'{sub_prefix}: {self.format_single_change(entries[0])}'\n                    continue\n\n                yield sub_prefix\n                for entry in entries:\n                    yield f'\\t{prefix} {self.format_single_change(entry)}'\n\n    def _prepare_cleanup_misc_items(self, items):\n        cleanup_misc_items = defaultdict(list)\n        sorted_items = []\n        for item in items:\n            if self.MISC_RE.search(item.message):\n                cleanup_misc_items[tuple(item.commit.authors)].append(item)\n            else:\n                sorted_items.append(item)\n\n        for commit_infos in cleanup_misc_items.values():\n            sorted_items.append(CommitInfo(\n                'cleanup', ('Miscellaneous',), ', '.join(\n                    self._format_message_link(None, info.commit.hash)\n                    for info in sorted(commit_infos, key=lambda item: item.commit.hash or '')),\n                [], Commit(None, '', commit_infos[0].commit.authors), []))\n\n        return sorted_items\n\n    def format_single_change(self, info: CommitInfo):\n        message, sep, rest = info.message.partition('\\n')\n        if '[' not in message:\n            # If the message doesn't already contain markdown links, try to add a link to the commit\n            message = self._format_message_link(message, info.commit.hash)\n\n        if info.issues:\n            message = f'{message} ({self._format_issues(info.issues)})'\n\n        if info.commit.authors:\n            message = f'{message} by {self._format_authors(info.commit.authors)}'\n\n        if info.fixes:\n            fix_message = ', '.join(f'{self._format_message_link(None, fix.hash)}' for fix in info.fixes)\n\n            authors = sorted({author for fix in info.fixes for author in fix.authors}, key=str.casefold)\n            if authors != info.commit.authors:\n                fix_message = f'{fix_message} by {self._format_authors(authors)}'\n\n            message = f'{message} (With fixes in {fix_message})'\n\n        return message if not sep else f'{message}{sep}{rest}'\n\n    def _format_message_link(self, message, commit_hash):\n        assert message or commit_hash, 'Improperly defined commit message or override'\n        message = message if message else commit_hash[:HASH_LENGTH]\n        return f'[{message}]({self.repo_url}/commit/{commit_hash})' if commit_hash else message\n\n    def _format_issues(self, issues):\n        return ', '.join(f'[#{issue}]({self.repo_url}/issues/{issue})' for issue in issues)\n\n    @staticmethod\n    def _format_authors(authors):\n        return ', '.join(f'[{author}]({BASE_URL}/{author})' for author in authors)\n\n    @property\n    def repo_url(self):\n        return f'{BASE_URL}/{self._repo}'\n\n\nclass CommitRange:\n    COMMAND = 'git'\n    COMMIT_SEPARATOR = '-----'\n\n    AUTHOR_INDICATOR_RE = re.compile(r'Authored by:? ', re.IGNORECASE)\n    MESSAGE_RE = re.compile(r'''\n        (?:\\[(?P<prefix>[^\\]]+)\\]\\ )?\n        (?:(?P<sub_details>`?[\\w.-]+`?): )?\n        (?P<message>.+?)\n        (?:\\ \\((?P<issues>\\#\\d+(?:,\\ \\#\\d+)*)\\))?\n        ''', re.VERBOSE | re.DOTALL)\n    EXTRACTOR_INDICATOR_RE = re.compile(r'(?:Fix|Add)\\s+Extractors?', re.IGNORECASE)\n    REVERT_RE = re.compile(r'(?:\\[[^\\]]+\\]\\s+)?(?i:Revert)\\s+([\\da-f]{40})')\n    FIXES_RE = re.compile(r'(?i:(?:bug\\s*)?fix(?:es)?(?:\\s+bugs?)?(?:\\s+in|\\s+for)?|Improve)\\s+([\\da-f]{40})')\n    UPSTREAM_MERGE_RE = re.compile(r'Update to ytdl-commit-([\\da-f]+)')\n\n    def __init__(self, start, end, default_author=None):\n        self._start, self._end = start, end\n        self._commits, self._fixes = self._get_commits_and_fixes(default_author)\n        self._commits_added = []\n\n    def __iter__(self):\n        return iter(itertools.chain(self._commits.values(), self._commits_added))\n\n    def __len__(self):\n        return len(self._commits) + len(self._commits_added)\n\n    def __contains__(self, commit):\n        if isinstance(commit, Commit):\n            if not commit.hash:\n                return False\n            commit = commit.hash\n\n        return commit in self._commits\n\n    def _get_commits_and_fixes(self, default_author):\n        result = run_process(\n            self.COMMAND, 'log', f'--format=%H%n%s%n%b%n{self.COMMIT_SEPARATOR}',\n            f'{self._start}..{self._end}' if self._start else self._end).stdout\n\n        commits, reverts = {}, {}\n        fixes = defaultdict(list)\n        lines = iter(result.splitlines(False))\n        for i, commit_hash in enumerate(lines):\n            short = next(lines)\n            skip = short.startswith('Release ') or short == '[version] update'\n\n            fix_commitish = None\n            if match := self.FIXES_RE.search(short):\n                fix_commitish = match.group(1)\n\n            authors = [default_author] if default_author else []\n            for line in iter(lambda: next(lines), self.COMMIT_SEPARATOR):\n                if match := self.AUTHOR_INDICATOR_RE.match(line):\n                    authors = sorted(map(str.strip, line[match.end():].split(',')), key=str.casefold)\n                if not fix_commitish and (match := self.FIXES_RE.fullmatch(line)):\n                    fix_commitish = match.group(1)\n\n            commit = Commit(commit_hash, short, authors)\n            if skip and (self._start or not i):\n                logger.debug(f'Skipped commit: {commit}')\n                continue\n            elif skip:\n                logger.debug(f'Reached Release commit, breaking: {commit}')\n                break\n\n            if match := self.REVERT_RE.fullmatch(commit.short):\n                reverts[match.group(1)] = commit\n                continue\n\n            if fix_commitish:\n                fixes[fix_commitish].append(commit)\n\n            commits[commit.hash] = commit\n\n        for commitish, revert_commit in reverts.items():\n            if reverted := commits.pop(commitish, None):\n                logger.debug(f'{commitish} fully reverted {reverted}')\n            else:\n                commits[revert_commit.hash] = revert_commit\n\n        for commitish, fix_commits in fixes.items():\n            if commitish in commits:\n                hashes = ', '.join(commit.hash[:HASH_LENGTH] for commit in fix_commits)\n                logger.info(f'Found fix(es) for {commitish[:HASH_LENGTH]}: {hashes}')\n                for fix_commit in fix_commits:\n                    del commits[fix_commit.hash]\n            else:\n                logger.debug(f'Commit with fixes not in changes: {commitish[:HASH_LENGTH]}')\n\n        return commits, fixes\n\n    def apply_overrides(self, overrides):\n        for override in overrides:\n            when = override.get('when')\n            if when and when not in self and when != self._start:\n                logger.debug(f'Ignored {when!r} override')\n                continue\n\n            override_hash = override.get('hash') or when\n            if override['action'] == 'add':\n                commit = Commit(override.get('hash'), override['short'], override.get('authors') or [])\n                logger.info(f'ADD    {commit}')\n                self._commits_added.append(commit)\n\n            elif override['action'] == 'remove':\n                if override_hash in self._commits:\n                    logger.info(f'REMOVE {self._commits[override_hash]}')\n                    del self._commits[override_hash]\n\n            elif override['action'] == 'change':\n                if override_hash not in self._commits:\n                    continue\n                commit = Commit(override_hash, override['short'], override.get('authors') or [])\n                logger.info(f'CHANGE {self._commits[commit.hash]} -> {commit}')\n                self._commits[commit.hash] = commit\n\n        self._commits = dict(reversed(self._commits.items()))\n\n    def groups(self):\n        group_dict = defaultdict(list)\n        for commit in self:\n            upstream_re = self.UPSTREAM_MERGE_RE.search(commit.short)\n            if upstream_re:\n                commit.short = f'[upstream] Merged with youtube-dl {upstream_re.group(1)}'\n\n            match = self.MESSAGE_RE.fullmatch(commit.short)\n            if not match:\n                logger.error(f'Error parsing short commit message: {commit.short!r}')\n                continue\n\n            prefix, sub_details_alt, message, issues = match.groups()\n            issues = [issue.strip()[1:] for issue in issues.split(',')] if issues else []\n\n            if prefix:\n                groups, details, sub_details = zip(*map(self.details_from_prefix, prefix.split(',')))\n                group = next(iter(filter(None, groups)), None)\n                details = ', '.join(unique(details))\n                sub_details = list(itertools.chain.from_iterable(sub_details))\n            else:\n                group = CommitGroup.CORE\n                details = None\n                sub_details = []\n\n            if sub_details_alt:\n                sub_details.append(sub_details_alt)\n            sub_details = tuple(unique(sub_details))\n\n            if not group:\n                if self.EXTRACTOR_INDICATOR_RE.search(commit.short):\n                    group = CommitGroup.EXTRACTOR\n                    logger.error(f'Assuming [ie] group for {commit.short!r}')\n                else:\n                    group = CommitGroup.CORE\n\n            commit_info = CommitInfo(\n                details, sub_details, message.strip(),\n                issues, commit, self._fixes[commit.hash])\n\n            logger.debug(f'Resolved {commit.short!r} to {commit_info!r}')\n            group_dict[group].append(commit_info)\n\n        return group_dict\n\n    @staticmethod\n    def details_from_prefix(prefix):\n        if not prefix:\n            return CommitGroup.CORE, None, ()\n\n        prefix, *sub_details = prefix.split(':')\n\n        group, details = CommitGroup.get(prefix)\n        if group is CommitGroup.PRIORITY and details:\n            details = details.partition('/')[2].strip()\n\n        if details and '/' in details:\n            logger.error(f'Prefix is overnested, using first part: {prefix}')\n            details = details.partition('/')[0].strip()\n\n        if details == 'common':\n            details = None\n        elif group is CommitGroup.NETWORKING and details == 'rh':\n            details = 'Request Handler'\n\n        return group, details, sub_details\n\n\ndef get_new_contributors(contributors_path, commits):\n    contributors = set()\n    if contributors_path.exists():\n        for line in read_file(contributors_path).splitlines():\n            author, _, _ = line.strip().partition(' (')\n            authors = author.split('/')\n            contributors.update(map(str.casefold, authors))\n\n    new_contributors = set()\n    for commit in commits:\n        for author in commit.authors:\n            author_folded = author.casefold()\n            if author_folded not in contributors:\n                contributors.add(author_folded)\n                new_contributors.add(author)\n\n    return sorted(new_contributors, key=str.casefold)\n\n\ndef create_changelog(args):\n    logging.basicConfig(\n        datefmt='%Y-%m-%d %H-%M-%S', format='{asctime} | {levelname:<8} | {message}',\n        level=logging.WARNING - 10 * args.verbosity, style='{', stream=sys.stderr)\n\n    commits = CommitRange(None, args.commitish, args.default_author)\n\n    if not args.no_override:\n        if args.override_path.exists():\n            overrides = json.loads(read_file(args.override_path))\n            commits.apply_overrides(overrides)\n        else:\n            logger.warning(f'File {args.override_path.as_posix()} does not exist')\n\n    logger.info(f'Loaded {len(commits)} commits')\n\n    if new_contributors := get_new_contributors(args.contributors_path, commits):\n        if args.contributors:\n            write_file(args.contributors_path, '\\n'.join(new_contributors) + '\\n', mode='a')\n        logger.info(f'New contributors: {\", \".join(new_contributors)}')\n\n    return Changelog(commits.groups(), args.repo, args.collapsible)\n\n\ndef create_parser():\n    import argparse\n\n    parser = argparse.ArgumentParser(\n        description='Create a changelog markdown from a git commit range')\n    parser.add_argument(\n        'commitish', default='HEAD', nargs='?',\n        help='The commitish to create the range from (default: %(default)s)')\n    parser.add_argument(\n        '-v', '--verbosity', action='count', default=0,\n        help='increase verbosity (can be used twice)')\n    parser.add_argument(\n        '-c', '--contributors', action='store_true',\n        help='update CONTRIBUTORS file (default: %(default)s)')\n    parser.add_argument(\n        '--contributors-path', type=Path, default=LOCATION_PATH.parent / 'CONTRIBUTORS',\n        help='path to the CONTRIBUTORS file')\n    parser.add_argument(\n        '--no-override', action='store_true',\n        help='skip override json in commit generation (default: %(default)s)')\n    parser.add_argument(\n        '--override-path', type=Path, default=LOCATION_PATH / 'changelog_override.json',\n        help='path to the changelog_override.json file')\n    parser.add_argument(\n        '--default-author', default='pukkandan',\n        help='the author to use without a author indicator (default: %(default)s)')\n    parser.add_argument(\n        '--repo', default='yt-dlp/yt-dlp',\n        help='the github repository to use for the operations (default: %(default)s)')\n    parser.add_argument(\n        '--collapsible', action='store_true',\n        help='make changelog collapsible (default: %(default)s)')\n\n    return parser\n\n\nif __name__ == '__main__':\n    print(create_changelog(create_parser().parse_args()))\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "devscripts/make_contributing.py", "size": 763, "license": "Unlicense", "content_sha": "a06f8a616e826ab51a32d7d9c76411ff13bc7fc6", "findings": [], "content": "#!/usr/bin/env python3\n\nimport optparse\nimport re\n\n\ndef main():\n    return  # This is unused in yt-dlp\n\n    parser = optparse.OptionParser(usage='%prog INFILE OUTFILE')\n    options, args = parser.parse_args()\n    if len(args) != 2:\n        parser.error('Expected an input and an output filename')\n\n    infile, outfile = args\n\n    with open(infile, encoding='utf-8') as inf:\n        readme = inf.read()\n\n    bug_text = re.search(\n        r'(?s)#\\s*BUGS\\s*[^\\n]*\\s*(.*?)#\\s*COPYRIGHT', readme).group(1)\n    dev_text = re.search(\n        r'(?s)(#\\s*DEVELOPER INSTRUCTIONS.*?)#\\s*EMBEDDING yt-dlp', readme).group(1)\n\n    out = bug_text + dev_text\n\n    with open(outfile, 'w', encoding='utf-8') as outf:\n        outf.write(out)\n\n\nif __name__ == '__main__':\n    main()\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "devscripts/make_issue_template.py", "size": 2850, "license": "Unlicense", "content_sha": "110fcc245ada8253d5a7ed04b843265bd412a9c7", "findings": [], "content": "#!/usr/bin/env python3\n\n# Allow direct execution\nimport os\nimport sys\n\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\n\nimport re\n\nfrom devscripts.utils import get_filename_args, read_file, write_file\n\nVERBOSE = '''\n  - type: checkboxes\n    id: verbose\n    attributes:\n      label: Provide verbose output that clearly demonstrates the problem\n      description: |\n        This is mandatory unless absolutely impossible to provide. If you are unable to provide the output, please explain why.\n      options:\n        - label: Run **your** yt-dlp command with **-vU** flag added (`yt-dlp -vU <your command line>`)\n          required: true\n        - label: \"If using API, add `'verbose': True` to `YoutubeDL` params instead\"\n          required: false\n        - label: Copy the WHOLE output (starting with `[debug] Command-line config`) and insert it below\n          required: true\n  - type: textarea\n    id: log\n    attributes:\n      label: Complete Verbose Output\n      description: |\n        It should start like this:\n      placeholder: |\n        [debug] Command-line config: ['-vU', 'https://www.youtube.com/watch?v=BaW_jenozKc']\n        [debug] Encodings: locale cp65001, fs utf-8, pref cp65001, out utf-8, error utf-8, screen utf-8\n        [debug] yt-dlp version nightly@... from yt-dlp/yt-dlp-nightly-builds [1a176d874] (win_exe)\n        [debug] Python 3.10.11 (CPython AMD64 64bit) - Windows-10-10.0.20348-SP0 (OpenSSL 1.1.1t  7 Feb 2023)\n        [debug] exe versions: ffmpeg 7.0.2 (setts), ffprobe 7.0.2\n        [debug] Optional libraries: Cryptodome-3.21.0, brotli-1.1.0, certifi-2024.08.30, curl_cffi-0.5.10, mutagen-1.47.0, requests-2.32.3, sqlite3-3.40.1, urllib3-2.2.3, websockets-13.1\n        [debug] Proxy map: {}\n        [debug] Request Handlers: urllib, requests, websockets, curl_cffi\n        [debug] Loaded 1838 extractors\n        [debug] Fetching release info: https://api.github.com/repos/yt-dlp/yt-dlp/releases/latest\n        Latest version: nightly@... from yt-dlp/yt-dlp-nightly-builds\n        yt-dlp is up to date (nightly@... from yt-dlp/yt-dlp-nightly-builds)\n        [youtube] Extracting URL: https://www.youtube.com/watch?v=BaW_jenozKc\n        <more lines>\n      render: shell\n    validations:\n      required: true\n'''.strip()\n\nNO_SKIP = '''\n  - type: markdown\n    attributes:\n      value: |\n        > [!IMPORTANT]\n        > Not providing the required (*) information or removing the template will result in your issue being closed and ignored.\n'''.strip()\n\n\ndef main():\n    fields = {\n        'no_skip': NO_SKIP,\n        'verbose': VERBOSE,\n        'verbose_optional': re.sub(r'(\\n\\s+validations:)?\\n\\s+required: true', '', VERBOSE),\n    }\n\n    infile, outfile = get_filename_args(has_infile=True)\n    write_file(outfile, read_file(infile) % fields)\n\n\nif __name__ == '__main__':\n    main()\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "devscripts/make_lazy_extractors.py", "size": 3950, "license": "Unlicense", "content_sha": "0ce773e82462bad4581d9099dadb6cf2756767c7", "findings": [], "content": "#!/usr/bin/env python3\n\n# Allow direct execution\nimport os\nimport sys\n\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\n\nfrom inspect import getsource\n\nfrom devscripts.utils import get_filename_args, read_file, write_file\nfrom yt_dlp.extractor import import_extractors\nfrom yt_dlp.extractor.common import InfoExtractor, SearchInfoExtractor\nfrom yt_dlp.globals import extractors\n\nNO_ATTR = object()\nSTATIC_CLASS_PROPERTIES = [\n    'IE_NAME', '_ENABLED', '_VALID_URL',  # Used for URL matching\n    '_WORKING', 'IE_DESC', '_NETRC_MACHINE', 'SEARCH_KEY',  # Used for --extractor-descriptions\n    'age_limit',  # Used for --age-limit (evaluated)\n    '_RETURN_TYPE',  # Accessed in CLI only with instance (evaluated)\n]\nCLASS_METHODS = [\n    'ie_key', 'suitable', '_match_valid_url',  # Used for URL matching\n    'working', 'get_temp_id', '_match_id',  # Accessed just before instance creation\n    'description',  # Used for --extractor-descriptions\n    'is_suitable',  # Used for --age-limit\n    'supports_login', 'is_single_video',  # Accessed in CLI only with instance\n]\nIE_TEMPLATE = '''\nclass {name}({bases}):\n    _module = {module!r}\n'''\nMODULE_TEMPLATE = read_file('devscripts/lazy_load_template.py')\n\n\ndef main():\n    os.environ['YTDLP_NO_PLUGINS'] = 'true'\n    os.environ['YTDLP_NO_LAZY_EXTRACTORS'] = 'true'\n\n    lazy_extractors_filename = get_filename_args(default_outfile='yt_dlp/extractor/lazy_extractors.py')\n\n    import_extractors()\n\n    DummyInfoExtractor = type('InfoExtractor', (InfoExtractor,), {'IE_NAME': NO_ATTR})\n    module_src = '\\n'.join((\n        MODULE_TEMPLATE,\n        '    _module = None',\n        *extra_ie_code(DummyInfoExtractor),\n        '\\nclass LazyLoadSearchExtractor(LazyLoadExtractor):\\n    pass\\n',\n        *build_ies(list(extractors.value.values()), (InfoExtractor, SearchInfoExtractor), DummyInfoExtractor),\n    ))\n\n    write_file(lazy_extractors_filename, f'{module_src}\\n')\n\n\ndef extra_ie_code(ie, base=None):\n    for var in STATIC_CLASS_PROPERTIES:\n        val = getattr(ie, var)\n        if val != (getattr(base, var) if base else NO_ATTR):\n            yield f'    {var} = {val!r}'\n    yield ''\n\n    for name in CLASS_METHODS:\n        f = getattr(ie, name)\n        if not base or f.__func__ != getattr(base, name).__func__:\n            yield getsource(f)\n\n\ndef build_ies(ies, bases, attr_base):\n    names = []\n    for ie in sort_ies(ies, bases):\n        yield build_lazy_ie(ie, ie.__name__, attr_base)\n        if ie in ies:\n            names.append(ie.__name__)\n\n    yield '\\n_CLASS_LOOKUP = {%s}' % ', '.join(f'{name!r}: {name}' for name in names)\n\n\ndef sort_ies(ies, ignored_bases):\n    \"\"\"find the correct sorting and add the required base classes so that subclasses can be correctly created\"\"\"\n    classes, returned_classes = ies[:-1], set()\n    assert ies[-1].__name__ == 'GenericIE', 'Last IE must be GenericIE'\n    while classes:\n        for c in classes[:]:\n            bases = set(c.__bases__) - {object, *ignored_bases}\n            restart = False\n            for b in sorted(bases, key=lambda x: x.__name__):\n                if b not in classes and b not in returned_classes:\n                    assert b.__name__ != 'GenericIE', 'Cannot inherit from GenericIE'\n                    classes.insert(0, b)\n                    restart = True\n            if restart:\n                break\n            if bases <= returned_classes:\n                yield c\n                returned_classes.add(c)\n                classes.remove(c)\n                break\n    yield ies[-1]\n\n\ndef build_lazy_ie(ie, name, attr_base):\n    bases = ', '.join({\n        'InfoExtractor': 'LazyLoadExtractor',\n        'SearchInfoExtractor': 'LazyLoadSearchExtractor',\n    }.get(base.__name__, base.__name__) for base in ie.__bases__)\n\n    s = IE_TEMPLATE.format(name=name, module=ie.__module__, bases=bases)\n    return s + '\\n'.join(extra_ie_code(ie, attr_base))\n\n\nif __name__ == '__main__':\n    main()\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "devscripts/make_readme.py", "size": 2898, "license": "Unlicense", "content_sha": "cbb5859aa1a607c4e453ba2622e22952793dddc6", "findings": [], "content": "#!/usr/bin/env python3\n\n\"\"\"\nyt-dlp --help | make_readme.py\nThis must be run in a console of correct width\n\"\"\"\n\n# Allow direct execution\nimport os\nimport sys\n\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\n\nimport functools\nimport re\n\nfrom devscripts.utils import read_file, write_file\n\nREADME_FILE = 'README.md'\n\nOPTIONS_START = 'General Options:'\nOPTIONS_END = 'CONFIGURATION'\nEPILOG_START = 'See full documentation'\nALLOWED_OVERSHOOT = 2\n\nDISABLE_PATCH = object()\n\n\ndef take_section(text, start=None, end=None, *, shift=0):\n    return text[\n        text.index(start) + shift if start else None:\n        text.index(end) + shift if end else None\n    ]\n\n\ndef apply_patch(text, patch):\n    return text if patch[0] is DISABLE_PATCH else re.sub(*patch, text)\n\n\noptions = take_section(sys.stdin.read(), f'\\n  {OPTIONS_START}', f'\\n{EPILOG_START}', shift=1)\n\nmax_width = max(map(len, options.split('\\n')))\nswitch_col_width = len(re.search(r'(?m)^\\s{5,}', options).group())\ndelim = f'\\n{\" \" * switch_col_width}'\n\nPATCHES = (\n    (   # Standardize `--update` message\n        r'(?m)^(    -U, --update\\s+).+(\\n    \\s.+)*$',\n        r'\\1Update this program to the latest version',\n    ),\n    (   # Headings\n        r'(?m)^  (\\w.+\\n)(    (?=\\w))?',\n        r'## \\1',\n    ),\n    (   # Fixup `--date` formatting\n        rf'(?m)(    --date DATE.+({delim}[^\\[]+)*)\\[.+({delim}.+)*$',\n        (rf'\\1[now|today|yesterday][-N[day|week|month|year]].{delim}'\n         f'E.g. \"--date today-2weeks\" downloads only{delim}'\n         'videos uploaded on the same day two weeks ago'),\n    ),\n    (   # Do not split URLs\n        rf'({delim[:-1]})? (?P<label>\\[\\S+\\] )?(?P<url>https?({delim})?:({delim})?/({delim})?/(({delim})?\\S+)+)\\s',\n        lambda mobj: ''.join((delim, mobj.group('label') or '', re.sub(r'\\s+', '', mobj.group('url')), '\\n')),\n    ),\n    (   # Do not split \"words\"\n        rf'(?m)({delim}\\S+)+$',\n        lambda mobj: ''.join((delim, mobj.group(0).replace(delim, ''))),\n    ),\n    (   # Allow overshooting last line\n        rf'(?m)^(?P<prev>.+)${delim}(?P<current>.+)$(?!{delim})',\n        lambda mobj: (mobj.group().replace(delim, ' ')\n                      if len(mobj.group()) - len(delim) + 1 <= max_width + ALLOWED_OVERSHOOT\n                      else mobj.group()),\n    ),\n    (   # Avoid newline when a space is available b/w switch and description\n        DISABLE_PATCH,  # This creates issues with prepare_manpage\n        r'(?m)^(\\s{4}-.{%d})(%s)' % (switch_col_width - 6, delim),\n        r'\\1 ',\n    ),\n    (   # Replace brackets with a Markdown link\n        r'SponsorBlock API \\((http.+)\\)',\n        r'[SponsorBlock API](\\1)',\n    ),\n)\n\nreadme = read_file(README_FILE)\n\nwrite_file(README_FILE, ''.join((\n    take_section(readme, end=f'## {OPTIONS_START}'),\n    functools.reduce(apply_patch, PATCHES, options),\n    take_section(readme, f'# {OPTIONS_END}'),\n)))\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "devscripts/make_supportedsites.py", "size": 923, "license": "Unlicense", "content_sha": "145f6d47f26f1a3deefb48b5abb5b98a8681fd10", "findings": [], "content": "#!/usr/bin/env python3\n\n# Allow direct execution\nimport os\nimport sys\n\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\n\nfrom devscripts.utils import get_filename_args, write_file\nfrom yt_dlp.extractor import list_extractor_classes\n\nTEMPLATE = '''\\\n# Supported sites\n\nBelow is a list of all extractors that are currently included with yt-dlp.\nIf a site is not listed here, it might still be supported by yt-dlp's embed extraction or generic extractor.\nNot all sites listed here are guaranteed to work; websites are constantly changing and sometimes this breaks yt-dlp's support for them.\nThe only reliable way to check if a site is supported is to try it.\n\n{ie_list}\n'''\n\n\ndef main():\n    out = '\\n'.join(ie.description() for ie in list_extractor_classes() if ie.IE_DESC is not False)\n    write_file(get_filename_args(), TEMPLATE.format(ie_list=out))\n\n\nif __name__ == '__main__':\n    main()\n"}
{"repo_url": "https://github.com/yt-dlp/yt-dlp", "path": "devscripts/prepare_manpage.py", "size": 3495, "license": "Unlicense", "content_sha": "47188e9923136556ea4f9b2be0f6b297d0df5769", "findings": [], "content": "#!/usr/bin/env python3\n\n# Allow direct execution\nimport os\nimport sys\n\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\n\nimport os.path\nimport re\n\nfrom devscripts.utils import (\n    compose_functions,\n    get_filename_args,\n    read_file,\n    write_file,\n)\n\nROOT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nREADME_FILE = os.path.join(ROOT_DIR, 'README.md')\n\nPREFIX = r'''%yt-dlp(1)\n\n# NAME\n\nyt\\-dlp \\- A feature\\-rich command\\-line audio/video downloader\n\n# SYNOPSIS\n\n**yt-dlp** \\[OPTIONS\\] URL [URL...]\n\n# DESCRIPTION\n\n'''\n\n\ndef filter_excluded_sections(readme):\n    EXCLUDED_SECTION_BEGIN_STRING = re.escape('<!-- MANPAGE: BEGIN EXCLUDED SECTION -->')\n    EXCLUDED_SECTION_END_STRING = re.escape('<!-- MANPAGE: END EXCLUDED SECTION -->')\n    return re.sub(\n        rf'(?s){EXCLUDED_SECTION_BEGIN_STRING}.+?{EXCLUDED_SECTION_END_STRING}\\n',\n        '', readme)\n\n\ndef _convert_code_blocks(readme):\n    current_code_block = None\n\n    for line in readme.splitlines(True):\n        if current_code_block:\n            if line == current_code_block:\n                current_code_block = None\n                yield '\\n'\n            else:\n                yield f'    {line}'\n        elif line.startswith('```'):\n            current_code_block = line.count('`') * '`' + '\\n'\n            yield '\\n'\n        else:\n            yield line\n\n\ndef convert_code_blocks(readme):\n    return ''.join(_convert_code_blocks(readme))\n\n\ndef move_sections(readme):\n    MOVE_TAG_TEMPLATE = '<!-- MANPAGE: MOVE \"%s\" SECTION HERE -->'\n    sections = re.findall(r'(?m)^%s$' % (\n        re.escape(MOVE_TAG_TEMPLATE).replace(r'\\%', '%') % '(.+)'), readme)\n\n    for section_name in sections:\n        move_tag = MOVE_TAG_TEMPLATE % section_name\n        if readme.count(move_tag) > 1:\n            raise Exception(f'There is more than one occurrence of \"{move_tag}\". This is unexpected')\n\n        sections = re.findall(rf'(?sm)(^# {re.escape(section_name)}.+?)(?=^# )', readme)\n        if len(sections) < 1:\n            raise Exception(f'The section {section_name} does not exist')\n        elif len(sections) > 1:\n            raise Exception(f'There are multiple occurrences of section {section_name}, this is unhandled')\n\n        readme = readme.replace(sections[0], '', 1).replace(move_tag, sections[0], 1)\n    return readme\n\n\ndef filter_options(readme):\n    section = re.search(r'(?sm)^# USAGE AND OPTIONS\\n.+?(?=^# )', readme).group(0)\n    section_new = section.replace('*', R'\\*')\n\n    options = '# OPTIONS\\n'\n    for line in section_new.split('\\n')[1:]:\n        mobj = re.fullmatch(r'''(?x)\n                \\s{4}(?P<opt>-(?:,\\s|[^\\s])+)\n                (?:\\s(?P<meta>(?:[^\\s]|\\s(?!\\s))+))?\n                (\\s{2,}(?P<desc>.+))?\n            ''', line)\n        if not mobj:\n            options += f'{line.lstrip()}\\n'\n            continue\n        option, metavar, description = mobj.group('opt', 'meta', 'desc')\n\n        # Pandoc's definition_lists. See http://pandoc.org/README.html\n        option = f'{option} *{metavar}*' if metavar else option\n        description = f'{description}\\n' if description else ''\n        options += f'\\n{option}\\n:   {description}'\n        continue\n\n    return readme.replace(section, options, 1)\n\n\nTRANSFORM = compose_functions(filter_excluded_sections, convert_code_blocks, move_sections, filter_options)\n\n\ndef main():\n    write_file(get_filename_args(), PREFIX + TRANSFORM(read_file(README_FILE)))\n\n\nif __name__ == '__main__':\n    main()\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": ".circleci/TROUBLESHOOT.md", "size": 319, "license": "Apache-2.0", "content_sha": "484d62b46a87f43e3df240823bd9227d8ebd11bc", "findings": [], "content": "# Troubleshooting\n\nThis is a document explaining how to deal with various issues on Circle-CI. The entries may include actual solutions or pointers to Issues that cover those.\n\n## Circle CI\n\n* pytest worker runs out of resident RAM and gets killed by `cgroups`: https://github.com/huggingface/transformers/issues/11408\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": ".circleci/create_circleci_config.py", "size": 17978, "license": "Apache-2.0", "content_sha": "2e87b4c2e1a8642b4fb5aeb6474fc727f0aa0782", "findings": [{"type": "pii_email", "matches": ["ci@dummy.com"]}], "content": "# coding=utf-8\n# Copyright 2022 The HuggingFace Inc. team.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nimport argparse\nimport copy\nimport os\nimport random\nfrom dataclasses import dataclass\nfrom typing import Any, Dict, List, Optional\nimport glob\nimport yaml\n\n\nCOMMON_ENV_VARIABLES = {\n    \"OMP_NUM_THREADS\": 1,\n    \"TRANSFORMERS_IS_CI\": True,\n    \"PYTEST_TIMEOUT\": 120,\n    \"RUN_PIPELINE_TESTS\": False,\n}\n# Disable the use of {\"s\": None} as the output is way too long, causing the navigation on CircleCI impractical\nCOMMON_PYTEST_OPTIONS = {\"max-worker-restart\": 0, \"vvv\": None, \"rsfE\":None}\nDEFAULT_DOCKER_IMAGE = [{\"image\": \"cimg/python:3.8.12\"}]\n\n# Strings that commonly appear in the output of flaky tests when they fail. These are used with `pytest-rerunfailures`\n# to rerun the tests that match these patterns.\nFLAKY_TEST_FAILURE_PATTERNS = [\n    \"OSError\",  # Machine/connection transient error\n    \"Timeout\",  # Machine/connection transient error\n    \"ConnectionError\",  # Connection transient error\n    \"FileNotFoundError\",  # Raised by `datasets` on Hub failures\n    \"PIL.UnidentifiedImageError\",  # Raised by `PIL.Image.open` on connection issues\n    \"HTTPError\",  # Also catches HfHubHTTPError\n    \"AssertionError: Tensor-likes are not close!\",  # `torch.testing.assert_close`, we might have unlucky random values\n    # TODO: error downloading tokenizer's `merged.txt` from hub can cause all the exceptions below. Throw and handle\n    # them under a single message.\n    \"TypeError: expected str, bytes or os.PathLike object, not NoneType\",\n    \"TypeError: stat: path should be string, bytes, os.PathLike or integer, not NoneType\",\n    \"Converting from Tiktoken failed\",\n    \"KeyError: <class \",\n    \"TypeError: not a string\",\n]\n\n\nclass EmptyJob:\n    job_name = \"empty\"\n\n    def to_dict(self):\n        steps = [{\"run\": 'ls -la'}]\n        if self.job_name == \"collection_job\":\n            steps.extend(\n                [\n                    \"checkout\",\n                    {\"run\": \"pip install requests || true\"},\n                    {\"run\": \"\"\"while [[ $(curl --location --request GET \"https://circleci.com/api/v2/workflow/$CIRCLE_WORKFLOW_ID/job\" --header \"Circle-Token: $CCI_TOKEN\"| jq -r '.items[]|select(.name != \"collection_job\")|.status' | grep -c \"running\") -gt 0 ]]; do sleep 5; done || true\"\"\"},\n                    {\"run\": 'python utils/process_circleci_workflow_test_reports.py --workflow_id $CIRCLE_WORKFLOW_ID || true'},\n                    {\"store_artifacts\": {\"path\": \"outputs\"}},\n                    {\"run\": 'echo \"All required jobs have now completed\"'},\n                ]\n            )\n\n        return {\n            \"docker\": copy.deepcopy(DEFAULT_DOCKER_IMAGE),\n            \"resource_class\": \"small\",\n            \"steps\": steps,\n        }\n\n\n@dataclass\nclass CircleCIJob:\n    name: str\n    additional_env: Dict[str, Any] = None\n    docker_image: List[Dict[str, str]] = None\n    install_steps: List[str] = None\n    marker: Optional[str] = None\n    parallelism: Optional[int] = 0\n    pytest_num_workers: int = 8\n    pytest_options: Dict[str, Any] = None\n    resource_class: Optional[str] = \"xlarge\"\n    tests_to_run: Optional[List[str]] = None\n    num_test_files_per_worker: Optional[int] = 10\n    # This should be only used for doctest job!\n    command_timeout: Optional[int] = None\n\n    def __post_init__(self):\n        # Deal with defaults for mutable attributes.\n        if self.additional_env is None:\n            self.additional_env = {}\n        if self.docker_image is None:\n            # Let's avoid changing the default list and make a copy.\n            self.docker_image = copy.deepcopy(DEFAULT_DOCKER_IMAGE)\n        else:\n            # BIG HACK WILL REMOVE ONCE FETCHER IS UPDATED\n            print(os.environ.get(\"GIT_COMMIT_MESSAGE\"))\n            if \"[build-ci-image]\" in os.environ.get(\"GIT_COMMIT_MESSAGE\", \"\") or os.environ.get(\"GIT_COMMIT_MESSAGE\", \"\") == \"dev-ci\":\n                self.docker_image[0][\"image\"] = f\"{self.docker_image[0]['image']}:dev\"\n            print(f\"Using {self.docker_image} docker image\")\n        if self.install_steps is None:\n            self.install_steps = [\"uv venv && uv pip install .\"]\n        if self.pytest_options is None:\n            self.pytest_options = {}\n        if isinstance(self.tests_to_run, str):\n            self.tests_to_run = [self.tests_to_run]\n        else:\n            test_file = os.path.join(\"test_preparation\" , f\"{self.job_name}_test_list.txt\")\n            print(\"Looking for \", test_file)\n            if os.path.exists(test_file):\n                with open(test_file) as f:\n                    expanded_tests = f.read().strip().split(\"\\n\")\n                self.tests_to_run = expanded_tests\n                print(\"Found:\", expanded_tests)\n            else:\n                self.tests_to_run = []\n                print(\"not Found\")\n\n    def to_dict(self):\n        env = COMMON_ENV_VARIABLES.copy()\n        env.update(self.additional_env)\n\n        job = {\n            \"docker\": self.docker_image,\n            \"environment\": env,\n        }\n        if self.resource_class is not None:\n            job[\"resource_class\"] = self.resource_class\n\n        all_options = {**COMMON_PYTEST_OPTIONS, **self.pytest_options}\n        pytest_flags = [f\"--{key}={value}\" if (value is not None or key in [\"doctest-modules\"]) else f\"-{key}\" for key, value in all_options.items()]\n        pytest_flags.append(\n            f\"--make-reports={self.name}\" if \"examples\" in self.name else f\"--make-reports=tests_{self.name}\"\n        )\n                # Examples special case: we need to download NLTK files in advance to avoid cuncurrency issues\n        timeout_cmd = f\"timeout {self.command_timeout} \" if self.command_timeout else \"\"\n        marker_cmd = f\"-m '{self.marker}'\" if self.marker is not None else \"\"\n        junit_flags = f\" -p no:warning -o junit_family=xunit1 --junitxml=test-results/junit.xml\"\n        joined_flaky_patterns = \"|\".join(FLAKY_TEST_FAILURE_PATTERNS)\n        repeat_on_failure_flags = f\"--reruns 5 --reruns-delay 2 --only-rerun '({joined_flaky_patterns})'\"\n        parallel = f' << pipeline.parameters.{self.job_name}_parallelism >> '\n        steps = [\n            \"checkout\",\n            {\"attach_workspace\": {\"at\": \"test_preparation\"}},\n            {\"run\": \"apt-get update && apt-get install -y curl\"},\n            {\"run\": \" && \".join(self.install_steps)},\n            {\"run\": {\"name\": \"Download NLTK files\", \"command\": \"\"\"python -c \"import nltk; nltk.download('punkt', quiet=True)\" \"\"\"} if \"example\" in self.name else \"echo Skipping\"},\n            {\"run\": {\n                    \"name\": \"Show installed libraries and their size\",\n                    \"command\": \"\"\"du -h -d 1 \"$(pip -V | cut -d ' ' -f 4 | sed 's/pip//g')\" | grep -vE \"dist-info|_distutils_hack|__pycache__\" | sort -h | tee installed.txt || true\"\"\"}\n            },\n            {\"run\": {\n                \"name\": \"Show installed libraries and their versions\",\n                \"command\": \"\"\"pip list --format=freeze | tee installed.txt || true\"\"\"}\n            },\n            {\"run\": {\n                \"name\": \"Show biggest libraries\",\n                \"command\": \"\"\"dpkg-query --show --showformat='${Installed-Size}\\t${Package}\\n' | sort -rh | head -25 | sort -h | awk '{ package=$2; sub(\".*/\", \"\", package); printf(\"%.5f GB %s\\n\", $1/1024/1024, package)}' || true\"\"\"}\n            },\n            {\"run\": {\"name\": \"Create `test-results` directory\", \"command\": \"mkdir test-results\"}},\n            {\"run\": {\"name\": \"Get files to test\", \"command\":f'curl -L -o {self.job_name}_test_list.txt <<pipeline.parameters.{self.job_name}_test_list>> --header \"Circle-Token: $CIRCLE_TOKEN\"' if self.name != \"pr_documentation_tests\" else 'echo \"Skipped\"'}},\n                        {\"run\": {\"name\": \"Split tests across parallel nodes: show current parallel tests\",\n                    \"command\": f\"TESTS=$(circleci tests split  --split-by=timings {self.job_name}_test_list.txt) && echo $TESTS > splitted_tests.txt && echo $TESTS | tr ' ' '\\n'\" if self.parallelism else f\"awk '{{printf \\\"%s \\\", $0}}' {self.job_name}_test_list.txt > splitted_tests.txt\"\n                    }\n            },\n            {\"run\": {\"name\": \"fetch hub objects before pytest\", \"command\": \"python3 utils/fetch_hub_objects_for_ci.py\"}},\n            {\"run\": {\n                \"name\": \"Run tests\",\n                \"command\": f\"({timeout_cmd} python3 -m pytest {marker_cmd} -n {self.pytest_num_workers} {junit_flags} {repeat_on_failure_flags} {' '.join(pytest_flags)} $(cat splitted_tests.txt) | tee tests_output.txt)\"}\n            },\n            {\"run\": {\"name\": \"Expand to show skipped tests\", \"when\": \"always\", \"command\": f\"python3 .circleci/parse_test_outputs.py --file tests_output.txt --skip\"}},\n            {\"run\": {\"name\": \"Failed tests: show reasons\",   \"when\": \"always\", \"command\": f\"python3 .circleci/parse_test_outputs.py --file tests_output.txt --fail\"}},\n            {\"run\": {\"name\": \"Errors\",                       \"when\": \"always\", \"command\": f\"python3 .circleci/parse_test_outputs.py --file tests_output.txt --errors\"}},\n            {\"store_test_results\": {\"path\": \"test-results\"}},\n            {\"store_artifacts\": {\"path\": \"test-results/junit.xml\"}},\n            {\"store_artifacts\": {\"path\": \"reports\"}},\n            {\"store_artifacts\": {\"path\": \"tests.txt\"}},\n            {\"store_artifacts\": {\"path\": \"splitted_tests.txt\"}},\n            {\"store_artifacts\": {\"path\": \"installed.txt\"}},\n        ]\n        if self.parallelism:\n            job[\"parallelism\"] = parallel\n        job[\"steps\"] = steps\n        return job\n\n    @property\n    def job_name(self):\n        return self.name if (\"examples\" in self.name or \"pipeline\" in self.name or \"pr_documentation\" in self.name) else f\"tests_{self.name}\"\n\n\n# JOBS\ntorch_job = CircleCIJob(\n    \"torch\",\n    docker_image=[{\"image\": \"huggingface/transformers-torch-light\"}],\n    marker=\"not generate\",\n    parallelism=6,\n)\n\ngenerate_job = CircleCIJob(\n    \"generate\",\n    docker_image=[{\"image\": \"huggingface/transformers-torch-light\"}],\n    # networkx==3.3 (after #36957) cause some issues\n    # TODO: remove this once it works directly\n    install_steps=[\"uv venv && uv pip install . && uv pip install networkx==3.2.1\"],\n    marker=\"generate\",\n    parallelism=6,\n)\n\ntokenization_job = CircleCIJob(\n    \"tokenization\",\n    docker_image=[{\"image\": \"huggingface/transformers-torch-light\"}],\n    parallelism=8,\n)\n\nprocessor_job = CircleCIJob(\n    \"processors\",\n    docker_image=[{\"image\": \"huggingface/transformers-torch-light\"}],\n    parallelism=8,\n)\n\ntf_job = CircleCIJob(\n    \"tf\",\n    docker_image=[{\"image\":\"huggingface/transformers-tf-light\"}],\n    parallelism=6,\n)\n\n\nflax_job = CircleCIJob(\n    \"flax\",\n    docker_image=[{\"image\":\"huggingface/transformers-jax-light\"}],\n    parallelism=6,\n    pytest_num_workers=16,\n    resource_class=\"2xlarge\",\n)\n\n\npipelines_torch_job = CircleCIJob(\n    \"pipelines_torch\",\n    additional_env={\"RUN_PIPELINE_TESTS\": True},\n    docker_image=[{\"image\":\"huggingface/transformers-torch-light\"}],\n    marker=\"is_pipeline_test\",\n    parallelism=4,\n)\n\n\npipelines_tf_job = CircleCIJob(\n    \"pipelines_tf\",\n    additional_env={\"RUN_PIPELINE_TESTS\": True},\n    docker_image=[{\"image\":\"huggingface/transformers-tf-light\"}],\n    marker=\"is_pipeline_test\",\n    parallelism=4,\n)\n\n\ncustom_tokenizers_job = CircleCIJob(\n    \"custom_tokenizers\",\n    additional_env={\"RUN_CUSTOM_TOKENIZERS\": True},\n    docker_image=[{\"image\": \"huggingface/transformers-custom-tokenizers\"}],\n)\n\n\nexamples_torch_job = CircleCIJob(\n    \"examples_torch\",\n    additional_env={\"OMP_NUM_THREADS\": 8},\n    docker_image=[{\"image\":\"huggingface/transformers-examples-torch\"}],\n    # TODO @ArthurZucker remove this once docker is easier to build\n    install_steps=[\"uv venv && uv pip install . && uv pip install -r examples/pytorch/_tests_requirements.txt\"],\n    pytest_num_workers=4,\n)\n\n\nexamples_tensorflow_job = CircleCIJob(\n    \"examples_tensorflow\",\n    additional_env={\"OMP_NUM_THREADS\": 8},\n    docker_image=[{\"image\":\"huggingface/transformers-examples-tf\"}],\n    pytest_num_workers=2,\n)\n\n\nhub_job = CircleCIJob(\n    \"hub\",\n    additional_env={\"HUGGINGFACE_CO_STAGING\": True},\n    docker_image=[{\"image\":\"huggingface/transformers-torch-light\"}],\n    install_steps=[\n        'uv venv && uv pip install .',\n        'git config --global user.email \"ci@dummy.com\"',\n        'git config --global user.name \"ci\"',\n    ],\n    marker=\"is_staging_test\",\n    pytest_num_workers=2,\n    resource_class=\"medium\",\n)\n\n\nonnx_job = CircleCIJob(\n    \"onnx\",\n    docker_image=[{\"image\":\"huggingface/transformers-torch-tf-light\"}],\n    install_steps=[\n        \"uv venv\",\n        \"uv pip install .[torch,tf,testing,sentencepiece,onnxruntime,vision,rjieba]\",\n    ],\n    pytest_options={\"k onnx\": None},\n    pytest_num_workers=1,\n    resource_class=\"small\",\n)\n\n\nexotic_models_job = CircleCIJob(\n    \"exotic_models\",\n    docker_image=[{\"image\":\"huggingface/transformers-exotic-models\"}],\n    parallelism=4,\n    pytest_options={\"durations\": 100},\n)\n\n\nrepo_utils_job = CircleCIJob(\n    \"repo_utils\",\n    docker_image=[{\"image\":\"huggingface/transformers-consistency\"}],\n    pytest_num_workers=4,\n    resource_class=\"large\",\n)\n\n\nnon_model_job = CircleCIJob(\n    \"non_model\",\n    docker_image=[{\"image\": \"huggingface/transformers-torch-light\"}],\n    # networkx==3.3 (after #36957) cause some issues\n    # TODO: remove this once it works directly\n    install_steps=[\"uv venv && uv pip install . && uv pip install networkx==3.2.1\"],\n    marker=\"not generate\",\n    parallelism=6,\n)\n\n\n# We also include a `dummy.py` file in the files to be doc-tested to prevent edge case failure. Otherwise, the pytest\n# hangs forever during test collection while showing `collecting 0 items / 21 errors`. (To see this, we have to remove\n# the bash output redirection.)\npy_command = 'from utils.tests_fetcher import get_doctest_files; to_test = get_doctest_files() + [\"dummy.py\"]; to_test = \" \".join(to_test); print(to_test)'\npy_command = f\"$(python3 -c '{py_command}')\"\ncommand = f'echo \"\"\"{py_command}\"\"\" > pr_documentation_tests_temp.txt'\ndoc_test_job = CircleCIJob(\n    \"pr_documentation_tests\",\n    docker_image=[{\"image\":\"huggingface/transformers-consistency\"}],\n    additional_env={\"TRANSFORMERS_VERBOSITY\": \"error\", \"DATASETS_VERBOSITY\": \"error\", \"SKIP_CUDA_DOCTEST\": \"1\"},\n    install_steps=[\n        # Add an empty file to keep the test step running correctly even no file is selected to be tested.\n        \"uv venv && pip install .\",\n        \"touch dummy.py\",\n        command,\n        \"cat pr_documentation_tests_temp.txt\",\n        \"tail -n1 pr_documentation_tests_temp.txt | tee pr_documentation_tests_test_list.txt\"\n    ],\n    tests_to_run=\"$(cat pr_documentation_tests.txt)\",  # noqa\n    pytest_options={\"-doctest-modules\": None, \"doctest-glob\": \"*.md\", \"dist\": \"loadfile\", \"rvsA\": None},\n    command_timeout=1200,  # test cannot run longer than 1200 seconds\n    pytest_num_workers=1,\n)\n\nREGULAR_TESTS = [torch_job, flax_job, hub_job, onnx_job, tokenization_job, processor_job, generate_job, non_model_job] # fmt: skip\nEXAMPLES_TESTS = [examples_torch_job]\nPIPELINE_TESTS = [pipelines_torch_job]\nREPO_UTIL_TESTS = [repo_utils_job]\nDOC_TESTS = [doc_test_job]\nALL_TESTS = REGULAR_TESTS + EXAMPLES_TESTS + PIPELINE_TESTS + REPO_UTIL_TESTS + DOC_TESTS + [custom_tokenizers_job] + [exotic_models_job]  # fmt: skip\n\n\ndef create_circleci_config(folder=None):\n    if folder is None:\n        folder = os.getcwd()\n    os.environ[\"test_preparation_dir\"] = folder\n    jobs = [k for k in ALL_TESTS if os.path.isfile(os.path.join(\"test_preparation\" , f\"{k.job_name}_test_list.txt\") )]\n    print(\"The following jobs will be run \", jobs)\n\n    if len(jobs) == 0:\n        jobs = [EmptyJob()]\n    else:\n        print(\"Full list of job name inputs\", {j.job_name + \"_test_list\":{\"type\":\"string\", \"default\":''} for j in jobs})\n        # Add a job waiting all the test jobs and aggregate their test summary files at the end\n        collection_job = EmptyJob()\n        collection_job.job_name = \"collection_job\"\n        jobs = [collection_job] + jobs\n\n    config = {\n        \"version\": \"2.1\",\n        \"parameters\": {\n            # Only used to accept the parameters from the trigger\n            \"nightly\": {\"type\": \"boolean\", \"default\": False},\n            \"tests_to_run\": {\"type\": \"string\", \"default\": ''},\n            **{j.job_name + \"_test_list\":{\"type\":\"string\", \"default\":''} for j in jobs},\n            **{j.job_name + \"_parallelism\":{\"type\":\"integer\", \"default\":1} for j in jobs},\n        },\n        \"jobs\": {j.job_name: j.to_dict() for j in jobs}\n    }\n    if \"CIRCLE_TOKEN\" in os.environ:\n        # For private forked repo. (e.g. new model addition)\n        config[\"workflows\"] = {\"version\": 2, \"run_tests\": {\"jobs\": [{j.job_name: {\"context\": [\"TRANSFORMERS_CONTEXT\"]}} for j in jobs]}}\n    else:\n        # For public repo. (e.g. `transformers`)\n        config[\"workflows\"] = {\"version\": 2, \"run_tests\": {\"jobs\": [j.job_name for j in jobs]}}\n    with open(os.path.join(folder, \"generated_config.yml\"), \"w\") as f:\n        f.write(yaml.dump(config, sort_keys=False, default_flow_style=False).replace(\"' << pipeline\", \" << pipeline\").replace(\">> '\", \" >>\"))\n\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\n        \"--fetcher_folder\", type=str, default=None, help=\"Only test that all tests and modules are accounted for.\"\n    )\n    args = parser.parse_args()\n\n    create_circleci_config(args.fetcher_folder)\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": ".circleci/parse_test_outputs.py", "size": 2535, "license": "Apache-2.0", "content_sha": "a69da1a3eafb27f37ee7115472aad11b8736690b", "findings": [], "content": "import re\nimport argparse\n\ndef parse_pytest_output(file_path):\n    skipped_tests = {}\n    skipped_count = 0\n    with open(file_path, 'r') as file:\n        for line in file:\n            match = re.match(r'^SKIPPED \\[(\\d+)\\] (tests/.*): (.*)$', line)\n            if match:\n                skipped_count += 1\n                test_file, test_line, reason = match.groups()\n                skipped_tests[reason] = skipped_tests.get(reason, []) + [(test_file, test_line)]\n    for k,v in sorted(skipped_tests.items(), key=lambda x:len(x[1])):\n        print(f\"{len(v):4} skipped because: {k}\")\n    print(\"Number of skipped tests:\", skipped_count)\n\ndef parse_pytest_failure_output(file_path):\n    failed_tests = {}\n    failed_count = 0\n    with open(file_path, 'r') as file:\n        for line in file:\n            match = re.match(r'^FAILED (tests/.*) - (.*): (.*)$', line)\n            if match:\n                failed_count += 1\n                _, error, reason = match.groups()\n                failed_tests[reason] = failed_tests.get(reason, []) + [error]\n    for k,v in sorted(failed_tests.items(), key=lambda x:len(x[1])):\n        print(f\"{len(v):4} failed because `{v[0]}` -> {k}\")\n    print(\"Number of failed tests:\", failed_count)\n    if failed_count>0:\n        exit(1)\n\ndef parse_pytest_errors_output(file_path):\n    print(file_path)\n    error_tests = {}\n    error_count = 0\n    with open(file_path, 'r') as file:\n        for line in file:\n            match = re.match(r'^ERROR (tests/.*) - (.*): (.*)$', line)\n            if match:\n                error_count += 1\n                _, test_error, reason = match.groups()\n                error_tests[reason] = error_tests.get(reason, []) + [test_error]\n    for k,v in sorted(error_tests.items(), key=lambda x:len(x[1])):\n        print(f\"{len(v):4} errored out because of `{v[0]}` -> {k}\")\n    print(\"Number of errors:\", error_count)\n    if error_count>0:\n        exit(1)\n\ndef main():\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\"--file\", help=\"file to parse\")\n    parser.add_argument(\"--skip\", action=\"store_true\", help=\"show skipped reasons\")\n    parser.add_argument(\"--fail\", action=\"store_true\", help=\"show failed tests\")\n    parser.add_argument(\"--errors\", action=\"store_true\", help=\"show failed tests\")\n    args = parser.parse_args()\n\n    if args.skip:\n        parse_pytest_output(args.file)\n\n    if args.fail:\n        parse_pytest_failure_output(args.file)\n\n    if args.errors:\n        parse_pytest_errors_output(args.file)\n\n\nif __name__ == \"__main__\":\n    main()\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": ".github/ISSUE_TEMPLATE/i18n.md", "size": 2850, "license": "Apache-2.0", "content_sha": "9fd14c8f6caa7d437d3d3c3140da8ea5a2c6a030", "findings": [], "content": "---\nname: \ud83c\udf10 Translating a new language?\nabout: Start a new translation effort in your language\ntitle: '[i18n-<languageCode>] Translating docs to <languageName>'\nlabels: WIP\nassignees: ''\n\n---\n\n<!--\nNote: Please search to see if an issue already exists for the language you are trying to translate.\n-->\n\nHi!\n\nLet's bring the documentation to all the <languageName>-speaking community \ud83c\udf10 (currently 0 out of 267 complete)\n\nWho would want to translate? Please follow the \ud83e\udd17 [TRANSLATING guide](https://github.com/huggingface/transformers/blob/main/docs/TRANSLATING.md). Here is a list of the files ready for translation. Let us know in this issue if you'd like to translate any, and we'll add your name to the list.\n\nSome notes:\n\n* Please translate using an informal tone (imagine you are talking with a friend about transformers \ud83e\udd17).\n* Please translate in a gender-neutral way.\n* Add your translations to the folder called `<languageCode>` inside the [source folder](https://github.com/huggingface/transformers/tree/main/docs/source).\n* Register your translation in `<languageCode>/_toctree.yml`; please follow the order of the [English version](https://github.com/huggingface/transformers/blob/main/docs/source/en/_toctree.yml).\n* Once you're finished, open a pull request and tag this issue by including #issue-number in the description, where issue-number is the number of this issue. Please ping @stevhliu for review.\n* \ud83d\ude4b If you'd like others to help you with the translation, you can also post in the \ud83e\udd17 [forums](https://discuss.huggingface.co/).\n\n## Get Started section\n\n- [ ] [index.md](https://github.com/huggingface/transformers/blob/main/docs/source/en/index.md) https://github.com/huggingface/transformers/pull/20180\n- [ ] [quicktour.md](https://github.com/huggingface/transformers/blob/main/docs/source/en/quicktour.md) (waiting for initial PR to go through)\n- [ ] [installation.md](https://github.com/huggingface/transformers/blob/main/docs/source/en/installation.md).\n\n## Tutorial section\n- [ ] [pipeline_tutorial.md](https://github.com/huggingface/transformers/blob/main/docs/source/en/pipeline_tutorial.md)\n- [ ]  [autoclass_tutorial.md](https://github.com/huggingface/transformers/blob/main/docs/source/en/autoclass_tutorial.md)\n- [ ]  [preprocessing.md](https://github.com/huggingface/transformers/blob/main/docs/source/en/preprocessing.md)\n- [ ]  [training.md](https://github.com/huggingface/transformers/blob/main/docs/source/en/training.md)\n- [ ]  [accelerate.md](https://github.com/huggingface/transformers/blob/main/docs/source/en/accelerate.md)\n- [ ]  [model_sharing.md](https://github.com/huggingface/transformers/blob/main/docs/source/en/model_sharing.md)\n- [ ]  [multilingual.md](https://github.com/huggingface/transformers/blob/main/docs/source/en/multilingual.md)\n\n<!--\nKeep on adding more as you go \ud83d\udd25\n-->\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": ".github/PULL_REQUEST_TEMPLATE.md", "size": 3303, "license": "Apache-2.0", "content_sha": "439ab02ebc92a3cf836cbd79955cf88c65f328e4", "findings": [], "content": "# What does this PR do?\n\n<!--\nCongratulations! You've made it this far! You're not quite done yet though.\n\nOnce merged, your PR is going to appear in the release notes with the title you set, so make sure it's a great title that fully reflects the extent of your awesome contribution.\n\nThen, please replace this with a description of the change and which issue is fixed (if applicable). Please also include relevant motivation and context. List any dependencies (if any) that are required for this change.\n\nOnce you're done, someone will review your PR shortly (see the section \"Who can review?\" below to tag some potential reviewers). They may suggest changes to make the code even better. If no one reviewed your PR after a week has passed, don't hesitate to post a new comment @-mentioning the same persons---sometimes notifications get lost.\n-->\n\n<!-- Remove if not applicable -->\n\nFixes # (issue)\n\n\n## Before submitting\n- [ ] This PR fixes a typo or improves the docs (you can dismiss the other checks if that's the case).\n- [ ] Did you read the [contributor guideline](https://github.com/huggingface/transformers/blob/main/CONTRIBUTING.md#create-a-pull-request),\n      Pull Request section?\n- [ ] Was this discussed/approved via a Github issue or the [forum](https://discuss.huggingface.co/)? Please add a link\n      to it if that's the case.\n- [ ] Did you make sure to update the documentation with your changes? Here are the\n      [documentation guidelines](https://github.com/huggingface/transformers/tree/main/docs), and\n      [here are tips on formatting docstrings](https://github.com/huggingface/transformers/tree/main/docs#writing-source-documentation).\n- [ ] Did you write any new necessary tests?\n\n\n## Who can review?\n\nAnyone in the community is free to review the PR once the tests have passed. Feel free to tag\nmembers/contributors who may be interested in your PR.\n\n<!-- Your PR will be replied to more quickly if you can figure out the right person to tag with @\n\n If you know how to use git blame, that is the easiest way, otherwise, here is a rough guide of **who to tag**.\n Please tag fewer than 3 people.\n\nModels:\n\n- text models: @ArthurZucker\n- vision models: @amyeroberts, @qubvel\n- speech models: @eustlb\n- graph models: @clefourrier\n\nLibrary:\n\n- flax: @gante and @Rocketknight1\n- generate: @zucchini-nlp (visual-language models) or @gante (all others)\n- pipelines: @Rocketknight1\n- tensorflow: @gante and @Rocketknight1\n- tokenizers: @ArthurZucker\n- trainer: @zach-huggingface and @SunMarc\n- chat templates: @Rocketknight1\n\nIntegrations:\n\n- deepspeed: HF Trainer/Accelerate: @SunMarc @zach-huggingface\n- ray/raytune: @richardliaw, @amogkam\n- Big Model Inference: @SunMarc\n- quantization (bitsandbytes, autogpt): @SunMarc @MekkCyber\n\nDocumentation: @stevhliu\n\nHF projects:\n\n- accelerate: [different repo](https://github.com/huggingface/accelerate)\n- datasets: [different repo](https://github.com/huggingface/datasets)\n- diffusers: [different repo](https://github.com/huggingface/diffusers)\n- rust tokenizers: [different repo](https://github.com/huggingface/tokenizers)\n\nMaintained examples (not research project or legacy):\n\n- Flax: @Rocketknight1\n- PyTorch: See Models above and tag the person corresponding to the modality of the example.\n- TensorFlow: @Rocketknight1\n\n -->\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": ".github/scripts/assign_reviewers.py", "size": 4178, "license": "Apache-2.0", "content_sha": "02966204ea32c1dee515b98529478080eb8771bb", "findings": [], "content": "# coding=utf-8\n# Copyright 2025 the HuggingFace Inc. team. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nimport os\nimport github\nimport json\nfrom github import Github\nimport re\nfrom collections import Counter\nfrom pathlib import Path\n\ndef pattern_to_regex(pattern):\n    if pattern.startswith(\"/\"):\n        start_anchor = True\n        pattern = re.escape(pattern[1:])\n    else:\n        start_anchor = False\n        pattern = re.escape(pattern)\n    # Replace `*` with \"any number of non-slash characters\"\n    pattern = pattern.replace(r\"\\*\", \"[^/]*\")\n    if start_anchor:\n        pattern = r\"^\\/?\" + pattern  # Allow an optional leading slash after the start of the string\n    return pattern\n\ndef get_file_owners(file_path, codeowners_lines):\n    # Process lines in reverse (last matching pattern takes precedence)\n    for line in reversed(codeowners_lines):\n        # Skip comments and empty lines, strip inline comments\n        line = line.split('#')[0].strip()\n        if not line:\n            continue\n\n        # Split into pattern and owners\n        parts = line.split()\n        pattern = parts[0]\n        # Can be empty, e.g. for dummy files with explicitly no owner!\n        owners = [owner.removeprefix(\"@\") for owner in parts[1:]]\n\n        # Check if file matches pattern\n        file_regex = pattern_to_regex(pattern)\n        if re.search(file_regex, file_path) is not None:\n            return owners  # Remember, can still be empty!\n    return []  # Should never happen, but just in case\n\ndef pr_author_is_in_hf(pr_author, codeowners_lines):\n    # Check if the PR author is in the codeowners file\n    for line in codeowners_lines:\n        line = line.split('#')[0].strip()\n        if not line:\n            continue\n\n        # Split into pattern and owners\n        parts = line.split()\n        owners = [owner.removeprefix(\"@\") for owner in parts[1:]]\n\n        if pr_author in owners:\n            return True\n    return False\n\ndef main():\n    script_dir = Path(__file__).parent.absolute()\n    with open(script_dir / \"codeowners_for_review_action\") as f:\n        codeowners_lines = f.readlines()\n\n    g = Github(os.environ['GITHUB_TOKEN'])\n    repo = g.get_repo(\"huggingface/transformers\")\n    with open(os.environ['GITHUB_EVENT_PATH']) as f:\n        event = json.load(f)\n\n    # The PR number is available in the event payload\n    pr_number = event['pull_request']['number']\n    pr = repo.get_pull(pr_number)\n    pr_author = pr.user.login\n    if pr_author_is_in_hf(pr_author, codeowners_lines):\n        print(f\"PR author {pr_author} is in codeowners, skipping review request.\")\n        return\n\n    existing_reviews = list(pr.get_reviews())\n    if existing_reviews:\n        print(f\"Already has reviews: {[r.user.login for r in existing_reviews]}\")\n        return\n\n    users_requested, teams_requested = pr.get_review_requests()\n    users_requested = list(users_requested)\n    if users_requested:\n        print(f\"Reviewers already requested: {users_requested}\")\n        return\n\n    locs_per_owner = Counter()\n    for file in pr.get_files():\n        owners = get_file_owners(file.filename, codeowners_lines)\n        for owner in owners:\n            locs_per_owner[owner] += file.changes\n\n    # Assign the top 2 based on locs changed as reviewers, but skip the owner if present\n    locs_per_owner.pop(pr_author, None)\n    top_owners = locs_per_owner.most_common(2)\n    print(\"Top owners\", top_owners)\n    top_owners = [owner[0] for owner in top_owners]\n    try:\n        pr.create_review_request(top_owners)\n    except github.GithubException as e:\n        print(f\"Failed to request review for {top_owners}: {e}\")\n\n\n\nif __name__ == \"__main__\":\n    main()\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": ".github/workflows/TROUBLESHOOT.md", "size": 382, "license": "Apache-2.0", "content_sha": "f6101e6d70b59af8ef1878c1461c914090f9fa22", "findings": [], "content": "# Troubleshooting\n\nThis is a document explaining how to deal with various issues on github-actions self-hosted CI. The entries may include actual solutions or pointers to Issues that cover those.\n\n## GitHub Actions (self-hosted CI)\n\n* Deepspeed\n\n  - if jit build hangs, clear out `rm -rf ~/.cache/torch_extensions/` reference: https://github.com/huggingface/transformers/pull/12723\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": "CODE_OF_CONDUCT.md", "size": 5489, "license": "Apache-2.0", "content_sha": "b23f3150a5a6987a74acc7bb31df8c9bf1a48d57", "findings": [{"type": "pii_email", "matches": ["feedback@huggingface.co"]}], "content": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nfeedback@huggingface.co.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": "CONTRIBUTING.md", "size": 18814, "license": "Apache-2.0", "content_sha": "c4804c69fb034fe0f83bf0e3bec11881c007db6c", "findings": [{"type": "pii_email", "matches": ["git@github.com"]}], "content": "<!---\nCopyright 2020 The HuggingFace Team. All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n# Contribute to \ud83e\udd17 Transformers\n\nEveryone is welcome to contribute, and we value everybody's contribution. Code\ncontributions are not the only way to help the community. Answering questions, helping\nothers, and improving the documentation are also immensely valuable.\n\nIt also helps us if you spread the word! Reference the library in blog posts\nabout the awesome projects it made possible, shout out on Twitter every time it has\nhelped you, or simply \u2b50\ufe0f the repository to say thank you.\n\nHowever you choose to contribute, please be mindful and respect our\n[code of conduct](https://github.com/huggingface/transformers/blob/main/CODE_OF_CONDUCT.md).\n\n**This guide was heavily inspired by the awesome [scikit-learn guide to contributing](https://github.com/scikit-learn/scikit-learn/blob/main/CONTRIBUTING.md).**\n\n## Ways to contribute\n\nThere are several ways you can contribute to \ud83e\udd17 Transformers:\n\n* Fix outstanding issues with the existing code.\n* Submit issues related to bugs or desired new features.\n* Implement new models.\n* Contribute to the examples or to the documentation.\n\nIf you don't know where to start, there is a special [Good First\nIssue](https://github.com/huggingface/transformers/contribute) listing. It will give you a list of\nopen issues that are beginner-friendly and help you start contributing to open-source. The best way to do that is to open a Pull Request and link it to the issue that you'd like to work on. We try to give priority to opened PRs as we can easily track the progress of the fix, and if the contributor does not have time anymore, someone else can take the PR over.\n\nFor something slightly more challenging, you can also take a look at the [Good Second Issue](https://github.com/huggingface/transformers/labels/Good%20Second%20Issue) list. In general though, if you feel like you know what you're doing, go for it and we'll help you get there! \ud83d\ude80\n\n> All contributions are equally valuable to the community. \ud83e\udd70\n\n## Fixing outstanding issues\n\nIf you notice an issue with the existing code and have a fix in mind, feel free to [start contributing](#create-a-pull-request) and open a Pull Request!\n\n## Submitting a bug-related issue or feature request\n\nDo your best to follow these guidelines when submitting a bug-related issue or a feature\nrequest. It will make it easier for us to come back to you quickly and with good\nfeedback.\n\n### Did you find a bug?\n\nThe \ud83e\udd17 Transformers library is robust and reliable thanks to users who report the problems they encounter.\n\nBefore you report an issue, we would really appreciate it if you could **make sure the bug was not\nalready reported** (use the search bar on GitHub under Issues). Your issue should also be related to bugs in the library itself, and not your code. If you're unsure whether the bug is in your code or the library, please ask in the [forum](https://discuss.huggingface.co/) or on our [discord](https://discord.com/invite/hugging-face-879548962464493619) first. This helps us respond quicker to fixing issues related to the library versus general questions.\n\n> [!TIP]\n> We have a [docs bot](https://huggingface.co/spaces/huggingchat/hf-docs-chat), and we highly encourage you to ask all your questions there. There is always a chance your bug can be fixed with a simple flag \ud83d\udc7e\ud83d\udd2b\n\nOnce you've confirmed the bug hasn't already been reported, please include the following information in your issue so we can quickly resolve it:\n\n* Your **OS type and version** and **Python**, **PyTorch** and\n  **TensorFlow** versions when applicable.\n* A short, self-contained, code snippet that allows us to reproduce the bug in\n  less than 30s.\n* The *full* traceback if an exception is raised.\n* Attach any other additional information, like screenshots, you think may help.\n\nTo get the OS and software versions automatically, run the following command:\n\n```bash\ntransformers-cli env\n```\n\nYou can also run the same command from the root of the repository:\n\n```bash\npython src/transformers/commands/transformers_cli.py env\n```\n\n### Do you want a new feature?\n\nIf there is a new feature you'd like to see in \ud83e\udd17 Transformers, please open an issue and describe:\n\n1. What is the *motivation* behind this feature? Is it related to a problem or frustration with the library? Is it a feature related to something you need for a project? Is it something you worked on and think it could benefit the community?\n\n   Whatever it is, we'd love to hear about it!\n\n2. Describe your requested feature in as much detail as possible. The more you can tell us about it, the better we'll be able to help you.\n3. Provide a *code snippet* that demonstrates the features usage.\n4. If the feature is related to a paper, please include a link.\n\nIf your issue is well written we're already 80% of the way there by the time you create it.\n\nWe have added [templates](https://github.com/huggingface/transformers/tree/main/templates) to help you get started with your issue.\n\n## Do you want to implement a new model?\n\nNew models are constantly released and if you want to implement a new model, please provide the following information:\n\n* A short description of the model and a link to the paper.\n* Link to the implementation if it is open-sourced.\n* Link to the model weights if they are available.\n\nIf you are willing to contribute the model yourself, let us know so we can help you add it to \ud83e\udd17 Transformers!\n\nWe have a technical guide for [how to add a model to \ud83e\udd17 Transformers](https://huggingface.co/docs/transformers/add_new_model).\n\n## Do you want to add documentation?\n\nWe're always looking for improvements to the documentation that make it more clear and accurate. Please let us know how the documentation can be improved such as typos and any content that is missing, unclear or inaccurate. We'll be happy to make the changes or help you make a contribution if you're interested!\n\nFor more details about how to generate, build, and write the documentation, take a look at the documentation [README](https://github.com/huggingface/transformers/tree/main/docs).\n\n## Create a Pull Request\n\nBefore writing any code, we strongly advise you to search through the existing PRs or\nissues to make sure nobody is already working on the same thing. If you are\nunsure, it is always a good idea to open an issue to get some feedback.\n\nYou will need basic `git` proficiency to contribute to\n\ud83e\udd17 Transformers. While `git` is not the easiest tool to use, it has the greatest\nmanual. Type `git --help` in a shell and enjoy! If you prefer books, [Pro\nGit](https://git-scm.com/book/en/v2) is a very good reference.\n\nYou'll need **[Python 3.9](https://github.com/huggingface/transformers/blob/main/setup.py#L449)** or above to contribute to \ud83e\udd17 Transformers. Follow the steps below to start contributing:\n\n1. Fork the [repository](https://github.com/huggingface/transformers) by\n   clicking on the **[Fork](https://github.com/huggingface/transformers/fork)** button on the repository's page. This creates a copy of the code\n   under your GitHub user account.\n\n2. Clone your fork to your local disk, and add the base repository as a remote:\n\n   ```bash\n   git clone git@github.com:<your Github handle>/transformers.git\n   cd transformers\n   git remote add upstream https://github.com/huggingface/transformers.git\n   ```\n\n3. Create a new branch to hold your development changes:\n\n   ```bash\n   git checkout -b a-descriptive-name-for-my-changes\n   ```\n\n   \ud83d\udea8 **Do not** work on the `main` branch!\n\n4. Set up a development environment by running the following command in a virtual environment:\n\n   ```bash\n   pip install -e \".[dev]\"\n   ```\n\n   If \ud83e\udd17 Transformers was already installed in the virtual environment, remove\n   it with `pip uninstall transformers` before reinstalling it in editable\n   mode with the `-e` flag.\n\n   Depending on your OS, and since the number of optional dependencies of Transformers is growing, you might get a\n   failure with this command. If that's the case make sure to install the Deep Learning framework you are working with\n   (PyTorch, TensorFlow and/or Flax) then do:\n\n   ```bash\n   pip install -e \".[quality]\"\n   ```\n\n   which should be enough for most use cases.\n\n5. Develop the features in your branch.\n\n   As you work on your code, you should make sure the test suite\n   passes. Run the tests impacted by your changes like this:\n\n   ```bash\n   pytest tests/<TEST_TO_RUN>.py\n   ```\n\n   For more information about tests, check out the\n   [Testing](https://huggingface.co/docs/transformers/testing) guide.\n\n   \ud83e\udd17 Transformers relies on `black` and `ruff` to format its source code\n   consistently. After you make changes, apply automatic style corrections and code verifications\n   that can't be automated in one go with:\n\n   ```bash\n   make fixup\n   ```\n\n   This target is also optimized to only work with files modified by the PR you're working on.\n\n   If you prefer to run the checks one after the other, the following command applies the\n   style corrections:\n\n   ```bash\n   make style\n   ```\n\n   \ud83e\udd17 Transformers also uses `ruff` and a few custom scripts to check for coding mistakes. Quality\n   controls are run by the CI, but you can run the same checks with:\n\n   ```bash\n   make quality\n   ```\n\n   Finally, we have a lot of scripts to make sure we don't forget to update\n   some files when adding a new model. You can run these scripts with:\n\n   ```bash\n   make repo-consistency\n   ```\n\n   To learn more about those checks and how to fix any issues with them, check out the\n   [Checks on a Pull Request](https://huggingface.co/docs/transformers/pr_checks) guide.\n\n   If you're modifying documents under the `docs/source` directory, make sure the documentation can still be built. This check will also run in the CI when you open a pull request. To run a local check\n   make sure you install the [documentation builder](https://github.com/huggingface/doc-builder).\n\n   ```bash\n   pip install hf-doc-builder\n   ```\n\n   Run the following command from the root of the repository:\n\n   ```bash\n   doc-builder build transformers docs/source/en --build_dir ~/tmp/test-build\n   ```\n\n   This will build the documentation in the `~/tmp/test-build` folder where you can inspect the generated\n   Markdown files with your favorite editor. You can also preview the docs on GitHub when you open a pull request.\n\n   Once you're happy with your changes, add the changed files with `git add` and\n   record your changes locally with `git commit`:\n\n   ```bash\n   git add modified_file.py\n   git commit\n   ```\n\n   Please remember to write [good commit\n   messages](https://chris.beams.io/posts/git-commit/) to clearly communicate the changes you made!\n\n   To keep your copy of the code up to date with the original\n   repository, rebase your branch on `upstream/branch` *before* you open a pull request or if requested by a maintainer:\n\n   ```bash\n   git fetch upstream\n   git rebase upstream/main\n   ```\n\n   Push your changes to your branch:\n\n   ```bash\n   git push -u origin a-descriptive-name-for-my-changes\n   ```\n\n   If you've already opened a pull request, you'll need to force push with the `--force` flag. Otherwise, if the pull request hasn't been opened yet, you can just push your changes normally.\n\n6. Now you can go to your fork of the repository on GitHub and click on **Pull Request** to open a pull request. Make sure you tick off all the boxes on our [checklist](#pull-request-checklist) below. When you're ready, you can send your changes to the project maintainers for review.\n\n7. It's ok if maintainers request changes, it happens to our core contributors\n   too! So everyone can see the changes in the pull request, work in your local\n   branch and push the changes to your fork. They will automatically appear in\n   the pull request.\n\n### Pull request checklist\n\n\u2610 The pull request title should summarize your contribution.<br>\n\u2610 If your pull request addresses an issue, please mention the issue number in the pull\nrequest description to make sure they are linked (and people viewing the issue know you\nare working on it).<br>\n\u2610 To indicate a work in progress please prefix the title with `[WIP]`. These are\nuseful to avoid duplicated work, and to differentiate it from PRs ready to be merged.<br>\n\u2610 Make sure existing tests pass.<br>\n\u2610 If adding a new feature, also add tests for it.<br>\n   - If you are adding a new model, make sure you use\n     `ModelTester.all_model_classes = (MyModel, MyModelWithLMHead,...)` to trigger the common tests.\n   - If you are adding new `@slow` tests, make sure they pass using\n     `RUN_SLOW=1 python -m pytest tests/models/my_new_model/test_my_new_model.py`.\n   - If you are adding a new tokenizer, write tests and make sure\n     `RUN_SLOW=1 python -m pytest tests/models/{your_model_name}/test_tokenization_{your_model_name}.py` passes.\n   - CircleCI does not run the slow tests, but GitHub Actions does every night!<br>\n\n\u2610 All public methods must have informative docstrings (see\n[`modeling_bert.py`](https://github.com/huggingface/transformers/blob/main/src/transformers/models/bert/modeling_bert.py)\nfor an example).<br>\n\u2610 Due to the rapidly growing repository, don't add any images, videos and other\nnon-text files that'll significantly weigh down the repository. Instead, use a Hub\nrepository such as [`hf-internal-testing`](https://huggingface.co/hf-internal-testing)\nto host these files and reference them by URL. We recommend placing documentation\nrelated images in the following repository:\n[huggingface/documentation-images](https://huggingface.co/datasets/huggingface/documentation-images).\nYou can open a PR on this dataset repository and ask a Hugging Face member to merge it.\n\nFor more information about the checks run on a pull request, take a look at our [Checks on a Pull Request](https://huggingface.co/docs/transformers/pr_checks) guide.\n\n### Tests\n\nAn extensive test suite is included to test the library behavior and several examples. Library tests can be found in\nthe [tests](https://github.com/huggingface/transformers/tree/main/tests) folder and examples tests in the\n[examples](https://github.com/huggingface/transformers/tree/main/examples) folder.\n\nWe like `pytest` and `pytest-xdist` because it's faster. From the root of the\nrepository, specify a *path to a subfolder or a test file* to run the test:\n\n```bash\npython -m pytest -n auto --dist=loadfile -s -v ./tests/models/my_new_model\n```\n\nSimilarly, for the `examples` directory, specify a *path to a subfolder or test file* to run the test. For example, the following command tests the text classification subfolder in the PyTorch `examples` directory:\n\n```bash\npip install -r examples/xxx/requirements.txt  # only needed the first time\npython -m pytest -n auto --dist=loadfile -s -v ./examples/pytorch/text-classification\n```\n\nIn fact, this is actually how our `make test` and `make test-examples` commands are implemented (not including the `pip install`)!\n\nYou can also specify a smaller set of tests in order to test only the feature\nyou're working on.\n\nBy default, slow tests are skipped but you can set the `RUN_SLOW` environment variable to\n`yes` to run them. This will download many gigabytes of models so make sure you\nhave enough disk space, a good internet connection or a lot of patience!\n\n<Tip warning={true}>\n\nRemember to specify a *path to a subfolder or a test file* to run the test. Otherwise, you'll run all the tests in the `tests` or `examples` folder, which will take a very long time!\n\n</Tip>\n\n```bash\nRUN_SLOW=yes python -m pytest -n auto --dist=loadfile -s -v ./tests/models/my_new_model\nRUN_SLOW=yes python -m pytest -n auto --dist=loadfile -s -v ./examples/pytorch/text-classification\n```\n\nLike the slow tests, there are other environment variables available which are not enabled by default during testing:\n- `RUN_CUSTOM_TOKENIZERS`: Enables tests for custom tokenizers.\n\nMore environment variables and additional information can be found in the [testing_utils.py](https://github.com/huggingface/transformers/blob/main/src/transformers/testing_utils.py).\n\n\ud83e\udd17 Transformers uses `pytest` as a test runner only. It doesn't use any\n`pytest`-specific features in the test suite itself.\n\nThis means `unittest` is fully supported. Here's how to run tests with\n`unittest`:\n\n```bash\npython -m unittest discover -s tests -t . -v\npython -m unittest discover -s examples -t examples -v\n```\n\n### Style guide\n\nFor documentation strings, \ud83e\udd17 Transformers follows the [Google Python Style Guide](https://google.github.io/styleguide/pyguide.html).\nCheck our [documentation writing guide](https://github.com/huggingface/transformers/tree/main/docs#writing-documentation---specification)\nfor more information.\n\n### Develop on Windows\n\nOn Windows (unless you're working in [Windows Subsystem for Linux](https://learn.microsoft.com/en-us/windows/wsl/) or WSL), you need to configure git to transform Windows `CRLF` line endings to Linux `LF` line endings:\n\n```bash\ngit config core.autocrlf input\n```\n\nOne way to run the `make` command on Windows is with MSYS2:\n\n1. [Download MSYS2](https://www.msys2.org/), and we assume it's installed in `C:\\msys64`.\n2. Open the command line `C:\\msys64\\msys2.exe` (it should be available from the **Start** menu).\n3. Run in the shell: `pacman -Syu` and install `make` with `pacman -S make`.\n4. Add `C:\\msys64\\usr\\bin` to your PATH environment variable.\n\nYou can now use `make` from any terminal (PowerShell, cmd.exe, etc.)! \ud83c\udf89\n\n### Sync a forked repository with upstream main (the Hugging Face repository)\n\nWhen updating the main branch of a forked repository, please follow these steps to avoid pinging the upstream repository which adds reference notes to each upstream PR, and sends unnecessary notifications to the developers involved in these PRs.\n\n1. When possible, avoid syncing with the upstream using a branch and PR on the forked repository. Instead, merge directly into the forked main.\n2. If a PR is absolutely necessary, use the following steps after checking out your branch:\n\n   ```bash\n   git checkout -b your-branch-for-syncing\n   git pull --squash --no-commit upstream main\n   git commit -m '<your message without GitHub references>'\n   git push --set-upstream origin your-branch-for-syncing\n   ```\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": "ISSUES.md", "size": 18815, "license": "Apache-2.0", "content_sha": "9c96162647bc6e4f1e4b342a3d7a3ce4461a6066", "findings": [], "content": "<!---\nCopyright 2020 The HuggingFace Team. All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n# How To Request Support\n\nThis is an Open Source Project so please be mindful that like in any other project of this kind there is no obligation to answer all requests for help.\n\nHowever, we want to encourage you to ask for help whenever you think it's needed! We are happy about every question we get because it allows us to better understand your needs, possible misunderstandings, and most importantly a way for you to help us make this library better. That being said, this document's main purpose is to provide guidelines at how you can formulate your requests to increase your chances to be understood and to get support.\n\nThere are two main venues to receive support: [the forums](https://discuss.huggingface.co/) and [the GitHub issues](https://github.com/huggingface/transformers/issues).\n\n## The Forums\n\n[The user forums](https://discuss.huggingface.co/) are supported by the wide community of the library users and backed up by developers when needed.\n\nIf you have a difficulty with deploying this library or some questions, or you'd like to discuss a new feature, please first consider discussing those things at the forums. Only when you feel your subject matter has been crystallized and you still need support from the library developers do proceed to file an [issue](https://github.com/huggingface/transformers/issues).\n\nIn particular all \"Please explain\" questions or objectively very user-specific feature requests belong to the forums. Here are some example of such questions:\n\n* \"I would like to use a BertModel within a RL-Agent for a customer support service. How can I use a BertForMaskedLM in my ChatBotModel?\"\n\n* \"Could you please explain why T5 has no positional embedding matrix under T5Model?\"\n\n* \"How should I set my generation parameters for translation?\"\n\n* \"How to train T5 on De->En translation?\"\n\n\n## The GitHub Issues\n\nEverything which hints at a bug should be opened as an [issue](https://github.com/huggingface/transformers/issues).\n\nYou are not required to read the following guidelines before opening an issue. However, if you notice that your issue doesn't get any replies, chances are that the developers have one or several difficulties with its quality. In this case, reading the following points and adjusting your issue accordingly could help.\n\n1. Before posting an issue, first search for already posted issues, since chances are someone has already asked a similar question before you.\n\n    If you use Google your search query should be:\n\n    ```\n    \"huggingface\" \"transformers\" your query\n    ```\n\n    The first two quoted words tell Google to limit the search to the context of the Huggingface Transformers. The remainder is your query - most commonly this would be the error message the software fails with. We will go deeper into details shortly.\n\n    The results of such a query will typically match GitHub issues, Hugging Face forums, StackExchange, and blogs.\n\n    If you find relevant hints, you may choose to continue the discussion there if you have follow up questions.\n\n    If what you found is similar but doesn't quite answer your problem, please, post a new issue and do include links to similar issues or forum discussions you may have found.\n\n    Let's look at some examples:\n\n    The error message, often referred to as an assertion, tells us what went wrong. Here is an example of an assertion:\n\n   ```python\n   Traceback (most recent call last):\n     File \"<string>\", line 1, in <module>\n     File \"/transformers/src/transformers/__init__.py\", line 34, in <module>\n       from . import dependency_versions_check\n     File \"/transformers/src/transformers/dependency_versions_check.py\", line 34, in <module>\n       from .utils import is_tokenizers_available\n     File \"/transformers/src/transformers/utils/import_utils.py\", line 40, in <module>\n       from tqdm.auto import tqdm\n    ModuleNotFoundError: No module named 'tqdm.auto'\n    ```\n\n   and it typically includes a traceback, so that we can see the full stack of calls the program made before it fails. This gives us the context to know why the program failed.\n\n   Going back to the above example. If you received this error search, look at the very last line of the error which is:\n\n   ```python\n    ModuleNotFoundError: No module named 'tqdm.auto'\n    ```\n\n    And now we can use it to do the searching on your favorite search engine:\n\n    1. first for `\"huggingface\" \"transformers\" \"ModuleNotFoundError: No module named 'tqdm.auto'\"`\n    2. if you don't find relevant results, then search for just `\"ModuleNotFoundError: No module named 'tqdm.auto'\"`\n    3. and finally if nothing still comes up, then remove the outside quotes: `ModuleNotFoundError: No module named 'tqdm.auto'`\n\n   If the error includes any messages that include bits unique to your filesystem, always remove those in the search query since other users will not have the same filesystem as yours. For example:\n\n   ```bash\n   python -c 'open(\"/tmp/wrong_path.txt\", \"r\")'\n   Traceback (most recent call last):\n     File \"<string>\", line 1, in <module>\n   FileNotFoundError: [Errno 2] No such file or directory: '/tmp/wrong_path.txt'\n   ```\n   Here you'd search for just: `\"FileNotFoundError: [Errno 2] No such file or directory\"`\n\n   If the local information that you removed were inside the error message and you removed them you may need to remove double quotes since your query is no longer exact. So if the error message was something like:\n\n   ```bash\n      ValueError: '/tmp/wrong_path.txt' cannot be found\n   ```\n\n   then you'd search for `\"ValueError\" \"cannot be found\"`\n\n   As you search you will notice that when you don't use quotes often the search engines will return a variety of unrelated hits, which may or may not be what you want.\n\n   Experiment with different ways and find which approach gives the most satisfactory results.\n\n2. Keep the issue short, providing the information that you think will aid the developers to understand your situation. Put yourself in the shoes of the person who has never seen your code or knows anything about your custom setup. This mental exercise will help to develop an intuition to what/what not to share\"\n\n3. If there is a software failure, always provide the full traceback, for example:\n\n   ```python\n   $ python -c 'import transformers'\n   Traceback (most recent call last):\n     File \"<string>\", line 1, in <module>\n     File \"/transformers/src/transformers/__init__.py\", line 34, in <module>\n       from . import dependency_versions_check\n     File \"/transformers/src/transformers/dependency_versions_check.py\", line 34, in <module>\n       from .utils import is_tokenizers_available\n     File \"/transformers/src/transformers/utils/import_utils.py\", line 40, in <module>\n       from tqdm.auto import tqdm\n   ModuleNotFoundError: No module named 'tqdm.auto'\n   ```\n\n   As compared to providing just the last line of the error message, e.g.:\n   ```python\n   ModuleNotFoundError: No module named 'tqdm.auto'\n   ```\n   which is not sufficient.\n\n   If your application is running on more than one GPU (e.g. under `DistributedDataParallel`) and typically getting every log and traceback printed multiple times, please make sure that you paste only one copy of it. At times the traceback from parallel processes may get interleaved - so either disentangle these or change the loggers to log only for `local_rank==0` so that only one process logs things.\n\n4. When quoting a traceback, command line instructions and any type of code always enclose it in triple backticks inside the editor window, that is:\n\n   ````\n   ```\n   git clone https://github.com/huggingface/transformers\n   cd transformers\n   pip install .\n   ```\n   ````\n\n   If it's a command line with a long argument list, please consider breaking it down using backslashes and new lines. Here is an example of a good command line quote:\n\n   ```bash\n    cd examples/seq2seq\n    torchrun --nproc_per_node=2 ./finetune_trainer.py \\\n    --model_name_or_path sshleifer/distill-mbart-en-ro-12-4 --data_dir wmt_en_ro \\\n    --output_dir output_dir --overwrite_output_dir \\\n    --do_train --n_train 500 --num_train_epochs 1 \\\n    --per_device_train_batch_size 1  --freeze_embeds \\\n    --src_lang en_XX --tgt_lang ro_RO --task translation \\\n    --fp16\n   ```\n\n   If you don't break it up, one has to scroll horizontally which often makes it quite difficult to quickly see what's happening.\n\n   The backslashes allow us to copy the command directly into the console to run it, without needing to edit it.\n\n5. Include only the important information that you think will help the developer to quickly identify the problem.\n\n   For example applications often create huge amounts of logs. Ask yourself whether providing all or parts of the log is useful.\n\n   Pasting a 100-1000 lines of log into the issue is an immediate turn off, since it will take a lot of time to figure out where the pertinent parts of the log are.\n\n   Attaching a full log can be helpful if it's done as an attachment, if it's enclosed in the following html code in the comment editor window:\n\n   ```\n   <details>\n   <summary>Full log</summary>\n   <pre>\n\n   many\n   lines\n   go\n   here\n\n   </pre>\n   </details>\n   ```\n\n   which would result in the following entry, which can be opened if desired, but otherwise takes little space.\n\n   <details>\n   <summary>Full log</summary>\n   <pre>\n   many\n   lines\n   go\n   here\n   </pre>\n   </details>\n\n    You could also provide a link to a pastebin service, but this is less beneficial since those links tend to expire quickly and future readers of your issue might not be able to access that log file anymore and may lack some context.\n\n6. If this is an issue in your code, do try to reduce that code to a minimal example that still demonstrates the problem. Please ask at the forums if you have a hard time figuring how to do that. Please realize that we don't have the luxury of having time to try and understand all of your custom code.\n\n   If you really tried to make a short reproducible code but couldn't figure it out, it might be that having a traceback will give the developer enough information to know what's going on. But if it is not enough and we can't reproduce the problem, we can't really solve it.\n\n   Do not despair if you can't figure it out from the beginning, just share what you can and perhaps someone else will be able to help you at the forums.\n\n   If your setup involves any custom datasets, the best way to help us reproduce the problem is to create a [Google Colab notebook](https://colab.research.google.com/) that demonstrates the issue and once you verify that the issue still exists, include a link to that notebook in the Issue. Just make sure that you don't copy and paste the location bar url of the open notebook - as this is private and we won't be able to open it. Instead, you need to click on `Share` in the right upper corner of the notebook, select `Get Link` and then copy and paste the public link it will give to you.\n\n7. If you forked off some of this project's code or example applications, please, do not ask us to go into your code repository and figure out what you may have done. The code is already very complex and unless there is an easy way to do a diff and it's a small diff, it won't be possible to find someone with time on their hands to make a lengthy investigation. Albeit, you might find someone at the forums who will be generous to do this for you.\n\n8. Before reporting an issue, first, always try to update your environment to the latest official version of this library. We have no resources to go and debug older revisions, which could easily have bugs that have been fixed in the latest released version.\n\n   We understand that this is not always possible, especially when APIs change, in which case file an issue against the highest library version your environment can support.\n\n   Of course, if you upgrade the library, always retest that the problem is still there.\n\n9. Please do not ask us to reproduce an issue with your custom data, since we don't have it. So, either you should use some existing dataset supported by HF datasets or you need to supply a code that generates a small sample on the fly, or some another quick and simple way to get it.\n\n   Please do not send us any non-public domain data that may require a license or a permission to be used.\n\n10. Do not tag multiple developers on the issue unless you know this is expected, either because you asked them and they gave you an explicit permission to tag them or the issue template instructs you to do so.\n\n   The \"who to tag for what domain\" part of the issue template is there to help users direct their questions to the right developers who are designated maintainers of project's specific domains. They can then decide at their own discretion to tag other developers if they feel it'd help move the issue forward.\n\n   We currently don't have a triage service and we trust your capacity to identify the right domain and thus the persons to tag in your issue. If you are not sure, please use the forums to ask for guidance.\n\n   When in doubt, err on the side of not tagging a given person. If you tag multiple people out of context or permission don't be surprised if you get no response at all. Please remember that every time you tag someone, they get a notification and you're taking their time without their permission. Please be sensitive to that.\n\n   If you got helped by one of the developers in the past please don't tag them in future issues, unless they are listed in the issue template for the domain you are asking about or that developer gave you an explicit permission to tag them in future issues.\n\n   If you see a certain developer doing multiple and/or recent commits into a specific area of the project that you feel is relevant to your issue, it is not a good reason to tag them. Various developers may be fixing things that prevent them from moving forward, but often their work is focused on a totally different domain. And while they may or may not know how to help you with the problem at hand, it would benefit the whole community much more if they focus on the domain of their unique expertise.\n\n11. Use the Edit button. Take your time, and re-read and improve the wording and formatting to make your posts and comments as easy to understand as possible.\n\n    Avoid posting multiple comments in a row, as each comment generates a notification for the developers tagged in that issue. If you happened to post multiple comments in a row, and nobody followed up yet - consider merging those into one or a few comments while editing the combined content to be coherent.\n\n    If you choose to edit your older comments after others posted follow up comments you need to be aware that your modifications might not be noticed, so if it's not a typo fixing, try to write a new comment flagging that something has been changed in the previous comments.\n\n    For example, the very first comment is the most important one. If while the thread unfolds you realize that things aren't as they seemed to you originally you may want to edit the first post to reflect the up-to-date understanding of the issue at hand so that it helps those who read your issue in the future quickly understand what's going on and not need to sift through dozens of comments. It also helps to indicate that the post was edited. So, those reading the thread later can understand why there might be certain discontinuity in the information flow.\n\n    Use bullets and items if you have lists of items and the outcome improves overall readability.\n\n    Use backticks to refer to class and function names, e.g. `BartModel` and `generate` as these stand out and improve the speed of a reader's comprehension.\n\n    Try not use italics and bold text too much as these often make the text more difficult to read.\n\n\n12. If you are cross-referencing a specific comment in a given thread or another issue, always link to that specific comment, rather than using the issue link. If you do the latter it could be quite impossible to find which specific comment you're referring to.\n\n    To get the link to the specific comment do not copy the url from the location bar of your browser, but instead, click the `...` icon in the upper right corner of the comment and then select \"Copy Link\".\n\n    For example the first link is a link to an issue, and the second to a specific comment in the same issue:\n\n    1. https://github.com/huggingface/transformers/issues/9257\n    2. https://github.com/huggingface/transformers/issues/9257#issuecomment-749945162\n\n\n13. If you are replying to a last comment, it's totally fine to make your reply with just your comment in it. The readers can follow the information flow here.\n\n    But if you're replying to a comment that happened some comments back it's always a good practice to quote just the relevant lines you're replying it. The `>` is used for quoting, or you can always use the menu to do so. For example your editor box will look like:\n\n    ```\n    > How big is your GPU cluster?\n\n    Our cluster is made of 256 GPUs.\n    ```\n\n    If you are addressing multiple comments, quote the relevant parts of each before your answer. Some people use the same comment to do multiple replies, others separate them into separate comments. Either way works. The latter approach helps for linking to a specific comment.\n\nIn general the best way to figure out what works the best is learn from issues posted by other people - see which issues get great responses and which get little to no response - observe what the posters who received great responses did differently from those who did not.\n\nThank you for reading this somewhat lengthy document. We would like to conclude that these are not absolute rules, but a friendly advice that will help maximize the chances for us to understand what you are trying to communicate, reproduce the problem then resolve it to your satisfaction and the benefit of the whole community.\n\nIf after reading this document there are remaining questions on how and why or there is a need for further elucidation, please, don't hesitate to ask your question in [this thread](https://discuss.huggingface.co/t/how-to-request-support/3128).\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": "README.md", "size": 16800, "license": "Apache-2.0", "content_sha": "e3a42595ddeb2c6534a20369c6d319b0b953331f", "findings": [], "content": "<!---\nCopyright 2020 The HuggingFace Team. All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n<p align=\"center\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://huggingface.co/datasets/huggingface/documentation-images/raw/main/transformers-logo-dark.svg\">\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"https://huggingface.co/datasets/huggingface/documentation-images/raw/main/transformers-logo-light.svg\">\n    <img alt=\"Hugging Face Transformers Library\" src=\"https://huggingface.co/datasets/huggingface/documentation-images/raw/main/transformers-logo-light.svg\" width=\"352\" height=\"59\" style=\"max-width: 100%;\">\n  </picture>\n  <br/>\n  <br/>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://huggingface.com/models\"><img alt=\"Checkpoints on Hub\" src=\"https://img.shields.io/endpoint?url=https://huggingface.co/api/shields/models&color=brightgreen\"></a>\n    <a href=\"https://circleci.com/gh/huggingface/transformers\"><img alt=\"Build\" src=\"https://img.shields.io/circleci/build/github/huggingface/transformers/main\"></a>\n    <a href=\"https://github.com/huggingface/transformers/blob/main/LICENSE\"><img alt=\"GitHub\" src=\"https://img.shields.io/github/license/huggingface/transformers.svg?color=blue\"></a>\n    <a href=\"https://huggingface.co/docs/transformers/index\"><img alt=\"Documentation\" src=\"https://img.shields.io/website/http/huggingface.co/docs/transformers/index.svg?down_color=red&down_message=offline&up_message=online\"></a>\n    <a href=\"https://github.com/huggingface/transformers/releases\"><img alt=\"GitHub release\" src=\"https://img.shields.io/github/release/huggingface/transformers.svg\"></a>\n    <a href=\"https://github.com/huggingface/transformers/blob/main/CODE_OF_CONDUCT.md\"><img alt=\"Contributor Covenant\" src=\"https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg\"></a>\n    <a href=\"https://zenodo.org/badge/latestdoi/155220641\"><img src=\"https://zenodo.org/badge/155220641.svg\" alt=\"DOI\"></a>\n</p>\n\n<h4 align=\"center\">\n    <p>\n        <b>English</b> |\n        <a href=\"https://github.com/huggingface/transformers/blob/main/i18n/README_zh-hans.md\">\u7b80\u4f53\u4e2d\u6587</a> |\n        <a href=\"https://github.com/huggingface/transformers/blob/main/i18n/README_zh-hant.md\">\u7e41\u9ad4\u4e2d\u6587</a> |\n        <a href=\"https://github.com/huggingface/transformers/blob/main/i18n/README_ko.md\">\ud55c\uad6d\uc5b4</a> |\n        <a href=\"https://github.com/huggingface/transformers/blob/main/i18n/README_es.md\">Espa\u00f1ol</a> |\n        <a href=\"https://github.com/huggingface/transformers/blob/main/i18n/README_ja.md\">\u65e5\u672c\u8a9e</a> |\n        <a href=\"https://github.com/huggingface/transformers/blob/main/i18n/README_hd.md\">\u0939\u093f\u0928\u094d\u0926\u0940</a> |\n        <a href=\"https://github.com/huggingface/transformers/blob/main/i18n/README_ru.md\">\u0420\u0443\u0441\u0441\u043a\u0438\u0439</a> |\n        <a href=\"https://github.com/huggingface/transformers/blob/main/i18n/README_pt-br.md\">\u0420ortugu\u00eas</a> |\n        <a href=\"https://github.com/huggingface/transformers/blob/main/i18n/README_te.md\">\u0c24\u0c46\u0c32\u0c41\u0c17\u0c41</a> |\n        <a href=\"https://github.com/huggingface/transformers/blob/main/i18n/README_fr.md\">Fran\u00e7ais</a> |\n        <a href=\"https://github.com/huggingface/transformers/blob/main/i18n/README_de.md\">Deutsch</a> |\n        <a href=\"https://github.com/huggingface/transformers/blob/main/i18n/README_vi.md\">Ti\u1ebfng Vi\u1ec7t</a> |\n        <a href=\"https://github.com/huggingface/transformers/blob/main/i18n/README_ar.md\">\u0627\u0644\u0639\u0631\u0628\u064a\u0629</a> |\n        <a href=\"https://github.com/huggingface/transformers/blob/main/i18n/README_ur.md\">\u0627\u0631\u062f\u0648</a> |\n    </p>\n</h4>\n\n<h3 align=\"center\">\n    <p>State-of-the-art pretrained models for inference and training</p>\n</h3>\n\n<h3 align=\"center\">\n    <a href=\"https://hf.co/course\"><img src=\"https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/course_banner.png\"></a>\n</h3>\n\nTransformers is a library of pretrained text, computer vision, audio, video, and multimodal models for inference and training. Use Transformers to fine-tune models on your data, build inference applications, and for generative AI use cases across multiple modalities.\n\nThere are over 500K+ Transformers [model checkpoints](https://huggingface.co/models?library=transformers&sort=trending) on the [Hugging Face Hub](https://huggingface.com/models) you can use.\n\nExplore the [Hub](https://huggingface.com/) today to find a model and use Transformers to help you get started right away.\n\n## Installation\n\nTransformers works with Python 3.9+ [PyTorch](https://pytorch.org/get-started/locally/) 2.1+, [TensorFlow](https://www.tensorflow.org/install/pip) 2.6+, and [Flax](https://flax.readthedocs.io/en/latest/) 0.4.1+.\n\nCreate and activate a virtual environment with [venv](https://docs.python.org/3/library/venv.html) or [uv](https://docs.astral.sh/uv/), a fast Rust-based Python package and project manager.\n\n```py\n# venv\npython -m venv .my-env\nsource .my-env/bin/activate\n\n# uv\nuv venv .my-env\nsource .my-env/bin/activate\n```\n\nInstall Transformers in your virtual environment.\n\n```py\n# pip\npip install transformers\n\n# uv\nuv pip install transformers\n```\n\nInstall Transformers from source if you want the latest changes in the library or are interested in contributing. However, the *latest* version may not be stable. Feel free to open an [issue](https://github.com/huggingface/transformers/issues) if you encounter an error.\n\n```shell\ngit clone https://github.com/huggingface/transformers.git\ncd transformers\npip install .\n```\n\n## Quickstart\n\nGet started with Transformers right away with the [Pipeline](https://huggingface.co/docs/transformers/pipeline_tutorial) API. The `Pipeline` is a high-level inference class that supports text, audio, vision, and multimodal tasks. It handles preprocessing the input and returns the appropriate output.\n\nInstantiate a pipeline and specify model to use for text generation. The model is downloaded and cached so you can easily reuse it again. Finally, pass some text to prompt the model.\n\n```py\nfrom transformers import pipeline\n\npipeline = pipeline(task=\"text-generation\", model=\"Qwen/Qwen2.5-1.5B\")\npipeline(\"the secret to baking a really good cake is \")\n[{'generated_text': 'the secret to baking a really good cake is 1) to use the right ingredients and 2) to follow the recipe exactly. the recipe for the cake is as follows: 1 cup of sugar, 1 cup of flour, 1 cup of milk, 1 cup of butter, 1 cup of eggs, 1 cup of chocolate chips. if you want to make 2 cakes, how much sugar do you need? To make 2 cakes, you will need 2 cups of sugar.'}]\n```\n\nTo chat with a model, the usage pattern is the same. The only difference is you need to construct a chat history (the input to `Pipeline`) between you and the system.\n\n> [!TIP]\n> You can also chat with a model directly from the command line.\n> ```shell\n> transformers-cli chat --model_name_or_path Qwen/Qwen2.5-0.5B-Instruct\n> ```\n\n```py\nimport torch\nfrom transformers import pipeline\n\nchat = [\n    {\"role\": \"system\", \"content\": \"You are a sassy, wise-cracking robot as imagined by Hollywood circa 1986.\"},\n    {\"role\": \"user\", \"content\": \"Hey, can you tell me any fun things to do in New York?\"}\n]\n\npipeline = pipeline(task=\"text-generation\", model=\"meta-llama/Meta-Llama-3-8B-Instruct\", torch_dtype=torch.bfloat16, device_map=\"auto\")\nresponse = pipeline(chat, max_new_tokens=512)\nprint(response[0][\"generated_text\"][-1][\"content\"])\n```\n\nExpand the examples below to see how `Pipeline` works for different modalities and tasks.\n\n<details>\n<summary>Automatic speech recognition</summary>\n\n```py\nfrom transformers import pipeline\n\npipeline = pipeline(task=\"automatic-speech-recognition\", model=\"openai/whisper-large-v3\")\npipeline(\"https://huggingface.co/datasets/Narsil/asr_dummy/resolve/main/mlk.flac\")\n{'text': ' I have a dream that one day this nation will rise up and live out the true meaning of its creed.'}\n```\n\n</details>\n\n<details>\n<summary>Image classification</summary>\n\n<h3 align=\"center\">\n    <a><img src=\"https://huggingface.co/datasets/Narsil/image_dummy/raw/main/parrots.png\"></a>\n</h3>\n\n```py\nfrom transformers import pipeline\n\npipeline = pipeline(task=\"image-classification\", model=\"facebook/dinov2-small-imagenet1k-1-layer\")\npipeline(\"https://huggingface.co/datasets/Narsil/image_dummy/raw/main/parrots.png\")\n[{'label': 'macaw', 'score': 0.997848391532898},\n {'label': 'sulphur-crested cockatoo, Kakatoe galerita, Cacatua galerita',\n  'score': 0.0016551691805943847},\n {'label': 'lorikeet', 'score': 0.00018523589824326336},\n {'label': 'African grey, African gray, Psittacus erithacus',\n  'score': 7.85409429227002e-05},\n {'label': 'quail', 'score': 5.502637941390276e-05}]\n```\n\n</details>\n\n<details>\n<summary>Visual question answering</summary>\n\n\n<h3 align=\"center\">\n    <a><img src=\"https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/transformers/tasks/idefics-few-shot.jpg\"></a>\n</h3>\n\n```py\nfrom transformers import pipeline\n\npipeline = pipeline(task=\"visual-question-answering\", model=\"Salesforce/blip-vqa-base\")\npipeline(\n    image=\"https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/transformers/tasks/idefics-few-shot.jpg\",\n    question=\"What is in the image?\",\n)\n[{'answer': 'statue of liberty'}]\n```\n\n</details>\n\n## Why should I use Transformers?\n\n1. Easy-to-use state-of-the-art models:\n    - High performance on natural language understanding & generation, computer vision, audio, video, and multimodal tasks.\n    - Low barrier to entry for researchers, engineers, and developers.\n    - Few user-facing abstractions with just three classes to learn.\n    - A unified API for using all our pretrained models.\n\n1. Lower compute costs, smaller carbon footprint:\n    - Share trained models instead of training from scratch.\n    - Reduce compute time and production costs.\n    - Dozens of model architectures with 1M+ pretrained checkpoints across all modalities.\n\n1. Choose the right framework for every part of a models lifetime:\n    - Train state-of-the-art models in 3 lines of code.\n    - Move a single model between PyTorch/JAX/TF2.0 frameworks at will.\n    - Pick the right framework for training, evaluation, and production.\n\n1. Easily customize a model or an example to your needs:\n    - We provide examples for each architecture to reproduce the results published by its original authors.\n    - Model internals are exposed as consistently as possible.\n    - Model files can be used independently of the library for quick experiments.\n\n<a target=\"_blank\" href=\"https://huggingface.co/enterprise\">\n    <img alt=\"Hugging Face Enterprise Hub\" src=\"https://github.com/user-attachments/assets/247fb16d-d251-4583-96c4-d3d76dda4925\">\n</a><br>\n\n## Why shouldn't I use Transformers?\n\n- This library is not a modular toolbox of building blocks for neural nets. The code in the model files is not refactored with additional abstractions on purpose, so that researchers can quickly iterate on each of the models without diving into additional abstractions/files.\n- The training API is optimized to work with PyTorch models provided by Transformers. For generic machine learning loops, you should use another library like [Accelerate](https://huggingface.co/docs/accelerate).\n- The [example scripts]((https://github.com/huggingface/transformers/tree/main/examples)) are only *examples*. They may not necessarily work out-of-the-box on your specific use case and you'll need to adapt the code for it to work.\n\n## 100 projects using Transformers\n\nTransformers is more than a toolkit to use pretrained models, it's a community of projects built around it and the\nHugging Face Hub. We want Transformers to enable developers, researchers, students, professors, engineers, and anyone\nelse to build their dream projects.\n\nIn order to celebrate Transformers 100,000 stars, we wanted to put the spotlight on the\ncommunity with the [awesome-transformers](./awesome-transformers.md) page which lists 100\nincredible projects built with Transformers.\n\nIf you own or use a project that you believe should be part of the list, please open a PR to add it!\n\n## Example models\n\nYou can test most of our models directly on their [Hub model pages](https://huggingface.co/models).\n\nExpand each modality below to see a few example models for various use cases.\n\n<details>\n<summary>Audio</summary>\n\n- Audio classification with [Whisper](https://huggingface.co/openai/whisper-large-v3-turbo)\n- Automatic speech recognition with [Moonshine](https://huggingface.co/UsefulSensors/moonshine)\n- Keyword spotting with [Wav2Vec2](https://huggingface.co/superb/wav2vec2-base-superb-ks)\n- Speech to speech generation with [Moshi](https://huggingface.co/kyutai/moshiko-pytorch-bf16)\n- Text to audio with [MusicGen](https://huggingface.co/facebook/musicgen-large)\n- Text to speech with [Bark](https://huggingface.co/suno/bark)\n\n</details>\n\n<details>\n<summary>Computer vision</summary>\n\n- Automatic mask generation with [SAM](https://huggingface.co/facebook/sam-vit-base)\n- Depth estimation with [DepthPro](https://huggingface.co/apple/DepthPro-hf)\n- Image classification with [DINO v2](https://huggingface.co/facebook/dinov2-base)\n- Keypoint detection with [SuperGlue](https://huggingface.co/magic-leap-community/superglue_outdoor)\n- Keypoint matching with [SuperGlue](https://huggingface.co/magic-leap-community/superglue)\n- Object detection with [RT-DETRv2](https://huggingface.co/PekingU/rtdetr_v2_r50vd)\n- Pose Estimation with [VitPose](https://huggingface.co/usyd-community/vitpose-base-simple)\n- Universal segmentation with [OneFormer](https://huggingface.co/shi-labs/oneformer_ade20k_swin_large)\n- Video classification with [VideoMAE](https://huggingface.co/MCG-NJU/videomae-large)\n\n</details>\n\n<details>\n<summary>Multimodal</summary>\n\n- Audio or text to text with [Qwen2-Audio](https://huggingface.co/Qwen/Qwen2-Audio-7B)\n- Document question answering with [LayoutLMv3](https://huggingface.co/microsoft/layoutlmv3-base)\n- Image or text to text with [Qwen-VL](https://huggingface.co/Qwen/Qwen2.5-VL-3B-Instruct)\n- Image captioning [BLIP-2](https://huggingface.co/Salesforce/blip2-opt-2.7b)\n- OCR-based document understanding with [GOT-OCR2](https://huggingface.co/stepfun-ai/GOT-OCR-2.0-hf)\n- Table question answering with [TAPAS](https://huggingface.co/google/tapas-base)\n- Unified multimodal understanding and generation with [Emu3](https://huggingface.co/BAAI/Emu3-Gen)\n- Vision to text with [Llava-OneVision](https://huggingface.co/llava-hf/llava-onevision-qwen2-0.5b-ov-hf)\n- Visual question answering with [Llava](https://huggingface.co/llava-hf/llava-1.5-7b-hf)\n- Visual referring expression segmentation with [Kosmos-2](https://huggingface.co/microsoft/kosmos-2-patch14-224)\n\n</details>\n\n<details>\n<summary>NLP</summary>\n\n- Masked word completion with [ModernBERT](https://huggingface.co/answerdotai/ModernBERT-base)\n- Named entity recognition with [Gemma](https://huggingface.co/google/gemma-2-2b)\n- Question answering with [Mixtral](https://huggingface.co/mistralai/Mixtral-8x7B-v0.1)\n- Summarization with [BART](https://huggingface.co/facebook/bart-large-cnn)\n- Translation with [T5](https://huggingface.co/google-t5/t5-base)\n- Text generation with [Llama](https://huggingface.co/meta-llama/Llama-3.2-1B)\n- Text classification with [Qwen](https://huggingface.co/Qwen/Qwen2.5-0.5B)\n\n</details>\n\n## Citation\n\nWe now have a [paper](https://www.aclweb.org/anthology/2020.emnlp-demos.6/) you can cite for the \ud83e\udd17 Transformers library:\n```bibtex\n@inproceedings{wolf-etal-2020-transformers,\n    title = \"Transformers: State-of-the-Art Natural Language Processing\",\n    author = \"Thomas Wolf and Lysandre Debut and Victor Sanh and Julien Chaumond and Clement Delangue and Anthony Moi and Pierric Cistac and Tim Rault and R\u00e9mi Louf and Morgan Funtowicz and Joe Davison and Sam Shleifer and Patrick von Platen and Clara Ma and Yacine Jernite and Julien Plu and Canwen Xu and Teven Le Scao and Sylvain Gugger and Mariama Drame and Quentin Lhoest and Alexander M. Rush\",\n    booktitle = \"Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing: System Demonstrations\",\n    month = oct,\n    year = \"2020\",\n    address = \"Online\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://www.aclweb.org/anthology/2020.emnlp-demos.6\",\n    pages = \"38--45\"\n}\n```\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": "SECURITY.md", "size": 2014, "license": "Apache-2.0", "content_sha": "71a03b0be04d21e1a6b07352d70c25e903a69102", "findings": [{"type": "pii_email", "matches": ["security@huggingface.co"]}], "content": "# Security Policy\n\n## Hugging Face Hub, remote artefacts, and remote code\n\nTransformers is open-source software that is tightly coupled to the Hugging Face Hub. While you have the ability to use it\noffline with pre-downloaded model weights, it provides a very simple way to download, use, and manage models locally.\n\nWhen downloading artefacts that have been uploaded by others on any platform, you expose yourself to risks. Please\nread below for the security recommendations in order to keep your runtime and local environment safe.\n\n### Remote artefacts\n\nModels uploaded on the Hugging Face Hub come in different formats. We heavily recommend uploading and downloading\nmodels in the [`safetensors`](https://github.com/huggingface/safetensors) format (which is the default prioritized\nby the transformers library), as developed specifically to prevent arbitrary code execution on your system.\n\nTo avoid loading models from unsafe formats(e.g. [pickle](https://docs.python.org/3/library/pickle.html), you should use the `use_safetensors` parameter. If doing so, in the event that no .safetensors file is present, transformers will error when loading the model.\n\n### Remote code\n\n#### Modeling\n\nTransformers supports many model architectures, but is also the bridge between your Python runtime and models that\nare stored in model repositories on the Hugging Face Hub.\n\nThese models require the `trust_remote_code=True` parameter to be set when using them; please **always** verify\nthe content of the modeling files when using this argument. We recommend setting a revision in order to ensure you\nprotect yourself from updates on the repository.\n\n## Reporting a Vulnerability\n\nFeel free to submit vulnerability reports to [security@huggingface.co](mailto:security@huggingface.co), where someone from the HF security team will review and recommend next steps. If reporting a vulnerability specific to open source, please note [Huntr](https://huntr.com) is a vulnerability disclosure program for open source software.\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": "awesome-transformers.md", "size": 39136, "license": "Apache-2.0", "content_sha": "29f50184ec3d119653b90fd5af4a1b2a1b7fd493", "findings": [], "content": "# Awesome projects built with Transformers\n\nThis page lists awesome projects built on top of Transformers. Transformers is more than a toolkit to use pretrained\nmodels: it's a community of projects built around it and the Hugging Face Hub. We want Transformers to enable\ndevelopers, researchers, students, professors, engineers, and anyone else to build their dream projects.\n\nIn this list, we showcase incredibly impactful and novel projects that have pushed the field forward. We celebrate\n100 of these projects as we reach the milestone of 100k stars as a community; but we're very open to pull requests\nadding other projects to the list. If you believe a project should be here and it's not, then please, open a PR \nto add it.\n\n## [gpt4all](https://github.com/nomic-ai/gpt4all)\n\n[gpt4all](https://github.com/nomic-ai/gpt4all) is an ecosystem of open-source chatbots trained on massive collections of clean assistant data including code, stories and dialogue. It offers open-source, large language models such as LLaMA and GPT-J trained in an assistant-style.\n\nKeywords: Open-source, LLaMa, GPT-J, instruction, assistant\n\n## [recommenders](https://github.com/recommenders-team/recommenders)\n\nThis repository contains examples and best practices for building recommendation systems, provided as Jupyter notebooks. It goes over several aspects required to build efficient recommendation systems: data preparation, modeling, evaluation, model selection & optimization, as well as operationalization\n\nKeywords: Recommender systems, AzureML\n\n## [IOPaint](https://github.com/Sanster/IOPaint)\n\nImage inpainting tool powered by Stable Diffusion. Remove any unwanted object, defect, people from your pictures or erase and replace anything on your pictures.\n\nKeywords: inpainting, SD, Stable Diffusion\n\n## [flair](https://github.com/flairNLP/flair)\n\nFLAIR is a powerful PyTorch NLP framework, covering several important tasks: NER, sentiment-analysis, part-of-speech tagging, text and document embeddings, among other things.\n\nKeywords: NLP, text embedding, document embedding, biomedical, NER, PoS, sentiment-analysis\n\n## [mindsdb](https://github.com/mindsdb/mindsdb)\n\nMindsDB is a low-code ML platform, which automates and integrates several ML frameworks into the data stack as \"AI Tables\" to streamline the integration of AI into applications, making it accessible to developers of all skill levels.\n\nKeywords: Database, low-code, AI table\n\n## [langchain](https://github.com/langchain-ai/langchain)\n\n[langchain](https://github.com/langchain-ai/langchain) is aimed at assisting in the development of apps merging both LLMs and other sources of knowledge. The library allows chaining calls to applications, creating a sequence across many tools.\n\nKeywords: LLMs, Large Language Models, Agents, Chains\n\n## [LlamaIndex](https://github.com/run-llama/llama_index)\n\n[LlamaIndex](https://github.com/run-llama/llama_index) is a project that provides a central interface to connect your LLM's with external data. It provides various kinds of indices and retrieval mechanisms to perform different LLM tasks and obtain knowledge-augmented results.\n\nKeywords: LLMs, Large Language Models, Data Retrieval, Indices, Knowledge Augmentation \n\n## [ParlAI](https://github.com/facebookresearch/ParlAI)\n\n[ParlAI](https://github.com/facebookresearch/ParlAI) is a python framework for sharing, training and testing dialogue models, from open-domain chitchat, to task-oriented dialogue, to visual question answering. It provides more than 100 datasets under the same API, a large zoo of pretrained models, a set of agents, and has several integrations.\n\nKeywords: Dialogue, Chatbots, VQA, Datasets, Agents\n\n## [sentence-transformers](https://github.com/UKPLab/sentence-transformers)\n\nThis framework provides an easy method to compute dense vector representations for sentences, paragraphs, and images. The models are based on transformer networks like BERT / RoBERTa / XLM-RoBERTa etc. and achieve state-of-the-art performance in various task. Text is embedding in vector space such that similar text is close and can efficiently be found using cosine similarity.\n\nKeywords: Dense vector representations, Text embeddings, Sentence embeddings\n\n## [ludwig](https://github.com/ludwig-ai/ludwig)\n\nLudwig is a declarative machine learning framework that makes it easy to define machine learning pipelines using a simple and flexible data-driven configuration system. Ludwig is targeted at a wide variety of AI tasks. It provides a data-driven configuration system, training, prediction, and evaluation scripts, as well as a programmatic API.\n\nKeywords: Declarative, Data-driven, ML Framework\n\n## [InvokeAI](https://github.com/invoke-ai/InvokeAI)\n\n[InvokeAI](https://github.com/invoke-ai/InvokeAI) is an engine for Stable Diffusion models, aimed at professionals, artists, and enthusiasts. It leverages the latest AI-driven technologies through CLI as well as a WebUI.\n\nKeywords: Stable-Diffusion, WebUI, CLI\n\n## [PaddleNLP](https://github.com/PaddlePaddle/PaddleNLP)\n\n[PaddleNLP](https://github.com/PaddlePaddle/PaddleNLP) is an easy-to-use and powerful NLP library particularly targeted at the Chinese languages. It has support for multiple pre-trained model zoos, and supports a wide-range of NLP tasks from research to industrial applications.\n\nKeywords: NLP, Chinese, Research, Industry\n\n## [stanza](https://github.com/stanfordnlp/stanza)\n\nThe Stanford NLP Group's official Python NLP library. It contains support for running various accurate natural language processing tools on 60+ languages and for accessing the Java Stanford CoreNLP software from Python.\n\nKeywords: NLP, Multilingual, CoreNLP\n\n## [DeepPavlov](https://github.com/deeppavlov/DeepPavlov)\n\n[DeepPavlov](https://github.com/deeppavlov/DeepPavlov) is an open-source conversational AI library. It is designed for the development of production ready chat-bots and complex conversational systems, as well as research in the area of NLP and, particularly, of dialog systems.\n\nKeywords: Conversational, Chatbot, Dialog\n\n## [alpaca-lora](https://github.com/tloen/alpaca-lora)\n\nAlpaca-lora contains code for reproducing the Stanford Alpaca results using low-rank adaptation (LoRA). The repository provides training (fine-tuning) as well as generation scripts.\n\nKeywords: LoRA, Parameter-efficient fine-tuning\n\n## [imagen-pytorch](https://github.com/lucidrains/imagen-pytorch)\n\nAn open-source Implementation of Imagen, Google's closed-source Text-to-Image Neural Network that beats DALL-E2. As of release, it is the new SOTA for text-to-image synthesis.\n\nKeywords: Imagen, Text-to-image\n\n## [adapters](https://github.com/adapter-hub/adapters)\n\n[adapters](https://github.com/adapter-hub/adapters) is an extension of HuggingFace's Transformers library, integrating adapters into state-of-the-art language models by incorporating AdapterHub, a central repository for pre-trained adapter modules. It is a drop-in replacement for transformers, which is regularly updated to stay up-to-date with the developments of transformers.\n\nKeywords: Adapters, LoRA, Parameter-efficient fine-tuning, Hub\n\n## [NeMo](https://github.com/NVIDIA/NeMo)\n\nNVIDIA [NeMo](https://github.com/NVIDIA/NeMo) is a conversational AI toolkit built for researchers working on automatic speech recognition (ASR), text-to-speech synthesis (TTS), large language models (LLMs), and natural language processing (NLP). The primary objective of [NeMo](https://github.com/NVIDIA/NeMo) is to help researchers from industry and academia to reuse prior work (code and pretrained models) and make it easier to create new https://developer.nvidia.com/conversational-ai#started.\n\nKeywords: Conversational, ASR, TTS, LLMs, NLP\n\n## [Runhouse](https://github.com/run-house/runhouse)\n\n[Runhouse](https://github.com/run-house/runhouse) allows to send code and data to any of your compute or data infra, all in Python, and continue to interact with them normally from your existing code and environment. Runhouse developers mention:\n\n> Think of it as an expansion pack to your Python interpreter that lets it take detours to remote machines or manipulate remote data.\n\nKeywords: MLOps, Infrastructure, Data storage, Modeling\n\n## [MONAI](https://github.com/Project-MONAI/MONAI)\n\n[MONAI](https://github.com/Project-MONAI/MONAI) is a PyTorch-based, open-source framework for deep learning in healthcare imaging, part of PyTorch Ecosystem. Its ambitions are:\n- developing a community of academic, industrial and clinical researchers collaborating on a common foundation;\n- creating state-of-the-art, end-to-end training workflows for healthcare imaging;\n- providing researchers with the optimized and standardized way to create and evaluate deep learning models.\n\nKeywords: Healthcare imaging, Training, Evaluation\n\n## [simpletransformers](https://github.com/ThilinaRajapakse/simpletransformers)\n\nSimple Transformers lets you quickly train and evaluate Transformer models. Only 3 lines of code are needed to initialize, train, and evaluate a model. It supports a wide variety of NLP tasks.\n\nKeywords: Framework, simplicity, NLP\n\n## [JARVIS](https://github.com/microsoft/JARVIS)\n\n[JARVIS](https://github.com/microsoft/JARVIS) is a system attempting to merge LLMs such as GPT-4 with the rest of the open-source ML community: leveraging up to 60 downstream models in order to perform tasks identified by the LLM.\n\nKeywords: LLM, Agents, HF Hub\n\n## [transformers.js](https://github.com/huggingface/transformers.js/)\n\n[transformers.js](https://github.com/huggingface/transformers.js/) is a JavaScript library targeted at running models from transformers directly within the browser.\n\nKeywords: Transformers, JavaScript, browser\n\n## [bumblebee](https://github.com/elixir-nx/bumblebee)\n\nBumblebee provides pre-trained Neural Network models on top of Axon, a neural networks library for the Elixir language. It includes integration with \ud83e\udd17 Models, allowing anyone to download and perform Machine Learning tasks with few lines of code.\n\nKeywords: Elixir, Axon\n\n## [argilla](https://github.com/argilla-io/argilla)\n\nArgilla is an open-source platform providing advanced NLP labeling, monitoring, and workspaces. It is compatible with many open source ecosystems such as Hugging Face, Stanza, FLAIR, and others.\n\nKeywords: NLP, Labeling, Monitoring, Workspaces\n\n## [haystack](https://github.com/deepset-ai/haystack)\n\nHaystack is an open source NLP framework to interact with your data using Transformer models and LLMs. It offers production-ready tools to quickly build complex decision making, question answering, semantic search, text generation applications, and more.\n\nKeywords: NLP, Framework, LLM\n\n## [spaCy](https://github.com/explosion/spaCy)\n\n[spaCy](https://github.com/explosion/spaCy) is a library for advanced Natural Language Processing in Python and Cython. It's built on the very latest research, and was designed from day one to be used in real products. It offers support for transformers models through its third party package, spacy-transformers.\n\nKeywords: NLP, Framework\n\n## [speechbrain](https://github.com/speechbrain/speechbrain)\n\nSpeechBrain is an open-source and all-in-one conversational AI toolkit based on PyTorch.\nThe goal is to create a single, flexible, and user-friendly toolkit that can be used to easily develop state-of-the-art speech technologies, including systems for speech recognition, speaker recognition, speech enhancement, speech separation, language identification, multi-microphone signal processing, and many others.\n\nKeywords: Conversational, Speech\n\n## [skorch](https://github.com/skorch-dev/skorch)\n\nSkorch is a scikit-learn compatible neural network library that wraps PyTorch. It has support for models within transformers, and tokenizers from tokenizers.\n\nKeywords: Scikit-Learn, PyTorch\n\n## [bertviz](https://github.com/jessevig/bertviz)\n\nBertViz is an interactive tool for visualizing attention in Transformer language models such as BERT, GPT2, or T5. It can be run inside a Jupyter or Colab notebook through a simple Python API that supports most Huggingface models.\n\nKeywords: Visualization, Transformers\n\n## [mesh-transformer-jax](https://github.com/kingoflolz/mesh-transformer-jax)\n\n[mesh-transformer-jax](https://github.com/kingoflolz/mesh-transformer-jax) is a haiku library using the xmap/pjit operators in JAX for model parallelism of transformers. This library is designed for scalability up to approximately 40B parameters on TPUv3s. It was the library used to train the GPT-J model.\n\nKeywords: Haiku, Model parallelism, LLM, TPU\n\n## [deepchem](https://github.com/deepchem/deepchem)\n\nDeepChem aims to provide a high quality open-source toolchain that democratizes the use of deep-learning in drug discovery, materials science, quantum chemistry, and biology.\n\nKeywords: Drug discovery, Materials Science, Quantum Chemistry, Biology\n\n## [OpenNRE](https://github.com/thunlp/OpenNRE)\n\nAn Open-Source Package for Neural Relation Extraction (NRE). It is targeted at a wide range of users, from newcomers to relation extraction, to developers, researchers, or students.\n\nKeywords: Neural Relation Extraction, Framework\n\n## [pycorrector](https://github.com/shibing624/pycorrector)\n\nPyCorrector is a Chinese Text Error Correction Tool. It uses a language model to detect errors, pinyin feature and shape feature to correct Chinese text errors. it can be used for Chinese Pinyin and stroke input method.\n\nKeywords: Chinese, Error correction tool, Language model, Pinyin\n\n## [nlpaug](https://github.com/makcedward/nlpaug)\n\nThis python library helps you with augmenting nlp for machine learning projects. It is a lightweight library featuring synthetic data generation for improving model performance, support for audio and text, and compatibility with several ecosystems (scikit-learn, pytorch, tensorflow).\n\nKeywords: Data augmentation, Synthetic data generation, Audio, NLP\n\n## [dream-textures](https://github.com/carson-katri/dream-textures)\n\n[dream-textures](https://github.com/carson-katri/dream-textures) is a library targeted at bringing stable-diffusion support within Blender. It supports several use-cases, such as image generation, texture projection, inpainting/outpainting, ControlNet, and upscaling.\n\nKeywords: Stable-Diffusion, Blender\n\n## [seldon-core](https://github.com/SeldonIO/seldon-core)\n\nSeldon core converts your ML models (Tensorflow, Pytorch, H2o, etc.) or language wrappers (Python, Java, etc.) into production REST/GRPC microservices.\nSeldon handles scaling to thousands of production machine learning models and provides advanced machine learning capabilities out of the box including Advanced Metrics, Request Logging, Explainers, Outlier Detectors, A/B Tests, Canaries and more.\n\nKeywords: Microservices, Modeling, Language wrappers\n\n## [open_model_zoo](https://github.com/openvinotoolkit/open_model_zoo)\n\nThis repository includes optimized deep learning models and a set of demos to expedite development of high-performance deep learning inference applications. Use these free pre-trained models instead of training your own models to speed-up the development and production deployment process.\n\nKeywords: Optimized models, Demos\n\n## [ml-stable-diffusion](https://github.com/apple/ml-stable-diffusion)\n\nML-Stable-Diffusion is a repository by Apple bringing Stable Diffusion support to Core ML, on Apple Silicon devices. It supports stable diffusion checkpoints hosted on the Hugging Face Hub.\n\nKeywords: Stable Diffusion, Apple Silicon, Core ML\n\n## [stable-dreamfusion](https://github.com/ashawkey/stable-dreamfusion)\n\nStable-Dreamfusion is a pytorch implementation of the text-to-3D model Dreamfusion, powered by the Stable Diffusion text-to-2D model.\n\nKeywords: Text-to-3D, Stable Diffusion\n\n## [txtai](https://github.com/neuml/txtai)\n \n[txtai](https://github.com/neuml/txtai) is an open-source platform for semantic search and workflows powered by language models. txtai builds embeddings databases, which are a union of vector indexes and relational databases enabling similarity search with SQL. Semantic workflows connect language models together into unified applications.\n\nKeywords: Semantic search, LLM\n\n## [djl](https://github.com/deepjavalibrary/djl)\n\nDeep Java Library (DJL) is an open-source, high-level, engine-agnostic Java framework for deep learning. DJL is designed to be easy to get started with and simple to use for developers. DJL provides a native Java development experience and functions like any other regular Java library. DJL offers [a Java binding](https://github.com/deepjavalibrary/djl/tree/master/extensions/tokenizers) for HuggingFace Tokenizers and easy conversion toolkit for HuggingFace model to deploy in Java.\n\nKeywords: Java, Framework\n\n## [lm-evaluation-harness](https://github.com/EleutherAI/lm-evaluation-harness/)\n\nThis project provides a unified framework to test generative language models on a large number of different evaluation tasks. It has support for more than 200 tasks, and supports different ecosystems: HF Transformers, GPT-NeoX, DeepSpeed, as well as the OpenAI API.\n\nKeywords: LLM, Evaluation, Few-shot\n\n## [gpt-neox](https://github.com/EleutherAI/gpt-neox)\n\nThis repository records EleutherAI's library for training large-scale language models on GPUs. The framework is based on NVIDIA's Megatron Language Model and has been augmented with techniques from DeepSpeed as well as some novel optimizations. It is focused on training multi-billion-parameter models.\n\nKeywords: Training, LLM, Megatron, DeepSpeed\n\n## [muzic](https://github.com/microsoft/muzic)\n\nMuzic is a research project on AI music that empowers music understanding and generation with deep learning and artificial intelligence. Muzic was created by researchers from Microsoft Research Asia.\n\nKeywords: Music understanding, Music generation\n\n## [dalle-flow](https://github.com/jina-ai/dalle-flow)\n\nDALL\u00b7E Flow is an interactive workflow for generating high-definition images from a text prompt. Itt leverages DALL\u00b7E-Mega, GLID-3 XL, and Stable Diffusion to generate image candidates, and then calls CLIP-as-service to rank the candidates w.r.t. the prompt.\nThe preferred candidate is fed to GLID-3 XL for diffusion, which often enriches the texture and background. Finally, the candidate is upscaled to 1024x1024 via SwinIR.\n\nKeywords: High-definition image generation, Stable Diffusion, DALL-E Mega, GLID-3 XL, CLIP, SwinIR\n\n## [lightseq](https://github.com/bytedance/lightseq)\n\nLightSeq is a high performance training and inference library for sequence processing and generation implemented in CUDA. It enables highly efficient computation of modern NLP and CV models such as BERT, GPT, Transformer, etc. It is therefore best useful for machine translation, text generation, image classification, and other sequence related tasks.\n\nKeywords: Training, Inference, Sequence Processing, Sequence Generation\n\n## [LaTeX-OCR](https://github.com/lukas-blecher/LaTeX-OCR)\n\nThe goal of this project is to create a learning based system that takes an image of a math formula and returns corresponding LaTeX code.\n\nKeywords: OCR, LaTeX, Math formula\n\n## [open_clip](https://github.com/mlfoundations/open_clip)\n\nOpenCLIP is an open source implementation of OpenAI's CLIP.\n\nThe goal of this repository is to enable training models with contrastive image-text supervision, and to investigate their properties such as robustness to distribution shift. \nThe starting point is an implementation of CLIP that matches the accuracy of the original CLIP models when trained on the same dataset. \n\nSpecifically, a ResNet-50 model trained with this codebase on OpenAI's 15 million image subset of YFCC achieves 32.7% top-1 accuracy on ImageNet.\n\nKeywords: CLIP, Open-source, Contrastive, Image-text\n\n## [dalle-playground](https://github.com/saharmor/dalle-playground)\n\nA playground to generate images from any text prompt using Stable Diffusion and Dall-E mini.\n\nKeywords: WebUI, Stable Diffusion, Dall-E mini\n\n## [FedML](https://github.com/FedML-AI/FedML)\n\n[FedML](https://github.com/FedML-AI/FedML) is a federated learning and analytics library enabling secure and collaborative machine learning on decentralized data anywhere at any scale.\n\nIt supports large-scale cross-silo federated learning, and cross-device federated learning on smartphones/IoTs, and research simulation.\n\nKeywords: Federated Learning, Analytics, Collaborative ML, Decentralized\n\n## [gpt-code-clippy](https://github.com/CodedotAl/gpt-code-clippy)\n\nGPT-Code-Clippy (GPT-CC) is an open source version of GitHub Copilot, a language model -- based on GPT-3, called GPT-Codex -- that is fine-tuned on publicly available code from GitHub.\n\nKeywords: LLM, Code\n\n## [TextAttack](https://github.com/QData/TextAttack)\n\n[TextAttack](https://github.com/QData/TextAttack) \ud83d\udc19 is a Python framework for adversarial attacks, data augmentation, and model training in NLP.\n\nKeywords: Adversarial attacks, Data augmentation, NLP\n\n## [OpenPrompt](https://github.com/thunlp/OpenPrompt)\n\nPrompt-learning is a paradigm to adapt pre-trained language models (PLMs) to downstream NLP tasks, which modify the input text with a textual template and directly uses PLMs to conduct pre-trained tasks. This library provides a standard, flexible and extensible framework to deploy the prompt-learning pipeline. [OpenPrompt](https://github.com/thunlp/OpenPrompt) supports loading PLMs directly from https://github.com/huggingface/transformers.\n\n## [text-generation-webui](https://github.com/oobabooga/text-generation-webui/)\n\n[text-generation-webui](https://github.com/oobabooga/text-generation-webui/) is a Gradio Web UI for running Large Language Models like LLaMA, llama.cpp, GPT-J, Pythia, OPT, and GALACTICA.\n\nKeywords: LLM, WebUI\n\n## [libra](https://github.com/Palashio/libra)\n\nAn ergonomic machine learning [libra](https://github.com/Palashio/libra)ry for non-technical users. It focuses on ergonomics and on ensuring that training a model is as simple as it can be.\n\nKeywords: Ergonomic, Non-technical\n\n## [alibi](https://github.com/SeldonIO/alibi)\n\nAlibi is an open source Python library aimed at machine learning model inspection and interpretation. The focus of the library is to provide high-quality implementations of black-box, white-box, local and global explanation methods for classification and regression models.\n\nKeywords: Model inspection, Model interpretation, Black-box, White-box\n\n## [tortoise-tts](https://github.com/neonbjb/tortoise-tts)\n\nTortoise is a text-to-speech program built with the following priorities: strong multi-voice capabilities, and highly realistic prosody and intonation.\n\nKeywords: Text-to-speech\n\n## [flower](https://github.com/adap/flower)\n\nFlower (flwr) is a framework for building federated learning systems. The design of Flower is based on a few guiding principles: customizability, extendability, framework agnosticity, and ease-of-use.\n\nKeywords: Federated learning systems, Customizable, Extendable, Framework-agnostic, Simplicity\n\n## [fast-bert](https://github.com/utterworks/fast-bert)\n\nFast-Bert is a deep learning library that allows developers and data scientists to train and deploy BERT and XLNet based models for natural language processing tasks beginning with Text Classification. It is aimed at simplicity.\n\nKeywords: Deployment, BERT, XLNet\n\n## [towhee](https://github.com/towhee-io/towhee)\n\nTowhee makes it easy to build neural data processing pipelines for AI applications. We provide hundreds of models, algorithms, and transformations that can be used as standard pipeline building blocks. Users can use Towhee's Pythonic API to build a prototype of their pipeline and automatically optimize it for production-ready environments.\n\nKeywords: Data processing pipeline, Optimization\n\n## [alibi-detect](https://github.com/SeldonIO/alibi-detect)\n\nAlibi Detect is an open source Python library focused on outlier, adversarial and drift detection. The package aims to cover both online and offline detectors for tabular data, text, images and time series. Both TensorFlow and PyTorch backends are supported for drift detection.\n\nKeywords: Adversarial, Outlier, Drift detection\n\n## [FARM](https://github.com/deepset-ai/FARM)\n\n[FARM](https://github.com/deepset-ai/FARM) makes Transfer Learning with BERT & Co simple, fast and enterprise-ready. It's built upon transformers and provides additional features to simplify the life of developers: Parallelized preprocessing, highly modular design, multi-task learning, experiment tracking, easy debugging and close integration with AWS SageMaker.\n\nKeywords: Transfer Learning, Modular design, Multi-task learning, Experiment tracking\n\n## [aitextgen](https://github.com/minimaxir/aitextgen)\n\nA robust Python tool for text-based AI training and generation using OpenAI's GPT-2 and EleutherAI's GPT Neo/GPT-3 architecture.\n[aitextgen](https://github.com/minimaxir/aitextgen) is a Python package that leverages PyTorch, Hugging Face Transformers and pytorch-lightning with specific optimizations for text generation using GPT-2, plus many added features.\n\nKeywords: Training, Generation\n\n## [diffgram](https://github.com/diffgram/diffgram)\n\nDiffgram aims to integrate human supervision into platforms. We support your team programmatically changing the UI (Schema, layout, etc.) like in Streamlit. This means that you can collect and annotate timely data from users. In other words, we are the platform behind your platform, an integrated part of your application, to ship new & better AI products faster.\n\nKeywords: Human supervision, Platform\n\n## [ecco](https://github.com/jalammar/ecco)\n\nExplain, analyze, and visualize NLP language models. Ecco creates interactive visualizations directly in Jupyter notebooks explaining the behavior of Transformer-based language models (like GPT2, BERT, RoBERTA, T5, and T0).\n\nKeywords: Model explainability\n\n## [s3prl](https://github.com/s3prl/s3prl)\n\n[s3prl](https://github.com/s3prl/s3prl) stands for Self-Supervised Speech Pre-training and Representation Learning. Self-supervised speech pre-trained models are called upstream in this toolkit, and are utilized in various downstream tasks.\n\nKeywords: Speech, Training\n\n## [ru-dalle](https://github.com/ai-forever/ru-dalle)\n\nRuDALL-E aims to be similar to DALL-E, targeted to Russian.\n\nKeywords: DALL-E, Russian\n\n## [DeepKE](https://github.com/zjunlp/DeepKE)\n\n[DeepKE](https://github.com/zjunlp/DeepKE) is a knowledge extraction toolkit for knowledge graph construction supporting cnSchema\uff0clow-resource, document-level and multimodal scenarios for entity, relation and attribute extraction.\n\nKeywords: Knowledge Extraction, Knowledge Graphs\n\n## [Nebuly](https://github.com/nebuly-ai/optimate)\n\nNebuly is the next-generation platform to monitor and optimize your AI costs in one place. The platform connects to all your AI cost sources (compute, API providers, AI software licenses, etc) and centralizes them in one place to give you full visibility on a model basis. The platform also provides optimization recommendations and a co-pilot model that can guide during the optimization process. The platform builds on top of the open-source tools allowing you to optimize the different steps of your AI stack to squeeze out the best possible cost performances.\n\nKeywords: Optimization, Performance, Monitoring\n\n## [imaginAIry](https://github.com/brycedrennan/imaginAIry)\n\nOffers a CLI and a Python API to generate images with Stable Diffusion. It has support for many tools, like image structure control (controlnet), instruction-based image edits (InstructPix2Pix), prompt-based masking (clipseg), among others.\n\nKeywords: Stable Diffusion, CLI, Python API\n\n## [sparseml](https://github.com/neuralmagic/sparseml)\n\nSparseML is an open-source model optimization toolkit that enables you to create inference-optimized sparse models using pruning, quantization, and distillation algorithms. Models optimized with SparseML can then be exported to the ONNX and deployed with DeepSparse for GPU-class performance on CPU hardware.\n\nKeywords: Model optimization, Pruning, Quantization, Distillation\n\n## [opacus](https://github.com/pytorch/opacus)\n\nOpacus is a library that enables training PyTorch models with differential privacy. It supports training with minimal code changes required on the client, has little impact on training performance, and allows the client to online track the privacy budget expended at any given moment.\n\nKeywords: Differential privacy\n\n## [LAVIS](https://github.com/salesforce/LAVIS)\n\n[LAVIS](https://github.com/salesforce/LAVIS) is a Python deep learning library for LAnguage-and-VISion intelligence research and applications. This library aims to provide engineers and researchers with a one-stop solution to rapidly develop models for their specific multimodal scenarios, and benchmark them across standard and customized datasets. It features a unified interface design to access\n\nKeywords: Multimodal, NLP, Vision\n\n## [buzz](https://github.com/chidiwilliams/buzz)\n\nBuzz transcribes and translates audio offline on your personal computer. Powered by OpenAI's Whisper.\n\nKeywords: Audio transcription, Translation\n\n## [rust-bert](https://github.com/guillaume-be/rust-bert)\n\nRust-native state-of-the-art Natural Language Processing models and pipelines. Port of Hugging Face's Transformers library, using the tch-rs crate and pre-processing from rust-tokenizers. Supports multi-threaded tokenization and GPU inference. This repository exposes the model base architecture, task-specific heads and ready-to-use pipelines.\n\nKeywords: Rust, BERT, Inference\n\n## [EasyNLP](https://github.com/alibaba/EasyNLP)\n\n[EasyNLP](https://github.com/alibaba/EasyNLP) is an easy-to-use NLP development and application toolkit in PyTorch, first released inside Alibaba in 2021. It is built with scalable distributed training strategies and supports a comprehensive suite of NLP algorithms for various NLP applications. [EasyNLP](https://github.com/alibaba/EasyNLP) integrates knowledge distillation and few-shot learning for landing large pre-trained models, together with various popular multi-modality pre-trained models. It provides a unified framework of model training, inference, and deployment for real-world applications.\n\nKeywords: NLP, Knowledge distillation, Few-shot learning, Multi-modality, Training, Inference, Deployment\n\n## [TurboTransformers](https://github.com/Tencent/TurboTransformers)\n\nA fast and user-friendly runtime for transformer inference (Bert, Albert, GPT2, Decoders, etc) on CPU and GPU.\n\nKeywords: Optimization, Performance\n\n## [hivemind](https://github.com/learning-at-home/hivemind)\n\nHivemind is a PyTorch library for decentralized deep learning across the Internet. Its intended usage is training one large model on hundreds of computers from different universities, companies, and volunteers.\n\nKeywords: Decentralized training\n\n## [docquery](https://github.com/impira/docquery)\n\nDocQuery is a library and command-line tool that makes it easy to analyze semi-structured and unstructured documents (PDFs, scanned images, etc.) using large language models (LLMs). You simply point DocQuery at one or more documents and specify a question you want to ask. DocQuery is created by the team at Impira.\n\nKeywords: Semi-structured documents, Unstructured documents, LLM, Document Question Answering\n\n## [CodeGeeX](https://github.com/THUDM/CodeGeeX)\n\n[CodeGeeX](https://github.com/THUDM/CodeGeeX) is a large-scale multilingual code generation model with 13 billion parameters, pre-trained on a large code corpus of more than 20 programming languages. It has several unique features:\n- Multilingual code generation\n- Crosslingual code translation\n- Is a customizable programming assistant\n\nKeywords: Code Generation Model\n\n## [ktrain](https://github.com/amaiya/ktrain)\n\n[ktrain](https://github.com/amaiya/ktrain) is a lightweight wrapper for the deep learning library TensorFlow Keras (and other libraries) to help build, train, and deploy neural networks and other machine learning models. Inspired by ML framework extensions like fastai and ludwig, [ktrain](https://github.com/amaiya/ktrain) is designed to make deep learning and AI more accessible and easier to apply for both newcomers and experienced practitioners.\n\nKeywords: Keras wrapper, Model building, Training, Deployment\n\n## [FastDeploy](https://github.com/PaddlePaddle/FastDeploy)\n\n[FastDeploy](https://github.com/PaddlePaddle/FastDeploy) is an Easy-to-use and High Performance AI model deployment toolkit for Cloud, Mobile and Edge with packageout-of-the-box and unified experience, endend-to-end optimization for over fire160+ Text, Vision, Speech and Cross-modal AI models. Including image classification, object detection, OCR, face detection, matting, pp-tracking, NLP, stable diffusion, TTS and other tasks to meet developers' industrial deployment needs for multi-scenario, multi-hardware and multi-platform.\n\nKeywords: Model deployment, CLoud, Mobile, Edge\n\n## [underthesea](https://github.com/undertheseanlp/underthesea)\n\n[underthesea](https://github.com/undertheseanlp/underthesea) is a Vietnamese NLP toolkit. Underthesea is a suite of open source Python modules data sets and tutorials supporting research and development in Vietnamese Natural Language Processing. We provides extremely easy API to quickly apply pretrained NLP models to your Vietnamese text, such as word segmentation, part-of-speech tagging (PoS), named entity recognition (NER), text classification and dependency parsing.\n\nKeywords: Vietnamese, NLP\n\n## [hasktorch](https://github.com/hasktorch/hasktorch)\n\nHasktorch is a library for tensors and neural networks in Haskell. It is an independent open source community project which leverages the core C++ libraries shared by PyTorch.\n\nKeywords: Haskell, Neural Networks\n\n## [donut](https://github.com/clovaai/donut)\n\nDonut, or Document understanding transformer, is a new method of document understanding that utilizes an OCR-free end-to-end Transformer model.\n\nDonut does not require off-the-shelf OCR engines/APIs, yet it shows state-of-the-art performances on various visual document understanding tasks, such as visual document classification or information extraction (a.k.a. document parsing).\n\nKeywords: Document Understanding\n\n## [transformers-interpret](https://github.com/cdpierse/transformers-interpret)\n\nTransformers Interpret is a model explainability tool designed to work exclusively with the transformers package.\n\nIn line with the philosophy of the Transformers package Transformers Interpret allows any transformers model to be explained in just two lines. Explainers are available for both text and computer vision models. Visualizations are also available in notebooks and as savable png and html files\n\nKeywords: Model interpretation, Visualization\n\n## [mlrun](https://github.com/mlrun/mlrun)\n\nMLRun is an open MLOps platform for quickly building and managing continuous ML applications across their lifecycle. MLRun integrates into your development and CI/CD environment and automates the delivery of production data, ML pipelines, and online applications, significantly reducing engineering efforts, time to production, and computation resources. With MLRun, you can choose any IDE on your local machine or on the cloud. MLRun breaks the silos between data, ML, software, and DevOps/MLOps teams, enabling collaboration and fast continuous improvements.\n\nKeywords: MLOps\n\n## [FederatedScope](https://github.com/alibaba/FederatedScope)\n\n[FederatedScope](https://github.com/alibaba/FederatedScope) is a comprehensive federated learning platform that provides convenient usage and flexible customization for various federated learning tasks in both academia and industry. Based on an event-driven architecture, [FederatedScope](https://github.com/alibaba/FederatedScope) integrates rich collections of functionalities to satisfy the burgeoning demands from federated learning, and aims to build up an easy-to-use platform for promoting learning safely and effectively.\n\nKeywords: Federated learning, Event-driven\n\n## [pythainlp](https://github.com/PyThaiNLP/pythainlp)\n\nPyThaiNLP is a Python package for text processing and linguistic analysis, similar to NLTK with focus on Thai language.\n\nKeywords: Thai, NLP, NLTK\n\n## [FlagAI](https://github.com/FlagAI-Open/FlagAI)\n\n[FlagAI](https://github.com/FlagAI-Open/FlagAI) (Fast LArge-scale General AI models) is a fast, easy-to-use and extensible toolkit for large-scale model. Our goal is to support training, fine-tuning, and deployment of large-scale models on various downstream tasks with multi-modality.\n\nKeywords: Large models, Training, Fine-tuning, Deployment, Multi-modal\n\n## [pyserini](https://github.com/castorini/pyserini)\n\n[pyserini](https://github.com/castorini/pyserini) is a Python toolkit for reproducible information retrieval research with sparse and dense representations. Retrieval using sparse representations is provided via integration with the group's Anserini IR toolkit. Retrieval using dense representations is provided via integration with Facebook's Faiss library.\n\nKeywords: IR, Information Retrieval, Dense, Sparse\n\n## [baal](https://github.com/baal-org/baal)\n\n[baal](https://github.com/baal-org/baal) is an active learning library that supports both industrial applications and research usecases. [baal](https://github.com/baal-org/baal) currently supports Monte-Carlo Dropout, MCDropConnect, deep ensembles, and semi-supervised learning.\n\nKeywords: Active Learning, Research, Labeling\n\n## [cleanlab](https://github.com/cleanlab/cleanlab)\n\n[cleanlab](https://github.com/cleanlab/cleanlab) is the standard data-centric AI package for data quality and machine learning with messy, real-world data and labels. For text, image, tabular, audio (among others) datasets, you can use cleanlab to automatically: detect data issues (outliers, label errors, near duplicates, etc), train robust ML models, infer consensus + annotator-quality for multi-annotator data, suggest data to (re)label next (active learning).\n\nKeywords: Data-Centric AI, Data Quality, Noisy Labels, Outlier Detection, Active Learning  \n\n## [BentoML](https://github.com/bentoml/BentoML)\n\n[BentoML](https://github.com/bentoml) is the unified framework for building, shipping, and scaling production-ready AI applications incorporating traditional ML, pre-trained AI models, Generative and Large Language Models. \nAll Hugging Face models and pipelines can be seamlessly integrated into BentoML applications, enabling the running of models on the most suitable hardware and independent scaling based on usage.\n\nKeywords: BentoML, Framework, Deployment, AI Applications\n\n## [LLaMA Factory](https://github.com/hiyouga/LLaMA-Factory)\n\n[LLaMA Factory](https://github.com/hiyouga/LLaMA-Factory) offers a user-friendly fine-tuning framework that incorporates PEFT. The repository includes training(fine-tuning) and inference examples for LLaMA-2, BLOOM, Falcon, Baichuan, Qwen, and other LLMs. A ChatGLM version is also available in [ChatGLM-Efficient-Tuning](https://github.com/hiyouga/ChatGLM-Efficient-Tuning).\n\nKeywords: PEFT, fine-tuning, LLaMA-2, ChatGLM, Qwen\n\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": "benchmark/README.md", "size": 2400, "license": "Apache-2.0", "content_sha": "3935f02b389d841367d16f11bbf7c6775fb09a14", "findings": [], "content": "# Benchmarks\n\nYou might want to add new benchmarks.\n\nYou will need to define a python function named `run_benchmark` in your python file and the file must be located in this `benchmark/` directory.\n\nThe expected function signature is the following:\n\n```py\ndef run_benchmark(logger: Logger, branch: str, commit_id: str, commit_msg: str, num_tokens_to_generate=100):\n```\n\n## Writing metrics to the database\n\n`MetricsRecorder` is thread-safe, in the sense of the python [`Thread`](https://docs.python.org/3/library/threading.html#threading.Thread). This means you can start a background thread to do the readings on the device measurements while not blocking the main thread to execute the model measurements.\n\ncf [`llama.py`](./llama.py) to see an example of this in practice.\n\n```py\nfrom benchmarks_entrypoint import MetricsRecorder\nimport psycopg2\n\ndef run_benchmark(logger: Logger, branch: str, commit_id: str, commit_msg: str, num_tokens_to_generate=100):\n  metrics_recorder = MetricsRecorder(psycopg2.connect(\"dbname=metrics\"), logger, branch, commit_id, commit_msg)\n  benchmark_id = metrics_recorder.initialise_benchmark({\"gpu_name\": gpu_name, \"model_id\": model_id})\n    # To collect device measurements\n    metrics_recorder.collect_device_measurements(\n        benchmark_id, cpu_util, mem_megabytes, gpu_util, gpu_mem_megabytes\n    )\n    # To collect your model measurements\n    metrics_recorder.collect_model_measurements(\n        benchmark_id,\n        {\n            \"model_load_time\": model_load_time,\n            \"first_eager_forward_pass_time_secs\": first_eager_fwd_pass_time,\n            \"second_eager_forward_pass_time_secs\": second_eager_fwd_pass_time,\n            \"first_eager_generate_time_secs\": first_eager_generate_time,\n            \"second_eager_generate_time_secs\": second_eager_generate_time,\n            \"time_to_first_token_secs\": time_to_first_token,\n            \"time_to_second_token_secs\": time_to_second_token,\n            \"time_to_third_token_secs\": time_to_third_token,\n            \"time_to_next_token_mean_secs\": mean_time_to_next_token,\n            \"first_compile_generate_time_secs\": first_compile_generate_time,\n            \"second_compile_generate_time_secs\": second_compile_generate_time,\n            \"third_compile_generate_time_secs\": third_compile_generate_time,\n            \"fourth_compile_generate_time_secs\": fourth_compile_generate_time,\n        },\n    )\n```\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": "benchmark/benchmark.py", "size": 12161, "license": "Apache-2.0", "content_sha": "831ec424e3dec3e4dad8d3fa77fea4874833365d", "findings": [], "content": "# Copyright 2024 The HuggingFace Team. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\"\"\"\nRun benchmark using the `optimum-benchmark` library with some customization in `transformers`.\n\nAssume we are under `transformers` root directory: (make sure the commits are valid commits)\n```bash\npython benchmark/benchmark.py --config-dir benchmark/config --config-name generation --commit=9b9c7f03da625b13643e99205c691fe046461724 --metrics=decode.latency.mean,per_token.latency.mean,per_token.throughput.value backend.model=google/gemma-2b benchmark.input_shapes.sequence_length=5,7 benchmark.input_shapes.batch_size=1,2 --multirun\n```\n\"\"\"\n\nimport argparse\nimport glob\nimport json\nimport os.path\nimport re\nimport tempfile\nfrom contextlib import contextmanager\nfrom pathlib import Path\n\nfrom git import Repo\n\nfrom huggingface_hub import HfApi\n\nfrom optimum_benchmark import Benchmark\nfrom optimum_benchmark_wrapper import main\n\n\nPATH_TO_REPO = Path(__file__).parent.parent.resolve()\n\n\n@contextmanager\ndef checkout_commit(repo: Repo, commit_id: str):\n    \"\"\"\n    Context manager that checks out a given commit when entered, but gets back to the reference it was at on exit.\n    Args:\n        repo (`git.Repo`): A git repository (for instance the Transformers repo).\n        commit_id (`str`): The commit reference to checkout inside the context manager.\n    \"\"\"\n    current_head = repo.head.commit if repo.head.is_detached else repo.head.ref\n\n    try:\n        repo.git.checkout(commit_id)\n        yield\n\n    finally:\n        repo.git.checkout(current_head)\n\n\ndef summarize(run_dir, metrics, expand_metrics=False):\n    \"\"\"Produce a summary for each optimum-benchmark launched job's output directory found in `run_dir`.\n\n    Each summary's format is as follows (for `expand_metrics=False`):\n    ```\n    {\n        \"model\": \"google/gemma-2b\",\n        \"commit\": \"3cd6ed22e4d49219f300f5055e71e3929aba20d7\",\n        \"config\": \"benchmark.input_shapes.batch_size=1,benchmark.input_shapes.sequence_length=5\",\n        \"metrics\": {\n            \"decode.latency.mean\": 1.624666809082031,\n            \"per_token.latency.mean\": 0.012843788806628804,\n            \"per_token.throughput.value\": 77.85864553330948\n        }\n    }\n    ```\n    \"\"\"\n    reports = glob.glob(os.path.join(run_dir, \"**/benchmark_report.json\"), recursive=True)\n    report_dirs = [str(Path(report).parent) for report in reports]\n\n    summaries = []\n    for report_dir in report_dirs:\n        commit = re.search(r\"/commit=([^/]+)\", report_dir).groups()[0]\n\n        if not os.path.isfile(os.path.join(report_dir, \"benchmark.json\")):\n            continue\n        benchmark = Benchmark.from_json(os.path.join(report_dir, \"benchmark.json\"))\n        report = benchmark.report\n\n        model = benchmark.config.backend[\"model\"]\n\n        # This looks like `benchmark.input_shapes.batch_size=1,benchmark.input_shapes.sequence_length=5`.\n        # (we rely on the usage of hydra's `${hydra.job.override_dirname}`.)\n        benchmark_name = re.sub(f\"backend.model={model},*\", \"\", report_dir)\n        benchmark_name = str(Path(benchmark_name).parts[-1])\n        if benchmark_name.startswith(\"commit=\"):\n            benchmark_name = benchmark.config.name\n\n        metrics_values = {}\n        # post-processing of report: show a few selected/important metric\n        for metric in metrics:\n            keys = metric.split(\".\")\n            value = report.to_dict()\n            current = metrics_values\n            for key in keys:\n                # Avoid KeyError when a user's specified metric has typo.\n                # TODO: Give warnings.\n                if key not in value:\n                    continue\n                value = value[key]\n\n                if expand_metrics:\n                    if isinstance(value, dict):\n                        if key not in current:\n                            current[key] = {}\n                            current = current[key]\n                    else:\n                        current[key] = value\n\n            if not expand_metrics:\n                metrics_values[metric] = value\n\n        # show some config information\n        print(f\"model: {model}\")\n        print(f\"commit: {commit}\")\n        print(f\"config: {benchmark_name}\")\n        if len(metrics_values) > 0:\n            print(\"metrics:\")\n            if expand_metrics:\n                print(metrics_values)\n            else:\n                for metric, value in metrics_values.items():\n                    print(f\"  - {metric}: {value}\")\n        print(\"-\" * 80)\n\n        summary = {\n            \"model\": model,\n            \"commit\": commit,\n            \"config\": benchmark_name,\n            \"metrics\": metrics_values,\n        }\n        summaries.append(summary)\n\n        with open(os.path.join(report_dir, \"summary.json\"), \"w\") as fp:\n            json.dump(summary, fp, indent=4)\n\n    return summaries\n\n\ndef combine_summaries(summaries):\n    \"\"\"Combine a list of summary obtained from the function `summarize`.\n\n    The combined summary's format is as follows:\n    ```\n    \"google/gemma-2b\": {\n        \"benchmark.input_shapes.batch_size=1,benchmark.input_shapes.sequence_length=5\": {\n            \"3cd6ed22e4d49219f300f5055e71e3929aba20d7\": {\n                \"metrics\": {\"decode.latency.mean\": 1.624666809082031}\n            },\n            \"c97ee28b117c0abe8e08891f402065e4df6d72aa\": {\n                \"metrics\": {\"decode.latency.mean\": 1.6278163452148438}\n            }\n        },\n        \"benchmark.input_shapes.batch_size=2,benchmark.input_shapes.sequence_length=5\": {\n            \"3cd6ed22e4d49219f300f5055e71e3929aba20d7\": {\n                \"metrics\": {\"decode.latency.mean\": 1.6947791748046876}\n            },\n            \"c97ee28b117c0abe8e08891f402065e4df6d72aa\": {\n                \"metrics\": {\n                    \"decode.latency.mean\": 1.6980519409179688}\n            }\n        }\n    }\n    ```\n    \"\"\"\n    combined = {}\n    for summary in summaries:\n        model = summary[\"model\"]\n        config = summary[\"config\"]\n        commit = summary[\"commit\"]\n\n        if model not in combined:\n            combined[model] = {}\n\n        if config not in combined[model]:\n            combined[model][config] = {}\n\n        if commit not in combined[model][config]:\n            combined[model][config][commit] = {\"metrics\": summary[\"metrics\"]}\n\n    with open(os.path.join(exp_run_dir, \"summary.json\"), \"w\") as fp:\n        json.dump(combined, fp, indent=4)\n\n    print(json.dumps(combined, indent=4))\n\n    return combined\n\n\nif __name__ == \"__main__\":\n\n    def list_str(values):\n        return values.split(\",\")\n\n    parser = argparse.ArgumentParser()\n\n    parser.add_argument(\"--config-dir\", type=str, required=True, help=\"The path to the config directory.\")\n    parser.add_argument(\"--config-name\", type=str, required=True, help=\"The config name.\")\n\n    # arguments specific to this wrapper for our own customization\n    parser.add_argument(\"--ensure_empty\", type=bool, default=True, help=\"If to create a temporary directory.\")\n    parser.add_argument(\n        \"--commit\",\n        type=list_str,\n        default=\"\",\n        help=\"Comma-separated list of branch names and/or commit sha values on which the benchmark will run. If `diff` is specified, it will run on both the current head and the `main` branch.\",\n    )\n    parser.add_argument(\"--metrics\", type=str, help=\"The metrics to be included in the summary.\")\n\n    parser.add_argument(\"--repo_id\", type=str, default=None, help=\"The repository to which the file will be uploaded.\")\n    parser.add_argument(\"--path_in_repo\", type=str, default=None, help=\"Relative filepath in the repo.\")\n    parser.add_argument(\"--token\", type=str, default=None, help=\"A valid user access token (string).\")\n\n    args, optimum_benchmark_args = parser.parse_known_args()\n\n    repo = Repo(PATH_TO_REPO)\n\n    metrics = [\n        \"prefill.latency.mean\",\n        \"prefill.throughput.value\",\n        \"decode.latency.mean\",\n        \"decode.throughput.value\",\n        \"per_token.latency.mean\",\n        \"per_token.throughput.value\",\n    ]\n    if args.metrics is not None:\n        metrics = args.metrics.split(\",\")\n\n    # Get `backend.model` in a hacky way: We want to control the experiment flow manually.\n    models = [\"\"]\n    for idx, arg in enumerate(optimum_benchmark_args):\n        if arg.startswith(\"backend.model=\"):\n            models = arg[len(\"backend.model=\") :]\n            models = models.split(\",\")\n            break\n    optimum_benchmark_args = [arg for arg in optimum_benchmark_args if not arg.startswith(\"backend.model=\")]\n\n    # Get the commit(s)\n    current_head = str(repo.head.commit) if repo.head.is_detached else str(repo.head.ref)\n    commits = [x for x in args.commit if x != \"\"]\n    if len(commits) == 0:\n        commits = [current_head]\n    elif len(commits) == 1 and commits[0] == \"diff\":\n        # compare to `main`\n        commits = [\"main\", current_head]\n\n    # Get the specified run directory\n    run_dir_arg_idx, run_dir = -1, None\n    sweep_dir_arg_idx, sweep_dir = -1, None\n    for idx, arg in enumerate(optimum_benchmark_args):\n        if arg.startswith(\"hydra.run.dir=\"):\n            run_dir = arg[len(\"hydra.run.dir=\") :]\n            run_dir_arg_idx = idx\n        elif arg.startswith(\"hydra.sweep.dir=\"):\n            sweep_dir = arg[len(\"hydra.sweep.dir=\") :]\n            sweep_dir_arg_idx = idx\n    exp_run_dir, arg_dix, arg_name = (\n        (sweep_dir, sweep_dir_arg_idx, \"hydra.sweep.dir\")\n        if \"--multirun\" in optimum_benchmark_args\n        else (run_dir, run_dir_arg_idx, \"hydra.run.dir\")\n    )\n\n    # TODO: not hardcoded\n    if exp_run_dir is None and args.ensure_empty:\n        exp_run_dir = \"_benchmark\"\n\n    if args.ensure_empty:\n        os.makedirs(exp_run_dir, exist_ok=True)\n        exp_run_dir = tempfile.mkdtemp(dir=exp_run_dir)\n\n    run_summaries = []\n    for commit in commits:\n        with checkout_commit(repo, commit):\n            commit = str(repo.head.commit)\n\n            commit_run_dir = exp_run_dir\n            if exp_run_dir is not None:\n                commit_run_dir = os.path.join(exp_run_dir, rf\"commit\\={commit}\")\n\n            print(f\"Run benchmark on commit: {commit}\")\n\n            for model in models:\n                model_arg = [f\"backend.model={model}\"] if model != \"\" else []\n                dir_args = []\n                if commit_run_dir is not None:\n                    if arg_dix > -1:\n                        optimum_benchmark_args[arg_dix] = f\"{arg_name}={commit_run_dir}\"\n                    else:\n                        dir_args = [\n                            f\"hydra.sweep.dir={commit_run_dir}\",\n                            f\"hydra.run.dir={commit_run_dir}/\" + \"${hydra.job.override_dirname}\",\n                        ]\n                main(args.config_dir, args.config_name, model_arg + dir_args + optimum_benchmark_args)\n\n            if commit_run_dir is not None:\n                # Need to remove the `\\` character\n                summaries = summarize(commit_run_dir.replace(\"\\\\\", \"\"), metrics)\n                run_summaries.extend(summaries)\n\n    # aggregate the information across the commits\n    if exp_run_dir is not None:\n        with open(os.path.join(exp_run_dir, \"summaries.json\"), \"w\") as fp:\n            json.dump(run_summaries, fp, indent=4)\n\n        combined_summary = combine_summaries(run_summaries)\n\n        if args.repo_id is not None and args.path_in_repo is not None:\n            # Upload to Hub\n            api = HfApi()\n            api.upload_folder(\n                folder_path=exp_run_dir,\n                path_in_repo=args.path_in_repo,\n                repo_id=args.repo_id,\n                repo_type=\"dataset\",\n                token=args.token,\n            )\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": "benchmark/benchmarks_entrypoint.py", "size": 4854, "license": "Apache-2.0", "content_sha": "6c036fdd6939ae25a299ed2eac777ec58a838ecf", "findings": [], "content": "import argparse\nimport importlib.util\nimport logging\nimport os\nfrom typing import Dict\nimport sys\n\nfrom psycopg2.extras import Json\nfrom psycopg2.extensions import register_adapter\n\n\nregister_adapter(dict, Json)\n\n\nclass ImportModuleException(Exception):\n    pass\n\n\nclass MetricsRecorder:\n    def __init__(self, connection, logger: logging.Logger, branch: str, commit_id: str, commit_msg: str):\n        self.conn = connection\n        self.conn.autocommit = True\n        self.logger = logger\n        self.branch = branch\n        self.commit_id = commit_id\n        self.commit_msg = commit_msg\n\n    def initialise_benchmark(self, metadata: Dict[str, str]) -> int:\n        \"\"\"\n        Creates a new benchmark, returns the benchmark id\n        \"\"\"\n        # gpu_name: str, model_id: str\n        with self.conn.cursor() as cur:\n            cur.execute(\n                \"INSERT INTO benchmarks (branch, commit_id, commit_message, metadata) VALUES (%s, %s, %s, %s) RETURNING benchmark_id\",\n                (self.branch, self.commit_id, self.commit_msg, metadata),\n            )\n            benchmark_id = cur.fetchone()[0]\n            logger.debug(f\"initialised benchmark #{benchmark_id}\")\n            return benchmark_id\n\n    def collect_device_measurements(self, benchmark_id: int, cpu_util, mem_megabytes, gpu_util, gpu_mem_megabytes):\n        \"\"\"\n        Collect device metrics, such as CPU & GPU usage. These are \"static\", as in you cannot pass arbitrary arguments to the function.\n        \"\"\"\n        with self.conn.cursor() as cur:\n            cur.execute(\n                \"INSERT INTO device_measurements (benchmark_id, cpu_util, mem_megabytes, gpu_util, gpu_mem_megabytes) VALUES (%s, %s, %s, %s, %s)\",\n                (benchmark_id, cpu_util, mem_megabytes, gpu_util, gpu_mem_megabytes),\n            )\n        self.logger.debug(\n            f\"inserted device measurements for benchmark #{benchmark_id} [CPU util: {cpu_util}, mem MBs: {mem_megabytes}, GPU util: {gpu_util}, GPU mem MBs: {gpu_mem_megabytes}]\"\n        )\n\n    def collect_model_measurements(self, benchmark_id: int, measurements: Dict[str, float]):\n        with self.conn.cursor() as cur:\n            cur.execute(\n                \"\"\"\n                INSERT INTO model_measurements (\n                    benchmark_id,\n                    measurements\n                ) VALUES (%s, %s)\n                \"\"\",\n                (\n                    benchmark_id,\n                    measurements,\n                ),\n            )\n        self.logger.debug(f\"inserted model measurements for benchmark #{benchmark_id}: {measurements}\")\n\n    def close(self):\n        self.conn.close()\n\n\nlogger = logging.getLogger(__name__)\nlogger.setLevel(logging.INFO)\n\nhandler = logging.StreamHandler(sys.stdout)\nhandler.setLevel(logging.INFO)\nformatter = logging.Formatter(\"[%(levelname)s - %(asctime)s] %(message)s\")\nhandler.setFormatter(formatter)\nlogger.addHandler(handler)\n\n\ndef parse_arguments():\n    \"\"\"\n    Parse command line arguments for the benchmarking CLI.\n    \"\"\"\n    parser = argparse.ArgumentParser(description=\"CLI for benchmarking the huggingface/transformers.\")\n\n    parser.add_argument(\n        \"branch\",\n        type=str,\n        help=\"The branch name on which the benchmarking is performed.\",\n    )\n\n    parser.add_argument(\n        \"commit_id\",\n        type=str,\n        help=\"The commit hash on which the benchmarking is performed.\",\n    )\n\n    parser.add_argument(\n        \"commit_msg\",\n        type=str,\n        help=\"The commit message associated with the commit, truncated to 70 characters.\",\n    )\n\n    args = parser.parse_args()\n\n    return args.branch, args.commit_id, args.commit_msg\n\n\ndef import_from_path(module_name, file_path):\n    try:\n        spec = importlib.util.spec_from_file_location(module_name, file_path)\n        module = importlib.util.module_from_spec(spec)\n        sys.modules[module_name] = module\n        spec.loader.exec_module(module)\n        return module\n    except Exception as e:\n        raise ImportModuleException(f\"failed to load python module: {e}\")\n\n\nif __name__ == \"__main__\":\n    benchmarks_folder_path = os.path.dirname(os.path.realpath(__file__))\n\n    branch, commit_id, commit_msg = parse_arguments()\n\n    for entry in os.scandir(benchmarks_folder_path):\n        try:\n            if not entry.name.endswith(\".py\"):\n                continue\n            if entry.path == __file__:\n                continue\n            logger.debug(f\"loading: {entry.name}\")\n            module = import_from_path(entry.name.split(\".\")[0], entry.path)\n            logger.info(f\"running benchmarks in: {entry.name}\")\n            module.run_benchmark(logger, branch, commit_id, commit_msg)\n        except ImportModuleException as e:\n            logger.error(e)\n        except Exception as e:\n            logger.error(f\"error running benchmarks for {entry.name}: {e}\")\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": "benchmark/llama.py", "size": 15120, "license": "Apache-2.0", "content_sha": "6a477de7fbf4592e74fd9a459876bb01b11c178b", "findings": [], "content": "from logging import Logger\nimport os\nfrom threading import Event, Thread\nfrom time import perf_counter, sleep\nfrom typing import Optional\nfrom benchmarks_entrypoint import MetricsRecorder\nimport gpustat\nimport psutil\nimport psycopg2\nimport torch\n\nfrom transformers import AutoModelForCausalLM, AutoTokenizer, GenerationConfig, StaticCache\n\n\nos.environ[\"HF_HUB_ENABLE_HF_TRANSFER\"] = \"1\"\n\nos.environ[\"TOKENIZERS_PARALLELISM\"] = \"1\"\ntorch.set_float32_matmul_precision(\"high\")\n\n\ndef collect_metrics(benchmark_id, continue_metric_collection, metrics_recorder):\n    p = psutil.Process(os.getpid())\n    while not continue_metric_collection.is_set():\n        with p.oneshot():\n            cpu_util = p.cpu_percent()\n            mem_megabytes = p.memory_info().rss / (1024 * 1024)\n        gpu_stats = gpustat.GPUStatCollection.new_query()\n        gpu_util = gpu_stats[0][\"utilization.gpu\"]\n        gpu_mem_megabytes = gpu_stats[0][\"memory.used\"]\n        metrics_recorder.collect_device_measurements(\n            benchmark_id, cpu_util, mem_megabytes, gpu_util, gpu_mem_megabytes\n        )\n        sleep(0.01)\n\n\ndef run_benchmark(logger: Logger, branch: str, commit_id: str, commit_msg: str, num_tokens_to_generate=100):\n    continue_metric_collection = Event()\n    metrics_thread = None\n    model_id = \"meta-llama/Llama-2-7b-hf\"\n    metrics_recorder = MetricsRecorder(psycopg2.connect(\"dbname=metrics\"), logger, branch, commit_id, commit_msg)\n    try:\n        gpu_stats = gpustat.GPUStatCollection.new_query()\n        gpu_name = gpu_stats[0][\"name\"]\n        benchmark_id = metrics_recorder.initialise_benchmark({\"gpu_name\": gpu_name, \"model_id\": model_id})\n        logger.info(f\"running benchmark #{benchmark_id} on {gpu_name} for {model_id}\")\n        metrics_thread = Thread(\n            target=collect_metrics,\n            args=[benchmark_id, continue_metric_collection, metrics_recorder],\n        )\n        metrics_thread.start()\n        logger.info(\"started background thread to fetch device metrics\")\n\n        os.environ[\"TOKENIZERS_PARALLELISM\"] = \"false\"  # silence warnings when compiling\n\n        device = \"cuda\"\n\n        logger.info(\"downloading weights\")\n        # This is to avoid counting download in model load time measurement\n        model = AutoModelForCausalLM.from_pretrained(model_id, torch_dtype=torch.float16)\n        gen_config = GenerationConfig(do_sample=False, top_p=1, temperature=1)\n        logger.info(\"loading model\")\n        start = perf_counter()\n        model = AutoModelForCausalLM.from_pretrained(\n            model_id, torch_dtype=torch.float16, generation_config=gen_config\n        ).eval()\n        model.to(device)\n        torch.cuda.synchronize()\n        end = perf_counter()\n        model_load_time = end - start\n        logger.info(f\"loaded model in: {model_load_time}s\")\n\n        tokenizer = AutoTokenizer.from_pretrained(model_id)\n\n        prompt = \"Why dogs are so cute?\"\n        inputs = tokenizer(prompt, return_tensors=\"pt\").to(device)\n\n        # Specify the max length (including both the prompt and the response)\n        # When calling `generate` with `cache_implementation=\"static\" later, this is also used to create a `StaticCache` object\n        # with sequence length = `max_length`. The longer the more you will re-use it\n        seq_length = inputs[\"input_ids\"].shape[1]\n        model.generation_config.max_length = seq_length + num_tokens_to_generate\n        batch_size = inputs[\"input_ids\"].shape[0]\n\n        # Copied from the gpt-fast repo\n        def multinomial_sample_one_no_sync(probs_sort):  # Does multinomial sampling without a cuda synchronization\n            q = torch.empty_like(probs_sort).exponential_(1)\n            return torch.argmax(probs_sort / q, dim=-1, keepdim=True).to(dtype=torch.int)\n\n        def logits_to_probs(logits, temperature: float = 1.0, top_k: Optional[int] = None):\n            logits = logits / max(temperature, 1e-5)\n\n            if top_k is not None:\n                v, _ = torch.topk(logits, min(top_k, logits.size(-1)))\n                pivot = v.select(-1, -1).unsqueeze(-1)\n                logits = torch.where(logits < pivot, -float(\"Inf\"), logits)\n            probs = torch.nn.functional.softmax(logits, dim=-1)\n            return probs\n\n        def sample(logits, temperature: float = 1.0, top_k: Optional[int] = None):\n            probs = logits_to_probs(logits[:, -1], temperature, top_k)\n            idx_next = multinomial_sample_one_no_sync(probs)\n            return idx_next, probs\n\n        def decode_one_token(model, cur_token, cache_position, past_key_values):\n            logits = model(\n                cur_token,\n                cache_position=cache_position,\n                past_key_values=past_key_values,\n                return_dict=False,\n                use_cache=True,\n            )[0]\n            new_token = sample(logits, temperature=0.6, top_k=5)[0]\n            return new_token\n\n        #########\n        # Eager #\n        #########\n        with torch.no_grad():\n            past_key_values = StaticCache(\n                model.config,\n                max_batch_size=batch_size,\n                device=device,\n                dtype=torch.float16,\n                max_cache_len=seq_length + num_tokens_to_generate,\n            )\n            cache_position = torch.arange(seq_length, device=device)\n            start = perf_counter()\n            model(\n                **inputs,\n                cache_position=cache_position,\n                past_key_values=past_key_values,\n                return_dict=False,\n                use_cache=True,\n            )\n            end = perf_counter()\n            first_eager_fwd_pass_time = end - start\n            logger.info(f\"completed first eager fwd pass in: {first_eager_fwd_pass_time}s\")\n            start = perf_counter()\n            output = model.generate(**inputs, do_sample=False)\n            end = perf_counter()\n            first_eager_generate_time = end - start\n            logger.info(f\"completed first eager generation in: {first_eager_generate_time}s\")\n            logger.info(f\"generated: {tokenizer.batch_decode(output.cpu().tolist())}\")\n\n            past_key_values = StaticCache(\n                model.config,\n                max_batch_size=batch_size,\n                device=device,\n                dtype=torch.float16,\n                max_cache_len=seq_length + num_tokens_to_generate,\n            )\n            cache_position = torch.arange(seq_length, device=device)\n            start = perf_counter()\n            model(\n                **inputs,\n                cache_position=cache_position,\n                past_key_values=past_key_values,\n                return_dict=False,\n                use_cache=True,\n            )\n            end = perf_counter()\n            second_eager_fwd_pass_time = end - start\n            logger.info(f\"completed second eager fwd pass in: {second_eager_fwd_pass_time}s\")\n            start = perf_counter()\n            model.generate(**inputs, do_sample=False)\n            end = perf_counter()\n            second_eager_generate_time = end - start\n            logger.info(f\"completed second eager generation in: {second_eager_generate_time}s\")\n            logger.info(f\"generated: {tokenizer.batch_decode(output.cpu().tolist())}\")\n\n            torch.compiler.reset()\n\n            ################\n            # Forward pass #\n            ################\n\n            # `torch.compile(model, ...)` is not recommended as you compile callbacks\n            # and full generate. We recommend compiling only the forward for now.\n            # \"reduce-overhead\" will use cudagraphs.\n            generated_ids = torch.zeros(\n                (batch_size, num_tokens_to_generate + seq_length), dtype=torch.int, device=device\n            )\n\n            generated_ids[:, :seq_length] = inputs[\"input_ids\"]\n            decode_one_token = torch.compile(decode_one_token, mode=\"reduce-overhead\", fullgraph=True)\n            # model.forward = torch.compile(model.forward, mode=\"reduce-overhead\", fullgraph=True)\n            # TODO use  decode_one_token(model, input_id.clone(), cache_position) for verification\n            past_key_values = StaticCache(\n                model.config,\n                max_batch_size=batch_size,\n                device=device,\n                dtype=torch.float16,\n                max_cache_len=seq_length + num_tokens_to_generate + 10,\n            )\n            cache_position = torch.arange(seq_length, device=device)\n            all_generated_tokens = []\n            ### First compile, prefill\n            start = perf_counter()\n            next_token = decode_one_token(\n                model, inputs[\"input_ids\"], cache_position=cache_position, past_key_values=past_key_values\n            )\n            torch.cuda.synchronize()\n            end = perf_counter()\n            time_to_first_token = end - start\n            logger.info(f\"completed first compile generation in: {time_to_first_token}s\")\n            cache_position += 1\n            all_generated_tokens += next_token.tolist()\n\n            cache_position = torch.tensor([seq_length], device=device)\n            ### First compile, decoding\n            start = perf_counter()\n            next_token = decode_one_token(\n                model, next_token.clone(), cache_position=cache_position, past_key_values=past_key_values\n            )\n            torch.cuda.synchronize()\n            end = perf_counter()\n            time_to_second_token = end - start\n            logger.info(f\"completed second compile generation in: {time_to_second_token}s\")\n            cache_position += 1\n            all_generated_tokens += next_token.tolist()\n\n            ### Second compile, decoding\n            start = perf_counter()\n            next_token = decode_one_token(\n                model, next_token.clone(), cache_position=cache_position, past_key_values=past_key_values\n            )\n            torch.cuda.synchronize()\n            end = perf_counter()\n            time_to_third_token = end - start\n            logger.info(f\"completed third compile forward in: {time_to_third_token}s\")\n            cache_position += 1\n            all_generated_tokens += next_token.tolist()\n\n            ### Using cuda graphs decoding\n\n            start = perf_counter()\n            for _ in range(1, num_tokens_to_generate):\n                all_generated_tokens += next_token.tolist()\n                next_token = decode_one_token(\n                    model, next_token.clone(), cache_position=cache_position, past_key_values=past_key_values\n                )\n                cache_position += 1\n            torch.cuda.synchronize()\n            end = perf_counter()\n            mean_time_to_next_token = (end - start) / num_tokens_to_generate\n            logger.info(f\"completed next compile generation in: {mean_time_to_next_token}s\")\n            logger.info(f\"generated: {tokenizer.batch_decode(all_generated_tokens)}\")\n\n            ####################\n            # Generate compile #\n            ####################\n            torch.compiler.reset()\n            # we will not compile full generate as it' s to intensive, tho we measure full forward!\n\n            past_key_values = StaticCache(\n                model.config,\n                max_batch_size=batch_size,\n                device=device,\n                dtype=torch.float16,\n                max_cache_len=seq_length + 128,\n            )\n\n            # 1st call\n            start = perf_counter()\n            output = model.generate(**inputs, past_key_values=past_key_values)\n            torch.cuda.synchronize()\n            end = perf_counter()\n            first_compile_generate_time = end - start\n            logger.info(f\"completed first compile generation in: {first_compile_generate_time}s\")\n            logger.info(f\"generated: {tokenizer.batch_decode(output.cpu().tolist())}\")\n\n            past_key_values = StaticCache(\n                model.config,\n                max_batch_size=batch_size,\n                device=device,\n                dtype=torch.float16,\n                max_cache_len=seq_length + 128,\n            )\n            # 2nd call\n            start = perf_counter()\n            output = model.generate(**inputs, past_key_values=past_key_values)\n            torch.cuda.synchronize()\n            end = perf_counter()\n            second_compile_generate_time = end - start\n            logger.info(f\"completed second compile generation in: {second_compile_generate_time}s\")\n            logger.info(f\"generated: {tokenizer.batch_decode(output.cpu().tolist())}\")\n\n            past_key_values = StaticCache(\n                model.config,\n                max_batch_size=batch_size,\n                device=device,\n                dtype=torch.float16,\n                max_cache_len=seq_length + 128,\n            )\n\n            # 3rd call\n            start = perf_counter()\n            output = model.generate(**inputs, past_key_values=past_key_values)\n            end = perf_counter()\n            third_compile_generate_time = end - start\n            logger.info(f\"completed third compile generation in: {third_compile_generate_time}s\")\n            logger.info(f\"generated: {tokenizer.batch_decode(output.cpu().tolist())}\")\n\n            past_key_values = StaticCache(\n                model.config,\n                max_batch_size=batch_size,\n                device=device,\n                dtype=torch.float16,\n                max_cache_len=seq_length + 128,\n            )\n            # 4th call\n            start = perf_counter()\n            output = model.generate(**inputs, past_key_values=past_key_values)\n            end = perf_counter()\n            fourth_compile_generate_time = end - start\n            logger.info(f\"completed fourth compile generation in: {fourth_compile_generate_time}s\")\n            logger.info(f\"generated: {tokenizer.batch_decode(output.cpu().tolist())}\")\n\n        metrics_recorder.collect_model_measurements(\n            benchmark_id,\n            {\n                \"model_load_time\": model_load_time,\n                \"first_eager_forward_pass_time_secs\": first_eager_fwd_pass_time,\n                \"second_eager_forward_pass_time_secs\": second_eager_fwd_pass_time,\n                \"first_eager_generate_time_secs\": first_eager_generate_time,\n                \"second_eager_generate_time_secs\": second_eager_generate_time,\n                \"time_to_first_token_secs\": time_to_first_token,\n                \"time_to_second_token_secs\": time_to_second_token,\n                \"time_to_third_token_secs\": time_to_third_token,\n                \"time_to_next_token_mean_secs\": mean_time_to_next_token,\n                \"first_compile_generate_time_secs\": first_compile_generate_time,\n                \"second_compile_generate_time_secs\": second_compile_generate_time,\n                \"third_compile_generate_time_secs\": third_compile_generate_time,\n                \"fourth_compile_generate_time_secs\": fourth_compile_generate_time,\n            },\n        )\n    except Exception as e:\n        logger.error(f\"Caught exception: {e}\")\n    continue_metric_collection.set()\n    if metrics_thread is not None:\n        metrics_thread.join()\n    metrics_recorder.close()\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": "benchmark/optimum_benchmark_wrapper.py", "size": 626, "license": "Apache-2.0", "content_sha": "c43e9a73e3160de938f0181e1d606fe742d5a5ef", "findings": [], "content": "import argparse\nimport subprocess\n\n\ndef main(config_dir, config_name, args):\n    subprocess.run([\"optimum-benchmark\", \"--config-dir\", f\"{config_dir}\", \"--config-name\", f\"{config_name}\"] + [\"hydra/job_logging=disabled\", \"hydra/hydra_logging=disabled\"] + args)\n\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser()\n\n    parser.add_argument(\"--config-dir\", type=str, required=True, help=\"The path to the config directory.\")\n    parser.add_argument(\"--config-name\", type=str, required=True, help=\"The config name.\")\n    args, unknown = parser.parse_known_args()\n\n    main(args.config_dir, args.config_name, unknown)\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": ".devcontainer/README.md", "size": 58, "license": "MIT", "content_sha": "ec3cdb61de7a2a8f1e739c8ac8d5ebf73049eb81", "findings": [], "content": "https://code.visualstudio.com/docs/devcontainers/tutorial\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": ".github/pull_request_template.md", "size": 1473, "license": "MIT", "content_sha": "e2ae0966cda50c728d7f909606d4d5c19081a81b", "findings": [], "content": "### Describe your change:\n\n\n\n* [ ] Add an algorithm?\n* [ ] Fix a bug or typo in an existing algorithm?\n* [ ] Add or change doctests? -- Note: Please avoid changing both code and tests in a single pull request.\n* [ ] Documentation change?\n\n### Checklist:\n* [ ] I have read [CONTRIBUTING.md](https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md).\n* [ ] This pull request is all my own work -- I have not plagiarized.\n* [ ] I know that pull requests will not be merged if they fail the automated tests.\n* [ ] This PR only changes one algorithm file.  To ease review, please open separate PRs for separate algorithms.\n* [ ] All new Python files are placed inside an existing directory.\n* [ ] All filenames are in all lowercase characters with no spaces or dashes.\n* [ ] All functions and variable names follow Python naming conventions.\n* [ ] All function parameters and return values are annotated with Python [type hints](https://docs.python.org/3/library/typing.html).\n* [ ] All functions have [doctests](https://docs.python.org/3/library/doctest.html) that pass the automated testing.\n* [ ] All new algorithms include at least one URL that points to Wikipedia or another similar explanation.\n* [ ] If this pull request resolves one or more open issues then the description above includes the issue number(s) with a [closing keyword](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue): \"Fixes #ISSUE-NUMBER\".\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "CONTRIBUTING.md", "size": 11427, "license": "MIT", "content_sha": "3df39f95b784022ddd0d3d79db100ff6f8f6aa6d", "findings": [], "content": "# Contributing guidelines\n\n## Before contributing\n\nWelcome to [TheAlgorithms/Python](https://github.com/TheAlgorithms/Python)! Before submitting your pull requests, please ensure that you __read the whole guidelines__. If you have any doubts about the contributing guide, please feel free to [state it clearly in an issue](https://github.com/TheAlgorithms/Python/issues/new) or ask the community on [Gitter](https://gitter.im/TheAlgorithms/community).\n\n## Contributing\n\n### Contributor\n\nWe are delighted that you are considering implementing algorithms and data structures for others! This repository is referenced and used by learners from all over the globe. By being one of our contributors, you agree and confirm that:\n\n- You did your work - no plagiarism allowed.\n  - Any plagiarized work will not be merged.\n- Your work will be distributed under [MIT License](LICENSE.md) once your pull request is merged.\n- Your submitted work fulfills or mostly fulfills our styles and standards.\n\n__New implementation__ is welcome! For example, new solutions for a problem, different representations for a graph data structure or algorithm designs with different complexity, but __identical implementation__ of an existing implementation is not allowed. Please check whether the solution is already implemented or not before submitting your pull request.\n\n__Improving comments__ and __writing proper tests__ are also highly welcome.\n\n### Contribution\n\nWe appreciate any contribution, from fixing a grammar mistake in a comment to implementing complex algorithms. Please read this section if you are contributing your work.\n\nYour contribution will be tested by our [automated testing on GitHub Actions](https://github.com/TheAlgorithms/Python/actions) to save time and mental energy.  After you have submitted your pull request, you should see the GitHub Actions tests start to run at the bottom of your submission page. If those tests fail, then click on the ___details___ button to read through the GitHub Actions output to understand the failure.  If you do not understand, please leave a comment on your submission page and a community member will try to help.\n\n#### Issues\n\nIf you are interested in resolving an [open issue](https://github.com/TheAlgorithms/Python/issues), simply make a pull request with your proposed fix. __We do not assign issues in this repo__ so please do not ask for permission to work on an issue.\n\n__Do not__ create an issue to contribute an algorithm. Please submit a pull request instead.\n\nPlease help us keep our issue list small by adding `Fixes #{$ISSUE_NUMBER}` to the description of pull requests that resolve open issues.\nFor example, if your pull request fixes issue #10, then please add the following to its description:\n```\nFixes #10\n```\nGitHub will use this tag to [auto-close the issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue) if and when the PR is merged.\n\n#### What is an Algorithm?\n\nAn Algorithm is one or more functions (or classes) that:\n* take one or more inputs,\n* perform some internal calculations or data manipulations,\n* return one or more outputs,\n* have minimal side effects (Ex. `print()`, `plot()`, `read()`, `write()`).\n\nAlgorithms should be packaged in a way that would make it easy for readers to put them into larger programs.\n\nAlgorithms should:\n* have intuitive class and function names that make their purpose clear to readers\n* use Python naming conventions and intuitive variable names to ease comprehension\n* be flexible to take different input values\n* have Python type hints for their input parameters and return values\n* raise Python exceptions (`ValueError`, etc.) on erroneous input values\n* have docstrings with clear explanations and/or URLs to source materials\n* contain doctests that test both valid and erroneous input values\n* return all calculation results instead of printing or plotting them\n\nAlgorithms in this repo should not be how-to examples for existing Python packages. Instead, they should perform internal calculations or manipulations to convert input values into different output values. Those calculations or manipulations can use data types, classes, or functions of existing Python packages but each algorithm in this repo should add unique value.\n\n#### Pre-commit plugin\nUse [pre-commit](https://pre-commit.com/#installation) to automatically format your code to match our coding style:\n\n```bash\npython3 -m pip install pre-commit  # only required the first time\npre-commit install\n```\nThat's it! The plugin will run every time you commit any changes. If there are any errors found during the run, fix them and commit those changes. You can even run the plugin manually on all files:\n\n```bash\npre-commit run --all-files --show-diff-on-failure\n```\n\n#### Coding Style\n\nWe want your work to be readable by others; therefore, we encourage you to note the following:\n\n- Please write in Python 3.13+. For instance: `print()` is a function in Python 3 so `print \"Hello\"` will *not* work but `print(\"Hello\")` will.\n- Please focus hard on the naming of functions, classes, and variables.  Help your reader by using __descriptive names__ that can help you to remove redundant comments.\n  - Single letter variable names are *old school* so please avoid them unless their life only spans a few lines.\n  - Expand acronyms because `gcd()` is hard to understand but `greatest_common_divisor()` is not.\n  - Please follow the [Python Naming Conventions](https://pep8.org/#prescriptive-naming-conventions) so variable_names and function_names should be lower_case, CONSTANTS in UPPERCASE, ClassNames should be CamelCase, etc.\n\n- We encourage the use of Python [f-strings](https://realpython.com/python-f-strings/#f-strings-a-new-and-improved-way-to-format-strings-in-python) where they make the code easier to read.\n\n- Please consider running [__psf/black__](https://github.com/python/black) on your Python file(s) before submitting your pull request.  This is not yet a requirement but it does make your code more readable and automatically aligns it with much of [PEP 8](https://www.python.org/dev/peps/pep-0008/). There are other code formatters (autopep8, yapf) but the __black__ formatter is now hosted by the Python Software Foundation. To use it,\n\n  ```bash\n  python3 -m pip install black  # only required the first time\n  black .\n  ```\n\n- All submissions will need to pass the test `ruff .` before they will be accepted so if possible, try this test locally on your Python file(s) before submitting your pull request.\n\n  ```bash\n  python3 -m pip install ruff  # only required the first time\n  ruff check\n  ```\n\n- Original code submission require docstrings or comments to describe your work.\n\n- More on docstrings and comments:\n\n  If you used a Wikipedia article or some other source material to create your algorithm, please add the URL in a docstring or comment to help your reader.\n\n  The following are considered to be bad and may be requested to be improved:\n\n  ```python\n  x = x + 2\t# increased by 2\n  ```\n\n  This is too trivial. Comments are expected to be explanatory. For comments, you can write them above, on or below a line of code, as long as you are consistent within the same piece of code.\n\n  We encourage you to put docstrings inside your functions but please pay attention to the indentation of docstrings. The following is a good example:\n\n  ```python\n  def sum_ab(a, b):\n      \"\"\"\n      Return the sum of two integers a and b.\n      \"\"\"\n      return a + b\n  ```\n\n- Write tests (especially [__doctests__](https://docs.python.org/3/library/doctest.html)) to illustrate and verify your work.  We highly encourage the use of _doctests on all functions_.\n\n  ```python\n  def sum_ab(a, b):\n      \"\"\"\n      Return the sum of two integers a and b\n      >>> sum_ab(2, 2)\n      4\n      >>> sum_ab(-2, 3)\n      1\n      >>> sum_ab(4.9, 5.1)\n      10.0\n      \"\"\"\n      return a + b\n  ```\n\n  These doctests will be run by pytest as part of our automated testing so please try to run your doctests locally and make sure that they are found and pass:\n\n  ```bash\n  python3 -m doctest -v my_submission.py\n  ```\n\n  The use of the Python built-in `input()` function is __not__ encouraged:\n\n  ```python\n  input('Enter your input:')\n  # Or even worse...\n  input = eval(input(\"Enter your input: \"))\n  ```\n\n  However, if your code uses `input()` then we encourage you to gracefully deal with leading and trailing whitespace in user input by adding `.strip()` as in:\n\n  ```python\n  starting_value = int(input(\"Please enter a starting value: \").strip())\n  ```\n\n  The use of [Python type hints](https://docs.python.org/3/library/typing.html) is encouraged for function parameters and return values.  Our automated testing will run [mypy](http://mypy-lang.org) so run that locally before making your submission.\n\n  ```python\n  def sum_ab(a: int, b: int) -> int:\n      return a + b\n  ```\n\n  Instructions on how to install mypy can be found [here](https://github.com/python/mypy). Please use the command `mypy --ignore-missing-imports .` to test all files or `mypy --ignore-missing-imports path/to/file.py` to test a specific file.\n\n- [__List comprehensions and generators__](https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions) are preferred over the use of `lambda`, `map`, `filter`, `reduce` but the important thing is to demonstrate the power of Python in code that is easy to read and maintain.\n\n- Avoid importing external libraries for basic algorithms. Only use those libraries for complicated algorithms.\n- If you need a third-party module that is not in the file __requirements.txt__, please add it to that file as part of your submission.\n\n#### Other Requirements for Submissions\n- If you are submitting code in the `project_euler/` directory, please also read [the dedicated Guideline](https://github.com/TheAlgorithms/Python/blob/master/project_euler/README.md) before contributing to our Project Euler library.\n- The file extension for code files should be `.py`. Jupyter Notebooks should be submitted to [TheAlgorithms/Jupyter](https://github.com/TheAlgorithms/Jupyter).\n- Strictly use snake_case (underscore_separated) in your file_name, as it will be easy to parse in future using scripts.\n- Please avoid creating new directories if at all possible. Try to fit your work into the existing directory structure.\n- If possible, follow the standard *within* the folder you are submitting to.\n- If you have modified/added code work, make sure the code compiles before submitting.\n- If you have modified/added documentation work, ensure your language is concise and contains no grammar errors.\n- Do not update the README.md or DIRECTORY.md file which will be periodically autogenerated by our GitHub Actions processes.\n- Add a corresponding explanation to [Algorithms-Explanation](https://github.com/TheAlgorithms/Algorithms-Explanation) (Optional but recommended).\n- All submissions will be tested with [__mypy__](http://www.mypy-lang.org) so we encourage you to add [__Python type hints__](https://docs.python.org/3/library/typing.html) where it makes sense to do so.\n\n- Most importantly,\n  - __Be consistent in the use of these guidelines when submitting.__\n  - __Join__ us on [Discord](https://discord.com/invite/c7MnfGFGa6) and [Gitter](https://gitter.im/TheAlgorithms/community) __now!__\n  - Happy coding!\n\nWriter [@poyea](https://github.com/poyea), Jun 2019.\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": "benchmark/requirements.txt", "size": 69, "license": "Apache-2.0", "content_sha": "50e9dfaddfa4cab8bea5b51561198d47d14c3b35", "findings": [], "content": "gpustat==1.1.1\npsutil==6.0.0\npsycopg2==2.9.9\ntorch>=2.4.0\nhf_transfer"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "DIRECTORY.md", "size": 68837, "license": "MIT", "content_sha": "fa731e32ff237c6449fd0fe6c9c3671475951f4e", "findings": [], "content": "\n## Audio Filters\n  * [Butterworth Filter](audio_filters/butterworth_filter.py)\n  * [Iir Filter](audio_filters/iir_filter.py)\n  * [Show Response](audio_filters/show_response.py)\n\n## Backtracking\n  * [All Combinations](backtracking/all_combinations.py)\n  * [All Permutations](backtracking/all_permutations.py)\n  * [All Subsequences](backtracking/all_subsequences.py)\n  * [Coloring](backtracking/coloring.py)\n  * [Combination Sum](backtracking/combination_sum.py)\n  * [Crossword Puzzle Solver](backtracking/crossword_puzzle_solver.py)\n  * [Generate Parentheses](backtracking/generate_parentheses.py)\n  * [Hamiltonian Cycle](backtracking/hamiltonian_cycle.py)\n  * [Knight Tour](backtracking/knight_tour.py)\n  * [Match Word Pattern](backtracking/match_word_pattern.py)\n  * [Minimax](backtracking/minimax.py)\n  * [N Queens](backtracking/n_queens.py)\n  * [N Queens Math](backtracking/n_queens_math.py)\n  * [Power Sum](backtracking/power_sum.py)\n  * [Rat In Maze](backtracking/rat_in_maze.py)\n  * [Sudoku](backtracking/sudoku.py)\n  * [Sum Of Subsets](backtracking/sum_of_subsets.py)\n  * [Word Break](backtracking/word_break.py)\n  * [Word Ladder](backtracking/word_ladder.py)\n  * [Word Search](backtracking/word_search.py)\n\n## Bit Manipulation\n  * [Binary And Operator](bit_manipulation/binary_and_operator.py)\n  * [Binary Coded Decimal](bit_manipulation/binary_coded_decimal.py)\n  * [Binary Count Setbits](bit_manipulation/binary_count_setbits.py)\n  * [Binary Count Trailing Zeros](bit_manipulation/binary_count_trailing_zeros.py)\n  * [Binary Or Operator](bit_manipulation/binary_or_operator.py)\n  * [Binary Shifts](bit_manipulation/binary_shifts.py)\n  * [Binary Twos Complement](bit_manipulation/binary_twos_complement.py)\n  * [Binary Xor Operator](bit_manipulation/binary_xor_operator.py)\n  * [Bitwise Addition Recursive](bit_manipulation/bitwise_addition_recursive.py)\n  * [Count 1S Brian Kernighan Method](bit_manipulation/count_1s_brian_kernighan_method.py)\n  * [Count Number Of One Bits](bit_manipulation/count_number_of_one_bits.py)\n  * [Excess 3 Code](bit_manipulation/excess_3_code.py)\n  * [Find Previous Power Of Two](bit_manipulation/find_previous_power_of_two.py)\n  * [Find Unique Number](bit_manipulation/find_unique_number.py)\n  * [Gray Code Sequence](bit_manipulation/gray_code_sequence.py)\n  * [Highest Set Bit](bit_manipulation/highest_set_bit.py)\n  * [Index Of Rightmost Set Bit](bit_manipulation/index_of_rightmost_set_bit.py)\n  * [Is Even](bit_manipulation/is_even.py)\n  * [Is Power Of Two](bit_manipulation/is_power_of_two.py)\n  * [Largest Pow Of Two Le Num](bit_manipulation/largest_pow_of_two_le_num.py)\n  * [Missing Number](bit_manipulation/missing_number.py)\n  * [Numbers Different Signs](bit_manipulation/numbers_different_signs.py)\n  * [Power Of 4](bit_manipulation/power_of_4.py)\n  * [Reverse Bits](bit_manipulation/reverse_bits.py)\n  * [Single Bit Manipulation Operations](bit_manipulation/single_bit_manipulation_operations.py)\n  * [Swap All Odd And Even Bits](bit_manipulation/swap_all_odd_and_even_bits.py)\n\n## Blockchain\n  * [Diophantine Equation](blockchain/diophantine_equation.py)\n\n## Boolean Algebra\n  * [And Gate](boolean_algebra/and_gate.py)\n  * [Imply Gate](boolean_algebra/imply_gate.py)\n  * [Karnaugh Map Simplification](boolean_algebra/karnaugh_map_simplification.py)\n  * [Multiplexer](boolean_algebra/multiplexer.py)\n  * [Nand Gate](boolean_algebra/nand_gate.py)\n  * [Nimply Gate](boolean_algebra/nimply_gate.py)\n  * [Nor Gate](boolean_algebra/nor_gate.py)\n  * [Not Gate](boolean_algebra/not_gate.py)\n  * [Or Gate](boolean_algebra/or_gate.py)\n  * [Quine Mc Cluskey](boolean_algebra/quine_mc_cluskey.py)\n  * [Xnor Gate](boolean_algebra/xnor_gate.py)\n  * [Xor Gate](boolean_algebra/xor_gate.py)\n\n## Cellular Automata\n  * [Conways Game Of Life](cellular_automata/conways_game_of_life.py)\n  * [Game Of Life](cellular_automata/game_of_life.py)\n  * [Langtons Ant](cellular_automata/langtons_ant.py)\n  * [Nagel Schrekenberg](cellular_automata/nagel_schrekenberg.py)\n  * [One Dimensional](cellular_automata/one_dimensional.py)\n  * [Wa Tor](cellular_automata/wa_tor.py)\n\n## Ciphers\n  * [A1Z26](ciphers/a1z26.py)\n  * [Affine Cipher](ciphers/affine_cipher.py)\n  * [Atbash](ciphers/atbash.py)\n  * [Autokey](ciphers/autokey.py)\n  * [Baconian Cipher](ciphers/baconian_cipher.py)\n  * [Base16](ciphers/base16.py)\n  * [Base32](ciphers/base32.py)\n  * [Base64 Cipher](ciphers/base64_cipher.py)\n  * [Base85](ciphers/base85.py)\n  * [Beaufort Cipher](ciphers/beaufort_cipher.py)\n  * [Bifid](ciphers/bifid.py)\n  * [Brute Force Caesar Cipher](ciphers/brute_force_caesar_cipher.py)\n  * [Caesar Cipher](ciphers/caesar_cipher.py)\n  * [Cryptomath Module](ciphers/cryptomath_module.py)\n  * [Decrypt Caesar With Chi Squared](ciphers/decrypt_caesar_with_chi_squared.py)\n  * [Deterministic Miller Rabin](ciphers/deterministic_miller_rabin.py)\n  * [Diffie](ciphers/diffie.py)\n  * [Diffie Hellman](ciphers/diffie_hellman.py)\n  * [Elgamal Key Generator](ciphers/elgamal_key_generator.py)\n  * [Enigma Machine2](ciphers/enigma_machine2.py)\n  * [Fractionated Morse Cipher](ciphers/fractionated_morse_cipher.py)\n  * [Gronsfeld Cipher](ciphers/gronsfeld_cipher.py)\n  * [Hill Cipher](ciphers/hill_cipher.py)\n  * [Mixed Keyword Cypher](ciphers/mixed_keyword_cypher.py)\n  * [Mono Alphabetic Ciphers](ciphers/mono_alphabetic_ciphers.py)\n  * [Morse Code](ciphers/morse_code.py)\n  * [Onepad Cipher](ciphers/onepad_cipher.py)\n  * [Permutation Cipher](ciphers/permutation_cipher.py)\n  * [Playfair Cipher](ciphers/playfair_cipher.py)\n  * [Polybius](ciphers/polybius.py)\n  * [Porta Cipher](ciphers/porta_cipher.py)\n  * [Rabin Miller](ciphers/rabin_miller.py)\n  * [Rail Fence Cipher](ciphers/rail_fence_cipher.py)\n  * [Rot13](ciphers/rot13.py)\n  * [Rsa Cipher](ciphers/rsa_cipher.py)\n  * [Rsa Factorization](ciphers/rsa_factorization.py)\n  * [Rsa Key Generator](ciphers/rsa_key_generator.py)\n  * [Running Key Cipher](ciphers/running_key_cipher.py)\n  * [Shuffled Shift Cipher](ciphers/shuffled_shift_cipher.py)\n  * [Simple Keyword Cypher](ciphers/simple_keyword_cypher.py)\n  * [Simple Substitution Cipher](ciphers/simple_substitution_cipher.py)\n  * [Transposition Cipher](ciphers/transposition_cipher.py)\n  * [Transposition Cipher Encrypt Decrypt File](ciphers/transposition_cipher_encrypt_decrypt_file.py)\n  * [Trifid Cipher](ciphers/trifid_cipher.py)\n  * [Vernam Cipher](ciphers/vernam_cipher.py)\n  * [Vigenere Cipher](ciphers/vigenere_cipher.py)\n  * [Xor Cipher](ciphers/xor_cipher.py)\n\n## Compression\n  * [Burrows Wheeler](compression/burrows_wheeler.py)\n  * [Huffman](compression/huffman.py)\n  * [Lempel Ziv](compression/lempel_ziv.py)\n  * [Lempel Ziv Decompress](compression/lempel_ziv_decompress.py)\n  * [Lz77](compression/lz77.py)\n  * [Peak Signal To Noise Ratio](compression/peak_signal_to_noise_ratio.py)\n  * [Run Length Encoding](compression/run_length_encoding.py)\n\n## Computer Vision\n  * [Cnn Classification](computer_vision/cnn_classification.py)\n  * [Flip Augmentation](computer_vision/flip_augmentation.py)\n  * [Haralick Descriptors](computer_vision/haralick_descriptors.py)\n  * [Harris Corner](computer_vision/harris_corner.py)\n  * [Horn Schunck](computer_vision/horn_schunck.py)\n  * [Intensity Based Segmentation](computer_vision/intensity_based_segmentation.py)\n  * [Mean Threshold](computer_vision/mean_threshold.py)\n  * [Mosaic Augmentation](computer_vision/mosaic_augmentation.py)\n  * [Pooling Functions](computer_vision/pooling_functions.py)\n\n## Conversions\n  * [Astronomical Length Scale Conversion](conversions/astronomical_length_scale_conversion.py)\n  * [Binary To Decimal](conversions/binary_to_decimal.py)\n  * [Binary To Hexadecimal](conversions/binary_to_hexadecimal.py)\n  * [Binary To Octal](conversions/binary_to_octal.py)\n  * [Convert Number To Words](conversions/convert_number_to_words.py)\n  * [Decimal To Any](conversions/decimal_to_any.py)\n  * [Decimal To Binary](conversions/decimal_to_binary.py)\n  * [Decimal To Hexadecimal](conversions/decimal_to_hexadecimal.py)\n  * [Decimal To Octal](conversions/decimal_to_octal.py)\n  * [Energy Conversions](conversions/energy_conversions.py)\n  * [Excel Title To Column](conversions/excel_title_to_column.py)\n  * [Hex To Bin](conversions/hex_to_bin.py)\n  * [Hexadecimal To Decimal](conversions/hexadecimal_to_decimal.py)\n  * [Ipv4 Conversion](conversions/ipv4_conversion.py)\n  * [Length Conversion](conversions/length_conversion.py)\n  * [Molecular Chemistry](conversions/molecular_chemistry.py)\n  * [Octal To Binary](conversions/octal_to_binary.py)\n  * [Octal To Decimal](conversions/octal_to_decimal.py)\n  * [Octal To Hexadecimal](conversions/octal_to_hexadecimal.py)\n  * [Prefix Conversions](conversions/prefix_conversions.py)\n  * [Prefix Conversions String](conversions/prefix_conversions_string.py)\n  * [Pressure Conversions](conversions/pressure_conversions.py)\n  * [Rectangular To Polar](conversions/rectangular_to_polar.py)\n  * [Rgb Cmyk Conversion](conversions/rgb_cmyk_conversion.py)\n  * [Rgb Hsv Conversion](conversions/rgb_hsv_conversion.py)\n  * [Roman Numerals](conversions/roman_numerals.py)\n  * [Speed Conversions](conversions/speed_conversions.py)\n  * [Temperature Conversions](conversions/temperature_conversions.py)\n  * [Time Conversions](conversions/time_conversions.py)\n  * [Volume Conversions](conversions/volume_conversions.py)\n  * [Weight Conversion](conversions/weight_conversion.py)\n\n## Data Structures\n  * Arrays\n    * [Equilibrium Index In Array](data_structures/arrays/equilibrium_index_in_array.py)\n    * [Find Triplets With 0 Sum](data_structures/arrays/find_triplets_with_0_sum.py)\n    * [Index 2D Array In 1D](data_structures/arrays/index_2d_array_in_1d.py)\n    * [Kth Largest Element](data_structures/arrays/kth_largest_element.py)\n    * [Median Two Array](data_structures/arrays/median_two_array.py)\n    * [Monotonic Array](data_structures/arrays/monotonic_array.py)\n    * [Pairs With Given Sum](data_structures/arrays/pairs_with_given_sum.py)\n    * [Permutations](data_structures/arrays/permutations.py)\n    * [Prefix Sum](data_structures/arrays/prefix_sum.py)\n    * [Product Sum](data_structures/arrays/product_sum.py)\n    * [Sparse Table](data_structures/arrays/sparse_table.py)\n    * [Sudoku Solver](data_structures/arrays/sudoku_solver.py)\n  * Binary Tree\n    * [Avl Tree](data_structures/binary_tree/avl_tree.py)\n    * [Basic Binary Tree](data_structures/binary_tree/basic_binary_tree.py)\n    * [Binary Search Tree](data_structures/binary_tree/binary_search_tree.py)\n    * [Binary Search Tree Recursive](data_structures/binary_tree/binary_search_tree_recursive.py)\n    * [Binary Tree Mirror](data_structures/binary_tree/binary_tree_mirror.py)\n    * [Binary Tree Node Sum](data_structures/binary_tree/binary_tree_node_sum.py)\n    * [Binary Tree Path Sum](data_structures/binary_tree/binary_tree_path_sum.py)\n    * [Binary Tree Traversals](data_structures/binary_tree/binary_tree_traversals.py)\n    * [Diameter Of Binary Tree](data_structures/binary_tree/diameter_of_binary_tree.py)\n    * [Diff Views Of Binary Tree](data_structures/binary_tree/diff_views_of_binary_tree.py)\n    * [Distribute Coins](data_structures/binary_tree/distribute_coins.py)\n    * [Fenwick Tree](data_structures/binary_tree/fenwick_tree.py)\n    * [Flatten Binarytree To Linkedlist](data_structures/binary_tree/flatten_binarytree_to_linkedlist.py)\n    * [Floor And Ceiling](data_structures/binary_tree/floor_and_ceiling.py)\n    * [Inorder Tree Traversal 2022](data_structures/binary_tree/inorder_tree_traversal_2022.py)\n    * [Is Sorted](data_structures/binary_tree/is_sorted.py)\n    * [Is Sum Tree](data_structures/binary_tree/is_sum_tree.py)\n    * [Lazy Segment Tree](data_structures/binary_tree/lazy_segment_tree.py)\n    * [Lowest Common Ancestor](data_structures/binary_tree/lowest_common_ancestor.py)\n    * [Maximum Fenwick Tree](data_structures/binary_tree/maximum_fenwick_tree.py)\n    * [Maximum Sum Bst](data_structures/binary_tree/maximum_sum_bst.py)\n    * [Merge Two Binary Trees](data_structures/binary_tree/merge_two_binary_trees.py)\n    * [Mirror Binary Tree](data_structures/binary_tree/mirror_binary_tree.py)\n    * [Non Recursive Segment Tree](data_structures/binary_tree/non_recursive_segment_tree.py)\n    * [Number Of Possible Binary Trees](data_structures/binary_tree/number_of_possible_binary_trees.py)\n    * [Red Black Tree](data_structures/binary_tree/red_black_tree.py)\n    * [Segment Tree](data_structures/binary_tree/segment_tree.py)\n    * [Segment Tree Other](data_structures/binary_tree/segment_tree_other.py)\n    * [Serialize Deserialize Binary Tree](data_structures/binary_tree/serialize_deserialize_binary_tree.py)\n    * [Symmetric Tree](data_structures/binary_tree/symmetric_tree.py)\n    * [Treap](data_structures/binary_tree/treap.py)\n    * [Wavelet Tree](data_structures/binary_tree/wavelet_tree.py)\n  * Disjoint Set\n    * [Alternate Disjoint Set](data_structures/disjoint_set/alternate_disjoint_set.py)\n    * [Disjoint Set](data_structures/disjoint_set/disjoint_set.py)\n  * Hashing\n    * [Bloom Filter](data_structures/hashing/bloom_filter.py)\n    * [Double Hash](data_structures/hashing/double_hash.py)\n    * [Hash Map](data_structures/hashing/hash_map.py)\n    * [Hash Table](data_structures/hashing/hash_table.py)\n    * [Hash Table With Linked List](data_structures/hashing/hash_table_with_linked_list.py)\n    * Number Theory\n      * [Prime Numbers](data_structures/hashing/number_theory/prime_numbers.py)\n    * [Quadratic Probing](data_structures/hashing/quadratic_probing.py)\n    * Tests\n      * [Test Hash Map](data_structures/hashing/tests/test_hash_map.py)\n  * Heap\n    * [Binomial Heap](data_structures/heap/binomial_heap.py)\n    * [Heap](data_structures/heap/heap.py)\n    * [Heap Generic](data_structures/heap/heap_generic.py)\n    * [Max Heap](data_structures/heap/max_heap.py)\n    * [Min Heap](data_structures/heap/min_heap.py)\n    * [Randomized Heap](data_structures/heap/randomized_heap.py)\n    * [Skew Heap](data_structures/heap/skew_heap.py)\n  * Kd Tree\n    * [Build Kdtree](data_structures/kd_tree/build_kdtree.py)\n    * Example\n      * [Example Usage](data_structures/kd_tree/example/example_usage.py)\n      * [Hypercube Points](data_structures/kd_tree/example/hypercube_points.py)\n    * [Kd Node](data_structures/kd_tree/kd_node.py)\n    * [Nearest Neighbour Search](data_structures/kd_tree/nearest_neighbour_search.py)\n    * Tests\n      * [Test Kdtree](data_structures/kd_tree/tests/test_kdtree.py)\n  * Linked List\n    * [Circular Linked List](data_structures/linked_list/circular_linked_list.py)\n    * [Deque Doubly](data_structures/linked_list/deque_doubly.py)\n    * [Doubly Linked List](data_structures/linked_list/doubly_linked_list.py)\n    * [Doubly Linked List Two](data_structures/linked_list/doubly_linked_list_two.py)\n    * [Floyds Cycle Detection](data_structures/linked_list/floyds_cycle_detection.py)\n    * [From Sequence](data_structures/linked_list/from_sequence.py)\n    * [Has Loop](data_structures/linked_list/has_loop.py)\n    * [Is Palindrome](data_structures/linked_list/is_palindrome.py)\n    * [Merge Two Lists](data_structures/linked_list/merge_two_lists.py)\n    * [Middle Element Of Linked List](data_structures/linked_list/middle_element_of_linked_list.py)\n    * [Print Reverse](data_structures/linked_list/print_reverse.py)\n    * [Reverse K Group](data_structures/linked_list/reverse_k_group.py)\n    * [Rotate To The Right](data_structures/linked_list/rotate_to_the_right.py)\n    * [Singly Linked List](data_structures/linked_list/singly_linked_list.py)\n    * [Skip List](data_structures/linked_list/skip_list.py)\n    * [Swap Nodes](data_structures/linked_list/swap_nodes.py)\n  * Queues\n    * [Circular Queue](data_structures/queues/circular_queue.py)\n    * [Circular Queue Linked List](data_structures/queues/circular_queue_linked_list.py)\n    * [Double Ended Queue](data_structures/queues/double_ended_queue.py)\n    * [Linked Queue](data_structures/queues/linked_queue.py)\n    * [Priority Queue Using List](data_structures/queues/priority_queue_using_list.py)\n    * [Queue By List](data_structures/queues/queue_by_list.py)\n    * [Queue By Two Stacks](data_structures/queues/queue_by_two_stacks.py)\n    * [Queue On Pseudo Stack](data_structures/queues/queue_on_pseudo_stack.py)\n  * Stacks\n    * [Balanced Parentheses](data_structures/stacks/balanced_parentheses.py)\n    * [Dijkstras Two Stack Algorithm](data_structures/stacks/dijkstras_two_stack_algorithm.py)\n    * [Infix To Postfix Conversion](data_structures/stacks/infix_to_postfix_conversion.py)\n    * [Infix To Prefix Conversion](data_structures/stacks/infix_to_prefix_conversion.py)\n    * [Largest Rectangle Histogram](data_structures/stacks/largest_rectangle_histogram.py)\n    * [Lexicographical Numbers](data_structures/stacks/lexicographical_numbers.py)\n    * [Next Greater Element](data_structures/stacks/next_greater_element.py)\n    * [Postfix Evaluation](data_structures/stacks/postfix_evaluation.py)\n    * [Prefix Evaluation](data_structures/stacks/prefix_evaluation.py)\n    * [Stack](data_structures/stacks/stack.py)\n    * [Stack Using Two Queues](data_structures/stacks/stack_using_two_queues.py)\n    * [Stack With Doubly Linked List](data_structures/stacks/stack_with_doubly_linked_list.py)\n    * [Stack With Singly Linked List](data_structures/stacks/stack_with_singly_linked_list.py)\n    * [Stock Span Problem](data_structures/stacks/stock_span_problem.py)\n  * Suffix Tree\n    * Example\n      * [Example Usage](data_structures/suffix_tree/example/example_usage.py)\n    * [Suffix Tree](data_structures/suffix_tree/suffix_tree.py)\n    * [Suffix Tree Node](data_structures/suffix_tree/suffix_tree_node.py)\n    * Tests\n      * [Test Suffix Tree](data_structures/suffix_tree/tests/test_suffix_tree.py)\n  * Trie\n    * [Radix Tree](data_structures/trie/radix_tree.py)\n    * [Trie](data_structures/trie/trie.py)\n\n## Digital Image Processing\n  * [Change Brightness](digital_image_processing/change_brightness.py)\n  * [Change Contrast](digital_image_processing/change_contrast.py)\n  * [Convert To Negative](digital_image_processing/convert_to_negative.py)\n  * Dithering\n    * [Burkes](digital_image_processing/dithering/burkes.py)\n  * Edge Detection\n    * [Canny](digital_image_processing/edge_detection/canny.py)\n  * Filters\n    * [Bilateral Filter](digital_image_processing/filters/bilateral_filter.py)\n    * [Convolve](digital_image_processing/filters/convolve.py)\n    * [Gabor Filter](digital_image_processing/filters/gabor_filter.py)\n    * [Gaussian Filter](digital_image_processing/filters/gaussian_filter.py)\n    * [Laplacian Filter](digital_image_processing/filters/laplacian_filter.py)\n    * [Local Binary Pattern](digital_image_processing/filters/local_binary_pattern.py)\n    * [Median Filter](digital_image_processing/filters/median_filter.py)\n    * [Sobel Filter](digital_image_processing/filters/sobel_filter.py)\n  * Histogram Equalization\n    * [Histogram Stretch](digital_image_processing/histogram_equalization/histogram_stretch.py)\n  * [Index Calculation](digital_image_processing/index_calculation.py)\n  * Morphological Operations\n    * [Dilation Operation](digital_image_processing/morphological_operations/dilation_operation.py)\n    * [Erosion Operation](digital_image_processing/morphological_operations/erosion_operation.py)\n  * Resize\n    * [Resize](digital_image_processing/resize/resize.py)\n  * Rotation\n    * [Rotation](digital_image_processing/rotation/rotation.py)\n  * [Sepia](digital_image_processing/sepia.py)\n  * [Test Digital Image Processing](digital_image_processing/test_digital_image_processing.py)\n\n## Divide And Conquer\n  * [Closest Pair Of Points](divide_and_conquer/closest_pair_of_points.py)\n  * [Convex Hull](divide_and_conquer/convex_hull.py)\n  * [Heaps Algorithm](divide_and_conquer/heaps_algorithm.py)\n  * [Heaps Algorithm Iterative](divide_and_conquer/heaps_algorithm_iterative.py)\n  * [Inversions](divide_and_conquer/inversions.py)\n  * [Kth Order Statistic](divide_and_conquer/kth_order_statistic.py)\n  * [Max Difference Pair](divide_and_conquer/max_difference_pair.py)\n  * [Max Subarray](divide_and_conquer/max_subarray.py)\n  * [Mergesort](divide_and_conquer/mergesort.py)\n  * [Peak](divide_and_conquer/peak.py)\n  * [Power](divide_and_conquer/power.py)\n  * [Strassen Matrix Multiplication](divide_and_conquer/strassen_matrix_multiplication.py)\n\n## Docs\n  * [Conf](docs/conf.py)\n\n## Dynamic Programming\n  * [Abbreviation](dynamic_programming/abbreviation.py)\n  * [All Construct](dynamic_programming/all_construct.py)\n  * [Bitmask](dynamic_programming/bitmask.py)\n  * [Catalan Numbers](dynamic_programming/catalan_numbers.py)\n  * [Climbing Stairs](dynamic_programming/climbing_stairs.py)\n  * [Combination Sum Iv](dynamic_programming/combination_sum_iv.py)\n  * [Edit Distance](dynamic_programming/edit_distance.py)\n  * [Factorial](dynamic_programming/factorial.py)\n  * [Fast Fibonacci](dynamic_programming/fast_fibonacci.py)\n  * [Fibonacci](dynamic_programming/fibonacci.py)\n  * [Fizz Buzz](dynamic_programming/fizz_buzz.py)\n  * [Floyd Warshall](dynamic_programming/floyd_warshall.py)\n  * [Integer Partition](dynamic_programming/integer_partition.py)\n  * [Iterating Through Submasks](dynamic_programming/iterating_through_submasks.py)\n  * [K Means Clustering Tensorflow](dynamic_programming/k_means_clustering_tensorflow.py)\n  * [Knapsack](dynamic_programming/knapsack.py)\n  * [Largest Divisible Subset](dynamic_programming/largest_divisible_subset.py)\n  * [Longest Common Subsequence](dynamic_programming/longest_common_subsequence.py)\n  * [Longest Common Substring](dynamic_programming/longest_common_substring.py)\n  * [Longest Increasing Subsequence](dynamic_programming/longest_increasing_subsequence.py)\n  * [Longest Increasing Subsequence Iterative](dynamic_programming/longest_increasing_subsequence_iterative.py)\n  * [Longest Increasing Subsequence O Nlogn](dynamic_programming/longest_increasing_subsequence_o_nlogn.py)\n  * [Longest Palindromic Subsequence](dynamic_programming/longest_palindromic_subsequence.py)\n  * [Matrix Chain Multiplication](dynamic_programming/matrix_chain_multiplication.py)\n  * [Matrix Chain Order](dynamic_programming/matrix_chain_order.py)\n  * [Max Non Adjacent Sum](dynamic_programming/max_non_adjacent_sum.py)\n  * [Max Product Subarray](dynamic_programming/max_product_subarray.py)\n  * [Max Subarray Sum](dynamic_programming/max_subarray_sum.py)\n  * [Min Distance Up Bottom](dynamic_programming/min_distance_up_bottom.py)\n  * [Minimum Coin Change](dynamic_programming/minimum_coin_change.py)\n  * [Minimum Cost Path](dynamic_programming/minimum_cost_path.py)\n  * [Minimum Partition](dynamic_programming/minimum_partition.py)\n  * [Minimum Size Subarray Sum](dynamic_programming/minimum_size_subarray_sum.py)\n  * [Minimum Squares To Represent A Number](dynamic_programming/minimum_squares_to_represent_a_number.py)\n  * [Minimum Steps To One](dynamic_programming/minimum_steps_to_one.py)\n  * [Minimum Tickets Cost](dynamic_programming/minimum_tickets_cost.py)\n  * [Optimal Binary Search Tree](dynamic_programming/optimal_binary_search_tree.py)\n  * [Palindrome Partitioning](dynamic_programming/palindrome_partitioning.py)\n  * [Range Sum Query](dynamic_programming/range_sum_query.py)\n  * [Regex Match](dynamic_programming/regex_match.py)\n  * [Rod Cutting](dynamic_programming/rod_cutting.py)\n  * [Smith Waterman](dynamic_programming/smith_waterman.py)\n  * [Subset Generation](dynamic_programming/subset_generation.py)\n  * [Sum Of Subset](dynamic_programming/sum_of_subset.py)\n  * [Trapped Water](dynamic_programming/trapped_water.py)\n  * [Tribonacci](dynamic_programming/tribonacci.py)\n  * [Viterbi](dynamic_programming/viterbi.py)\n  * [Wildcard Matching](dynamic_programming/wildcard_matching.py)\n  * [Word Break](dynamic_programming/word_break.py)\n\n## Electronics\n  * [Apparent Power](electronics/apparent_power.py)\n  * [Builtin Voltage](electronics/builtin_voltage.py)\n  * [Capacitor Equivalence](electronics/capacitor_equivalence.py)\n  * [Carrier Concentration](electronics/carrier_concentration.py)\n  * [Charging Capacitor](electronics/charging_capacitor.py)\n  * [Charging Inductor](electronics/charging_inductor.py)\n  * [Circular Convolution](electronics/circular_convolution.py)\n  * [Coulombs Law](electronics/coulombs_law.py)\n  * [Electric Conductivity](electronics/electric_conductivity.py)\n  * [Electric Power](electronics/electric_power.py)\n  * [Electrical Impedance](electronics/electrical_impedance.py)\n  * [Ic 555 Timer](electronics/ic_555_timer.py)\n  * [Ind Reactance](electronics/ind_reactance.py)\n  * [Ohms Law](electronics/ohms_law.py)\n  * [Real And Reactive Power](electronics/real_and_reactive_power.py)\n  * [Resistor Color Code](electronics/resistor_color_code.py)\n  * [Resistor Equivalence](electronics/resistor_equivalence.py)\n  * [Resonant Frequency](electronics/resonant_frequency.py)\n  * [Wheatstone Bridge](electronics/wheatstone_bridge.py)\n\n## File Transfer\n  * [Receive File](file_transfer/receive_file.py)\n  * [Send File](file_transfer/send_file.py)\n  * Tests\n    * [Test Send File](file_transfer/tests/test_send_file.py)\n\n## Financial\n  * [Equated Monthly Installments](financial/equated_monthly_installments.py)\n  * [Exponential Moving Average](financial/exponential_moving_average.py)\n  * [Interest](financial/interest.py)\n  * [Present Value](financial/present_value.py)\n  * [Price Plus Tax](financial/price_plus_tax.py)\n  * [Simple Moving Average](financial/simple_moving_average.py)\n  * [Time And Half Pay](financial/time_and_half_pay.py)\n\n## Fractals\n  * [Julia Sets](fractals/julia_sets.py)\n  * [Koch Snowflake](fractals/koch_snowflake.py)\n  * [Mandelbrot](fractals/mandelbrot.py)\n  * [Sierpinski Triangle](fractals/sierpinski_triangle.py)\n  * [Vicsek](fractals/vicsek.py)\n\n## Fuzzy Logic\n  * [Fuzzy Operations](fuzzy_logic/fuzzy_operations.py)\n\n## Genetic Algorithm\n  * [Basic String](genetic_algorithm/basic_string.py)\n\n## Geodesy\n  * [Haversine Distance](geodesy/haversine_distance.py)\n  * [Lamberts Ellipsoidal Distance](geodesy/lamberts_ellipsoidal_distance.py)\n\n## Geometry\n  * [Geometry](geometry/geometry.py)\n\n## Graphics\n  * [Bezier Curve](graphics/bezier_curve.py)\n  * [Butterfly Pattern](graphics/butterfly_pattern.py)\n  * [Digital Differential Analyzer Line](graphics/digital_differential_analyzer_line.py)\n  * [Vector3 For 2D Rendering](graphics/vector3_for_2d_rendering.py)\n\n## Graphs\n  * [A Star](graphs/a_star.py)\n  * [Ant Colony Optimization Algorithms](graphs/ant_colony_optimization_algorithms.py)\n  * [Articulation Points](graphs/articulation_points.py)\n  * [Basic Graphs](graphs/basic_graphs.py)\n  * [Bellman Ford](graphs/bellman_ford.py)\n  * [Bi Directional Dijkstra](graphs/bi_directional_dijkstra.py)\n  * [Bidirectional A Star](graphs/bidirectional_a_star.py)\n  * [Bidirectional Breadth First Search](graphs/bidirectional_breadth_first_search.py)\n  * [Boruvka](graphs/boruvka.py)\n  * [Breadth First Search](graphs/breadth_first_search.py)\n  * [Breadth First Search 2](graphs/breadth_first_search_2.py)\n  * [Breadth First Search Shortest Path](graphs/breadth_first_search_shortest_path.py)\n  * [Breadth First Search Shortest Path 2](graphs/breadth_first_search_shortest_path_2.py)\n  * [Breadth First Search Zero One Shortest Path](graphs/breadth_first_search_zero_one_shortest_path.py)\n  * [Check Bipatrite](graphs/check_bipatrite.py)\n  * [Check Cycle](graphs/check_cycle.py)\n  * [Connected Components](graphs/connected_components.py)\n  * [Deep Clone Graph](graphs/deep_clone_graph.py)\n  * [Depth First Search](graphs/depth_first_search.py)\n  * [Depth First Search 2](graphs/depth_first_search_2.py)\n  * [Dijkstra](graphs/dijkstra.py)\n  * [Dijkstra 2](graphs/dijkstra_2.py)\n  * [Dijkstra Algorithm](graphs/dijkstra_algorithm.py)\n  * [Dijkstra Alternate](graphs/dijkstra_alternate.py)\n  * [Dijkstra Binary Grid](graphs/dijkstra_binary_grid.py)\n  * [Dinic](graphs/dinic.py)\n  * [Directed And Undirected Weighted Graph](graphs/directed_and_undirected_weighted_graph.py)\n  * [Edmonds Karp Multiple Source And Sink](graphs/edmonds_karp_multiple_source_and_sink.py)\n  * [Eulerian Path And Circuit For Undirected Graph](graphs/eulerian_path_and_circuit_for_undirected_graph.py)\n  * [Even Tree](graphs/even_tree.py)\n  * [Finding Bridges](graphs/finding_bridges.py)\n  * [Frequent Pattern Graph Miner](graphs/frequent_pattern_graph_miner.py)\n  * [G Topological Sort](graphs/g_topological_sort.py)\n  * [Gale Shapley Bigraph](graphs/gale_shapley_bigraph.py)\n  * [Graph Adjacency List](graphs/graph_adjacency_list.py)\n  * [Graph Adjacency Matrix](graphs/graph_adjacency_matrix.py)\n  * [Graph List](graphs/graph_list.py)\n  * [Graphs Floyd Warshall](graphs/graphs_floyd_warshall.py)\n  * [Greedy Best First](graphs/greedy_best_first.py)\n  * [Greedy Min Vertex Cover](graphs/greedy_min_vertex_cover.py)\n  * [Kahns Algorithm Long](graphs/kahns_algorithm_long.py)\n  * [Kahns Algorithm Topo](graphs/kahns_algorithm_topo.py)\n  * [Karger](graphs/karger.py)\n  * [Lanczos Eigenvectors](graphs/lanczos_eigenvectors.py)\n  * [Markov Chain](graphs/markov_chain.py)\n  * [Matching Min Vertex Cover](graphs/matching_min_vertex_cover.py)\n  * [Minimum Path Sum](graphs/minimum_path_sum.py)\n  * [Minimum Spanning Tree Boruvka](graphs/minimum_spanning_tree_boruvka.py)\n  * [Minimum Spanning Tree Kruskal](graphs/minimum_spanning_tree_kruskal.py)\n  * [Minimum Spanning Tree Kruskal2](graphs/minimum_spanning_tree_kruskal2.py)\n  * [Minimum Spanning Tree Prims](graphs/minimum_spanning_tree_prims.py)\n  * [Minimum Spanning Tree Prims2](graphs/minimum_spanning_tree_prims2.py)\n  * [Multi Heuristic Astar](graphs/multi_heuristic_astar.py)\n  * [Page Rank](graphs/page_rank.py)\n  * [Prim](graphs/prim.py)\n  * [Random Graph Generator](graphs/random_graph_generator.py)\n  * [Scc Kosaraju](graphs/scc_kosaraju.py)\n  * [Strongly Connected Components](graphs/strongly_connected_components.py)\n  * [Tarjans Scc](graphs/tarjans_scc.py)\n  * Tests\n    * [Test Min Spanning Tree Kruskal](graphs/tests/test_min_spanning_tree_kruskal.py)\n    * [Test Min Spanning Tree Prim](graphs/tests/test_min_spanning_tree_prim.py)\n\n## Greedy Methods\n  * [Best Time To Buy And Sell Stock](greedy_methods/best_time_to_buy_and_sell_stock.py)\n  * [Fractional Cover Problem](greedy_methods/fractional_cover_problem.py)\n  * [Fractional Knapsack](greedy_methods/fractional_knapsack.py)\n  * [Fractional Knapsack 2](greedy_methods/fractional_knapsack_2.py)\n  * [Gas Station](greedy_methods/gas_station.py)\n  * [Minimum Coin Change](greedy_methods/minimum_coin_change.py)\n  * [Minimum Waiting Time](greedy_methods/minimum_waiting_time.py)\n  * [Optimal Merge Pattern](greedy_methods/optimal_merge_pattern.py)\n  * [Smallest Range](greedy_methods/smallest_range.py)\n\n## Hashes\n  * [Adler32](hashes/adler32.py)\n  * [Chaos Machine](hashes/chaos_machine.py)\n  * [Djb2](hashes/djb2.py)\n  * [Elf](hashes/elf.py)\n  * [Enigma Machine](hashes/enigma_machine.py)\n  * [Fletcher16](hashes/fletcher16.py)\n  * [Hamming Code](hashes/hamming_code.py)\n  * [Luhn](hashes/luhn.py)\n  * [Md5](hashes/md5.py)\n  * [Sdbm](hashes/sdbm.py)\n  * [Sha1](hashes/sha1.py)\n  * [Sha256](hashes/sha256.py)\n\n## Knapsack\n  * [Greedy Knapsack](knapsack/greedy_knapsack.py)\n  * [Knapsack](knapsack/knapsack.py)\n  * [Recursive Approach Knapsack](knapsack/recursive_approach_knapsack.py)\n  * Tests\n    * [Test Greedy Knapsack](knapsack/tests/test_greedy_knapsack.py)\n    * [Test Knapsack](knapsack/tests/test_knapsack.py)\n\n## Linear Algebra\n  * [Gaussian Elimination](linear_algebra/gaussian_elimination.py)\n  * [Jacobi Iteration Method](linear_algebra/jacobi_iteration_method.py)\n  * [Lu Decomposition](linear_algebra/lu_decomposition.py)\n  * [Matrix Inversion](linear_algebra/matrix_inversion.py)\n  * Src\n    * [Conjugate Gradient](linear_algebra/src/conjugate_gradient.py)\n    * [Gaussian Elimination Pivoting](linear_algebra/src/gaussian_elimination_pivoting.py)\n    * [Lib](linear_algebra/src/lib.py)\n    * [Polynom For Points](linear_algebra/src/polynom_for_points.py)\n    * [Power Iteration](linear_algebra/src/power_iteration.py)\n    * [Rank Of Matrix](linear_algebra/src/rank_of_matrix.py)\n    * [Rayleigh Quotient](linear_algebra/src/rayleigh_quotient.py)\n    * [Schur Complement](linear_algebra/src/schur_complement.py)\n    * [Test Linear Algebra](linear_algebra/src/test_linear_algebra.py)\n    * [Transformations 2D](linear_algebra/src/transformations_2d.py)\n\n## Linear Programming\n  * [Simplex](linear_programming/simplex.py)\n\n## Machine Learning\n  * [Apriori Algorithm](machine_learning/apriori_algorithm.py)\n  * [Astar](machine_learning/astar.py)\n  * [Automatic Differentiation](machine_learning/automatic_differentiation.py)\n  * [Data Transformations](machine_learning/data_transformations.py)\n  * [Decision Tree](machine_learning/decision_tree.py)\n  * [Dimensionality Reduction](machine_learning/dimensionality_reduction.py)\n  * Forecasting\n    * [Run](machine_learning/forecasting/run.py)\n  * [Frequent Pattern Growth](machine_learning/frequent_pattern_growth.py)\n  * [Gradient Boosting Classifier](machine_learning/gradient_boosting_classifier.py)\n  * [Gradient Descent](machine_learning/gradient_descent.py)\n  * [K Means Clust](machine_learning/k_means_clust.py)\n  * [K Nearest Neighbours](machine_learning/k_nearest_neighbours.py)\n  * [Linear Discriminant Analysis](machine_learning/linear_discriminant_analysis.py)\n  * [Linear Regression](machine_learning/linear_regression.py)\n  * Local Weighted Learning\n    * [Local Weighted Learning](machine_learning/local_weighted_learning/local_weighted_learning.py)\n  * [Logistic Regression](machine_learning/logistic_regression.py)\n  * [Loss Functions](machine_learning/loss_functions.py)\n  * Lstm\n    * [Lstm Prediction](machine_learning/lstm/lstm_prediction.py)\n  * [Mfcc](machine_learning/mfcc.py)\n  * [Multilayer Perceptron Classifier](machine_learning/multilayer_perceptron_classifier.py)\n  * [Polynomial Regression](machine_learning/polynomial_regression.py)\n  * [Principle Component Analysis](machine_learning/principle_component_analysis.py)\n  * [Scoring Functions](machine_learning/scoring_functions.py)\n  * [Self Organizing Map](machine_learning/self_organizing_map.py)\n  * [Sequential Minimum Optimization](machine_learning/sequential_minimum_optimization.py)\n  * [Similarity Search](machine_learning/similarity_search.py)\n  * [Support Vector Machines](machine_learning/support_vector_machines.py)\n  * [Word Frequency Functions](machine_learning/word_frequency_functions.py)\n  * [Xgboost Classifier](machine_learning/xgboost_classifier.py)\n  * [Xgboost Regressor](machine_learning/xgboost_regressor.py)\n\n## Maths\n  * [Abs](maths/abs.py)\n  * [Addition Without Arithmetic](maths/addition_without_arithmetic.py)\n  * [Aliquot Sum](maths/aliquot_sum.py)\n  * [Allocation Number](maths/allocation_number.py)\n  * [Arc Length](maths/arc_length.py)\n  * [Area](maths/area.py)\n  * [Area Under Curve](maths/area_under_curve.py)\n  * [Average Absolute Deviation](maths/average_absolute_deviation.py)\n  * [Average Mean](maths/average_mean.py)\n  * [Average Median](maths/average_median.py)\n  * [Average Mode](maths/average_mode.py)\n  * [Bailey Borwein Plouffe](maths/bailey_borwein_plouffe.py)\n  * [Base Neg2 Conversion](maths/base_neg2_conversion.py)\n  * [Basic Maths](maths/basic_maths.py)\n  * [Binary Exponentiation](maths/binary_exponentiation.py)\n  * [Binary Multiplication](maths/binary_multiplication.py)\n  * [Binomial Coefficient](maths/binomial_coefficient.py)\n  * [Binomial Distribution](maths/binomial_distribution.py)\n  * [Ceil](maths/ceil.py)\n  * [Chebyshev Distance](maths/chebyshev_distance.py)\n  * [Check Polygon](maths/check_polygon.py)\n  * [Chinese Remainder Theorem](maths/chinese_remainder_theorem.py)\n  * [Chudnovsky Algorithm](maths/chudnovsky_algorithm.py)\n  * [Collatz Sequence](maths/collatz_sequence.py)\n  * [Combinations](maths/combinations.py)\n  * [Continued Fraction](maths/continued_fraction.py)\n  * [Decimal Isolate](maths/decimal_isolate.py)\n  * [Decimal To Fraction](maths/decimal_to_fraction.py)\n  * [Dodecahedron](maths/dodecahedron.py)\n  * [Double Factorial](maths/double_factorial.py)\n  * [Dual Number Automatic Differentiation](maths/dual_number_automatic_differentiation.py)\n  * [Entropy](maths/entropy.py)\n  * [Euclidean Distance](maths/euclidean_distance.py)\n  * [Euler Method](maths/euler_method.py)\n  * [Euler Modified](maths/euler_modified.py)\n  * [Eulers Totient](maths/eulers_totient.py)\n  * [Extended Euclidean Algorithm](maths/extended_euclidean_algorithm.py)\n  * [Factorial](maths/factorial.py)\n  * [Factors](maths/factors.py)\n  * [Fast Inverse Sqrt](maths/fast_inverse_sqrt.py)\n  * [Fermat Little Theorem](maths/fermat_little_theorem.py)\n  * [Fibonacci](maths/fibonacci.py)\n  * [Find Max](maths/find_max.py)\n  * [Find Min](maths/find_min.py)\n  * [Floor](maths/floor.py)\n  * [Gamma](maths/gamma.py)\n  * [Gaussian](maths/gaussian.py)\n  * [Gcd Of N Numbers](maths/gcd_of_n_numbers.py)\n  * [Geometric Mean](maths/geometric_mean.py)\n  * [Germain Primes](maths/germain_primes.py)\n  * [Greatest Common Divisor](maths/greatest_common_divisor.py)\n  * [Hardy Ramanujanalgo](maths/hardy_ramanujanalgo.py)\n  * [Integer Square Root](maths/integer_square_root.py)\n  * [Interquartile Range](maths/interquartile_range.py)\n  * [Is Int Palindrome](maths/is_int_palindrome.py)\n  * [Is Ip V4 Address Valid](maths/is_ip_v4_address_valid.py)\n  * [Is Square Free](maths/is_square_free.py)\n  * [Jaccard Similarity](maths/jaccard_similarity.py)\n  * [Joint Probability Distribution](maths/joint_probability_distribution.py)\n  * [Josephus Problem](maths/josephus_problem.py)\n  * [Juggler Sequence](maths/juggler_sequence.py)\n  * [Karatsuba](maths/karatsuba.py)\n  * [Kth Lexicographic Permutation](maths/kth_lexicographic_permutation.py)\n  * [Largest Of Very Large Numbers](maths/largest_of_very_large_numbers.py)\n  * [Least Common Multiple](maths/least_common_multiple.py)\n  * [Line Length](maths/line_length.py)\n  * [Liouville Lambda](maths/liouville_lambda.py)\n  * [Lucas Lehmer Primality Test](maths/lucas_lehmer_primality_test.py)\n  * [Lucas Series](maths/lucas_series.py)\n  * [Maclaurin Series](maths/maclaurin_series.py)\n  * [Manhattan Distance](maths/manhattan_distance.py)\n  * [Matrix Exponentiation](maths/matrix_exponentiation.py)\n  * [Max Sum Sliding Window](maths/max_sum_sliding_window.py)\n  * [Minkowski Distance](maths/minkowski_distance.py)\n  * [Mobius Function](maths/mobius_function.py)\n  * [Modular Division](maths/modular_division.py)\n  * [Modular Exponential](maths/modular_exponential.py)\n  * [Monte Carlo](maths/monte_carlo.py)\n  * [Monte Carlo Dice](maths/monte_carlo_dice.py)\n  * [Number Of Digits](maths/number_of_digits.py)\n  * Numerical Analysis\n    * [Adams Bashforth](maths/numerical_analysis/adams_bashforth.py)\n    * [Bisection](maths/numerical_analysis/bisection.py)\n    * [Bisection 2](maths/numerical_analysis/bisection_2.py)\n    * [Integration By Simpson Approx](maths/numerical_analysis/integration_by_simpson_approx.py)\n    * [Intersection](maths/numerical_analysis/intersection.py)\n    * [Nevilles Method](maths/numerical_analysis/nevilles_method.py)\n    * [Newton Forward Interpolation](maths/numerical_analysis/newton_forward_interpolation.py)\n    * [Newton Raphson](maths/numerical_analysis/newton_raphson.py)\n    * [Numerical Integration](maths/numerical_analysis/numerical_integration.py)\n    * [Proper Fractions](maths/numerical_analysis/proper_fractions.py)\n    * [Runge Kutta](maths/numerical_analysis/runge_kutta.py)\n    * [Runge Kutta Fehlberg 45](maths/numerical_analysis/runge_kutta_fehlberg_45.py)\n    * [Runge Kutta Gills](maths/numerical_analysis/runge_kutta_gills.py)\n    * [Secant Method](maths/numerical_analysis/secant_method.py)\n    * [Simpson Rule](maths/numerical_analysis/simpson_rule.py)\n    * [Square Root](maths/numerical_analysis/square_root.py)\n  * [Odd Sieve](maths/odd_sieve.py)\n  * [Perfect Cube](maths/perfect_cube.py)\n  * [Perfect Number](maths/perfect_number.py)\n  * [Perfect Square](maths/perfect_square.py)\n  * [Persistence](maths/persistence.py)\n  * [Pi Generator](maths/pi_generator.py)\n  * [Pi Monte Carlo Estimation](maths/pi_monte_carlo_estimation.py)\n  * [Points Are Collinear 3D](maths/points_are_collinear_3d.py)\n  * [Pollard Rho](maths/pollard_rho.py)\n  * [Polynomial Evaluation](maths/polynomial_evaluation.py)\n  * Polynomials\n    * [Single Indeterminate Operations](maths/polynomials/single_indeterminate_operations.py)\n  * [Power Using Recursion](maths/power_using_recursion.py)\n  * [Prime Check](maths/prime_check.py)\n  * [Prime Factors](maths/prime_factors.py)\n  * [Prime Numbers](maths/prime_numbers.py)\n  * [Prime Sieve Eratosthenes](maths/prime_sieve_eratosthenes.py)\n  * [Primelib](maths/primelib.py)\n  * [Print Multiplication Table](maths/print_multiplication_table.py)\n  * [Pythagoras](maths/pythagoras.py)\n  * [Qr Decomposition](maths/qr_decomposition.py)\n  * [Quadratic Equations Complex Numbers](maths/quadratic_equations_complex_numbers.py)\n  * [Radians](maths/radians.py)\n  * [Radix2 Fft](maths/radix2_fft.py)\n  * [Remove Digit](maths/remove_digit.py)\n  * [Segmented Sieve](maths/segmented_sieve.py)\n  * Series\n    * [Arithmetic](maths/series/arithmetic.py)\n    * [Geometric](maths/series/geometric.py)\n    * [Geometric Series](maths/series/geometric_series.py)\n    * [Harmonic](maths/series/harmonic.py)\n    * [Harmonic Series](maths/series/harmonic_series.py)\n    * [Hexagonal Numbers](maths/series/hexagonal_numbers.py)\n    * [P Series](maths/series/p_series.py)\n  * [Sieve Of Eratosthenes](maths/sieve_of_eratosthenes.py)\n  * [Sigmoid](maths/sigmoid.py)\n  * [Signum](maths/signum.py)\n  * [Simultaneous Linear Equation Solver](maths/simultaneous_linear_equation_solver.py)\n  * [Sin](maths/sin.py)\n  * [Sock Merchant](maths/sock_merchant.py)\n  * [Softmax](maths/softmax.py)\n  * [Solovay Strassen Primality Test](maths/solovay_strassen_primality_test.py)\n  * [Spearman Rank Correlation Coefficient](maths/spearman_rank_correlation_coefficient.py)\n  * Special Numbers\n    * [Armstrong Numbers](maths/special_numbers/armstrong_numbers.py)\n    * [Automorphic Number](maths/special_numbers/automorphic_number.py)\n    * [Bell Numbers](maths/special_numbers/bell_numbers.py)\n    * [Carmichael Number](maths/special_numbers/carmichael_number.py)\n    * [Catalan Number](maths/special_numbers/catalan_number.py)\n    * [Hamming Numbers](maths/special_numbers/hamming_numbers.py)\n    * [Happy Number](maths/special_numbers/happy_number.py)\n    * [Harshad Numbers](maths/special_numbers/harshad_numbers.py)\n    * [Hexagonal Number](maths/special_numbers/hexagonal_number.py)\n    * [Krishnamurthy Number](maths/special_numbers/krishnamurthy_number.py)\n    * [Perfect Number](maths/special_numbers/perfect_number.py)\n    * [Polygonal Numbers](maths/special_numbers/polygonal_numbers.py)\n    * [Pronic Number](maths/special_numbers/pronic_number.py)\n    * [Proth Number](maths/special_numbers/proth_number.py)\n    * [Triangular Numbers](maths/special_numbers/triangular_numbers.py)\n    * [Ugly Numbers](maths/special_numbers/ugly_numbers.py)\n    * [Weird Number](maths/special_numbers/weird_number.py)\n  * [Sum Of Arithmetic Series](maths/sum_of_arithmetic_series.py)\n  * [Sum Of Digits](maths/sum_of_digits.py)\n  * [Sum Of Geometric Progression](maths/sum_of_geometric_progression.py)\n  * [Sum Of Harmonic Series](maths/sum_of_harmonic_series.py)\n  * [Sumset](maths/sumset.py)\n  * [Sylvester Sequence](maths/sylvester_sequence.py)\n  * [Tanh](maths/tanh.py)\n  * [Test Prime Check](maths/test_prime_check.py)\n  * [Three Sum](maths/three_sum.py)\n  * [Trapezoidal Rule](maths/trapezoidal_rule.py)\n  * [Triplet Sum](maths/triplet_sum.py)\n  * [Twin Prime](maths/twin_prime.py)\n  * [Two Pointer](maths/two_pointer.py)\n  * [Two Sum](maths/two_sum.py)\n  * [Volume](maths/volume.py)\n  * [Zellers Congruence](maths/zellers_congruence.py)\n\n## Matrix\n  * [Binary Search Matrix](matrix/binary_search_matrix.py)\n  * [Count Islands In Matrix](matrix/count_islands_in_matrix.py)\n  * [Count Negative Numbers In Sorted Matrix](matrix/count_negative_numbers_in_sorted_matrix.py)\n  * [Count Paths](matrix/count_paths.py)\n  * [Cramers Rule 2X2](matrix/cramers_rule_2x2.py)\n  * [Inverse Of Matrix](matrix/inverse_of_matrix.py)\n  * [Largest Square Area In Matrix](matrix/largest_square_area_in_matrix.py)\n  * [Matrix Based Game](matrix/matrix_based_game.py)\n  * [Matrix Class](matrix/matrix_class.py)\n  * [Matrix Equalization](matrix/matrix_equalization.py)\n  * [Matrix Multiplication Recursion](matrix/matrix_multiplication_recursion.py)\n  * [Matrix Operation](matrix/matrix_operation.py)\n  * [Max Area Of Island](matrix/max_area_of_island.py)\n  * [Median Matrix](matrix/median_matrix.py)\n  * [Nth Fibonacci Using Matrix Exponentiation](matrix/nth_fibonacci_using_matrix_exponentiation.py)\n  * [Pascal Triangle](matrix/pascal_triangle.py)\n  * [Rotate Matrix](matrix/rotate_matrix.py)\n  * [Searching In Sorted Matrix](matrix/searching_in_sorted_matrix.py)\n  * [Sherman Morrison](matrix/sherman_morrison.py)\n  * [Spiral Print](matrix/spiral_print.py)\n  * Tests\n    * [Test Matrix Operation](matrix/tests/test_matrix_operation.py)\n  * [Validate Sudoku Board](matrix/validate_sudoku_board.py)\n\n## Networking Flow\n  * [Ford Fulkerson](networking_flow/ford_fulkerson.py)\n  * [Minimum Cut](networking_flow/minimum_cut.py)\n\n## Neural Network\n  * Activation Functions\n    * [Binary Step](neural_network/activation_functions/binary_step.py)\n    * [Exponential Linear Unit](neural_network/activation_functions/exponential_linear_unit.py)\n    * [Gaussian Error Linear Unit](neural_network/activation_functions/gaussian_error_linear_unit.py)\n    * [Leaky Rectified Linear Unit](neural_network/activation_functions/leaky_rectified_linear_unit.py)\n    * [Mish](neural_network/activation_functions/mish.py)\n    * [Rectified Linear Unit](neural_network/activation_functions/rectified_linear_unit.py)\n    * [Scaled Exponential Linear Unit](neural_network/activation_functions/scaled_exponential_linear_unit.py)\n    * [Soboleva Modified Hyperbolic Tangent](neural_network/activation_functions/soboleva_modified_hyperbolic_tangent.py)\n    * [Softplus](neural_network/activation_functions/softplus.py)\n    * [Squareplus](neural_network/activation_functions/squareplus.py)\n    * [Swish](neural_network/activation_functions/swish.py)\n  * [Back Propagation Neural Network](neural_network/back_propagation_neural_network.py)\n  * [Convolution Neural Network](neural_network/convolution_neural_network.py)\n  * [Input Data](neural_network/input_data.py)\n  * [Simple Neural Network](neural_network/simple_neural_network.py)\n  * [Two Hidden Layers Neural Network](neural_network/two_hidden_layers_neural_network.py)\n\n## Other\n  * [Activity Selection](other/activity_selection.py)\n  * [Alternative List Arrange](other/alternative_list_arrange.py)\n  * [Bankers Algorithm](other/bankers_algorithm.py)\n  * [Davis Putnam Logemann Loveland](other/davis_putnam_logemann_loveland.py)\n  * [Doomsday](other/doomsday.py)\n  * [Fischer Yates Shuffle](other/fischer_yates_shuffle.py)\n  * [Gauss Easter](other/gauss_easter.py)\n  * [Graham Scan](other/graham_scan.py)\n  * [Greedy](other/greedy.py)\n  * [Guess The Number Search](other/guess_the_number_search.py)\n  * [H Index](other/h_index.py)\n  * [Least Recently Used](other/least_recently_used.py)\n  * [Lfu Cache](other/lfu_cache.py)\n  * [Linear Congruential Generator](other/linear_congruential_generator.py)\n  * [Lru Cache](other/lru_cache.py)\n  * [Magicdiamondpattern](other/magicdiamondpattern.py)\n  * [Majority Vote Algorithm](other/majority_vote_algorithm.py)\n  * [Maximum Subsequence](other/maximum_subsequence.py)\n  * [Nested Brackets](other/nested_brackets.py)\n  * [Number Container System](other/number_container_system.py)\n  * [Password](other/password.py)\n  * [Quine](other/quine.py)\n  * [Scoring Algorithm](other/scoring_algorithm.py)\n  * [Sdes](other/sdes.py)\n  * [Tower Of Hanoi](other/tower_of_hanoi.py)\n  * [Word Search](other/word_search.py)\n\n## Physics\n  * [Altitude Pressure](physics/altitude_pressure.py)\n  * [Archimedes Principle Of Buoyant Force](physics/archimedes_principle_of_buoyant_force.py)\n  * [Basic Orbital Capture](physics/basic_orbital_capture.py)\n  * [Casimir Effect](physics/casimir_effect.py)\n  * [Center Of Mass](physics/center_of_mass.py)\n  * [Centripetal Force](physics/centripetal_force.py)\n  * [Coulombs Law](physics/coulombs_law.py)\n  * [Doppler Frequency](physics/doppler_frequency.py)\n  * [Grahams Law](physics/grahams_law.py)\n  * [Horizontal Projectile Motion](physics/horizontal_projectile_motion.py)\n  * [Hubble Parameter](physics/hubble_parameter.py)\n  * [Ideal Gas Law](physics/ideal_gas_law.py)\n  * [In Static Equilibrium](physics/in_static_equilibrium.py)\n  * [Kinetic Energy](physics/kinetic_energy.py)\n  * [Lens Formulae](physics/lens_formulae.py)\n  * [Lorentz Transformation Four Vector](physics/lorentz_transformation_four_vector.py)\n  * [Malus Law](physics/malus_law.py)\n  * [Mass Energy Equivalence](physics/mass_energy_equivalence.py)\n  * [Mirror Formulae](physics/mirror_formulae.py)\n  * [N Body Simulation](physics/n_body_simulation.py)\n  * [Newtons Law Of Gravitation](physics/newtons_law_of_gravitation.py)\n  * [Newtons Second Law Of Motion](physics/newtons_second_law_of_motion.py)\n  * [Period Of Pendulum](physics/period_of_pendulum.py)\n  * [Photoelectric Effect](physics/photoelectric_effect.py)\n  * [Potential Energy](physics/potential_energy.py)\n  * [Rainfall Intensity](physics/rainfall_intensity.py)\n  * [Reynolds Number](physics/reynolds_number.py)\n  * [Rms Speed Of Molecule](physics/rms_speed_of_molecule.py)\n  * [Shear Stress](physics/shear_stress.py)\n  * [Speed Of Sound](physics/speed_of_sound.py)\n  * [Speeds Of Gas Molecules](physics/speeds_of_gas_molecules.py)\n  * [Terminal Velocity](physics/terminal_velocity.py)\n\n## Project Euler\n  * Problem 001\n    * [Sol1](project_euler/problem_001/sol1.py)\n    * [Sol2](project_euler/problem_001/sol2.py)\n    * [Sol3](project_euler/problem_001/sol3.py)\n    * [Sol4](project_euler/problem_001/sol4.py)\n    * [Sol5](project_euler/problem_001/sol5.py)\n    * [Sol6](project_euler/problem_001/sol6.py)\n    * [Sol7](project_euler/problem_001/sol7.py)\n  * Problem 002\n    * [Sol1](project_euler/problem_002/sol1.py)\n    * [Sol2](project_euler/problem_002/sol2.py)\n    * [Sol3](project_euler/problem_002/sol3.py)\n    * [Sol4](project_euler/problem_002/sol4.py)\n    * [Sol5](project_euler/problem_002/sol5.py)\n  * Problem 003\n    * [Sol1](project_euler/problem_003/sol1.py)\n    * [Sol2](project_euler/problem_003/sol2.py)\n    * [Sol3](project_euler/problem_003/sol3.py)\n  * Problem 004\n    * [Sol1](project_euler/problem_004/sol1.py)\n    * [Sol2](project_euler/problem_004/sol2.py)\n  * Problem 005\n    * [Sol1](project_euler/problem_005/sol1.py)\n    * [Sol2](project_euler/problem_005/sol2.py)\n  * Problem 006\n    * [Sol1](project_euler/problem_006/sol1.py)\n    * [Sol2](project_euler/problem_006/sol2.py)\n    * [Sol3](project_euler/problem_006/sol3.py)\n    * [Sol4](project_euler/problem_006/sol4.py)\n  * Problem 007\n    * [Sol1](project_euler/problem_007/sol1.py)\n    * [Sol2](project_euler/problem_007/sol2.py)\n    * [Sol3](project_euler/problem_007/sol3.py)\n  * Problem 008\n    * [Sol1](project_euler/problem_008/sol1.py)\n    * [Sol2](project_euler/problem_008/sol2.py)\n    * [Sol3](project_euler/problem_008/sol3.py)\n  * Problem 009\n    * [Sol1](project_euler/problem_009/sol1.py)\n    * [Sol2](project_euler/problem_009/sol2.py)\n    * [Sol3](project_euler/problem_009/sol3.py)\n  * Problem 010\n    * [Sol1](project_euler/problem_010/sol1.py)\n    * [Sol2](project_euler/problem_010/sol2.py)\n    * [Sol3](project_euler/problem_010/sol3.py)\n  * Problem 011\n    * [Sol1](project_euler/problem_011/sol1.py)\n    * [Sol2](project_euler/problem_011/sol2.py)\n  * Problem 012\n    * [Sol1](project_euler/problem_012/sol1.py)\n    * [Sol2](project_euler/problem_012/sol2.py)\n  * Problem 013\n    * [Sol1](project_euler/problem_013/sol1.py)\n  * Problem 014\n    * [Sol1](project_euler/problem_014/sol1.py)\n    * [Sol2](project_euler/problem_014/sol2.py)\n  * Problem 015\n    * [Sol1](project_euler/problem_015/sol1.py)\n  * Problem 016\n    * [Sol1](project_euler/problem_016/sol1.py)\n    * [Sol2](project_euler/problem_016/sol2.py)\n  * Problem 017\n    * [Sol1](project_euler/problem_017/sol1.py)\n  * Problem 018\n    * [Solution](project_euler/problem_018/solution.py)\n  * Problem 019\n    * [Sol1](project_euler/problem_019/sol1.py)\n  * Problem 020\n    * [Sol1](project_euler/problem_020/sol1.py)\n    * [Sol2](project_euler/problem_020/sol2.py)\n    * [Sol3](project_euler/problem_020/sol3.py)\n    * [Sol4](project_euler/problem_020/sol4.py)\n  * Problem 021\n    * [Sol1](project_euler/problem_021/sol1.py)\n  * Problem 022\n    * [Sol1](project_euler/problem_022/sol1.py)\n    * [Sol2](project_euler/problem_022/sol2.py)\n  * Problem 023\n    * [Sol1](project_euler/problem_023/sol1.py)\n  * Problem 024\n    * [Sol1](project_euler/problem_024/sol1.py)\n  * Problem 025\n    * [Sol1](project_euler/problem_025/sol1.py)\n    * [Sol2](project_euler/problem_025/sol2.py)\n    * [Sol3](project_euler/problem_025/sol3.py)\n  * Problem 026\n    * [Sol1](project_euler/problem_026/sol1.py)\n  * Problem 027\n    * [Sol1](project_euler/problem_027/sol1.py)\n  * Problem 028\n    * [Sol1](project_euler/problem_028/sol1.py)\n  * Problem 029\n    * [Sol1](project_euler/problem_029/sol1.py)\n  * Problem 030\n    * [Sol1](project_euler/problem_030/sol1.py)\n  * Problem 031\n    * [Sol1](project_euler/problem_031/sol1.py)\n    * [Sol2](project_euler/problem_031/sol2.py)\n  * Problem 032\n    * [Sol32](project_euler/problem_032/sol32.py)\n  * Problem 033\n    * [Sol1](project_euler/problem_033/sol1.py)\n  * Problem 034\n    * [Sol1](project_euler/problem_034/sol1.py)\n  * Problem 035\n    * [Sol1](project_euler/problem_035/sol1.py)\n  * Problem 036\n    * [Sol1](project_euler/problem_036/sol1.py)\n  * Problem 037\n    * [Sol1](project_euler/problem_037/sol1.py)\n  * Problem 038\n    * [Sol1](project_euler/problem_038/sol1.py)\n  * Problem 039\n    * [Sol1](project_euler/problem_039/sol1.py)\n  * Problem 040\n    * [Sol1](project_euler/problem_040/sol1.py)\n  * Problem 041\n    * [Sol1](project_euler/problem_041/sol1.py)\n  * Problem 042\n    * [Solution42](project_euler/problem_042/solution42.py)\n  * Problem 043\n    * [Sol1](project_euler/problem_043/sol1.py)\n  * Problem 044\n    * [Sol1](project_euler/problem_044/sol1.py)\n  * Problem 045\n    * [Sol1](project_euler/problem_045/sol1.py)\n  * Problem 046\n    * [Sol1](project_euler/problem_046/sol1.py)\n  * Problem 047\n    * [Sol1](project_euler/problem_047/sol1.py)\n  * Problem 048\n    * [Sol1](project_euler/problem_048/sol1.py)\n  * Problem 049\n    * [Sol1](project_euler/problem_049/sol1.py)\n  * Problem 050\n    * [Sol1](project_euler/problem_050/sol1.py)\n  * Problem 051\n    * [Sol1](project_euler/problem_051/sol1.py)\n  * Problem 052\n    * [Sol1](project_euler/problem_052/sol1.py)\n  * Problem 053\n    * [Sol1](project_euler/problem_053/sol1.py)\n  * Problem 054\n    * [Sol1](project_euler/problem_054/sol1.py)\n    * [Test Poker Hand](project_euler/problem_054/test_poker_hand.py)\n  * Problem 055\n    * [Sol1](project_euler/problem_055/sol1.py)\n  * Problem 056\n    * [Sol1](project_euler/problem_056/sol1.py)\n  * Problem 057\n    * [Sol1](project_euler/problem_057/sol1.py)\n  * Problem 058\n    * [Sol1](project_euler/problem_058/sol1.py)\n  * Problem 059\n    * [Sol1](project_euler/problem_059/sol1.py)\n  * Problem 062\n    * [Sol1](project_euler/problem_062/sol1.py)\n  * Problem 063\n    * [Sol1](project_euler/problem_063/sol1.py)\n  * Problem 064\n    * [Sol1](project_euler/problem_064/sol1.py)\n  * Problem 065\n    * [Sol1](project_euler/problem_065/sol1.py)\n  * Problem 067\n    * [Sol1](project_euler/problem_067/sol1.py)\n    * [Sol2](project_euler/problem_067/sol2.py)\n  * Problem 068\n    * [Sol1](project_euler/problem_068/sol1.py)\n  * Problem 069\n    * [Sol1](project_euler/problem_069/sol1.py)\n  * Problem 070\n    * [Sol1](project_euler/problem_070/sol1.py)\n  * Problem 071\n    * [Sol1](project_euler/problem_071/sol1.py)\n  * Problem 072\n    * [Sol1](project_euler/problem_072/sol1.py)\n    * [Sol2](project_euler/problem_072/sol2.py)\n  * Problem 073\n    * [Sol1](project_euler/problem_073/sol1.py)\n  * Problem 074\n    * [Sol1](project_euler/problem_074/sol1.py)\n    * [Sol2](project_euler/problem_074/sol2.py)\n  * Problem 075\n    * [Sol1](project_euler/problem_075/sol1.py)\n  * Problem 076\n    * [Sol1](project_euler/problem_076/sol1.py)\n  * Problem 077\n    * [Sol1](project_euler/problem_077/sol1.py)\n  * Problem 078\n    * [Sol1](project_euler/problem_078/sol1.py)\n  * Problem 079\n    * [Sol1](project_euler/problem_079/sol1.py)\n  * Problem 080\n    * [Sol1](project_euler/problem_080/sol1.py)\n  * Problem 081\n    * [Sol1](project_euler/problem_081/sol1.py)\n  * Problem 082\n    * [Sol1](project_euler/problem_082/sol1.py)\n  * Problem 085\n    * [Sol1](project_euler/problem_085/sol1.py)\n  * Problem 086\n    * [Sol1](project_euler/problem_086/sol1.py)\n  * Problem 087\n    * [Sol1](project_euler/problem_087/sol1.py)\n  * Problem 089\n    * [Sol1](project_euler/problem_089/sol1.py)\n  * Problem 091\n    * [Sol1](project_euler/problem_091/sol1.py)\n  * Problem 092\n    * [Sol1](project_euler/problem_092/sol1.py)\n  * Problem 094\n    * [Sol1](project_euler/problem_094/sol1.py)\n  * Problem 097\n    * [Sol1](project_euler/problem_097/sol1.py)\n  * Problem 099\n    * [Sol1](project_euler/problem_099/sol1.py)\n  * Problem 100\n    * [Sol1](project_euler/problem_100/sol1.py)\n  * Problem 101\n    * [Sol1](project_euler/problem_101/sol1.py)\n  * Problem 102\n    * [Sol1](project_euler/problem_102/sol1.py)\n  * Problem 104\n    * [Sol1](project_euler/problem_104/sol1.py)\n  * Problem 107\n    * [Sol1](project_euler/problem_107/sol1.py)\n  * Problem 109\n    * [Sol1](project_euler/problem_109/sol1.py)\n  * Problem 112\n    * [Sol1](project_euler/problem_112/sol1.py)\n  * Problem 113\n    * [Sol1](project_euler/problem_113/sol1.py)\n  * Problem 114\n    * [Sol1](project_euler/problem_114/sol1.py)\n  * Problem 115\n    * [Sol1](project_euler/problem_115/sol1.py)\n  * Problem 116\n    * [Sol1](project_euler/problem_116/sol1.py)\n  * Problem 117\n    * [Sol1](project_euler/problem_117/sol1.py)\n  * Problem 119\n    * [Sol1](project_euler/problem_119/sol1.py)\n  * Problem 120\n    * [Sol1](project_euler/problem_120/sol1.py)\n  * Problem 121\n    * [Sol1](project_euler/problem_121/sol1.py)\n  * Problem 122\n    * [Sol1](project_euler/problem_122/sol1.py)\n  * Problem 123\n    * [Sol1](project_euler/problem_123/sol1.py)\n  * Problem 125\n    * [Sol1](project_euler/problem_125/sol1.py)\n  * Problem 129\n    * [Sol1](project_euler/problem_129/sol1.py)\n  * Problem 131\n    * [Sol1](project_euler/problem_131/sol1.py)\n  * Problem 135\n    * [Sol1](project_euler/problem_135/sol1.py)\n  * Problem 136\n    * [Sol1](project_euler/problem_136/sol1.py)\n  * Problem 144\n    * [Sol1](project_euler/problem_144/sol1.py)\n  * Problem 145\n    * [Sol1](project_euler/problem_145/sol1.py)\n  * Problem 173\n    * [Sol1](project_euler/problem_173/sol1.py)\n  * Problem 174\n    * [Sol1](project_euler/problem_174/sol1.py)\n  * Problem 180\n    * [Sol1](project_euler/problem_180/sol1.py)\n  * Problem 187\n    * [Sol1](project_euler/problem_187/sol1.py)\n  * Problem 188\n    * [Sol1](project_euler/problem_188/sol1.py)\n  * Problem 191\n    * [Sol1](project_euler/problem_191/sol1.py)\n  * Problem 203\n    * [Sol1](project_euler/problem_203/sol1.py)\n  * Problem 205\n    * [Sol1](project_euler/problem_205/sol1.py)\n  * Problem 206\n    * [Sol1](project_euler/problem_206/sol1.py)\n  * Problem 207\n    * [Sol1](project_euler/problem_207/sol1.py)\n  * Problem 234\n    * [Sol1](project_euler/problem_234/sol1.py)\n  * Problem 301\n    * [Sol1](project_euler/problem_301/sol1.py)\n  * Problem 493\n    * [Sol1](project_euler/problem_493/sol1.py)\n  * Problem 551\n    * [Sol1](project_euler/problem_551/sol1.py)\n  * Problem 587\n    * [Sol1](project_euler/problem_587/sol1.py)\n  * Problem 686\n    * [Sol1](project_euler/problem_686/sol1.py)\n  * Problem 800\n    * [Sol1](project_euler/problem_800/sol1.py)\n\n## Quantum\n  * [Q Fourier Transform](quantum/q_fourier_transform.py)\n\n## Scheduling\n  * [First Come First Served](scheduling/first_come_first_served.py)\n  * [Highest Response Ratio Next](scheduling/highest_response_ratio_next.py)\n  * [Job Sequence With Deadline](scheduling/job_sequence_with_deadline.py)\n  * [Job Sequencing With Deadline](scheduling/job_sequencing_with_deadline.py)\n  * [Multi Level Feedback Queue](scheduling/multi_level_feedback_queue.py)\n  * [Non Preemptive Shortest Job First](scheduling/non_preemptive_shortest_job_first.py)\n  * [Round Robin](scheduling/round_robin.py)\n  * [Shortest Job First](scheduling/shortest_job_first.py)\n\n## Searches\n  * [Binary Search](searches/binary_search.py)\n  * [Binary Tree Traversal](searches/binary_tree_traversal.py)\n  * [Double Linear Search](searches/double_linear_search.py)\n  * [Double Linear Search Recursion](searches/double_linear_search_recursion.py)\n  * [Exponential Search](searches/exponential_search.py)\n  * [Fibonacci Search](searches/fibonacci_search.py)\n  * [Hill Climbing](searches/hill_climbing.py)\n  * [Interpolation Search](searches/interpolation_search.py)\n  * [Jump Search](searches/jump_search.py)\n  * [Linear Search](searches/linear_search.py)\n  * [Median Of Medians](searches/median_of_medians.py)\n  * [Quick Select](searches/quick_select.py)\n  * [Sentinel Linear Search](searches/sentinel_linear_search.py)\n  * [Simple Binary Search](searches/simple_binary_search.py)\n  * [Simulated Annealing](searches/simulated_annealing.py)\n  * [Tabu Search](searches/tabu_search.py)\n  * [Ternary Search](searches/ternary_search.py)\n\n## Sorts\n  * [Bead Sort](sorts/bead_sort.py)\n  * [Binary Insertion Sort](sorts/binary_insertion_sort.py)\n  * [Bitonic Sort](sorts/bitonic_sort.py)\n  * [Bogo Sort](sorts/bogo_sort.py)\n  * [Bubble Sort](sorts/bubble_sort.py)\n  * [Bucket Sort](sorts/bucket_sort.py)\n  * [Circle Sort](sorts/circle_sort.py)\n  * [Cocktail Shaker Sort](sorts/cocktail_shaker_sort.py)\n  * [Comb Sort](sorts/comb_sort.py)\n  * [Counting Sort](sorts/counting_sort.py)\n  * [Cycle Sort](sorts/cycle_sort.py)\n  * [Double Sort](sorts/double_sort.py)\n  * [Dutch National Flag Sort](sorts/dutch_national_flag_sort.py)\n  * [Exchange Sort](sorts/exchange_sort.py)\n  * [External Sort](sorts/external_sort.py)\n  * [Gnome Sort](sorts/gnome_sort.py)\n  * [Heap Sort](sorts/heap_sort.py)\n  * [Insertion Sort](sorts/insertion_sort.py)\n  * [Intro Sort](sorts/intro_sort.py)\n  * [Iterative Merge Sort](sorts/iterative_merge_sort.py)\n  * [Merge Insertion Sort](sorts/merge_insertion_sort.py)\n  * [Merge Sort](sorts/merge_sort.py)\n  * [Msd Radix Sort](sorts/msd_radix_sort.py)\n  * [Natural Sort](sorts/natural_sort.py)\n  * [Odd Even Sort](sorts/odd_even_sort.py)\n  * [Odd Even Transposition Parallel](sorts/odd_even_transposition_parallel.py)\n  * [Odd Even Transposition Single Threaded](sorts/odd_even_transposition_single_threaded.py)\n  * [Pancake Sort](sorts/pancake_sort.py)\n  * [Patience Sort](sorts/patience_sort.py)\n  * [Pigeon Sort](sorts/pigeon_sort.py)\n  * [Pigeonhole Sort](sorts/pigeonhole_sort.py)\n  * [Quick Sort](sorts/quick_sort.py)\n  * [Quick Sort 3 Partition](sorts/quick_sort_3_partition.py)\n  * [Radix Sort](sorts/radix_sort.py)\n  * [Recursive Insertion Sort](sorts/recursive_insertion_sort.py)\n  * [Recursive Mergesort Array](sorts/recursive_mergesort_array.py)\n  * [Recursive Quick Sort](sorts/recursive_quick_sort.py)\n  * [Selection Sort](sorts/selection_sort.py)\n  * [Shell Sort](sorts/shell_sort.py)\n  * [Shrink Shell Sort](sorts/shrink_shell_sort.py)\n  * [Slowsort](sorts/slowsort.py)\n  * [Stooge Sort](sorts/stooge_sort.py)\n  * [Strand Sort](sorts/strand_sort.py)\n  * [Tim Sort](sorts/tim_sort.py)\n  * [Topological Sort](sorts/topological_sort.py)\n  * [Tree Sort](sorts/tree_sort.py)\n  * [Unknown Sort](sorts/unknown_sort.py)\n  * [Wiggle Sort](sorts/wiggle_sort.py)\n\n## Strings\n  * [Aho Corasick](strings/aho_corasick.py)\n  * [Alternative String Arrange](strings/alternative_string_arrange.py)\n  * [Anagrams](strings/anagrams.py)\n  * [Autocomplete Using Trie](strings/autocomplete_using_trie.py)\n  * [Barcode Validator](strings/barcode_validator.py)\n  * [Bitap String Match](strings/bitap_string_match.py)\n  * [Boyer Moore Search](strings/boyer_moore_search.py)\n  * [Camel Case To Snake Case](strings/camel_case_to_snake_case.py)\n  * [Can String Be Rearranged As Palindrome](strings/can_string_be_rearranged_as_palindrome.py)\n  * [Capitalize](strings/capitalize.py)\n  * [Check Anagrams](strings/check_anagrams.py)\n  * [Count Vowels](strings/count_vowels.py)\n  * [Credit Card Validator](strings/credit_card_validator.py)\n  * [Damerau Levenshtein Distance](strings/damerau_levenshtein_distance.py)\n  * [Detecting English Programmatically](strings/detecting_english_programmatically.py)\n  * [Dna](strings/dna.py)\n  * [Edit Distance](strings/edit_distance.py)\n  * [Frequency Finder](strings/frequency_finder.py)\n  * [Hamming Distance](strings/hamming_distance.py)\n  * [Indian Phone Validator](strings/indian_phone_validator.py)\n  * [Is Contains Unique Chars](strings/is_contains_unique_chars.py)\n  * [Is Isogram](strings/is_isogram.py)\n  * [Is Pangram](strings/is_pangram.py)\n  * [Is Polish National Id](strings/is_polish_national_id.py)\n  * [Is Spain National Id](strings/is_spain_national_id.py)\n  * [Is Srilankan Phone Number](strings/is_srilankan_phone_number.py)\n  * [Is Valid Email Address](strings/is_valid_email_address.py)\n  * [Jaro Winkler](strings/jaro_winkler.py)\n  * [Join](strings/join.py)\n  * [Knuth Morris Pratt](strings/knuth_morris_pratt.py)\n  * [Levenshtein Distance](strings/levenshtein_distance.py)\n  * [Lower](strings/lower.py)\n  * [Manacher](strings/manacher.py)\n  * [Min Cost String Conversion](strings/min_cost_string_conversion.py)\n  * [Naive String Search](strings/naive_string_search.py)\n  * [Ngram](strings/ngram.py)\n  * [Palindrome](strings/palindrome.py)\n  * [Pig Latin](strings/pig_latin.py)\n  * [Prefix Function](strings/prefix_function.py)\n  * [Rabin Karp](strings/rabin_karp.py)\n  * [Remove Duplicate](strings/remove_duplicate.py)\n  * [Reverse Letters](strings/reverse_letters.py)\n  * [Reverse Words](strings/reverse_words.py)\n  * [Snake Case To Camel Pascal Case](strings/snake_case_to_camel_pascal_case.py)\n  * [Split](strings/split.py)\n  * [String Switch Case](strings/string_switch_case.py)\n  * [Strip](strings/strip.py)\n  * [Text Justification](strings/text_justification.py)\n  * [Title](strings/title.py)\n  * [Top K Frequent Words](strings/top_k_frequent_words.py)\n  * [Upper](strings/upper.py)\n  * [Wave String](strings/wave_string.py)\n  * [Wildcard Pattern Matching](strings/wildcard_pattern_matching.py)\n  * [Word Occurrence](strings/word_occurrence.py)\n  * [Word Patterns](strings/word_patterns.py)\n  * [Z Function](strings/z_function.py)\n\n## Web Programming\n  * [Co2 Emission](web_programming/co2_emission.py)\n  * [Covid Stats Via Xpath](web_programming/covid_stats_via_xpath.py)\n  * [Crawl Google Results](web_programming/crawl_google_results.py)\n  * [Crawl Google Scholar Citation](web_programming/crawl_google_scholar_citation.py)\n  * [Currency Converter](web_programming/currency_converter.py)\n  * [Current Stock Price](web_programming/current_stock_price.py)\n  * [Current Weather](web_programming/current_weather.py)\n  * [Daily Horoscope](web_programming/daily_horoscope.py)\n  * [Download Images From Google Query](web_programming/download_images_from_google_query.py)\n  * [Emails From Url](web_programming/emails_from_url.py)\n  * [Fetch Anime And Play](web_programming/fetch_anime_and_play.py)\n  * [Fetch Bbc News](web_programming/fetch_bbc_news.py)\n  * [Fetch Github Info](web_programming/fetch_github_info.py)\n  * [Fetch Jobs](web_programming/fetch_jobs.py)\n  * [Fetch Quotes](web_programming/fetch_quotes.py)\n  * [Fetch Well Rx Price](web_programming/fetch_well_rx_price.py)\n  * [Get Amazon Product Data](web_programming/get_amazon_product_data.py)\n  * [Get Imdb Top 250 Movies Csv](web_programming/get_imdb_top_250_movies_csv.py)\n  * [Get Ip Geolocation](web_programming/get_ip_geolocation.py)\n  * [Get Top Billionaires](web_programming/get_top_billionaires.py)\n  * [Get Top Hn Posts](web_programming/get_top_hn_posts.py)\n  * [Giphy](web_programming/giphy.py)\n  * [Instagram Crawler](web_programming/instagram_crawler.py)\n  * [Instagram Pic](web_programming/instagram_pic.py)\n  * [Instagram Video](web_programming/instagram_video.py)\n  * [Nasa Data](web_programming/nasa_data.py)\n  * [Open Google Results](web_programming/open_google_results.py)\n  * [Random Anime Character](web_programming/random_anime_character.py)\n  * [Recaptcha Verification](web_programming/recaptcha_verification.py)\n  * [Reddit](web_programming/reddit.py)\n  * [Search Books By Isbn](web_programming/search_books_by_isbn.py)\n  * [Slack Message](web_programming/slack_message.py)\n  * [Test Fetch Github Info](web_programming/test_fetch_github_info.py)\n  * [World Covid19 Stats](web_programming/world_covid19_stats.py)\n"}
{"repo_url": "https://github.com/huggingface/transformers", "path": "conftest.py", "size": 4595, "license": "Apache-2.0", "content_sha": "6b3100c84e77ce3bb508a0ccd70d6d117e003480", "findings": [], "content": "# Copyright 2020 The HuggingFace Team. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# tests directory-specific settings - this file is run automatically\n# by pytest before any tests are run\n\nimport doctest\nimport sys\nimport warnings\nfrom os.path import abspath, dirname, join\n\nimport _pytest\nimport pytest\n\nfrom transformers.testing_utils import HfDoctestModule, HfDocTestParser\n\n\nNOT_DEVICE_TESTS = {\n    \"test_tokenization\",\n    \"test_processor\",\n    \"test_processing\",\n    \"test_beam_constraints\",\n    \"test_configuration_utils\",\n    \"test_data_collator\",\n    \"test_trainer_callback\",\n    \"test_trainer_utils\",\n    \"test_feature_extraction\",\n    \"test_image_processing\",\n    \"test_image_processor\",\n    \"test_image_transforms\",\n    \"test_optimization\",\n    \"test_retrieval\",\n    \"test_config\",\n    \"test_from_pretrained_no_checkpoint\",\n    \"test_keep_in_fp32_modules\",\n    \"test_gradient_checkpointing_backward_compatibility\",\n    \"test_gradient_checkpointing_enable_disable\",\n    \"test_torch_save_load\",\n    \"test_initialization\",\n    \"test_forward_signature\",\n    \"test_model_get_set_embeddings\",\n    \"test_model_main_input_name\",\n    \"test_correct_missing_keys\",\n    \"test_tie_model_weights\",\n    \"test_can_use_safetensors\",\n    \"test_load_save_without_tied_weights\",\n    \"test_tied_weights_keys\",\n    \"test_model_weights_reload_no_missing_tied_weights\",\n    \"test_mismatched_shapes_have_properly_initialized_weights\",\n    \"test_matched_shapes_have_loaded_weights_when_some_mismatched_shapes_exist\",\n    \"test_model_is_small\",\n    \"test_tf_from_pt_safetensors\",\n    \"test_flax_from_pt_safetensors\",\n    \"ModelTest::test_pipeline_\",  # None of the pipeline tests from PipelineTesterMixin (of which XxxModelTest inherits from) are running on device\n    \"ModelTester::test_pipeline_\",\n    \"/repo_utils/\",\n    \"/utils/\",\n}\n\n# allow having multiple repository checkouts and not needing to remember to rerun\n# `pip install -e '.[dev]'` when switching between checkouts and running tests.\ngit_repo_path = abspath(join(dirname(__file__), \"src\"))\nsys.path.insert(1, git_repo_path)\n\n# silence FutureWarning warnings in tests since often we can't act on them until\n# they become normal warnings - i.e. the tests still need to test the current functionality\nwarnings.simplefilter(action=\"ignore\", category=FutureWarning)\n\n\ndef pytest_configure(config):\n    config.addinivalue_line(\"markers\", \"is_pipeline_test: mark test to run only when pipelines are tested\")\n    config.addinivalue_line(\"markers\", \"is_staging_test: mark test to run only in the staging environment\")\n    config.addinivalue_line(\"markers\", \"accelerate_tests: mark test that require accelerate\")\n    config.addinivalue_line(\"markers\", \"not_device_test: mark the tests always running on cpu\")\n\n\ndef pytest_collection_modifyitems(items):\n    for item in items:\n        if any(test_name in item.nodeid for test_name in NOT_DEVICE_TESTS):\n            item.add_marker(pytest.mark.not_device_test)\n\n\ndef pytest_addoption(parser):\n    from transformers.testing_utils import pytest_addoption_shared\n\n    pytest_addoption_shared(parser)\n\n\ndef pytest_terminal_summary(terminalreporter):\n    from transformers.testing_utils import pytest_terminal_summary_main\n\n    make_reports = terminalreporter.config.getoption(\"--make-reports\")\n    if make_reports:\n        pytest_terminal_summary_main(terminalreporter, id=make_reports)\n\n\ndef pytest_sessionfinish(session, exitstatus):\n    # If no tests are collected, pytest exists with code 5, which makes the CI fail.\n    if exitstatus == 5:\n        session.exitstatus = 0\n\n\n# Doctest custom flag to ignore output.\nIGNORE_RESULT = doctest.register_optionflag(\"IGNORE_RESULT\")\n\nOutputChecker = doctest.OutputChecker\n\n\nclass CustomOutputChecker(OutputChecker):\n    def check_output(self, want, got, optionflags):\n        if IGNORE_RESULT & optionflags:\n            return True\n        return OutputChecker.check_output(self, want, got, optionflags)\n\n\ndoctest.OutputChecker = CustomOutputChecker\n_pytest.doctest.DoctestModule = HfDoctestModule\ndoctest.DocTestParser = HfDocTestParser\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "LICENSE.md", "size": 1095, "license": "MIT", "content_sha": "de631c3ef33374d91a78dca3a656806e4e3bb890", "findings": [], "content": "## MIT License\n\nCopyright (c) 2016-2022 TheAlgorithms and contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "README.md", "size": 2770, "license": "MIT", "content_sha": "d8eba4e016fa1ff7951a1a967835afd162396ef5", "findings": [], "content": "<div align=\"center\">\n<!-- Title: -->\n  <a href=\"https://github.com/TheAlgorithms/\">\n    <img src=\"https://raw.githubusercontent.com/TheAlgorithms/website/1cd824df116b27029f17c2d1b42d81731f28a920/public/logo.svg\" height=\"100\">\n  </a>\n  <h1><a href=\"https://github.com/TheAlgorithms/\">The Algorithms</a> - Python</h1>\n<!-- Labels: -->\n  <!-- First row: -->\n  <a href=\"https://gitpod.io/#https://github.com/TheAlgorithms/Python\">\n    <img src=\"https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&style=flat-square\" height=\"20\" alt=\"Gitpod Ready-to-Code\">\n  </a>\n  <a href=\"https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md\">\n    <img src=\"https://img.shields.io/static/v1.svg?label=Contributions&message=Welcome&color=0059b3&style=flat-square\" height=\"20\" alt=\"Contributions Welcome\">\n  </a>\n  <img src=\"https://img.shields.io/github/repo-size/TheAlgorithms/Python.svg?label=Repo%20size&style=flat-square\" height=\"20\">\n  <a href=\"https://the-algorithms.com/discord\">\n    <img src=\"https://img.shields.io/discord/808045925556682782.svg?logo=discord&colorB=7289DA&style=flat-square\" height=\"20\" alt=\"Discord chat\">\n  </a>\n  <a href=\"https://gitter.im/TheAlgorithms/community\">\n    <img src=\"https://img.shields.io/badge/Chat-Gitter-ff69b4.svg?label=Chat&logo=gitter&style=flat-square\" height=\"20\" alt=\"Gitter chat\">\n  </a>\n  <!-- Second row: -->\n  <br>\n  <a href=\"https://github.com/TheAlgorithms/Python/actions\">\n    <img src=\"https://img.shields.io/github/actions/workflow/status/TheAlgorithms/Python/build.yml?branch=master&label=CI&logo=github&style=flat-square\" height=\"20\" alt=\"GitHub Workflow Status\">\n  </a>\n  <a href=\"https://github.com/pre-commit/pre-commit\">\n    <img src=\"https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white&style=flat-square\" height=\"20\" alt=\"pre-commit\">\n  </a>\n  <a href=\"https://github.com/psf/black\">\n    <img src=\"https://img.shields.io/static/v1?label=code%20style&message=black&color=black&style=flat-square\" height=\"20\" alt=\"code style: black\">\n  </a>\n<!-- Short description: -->\n  <h3>All algorithms implemented in Python - for education</h3>\n</div>\n\nImplementations are for learning purposes only. They may be less efficient than the implementations in the Python standard library. Use them at your discretion.\n\n## Getting Started\n\nRead through our [Contribution Guidelines](CONTRIBUTING.md) before you contribute.\n\n## Community Channels\n\nWe are on [Discord](https://the-algorithms.com/discord) and [Gitter](https://gitter.im/TheAlgorithms/community)! Community channels are a great way for you to ask questions and get help. Please join us!\n\n## List of Algorithms\n\nSee our [directory](DIRECTORY.md) for easier navigation and a better overview of the project.\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "audio_filters/README.md", "size": 415, "license": "MIT", "content_sha": "4419bd8bdbf93f3de432ca18da2396d462901f58", "findings": [], "content": "# Audio Filter\n\nAudio filters work on the frequency of an audio signal to attenuate unwanted frequency and amplify wanted ones.\nThey are used within anything related to sound, whether it is radio communication or a hi-fi system.\n\n* <https://www.masteringbox.com/filter-types/>\n* <http://ethanwiner.com/filters.html>\n* <https://en.wikipedia.org/wiki/Audio_filter>\n* <https://en.wikipedia.org/wiki/Electronic_filter>\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "audio_filters/butterworth_filter.py", "size": 5989, "license": "MIT", "content_sha": "4e6ea1b18fb4de89f95a5e1bbd64add0fdaeb9b1", "findings": [], "content": "from math import cos, sin, sqrt, tau\n\nfrom audio_filters.iir_filter import IIRFilter\n\n\"\"\"\nCreate 2nd-order IIR filters with Butterworth design.\n\nCode based on https://webaudio.github.io/Audio-EQ-Cookbook/audio-eq-cookbook.html\nAlternatively you can use scipy.signal.butter, which should yield the same results.\n\"\"\"\n\n\ndef make_lowpass(\n    frequency: int,\n    samplerate: int,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a low-pass filter\n\n    >>> filter = make_lowpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.004277569313094809,\n     0.008555138626189618, 0.004277569313094809]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n\n    b0 = (1 - _cos) / 2\n    b1 = 1 - _cos\n\n    a0 = 1 + alpha\n    a1 = -2 * _cos\n    a2 = 1 - alpha\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b0])\n    return filt\n\n\ndef make_highpass(\n    frequency: int,\n    samplerate: int,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a high-pass filter\n\n    >>> filter = make_highpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9957224306869052,\n     -1.9914448613738105, 0.9957224306869052]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n\n    b0 = (1 + _cos) / 2\n    b1 = -1 - _cos\n\n    a0 = 1 + alpha\n    a1 = -2 * _cos\n    a2 = 1 - alpha\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b0])\n    return filt\n\n\ndef make_bandpass(\n    frequency: int,\n    samplerate: int,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a band-pass filter\n\n    >>> filter = make_bandpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.06526309611002579,\n     0, -0.06526309611002579]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n\n    b0 = _sin / 2\n    b1 = 0\n    b2 = -b0\n\n    a0 = 1 + alpha\n    a1 = -2 * _cos\n    a2 = 1 - alpha\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b2])\n    return filt\n\n\ndef make_allpass(\n    frequency: int,\n    samplerate: int,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates an all-pass filter\n\n    >>> filter = make_allpass(1000, 48000)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0922959556412573, -1.9828897227476208, 0.9077040443587427, 0.9077040443587427,\n     -1.9828897227476208, 1.0922959556412573]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n\n    b0 = 1 - alpha\n    b1 = -2 * _cos\n    b2 = 1 + alpha\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([b2, b1, b0], [b0, b1, b2])\n    return filt\n\n\ndef make_peak(\n    frequency: int,\n    samplerate: int,\n    gain_db: float,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a peak filter\n\n    >>> filter = make_peak(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [1.0653405327119334, -1.9828897227476208, 0.9346594672880666, 1.1303715025601122,\n     -1.9828897227476208, 0.8696284974398878]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n    big_a = 10 ** (gain_db / 40)\n\n    b0 = 1 + alpha * big_a\n    b1 = -2 * _cos\n    b2 = 1 - alpha * big_a\n    a0 = 1 + alpha / big_a\n    a1 = -2 * _cos\n    a2 = 1 - alpha / big_a\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b2])\n    return filt\n\n\ndef make_lowshelf(\n    frequency: int,\n    samplerate: int,\n    gain_db: float,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a low-shelf filter\n\n    >>> filter = make_lowshelf(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [3.0409336710888786, -5.608870992220748, 2.602157875636628, 3.139954022810743,\n     -5.591841778072785, 2.5201667380627257]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n    big_a = 10 ** (gain_db / 40)\n    pmc = (big_a + 1) - (big_a - 1) * _cos\n    ppmc = (big_a + 1) + (big_a - 1) * _cos\n    mpc = (big_a - 1) - (big_a + 1) * _cos\n    pmpc = (big_a - 1) + (big_a + 1) * _cos\n    aa2 = 2 * sqrt(big_a) * alpha\n\n    b0 = big_a * (pmc + aa2)\n    b1 = 2 * big_a * mpc\n    b2 = big_a * (pmc - aa2)\n    a0 = ppmc + aa2\n    a1 = -2 * pmpc\n    a2 = ppmc - aa2\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b2])\n    return filt\n\n\ndef make_highshelf(\n    frequency: int,\n    samplerate: int,\n    gain_db: float,\n    q_factor: float = 1 / sqrt(2),\n) -> IIRFilter:\n    \"\"\"\n    Creates a high-shelf filter\n\n    >>> filter = make_highshelf(1000, 48000, 6)\n    >>> filter.a_coeffs + filter.b_coeffs  # doctest: +NORMALIZE_WHITESPACE\n    [2.2229172136088806, -3.9587208137297303, 1.7841414181566304, 4.295432981120543,\n     -7.922740859457287, 3.6756456963725253]\n    \"\"\"\n    w0 = tau * frequency / samplerate\n    _sin = sin(w0)\n    _cos = cos(w0)\n    alpha = _sin / (2 * q_factor)\n    big_a = 10 ** (gain_db / 40)\n    pmc = (big_a + 1) - (big_a - 1) * _cos\n    ppmc = (big_a + 1) + (big_a - 1) * _cos\n    mpc = (big_a - 1) - (big_a + 1) * _cos\n    pmpc = (big_a - 1) + (big_a + 1) * _cos\n    aa2 = 2 * sqrt(big_a) * alpha\n\n    b0 = big_a * (ppmc + aa2)\n    b1 = -2 * big_a * pmpc\n    b2 = big_a * (ppmc - aa2)\n    a0 = pmc + aa2\n    a1 = 2 * mpc\n    a2 = pmc - aa2\n\n    filt = IIRFilter(2)\n    filt.set_coefficients([a0, a1, a2], [b0, b1, b2])\n    return filt\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "audio_filters/equal_loudness_filter.py.broken.txt", "size": 2210, "license": "MIT", "content_sha": "88cba8533cf72cbc76a7825110e9078b2a2254b3", "findings": [], "content": "from json import loads\nfrom pathlib import Path\n\nimport numpy as np\nfrom yulewalker import yulewalk\n\nfrom audio_filters.butterworth_filter import make_highpass\nfrom audio_filters.iir_filter import IIRFilter\n\ndata = loads((Path(__file__).resolve().parent / \"loudness_curve.json\").read_text())\n\n\nclass EqualLoudnessFilter:\n    r\"\"\"\n    An equal-loudness filter which compensates for the human ear's non-linear response\n     to sound.\n    This filter corrects this by cascading a yulewalk filter and a butterworth filter.\n\n    Designed for use with samplerate of 44.1kHz and above. If you're using a lower\n     samplerate, use with caution.\n\n    Code based on matlab implementation at https://bit.ly/3eqh2HU\n    (url shortened for ruff)\n\n    Target curve: https://i.imgur.com/3g2VfaM.png\n    Yulewalk response: https://i.imgur.com/J9LnJ4C.png\n    Butterworth and overall response: https://i.imgur.com/3g2VfaM.png\n\n    Images and original matlab implementation by David Robinson, 2001\n    \"\"\"\n\n    def __init__(self, samplerate: int = 44100) -> None:\n        self.yulewalk_filter = IIRFilter(10)\n        self.butterworth_filter = make_highpass(150, samplerate)\n\n        # pad the data to nyquist\n        curve_freqs = np.array(data[\"frequencies\"] + [max(20000.0, samplerate / 2)])\n        curve_gains = np.array(data[\"gains\"] + [140])\n\n        # Convert to angular frequency\n        freqs_normalized = curve_freqs / samplerate * 2\n        # Invert the curve and normalize to 0dB\n        gains_normalized = np.power(10, (np.min(curve_gains) - curve_gains) / 20)\n\n        # Scipy's `yulewalk` function is a stub, so we're using the\n        #  `yulewalker` library instead.\n        # This function computes the coefficients using a least-squares\n        #  fit to the specified curve.\n        ya, yb = yulewalk(10, freqs_normalized, gains_normalized)\n        self.yulewalk_filter.set_coefficients(ya, yb)\n\n    def process(self, sample: float) -> float:\n        \"\"\"\n        Process a single sample through both filters\n\n        >>> filt = EqualLoudnessFilter()\n        >>> filt.process(0.0)\n        0.0\n        \"\"\"\n        tmp = self.yulewalk_filter.process(sample)\n        return self.butterworth_filter.process(tmp)\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "audio_filters/iir_filter.py", "size": 3271, "license": "MIT", "content_sha": "fa3e6c54b33f1bf6e9d3d16e6c20d5ba91215954", "findings": [], "content": "from __future__ import annotations\n\n\nclass IIRFilter:\n    r\"\"\"\n    N-Order IIR filter\n    Assumes working with float samples normalized on [-1, 1]\n\n    ---\n\n    Implementation details:\n    Based on the 2nd-order function from\n    https://en.wikipedia.org/wiki/Digital_biquad_filter,\n    this generalized N-order function was made.\n\n    Using the following transfer function\n        .. math:: H(z)=\\frac{b_{0}+b_{1}z^{-1}+b_{2}z^{-2}+...+b_{k}z^{-k}}\n                  {a_{0}+a_{1}z^{-1}+a_{2}z^{-2}+...+a_{k}z^{-k}}\n\n    we can rewrite this to\n        .. math:: y[n]={\\frac{1}{a_{0}}}\n                  \\left(\\left(b_{0}x[n]+b_{1}x[n-1]+b_{2}x[n-2]+...+b_{k}x[n-k]\\right)-\n                  \\left(a_{1}y[n-1]+a_{2}y[n-2]+...+a_{k}y[n-k]\\right)\\right)\n    \"\"\"\n\n    def __init__(self, order: int) -> None:\n        self.order = order\n\n        # a_{0} ... a_{k}\n        self.a_coeffs = [1.0] + [0.0] * order\n        # b_{0} ... b_{k}\n        self.b_coeffs = [1.0] + [0.0] * order\n\n        # x[n-1] ... x[n-k]\n        self.input_history = [0.0] * self.order\n        # y[n-1] ... y[n-k]\n        self.output_history = [0.0] * self.order\n\n    def set_coefficients(self, a_coeffs: list[float], b_coeffs: list[float]) -> None:\n        \"\"\"\n        Set the coefficients for the IIR filter.\n        These should both be of size `order` + 1.\n        :math:`a_0` may be left out, and it will use 1.0 as default value.\n\n        This method works well with scipy's filter design functions\n\n        >>> # Make a 2nd-order 1000Hz butterworth lowpass filter\n        >>> import scipy.signal\n        >>> b_coeffs, a_coeffs = scipy.signal.butter(2, 1000,\n        ...                                          btype='lowpass',\n        ...                                          fs=48000)\n        >>> filt = IIRFilter(2)\n        >>> filt.set_coefficients(a_coeffs, b_coeffs)\n        \"\"\"\n        if len(a_coeffs) < self.order:\n            a_coeffs = [1.0, *a_coeffs]\n\n        if len(a_coeffs) != self.order + 1:\n            msg = (\n                f\"Expected a_coeffs to have {self.order + 1} elements \"\n                f\"for {self.order}-order filter, got {len(a_coeffs)}\"\n            )\n            raise ValueError(msg)\n\n        if len(b_coeffs) != self.order + 1:\n            msg = (\n                f\"Expected b_coeffs to have {self.order + 1} elements \"\n                f\"for {self.order}-order filter, got {len(a_coeffs)}\"\n            )\n            raise ValueError(msg)\n\n        self.a_coeffs = a_coeffs\n        self.b_coeffs = b_coeffs\n\n    def process(self, sample: float) -> float:\n        \"\"\"\n        Calculate :math:`y[n]`\n\n        >>> filt = IIRFilter(2)\n        >>> filt.process(0)\n        0.0\n        \"\"\"\n        result = 0.0\n\n        # Start at index 1 and do index 0 at the end.\n        for i in range(1, self.order + 1):\n            result += (\n                self.b_coeffs[i] * self.input_history[i - 1]\n                - self.a_coeffs[i] * self.output_history[i - 1]\n            )\n\n        result = (result + self.b_coeffs[0] * sample) / self.a_coeffs[0]\n\n        self.input_history[1:] = self.input_history[:-1]\n        self.output_history[1:] = self.output_history[:-1]\n\n        self.input_history[0] = sample\n        self.output_history[0] = result\n\n        return result\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "audio_filters/show_response.py", "size": 2477, "license": "MIT", "content_sha": "f9c9537c047c71c841f0fe77748ead53328edf89", "findings": [], "content": "from __future__ import annotations\n\nfrom abc import abstractmethod\nfrom math import pi\nfrom typing import Protocol\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\nclass FilterType(Protocol):\n    @abstractmethod\n    def process(self, sample: float) -> float:\n        \"\"\"\n        Calculate y[n]\n\n        >>> issubclass(FilterType, Protocol)\n        True\n        \"\"\"\n\n\ndef get_bounds(\n    fft_results: np.ndarray, samplerate: int\n) -> tuple[int | float, int | float]:\n    \"\"\"\n    Get bounds for printing fft results\n\n    >>> import numpy\n    >>> array = numpy.linspace(-20.0, 20.0, 1000)\n    >>> get_bounds(array, 1000)\n    (-20, 20)\n    \"\"\"\n    lowest = min([-20, np.min(fft_results[1 : samplerate // 2 - 1])])\n    highest = max([20, np.max(fft_results[1 : samplerate // 2 - 1])])\n    return lowest, highest\n\n\ndef show_frequency_response(filter_type: FilterType, samplerate: int) -> None:\n    \"\"\"\n    Show frequency response of a filter\n\n    >>> from audio_filters.iir_filter import IIRFilter\n    >>> filt = IIRFilter(4)\n    >>> show_frequency_response(filt, 48000)\n    \"\"\"\n\n    size = 512\n    inputs = [1] + [0] * (size - 1)\n    outputs = [filter_type.process(item) for item in inputs]\n\n    filler = [0] * (samplerate - size)  # zero-padding\n    outputs += filler\n    fft_out = np.abs(np.fft.fft(outputs))\n    fft_db = 20 * np.log10(fft_out)\n\n    # Frequencies on log scale from 24 to nyquist frequency\n    plt.xlim(24, samplerate / 2 - 1)\n    plt.xlabel(\"Frequency (Hz)\")\n    plt.xscale(\"log\")\n\n    # Display within reasonable bounds\n    bounds = get_bounds(fft_db, samplerate)\n    plt.ylim(max([-80, bounds[0]]), min([80, bounds[1]]))\n    plt.ylabel(\"Gain (dB)\")\n\n    plt.plot(fft_db)\n    plt.show()\n\n\ndef show_phase_response(filter_type: FilterType, samplerate: int) -> None:\n    \"\"\"\n    Show phase response of a filter\n\n    >>> from audio_filters.iir_filter import IIRFilter\n    >>> filt = IIRFilter(4)\n    >>> show_phase_response(filt, 48000)\n    \"\"\"\n\n    size = 512\n    inputs = [1] + [0] * (size - 1)\n    outputs = [filter_type.process(item) for item in inputs]\n\n    filler = [0] * (samplerate - size)  # zero-padding\n    outputs += filler\n    fft_out = np.angle(np.fft.fft(outputs))\n\n    # Frequencies on log scale from 24 to nyquist frequency\n    plt.xlim(24, samplerate / 2 - 1)\n    plt.xlabel(\"Frequency (Hz)\")\n    plt.xscale(\"log\")\n\n    plt.ylim(-2 * pi, 2 * pi)\n    plt.ylabel(\"Phase shift (Radians)\")\n    plt.plot(np.unwrap(fft_out, -2 * pi))\n    plt.show()\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "backtracking/README.md", "size": 374, "license": "MIT", "content_sha": "d4975dfb5ad7f8923180ff5d57ed6482080b2049", "findings": [], "content": "# Backtracking\n\nBacktracking is a way to speed up the search process by removing candidates when they can't be the solution of a problem.\n\n* <https://en.wikipedia.org/wiki/Backtracking>\n* <https://en.wikipedia.org/wiki/Decision_tree_pruning>\n* <https://medium.com/@priyankmistry1999/backtracking-sudoku-6e4439e4825c>\n* <https://www.geeksforgeeks.org/sudoku-backtracking-7/>\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "backtracking/all_combinations.py", "size": 3481, "license": "MIT", "content_sha": "1d15c6263e14ebde194fdd07fb04a2fb2b964bcf", "findings": [], "content": "\"\"\"\nIn this problem, we want to determine all possible combinations of k\nnumbers out of 1 ... n. We use backtracking to solve this problem.\n\nTime complexity: O(C(n,k)) which is O(n choose k) = O((n!/(k! * (n - k)!))),\n\"\"\"\n\nfrom __future__ import annotations\n\nfrom itertools import combinations\n\n\ndef combination_lists(n: int, k: int) -> list[list[int]]:\n    \"\"\"\n    Generates all possible combinations of k numbers out of 1 ... n using itertools.\n\n    >>> combination_lists(n=4, k=2)\n    [[1, 2], [1, 3], [1, 4], [2, 3], [2, 4], [3, 4]]\n    \"\"\"\n    return [list(x) for x in combinations(range(1, n + 1), k)]\n\n\ndef generate_all_combinations(n: int, k: int) -> list[list[int]]:\n    \"\"\"\n    Generates all possible combinations of k numbers out of 1 ... n using backtracking.\n\n    >>> generate_all_combinations(n=4, k=2)\n    [[1, 2], [1, 3], [1, 4], [2, 3], [2, 4], [3, 4]]\n    >>> generate_all_combinations(n=0, k=0)\n    [[]]\n    >>> generate_all_combinations(n=10, k=-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: k must not be negative\n    >>> generate_all_combinations(n=-1, k=10)\n    Traceback (most recent call last):\n        ...\n    ValueError: n must not be negative\n    >>> generate_all_combinations(n=5, k=4)\n    [[1, 2, 3, 4], [1, 2, 3, 5], [1, 2, 4, 5], [1, 3, 4, 5], [2, 3, 4, 5]]\n    >>> generate_all_combinations(n=3, k=3)\n    [[1, 2, 3]]\n    >>> generate_all_combinations(n=3, k=1)\n    [[1], [2], [3]]\n    >>> generate_all_combinations(n=1, k=0)\n    [[]]\n    >>> generate_all_combinations(n=1, k=1)\n    [[1]]\n    >>> from itertools import combinations\n    >>> all(generate_all_combinations(n, k) == combination_lists(n, k)\n    ...     for n in range(1, 6) for k in range(1, 6))\n    True\n    \"\"\"\n    if k < 0:\n        raise ValueError(\"k must not be negative\")\n    if n < 0:\n        raise ValueError(\"n must not be negative\")\n\n    result: list[list[int]] = []\n    create_all_state(1, n, k, [], result)\n    return result\n\n\ndef create_all_state(\n    increment: int,\n    total_number: int,\n    level: int,\n    current_list: list[int],\n    total_list: list[list[int]],\n) -> None:\n    \"\"\"\n    Helper function to recursively build all combinations.\n\n    >>> create_all_state(1, 4, 2, [], result := [])\n    >>> result\n    [[1, 2], [1, 3], [1, 4], [2, 3], [2, 4], [3, 4]]\n    >>> create_all_state(1, 3, 3, [], result := [])\n    >>> result\n    [[1, 2, 3]]\n    >>> create_all_state(2, 2, 1, [1], result := [])\n    >>> result\n    [[1, 2]]\n    >>> create_all_state(1, 0, 0, [], result := [])\n    >>> result\n    [[]]\n    >>> create_all_state(1, 4, 0, [1, 2], result := [])\n    >>> result\n    [[1, 2]]\n    >>> create_all_state(5, 4, 2, [1, 2], result := [])\n    >>> result\n    []\n    \"\"\"\n    if level == 0:\n        total_list.append(current_list[:])\n        return\n\n    for i in range(increment, total_number - level + 2):\n        current_list.append(i)\n        create_all_state(i + 1, total_number, level - 1, current_list, total_list)\n        current_list.pop()\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()\n    print(generate_all_combinations(n=4, k=2))\n    tests = ((n, k) for n in range(1, 5) for k in range(1, 5))\n    for n, k in tests:\n        print(n, k, generate_all_combinations(n, k) == combination_lists(n, k))\n\n    print(\"Benchmark:\")\n    from timeit import timeit\n\n    for func in (\"combination_lists\", \"generate_all_combinations\"):\n        print(f\"{func:>25}(): {timeit(f'{func}(n=4, k = 2)', globals=globals())}\")\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "backtracking/all_permutations.py", "size": 2512, "license": "MIT", "content_sha": "f376e6fa0945f91b1177fa8efb5e13b85fb9513a", "findings": [], "content": "\"\"\"\nIn this problem, we want to determine all possible permutations\nof the given sequence. We use backtracking to solve this problem.\n\nTime complexity: O(n! * n),\nwhere n denotes the length of the given sequence.\n\"\"\"\n\nfrom __future__ import annotations\n\n\ndef generate_all_permutations(sequence: list[int | str]) -> None:\n    create_state_space_tree(sequence, [], 0, [0 for i in range(len(sequence))])\n\n\ndef create_state_space_tree(\n    sequence: list[int | str],\n    current_sequence: list[int | str],\n    index: int,\n    index_used: list[int],\n) -> None:\n    \"\"\"\n    Creates a state space tree to iterate through each branch using DFS.\n    We know that each state has exactly len(sequence) - index children.\n    It terminates when it reaches the end of the given sequence.\n\n    :param sequence: The input sequence for which permutations are generated.\n    :param current_sequence: The current permutation being built.\n    :param index: The current index in the sequence.\n    :param index_used: list to track which elements are used in permutation.\n\n    Example 1:\n    >>> sequence = [1, 2, 3]\n    >>> current_sequence = []\n    >>> index_used = [False, False, False]\n    >>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n    [1, 2, 3]\n    [1, 3, 2]\n    [2, 1, 3]\n    [2, 3, 1]\n    [3, 1, 2]\n    [3, 2, 1]\n\n    Example 2:\n    >>> sequence = [\"A\", \"B\", \"C\"]\n    >>> current_sequence = []\n    >>> index_used = [False, False, False]\n    >>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n    ['A', 'B', 'C']\n    ['A', 'C', 'B']\n    ['B', 'A', 'C']\n    ['B', 'C', 'A']\n    ['C', 'A', 'B']\n    ['C', 'B', 'A']\n\n    Example 3:\n    >>> sequence = [1]\n    >>> current_sequence = []\n    >>> index_used = [False]\n    >>> create_state_space_tree(sequence, current_sequence, 0, index_used)\n    [1]\n    \"\"\"\n\n    if index == len(sequence):\n        print(current_sequence)\n        return\n\n    for i in range(len(sequence)):\n        if not index_used[i]:\n            current_sequence.append(sequence[i])\n            index_used[i] = True\n            create_state_space_tree(sequence, current_sequence, index + 1, index_used)\n            current_sequence.pop()\n            index_used[i] = False\n\n\n\"\"\"\nremove the comment to take an input from the user\n\nprint(\"Enter the elements\")\nsequence = list(map(int, input().split()))\n\"\"\"\n\nsequence: list[int | str] = [3, 1, 2, 4]\ngenerate_all_permutations(sequence)\n\nsequence_2: list[int | str] = [\"A\", \"B\", \"C\"]\ngenerate_all_permutations(sequence_2)\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "backtracking/all_subsequences.py", "size": 2211, "license": "MIT", "content_sha": "18696054eb7e5383e3c0aa8968d010876014e76d", "findings": [], "content": "\"\"\"\nIn this problem, we want to determine all possible subsequences\nof the given sequence. We use backtracking to solve this problem.\n\nTime complexity: O(2^n),\nwhere n denotes the length of the given sequence.\n\"\"\"\n\nfrom __future__ import annotations\n\nfrom typing import Any\n\n\ndef generate_all_subsequences(sequence: list[Any]) -> None:\n    create_state_space_tree(sequence, [], 0)\n\n\ndef create_state_space_tree(\n    sequence: list[Any], current_subsequence: list[Any], index: int\n) -> None:\n    \"\"\"\n    Creates a state space tree to iterate through each branch using DFS.\n    We know that each state has exactly two children.\n    It terminates when it reaches the end of the given sequence.\n\n    :param sequence: The input sequence for which subsequences are generated.\n    :param current_subsequence: The current subsequence being built.\n    :param index: The current index in the sequence.\n\n    Example:\n    >>> sequence = [3, 2, 1]\n    >>> current_subsequence = []\n    >>> create_state_space_tree(sequence, current_subsequence, 0)\n    []\n    [1]\n    [2]\n    [2, 1]\n    [3]\n    [3, 1]\n    [3, 2]\n    [3, 2, 1]\n\n    >>> sequence = [\"A\", \"B\"]\n    >>> current_subsequence = []\n    >>> create_state_space_tree(sequence, current_subsequence, 0)\n    []\n    ['B']\n    ['A']\n    ['A', 'B']\n\n    >>> sequence = []\n    >>> current_subsequence = []\n    >>> create_state_space_tree(sequence, current_subsequence, 0)\n    []\n\n    >>> sequence = [1, 2, 3, 4]\n    >>> current_subsequence = []\n    >>> create_state_space_tree(sequence, current_subsequence, 0)\n    []\n    [4]\n    [3]\n    [3, 4]\n    [2]\n    [2, 4]\n    [2, 3]\n    [2, 3, 4]\n    [1]\n    [1, 4]\n    [1, 3]\n    [1, 3, 4]\n    [1, 2]\n    [1, 2, 4]\n    [1, 2, 3]\n    [1, 2, 3, 4]\n    \"\"\"\n\n    if index == len(sequence):\n        print(current_subsequence)\n        return\n\n    create_state_space_tree(sequence, current_subsequence, index + 1)\n    current_subsequence.append(sequence[index])\n    create_state_space_tree(sequence, current_subsequence, index + 1)\n    current_subsequence.pop()\n\n\nif __name__ == \"__main__\":\n    seq: list[Any] = [1, 2, 3]\n    generate_all_subsequences(seq)\n\n    seq.clear()\n    seq.extend([\"A\", \"B\", \"C\"])\n    generate_all_subsequences(seq)\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "backtracking/coloring.py", "size": 3198, "license": "MIT", "content_sha": "f10cdbcf9d2631c9c522702da2df1f9fbefcfaf5", "findings": [], "content": "\"\"\"\nGraph Coloring also called \"m coloring problem\"\nconsists of coloring a given graph with at most m colors\nsuch that no adjacent vertices are assigned the same color\n\nWikipedia: https://en.wikipedia.org/wiki/Graph_coloring\n\"\"\"\n\n\ndef valid_coloring(\n    neighbours: list[int], colored_vertices: list[int], color: int\n) -> bool:\n    \"\"\"\n    For each neighbour check if the coloring constraint is satisfied\n    If any of the neighbours fail the constraint return False\n    If all neighbours validate the constraint return True\n\n    >>> neighbours = [0,1,0,1,0]\n    >>> colored_vertices = [0, 2, 1, 2, 0]\n\n    >>> color = 1\n    >>> valid_coloring(neighbours, colored_vertices, color)\n    True\n\n    >>> color = 2\n    >>> valid_coloring(neighbours, colored_vertices, color)\n    False\n    \"\"\"\n    # Does any neighbour not satisfy the constraints\n    return not any(\n        neighbour == 1 and colored_vertices[i] == color\n        for i, neighbour in enumerate(neighbours)\n    )\n\n\ndef util_color(\n    graph: list[list[int]], max_colors: int, colored_vertices: list[int], index: int\n) -> bool:\n    \"\"\"\n    Pseudo-Code\n\n    Base Case:\n    1. Check if coloring is complete\n        1.1 If complete return True (meaning that we successfully colored the graph)\n\n    Recursive Step:\n    2. Iterates over each color:\n        Check if the current coloring is valid:\n            2.1. Color given vertex\n            2.2. Do recursive call, check if this coloring leads to a solution\n            2.4. if current coloring leads to a solution return\n            2.5. Uncolor given vertex\n\n    >>> graph = [[0, 1, 0, 0, 0],\n    ...          [1, 0, 1, 0, 1],\n    ...          [0, 1, 0, 1, 0],\n    ...          [0, 1, 1, 0, 0],\n    ...          [0, 1, 0, 0, 0]]\n    >>> max_colors = 3\n    >>> colored_vertices = [0, 1, 0, 0, 0]\n    >>> index = 3\n\n    >>> util_color(graph, max_colors, colored_vertices, index)\n    True\n\n    >>> max_colors = 2\n    >>> util_color(graph, max_colors, colored_vertices, index)\n    False\n    \"\"\"\n\n    # Base Case\n    if index == len(graph):\n        return True\n\n    # Recursive Step\n    for i in range(max_colors):\n        if valid_coloring(graph[index], colored_vertices, i):\n            # Color current vertex\n            colored_vertices[index] = i\n            # Validate coloring\n            if util_color(graph, max_colors, colored_vertices, index + 1):\n                return True\n            # Backtrack\n            colored_vertices[index] = -1\n    return False\n\n\ndef color(graph: list[list[int]], max_colors: int) -> list[int]:\n    \"\"\"\n    Wrapper function to call subroutine called util_color\n    which will either return True or False.\n    If True is returned colored_vertices list is filled with correct colorings\n\n    >>> graph = [[0, 1, 0, 0, 0],\n    ...          [1, 0, 1, 0, 1],\n    ...          [0, 1, 0, 1, 0],\n    ...          [0, 1, 1, 0, 0],\n    ...          [0, 1, 0, 0, 0]]\n\n    >>> max_colors = 3\n    >>> color(graph, max_colors)\n    [0, 1, 0, 2, 0]\n\n    >>> max_colors = 2\n    >>> color(graph, max_colors)\n    []\n    \"\"\"\n    colored_vertices = [-1] * len(graph)\n\n    if util_color(graph, max_colors, colored_vertices, 0):\n        return colored_vertices\n\n    return []\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "backtracking/combination_sum.py", "size": 1921, "license": "MIT", "content_sha": "3c6ed81f44f08f88dfca59c35e6079936e1c59a3", "findings": [], "content": "\"\"\"\nIn the Combination Sum problem, we are given a list consisting of distinct integers.\nWe need to find all the combinations whose sum equals to target given.\nWe can use an element more than one.\n\nTime complexity(Average Case): O(n!)\n\nConstraints:\n1 <= candidates.length <= 30\n2 <= candidates[i] <= 40\nAll elements of candidates are distinct.\n1 <= target <= 40\n\"\"\"\n\n\ndef backtrack(\n    candidates: list, path: list, answer: list, target: int, previous_index: int\n) -> None:\n    \"\"\"\n    A recursive function that searches for possible combinations. Backtracks in case\n    of a bigger current combination value than the target value.\n\n    Parameters\n    ----------\n    previous_index: Last index from the previous search\n    target: The value we need to obtain by summing our integers in the path list.\n    answer: A list of possible combinations\n    path: Current combination\n    candidates: A list of integers we can use.\n    \"\"\"\n    if target == 0:\n        answer.append(path.copy())\n    else:\n        for index in range(previous_index, len(candidates)):\n            if target >= candidates[index]:\n                path.append(candidates[index])\n                backtrack(candidates, path, answer, target - candidates[index], index)\n                path.pop(len(path) - 1)\n\n\ndef combination_sum(candidates: list, target: int) -> list:\n    \"\"\"\n    >>> combination_sum([2, 3, 5], 8)\n    [[2, 2, 2, 2], [2, 3, 3], [3, 5]]\n    >>> combination_sum([2, 3, 6, 7], 7)\n    [[2, 2, 3], [7]]\n    >>> combination_sum([-8, 2.3, 0], 1)\n    Traceback (most recent call last):\n        ...\n    RecursionError: maximum recursion depth exceeded\n    \"\"\"\n    path = []  # type: list[int]\n    answer = []  # type: list[int]\n    backtrack(candidates, path, answer, target, 0)\n    return answer\n\n\ndef main() -> None:\n    print(combination_sum([-8, 2.3, 0], 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n    main()\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "backtracking/crossword_puzzle_solver.py", "size": 3690, "license": "MIT", "content_sha": "e702c7e521539464d8924f61e12b569a4ba9ec27", "findings": [], "content": "# https://www.geeksforgeeks.org/solve-crossword-puzzle/\n\n\ndef is_valid(\n    puzzle: list[list[str]], word: str, row: int, col: int, vertical: bool\n) -> bool:\n    \"\"\"\n    Check if a word can be placed at the given position.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> is_valid(puzzle, 'word', 0, 0, True)\n    True\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> is_valid(puzzle, 'word', 0, 0, False)\n    True\n    \"\"\"\n    for i in range(len(word)):\n        if vertical:\n            if row + i >= len(puzzle) or puzzle[row + i][col] != \"\":\n                return False\n        elif col + i >= len(puzzle[0]) or puzzle[row][col + i] != \"\":\n            return False\n    return True\n\n\ndef place_word(\n    puzzle: list[list[str]], word: str, row: int, col: int, vertical: bool\n) -> None:\n    \"\"\"\n    Place a word at the given position.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> place_word(puzzle, 'word', 0, 0, True)\n    >>> puzzle\n    [['w', '', '', ''], ['o', '', '', ''], ['r', '', '', ''], ['d', '', '', '']]\n    \"\"\"\n    for i, char in enumerate(word):\n        if vertical:\n            puzzle[row + i][col] = char\n        else:\n            puzzle[row][col + i] = char\n\n\ndef remove_word(\n    puzzle: list[list[str]], word: str, row: int, col: int, vertical: bool\n) -> None:\n    \"\"\"\n    Remove a word from the given position.\n\n    >>> puzzle = [\n    ...     ['w', '', '', ''],\n    ...     ['o', '', '', ''],\n    ...     ['r', '', '', ''],\n    ...     ['d', '', '', '']\n    ... ]\n    >>> remove_word(puzzle, 'word', 0, 0, True)\n    >>> puzzle\n    [['', '', '', ''], ['', '', '', ''], ['', '', '', ''], ['', '', '', '']]\n    \"\"\"\n    for i in range(len(word)):\n        if vertical:\n            puzzle[row + i][col] = \"\"\n        else:\n            puzzle[row][col + i] = \"\"\n\n\ndef solve_crossword(puzzle: list[list[str]], words: list[str]) -> bool:\n    \"\"\"\n    Solve the crossword puzzle using backtracking.\n\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n\n    >>> words = ['word', 'four', 'more', 'last']\n    >>> solve_crossword(puzzle, words)\n    True\n    >>> puzzle = [\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', ''],\n    ...     ['', '', '', '']\n    ... ]\n    >>> words = ['word', 'four', 'more', 'paragraphs']\n    >>> solve_crossword(puzzle, words)\n    False\n    \"\"\"\n    for row in range(len(puzzle)):\n        for col in range(len(puzzle[0])):\n            if puzzle[row][col] == \"\":\n                for word in words:\n                    for vertical in [True, False]:\n                        if is_valid(puzzle, word, row, col, vertical):\n                            place_word(puzzle, word, row, col, vertical)\n                            words.remove(word)\n                            if solve_crossword(puzzle, words):\n                                return True\n                            words.append(word)\n                            remove_word(puzzle, word, row, col, vertical)\n                return False\n    return True\n\n\nif __name__ == \"__main__\":\n    PUZZLE = [[\"\"] * 3 for _ in range(3)]\n    WORDS = [\"cat\", \"dog\", \"car\"]\n\n    if solve_crossword(PUZZLE, WORDS):\n        print(\"Solution found:\")\n        for row in PUZZLE:\n            print(\" \".join(row))\n    else:\n        print(\"No solution found:\")\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "backtracking/generate_parentheses.py", "size": 2381, "license": "MIT", "content_sha": "18c21e2a9b51173fe679bee10a3b037bcc7507bc", "findings": [], "content": "\"\"\"\nauthor: Aayush Soni\nGiven n pairs of parentheses, write a function to generate all\ncombinations of well-formed parentheses.\nInput: n = 2\nOutput: [\"(())\",\"()()\"]\nLeetcode link: https://leetcode.com/problems/generate-parentheses/description/\n\"\"\"\n\n\ndef backtrack(\n    partial: str, open_count: int, close_count: int, n: int, result: list[str]\n) -> None:\n    \"\"\"\n    Generate valid combinations of balanced parentheses using recursion.\n\n    :param partial: A string representing the current combination.\n    :param open_count: An integer representing the count of open parentheses.\n    :param close_count: An integer representing the count of close parentheses.\n    :param n: An integer representing the total number of pairs.\n    :param result: A list to store valid combinations.\n    :return: None\n\n    This function uses recursion to explore all possible combinations,\n    ensuring that at each step, the parentheses remain balanced.\n\n    Example:\n    >>> result = []\n    >>> backtrack(\"\", 0, 0, 2, result)\n    >>> result\n    ['(())', '()()']\n    \"\"\"\n    if len(partial) == 2 * n:\n        # When the combination is complete, add it to the result.\n        result.append(partial)\n        return\n\n    if open_count < n:\n        # If we can add an open parenthesis, do so, and recurse.\n        backtrack(partial + \"(\", open_count + 1, close_count, n, result)\n\n    if close_count < open_count:\n        # If we can add a close parenthesis (it won't make the combination invalid),\n        # do so, and recurse.\n        backtrack(partial + \")\", open_count, close_count + 1, n, result)\n\n\ndef generate_parenthesis(n: int) -> list[str]:\n    \"\"\"\n    Generate valid combinations of balanced parentheses for a given n.\n\n    :param n: An integer representing the number of pairs of parentheses.\n    :return: A list of strings with valid combinations.\n\n    This function uses a recursive approach to generate the combinations.\n\n    Time Complexity: O(2^(2n)) - In the worst case, we have 2^(2n) combinations.\n    Space Complexity: O(n) - where 'n' is the number of pairs.\n\n    Example 1:\n    >>> generate_parenthesis(3)\n    ['((()))', '(()())', '(())()', '()(())', '()()()']\n\n    Example 2:\n    >>> generate_parenthesis(1)\n    ['()']\n    \"\"\"\n\n    result: list[str] = []\n    backtrack(\"\", 0, 0, n, result)\n    return result\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n"}
{"repo_url": "https://github.com/TheAlgorithms/Python", "path": "backtracking/hamiltonian_cycle.py", "size": 5835, "license": "MIT", "content_sha": "f6e4212e47f4037fa9e7d37c2228b5b1c067ac02", "findings": [], "content": "\"\"\"\nA Hamiltonian cycle (Hamiltonian circuit) is a graph cycle\nthrough a graph that visits each node exactly once.\nDetermining whether such paths and cycles exist in graphs\nis the 'Hamiltonian path problem', which is NP-complete.\n\nWikipedia: https://en.wikipedia.org/wiki/Hamiltonian_path\n\"\"\"\n\n\ndef valid_connection(\n    graph: list[list[int]], next_ver: int, curr_ind: int, path: list[int]\n) -> bool:\n    \"\"\"\n    Checks whether it is possible to add next into path by validating 2 statements\n    1. There should be path between current and next vertex\n    2. Next vertex should not be in path\n    If both validations succeed we return True, saying that it is possible to connect\n    this vertices, otherwise we return False\n\n    Case 1:Use exact graph as in main function, with initialized values\n    >>> graph = [[0, 1, 0, 1, 0],\n    ...          [1, 0, 1, 1, 1],\n    ...          [0, 1, 0, 0, 1],\n    ...          [1, 1, 0, 0, 1],\n    ...          [0, 1, 1, 1, 0]]\n    >>> path = [0, -1, -1, -1, -1, 0]\n    >>> curr_ind = 1\n    >>> next_ver = 1\n    >>> valid_connection(graph, next_ver, curr_ind, path)\n    True\n\n    Case 2: Same graph, but trying to connect to node that is already in path\n    >>> path = [0, 1, 2, 4, -1, 0]\n    >>> curr_ind = 4\n    >>> next_ver = 1\n    >>> valid_connection(graph, next_ver, curr_ind, path)\n    False\n    \"\"\"\n\n    # 1. Validate that path exists between current and next vertices\n    if graph[path[curr_ind - 1]][next_ver] == 0:\n        return False\n\n    # 2. Validate that next vertex is not already in path\n    return not any(vertex == next_ver for vertex in path)\n\n\ndef util_hamilton_cycle(graph: list[list[int]], path: list[int], curr_ind: int) -> bool:\n    \"\"\"\n    Pseudo-Code\n    Base Case:\n    1. Check if we visited all of vertices\n        1.1 If last visited vertex has path to starting vertex return True either\n            return False\n    Recursive Step:\n    2. Iterate over each vertex\n        Check if next vertex is valid for transiting from current vertex\n            2.1 Remember next vertex as next transition\n            2.2 Do recursive call and check if going to this vertex solves problem\n            2.3 If next vertex leads to solution return True\n            2.4 Else backtrack, delete remembered vertex\n\n    Case 1: Use exact graph as in main function, with initialized values\n    >>> graph = [[0, 1, 0, 1, 0],\n    ...          [1, 0, 1, 1, 1],\n    ...          [0, 1, 0, 0, 1],\n    ...          [1, 1, 0, 0, 1],\n    ...          [0, 1, 1, 1, 0]]\n    >>> path = [0, -1, -1, -1, -1, 0]\n    >>> curr_ind = 1\n    >>> util_hamilton_cycle(graph, path, curr_ind)\n    True\n    >>> path\n    [0, 1, 2, 4, 3, 0]\n\n    Case 2: Use exact graph as in previous case, but in the properties taken from\n        middle of calculation\n    >>> graph = [[0, 1, 0, 1, 0],\n    ...          [1, 0, 1, 1, 1],\n    ...          [0, 1, 0, 0, 1],\n    ...          [1, 1, 0, 0, 1],\n    ...          [0, 1, 1, 1, 0]]\n    >>> path = [0, 1, 2, -1, -1, 0]\n    >>> curr_ind = 3\n    >>> util_hamilton_cycle(graph, path, curr_ind)\n    True\n    >>> path\n    [0, 1, 2, 4, 3, 0]\n    \"\"\"\n\n    # Base Case\n    if curr_ind == len(graph):\n        # return whether path exists between current and starting vertices\n        return graph[path[curr_ind - 1]][path[0]] == 1\n\n    # Recursive Step\n    for next_ver in range(len(graph)):\n        if valid_connection(graph, next_ver, curr_ind, path):\n            # Insert current vertex  into path as next transition\n            path[curr_ind] = next_ver\n            # Validate created path\n            if util_hamilton_cycle(graph, path, curr_ind + 1):\n                return True\n            # Backtrack\n            path[curr_ind] = -1\n    return False\n\n\ndef hamilton_cycle(graph: list[list[int]], start_index: int = 0) -> list[int]:\n    r\"\"\"\n    Wrapper function to call subroutine called util_hamilton_cycle,\n    which will either return array of vertices indicating hamiltonian cycle\n    or an empty list indicating that hamiltonian cycle was not found.\n    Case 1:\n    Following graph consists of 5 edges.\n    If we look closely, we can see that there are multiple Hamiltonian cycles.\n    For example one result is when we iterate like:\n    (0)->(1)->(2)->(4)->(3)->(0)\n\n    (0)---(1)---(2)\n     |   /   \\   |\n     |  /     \\  |\n     | /       \\ |\n     |/         \\|\n    (3)---------(4)\n    >>> graph = [[0, 1, 0, 1, 0],\n    ...          [1, 0, 1, 1, 1],\n    ...          [0, 1, 0, 0, 1],\n    ...          [1, 1, 0, 0, 1],\n    ...          [0, 1, 1, 1, 0]]\n    >>> hamilton_cycle(graph)\n    [0, 1, 2, 4, 3, 0]\n\n    Case 2:\n    Same Graph as it was in Case 1, changed starting index from default to 3\n\n    (0)---(1)---(2)\n     |   /   \\   |\n     |  /     \\  |\n     | /       \\ |\n     |/         \\|\n    (3)---------(4)\n    >>> graph = [[0, 1, 0, 1, 0],\n    ...          [1, 0, 1, 1, 1],\n    ...          [0, 1, 0, 0, 1],\n    ...          [1, 1, 0, 0, 1],\n    ...          [0, 1, 1, 1, 0]]\n    >>> hamilton_cycle(graph, 3)\n    [3, 0, 1, 2, 4, 3]\n\n    Case 3:\n    Following Graph is exactly what it was before, but edge 3-4 is removed.\n    Result is that there is no Hamiltonian Cycle anymore.\n\n    (0)---(1)---(2)\n     |   /   \\   |\n     |  /     \\  |\n     | /       \\ |\n     |/         \\|\n    (3)         (4)\n    >>> graph = [[0, 1, 0, 1, 0],\n    ...          [1, 0, 1, 1, 1],\n    ...          [0, 1, 0, 0, 1],\n    ...          [1, 1, 0, 0, 0],\n    ...          [0, 1, 1, 0, 0]]\n    >>> hamilton_cycle(graph,4)\n    []\n    \"\"\"\n\n    # Initialize path with -1, indicating that we have not visited them yet\n    path = [-1] * (len(graph) + 1)\n    # initialize start and end of path with starting index\n    path[0] = path[-1] = start_index\n    # evaluate and if we find answer return path either return empty array\n    return path if util_hamilton_cycle(graph, path, 1) else []\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": ".github/PULL_REQUEST_TEMPLATE.md", "size": 1320, "license": "NOASSERTION", "content_sha": "9b348b557da0afa4ef70c51c44f15b5f7f4c079f", "findings": [], "content": "<!-- Clearly explain the need for these changes: -->\n\n### Changes \ud83c\udfd7\ufe0f\n\n<!-- Concisely describe all of the changes made in this pull request: -->\n\n### Checklist \ud83d\udccb\n\n#### For code changes:\n- [ ] I have clearly listed my changes in the PR description\n- [ ] I have made a test plan\n- [ ] I have tested my changes according to the test plan:\n  <!-- Put your test plan here: -->\n  - [ ] ...\n\n<details>\n  <summary>Example test plan</summary>\n  \n  - [ ] Create from scratch and execute an agent with at least 3 blocks\n  - [ ] Import an agent from file upload, and confirm it executes correctly\n  - [ ] Upload agent to marketplace\n  - [ ] Import an agent from marketplace and confirm it executes correctly\n  - [ ] Edit an agent from monitor, and confirm it executes correctly\n</details>\n\n#### For configuration changes:\n- [ ] `.env.example` is updated or already compatible with my changes\n- [ ] `docker-compose.yml` is updated or already compatible with my changes\n- [ ] I have included a list of my configuration changes in the PR description (under **Changes**)\n\n<details>\n  <summary>Examples of configuration changes</summary>\n\n  - Changing ports\n  - Adding new services that need to communicate with each other\n  - Secrets or environment variable changes\n  - New or infrastructure changes such as databases\n</details>\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": ".github/workflows/scripts/check_actions_status.py", "size": 3481, "license": "NOASSERTION", "content_sha": "37f83da452710e6624f785d327d53445ce028d73", "findings": [], "content": "import json\nimport os\nimport requests\nimport sys\nimport time\nfrom typing import Dict, List, Tuple\n\nCHECK_INTERVAL = 30\n\n\ndef get_environment_variables() -> Tuple[str, str, str, str, str]:\n    \"\"\"Retrieve and return necessary environment variables.\"\"\"\n    try:\n        with open(os.environ[\"GITHUB_EVENT_PATH\"]) as f:\n            event = json.load(f)\n\n        # Handle both PR and merge group events\n        if \"pull_request\" in event:\n            sha = event[\"pull_request\"][\"head\"][\"sha\"]\n        else:\n            sha = os.environ[\"GITHUB_SHA\"]\n\n        return (\n            os.environ[\"GITHUB_API_URL\"],\n            os.environ[\"GITHUB_REPOSITORY\"],\n            sha,\n            os.environ[\"GITHUB_TOKEN\"],\n            os.environ[\"GITHUB_RUN_ID\"],\n        )\n    except KeyError as e:\n        print(f\"Error: Missing required environment variable or event data: {e}\")\n        sys.exit(1)\n\n\ndef make_api_request(url: str, headers: Dict[str, str]) -> Dict:\n    \"\"\"Make an API request and return the JSON response.\"\"\"\n    try:\n        print(\"Making API request to:\", url)\n        response = requests.get(url, headers=headers, timeout=10)\n        response.raise_for_status()\n        return response.json()\n    except requests.RequestException as e:\n        print(f\"Error: API request failed. {e}\")\n        sys.exit(1)\n\n\ndef process_check_runs(check_runs: List[Dict]) -> Tuple[bool, bool]:\n    \"\"\"Process check runs and return their status.\"\"\"\n    runs_in_progress = False\n    all_others_passed = True\n\n    for run in check_runs:\n        if str(run[\"name\"]) != \"Check PR Status\":\n            status = run[\"status\"]\n            conclusion = run[\"conclusion\"]\n\n            if status == \"completed\":\n                if conclusion not in [\"success\", \"skipped\", \"neutral\"]:\n                    all_others_passed = False\n                    print(\n                        f\"Check run {run['name']} (ID: {run['id']}) has conclusion: {conclusion}\"\n                    )\n            else:\n                runs_in_progress = True\n                print(f\"Check run {run['name']} (ID: {run['id']}) is still {status}.\")\n                all_others_passed = False\n        else:\n            print(\n                f\"Skipping check run {run['name']} (ID: {run['id']}) as it is the current run.\"\n            )\n\n    return runs_in_progress, all_others_passed\n\n\ndef main():\n    api_url, repo, sha, github_token, current_run_id = get_environment_variables()\n\n    endpoint = f\"{api_url}/repos/{repo}/commits/{sha}/check-runs\"\n    headers = {\n        \"Accept\": \"application/vnd.github.v3+json\",\n    }\n    if github_token:\n        headers[\"Authorization\"] = f\"token {github_token}\"\n\n    print(f\"Current run ID: {current_run_id}\")\n\n    while True:\n        data = make_api_request(endpoint, headers)\n\n        check_runs = data[\"check_runs\"]\n\n        print(\"Processing check runs...\")\n\n        print(check_runs)\n\n        runs_in_progress, all_others_passed = process_check_runs(check_runs)\n\n        if not runs_in_progress:\n            break\n\n        print(\n            \"Some check runs are still in progress. \"\n            f\"Waiting {CHECK_INTERVAL} seconds before checking again...\"\n        )\n        time.sleep(CHECK_INTERVAL)\n\n    if all_others_passed:\n        print(\"All other completed check runs have passed. This check passes.\")\n        sys.exit(0)\n    else:\n        print(\"Some check runs have failed or have not completed. This check fails.\")\n        sys.exit(1)\n\n\nif __name__ == \"__main__\":\n    main()\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "CODE_OF_CONDUCT.md", "size": 1841, "license": "NOASSERTION", "content_sha": "a92ea4bd2fd3496e127bbef803d37d28df086513", "findings": [], "content": "# Code of Conduct for AutoGPT\n\n## 1. Purpose\n\nThe purpose of this Code of Conduct is to provide guidelines for contributors to the AutoGPT projects on GitHub. We aim to create a positive and inclusive environment where all participants can contribute and collaborate effectively. By participating in this project, you agree to abide by this Code of Conduct.\n\n## 2. Scope\n\nThis Code of Conduct applies to all contributors, maintainers, and users of the AutoGPT project. It extends to all project spaces, including but not limited to issues, pull requests, code reviews, comments, and other forms of communication within the project.\n\n## 3. Our Standards\n\nWe encourage the following behavior:\n\n* Being respectful and considerate to others\n* Actively seeking diverse perspectives\n* Providing constructive feedback and assistance\n* Demonstrating empathy and understanding\n\nWe discourage the following behavior:\n\n* Harassment or discrimination of any kind\n* Disrespectful, offensive, or inappropriate language or content\n* Personal attacks or insults\n* Unwarranted criticism or negativity\n\n## 4. Reporting and Enforcement\n\nIf you witness or experience any violations of this Code of Conduct, please report them to the project maintainers by email or other appropriate means. The maintainers will investigate and take appropriate action, which may include warnings, temporary or permanent bans, or other measures as necessary.\n\nMaintainers are responsible for ensuring compliance with this Code of Conduct and may take action to address any violations.\n\n## 5. Acknowledgements\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://www.contributor-covenant.org/version/2/0/code_of_conduct.html).\n\n## 6. Contact\n\nIf you have any questions or concerns, please contact the project maintainers on Discord:\nhttps://discord.gg/autogpt\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "CONTRIBUTING.md", "size": 2224, "license": "NOASSERTION", "content_sha": "e75f545a94a59b62a1f20e9b88bb6ae89e2fbf10", "findings": [], "content": "# AutoGPT Contribution Guide\nIf you are reading this, you are probably looking for the full **[contribution guide]**,\nwhich is part of our [wiki].\n\n[contribution guide]: https://github.com/Significant-Gravitas/AutoGPT/wiki/Contributing\n[wiki]: https://github.com/Significant-Gravitas/AutoGPT/wiki\n[roadmap]: https://github.com/Significant-Gravitas/AutoGPT/discussions/6971\n[kanban board]: https://github.com/orgs/Significant-Gravitas/projects/1\n\n## Contributing to the AutoGPT Platform Folder\nAll contributions to [the autogpt_platform folder](https://github.com/Significant-Gravitas/AutoGPT/blob/master/autogpt_platform) will be under our [Contribution License Agreement](https://github.com/Significant-Gravitas/AutoGPT/blob/master/autogpt_platform/Contributor%20License%20Agreement%20(CLA).md). By making a pull request contributing to this folder, you agree to the terms of our CLA for your contribution. All contributions to other folders will be under the MIT license.\n\n## In short\n1. Avoid duplicate work, issues, PRs etc.\n2. We encourage you to collaborate with fellow community members on some of our bigger\n   [todo's][roadmap]!\n   * We highly recommend to post your idea and discuss it in the [dev channel].\n3. Create a draft PR when starting work on bigger changes.\n4. Adhere to the [Code Guidelines]\n5. Clearly explain your changes when submitting a PR.\n6. Don't submit broken code: test/validate your changes.\n7. Avoid making unnecessary changes, especially if they're purely based on your personal\n   preferences. Doing so is the maintainers' job. ;-)\n8. Please also consider contributing something other than code; see the\n   [contribution guide] for options.\n\n[dev channel]: https://discord.com/channels/1092243196446249134/1095817829405704305\n[code guidelines]: https://github.com/Significant-Gravitas/AutoGPT/wiki/Contributing#code-guidelines\n\nIf you wish to involve with the project (beyond just contributing PRs), please read the\nwiki page about [Catalyzing](https://github.com/Significant-Gravitas/AutoGPT/wiki/Catalyzing).\n\nIn fact, why not just look through the whole wiki (it's only a few pages) and\nhop on our Discord. See you there! :-)\n\n\u2764\ufe0f & \ud83d\udd06\nThe team @ AutoGPT\nhttps://discord.gg/autogpt\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "README.md", "size": 8895, "license": "NOASSERTION", "content_sha": "dfb2277487e7fae112809ad21f0a4a6188bfc943", "findings": [], "content": "# AutoGPT: Build, Deploy, and Run AI Agents\n\n[![Discord Follow](https://dcbadge.vercel.app/api/server/autogpt?style=flat)](https://discord.gg/autogpt) &ensp;\n[![Twitter Follow](https://img.shields.io/twitter/follow/Auto_GPT?style=social)](https://twitter.com/Auto_GPT) &ensp;\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n**AutoGPT** is a powerful platform that allows you to create, deploy, and manage continuous AI agents that automate complex workflows. \n\n## Hosting Options \n   - Download to self-host\n   - [Join the Waitlist](https://bit.ly/3ZDijAI) for the cloud-hosted beta  \n\n## How to Setup for Self-Hosting\n> [!NOTE]\n> Setting up and hosting the AutoGPT Platform yourself is a technical process. \n> If you'd rather something that just works, we recommend [joining the waitlist](https://bit.ly/3ZDijAI) for the cloud-hosted beta.\n\n### Updated Setup Instructions:\nWe\u2019ve moved to a fully maintained and regularly updated documentation site.\n\n\ud83d\udc49 [Follow the official self-hosting guide here](https://docs.agpt.co/platform/getting-started/)\n\n\nThis tutorial assumes you have Docker, VSCode, git and npm installed.\n\n### \ud83e\uddf1 AutoGPT Frontend\n\nThe AutoGPT frontend is where users interact with our powerful AI automation platform. It offers multiple ways to engage with and leverage our AI agents. This is the interface where you'll bring your AI automation ideas to life:\n\n   **Agent Builder:** For those who want to customize, our intuitive, low-code interface allows you to design and configure your own AI agents. \n   \n   **Workflow Management:** Build, modify, and optimize your automation workflows with ease. You build your agent by connecting blocks, where each block     performs a single action.\n   \n   **Deployment Controls:** Manage the lifecycle of your agents, from testing to production.\n   \n   **Ready-to-Use Agents:** Don't want to build? Simply select from our library of pre-configured agents and put them to work immediately.\n   \n   **Agent Interaction:** Whether you've built your own or are using pre-configured agents, easily run and interact with them through our user-friendly      interface.\n\n   **Monitoring and Analytics:** Keep track of your agents' performance and gain insights to continually improve your automation processes.\n\n[Read this guide](https://docs.agpt.co/platform/new_blocks/) to learn how to build your own custom blocks.\n\n### \ud83d\udcbd AutoGPT Server\n\nThe AutoGPT Server is the powerhouse of our platform This is where your agents run. Once deployed, agents can be triggered by external sources and can operate continuously. It contains all the essential components that make AutoGPT run smoothly.\n\n   **Source Code:** The core logic that drives our agents and automation processes.\n   \n   **Infrastructure:** Robust systems that ensure reliable and scalable performance.\n   \n   **Marketplace:** A comprehensive marketplace where you can find and deploy a wide range of pre-built agents.\n\n### \ud83d\udc19 Example Agents\n\nHere are two examples of what you can do with AutoGPT:\n\n1. **Generate Viral Videos from Trending Topics**\n   - This agent reads topics on Reddit.\n   - It identifies trending topics.\n   - It then automatically creates a short-form video based on the content. \n\n2. **Identify Top Quotes from Videos for Social Media**\n   - This agent subscribes to your YouTube channel.\n   - When you post a new video, it transcribes it.\n   - It uses AI to identify the most impactful quotes to generate a summary.\n   - Then, it writes a post to automatically publish to your social media. \n\nThese examples show just a glimpse of what you can achieve with AutoGPT! You can create customized workflows to build agents for any use case.\n\n---\n### Mission and Licencing\nOur mission is to provide the tools, so that you can focus on what matters:\n\n- \ud83c\udfd7\ufe0f **Building** - Lay the foundation for something amazing.\n- \ud83e\uddea **Testing** - Fine-tune your agent to perfection.\n- \ud83e\udd1d **Delegating** - Let AI work for you, and have your ideas come to life.\n\nBe part of the revolution! **AutoGPT** is here to stay, at the forefront of AI innovation.\n\n**\ud83d\udcd6 [Documentation](https://docs.agpt.co)**\n&ensp;|&ensp;\n**\ud83d\ude80 [Contributing](CONTRIBUTING.md)**\n\n**Licensing:**\n\nMIT License: The majority of the AutoGPT repository is under the MIT License.\n\nPolyform Shield License: This license applies to the autogpt_platform folder. \n\nFor more information, see https://agpt.co/blog/introducing-the-autogpt-platform\n\n---\n## \ud83e\udd16 AutoGPT Classic\n> Below is information about the classic version of AutoGPT.\n\n**\ud83d\udee0\ufe0f [Build your own Agent - Quickstart](classic/FORGE-QUICKSTART.md)**\n\n### \ud83c\udfd7\ufe0f Forge\n\n**Forge your own agent!** &ndash; Forge is a ready-to-go toolkit to build your own agent application. It handles most of the boilerplate code, letting you channel all your creativity into the things that set *your* agent apart. All tutorials are located [here](https://medium.com/@aiedge/autogpt-forge-e3de53cc58ec). Components from [`forge`](/classic/forge/) can also be used individually to speed up development and reduce boilerplate in your agent project.\n\n\ud83d\ude80 [**Getting Started with Forge**](https://github.com/Significant-Gravitas/AutoGPT/blob/master/classic/forge/tutorials/001_getting_started.md) &ndash;\nThis guide will walk you through the process of creating your own agent and using the benchmark and user interface.\n\n\ud83d\udcd8 [Learn More](https://github.com/Significant-Gravitas/AutoGPT/tree/master/classic/forge) about Forge\n\n### \ud83c\udfaf Benchmark\n\n**Measure your agent's performance!** The `agbenchmark` can be used with any agent that supports the agent protocol, and the integration with the project's [CLI] makes it even easier to use with AutoGPT and forge-based agents. The benchmark offers a stringent testing environment. Our framework allows for autonomous, objective performance evaluations, ensuring your agents are primed for real-world action.\n\n<!-- TODO: insert visual demonstrating the benchmark -->\n\n\ud83d\udce6 [`agbenchmark`](https://pypi.org/project/agbenchmark/) on Pypi\n&ensp;|&ensp;\n\ud83d\udcd8 [Learn More](https://github.com/Significant-Gravitas/AutoGPT/tree/master/classic/benchmark) about the Benchmark\n\n### \ud83d\udcbb UI\n\n**Makes agents easy to use!** The `frontend` gives you a user-friendly interface to control and monitor your agents. It connects to agents through the [agent protocol](#-agent-protocol), ensuring compatibility with many agents from both inside and outside of our ecosystem.\n\n<!-- TODO: insert screenshot of front end -->\n\nThe frontend works out-of-the-box with all agents in the repo. Just use the [CLI] to run your agent of choice!\n\n\ud83d\udcd8 [Learn More](https://github.com/Significant-Gravitas/AutoGPT/tree/master/classic/frontend) about the Frontend\n\n### \u2328\ufe0f CLI\n\n[CLI]: #-cli\n\nTo make it as easy as possible to use all of the tools offered by the repository, a CLI is included at the root of the repo:\n\n```shell\n$ ./run\nUsage: cli.py [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  agent      Commands to create, start and stop agents\n  benchmark  Commands to start the benchmark and list tests and categories\n  setup      Installs dependencies needed for your system.\n```\n\nJust clone the repo, install dependencies with `./run setup`, and you should be good to go!\n\n## \ud83e\udd14 Questions? Problems? Suggestions?\n\n### Get help - [Discord \ud83d\udcac](https://discord.gg/autogpt)\n\n[![Join us on Discord](https://invidget.switchblade.xyz/autogpt)](https://discord.gg/autogpt)\n\nTo report a bug or request a feature, create a [GitHub Issue](https://github.com/Significant-Gravitas/AutoGPT/issues/new/choose). Please ensure someone else hasn\u2019t created an issue for the same topic.\n\n## \ud83e\udd1d Sister projects\n\n### \ud83d\udd04 Agent Protocol\n\nTo maintain a uniform standard and ensure seamless compatibility with many current and future applications, AutoGPT employs the [agent protocol](https://agentprotocol.ai/) standard by the AI Engineer Foundation. This standardizes the communication pathways from your agent to the frontend and benchmark.\n\n---\n\n## Stars stats\n\n<p align=\"center\">\n<a href=\"https://star-history.com/#Significant-Gravitas/AutoGPT\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://api.star-history.com/svg?repos=Significant-Gravitas/AutoGPT&type=Date&theme=dark\" />\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"https://api.star-history.com/svg?repos=Significant-Gravitas/AutoGPT&type=Date\" />\n    <img alt=\"Star History Chart\" src=\"https://api.star-history.com/svg?repos=Significant-Gravitas/AutoGPT&type=Date\" />\n  </picture>\n</a>\n</p>\n\n\n## \u26a1 Contributors\n\n<a href=\"https://github.com/Significant-Gravitas/AutoGPT/graphs/contributors\" alt=\"View Contributors\">\n  <img src=\"https://contrib.rocks/image?repo=Significant-Gravitas/AutoGPT&max=1000&columns=10\" alt=\"Contributors\" />\n</a>\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "SECURITY.md", "size": 2435, "license": "NOASSERTION", "content_sha": "45705d71066916867b90088cd8fb9f6fdf24a2f6", "findings": [], "content": "# Security Policy\n\n## Reporting Security Issues\n\nWe take the security of our project seriously. If you believe you have found a security vulnerability, please report it to us privately. **Please do not report security vulnerabilities through public GitHub issues, discussions, or pull requests.**\n\n> **Important Note**: Any code within the `classic/` folder is considered legacy, unsupported, and out of scope for security reports. We will not address security vulnerabilities in this deprecated code.\n\nInstead, please report them via:\n- [GitHub Security Advisory](https://github.com/Significant-Gravitas/AutoGPT/security/advisories/new)\n<!--- [Huntr.dev](https://huntr.com/repos/significant-gravitas/autogpt) - where you may be eligible for a bounty-->\n\n### Reporting Process\n1. **Submit Report**: Use one of the above channels to submit your report\n2. **Response Time**: Our team will acknowledge receipt of your report within 14 business days.\n3. **Collaboration**: We will collaborate with you to understand and validate the issue\n4. **Resolution**: We will work on a fix and coordinate the release process\n\n### Disclosure Policy\n- Please provide detailed reports with reproducible steps\n- Include the version/commit hash where you discovered the vulnerability\n- Allow us a 90-day security fix window before any public disclosure\n- After patch is released, allow 30 days for users to update before public disclosure (for a total of 120 days max between update time and fix time)\n- Share any potential mitigations or workarounds if known\n\n## Supported Versions\nOnly the following versions are eligible for security updates:\n\n| Version | Supported |\n|---------|-----------|\n| Latest release on master branch | \u2705 |\n| Development commits (pre-master) | \u2705 |\n| Classic folder (deprecated) | \u274c |\n| All other versions | \u274c |\n\n## Security Best Practices\nWhen using this project:\n1. Always use the latest stable version\n2. Review security advisories before updating\n3. Follow our security documentation and guidelines\n4. Keep your dependencies up to date\n5. Do not use code from the `classic/` folder as it is deprecated and unsupported\n\n## Past Security Advisories\nFor a list of past security advisories, please visit our [Security Advisory Page](https://github.com/Significant-Gravitas/AutoGPT/security/advisories) and [Huntr Disclosures Page](https://huntr.com/repos/significant-gravitas/autogpt).\n\n---\nLast updated: November 2024\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "autogpt_platform/Contributor License Agreement (CLA).md", "size": 4590, "license": "NOASSERTION", "content_sha": "b15bd52e56986504be1299211a07e1c137edac88", "findings": [], "content": "**Determinist Ltd** \n\n**Contributor License Agreement (\u201cAgreement\u201d)**\n\nThank you for your interest in the AutoGPT open source project at [https://github.com/Significant-Gravitas/AutoGPT](https://github.com/Significant-Gravitas/AutoGPT) stewarded by Determinist Ltd (\u201c**Determinist**\u201d), with offices at 3rd Floor 1 Ashley Road, Altrincham, Cheshire, WA14 2DT, United Kingdom. The form of license below is a document that clarifies the terms under which You, the person listed below, may contribute software code described below (the \u201c**Contribution**\u201d) to the project.  We appreciate your participation in our project, and your help in improving our products, so we want you to understand what will be done with the Contributions.  This license is for your protection as well as the protection of Determinist and its licensees; it does not change your rights to use your own Contributions for any other purpose.        \n\nBy submitting a Pull Request which modifies the content of the \u201cautogpt\\_platform\u201d folder at [https://github.com/Significant-Gravitas/AutoGPT/tree/master/autogpt\\_platform](https://github.com/Significant-Gravitas/AutoGPT/tree/master/autogpt_platform), You hereby agree:  \n\n1\\.\t**You grant us the ability to use the Contributions in any way**.  You hereby grant to Determinist  a non-exclusive, irrevocable, worldwide, royalty-free, sublicenseable, transferable license under all of Your relevant intellectual property rights (including copyright, patent, and any other rights), to use, copy, prepare derivative works of, distribute and publicly perform and display the Contributions on any licensing terms, including without limitation: (a) open source licenses like the GNU General Public License (GPL), the GNU Lesser General Public License (LGPL), the Common Public License, or the Berkeley Science Division license (BSD); and (b) binary, proprietary, or commercial licenses.\n\n2\\. \t**Grant of Patent License**. You hereby grant to Determinist a worldwide, non-exclusive, royalty-free, irrevocable, license, under any rights you may have, now or in the future, in any patents or patent applications, to make, have made, use, offer to sell, sell, and import products containing the Contribution or portions of the Contribution.  This license extends to patent claims that are infringed by the Contribution alone or by combination of the Contribution with other inventions.  \n\n4\\. \t**Limitations on Licenses**.  The licenses granted in this Agreement will continue for the duration of the applicable patent or intellectual property right under which such license is granted.   The licenses granted in this Agreement will include the right to grant and authorize sublicenses, so long as the sublicenses are within the scope of the licenses granted in this Agreement.  Except for the licenses granted herein, You reserve all right, title, and interest in and to the Contribution.    \n\n5\\. \t**You are able to grant us these rights**.  You represent that You are legally entitled to grant the above license.  If Your employer has rights to intellectual property that You create, You represent that You are authorized to make the Contributions on behalf of that employer, or that Your employer has waived such rights for the Contributions.  \n\n3\\.\t**The Contributions are your original work**.  You represent that the Contributions are Your original works of authorship, and to Your knowledge, no other person claims, or has the right to claim, any right in any invention or patent related to the Contributions.  You also represent that You are not legally obligated, whether by entering into an agreement or otherwise, in any way that conflicts with the terms of this license.  For example, if you have signed an agreement requiring you to assign the intellectual property rights in the Contributions to an employer or customer, that would conflict with the terms of this license.  \n    \n6\\.  **We determine the code that is in our products**.  You understand that the decision to include the Contribution in any product or source repository is entirely that of Determinist, and this agreement does not guarantee that the Contributions will be included in any product. \n\n7\\. **No Implied Warranties.**  Determinist acknowledges that, except as explicitly described in this Agreement, the Contribution is provided on an \u201cAS IS\u201d BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING, WITHOUT   LIMITATION, ANY WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE.    \n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "autogpt_platform/LICENSE.md", "size": 5748, "license": "NOASSERTION", "content_sha": "3f09b052c0f43515fb760d742a901fe715ce235e", "findings": [], "content": "# PolyForm Shield License 1.0.0\n\n<https://polyformproject.org/licenses/shield/1.0.0>\n\n## Acceptance\n\nIn order to get any license under these terms, you must agree\nto them as both strict obligations and conditions to all\nyour licenses.\n\n## Copyright License\n\nThe licensor grants you a copyright license for the\nsoftware to do everything you might do with the software\nthat would otherwise infringe the licensor's copyright\nin it for any permitted purpose.  However, you may\nonly distribute the software according to [Distribution\nLicense](#distribution-license) and make changes or new works\nbased on the software according to [Changes and New Works\nLicense](#changes-and-new-works-license).\n\n## Distribution License\n\nThe licensor grants you an additional copyright license\nto distribute copies of the software.  Your license\nto distribute covers distributing the software with\nchanges and new works permitted by [Changes and New Works\nLicense](#changes-and-new-works-license).\n\n## Notices\n\nYou must ensure that anyone who gets a copy of any part of\nthe software from you also gets a copy of these terms or the\nURL for them above, as well as copies of any plain-text lines\nbeginning with `Required Notice:` that the licensor provided\nwith the software.  For example:\n\n> Required Notice: Copyright Yoyodyne, Inc. (http://example.com)\n\n## Changes and New Works License\n\nThe licensor grants you an additional copyright license to\nmake changes and new works based on the software for any\npermitted purpose.\n\n## Patent License\n\nThe licensor grants you a patent license for the software that\ncovers patent claims the licensor can license, or becomes able\nto license, that you would infringe by using the software.\n\n## Noncompete\n\nAny purpose is a permitted purpose, except for providing any\nproduct that competes with the software or any product the\nlicensor or any of its affiliates provides using the software.\n\n## Competition\n\nGoods and services compete even when they provide functionality\nthrough different kinds of interfaces or for different technical\nplatforms.  Applications can compete with services, libraries\nwith plugins, frameworks with development tools, and so on,\neven if they're written in different programming languages\nor for different computer architectures.  Goods and services\ncompete even when provided free of charge.  If you market a\nproduct as a practical substitute for the software or another\nproduct, it definitely competes.\n\n## New Products\n\nIf you are using the software to provide a product that does\nnot compete, but the licensor or any of its affiliates brings\nyour product into competition by providing a new version of\nthe software or another product using the software, you may\ncontinue using versions of the software available under these\nterms beforehand to provide your competing product, but not\nany later versions.\n\n## Discontinued Products\n\nYou may begin using the software to compete with a product\nor service that the licensor or any of its affiliates has\nstopped providing, unless the licensor includes a plain-text\nline beginning with `Licensor Line of Business:` with the\nsoftware that mentions that line of business.  For example:\n\n> Licensor Line of Business: YoyodyneCMS Content Management\nSystem (http://example.com/cms)\n\n## Sales of Business\n\nIf the licensor or any of its affiliates sells a line of\nbusiness developing the software or using the software\nto provide a product, the buyer can also enforce\n[Noncompete](#noncompete) for that product.\n\n## Fair Use\n\nYou may have \"fair use\" rights for the software under the\nlaw. These terms do not limit them.\n\n## No Other Rights\n\nThese terms do not allow you to sublicense or transfer any of\nyour licenses to anyone else, or prevent the licensor from\ngranting licenses to anyone else.  These terms do not imply\nany other licenses.\n\n## Patent Defense\n\nIf you make any written claim that the software infringes or\ncontributes to infringement of any patent, your patent license\nfor the software granted under these terms ends immediately. If\nyour company makes such a claim, your patent license ends\nimmediately for work on behalf of your company.\n\n## Violations\n\nThe first time you are notified in writing that you have\nviolated any of these terms, or done anything with the software\nnot covered by your licenses, your licenses can nonetheless\ncontinue if you come into full compliance with these terms,\nand take practical steps to correct past violations, within\n32 days of receiving notice.  Otherwise, all your licenses\nend immediately.\n\n## No Liability\n\n***As far as the law allows, the software comes as is, without\nany warranty or condition, and the licensor will not be liable\nto you for any damages arising out of these terms or the use\nor nature of the software, under any kind of legal claim.***\n\n## Definitions\n\nThe **licensor** is the individual or entity offering these\nterms, and the **software** is the software the licensor makes\navailable under these terms.\n\nA **product** can be a good or service, or a combination\nof them.\n\n**You** refers to the individual or entity agreeing to these\nterms.\n\n**Your company** is any legal entity, sole proprietorship,\nor other kind of organization that you work for, plus all\nits affiliates.\n\n**Affiliates** means the other organizations than an\norganization has control over, is under the control of, or is\nunder common control with.\n\n**Control** means ownership of substantially all the assets of\nan entity, or the power to direct its management and policies\nby vote, contract, or otherwise.  Control can be direct or\nindirect.\n\n**Your licenses** are all the licenses granted to you for the\nsoftware under these terms.\n\n**Use** means anything you do with the software requiring one\nof your licenses.\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "autogpt_platform/README.md", "size": 4760, "license": "NOASSERTION", "content_sha": "92ea6ec95090ede087180e446be03ac257f8d5c5", "findings": [{"type": "pii_email", "matches": ["git@github.com"]}], "content": "# AutoGPT Platform\n\nWelcome to the AutoGPT Platform - a powerful system for creating and running AI agents to solve business problems. This platform enables you to harness the power of artificial intelligence to automate tasks, analyze data, and generate insights for your organization.\n\n## Getting Started\n\n### Prerequisites\n\n- Docker\n- Docker Compose V2 (comes with Docker Desktop, or can be installed separately)\n- Node.js & NPM (for running the frontend application)\n\n### Running the System\n\nTo run the AutoGPT Platform, follow these steps:\n\n1. Clone this repository to your local machine and navigate to the `autogpt_platform` directory within the repository:\n   ```\n   git clone <https://github.com/Significant-Gravitas/AutoGPT.git | git@github.com:Significant-Gravitas/AutoGPT.git>\n   cd AutoGPT/autogpt_platform\n   ```\n\n2. Run the following command:\n   ```\n   cp .env.example .env\n   ```\n   This command will copy the `.env.example` file to `.env`. You can modify the `.env` file to add your own environment variables.\n\n3. Run the following command:\n   ```\n   docker compose up -d\n   ```\n   This command will start all the necessary backend services defined in the `docker-compose.yml` file in detached mode.\n\n4. Navigate to `frontend` within the `autogpt_platform` directory:\n   ```\n   cd frontend\n   ```\n   You will need to run your frontend application separately on your local machine.\n\n5. Run the following command: \n   ```\n   cp .env.example .env.local\n   ```\n   This command will copy the `.env.example` file to `.env.local` in the `frontend` directory. You can modify the `.env.local` within this folder to add your own environment variables for the frontend application.\n\n6. Run the following command:\n   ```\n   npm install\n   npm run dev\n   ```\n   This command will install the necessary dependencies and start the frontend application in development mode.\n   If you are using Yarn, you can run the following commands instead:\n   ```\n   yarn install && yarn dev\n   ```\n\n7. Open your browser and navigate to `http://localhost:3000` to access the AutoGPT Platform frontend.\n\n### Docker Compose Commands\n\nHere are some useful Docker Compose commands for managing your AutoGPT Platform:\n\n- `docker compose up -d`: Start the services in detached mode.\n- `docker compose stop`: Stop the running services without removing them.\n- `docker compose rm`: Remove stopped service containers.\n- `docker compose build`: Build or rebuild services.\n- `docker compose down`: Stop and remove containers, networks, and volumes.\n- `docker compose watch`: Watch for changes in your services and automatically update them.\n\n\n### Sample Scenarios\n\nHere are some common scenarios where you might use multiple Docker Compose commands:\n\n1. Updating and restarting a specific service:\n   ```\n   docker compose build api_srv\n   docker compose up -d --no-deps api_srv\n   ```\n   This rebuilds the `api_srv` service and restarts it without affecting other services.\n\n2. Viewing logs for troubleshooting:\n   ```\n   docker compose logs -f api_srv ws_srv\n   ```\n   This shows and follows the logs for both `api_srv` and `ws_srv` services.\n\n3. Scaling a service for increased load:\n   ```\n   docker compose up -d --scale executor=3\n   ```\n   This scales the `executor` service to 3 instances to handle increased load.\n\n4. Stopping the entire system for maintenance:\n   ```\n   docker compose stop\n   docker compose rm -f\n   docker compose pull\n   docker compose up -d\n   ```\n   This stops all services, removes containers, pulls the latest images, and restarts the system.\n\n5. Developing with live updates:\n   ```\n   docker compose watch\n   ```\n   This watches for changes in your code and automatically updates the relevant services.\n\n6. Checking the status of services:\n   ```\n   docker compose ps\n   ```\n   This shows the current status of all services defined in your docker-compose.yml file.\n\nThese scenarios demonstrate how to use Docker Compose commands in combination to manage your AutoGPT Platform effectively.\n\n\n### Persisting Data\n\nTo persist data for PostgreSQL and Redis, you can modify the `docker-compose.yml` file to add volumes. Here's how:\n\n1. Open the `docker-compose.yml` file in a text editor.\n2. Add volume configurations for PostgreSQL and Redis services:\n\n   ```yaml\n   services:\n     postgres:\n       # ... other configurations ...\n       volumes:\n         - postgres_data:/var/lib/postgresql/data\n\n     redis:\n       # ... other configurations ...\n       volumes:\n         - redis_data:/data\n\n   volumes:\n     postgres_data:\n     redis_data:\n   ```\n\n3. Save the file and run `docker compose up -d` to apply the changes.\n\nThis configuration will create named volumes for PostgreSQL and Redis, ensuring that your data persists across container restarts.\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "autogpt_platform/autogpt_libs/README.md", "size": 135, "license": "NOASSERTION", "content_sha": "e2d6a5e67e2092b2c31480db18bf1a2c6fc40acb", "findings": [], "content": "# AutoGPT Libs\n\nThis is a new project to store shared functionality across different services in NextGen AutoGPT (e.g. authentication)\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "autogpt_platform/autogpt_libs/autogpt_libs/api_key/key_manager.py", "size": 1007, "license": "NOASSERTION", "content_sha": "257250a7539312841acdceb78d516784800a786b", "findings": [], "content": "import hashlib\nimport secrets\nfrom typing import NamedTuple\n\n\nclass APIKeyContainer(NamedTuple):\n    \"\"\"Container for API key parts.\"\"\"\n\n    raw: str\n    prefix: str\n    postfix: str\n    hash: str\n\n\nclass APIKeyManager:\n    PREFIX: str = \"agpt_\"\n    PREFIX_LENGTH: int = 8\n    POSTFIX_LENGTH: int = 8\n\n    def generate_api_key(self) -> APIKeyContainer:\n        \"\"\"Generate a new API key with all its parts.\"\"\"\n        raw_key = f\"{self.PREFIX}{secrets.token_urlsafe(32)}\"\n        return APIKeyContainer(\n            raw=raw_key,\n            prefix=raw_key[: self.PREFIX_LENGTH],\n            postfix=raw_key[-self.POSTFIX_LENGTH :],\n            hash=hashlib.sha256(raw_key.encode()).hexdigest(),\n        )\n\n    def verify_api_key(self, provided_key: str, stored_hash: str) -> bool:\n        \"\"\"Verify if a provided API key matches the stored hash.\"\"\"\n        if not provided_key.startswith(self.PREFIX):\n            return False\n        return hashlib.sha256(provided_key.encode()).hexdigest() == stored_hash\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "autogpt_platform/autogpt_libs/autogpt_libs/auth/__init__.py", "size": 321, "license": "NOASSERTION", "content_sha": "c1fa9d911352a900d1dde3a8ce988c51b4327e21", "findings": [], "content": "from .depends import requires_admin_user, requires_user\nfrom .jwt_utils import parse_jwt_token\nfrom .middleware import APIKeyValidator, auth_middleware\nfrom .models import User\n\n__all__ = [\n    \"parse_jwt_token\",\n    \"requires_user\",\n    \"requires_admin_user\",\n    \"APIKeyValidator\",\n    \"auth_middleware\",\n    \"User\",\n]\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "autogpt_platform/autogpt_libs/autogpt_libs/auth/config.py", "size": 368, "license": "NOASSERTION", "content_sha": "c143c78e6d9f76e218147a37e04a4cbd0e2bcbd7", "findings": [], "content": "import os\n\n\nclass Settings:\n    def __init__(self):\n        self.JWT_SECRET_KEY: str = os.getenv(\"SUPABASE_JWT_SECRET\", \"\")\n        self.ENABLE_AUTH: bool = os.getenv(\"ENABLE_AUTH\", \"false\").lower() == \"true\"\n        self.JWT_ALGORITHM: str = \"HS256\"\n\n    @property\n    def is_configured(self) -> bool:\n        return bool(self.JWT_SECRET_KEY)\n\n\nsettings = Settings()\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "autogpt_platform/autogpt_libs/autogpt_libs/auth/depends.py", "size": 1372, "license": "NOASSERTION", "content_sha": "d17a03269431bdf6f9dc85712bee7f246c04a919", "findings": [], "content": "import fastapi\n\nfrom .config import settings\nfrom .middleware import auth_middleware\nfrom .models import DEFAULT_USER_ID, User\n\n\ndef requires_user(payload: dict = fastapi.Depends(auth_middleware)) -> User:\n    return verify_user(payload, admin_only=False)\n\n\ndef requires_admin_user(\n    payload: dict = fastapi.Depends(auth_middleware),\n) -> User:\n    return verify_user(payload, admin_only=True)\n\n\ndef verify_user(payload: dict | None, admin_only: bool) -> User:\n    if not payload:\n        if settings.ENABLE_AUTH:\n            raise fastapi.HTTPException(\n                status_code=401, detail=\"Authorization header is missing\"\n            )\n        # This handles the case when authentication is disabled\n        payload = {\"sub\": DEFAULT_USER_ID, \"role\": \"admin\"}\n\n    user_id = payload.get(\"sub\")\n\n    if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )\n\n    if admin_only and payload[\"role\"] != \"admin\":\n        raise fastapi.HTTPException(status_code=403, detail=\"Admin access required\")\n\n    return User.from_payload(payload)\n\n\ndef get_user_id(payload: dict = fastapi.Depends(auth_middleware)) -> str:\n    user_id = payload.get(\"sub\")\n    if not user_id:\n        raise fastapi.HTTPException(\n            status_code=401, detail=\"User ID not found in token\"\n        )\n    return user_id\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "autogpt_platform/autogpt_libs/autogpt_libs/auth/depends_tests.py", "size": 1919, "license": "NOASSERTION", "content_sha": "b6ac4d2a7bd93691329b97bbf6e542b82829972f", "findings": [], "content": "import pytest\n\nfrom .depends import requires_admin_user, requires_user, verify_user\n\n\ndef test_verify_user_no_payload():\n    user = verify_user(None, admin_only=False)\n    assert user.user_id == \"3e53486c-cf57-477e-ba2a-cb02dc828e1a\"\n    assert user.role == \"admin\"\n\n\ndef test_verify_user_no_user_id():\n    with pytest.raises(Exception):\n        verify_user({\"role\": \"admin\"}, admin_only=False)\n\n\ndef test_verify_user_not_admin():\n    with pytest.raises(Exception):\n        verify_user(\n            {\"sub\": \"3e53486c-cf57-477e-ba2a-cb02dc828e1a\", \"role\": \"user\"},\n            admin_only=True,\n        )\n\n\ndef test_verify_user_with_admin_role():\n    user = verify_user(\n        {\"sub\": \"3e53486c-cf57-477e-ba2a-cb02dc828e1a\", \"role\": \"admin\"},\n        admin_only=True,\n    )\n    assert user.user_id == \"3e53486c-cf57-477e-ba2a-cb02dc828e1a\"\n    assert user.role == \"admin\"\n\n\ndef test_verify_user_with_user_role():\n    user = verify_user(\n        {\"sub\": \"3e53486c-cf57-477e-ba2a-cb02dc828e1a\", \"role\": \"user\"},\n        admin_only=False,\n    )\n    assert user.user_id == \"3e53486c-cf57-477e-ba2a-cb02dc828e1a\"\n    assert user.role == \"user\"\n\n\ndef test_requires_user():\n    user = requires_user(\n        {\"sub\": \"3e53486c-cf57-477e-ba2a-cb02dc828e1a\", \"role\": \"user\"}\n    )\n    assert user.user_id == \"3e53486c-cf57-477e-ba2a-cb02dc828e1a\"\n    assert user.role == \"user\"\n\n\ndef test_requires_user_no_user_id():\n    with pytest.raises(Exception):\n        requires_user({\"role\": \"user\"})\n\n\ndef test_requires_admin_user():\n    user = requires_admin_user(\n        {\"sub\": \"3e53486c-cf57-477e-ba2a-cb02dc828e1a\", \"role\": \"admin\"}\n    )\n    assert user.user_id == \"3e53486c-cf57-477e-ba2a-cb02dc828e1a\"\n    assert user.role == \"admin\"\n\n\ndef test_requires_admin_user_not_admin():\n    with pytest.raises(Exception):\n        requires_admin_user(\n            {\"sub\": \"3e53486c-cf57-477e-ba2a-cb02dc828e1a\", \"role\": \"user\"}\n        )\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "autogpt_platform/autogpt_libs/autogpt_libs/auth/jwt_utils.py", "size": 697, "license": "NOASSERTION", "content_sha": "900275f0bbb1f19b2a73a918141bb68024c58cc7", "findings": [], "content": "from typing import Any, Dict\n\nimport jwt\n\nfrom .config import settings\n\n\ndef parse_jwt_token(token: str) -> Dict[str, Any]:\n    \"\"\"\n    Parse and validate a JWT token.\n\n    :param token: The token to parse\n    :return: The decoded payload\n    :raises ValueError: If the token is invalid or expired\n    \"\"\"\n    try:\n        payload = jwt.decode(\n            token,\n            settings.JWT_SECRET_KEY,\n            algorithms=[settings.JWT_ALGORITHM],\n            audience=\"authenticated\",\n        )\n        return payload\n    except jwt.ExpiredSignatureError:\n        raise ValueError(\"Token has expired\")\n    except jwt.InvalidTokenError as e:\n        raise ValueError(f\"Invalid token: {str(e)}\")\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "autogpt_platform/autogpt_libs/autogpt_libs/auth/middleware.py", "size": 4668, "license": "NOASSERTION", "content_sha": "28e2b05dd8cd112b740d3ae45e5324f539a57f12", "findings": [], "content": "import inspect\nimport logging\nfrom typing import Any, Callable, Optional\n\nfrom fastapi import HTTPException, Request, Security\nfrom fastapi.security import APIKeyHeader, HTTPBearer\nfrom starlette.status import HTTP_401_UNAUTHORIZED\n\nfrom .config import settings\nfrom .jwt_utils import parse_jwt_token\n\nsecurity = HTTPBearer()\nlogger = logging.getLogger(__name__)\n\n\nasync def auth_middleware(request: Request):\n    if not settings.ENABLE_AUTH:\n        # If authentication is disabled, allow the request to proceed\n        logger.warn(\"Auth disabled\")\n        return {}\n\n    security = HTTPBearer()\n    credentials = await security(request)\n\n    if not credentials:\n        raise HTTPException(status_code=401, detail=\"Authorization header is missing\")\n\n    try:\n        payload = parse_jwt_token(credentials.credentials)\n        request.state.user = payload\n        logger.debug(\"Token decoded successfully\")\n    except ValueError as e:\n        raise HTTPException(status_code=401, detail=str(e))\n    return payload\n\n\nclass APIKeyValidator:\n    \"\"\"\n    Configurable API key validator that supports custom validation functions\n    for FastAPI applications.\n\n    This class provides a flexible way to implement API key authentication with optional\n    custom validation logic. It can be used for simple token matching\n    or more complex validation scenarios like database lookups.\n\n    Examples:\n        Simple token validation:\n        ```python\n        validator = APIKeyValidator(\n            header_name=\"X-API-Key\",\n            expected_token=\"your-secret-token\"\n        )\n\n        @app.get(\"/protected\", dependencies=[Depends(validator.get_dependency())])\n        def protected_endpoint():\n            return {\"message\": \"Access granted\"}\n        ```\n\n        Custom validation with database lookup:\n        ```python\n        async def validate_with_db(api_key: str):\n            api_key_obj = await db.get_api_key(api_key)\n            return api_key_obj if api_key_obj and api_key_obj.is_active else None\n\n        validator = APIKeyValidator(\n            header_name=\"X-API-Key\",\n            validate_fn=validate_with_db\n        )\n        ```\n\n    Args:\n        header_name (str): The name of the header containing the API key\n        expected_token (Optional[str]): The expected API key value for simple token matching\n        validate_fn (Optional[Callable]): Custom validation function that takes an API key\n            string and returns a boolean or object. Can be async.\n        error_status (int): HTTP status code to use for validation errors\n        error_message (str): Error message to return when validation fails\n    \"\"\"\n\n    def __init__(\n        self,\n        header_name: str,\n        expected_token: Optional[str] = None,\n        validate_fn: Optional[Callable[[str], bool]] = None,\n        error_status: int = HTTP_401_UNAUTHORIZED,\n        error_message: str = \"Invalid API key\",\n    ):\n        # Create the APIKeyHeader as a class property\n        self.security_scheme = APIKeyHeader(name=header_name)\n        self.expected_token = expected_token\n        self.custom_validate_fn = validate_fn\n        self.error_status = error_status\n        self.error_message = error_message\n\n    async def default_validator(self, api_key: str) -> bool:\n        return api_key == self.expected_token\n\n    async def __call__(\n        self, request: Request, api_key: str = Security(APIKeyHeader)\n    ) -> Any:\n        if api_key is None:\n            raise HTTPException(status_code=self.error_status, detail=\"Missing API key\")\n\n        # Use custom validation if provided, otherwise use default equality check\n        validator = self.custom_validate_fn or self.default_validator\n        result = (\n            await validator(api_key)\n            if inspect.iscoroutinefunction(validator)\n            else validator(api_key)\n        )\n\n        if not result:\n            raise HTTPException(\n                status_code=self.error_status, detail=self.error_message\n            )\n\n        # Store validation result in request state if it's not just a boolean\n        if result is not True:\n            request.state.api_key = result\n\n        return result\n\n    def get_dependency(self):\n        \"\"\"\n        Returns a callable dependency that FastAPI will recognize as a security scheme\n        \"\"\"\n\n        async def validate_api_key(\n            request: Request, api_key: str = Security(self.security_scheme)\n        ) -> Any:\n            return await self(request, api_key)\n\n        # This helps FastAPI recognize it as a security dependency\n        validate_api_key.__name__ = f\"validate_{self.security_scheme.model.name}\"\n        return validate_api_key\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "autogpt_platform/autogpt_libs/autogpt_libs/auth/models.py", "size": 547, "license": "NOASSERTION", "content_sha": "1bb8fe179b135468e242e8036fd3bf6de30a6ae4", "findings": [{"type": "pii_email", "matches": ["default@example.com"]}], "content": "from dataclasses import dataclass\n\nDEFAULT_USER_ID = \"3e53486c-cf57-477e-ba2a-cb02dc828e1a\"\nDEFAULT_EMAIL = \"default@example.com\"\n\n\n# Using dataclass here to avoid adding dependency on pydantic\n@dataclass(frozen=True)\nclass User:\n    user_id: str\n    email: str\n    phone_number: str\n    role: str\n\n    @classmethod\n    def from_payload(cls, payload):\n        return cls(\n            user_id=payload[\"sub\"],\n            email=payload.get(\"email\", \"\"),\n            phone_number=payload.get(\"phone\", \"\"),\n            role=payload[\"role\"],\n        )\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "autogpt_platform/autogpt_libs/autogpt_libs/feature_flag/client.py", "size": 5327, "license": "NOASSERTION", "content_sha": "9aed891706da2c2f05ae5abd8cb241055a89c40c", "findings": [], "content": "import asyncio\nimport contextlib\nimport logging\nfrom functools import wraps\nfrom typing import Any, Awaitable, Callable, Dict, Optional, TypeVar, Union, cast\n\nimport ldclient\nfrom fastapi import HTTPException\nfrom ldclient import Context, LDClient\nfrom ldclient.config import Config\nfrom typing_extensions import ParamSpec\n\nfrom .config import SETTINGS\n\nlogger = logging.getLogger(__name__)\n\nP = ParamSpec(\"P\")\nT = TypeVar(\"T\")\n\n\ndef get_client() -> LDClient:\n    \"\"\"Get the LaunchDarkly client singleton.\"\"\"\n    return ldclient.get()\n\n\ndef initialize_launchdarkly() -> None:\n    sdk_key = SETTINGS.launch_darkly_sdk_key\n    logger.debug(\n        f\"Initializing LaunchDarkly with SDK key: {'present' if sdk_key else 'missing'}\"\n    )\n\n    if not sdk_key:\n        logger.warning(\"LaunchDarkly SDK key not configured\")\n        return\n\n    config = Config(sdk_key)\n    ldclient.set_config(config)\n\n    if ldclient.get().is_initialized():\n        logger.info(\"LaunchDarkly client initialized successfully\")\n    else:\n        logger.error(\"LaunchDarkly client failed to initialize\")\n\n\ndef shutdown_launchdarkly() -> None:\n    \"\"\"Shutdown the LaunchDarkly client.\"\"\"\n    if ldclient.get().is_initialized():\n        ldclient.get().close()\n        logger.info(\"LaunchDarkly client closed successfully\")\n\n\ndef create_context(\n    user_id: str, additional_attributes: Optional[Dict[str, Any]] = None\n) -> Context:\n    \"\"\"Create LaunchDarkly context with optional additional attributes.\"\"\"\n    builder = Context.builder(str(user_id)).kind(\"user\")\n    if additional_attributes:\n        for key, value in additional_attributes.items():\n            builder.set(key, value)\n    return builder.build()\n\n\ndef feature_flag(\n    flag_key: str,\n    default: bool = False,\n) -> Callable[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]:\n    \"\"\"\n    Decorator for feature flag protected endpoints.\n    \"\"\"\n\n    def decorator(\n        func: Callable[P, Union[T, Awaitable[T]]],\n    ) -> Callable[P, Union[T, Awaitable[T]]]:\n        @wraps(func)\n        async def async_wrapper(*args: P.args, **kwargs: P.kwargs) -> T:\n            try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                result = func(*args, **kwargs)\n                if asyncio.iscoroutine(result):\n                    return await result\n                return cast(T, result)\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise\n\n        @wraps(func)\n        def sync_wrapper(*args: P.args, **kwargs: P.kwargs) -> T:\n            try:\n                user_id = kwargs.get(\"user_id\")\n                if not user_id:\n                    raise ValueError(\"user_id is required\")\n\n                if not get_client().is_initialized():\n                    logger.warning(\n                        f\"LaunchDarkly not initialized, using default={default}\"\n                    )\n                    is_enabled = default\n                else:\n                    context = create_context(str(user_id))\n                    is_enabled = get_client().variation(flag_key, context, default)\n\n                if not is_enabled:\n                    raise HTTPException(status_code=404, detail=\"Feature not available\")\n\n                return cast(T, func(*args, **kwargs))\n            except Exception as e:\n                logger.error(f\"Error evaluating feature flag {flag_key}: {e}\")\n                raise\n\n        return cast(\n            Callable[P, Union[T, Awaitable[T]]],\n            async_wrapper if asyncio.iscoroutinefunction(func) else sync_wrapper,\n        )\n\n    return decorator\n\n\ndef percentage_rollout(\n    flag_key: str,\n    default: bool = False,\n) -> Callable[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]:\n    \"\"\"Decorator for percentage-based rollouts.\"\"\"\n    return feature_flag(flag_key, default)\n\n\ndef beta_feature(\n    flag_key: Optional[str] = None,\n    unauthorized_response: Any = {\"message\": \"Not available in beta\"},\n) -> Callable[\n    [Callable[P, Union[T, Awaitable[T]]]], Callable[P, Union[T, Awaitable[T]]]\n]:\n    \"\"\"Decorator for beta features.\"\"\"\n    actual_key = f\"beta-{flag_key}\" if flag_key else \"beta\"\n    return feature_flag(actual_key, False)\n\n\n@contextlib.contextmanager\ndef mock_flag_variation(flag_key: str, return_value: Any):\n    \"\"\"Context manager for testing feature flags.\"\"\"\n    original_variation = get_client().variation\n    get_client().variation = lambda key, context, default: (\n        return_value if key == flag_key else original_variation(key, context, default)\n    )\n    try:\n        yield\n    finally:\n        get_client().variation = original_variation\n"}
{"repo_url": "https://github.com/Significant-Gravitas/AutoGPT", "path": "autogpt_platform/autogpt_libs/autogpt_libs/feature_flag/client_test.py", "size": 1250, "license": "NOASSERTION", "content_sha": "8fccfb28b5016a52d5e87a0a0d5edbea2f853c1d", "findings": [], "content": "import pytest\nfrom ldclient import LDClient\n\nfrom autogpt_libs.feature_flag.client import feature_flag, mock_flag_variation\n\n\n@pytest.fixture\ndef ld_client(mocker):\n    client = mocker.Mock(spec=LDClient)\n    mocker.patch(\"ldclient.get\", return_value=client)\n    client.is_initialized.return_value = True\n    return client\n\n\n@pytest.mark.asyncio\nasync def test_feature_flag_enabled(ld_client):\n    ld_client.variation.return_value = True\n\n    @feature_flag(\"test-flag\")\n    async def test_function(user_id: str):\n        return \"success\"\n\n    result = test_function(user_id=\"test-user\")\n    assert result == \"success\"\n    ld_client.variation.assert_called_once()\n\n\n@pytest.mark.asyncio\nasync def test_feature_flag_unauthorized_response(ld_client):\n    ld_client.variation.return_value = False\n\n    @feature_flag(\"test-flag\")\n    async def test_function(user_id: str):\n        return \"success\"\n\n    result = test_function(user_id=\"test-user\")\n    assert result == {\"error\": \"disabled\"}\n\n\ndef test_mock_flag_variation(ld_client):\n    with mock_flag_variation(\"test-flag\", True):\n        assert ld_client.variation(\"test-flag\", None, False)\n\n    with mock_flag_variation(\"test-flag\", False):\n        assert ld_client.variation(\"test-flag\", None, False)\n"}
